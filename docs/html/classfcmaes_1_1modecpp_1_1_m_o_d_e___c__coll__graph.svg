<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 12.2.1 (20241206.2353)
 -->
<!-- Title: fcmaes.modecpp.MODE_C Pages: 1 -->
<!--zoomable 604 -->

<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">

<style type="text/css"><![CDATA[
.node, .edge {opacity: 0.7;}
.node.selected, .edge.selected {opacity: 1;}
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>

<defs>
  <circle id="rim" cx="0" cy="0" r="7"/>
  <circle id="rim2" cx="0" cy="0" r="3.5"/>
  <g id="zoomPlus">
    <use xlink:href="#rim" fill="#404040"><set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/></use>
    <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
  </g>
  <g id="zoomMin">
    <use xlink:href="#rim" fill="#404040"><set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/></use>
    <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
  </g>
  <g id="arrowUp" transform="translate(30 24)">
    <use xlink:href="#rim"/>
    <path pointer-events="none" fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
  </g>
  <g id="arrowRight" transform="rotate(90) translate(36 -43)">
    <use xlink:href="#rim"/>
    <path pointer-events="none" fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
  </g>
  <g id="arrowDown" transform="rotate(180) translate(-30 -48)">
    <use xlink:href="#rim"/>
    <path pointer-events="none" fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
  </g>
  <g id="arrowLeft" transform="rotate(270) translate(-36 17)">
    <use xlink:href="#rim"/>
    <path pointer-events="none" fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
  </g>
  <g id="resetDef">
    <use xlink:href="#rim2" fill="#404040"><set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/></use>
  </g>
</defs>
<script type="application/ecmascript">
var viewWidth = 256;
var viewHeight = 604;
var sectionId = 'dynsection-0';
</script>
<script type="application/ecmascript" xlink:href="svg.min.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>fcmaes.modecpp.MODE_C</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title="A class for managing the MODE&#45;C optimization algorithm.">
<polygon fill="#999999" stroke="none" points="248.25,-596 0,-596 0,0 248.25,0 248.25,-596"/>
<text text-anchor="start" x="63.75" y="-582.5" font-family="Helvetica,sans-Serif" font-size="10.00">fcmaes.modecpp.MODE_C</text>
<text text-anchor="start" x="4" y="-566.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-566.5" font-family="Helvetica,sans-Serif" font-size="10.00">ptr</text>
<text text-anchor="start" x="4" y="-550.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-550.5" font-family="Helvetica,sans-Serif" font-size="10.00">popsize</text>
<text text-anchor="start" x="4" y="-534.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-534.5" font-family="Helvetica,sans-Serif" font-size="10.00">dim</text>
<text text-anchor="start" x="4" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00">nobj</text>
<text text-anchor="start" x="4" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">ncon</text>
<text text-anchor="start" x="4" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">bounds</text>
<text text-anchor="start" x="4" y="-470.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-470.5" font-family="Helvetica,sans-Serif" font-size="10.00">__init__(self, int</text>
<text text-anchor="start" x="14" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00"> nobj, int ncon, Bounds</text>
<text text-anchor="start" x="14" y="-446.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bounds, Optional[int]</text>
<text text-anchor="start" x="14" y="-434.5" font-family="Helvetica,sans-Serif" font-size="10.00"> popsize=64, Optional[float]</text>
<text text-anchor="start" x="14" y="-422.5" font-family="Helvetica,sans-Serif" font-size="10.00"> f=0.5, Optional[float] cr</text>
<text text-anchor="start" x="14" y="-410.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0.9, Optional[float] pro_c</text>
<text text-anchor="start" x="14" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0.5, Optional[float] dis_c=15.0,</text>
<text text-anchor="start" x="14" y="-386.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Optional[float] pro_m=0.9, Optional</text>
<text text-anchor="start" x="14" y="-374.5" font-family="Helvetica,sans-Serif" font-size="10.00">[float] dis_m=20.0, Optional[bool]</text>
<text text-anchor="start" x="14" y="-362.5" font-family="Helvetica,sans-Serif" font-size="10.00"> nsga_update=True, Optional[int] pareto</text>
<text text-anchor="start" x="14" y="-350.5" font-family="Helvetica,sans-Serif" font-size="10.00">_update=0, Optional[ArrayLike] ints=None,</text>
<text text-anchor="start" x="14" y="-338.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Optional[float] min_mutate=0.1, Optional</text>
<text text-anchor="start" x="14" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">[float] max_mutate=0.5, Optional[Generator]</text>
<text text-anchor="start" x="14" y="-314.5" font-family="Helvetica,sans-Serif" font-size="10.00"> rg=Generator(PCG64DXSM()), Optional[int] runid=0)</text>
<text text-anchor="start" x="4" y="-298.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-298.5" font-family="Helvetica,sans-Serif" font-size="10.00">__del__(self)</text>
<text text-anchor="start" x="4" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">set_guess(self, guess,</text>
<text text-anchor="start" x="14" y="-270.5" font-family="Helvetica,sans-Serif" font-size="10.00"> mofun, rg=None)</text>
<text text-anchor="start" x="4" y="-254.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-254.5" font-family="Helvetica,sans-Serif" font-size="10.00">np.ndarray ask(self)</text>
<text text-anchor="start" x="4" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">int tell(self, np.ndarray</text>
<text text-anchor="start" x="14" y="-226.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ys, Optional[np.ndarray]</text>
<text text-anchor="start" x="14" y="-214.5" font-family="Helvetica,sans-Serif" font-size="10.00"> xs=None)</text>
<text text-anchor="start" x="4" y="-198.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-198.5" font-family="Helvetica,sans-Serif" font-size="10.00">int tell_switch(self,</text>
<text text-anchor="start" x="14" y="-186.5" font-family="Helvetica,sans-Serif" font-size="10.00"> np.ndarray ys, Optional</text>
<text text-anchor="start" x="14" y="-174.5" font-family="Helvetica,sans-Serif" font-size="10.00">[bool] nsga_update=True,</text>
<text text-anchor="start" x="14" y="-162.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Optional[int] pareto_update=0)</text>
<text text-anchor="start" x="4" y="-146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-146.5" font-family="Helvetica,sans-Serif" font-size="10.00">np.ndarray population</text>
<text text-anchor="start" x="14" y="-134.5" font-family="Helvetica,sans-Serif" font-size="10.00">(self)</text>
<text text-anchor="start" x="4" y="-118.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-118.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tuple[np.ndarray, np.ndarray]</text>
<text text-anchor="start" x="14" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> minimize_ser(self, Callable</text>
<text text-anchor="start" x="14" y="-94.5" font-family="Helvetica,sans-Serif" font-size="10.00">[[ArrayLike], ArrayLike] fun,</text>
<text text-anchor="start" x="14" y="-82.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Optional[int] max_evaluations=100000)</text>
<text text-anchor="start" x="4" y="-66.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="14" y="-66.5" font-family="Helvetica,sans-Serif" font-size="10.00">Tuple[np.ndarray, np.ndarray]</text>
<text text-anchor="start" x="14" y="-54.5" font-family="Helvetica,sans-Serif" font-size="10.00"> minimize_par(self, Callable</text>
<text text-anchor="start" x="14" y="-42.5" font-family="Helvetica,sans-Serif" font-size="10.00">[[ArrayLike], ArrayLike] fun,</text>
<text text-anchor="start" x="14" y="-30.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Optional[int] max_evaluations</text>
<text text-anchor="start" x="14" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">=100000, Optional[int] workers</text>
<text text-anchor="start" x="14" y="-6.5" font-family="Helvetica,sans-Serif" font-size="10.00">=mp.cpu_count())</text>
<polygon fill="#666666" stroke="#666666" points="0,-578 0,-578 248.25,-578 248.25,-578 0,-578"/>
<polygon fill="#666666" stroke="#666666" points="0,-482 0,-482 12,-482 12,-482 0,-482"/>
<polygon fill="#666666" stroke="#666666" points="12,-482 12,-482 248.25,-482 248.25,-482 12,-482"/>
<polygon fill="none" stroke="#666666" points="0,0 0,-596 248.25,-596 248.25,0 0,0"/>
</a>
</g>
</g>
</g>
</svg>

<g id="navigator" transform="translate(0 0)" fill="#404254">
  <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
  <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
  <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
  <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
   <use id="arrowup" xlink:href="#arrowUp" x="0" y="0" onmousedown="handlePan(0,-1)"/>
  <use id="arrowright" xlink:href="#arrowRight" x="0" y="0" onmousedown="handlePan(1,0)"/>
  <use id="arrowdown" xlink:href="#arrowDown" x="0" y="0" onmousedown="handlePan(0,1)"/>
  <use id="arrowleft" xlink:href="#arrowLeft" x="0" y="0" onmousedown="handlePan(-1,0)"/>
</g>
<svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
 <g id="arrow_out" transform="scale(0.3 0.3)">
  <a xlink:href="classfcmaes_1_1modecpp_1_1_m_o_d_e___c__coll__graph_org.svg" target="_base">
   <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
        fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
   <path id="arrow"
     d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
     style="fill:#404040;"/>
  </a>
 </g>
</svg>

<style type='text/css'>
<![CDATA[
[data-mouse-over-selected='false'] { opacity: 0.7; }
[data-mouse-over-selected='true']  { opacity: 1.0; }
]]>
</style>
<script type="application/ecmascript"><![CDATA[
document.addEventListener('DOMContentLoaded', (event) => {
  highlightEdges();
  highlightAdjacentNodes();
});
]]></script>
</svg>

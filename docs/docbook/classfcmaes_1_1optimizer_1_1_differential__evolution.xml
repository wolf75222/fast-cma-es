<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classfcmaes_1_1optimizer_1_1_differential__evolution" xml:lang="en-US">
<title>fcmaes.optimizer.Differential_evolution Class Reference</title>
<indexterm><primary>fcmaes.optimizer.Differential_evolution</primary></indexterm>
<para>

<para>A class for performing optimization using the Differential Evolution algorithm. </para>
 
</para>
Inheritance diagram for fcmaes.optimizer.Differential_evolution:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_differential__evolution__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for fcmaes.optimizer.Differential_evolution:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_differential__evolution__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a92e2de95c88f14f16c601cb783f9e64d">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a6acd0d736b610c904c1ecdec83ee1b42">popsize</link>=31)</para>

<para>Initializes an instance of the DE optimizer. </para>
</listitem>
            <listitem><para>Tuple[np.ndarray, float, int] <link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776">minimize</link> (self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</para>

<para>Minimizes a given objective function using the Differential Evolution algorithm. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[str] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>=&apos;&apos;)</para>

<para>Initializes the class with specific parameters including the maximum number of evaluations and the name. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link> (self, store=None)</para>

<para>Evaluates and returns the maximum number of evaluations based on the provided store or the object&apos;s default value. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link> (self, store=None)</para>

<para>Gets the count of runs from the provided store. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a6acd0d736b610c904c1ecdec83ee1b42">popsize</link> = popsize</para>

<para>The population size used by the Differential Evolution algorithm. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Attributes inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link> = max_evaluations</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link> = name</para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>

<para>A class for performing optimization using the Differential Evolution algorithm. </para>



<para>Differential Evolution is a global optimization algorithm suited for optimizing real-valued, multi-modal functions. This class is built upon the <computeroutput>scipy.optimize</computeroutput> implementation and extends it with additional functionality specific to its purpose. </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02803">2803</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a92e2de95c88f14f16c601cb783f9e64d"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>fcmaes.optimizer.Differential_evolution</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Differential_evolution</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Differential_evolution.__init__ ( self, Optional[int]  max_evaluations = <computeroutput>50000</computeroutput>
, Optional[int]  popsize = <computeroutput>31</computeroutput>
)</computeroutput></para><para>

<para>Initializes an instance of the DE optimizer. </para>
</para>

<para><literallayout><computeroutput>   The optimizer class is responsible for configuring and managing settings
   specific to the differential evolution (DE) algorithm. Upon initialization,
   it sets up the maximum evaluations allowed and the population size for the
   DE routine.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>max_evaluations</entry><entry>
<para>Optional; The maximum number of evaluations allotted for the DE optimization algorithm. Defaults to 50000 if not provided. </para>
</entry>
                            </row>
                            <row>
<entry>popsize</entry><entry>
<para>Optional; The population size used by the DE algorithm. Defaults to 31 if not provided. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02822">2822</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776"/><section>
    <title>minimize()</title>
<indexterm><primary>minimize</primary><secondary>fcmaes.optimizer.Differential_evolution</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Differential_evolution</primary><secondary>minimize</secondary></indexterm>
<para><computeroutput> Tuple[np.ndarray, float, int] fcmaes.optimizer.Differential_evolution.minimize ( self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[float]  sdevs = <computeroutput>None</computeroutput>
,  rg = <computeroutput>Generator(PCG64DXSM())</computeroutput>
,  store = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Minimizes a given objective function using the Differential Evolution algorithm. </para>
</para>

<para><literallayout><computeroutput>   The method optimizes a given objective function within specified bounds, leveraging
   stochastic parallel computation to approximate a global minimum. It uses a population-based
   approach evolved through random sampling.


       fun (Callable[[ArrayLike], float]): Objective function to minimize. It takes an array-like
           input and returns a float output representing the objective to minimize.
</computeroutput></literallayout> 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>bounds</entry><entry>
<para>Constraints for the optimization. The lower (<computeroutput>bounds.lb</computeroutput>) and upper (<computeroutput>bounds.ub</computeroutput>) bounds define the search space for the optimization algorithm. </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>Initial guess for the starting position in the parameter space. Defaults to None. </para>
</entry>
                            </row>
                            <row>
<entry>rg</entry><entry>
<para>Random number generator instance. Determines random seed for reproducibility. Default is <computeroutput>Generator(PCG64DXSM())</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>store</entry><entry>
<para>Optional storage object to record evaluation history or intermediate results.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Tuple[np.ndarray, float, int]: A tuple containing:<itemizedlist>
<listitem>
<para>The best solution (ndarray) found by the algorithm.</para>
</listitem><listitem>
<para>The value of the objective function at the found solution (float).</para>
</listitem><listitem>
<para>The number of function evaluations performed (int). </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02852">2852</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_differential__evolution_a8096359879e83b09f09bea6b73d59776_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a6acd0d736b610c904c1ecdec83ee1b42"/><section>
    <title>popsize</title>
<indexterm><primary>popsize</primary><secondary>fcmaes.optimizer.Differential_evolution</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Differential_evolution</primary><secondary>popsize</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Differential_evolution.popsize = popsize</computeroutput></para><para>

<para>The population size used by the Differential Evolution algorithm. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02826">2826</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
fcmaes/<link linkend="_optimizer_8py">optimizer.py</link></section>
</section>

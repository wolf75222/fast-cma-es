<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classfcmaes_1_1optimizer_1_1_da__cpp" xml:lang="en-US">
<title>fcmaes.optimizer.Da_cpp Class Reference</title>
<indexterm><primary>fcmaes.optimizer.Da_cpp</primary></indexterm>
<para>

<para>Represents the <link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp">Da_cpp</link> optimization algorithm, a variant of the <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link> class. </para>
 
</para>
Inheritance diagram for fcmaes.optimizer.Da_cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_da__cpp__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for fcmaes.optimizer.Da_cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_da__cpp__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1a6041f0fa9c49b4908d638bc2c502b7a0">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[float] <link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1a1ee5e02f5bdc6f640595c081eb01c230">stop_fitness</link>=-np.inf, Optional[bool] <link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1acb3f2d082778319925251a69518fa25a">use_local_search</link>=True, Optional[ArrayLike] <link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1adb6bcafec8f433b6d7971da3c9bad807">guess</link>=None)</para>

<para>Initializes the optimizer with given parameters and defaults. </para>
</listitem>
            <listitem><para>Tuple[np.ndarray, float, int] <link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad">minimize</link> (self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] <link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1adb6bcafec8f433b6d7971da3c9bad807">guess</link>=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</para>

<para>Minimizes an objective function within given bounds using a stochastic optimization method. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[str] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>=&apos;&apos;)</para>

<para>Initializes the class with specific parameters including the maximum number of evaluations and the name. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link> (self, store=None)</para>

<para>Evaluates and returns the maximum number of evaluations based on the provided store or the object&apos;s default value. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link> (self, store=None)</para>

<para>Gets the count of runs from the provided store. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1a1ee5e02f5bdc6f640595c081eb01c230">stop_fitness</link> = stop_fitness</para>

<para>Defines the stopping fitness value. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1acb3f2d082778319925251a69518fa25a">use_local_search</link> = use_local_search</para>

<para>Indicates whether local search should be utilized. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1adb6bcafec8f433b6d7971da3c9bad807">guess</link> = guess</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Attributes inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link> = max_evaluations</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link> = name</para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>

<para>Represents the <link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp">Da_cpp</link> optimization algorithm, a variant of the <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link> class. </para>



<para>This class provides an interface to a differential evolution-based optimization algorithm implemented in the <computeroutput>dacpp</computeroutput> library. It allows customization of certain parameters such as the maximum number of evaluations, stopping fitness criteria, and whether local search should be applied. The optimizer can be used to find the minimum of a given objective function within specified bounds.</para>

<para><literallayout><computeroutput>       during the optimization process to refine results.
   guess (ArrayLike or None): Provides an optional initial guess for the
       optimization. If unspecified, no initial guess is used.
</computeroutput></literallayout> </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02521">2521</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_da__cpp_1a6041f0fa9c49b4908d638bc2c502b7a0"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>fcmaes.optimizer.Da_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Da_cpp</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Da_cpp.__init__ ( self, Optional[int]  max_evaluations = <computeroutput>50000</computeroutput>
, Optional[float]  stop_fitness = <computeroutput>-np.inf</computeroutput>
, Optional[bool]  use_local_search = <computeroutput>True</computeroutput>
, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Initializes the optimizer with given parameters and defaults. </para>
</para>

<para><literallayout><computeroutput>   This constructor sets up the optimizer with options for a maximum number of
   evaluations, a stopping fitness threshold, a toggle for local search, and
   an optional initial guess. These parameters guide the optimizer&apos;s behavior
   during its execution.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>max_evaluations</entry><entry>
<para>Maximum number of evaluations permissible for the optimization process. Defaults to 50000. </para>
</entry>
                            </row>
                            <row>
<entry>stop_fitness</entry><entry>
<para><link linkend="_class_fitness">Fitness</link> value at which the optimization process should stop. Defaults to negative infinity. </para>
</entry>
                            </row>
                            <row>
<entry>use_local_search</entry><entry>
<para>Boolean indicating whether to enable local search. Defaults to True. </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>Initial guess or starting point for the optimization process. Can be provided as an array-like structure. Defaults to None. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02551">2551</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad"/><section>
    <title>minimize()</title>
<indexterm><primary>minimize</primary><secondary>fcmaes.optimizer.Da_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Da_cpp</primary><secondary>minimize</secondary></indexterm>
<para><computeroutput> Tuple[np.ndarray, float, int] fcmaes.optimizer.Da_cpp.minimize ( self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[float]  sdevs = <computeroutput>None</computeroutput>
,  rg = <computeroutput>Generator(PCG64DXSM())</computeroutput>
,  store = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Minimizes an objective function within given bounds using a stochastic optimization method. </para>
</para>

<para>This function attempts to find the minimum of the provided objective function by exploring the parameter space defined by the given bounds. An optional initial guess can be provided to start the optimization at a specific point. The function uses a random number generator for stochasticity during optimization. The result includes the optimal point, the optimal function value, and the number of function evaluations.</para>

<para><literallayout><computeroutput>       fun (Callable[[ArrayLike], float]): The objective function to minimize.
           It must take an array-like input and return a float.
</computeroutput></literallayout> 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>bounds</entry><entry>
<para>The bounds for the variables as a Bounds object. Defines the search space for the optimization. </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>An optional initial guess for the optimization. If not provided, a default guess specified by the class will be used. </para>
</entry>
                            </row>
                            <row>
<entry>sdevs</entry><entry>
<para>Standard deviation for some internal process. Ignored in the current implementation. </para>
</entry>
                            </row>
                            <row>
<entry>rg</entry><entry>
<para>A random number generator instance for stochasticity during the optimization. </para>
</entry>
                            </row>
                            <row>
<entry>store</entry><entry>
<para>Storage or logging object used to keep track of evaluation counts or other optimization parameters.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Tuple[np.ndarray, float, int]: A tuple containing:<itemizedlist>
<listitem>
<para>The best solution found (as a numpy.ndarray).</para>
</listitem><listitem>
<para>The objective function value at the best solution.</para>
</listitem><listitem>
<para>The total number of function evaluations performed. </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02590">2590</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_da__cpp_ad66e1bd6c6235662127232d705d890ad_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_da__cpp_1adb6bcafec8f433b6d7971da3c9bad807"/><section>
    <title>guess</title>
<indexterm><primary>guess</primary><secondary>fcmaes.optimizer.Da_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Da_cpp</primary><secondary>guess</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Da_cpp.guess = guess</computeroutput></para><para>
Definition at line <link linkend="_optimizer_8py_source_1l02559">2559</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_da__cpp_1a1ee5e02f5bdc6f640595c081eb01c230"/><section>
    <title>stop_fitness</title>
<indexterm><primary>stop_fitness</primary><secondary>fcmaes.optimizer.Da_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Da_cpp</primary><secondary>stop_fitness</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Da_cpp.stop_fitness = stop_fitness</computeroutput></para><para>

<para>Defines the stopping fitness value. </para>
</para>

<para>If the objective </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02557">2557</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_da__cpp_1acb3f2d082778319925251a69518fa25a"/><section>
    <title>use_local_search</title>
<indexterm><primary>use_local_search</primary><secondary>fcmaes.optimizer.Da_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Da_cpp</primary><secondary>use_local_search</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Da_cpp.use_local_search = use_local_search</computeroutput></para><para>

<para>Indicates whether local search should be utilized. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02558">2558</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
fcmaes/<link linkend="_optimizer_8py">optimizer.py</link></section>
</section>

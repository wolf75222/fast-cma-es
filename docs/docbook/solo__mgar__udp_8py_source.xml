<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_solo__mgar__udp_8py_source" xml:lang="en-US">
<title>solo_mgar_udp.py</title>
<indexterm><primary>examples/solo_mgar_udp.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_solo__mgar__udp_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1solo__mgar__udp">00001</link> <emphasis role="comment">#&#32;This&#32;code&#32;is&#32;derived&#32;from&#32;https://github.com/esa/pykep/pull/127&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00002"/>00002 <emphasis role="comment">#&#32;originally&#32;developed&#32;by&#32;Moritz&#32;v.&#32;Looz&#32;@mlooz&#32;.&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;It&#32;was&#32;modified&#32;following&#32;suggestions&#32;from&#32;Waldemar&#32;Martens&#32;@MartensWaldemar_gitlab</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00004"/>00004 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00005"/>00005 <emphasis role="comment">#&#32;Solar&#32;orbiter&#32;is&#32;quite&#32;a&#32;challenge&#32;for&#32;state&#32;of&#32;the&#32;art&#32;optimizers,&#32;but</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;good&#32;solutions&#32;fulfilling&#32;the&#32;requirements&#32;can&#32;be&#32;found&#32;and&#32;an&#32;example&#32;is</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00007"/>00007 <emphasis role="comment">#&#32;shown&#32;in&#32;check_good_solution().&#32;&#32;At&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00008"/>00008 <emphasis role="comment">#&#32;https://gist.github.com/dietmarwo/86f24e1b9a702e18615b767e226e883f&#32;you&#32;may&#32;find&#32;good&#32;solutions</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00009"/>00009 <emphasis role="comment">#&#32;for&#32;this&#32;and&#32;two&#32;other&#32;solo&#32;models.</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00010"/>00010 <emphasis role="comment">#&#32;See&#32;https://www.esa.int/Science_Exploration/Space_Science/Solar_Orbiter</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00011"/>00011 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00012"/>00012 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.2</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00013"/>00013 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00014"/>00014 <emphasis role="keyword">from</emphasis>&#32;math&#32;<emphasis role="keyword">import</emphasis>&#32;pi,&#32;sqrt
<anchor xml:id="_solo__mgar__udp_8py_source_1l00015"/>00015 <emphasis role="keyword">import</emphasis>&#32;math
<anchor xml:id="_solo__mgar__udp_8py_source_1l00016"/>00016 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;Any,&#32;List,&#32;Tuple
<anchor xml:id="_solo__mgar__udp_8py_source_1l00017"/>00017 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00018"/>00018 <emphasis role="keyword">from</emphasis>&#32;pykep&#32;<emphasis role="keyword">import</emphasis>&#32;AU,&#32;DAY2SEC,&#32;SEC2DAY,&#32;DEG2RAD,&#32;RAD2DEG,&#32;epoch,&#32;ic2par
<anchor xml:id="_solo__mgar__udp_8py_source_1l00019"/>00019 <emphasis role="keyword">from</emphasis>&#32;pykep.core&#32;<emphasis role="keyword">import</emphasis>&#32;fb_vel,&#32;lambert_problem
<anchor xml:id="_solo__mgar__udp_8py_source_1l00020"/>00020 <emphasis role="keyword">from</emphasis>&#32;pykep.planet&#32;<emphasis role="keyword">import</emphasis>&#32;jpl_lp
<anchor xml:id="_solo__mgar__udp_8py_source_1l00021"/>00021 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00022"/>00022 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_solo__mgar__udp_8py_source_1l00023"/>00023 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp
<anchor xml:id="_solo__mgar__udp_8py_source_1l00024"/>00024 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_solo__mgar__udp_8py_source_1l00025"/>00025 <emphasis role="keyword">from</emphasis>&#32;kepler.resonance&#32;<emphasis role="keyword">import</emphasis>&#32;resonance
<anchor xml:id="_solo__mgar__udp_8py_source_1l00026"/>00026 <emphasis role="keyword">from</emphasis>&#32;kepler.rvt&#32;<emphasis role="keyword">import</emphasis>&#32;rvt_planet,&#32;rotate_vector,&#32;rvt
<anchor xml:id="_solo__mgar__udp_8py_source_1l00027"/>00027 <emphasis role="keyword">from</emphasis>&#32;kepler.lambert&#32;<emphasis role="keyword">import</emphasis>&#32;lambert_problem_multirev_ga
<anchor xml:id="_solo__mgar__udp_8py_source_1l00028"/>00028 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00029"/><link linkend="_namespaceexamples_1_1solo__mgar__udp_1a2289d39606ce5637b029abca9fb50734">00029</link> bval&#32;=&#32;mp.RawValue(ct.c_double,&#32;1E99)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00030"/>00030 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00031"/>00031 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00032"/>00032 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_solo__mgar__udp_8py_source_1l00033"/>00033 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00034"/>00034 logger.remove()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00035"/><link linkend="_namespaceexamples_1_1solo__mgar__udp_1a66e7f962fcf0cfc9727f1d44c236423a">00035</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00036"/>00036 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00037"/>00037 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00038"/>00038 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp">solo_mgar_udp</link>:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00040"/>00040 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Write&#32;Me</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00041"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp">00041</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00042"/>00042 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a970e8ef840c1255127cf06a8c12042e4">__init__</link>(
<anchor xml:id="_solo__mgar__udp_8py_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t0=[7000,&#32;8000],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof=[[50,&#32;420],&#32;[50,&#32;400],&#32;[50,&#32;400]],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_revs:&#32;int=2,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resonances=
<anchor xml:id="_solo__mgar__udp_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[[1,&#32;1],&#32;[5,&#32;4],&#32;[4,&#32;3]],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[1,&#32;1],&#32;[5,&#32;4],&#32;[4,&#32;3]],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[1,&#32;1],&#32;[5,&#32;4],&#32;[4,&#32;3]],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[4,&#32;3],&#32;[3,&#32;2],&#32;[5,&#32;3]],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00053"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a970e8ef840c1255127cf06a8c12042e4">00053</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[4,&#32;3],&#32;[3,&#32;2],&#32;[5,&#32;3]],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[4,&#32;3],&#32;[3,&#32;2],&#32;[5,&#32;3]]],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;safe_distance=350000,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_mission_time=11.0&#32;*&#32;365.25,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_dv0=5600,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00060"/>00060 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00061"/>00061 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;t0&#32;(``list``&#32;of&#32;``float``):&#32;start&#32;time&#32;bounds.&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00062"/>00062 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;tof&#32;(``list``&#32;of&#32;``list``&#32;of&#32;``float``):&#32;time&#32;of&#32;flight&#32;bounds.&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00063"/>00063 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;max_revs&#32;(``int``):&#32;maximal&#32;number&#32;of&#32;revolutions&#32;for&#32;Lambert&#32;transfer.</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00064"/>00064 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;resonances&#32;(``list``&#32;of&#32;``list``&#32;of&#32;``int``):&#32;resonance&#32;options.&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00065"/>00065 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;safe_distance:&#32;(``float``):&#32;safe&#32;distance&#32;from&#32;planet&#32;at&#32;GA&#32;maneuver&#32;in&#32;m.</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00066"/>00066 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;max_mission_time:&#32;(``float``):&#32;max&#32;mission&#32;time&#32;in&#32;days.</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00067"/>00067 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;max_dv0:&#32;(``float``):&#32;max&#32;delta&#32;velocity&#32;at&#32;start.</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00068"/>00068 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00070"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5366d6f7298cb1b8b969ea1c012b1813">00070</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5366d6f7298cb1b8b969ea1c012b1813">_safe_distance</link>&#32;=&#32;safe_distance
<anchor xml:id="_solo__mgar__udp_8py_source_1l00071"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a126acd0036b041ca8b40c9ab4e9acdae">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a126acd0036b041ca8b40c9ab4e9acdae">_max_mission_time</link>&#32;=&#32;max_mission_time
<anchor xml:id="_solo__mgar__udp_8py_source_1l00072"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a14ddda6b384b169d125e2312b7cafb7f">00072</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a14ddda6b384b169d125e2312b7cafb7f">_max_dv0</link>&#32;=&#32;max_dv0
<anchor xml:id="_solo__mgar__udp_8py_source_1l00073"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a7b51ca13892900c3b1d440782f99a827">00073</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a7b51ca13892900c3b1d440782f99a827">_min_beta</link>&#32;=&#32;-math.pi
<anchor xml:id="_solo__mgar__udp_8py_source_1l00074"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a84e14b898b6ebf864466fa2a119fec4a">00074</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a84e14b898b6ebf864466fa2a119fec4a">_max_beta</link>&#32;=&#32;math.pi
<anchor xml:id="_solo__mgar__udp_8py_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00076"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5b5b30bef0065c5ecde34f9688129718">00076</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5b5b30bef0065c5ecde34f9688129718">_earth</link>&#32;=&#32;jpl_lp(<emphasis role="stringliteral">&quot;earth&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00077"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a6ca02859ab7d46c620afcc688649d69c">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a6ca02859ab7d46c620afcc688649d69c">_venus</link>&#32;=&#32;jpl_lp(<emphasis role="stringliteral">&quot;venus&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00078"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">00078</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>&#32;=&#32;[self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5b5b30bef0065c5ecde34f9688129718">_earth</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a6ca02859ab7d46c620afcc688649d69c">_venus</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a6ca02859ab7d46c620afcc688649d69c">_venus</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5b5b30bef0065c5ecde34f9688129718">_earth</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a6ca02859ab7d46c620afcc688649d69c">_venus</link>,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a6ca02859ab7d46c620afcc688649d69c">_venus</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a6ca02859ab7d46c620afcc688649d69c">_venus</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a6ca02859ab7d46c620afcc688649d69c">_venus</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a6ca02859ab7d46c620afcc688649d69c">_venus</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a6ca02859ab7d46c620afcc688649d69c">_venus</link>]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">assert</emphasis>&#32;len(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>)&#32;-&#32;4&#32;==&#32;len(resonances)&#32;<emphasis role="comment">#&#32;one&#32;resonance&#32;option&#32;selection&#32;for&#32;each&#32;VV&#32;sequence</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00082"/>00082 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00083"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1abd0c1286806e069fc526442c89a2bdd5">00083</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1abd0c1286806e069fc526442c89a2bdd5">_resonances</link>&#32;=&#32;resonances
<anchor xml:id="_solo__mgar__udp_8py_source_1l00084"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1aa0d5da42a8e0ff89ddceb5e100864479">00084</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1aa0d5da42a8e0ff89ddceb5e100864479">_t0</link>&#32;=&#32;t0
<anchor xml:id="_solo__mgar__udp_8py_source_1l00085"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a688be7fb38d713f57d1cb11adaef9256">00085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a688be7fb38d713f57d1cb11adaef9256">_tof</link>&#32;=&#32;tof
<anchor xml:id="_solo__mgar__udp_8py_source_1l00086"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a895f172dca1a6c490a943f871bc12ca2">00086</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a895f172dca1a6c490a943f871bc12ca2">_max_revs</link>&#32;=&#32;max_revs&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00087"/>00087 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00088"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1ab8cf026aa6aa142340dd7e493d69bae5">00088</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1ab8cf026aa6aa142340dd7e493d69bae5">_n_legs</link>&#32;=&#32;len(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>)&#32;-&#32;1
<anchor xml:id="_solo__mgar__udp_8py_source_1l00089"/>00089 &#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;initialize&#32;data&#32;to&#32;compute&#32;heliolatitude</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t_plane_crossing&#32;=&#32;epoch(7645)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation_axis&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[0].<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1afaf91bbef39f261bba9225fd537e1c64">eph</link>(t_plane_crossing)[0]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00093"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">00093</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">_rotation_axis</link>&#32;=&#32;rotation_axis&#32;/&#32;np.linalg.norm(rotation_axis)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00094"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">00094</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">_theta</link>&#32;=&#32;-7.25&#32;*&#32;DEG2RAD&#32;&#32;<emphasis role="comment">#&#32;fixed&#32;direction&#32;of&#32;the&#32;rotation</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00096"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a92828aaaf12b6addeb33a6249b7539b8">00096</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a92828aaaf12b6addeb33a6249b7539b8">_compute_dvs</link>(self,&#32;x:&#32;List[float],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lps=<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resos=<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00099"/>00099 &#32;&#32;&#32;&#32;)&#32;-&gt;&#32;Tuple[
<anchor xml:id="_solo__mgar__udp_8py_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List[Any],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List[Any],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List[Any],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List[float],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List[float],
<anchor xml:id="_solo__mgar__udp_8py_source_1l00105"/>00105 &#32;&#32;&#32;&#32;]:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t0&#32;=&#32;x[0]&#32;*&#32;DAY2SEC&#32;&#32;<emphasis role="comment">#&#32;only&#32;direct&#32;encoding</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof01&#32;=&#32;x[1]&#32;*&#32;DAY2SEC
<anchor xml:id="_solo__mgar__udp_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof23&#32;=&#32;x[2]&#32;*&#32;DAY2SEC
<anchor xml:id="_solo__mgar__udp_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof34&#32;=&#32;x[3]&#32;*&#32;DAY2SEC
<anchor xml:id="_solo__mgar__udp_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;betas&#32;=&#32;x[4:]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_outs&#32;=&#32;[]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_ins&#32;=&#32;[<emphasis role="keywordtype">None</emphasis>]&#32;&#32;<emphasis role="comment">#&#32;no&#32;rvt_in&#32;at&#32;first&#32;planet</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_pls&#32;=&#32;[]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvs&#32;=&#32;[]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;used_resos&#32;=&#32;[]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reso_dts&#32;=&#32;[]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_pls.append(rvt_planet(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[0],&#32;t0))
<anchor xml:id="_solo__mgar__udp_8py_source_1l00121"/>00121 &#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1solo__mgar__udp_1a6d928d9b61388ba3bc08749cb303c94e">_dv_mga</link>(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[0],&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[1],&#32;tof01,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a895f172dca1a6c490a943f871bc12ca2">_max_revs</link>,&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;dvs,&#32;lps)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1solo__mgar__udp_1a2f01caf14c62d02e55dfc2245172590b">compute_resonance</link>(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[1],&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1abd0c1286806e069fc526442c89a2bdd5">_resonances</link>[0],&#32;betas[0],&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5366d6f7298cb1b8b969ea1c012b1813">_safe_distance</link>,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;used_resos,&#32;reso_dts,&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;dvs,&#32;resos)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1solo__mgar__udp_1a6d928d9b61388ba3bc08749cb303c94e">_dv_mga</link>(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[2],&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[3],&#32;tof23,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a895f172dca1a6c490a943f871bc12ca2">_max_revs</link>,&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;dvs,&#32;lps)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00128"/>00128 &#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1solo__mgar__udp_1a6d928d9b61388ba3bc08749cb303c94e">_dv_mga</link>(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[3],&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[4],&#32;tof34,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a895f172dca1a6c490a943f871bc12ca2">_max_revs</link>,&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;dvs,&#32;lps)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00130"/>00130 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(1,&#32;6):&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1solo__mgar__udp_1a2f01caf14c62d02e55dfc2245172590b">compute_resonance</link>(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[i&#32;+&#32;3],&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1abd0c1286806e069fc526442c89a2bdd5">_resonances</link>[i],&#32;betas[i],&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5366d6f7298cb1b8b969ea1c012b1813">_safe_distance</link>,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;used_resos,&#32;reso_dts,&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;dvs,&#32;resos)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;len(rvt_ins)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">assert</emphasis>&#32;len(rvt_outs)&#32;==&#32;n&#32;-&#32;1
<anchor xml:id="_solo__mgar__udp_8py_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">assert</emphasis>&#32;len(rvt_pls)&#32;==&#32;n&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">assert</emphasis>&#32;len(rvt_ins)&#32;==&#32;n&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">assert</emphasis>&#32;len(dvs)&#32;==&#32;n&#32;-&#32;1
<anchor xml:id="_solo__mgar__udp_8py_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;reso_dts,&#32;dvs
<anchor xml:id="_solo__mgar__udp_8py_source_1l00141"/>00141 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00142"/>00142 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Objective&#32;function</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00143"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1aa38ea487a578acabc4f2f9e78458e406">00143</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1aa38ea487a578acabc4f2f9e78458e406">fitness</link>(self,&#32;x):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(x)&#32;!=&#32;len(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2bee6165ff1ec7ab62b5abcaf671e68e">get_bounds</link>()[0]):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;ValueError(
<anchor xml:id="_solo__mgar__udp_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Expected&#32;&quot;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+str(len(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2bee6165ff1ec7ab62b5abcaf671e68e">get_bounds</link>()[0]))
<anchor xml:id="_solo__mgar__udp_8py_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;parameters&#32;but&#32;got&#32;&quot;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+str(len(x))
<anchor xml:id="_solo__mgar__udp_8py_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00151"/>00151 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_outs,&#32;rvt_ins,&#32;_,&#32;reso_dts,&#32;dvs&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a92828aaaf12b6addeb33a6249b7539b8">_compute_dvs</link>(x)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;compute&#32;final&#32;flyby&#32;and&#32;resulting&#32;trajectory</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_out&#32;=&#32;rvt_outs[-1].rotate(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">_rotation_axis</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">_theta</link>)&#32;&#32;<emphasis role="comment">#&#32;rotate</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;_,&#32;incl,&#32;_,&#32;_,&#32;_&#32;=&#32;rvt_out.kepler()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;orbit&#32;should&#32;be&#32;as&#32;polar&#32;as&#32;possible,&#32;but&#32;we&#32;do&#32;not&#32;care&#32;about&#32;prograde/retrograde</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;corrected_inclination&#32;=&#32;abs(abs(incl)&#32;%&#32;pi&#32;-&#32;pi&#32;/&#32;2)&#32;*&#32;RAD2DEG
<anchor xml:id="_solo__mgar__udp_8py_source_1l00158"/>00158 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;check&#32;perihelion&#32;and&#32;aphelion&#32;bounds&#32;during&#32;the&#32;flight</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;emp_perhelion&#32;=&#32;2&#32;*&#32;AU
<anchor xml:id="_solo__mgar__udp_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_sun_distance&#32;=&#32;2&#32;*&#32;AU
<anchor xml:id="_solo__mgar__udp_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_sun_distance&#32;=&#32;0
<anchor xml:id="_solo__mgar__udp_8py_source_1l00163"/>00163 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(rvt_outs)):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orb&#32;=&#32;rvt_outs[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof&#32;=&#32;orb.tof(rvt_ins[i&#32;+&#32;1])
<anchor xml:id="_solo__mgar__udp_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transfer_a,&#32;transfer_e,&#32;_,&#32;_,&#32;_,&#32;_&#32;=&#32;orb.kepler()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transfer_period&#32;=&#32;2&#32;*&#32;pi&#32;*&#32;sqrt(transfer_a&#32;**&#32;3&#32;/&#32;orb.mu)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perhelion&#32;=&#32;transfer_a&#32;*&#32;(1&#32;-&#32;transfer_e)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;update&#32;min&#32;and&#32;max&#32;sun&#32;distance</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;&gt;=&#32;len(rvt_outs)&#32;-&#32;3:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;emp_perhelion&#32;=&#32;min(emp_perhelion,&#32;perhelion)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_sun_distance&#32;=&#32;min(min_sun_distance,&#32;perhelion)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;tof&#32;&gt;&#32;transfer_period:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_sun_distance&#32;=&#32;max(max_sun_distance,&#32;transfer_a&#32;*&#32;(1&#32;+&#32;transfer_e))
<anchor xml:id="_solo__mgar__udp_8py_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;overall&#32;time&#32;limit</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time_all&#32;=&#32;SEC2DAY&#32;*&#32;(rvt_ins[-1].t&#32;-&#32;rvt_outs[0].t)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time_val&#32;=&#32;time_all
<anchor xml:id="_solo__mgar__udp_8py_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time_limit&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a126acd0036b041ca8b40c9ab4e9acdae">_max_mission_time</link>&#32;&#32;<emphasis role="comment">#&#32;11&#32;years</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;time_val&#32;&gt;&#32;time_limit:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time_val&#32;+=&#32;10&#32;*&#32;(time_val&#32;-&#32;time_limit)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance_val&#32;=&#32;min_sun_distance&#32;/&#32;AU
<anchor xml:id="_solo__mgar__udp_8py_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;avoid&#32;bonus&#32;for&#32;perihelion&#32;&lt;&#32;0.28</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;distance_val&#32;&lt;&#32;0.28:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance_val&#32;+=&#32;10&#32;*&#32;(0.28&#32;-&#32;distance_val);
<anchor xml:id="_solo__mgar__udp_8py_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;wrong&#32;reso&#32;timing&#32;in&#32;seconds</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reso_penalty&#32;=&#32;np.sum(reso_dts)&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;wrong&#32;minimal&#32;/&#32;maximal&#32;distance</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance_penalty&#32;=&#32;max(0,&#32;0.28&#32;-&#32;min_sun_distance&#32;/&#32;AU)&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance_penalty&#32;+=&#32;max(0,&#32;max_sun_distance&#32;/&#32;AU&#32;-&#32;1.2)&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;allow&#32;start&#32;dv&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvs[0]&#32;=&#32;max(0,&#32;dvs[0]&#32;-&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a14ddda6b384b169d125e2312b7cafb7f">_max_dv0</link>)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dv_val&#32;=&#32;np.sum(dvs)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(100&#32;*&#32;dv_val&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;100&#32;*&#32;corrected_inclination&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;5000&#32;*&#32;(max(0,&#32;distance_val&#32;-&#32;0.28))&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;5000&#32;*&#32;(max(0,&#32;emp_perhelion&#32;/&#32;AU&#32;-&#32;0.28))&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.5&#32;*&#32;time_val&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reso_penalty&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;50000&#32;*&#32;distance_penalty
<anchor xml:id="_solo__mgar__udp_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00208"/>00208 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;value&#32;&lt;&#32;bval.value:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bval.value&#32;=&#32;value
<anchor xml:id="_solo__mgar__udp_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(str(value)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(incl&#32;*&#32;RAD2DEG)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(time_all&#32;/&#32;365.25)&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(dv_val)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(min_sun_distance&#32;/&#32;AU)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(max_sun_distance&#32;/&#32;AU)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(reso_penalty)&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(distance_penalty)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00220"/>00220 &#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;([value])
<anchor xml:id="_solo__mgar__udp_8py_source_1l00222"/>00222 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00223"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1ae1850a6f7c51a4fca0d647d5d3638542">00223</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1ae1850a6f7c51a4fca0d647d5d3638542">mo_fitness</link>(self,&#32;x):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_outs,&#32;rvt_ins,&#32;_,&#32;reso_dts,&#32;dvs&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a92828aaaf12b6addeb33a6249b7539b8">_compute_dvs</link>(x)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_out&#32;=&#32;rvt_outs[-1].rotate(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">_rotation_axis</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">_theta</link>)&#32;&#32;<emphasis role="comment">#&#32;rotate</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;_,&#32;incl,&#32;_,&#32;_,&#32;_&#32;=&#32;rvt_out.kepler()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;corrected_inclination&#32;=&#32;abs(abs(incl)&#32;%&#32;pi&#32;-&#32;pi&#32;/&#32;2)&#32;*&#32;RAD2DEG
<anchor xml:id="_solo__mgar__udp_8py_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;emp_perhelion&#32;=&#32;2&#32;*&#32;AU
<anchor xml:id="_solo__mgar__udp_8py_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_sun_distance&#32;=&#32;2&#32;*&#32;AU
<anchor xml:id="_solo__mgar__udp_8py_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_sun_distance&#32;=&#32;0
<anchor xml:id="_solo__mgar__udp_8py_source_1l00231"/>00231 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(rvt_outs)):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orb&#32;=&#32;rvt_outs[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof&#32;=&#32;orb.tof(rvt_ins[i&#32;+&#32;1])
<anchor xml:id="_solo__mgar__udp_8py_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transfer_a,&#32;transfer_e,&#32;_,&#32;_,&#32;_,&#32;_&#32;=&#32;orb.kepler()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transfer_period&#32;=&#32;2&#32;*&#32;pi&#32;*&#32;sqrt(transfer_a&#32;**&#32;3&#32;/&#32;orb.mu)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;perhelion&#32;=&#32;transfer_a&#32;*&#32;(1&#32;-&#32;transfer_e)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;&gt;=&#32;len(rvt_outs)&#32;-&#32;3:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;emp_perhelion&#32;=&#32;min(emp_perhelion,&#32;perhelion)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_sun_distance&#32;=&#32;min(min_sun_distance,&#32;perhelion)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;tof&#32;&gt;&#32;transfer_period:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_sun_distance&#32;=&#32;max(max_sun_distance,&#32;transfer_a&#32;*&#32;(1&#32;+&#32;transfer_e))
<anchor xml:id="_solo__mgar__udp_8py_source_1l00243"/>00243 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time_all&#32;=&#32;SEC2DAY&#32;*&#32;(rvt_ins[-1].t&#32;-&#32;rvt_outs[0].t)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time_val&#32;=&#32;time_all
<anchor xml:id="_solo__mgar__udp_8py_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time_limit&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a126acd0036b041ca8b40c9ab4e9acdae">_max_mission_time</link>&#32;&#32;<emphasis role="comment">#&#32;11&#32;years</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;time_val&#32;&gt;&#32;time_limit:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time_val&#32;+=&#32;10&#32;*&#32;(time_val&#32;-&#32;time_limit)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance_val&#32;=&#32;min_sun_distance&#32;/&#32;AU&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;wrong&#32;reso&#32;timing&#32;in&#32;seconds</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reso_penalty&#32;=&#32;np.sum(reso_dts)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;wrong&#32;minimal&#32;/&#32;maximal&#32;distance</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance_penalty&#32;=&#32;max(0,&#32;0.28&#32;-&#32;min_sun_distance&#32;/&#32;AU)&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance_penalty&#32;+=&#32;max(0,&#32;max_sun_distance&#32;/&#32;AU&#32;-&#32;1.2)&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;allow&#32;start&#32;dv&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvs[0]&#32;=&#32;max(0,&#32;dvs[0]&#32;-&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a14ddda6b384b169d125e2312b7cafb7f">_max_dv0</link>)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dv_val&#32;=&#32;np.sum(dvs)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;(100&#32;*&#32;dv_val&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;100&#32;*&#32;corrected_inclination&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;5000&#32;*&#32;(max(0,&#32;distance_val&#32;-&#32;0.28))&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;5000&#32;*&#32;(max(0,&#32;emp_perhelion&#32;/&#32;AU&#32;-&#32;0.28))&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.5&#32;*&#32;time_val&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reso_penalty&#32;+&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;50000&#32;*&#32;distance_penalty
<anchor xml:id="_solo__mgar__udp_8py_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00269"/>00269 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;value&#32;&lt;&#32;bval.value:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bval.value&#32;=&#32;value
<anchor xml:id="_solo__mgar__udp_8py_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(str(value)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(incl&#32;*&#32;RAD2DEG)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(time_all&#32;/&#32;365.25)&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(dv_val)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(min_sun_distance&#32;/&#32;AU)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(max_sun_distance&#32;/&#32;AU)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(reso_penalty)&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;str(distance_penalty)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00281"/>00281 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array([dv_val,&#32;corrected_inclination,&#32;time_val,&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max(0,&#32;distance_val&#32;-&#32;0.28),
<anchor xml:id="_solo__mgar__udp_8py_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max(0,&#32;emp_perhelion&#32;/&#32;AU&#32;-&#32;0.28),
<anchor xml:id="_solo__mgar__udp_8py_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max(0,&#32;reso_penalty/100000&#32;-&#32;1)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;])&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00287"/>00287 &#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;pen&#32;=&#32;5000&#32;*&#32;(max(0,&#32;distance_val&#32;-&#32;0.28))&#32;+&#32;\</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;5000&#32;*&#32;(max(0,&#32;emp_perhelion&#32;/&#32;AU&#32;-&#32;0.28))&#32;+&#32;\</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;reso_penalty&#32;+&#32;\</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;50000&#32;*&#32;distance_penalty</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;return&#32;np.array([dv_val,&#32;corrected_inclination,&#32;time_val,&#32;pen&#32;])&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00293"/>00293 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00294"/>00294 &#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00295"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a119ed0a458c6596d62b2f4293577df2f">00295</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a119ed0a458c6596d62b2f4293577df2f">get_nobj</link>(self):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1
<anchor xml:id="_solo__mgar__udp_8py_source_1l00297"/>00297 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00298"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2bee6165ff1ec7ab62b5abcaf671e68e">00298</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2bee6165ff1ec7ab62b5abcaf671e68e">get_bounds</link>(self):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t0&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1aa0d5da42a8e0ff89ddceb5e100864479">_t0</link>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a688be7fb38d713f57d1cb11adaef9256">_tof</link>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n_legs&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1ab8cf026aa6aa142340dd7e493d69bae5">_n_legs</link>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lb&#32;=&#32;[t0[0]]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ub&#32;=&#32;[t0[1]]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lb&#32;+=&#32;[t[0]&#32;<emphasis role="keywordflow">for</emphasis>&#32;t&#32;<emphasis role="keywordflow">in</emphasis>&#32;tof]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ub&#32;+=&#32;[t[1]&#32;<emphasis role="keywordflow">for</emphasis>&#32;t&#32;<emphasis role="keywordflow">in</emphasis>&#32;tof]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbetas&#32;=&#32;n_legs&#32;-&#32;len(tof)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lb&#32;+=&#32;[self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a7b51ca13892900c3b1d440782f99a827">_min_beta</link>]&#32;*&#32;nbetas
<anchor xml:id="_solo__mgar__udp_8py_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ub&#32;+=&#32;[self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a84e14b898b6ebf864466fa2a119fec4a">_max_beta</link>]&#32;*&#32;nbetas
<anchor xml:id="_solo__mgar__udp_8py_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(lb,&#32;ub)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00312"/>00312 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00313"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1ac1170e5462ec0649b3e40486c5ce8fe7">00313</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1ac1170e5462ec0649b3e40486c5ce8fe7">get_nic</link>(self):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0
<anchor xml:id="_solo__mgar__udp_8py_source_1l00315"/>00315 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00316"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5e609bd39357f14e70695debc374e38f">00316</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5e609bd39357f14e70695debc374e38f">pretty</link>(self,&#32;x):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lambert_legs&#32;=&#32;[]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resos&#32;=&#32;[]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;_,&#32;dvs&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a92828aaaf12b6addeb33a6249b7539b8">_compute_dvs</link>(x,&#32;lambert_legs,&#32;resos)&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_outs&#32;=&#32;[rvt.rotate(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">_rotation_axis</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">_theta</link>)&#32;<emphasis role="keywordflow">for</emphasis>&#32;rvt&#32;<emphasis role="keywordflow">in</emphasis>&#32;rvt_outs]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_ins[1:]&#32;=&#32;[rvt.rotate(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">_rotation_axis</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">_theta</link>)&#32;<emphasis role="keywordflow">for</emphasis>&#32;rvt&#32;<emphasis role="keywordflow">in</emphasis>&#32;rvt_ins[1:]]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_pls&#32;=&#32;[rvt.rotate(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">_rotation_axis</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">_theta</link>)&#32;<emphasis role="keywordflow">for</emphasis>&#32;rvt&#32;<emphasis role="keywordflow">in</emphasis>&#32;rvt_pls]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ep&#32;=&#32;[epoch(rvt_pl.t&#32;*&#32;SEC2DAY)&#32;<emphasis role="keywordflow">for</emphasis>&#32;rvt_pl&#32;<emphasis role="keywordflow">in</emphasis>&#32;rvt_pls]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b_legs&#32;=&#32;[[rvt_out.r,&#32;rvt_out.v]&#32;<emphasis role="keywordflow">for</emphasis>&#32;rvt_out&#32;<emphasis role="keywordflow">in</emphasis>&#32;rvt_outs]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vinfx,&#32;Vinfy,&#32;Vinfz&#32;=&#32;[
<anchor xml:id="_solo__mgar__udp_8py_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;-&#32;b&#32;<emphasis role="keywordflow">for</emphasis>&#32;a,&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(b_legs[0][1],&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[0].<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1afaf91bbef39f261bba9225fd537e1c64">eph</link>(ep[0])[1])
<anchor xml:id="_solo__mgar__udp_8py_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;common_mu&#32;=&#32;rvt_outs[0].mu
<anchor xml:id="_solo__mgar__udp_8py_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lambert_indices&#32;=&#32;[lam.best_i&#32;<emphasis role="keywordflow">for</emphasis>&#32;lam&#32;<emphasis role="keywordflow">in</emphasis>&#32;lambert_legs]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transfer_ang&#32;=&#32;<link linkend="_namespaceexamples_1_1solo__mgar__udp_1aa993877cfdbc437a566d33cb4290ca03">_angle</link>(rvt_outs[0].r,&#32;rvt_outs[1].r)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00334"/>00334 &#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Multiple&#32;Gravity&#32;Assist&#32;(MGA)&#32;+&#32;Resonance&#32;problem:&#32;&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Planet&#32;sequence:&#32;&quot;</emphasis>,&#32;[pl.name&#32;<emphasis role="keywordflow">for</emphasis>&#32;pl&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>])
<anchor xml:id="_solo__mgar__udp_8py_source_1l00337"/>00337 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Departure:&#32;&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[0].name)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tEpoch:&#32;&quot;</emphasis>,&#32;ep[0],&#32;<emphasis role="stringliteral">&quot;&#32;[mjd2000]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tSpacecraft&#32;velocity:&#32;&quot;</emphasis>,&#32;b_legs[0][1],&#32;<emphasis role="stringliteral">&quot;[m/s]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tLaunch&#32;velocity:&#32;&quot;</emphasis>,&#32;[Vinfx,&#32;Vinfy,&#32;Vinfz],&#32;<emphasis role="stringliteral">&quot;[m/s]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;_,&#32;transfer_i,&#32;_,&#32;_,&#32;_&#32;=&#32;ic2par(*(b_legs[0]),&#32;common_mu)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tTransfer&#32;Angle:&#32;&quot;</emphasis>,&#32;np.degrees(transfer_ang),&#32;<emphasis role="stringliteral">&quot;deg&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tOutgoing&#32;Inclination:&quot;</emphasis>,&#32;transfer_i&#32;*&#32;RAD2DEG,&#32;<emphasis role="stringliteral">&quot;[deg]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tNumber&#32;of&#32;Revolutions:&quot;</emphasis>,&#32;int((lambert_indices[0]&#32;+&#32;1)&#32;/&#32;2))
<anchor xml:id="_solo__mgar__udp_8py_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tLambert&#32;Index:&quot;</emphasis>,&#32;int(lambert_indices[0]))
<anchor xml:id="_solo__mgar__udp_8py_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lambert_i&#32;=&#32;0
<anchor xml:id="_solo__mgar__udp_8py_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reso_i&#32;=&#32;0
<anchor xml:id="_solo__mgar__udp_8py_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(1,&#32;len(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>)&#32;-&#32;1):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pl&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e&#32;=&#32;ep[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dv&#32;=&#32;dvs[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leg&#32;=&#32;b_legs[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rtv_in&#32;=&#32;rvt_ins[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rtv_out&#32;=&#32;rvt_outs[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rtv_pl&#32;=&#32;rvt_pls[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vr_in&#32;=&#32;[a&#32;-&#32;b&#32;<emphasis role="keywordflow">for</emphasis>&#32;a,&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(rtv_in.v,&#32;rtv_pl.v)]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vr_out&#32;=&#32;[a&#32;-&#32;b&#32;<emphasis role="keywordflow">for</emphasis>&#32;a,&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(rtv_out.v,&#32;rtv_pl.v)]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v_inf&#32;=&#32;np.linalg.norm(vr_out)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deflection&#32;=&#32;<link linkend="_namespaceexamples_1_1solo__mgar__udp_1aa993877cfdbc437a566d33cb4290ca03">_angle</link>(vr_in,&#32;vr_out)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transfer_ang&#32;=&#32;<link linkend="_namespaceexamples_1_1solo__mgar__udp_1aa993877cfdbc437a566d33cb4290ca03">_angle</link>(rtv_out.r,&#32;rvt_outs[i&#32;+&#32;1].r)&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;&lt;&#32;len(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>)&#32;-&#32;2&#32;<emphasis role="keywordflow">else</emphasis>&#32;0&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Fly-by:&#32;&quot;</emphasis>,&#32;pl.name)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tEpoch:&#32;&quot;</emphasis>,&#32;e,&#32;<emphasis role="stringliteral">&quot;&#32;[mjd2000]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tDV:&#32;&quot;</emphasis>,&#32;dv,&#32;<emphasis role="stringliteral">&quot;[m/s]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tV_inf:&#32;&quot;</emphasis>,&#32;v_inf,&#32;<emphasis role="stringliteral">&quot;[m/s]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tTransfer&#32;Angle:&#32;&quot;</emphasis>,&#32;np.degrees(transfer_ang),&#32;<emphasis role="stringliteral">&quot;deg&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tGA&#32;deflection:&#32;&quot;</emphasis>,&#32;np.degrees(deflection),&#32;<emphasis role="stringliteral">&quot;deg&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eph&#32;=&#32;[rotate_vector(v,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">_rotation_axis</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">_theta</link>)&#32;<emphasis role="keywordflow">for</emphasis>&#32;v&#32;<emphasis role="keywordflow">in</emphasis>&#32;pl.eph(e)]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;&lt;&#32;len(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>)&#32;-&#32;1:&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">assert</emphasis>&#32;np.linalg.norm([a&#32;-&#32;b&#32;<emphasis role="keywordflow">for</emphasis>&#32;a,&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(leg[0],&#32;eph[0])])&#32;&lt;&#32;0.01
<anchor xml:id="_solo__mgar__udp_8py_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;_,&#32;transfer_i,&#32;_,&#32;_,&#32;_&#32;=&#32;ic2par(eph[0],&#32;leg[1],&#32;common_mu)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tOutgoing&#32;Inclination:&quot;</emphasis>,&#32;transfer_i&#32;*&#32;RAD2DEG,&#32;<emphasis role="stringliteral">&quot;[deg]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;pl&#32;!=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[i&#32;-&#32;1]:&#32;&#32;<emphasis role="comment">#&#32;no&#32;lamberts&#32;for&#32;resonances</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tLambert&#32;Index:&quot;</emphasis>,&#32;str(lambert_indices[lambert_i]))
<anchor xml:id="_solo__mgar__udp_8py_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lambert_i&#32;+=&#32;1
<anchor xml:id="_solo__mgar__udp_8py_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:&#32;&#32;<emphasis role="comment">#&#32;resonance&#32;at&#32;Venus</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tResonance:&quot;</emphasis>,&#32;str(resos[reso_i].resonance))
<anchor xml:id="_solo__mgar__udp_8py_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tResonance&#32;time&#32;error:&quot;</emphasis>,&#32;str(resos[reso_i]._timing_error)&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;sec&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reso_i&#32;+=&#32;1
<anchor xml:id="_solo__mgar__udp_8py_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Final&#32;Fly-by:&#32;&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[-1].name)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tEpoch:&#32;&quot;</emphasis>,&#32;ep[-1],&#32;<emphasis role="stringliteral">&quot;&#32;[mjd2000]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tSpacecraft&#32;velocity:&#32;&quot;</emphasis>,&#32;rvt_outs[-1].v,&#32;<emphasis role="stringliteral">&quot;[m/s]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tBeta:&#32;&quot;</emphasis>,&#32;x[-1])
<anchor xml:id="_solo__mgar__udp_8py_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;\tr_p:&#32;&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[-1].radius&#32;+&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a5366d6f7298cb1b8b969ea1c012b1813">_safe_distance</link>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00387"/>00387 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Resulting&#32;Solar&#32;orbit:&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a,&#32;e,&#32;i,&#32;_,&#32;_,&#32;_&#32;=&#32;rvt_outs[-1].kepler()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Perihelion:&#32;&quot;</emphasis>,&#32;(a&#32;*&#32;(1&#32;-&#32;e))&#32;/&#32;AU,&#32;<emphasis role="stringliteral">&quot;&#32;AU&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Aphelion:&#32;&quot;</emphasis>,&#32;(a&#32;*&#32;(1&#32;+&#32;e))&#32;/&#32;AU,&#32;<emphasis role="stringliteral">&quot;&#32;AU&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Inclination:&#32;&quot;</emphasis>,&#32;i&#32;*&#32;RAD2DEG,&#32;<emphasis role="stringliteral">&quot;&#32;degrees&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;=&#32;[SEC2DAY&#32;*&#32;(rvt_outs[i&#32;+&#32;1].t&#32;-&#32;rvt_outs[i].t)&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(rvt_outs)&#32;-&#32;1)]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Time&#32;of&#32;flights:&#32;&quot;</emphasis>,&#32;T,&#32;<emphasis role="stringliteral">&quot;[days]&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00396"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a3dac1a1a04ca664e4805c1d1f373fc72">00396</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a3dac1a1a04ca664e4805c1d1f373fc72">plot</link>(self,&#32;x,&#32;axes=None,&#32;units=AU,&#32;N=60):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">import</emphasis>&#32;matplotlib&#32;<emphasis role="keyword">as</emphasis>&#32;mpl
<anchor xml:id="_solo__mgar__udp_8py_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">import</emphasis>&#32;matplotlib.pyplot&#32;<emphasis role="keyword">as</emphasis>&#32;plt
<anchor xml:id="_solo__mgar__udp_8py_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;pykep.orbit_plots&#32;<emphasis role="keyword">import</emphasis>&#32;plot_planet
<anchor xml:id="_solo__mgar__udp_8py_source_1l00400"/>00400 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;_,&#32;_&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a92828aaaf12b6addeb33a6249b7539b8">_compute_dvs</link>(x)&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_outs&#32;=&#32;[rvt.rotate(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">_rotation_axis</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">_theta</link>)&#32;<emphasis role="keywordflow">for</emphasis>&#32;rvt&#32;<emphasis role="keywordflow">in</emphasis>&#32;rvt_outs]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_ins[1:]&#32;=&#32;[rvt.rotate(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">_rotation_axis</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">_theta</link>)&#32;<emphasis role="keywordflow">for</emphasis>&#32;rvt&#32;<emphasis role="keywordflow">in</emphasis>&#32;rvt_ins[1:]]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_pls&#32;=&#32;[rvt.rotate(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a22ab1fc09e562121f2e870df44490395">_rotation_axis</link>,&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a2d74e5cc2f517d8c601facd7e1dd800d">_theta</link>)&#32;<emphasis role="keywordflow">for</emphasis>&#32;rvt&#32;<emphasis role="keywordflow">in</emphasis>&#32;rvt_pls]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ep&#32;=&#32;[epoch(rvt_pl.t&#32;*&#32;SEC2DAY)&#32;<emphasis role="keywordflow">for</emphasis>&#32;rvt_pl&#32;<emphasis role="keywordflow">in</emphasis>&#32;rvt_pls]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00407"/>00407 &#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Creating&#32;the&#32;axes&#32;if&#32;necessary</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;axes&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mpl.rcParams[<emphasis role="stringliteral">&quot;legend.fontsize&quot;</emphasis>]&#32;=&#32;10
<anchor xml:id="_solo__mgar__udp_8py_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fig&#32;=&#32;plt.figure()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;axes&#32;=&#32;fig.gca(projection=<emphasis role="stringliteral">&quot;3d&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00413"/>00413 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plt.xlim([-1,&#32;1])
<anchor xml:id="_solo__mgar__udp_8py_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;planets</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;pl,&#32;e&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>,&#32;ep):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot_planet(
<anchor xml:id="_solo__mgar__udp_8py_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pl,&#32;e,&#32;units=units,&#32;legend=<emphasis role="keyword">True</emphasis>,&#32;color=(0.7,&#32;0.7,&#32;1),&#32;axes=axes
<anchor xml:id="_solo__mgar__udp_8py_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;lamberts&#32;and&#32;resonances&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(0,&#32;len(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>)&#32;-&#32;1):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pl&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;stay&#32;at&#32;planet:&#32;it&#32;is&#32;a&#32;resonance&#32;colored&#32;black</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_reso&#32;=&#32;pl&#32;==&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[i&#32;+&#32;1]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_out&#32;=&#32;rvt_outs[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof&#32;=&#32;rvt_ins[i&#32;+&#32;1].t&#32;-&#32;rvt_out.t
<anchor xml:id="_solo__mgar__udp_8py_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_out.plot(tof,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;units=units,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;N=4&#32;*&#32;N,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color=<emphasis role="stringliteral">&quot;k&quot;</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_reso&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;axes=axes)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;axes
<anchor xml:id="_solo__mgar__udp_8py_source_1l00434"/>00434 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00435"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1afaf91bbef39f261bba9225fd537e1c64">00435</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1afaf91bbef39f261bba9225fd537e1c64">eph</link>(self,&#32;rvts,&#32;t):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(0,&#32;len(rvts)):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orb&#32;=&#32;rvts[i]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;==&#32;len(rvts)&#32;-&#32;1&#32;<emphasis role="keywordflow">or</emphasis>&#32;rvts[i&#32;+&#32;1].t&#32;&gt;&#32;t:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof&#32;=&#32;t&#32;-&#32;orb.t
<anchor xml:id="_solo__mgar__udp_8py_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;orb&#32;=&#32;orb.propagate_lagrangian(tof)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;orb.r,&#32;orb.v
<anchor xml:id="_solo__mgar__udp_8py_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00443"/><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1aba1e8ae9f93e4d570147f475185e809a">00443</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1aba1e8ae9f93e4d570147f475185e809a">plot_distance_and_flybys</link>(self,&#32;x,&#32;axes=None,&#32;N=1200,&#32;extension=0):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">import</emphasis>&#32;matplotlib.pyplot&#32;<emphasis role="keyword">as</emphasis>&#32;plt
<anchor xml:id="_solo__mgar__udp_8py_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;_,&#32;_&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a92828aaaf12b6addeb33a6249b7539b8">_compute_dvs</link>(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ep&#32;=&#32;[rvt_pl.t&#32;*&#32;SEC2DAY&#32;<emphasis role="keywordflow">for</emphasis>&#32;rvt_pl&#32;<emphasis role="keywordflow">in</emphasis>&#32;rvt_pls]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;=&#32;[SEC2DAY&#32;*&#32;(rvt_ins[i&#32;+&#32;1].t&#32;-&#32;rvt_outs[i].t)&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(rvt_outs))]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timeframe&#32;=&#32;np.linspace(0,&#32;sum(T)&#32;+&#32;extension,&#32;N)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;earth&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[0]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;venus&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>[-1]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00451"/>00451 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distances&#32;=&#32;[]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;edistances&#32;=&#32;[]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vdistances&#32;=&#32;[]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00455"/>00455 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;day&#32;<emphasis role="keywordflow">in</emphasis>&#32;timeframe:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;x[0]&#32;+&#32;day
<anchor xml:id="_solo__mgar__udp_8py_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pos,&#32;_&#32;=&#32;self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1afaf91bbef39f261bba9225fd537e1c64">eph</link>(rvt_outs,&#32;t&#32;*&#32;DAY2SEC)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;epos,&#32;_&#32;=&#32;earth.eph(t)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vpos,&#32;_&#32;=&#32;venus.eph(t)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distances.append(np.linalg.norm(pos)&#32;/&#32;AU)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;edistances.append(np.linalg.norm(epos)&#32;/&#32;AU)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vdistances.append(np.linalg.norm(vpos)&#32;/&#32;AU)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00464"/>00464 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fl_times&#32;=&#32;list()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fl_distances&#32;=&#32;list()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;pl,&#32;t&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(self.<link linkend="_classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp_1a559f74d85b98022d2e284d43740a9726">_seq</link>,&#32;ep):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fl_times.append(t&#32;-&#32;x[0])
<anchor xml:id="_solo__mgar__udp_8py_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pos,&#32;_&#32;=&#32;pl.eph(t)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fl_distances.append(np.linalg.norm(pos)&#32;/&#32;AU)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00471"/>00471 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;axes&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;axes&#32;=&#32;plt.subplots()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plt.ylim([0,&#32;1.3])
<anchor xml:id="_solo__mgar__udp_8py_source_1l00475"/>00475 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;axes.plot(list(timeframe),&#32;distances,&#32;label=<emphasis role="stringliteral">&quot;Solar&#32;Orbiter&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;axes.plot(list(timeframe),&#32;edistances,&#32;label=<emphasis role="stringliteral">&quot;Earth&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;axes.plot(list(timeframe),&#32;vdistances,&#32;label=<emphasis role="stringliteral">&quot;Venus&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plt.scatter(fl_times,&#32;fl_distances,&#32;marker=<emphasis role="stringliteral">&quot;o&quot;</emphasis>,&#32;color=<emphasis role="stringliteral">&quot;r&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;axes.set_xlabel(<emphasis role="stringliteral">&quot;Days&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;axes.set_ylabel(<emphasis role="stringliteral">&quot;AU&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;axes.set_title(<emphasis role="stringliteral">&quot;Distance&#32;to&#32;Sun&quot;</emphasis>)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;axes.legend()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;axes
<anchor xml:id="_solo__mgar__udp_8py_source_1l00485"/>00485 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00486"/>00486 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00487"/>00487 <emphasis role="comment">#&#32;propagate&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;dvs&#32;using&#32;MGA&#32;/&#32;Lambert</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00488"/><link linkend="_namespaceexamples_1_1solo__mgar__udp_1a6d928d9b61388ba3bc08749cb303c94e">00488</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1solo__mgar__udp_1a6d928d9b61388ba3bc08749cb303c94e">_dv_mga</link>(pl1,&#32;pl2,&#32;tof,&#32;max_revs,&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;dvs,&#32;lps=None):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00489"/>00489 &#32;&#32;&#32;&#32;rvt_pl&#32;=&#32;rvt_pls[-1]&#32;&#32;<emphasis role="comment">#&#32;current&#32;planet</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00490"/>00490 &#32;&#32;&#32;&#32;v_in&#32;=&#32;rvt_pl.v&#32;<emphasis role="keywordflow">if</emphasis>&#32;rvt_ins[-1]&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;rvt_ins[-1].v
<anchor xml:id="_solo__mgar__udp_8py_source_1l00491"/>00491 &#32;&#32;&#32;&#32;rvt_pl2&#32;=&#32;rvt_planet(pl2,&#32;rvt_pl.t&#32;+&#32;tof)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00492"/>00492 &#32;&#32;&#32;&#32;rvt_pls.append(rvt_pl2)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00493"/>00493 &#32;&#32;&#32;&#32;r&#32;=&#32;rvt_pl.r
<anchor xml:id="_solo__mgar__udp_8py_source_1l00494"/>00494 &#32;&#32;&#32;&#32;vpl&#32;=&#32;rvt_pl.v
<anchor xml:id="_solo__mgar__udp_8py_source_1l00495"/>00495 &#32;&#32;&#32;&#32;r2&#32;=&#32;rvt_pl2.r
<anchor xml:id="_solo__mgar__udp_8py_source_1l00496"/>00496 &#32;&#32;&#32;&#32;lp&#32;=&#32;lambert_problem(r,&#32;r2,&#32;tof,&#32;rvt_pl.mu,&#32;<emphasis role="keyword">False</emphasis>,&#32;max_revs)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00497"/>00497 &#32;&#32;&#32;&#32;lp&#32;=&#32;<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga">lambert_problem_multirev_ga</link>(v_in,&#32;lp,&#32;pl1,&#32;vpl)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00498"/>00498 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;lps&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lps.append(lp)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00500"/>00500 &#32;&#32;&#32;&#32;v_out&#32;=&#32;lp.get_v1()[0]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00501"/>00501 &#32;&#32;&#32;&#32;rvt_out&#32;=&#32;<link linkend="_classexamples_1_1kepler_1_1rvt_1_1rvt">rvt</link>(r,&#32;v_out,&#32;rvt_pl.t,&#32;rvt_pl.mu)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00502"/>00502 &#32;&#32;&#32;&#32;rvt_outs.append(rvt_out)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00503"/>00503 &#32;&#32;&#32;&#32;rvt_in&#32;=&#32;<link linkend="_classexamples_1_1kepler_1_1rvt_1_1rvt">rvt</link>(r2,&#32;lp.get_v2()[0],&#32;rvt_pl.t&#32;+&#32;tof,&#32;rvt_pl.mu)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00504"/>00504 &#32;&#32;&#32;&#32;rvt_ins.append(rvt_in)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00505"/>00505 &#32;&#32;&#32;&#32;vr_in&#32;=&#32;[a&#32;-&#32;b&#32;<emphasis role="keywordflow">for</emphasis>&#32;a,&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(vpl,&#32;v_in)]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00506"/>00506 &#32;&#32;&#32;&#32;vr_out&#32;=&#32;[a&#32;-&#32;b&#32;<emphasis role="keywordflow">for</emphasis>&#32;a,&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(v_out,&#32;vpl)]
<anchor xml:id="_solo__mgar__udp_8py_source_1l00507"/>00507 &#32;&#32;&#32;&#32;dv&#32;=&#32;fb_vel(vr_in,&#32;vr_out,&#32;pl1)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00508"/>00508 &#32;&#32;&#32;&#32;dvs.append(dv)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00509"/>00509 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00510"/>00510 &#32;&#32;&#32;&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00511"/>00511 <emphasis role="comment">#&#32;propagate&#32;rvt_outs,&#32;rvt_ins,&#32;rvt_pls,&#32;dvs&#32;using&#32;resonances&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00512"/><link linkend="_namespaceexamples_1_1solo__mgar__udp_1a2f01caf14c62d02e55dfc2245172590b">00512</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1solo__mgar__udp_1a2f01caf14c62d02e55dfc2245172590b">compute_resonance</link>(pl,&#32;resonances,&#32;beta,&#32;safe_distance,&#32;used_resos,&#32;reso_dts,&#32;rvt_outs,
<anchor xml:id="_solo__mgar__udp_8py_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rvt_ins,&#32;rvt_pls,&#32;dvs,&#32;resos=None):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00514"/>00514 &#32;&#32;&#32;&#32;rvt_in&#32;=&#32;rvt_ins[-1]&#32;&#32;<emphasis role="comment">#&#32;current&#32;spaceship</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00515"/>00515 &#32;&#32;&#32;&#32;rvt_pl&#32;=&#32;rvt_pls[-1]&#32;&#32;<emphasis role="comment">#&#32;current&#32;planet</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00516"/>00516 &#32;&#32;&#32;&#32;reso&#32;=&#32;<link linkend="_classexamples_1_1kepler_1_1resonance_1_1resonance">resonance</link>(pl,&#32;rvt_in,&#32;rvt_pl,&#32;resonances)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00517"/>00517 &#32;&#32;&#32;&#32;reso_dt,&#32;used_reso&#32;=&#32;reso.select_resonance(beta,&#32;safe_distance)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00518"/>00518 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;resos&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_solo__mgar__udp_8py_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resos.append(reso)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00520"/>00520 &#32;&#32;&#32;&#32;used_resos.append(used_reso)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00521"/>00521 &#32;&#32;&#32;&#32;reso_dts.append(reso_dt)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00522"/>00522 &#32;&#32;&#32;&#32;rvt_outs.append(reso.rvt_out)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00523"/>00523 &#32;&#32;&#32;&#32;tof&#32;=&#32;reso.tof()
<anchor xml:id="_solo__mgar__udp_8py_source_1l00524"/>00524 &#32;&#32;&#32;&#32;time2&#32;=&#32;reso.time&#32;+&#32;tof
<anchor xml:id="_solo__mgar__udp_8py_source_1l00525"/>00525 &#32;&#32;&#32;&#32;rvt_pl2&#32;=&#32;rvt_planet(pl,&#32;time2)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00526"/>00526 &#32;&#32;&#32;&#32;rvt_pls.append(rvt_pl2)&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00527"/>00527 &#32;&#32;&#32;&#32;rvt_in2&#32;=&#32;<link linkend="_classexamples_1_1kepler_1_1rvt_1_1rvt">rvt</link>(rvt_pl2.r,&#32;reso.rvt_out.v,&#32;time2,&#32;rvt_pl2.mu)&#32;&#32;<emphasis role="comment">#&#32;its&#32;a&#32;resonance,&#32;we&#32;arrive&#32;with&#32;same&#32;v&#32;as&#32;we&#32;started</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00528"/>00528 &#32;&#32;&#32;&#32;rvt_ins.append(rvt_in2)
<anchor xml:id="_solo__mgar__udp_8py_source_1l00529"/>00529 &#32;&#32;&#32;&#32;dvs.append(0)&#32;&#32;<emphasis role="comment">#&#32;#&#32;its&#32;a&#32;resonance,&#32;we&#32;don&apos;t&#32;need&#32;an&#32;impulse</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00530"/>00530 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00531"/>00531 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00532"/><link linkend="_namespaceexamples_1_1solo__mgar__udp_1aa993877cfdbc437a566d33cb4290ca03">00532</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1solo__mgar__udp_1aa993877cfdbc437a566d33cb4290ca03">_angle</link>(v1,&#32;v2):
<anchor xml:id="_solo__mgar__udp_8py_source_1l00533"/>00533 &#32;&#32;&#32;&#32;ca&#32;=&#32;np.dot(v1,&#32;v2)&#32;/&#32;np.linalg.norm(v1)&#32;/&#32;np.linalg.norm(v2)&#32;&#32;<emphasis role="comment">#&#32;-&gt;&#32;cosine&#32;of&#32;the&#32;angle</emphasis>
<anchor xml:id="_solo__mgar__udp_8py_source_1l00534"/>00534 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.arccos(np.clip(ca,&#32;-1,&#32;1))&#32;
<anchor xml:id="_solo__mgar__udp_8py_source_1l00535"/>00535 
<anchor xml:id="_solo__mgar__udp_8py_source_1l00536"/>00536 
</programlisting></section>

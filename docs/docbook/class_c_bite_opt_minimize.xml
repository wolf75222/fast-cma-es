<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_c_bite_opt_minimize" xml:lang="en-US">
<title>CBiteOptMinimize Class Reference</title>
<indexterm><primary>CBiteOptMinimize</primary></indexterm>
<para>
<computeroutput>#include &lt;biteopt.h&gt;</computeroutput>
</para>
Inheritance diagram for CBiteOptMinimize:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_minimize__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for CBiteOptMinimize:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_minimize__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual void <link linkend="_class_c_bite_opt_minimize_1a6a6d606aa0f4dc874acb855b66571124">getMinValues</link> (double *const p) const</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_c_bite_opt_minimize_1ad68d81fd1dad55c40ccd01a9d6567ccf">getMaxValues</link> (double *const p) const</para>
</listitem>
            <listitem><para>virtual double <link linkend="_class_c_bite_opt_minimize_1ae80abdaf663fbb5c83e719eea4d49d48">optcost</link> (const double *const p)</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_c_bite_opt_deep">CBiteOptDeep</link>        <itemizedlist>
            <listitem><para><link linkend="_class_c_bite_opt_deep_1a65d5f650fd7eae9ae1d1cb76387a3179">CBiteOptDeep</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_class_c_bite_opt_deep_1a8442d47ab16f76d4783a4f8227ab78a7">~CBiteOptDeep</link> ()</para>
</listitem>
            <listitem><para>virtual const double * <link linkend="_class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3">getBestParams</link> () const</para>
</listitem>
            <listitem><para>virtual double <link linkend="_class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31">getBestCost</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_c_bite_sel_base">CBiteSelBase</link> ** <link linkend="_class_c_bite_opt_deep_1a7b759e5dbc58b29e36f7d3c6a10e16a7">getSels</link> ()</para>
</listitem>
            <listitem><para>const char ** <link linkend="_class_c_bite_opt_deep_1a4ddcbc966999f0b3f4b59c8f8e909864">getSelNames</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_class_c_bite_opt_deep_1aa30c464f1425ad1219e7f512e75527a5">getSelCount</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61">updateDims</link> (const int aParamCount, const int M=6, const int PopSize0=0)</para>
</listitem>
            <listitem><para>void <link linkend="_class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b">init</link> (<link linkend="_class_c_bite_rnd">CBiteRnd</link> &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</para>
</listitem>
            <listitem><para>int <link linkend="_class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786">optimize</link> (<link linkend="_class_c_bite_rnd">CBiteRnd</link> &amp;rnd)</para>
</listitem>
        </itemizedlist>
Public Member Functions inherited from <link linkend="_class_c_bite_opt_interface">CBiteOptInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809">CBiteOptInterface</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce">~CBiteOptInterface</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_class_c_bite_opt_minimize_1a8678489b0c6aca31865aabf22b7a6a48">N</link></para>

<para>The number of dimensions in objective function. </para>
</listitem>
            <listitem><para><link linkend="_biteopt_8h_1a308db87d0932931afd67e135ae6c35a1">biteopt_func</link> <link linkend="_class_c_bite_opt_minimize_1ad256ead784368777ead4e544edc15352">f</link></para>

<para>Objective function. </para>
</listitem>
            <listitem><para>void * <link linkend="_class_c_bite_opt_minimize_1a83276d987e4697798ba94109a0cad9d1">data</link></para>

<para>Objective function&apos;s data. </para>
</listitem>
            <listitem><para>const double * <link linkend="_class_c_bite_opt_minimize_1a46e2e9238152b322ff7f7b71a6893d0d">lb</link></para>

<para>Parameters&apos; lower bounds. </para>
</listitem>
            <listitem><para>const double * <link linkend="_class_c_bite_opt_minimize_1a0e1e84cbc118f9ccd61d8b581d345a60">ub</link></para>

<para>Parameters&apos; upper bounds. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Member Functions inherited from <link linkend="_class_c_bite_opt_deep">CBiteOptDeep</link>        <itemizedlist>
            <listitem><para>void <link linkend="_class_c_bite_opt_deep_1a5aeb781988a714cc50107efa2521cc52">deleteBuffers</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Attributes inherited from <link linkend="_class_c_bite_opt_deep">CBiteOptDeep</link>        <itemizedlist>
            <listitem><para>int <link linkend="_class_c_bite_opt_deep_1ac7cfdf4754e5ad3fef6b3cd98ba22520">ParamCount</link></para>

<para>The total number of internal parameter values in use. </para>
</listitem>
            <listitem><para>int <link linkend="_class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b">OptCount</link></para>

<para>The total number of optimization objects in use. </para>
</listitem>
            <listitem><para><link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap">CBiteOptWrap</link> ** <link linkend="_class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6">Opts</link></para>

<para>Optimization objects. </para>
</listitem>
            <listitem><para><link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap">CBiteOptWrap</link> * <link linkend="_class_c_bite_opt_deep_1afd1350f64112950d0887700984547b96">BestOpt</link></para>

<para>Optimizer that contains the best solution. </para>
</listitem>
            <listitem><para><link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap">CBiteOptWrap</link> * <link linkend="_class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18">CurOpt</link></para>

<para>Current optimizer object. </para>
</listitem>
            <listitem><para>int <link linkend="_class_c_bite_opt_deep_1ad7c9509c6e4525db8faab200f4f2edf6">StallCount</link></para>

<para>The number of iterations without improvement. </para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>

<para>Wrapper class for the <link linkend="_biteopt_8h_1a80c74350b3bde46bf211afee2d02ddd5">biteopt_minimize()</link> function. </para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01680">1680</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_c_bite_opt_minimize_1ad68d81fd1dad55c40ccd01a9d6567ccf"/><section>
    <title>getMaxValues()</title>
<indexterm><primary>getMaxValues</primary><secondary>CBiteOptMinimize</secondary></indexterm>
<indexterm><primary>CBiteOptMinimize</primary><secondary>getMaxValues</secondary></indexterm>
<para><computeroutput>virtual void CBiteOptMinimize::getMaxValues (double *const p) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Virtual function that should fill maximal parameter value vector.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>out</entry><entry>p</entry><entry>
<para>Maximal value vector. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d">CBiteOptInterface</link>.</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01694">1694</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_minimize_1a6a6d606aa0f4dc874acb855b66571124"/><section>
    <title>getMinValues()</title>
<indexterm><primary>getMinValues</primary><secondary>CBiteOptMinimize</secondary></indexterm>
<indexterm><primary>CBiteOptMinimize</primary><secondary>getMinValues</secondary></indexterm>
<para><computeroutput>virtual void CBiteOptMinimize::getMinValues (double *const p) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Virtual function that should fill minimal parameter value vector.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>out</entry><entry>p</entry><entry>
<para>Minimal value vector. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d">CBiteOptInterface</link>.</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01689">1689</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_minimize_1ae80abdaf663fbb5c83e719eea4d49d48"/><section>
    <title>optcost()</title>
<indexterm><primary>optcost</primary><secondary>CBiteOptMinimize</secondary></indexterm>
<indexterm><primary>CBiteOptMinimize</primary><secondary>optcost</secondary></indexterm>
<para><computeroutput>virtual double CBiteOptMinimize::optcost (const double *const p)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Virtual function (objective function) that should calculate parameter vector&apos;s optimization cost.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>p</entry><entry>
<para>Parameter vector to evaluate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Optimized cost. </para>
</formalpara>
</para>
<para>
Implements <link linkend="_class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d">CBiteOptInterface</link>.</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01699">1699</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_c_bite_opt_minimize_1a83276d987e4697798ba94109a0cad9d1"/><section>
    <title>data</title>
<indexterm><primary>data</primary><secondary>CBiteOptMinimize</secondary></indexterm>
<indexterm><primary>CBiteOptMinimize</primary><secondary>data</secondary></indexterm>
<para><computeroutput>void* CBiteOptMinimize::data</computeroutput></para><para>

<para>Objective function&apos;s data. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01685">1685</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_minimize_1ad256ead784368777ead4e544edc15352"/><section>
    <title>f</title>
<indexterm><primary>f</primary><secondary>CBiteOptMinimize</secondary></indexterm>
<indexterm><primary>CBiteOptMinimize</primary><secondary>f</secondary></indexterm>
<para><computeroutput><link linkend="_biteopt_8h_1a308db87d0932931afd67e135ae6c35a1">biteopt_func</link> CBiteOptMinimize::f</computeroutput></para><para>

<para>Objective function. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01684">1684</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_minimize_1a46e2e9238152b322ff7f7b71a6893d0d"/><section>
    <title>lb</title>
<indexterm><primary>lb</primary><secondary>CBiteOptMinimize</secondary></indexterm>
<indexterm><primary>CBiteOptMinimize</primary><secondary>lb</secondary></indexterm>
<para><computeroutput>const double* CBiteOptMinimize::lb</computeroutput></para><para>

<para>Parameters&apos; lower bounds. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01686">1686</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_minimize_1a8678489b0c6aca31865aabf22b7a6a48"/><section>
    <title>N</title>
<indexterm><primary>N</primary><secondary>CBiteOptMinimize</secondary></indexterm>
<indexterm><primary>CBiteOptMinimize</primary><secondary>N</secondary></indexterm>
<para><computeroutput>int CBiteOptMinimize::N</computeroutput></para><para>

<para>The number of dimensions in objective function. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01683">1683</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_minimize_1a0e1e84cbc118f9ccd61d8b581d345a60"/><section>
    <title>ub</title>
<indexterm><primary>ub</primary><secondary>CBiteOptMinimize</secondary></indexterm>
<indexterm><primary>CBiteOptMinimize</primary><secondary>ub</secondary></indexterm>
<para><computeroutput>const double* CBiteOptMinimize::ub</computeroutput></para><para>

<para>Parameters&apos; upper bounds. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01687">1687</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
_fcmaescpp/include/<link linkend="_biteopt_8h">biteopt.h</link></section>
</section>

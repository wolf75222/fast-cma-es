<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_c_bite_opt_interface" xml:lang="en-US">
<title>CBiteOptInterface Class Reference</title>
<indexterm><primary>CBiteOptInterface</primary></indexterm>
<para>
<computeroutput>#include &lt;biteaux.h&gt;</computeroutput>
</para>
Inheritance diagram for CBiteOptInterface:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_interface__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for CBiteOptInterface:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_interface__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809">CBiteOptInterface</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce">~CBiteOptInterface</link> ()</para>
</listitem>
            <listitem><para>virtual const double * <link linkend="_class_c_bite_opt_interface_1a2da6e8d4cfb2ecc8380b0cd220d1aeac">getBestParams</link> () const =0</para>
</listitem>
            <listitem><para>virtual double <link linkend="_class_c_bite_opt_interface_1a79e5a8cdcdf2c9a12f16e4aeba49c75f">getBestCost</link> () const =0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d">getMinValues</link> (double *const p) const =0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d">getMaxValues</link> (double *const p) const =0</para>
</listitem>
            <listitem><para>virtual double <link linkend="_class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d">optcost</link> (const double *const p)=0</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Base virtual abstract class that defines common optimizer interfacing functions. </para>
<para>
Definition at line <link linkend="_biteaux_8h_source_1l01520">1520</link> of file <link linkend="_biteaux_8h_source">biteaux.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809"/><section>
    <title>CBiteOptInterface()</title>
<indexterm><primary>CBiteOptInterface</primary><secondary>CBiteOptInterface</secondary></indexterm>
<indexterm><primary>CBiteOptInterface</primary><secondary>CBiteOptInterface</secondary></indexterm>
<para><computeroutput>CBiteOptInterface::CBiteOptInterface ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_biteaux_8h_source_1l01523">1523</link> of file <link linkend="_biteaux_8h_source">biteaux.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce"/><section>
    <title>~CBiteOptInterface()</title>
<indexterm><primary>~CBiteOptInterface</primary><secondary>CBiteOptInterface</secondary></indexterm>
<indexterm><primary>CBiteOptInterface</primary><secondary>~CBiteOptInterface</secondary></indexterm>
<para><computeroutput>virtual CBiteOptInterface::~CBiteOptInterface ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_biteaux_8h_source_1l01527">1527</link> of file <link linkend="_biteaux_8h_source">biteaux.h</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_c_bite_opt_interface_1a79e5a8cdcdf2c9a12f16e4aeba49c75f"/><section>
    <title>getBestCost()</title>
<indexterm><primary>getBestCost</primary><secondary>CBiteOptInterface</secondary></indexterm>
<indexterm><primary>CBiteOptInterface</primary><secondary>getBestCost</secondary></indexterm>
<para><computeroutput>virtual double CBiteOptInterface::getBestCost ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para>
<para><formalpara><title>Returns</title>

<para>Cost of the best parameter vector. </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_class_c_bite_opt_base_1a4b2d3669723dbe251cf391cc10dd4f5c">CBiteOptBase&lt; ptype &gt;</link>, <link linkend="_class_c_bite_opt_base_1a4b2d3669723dbe251cf391cc10dd4f5c">CBiteOptBase&lt; double &gt;</link>, <link linkend="_class_c_bite_opt_base_1a4b2d3669723dbe251cf391cc10dd4f5c">CBiteOptBase&lt; int64_t &gt;</link>, and <link linkend="_class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31">CBiteOptDeep</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_interface_1a2da6e8d4cfb2ecc8380b0cd220d1aeac"/><section>
    <title>getBestParams()</title>
<indexterm><primary>getBestParams</primary><secondary>CBiteOptInterface</secondary></indexterm>
<indexterm><primary>CBiteOptInterface</primary><secondary>getBestParams</secondary></indexterm>
<para><computeroutput>virtual const double * CBiteOptInterface::getBestParams ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para>
<para><formalpara><title>Returns</title>

<para>Best parameter vector. </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2">CBiteOptBase&lt; ptype &gt;</link>, <link linkend="_class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2">CBiteOptBase&lt; double &gt;</link>, <link linkend="_class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2">CBiteOptBase&lt; int64_t &gt;</link>, and <link linkend="_class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3">CBiteOptDeep</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d"/><section>
    <title>getMaxValues()</title>
<indexterm><primary>getMaxValues</primary><secondary>CBiteOptInterface</secondary></indexterm>
<indexterm><primary>CBiteOptInterface</primary><secondary>getMaxValues</secondary></indexterm>
<para><computeroutput>virtual void CBiteOptInterface::getMaxValues (double *const p) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para>
<para>Virtual function that should fill maximal parameter value vector.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>out</entry><entry>p</entry><entry>
<para>Maximal value vector. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implemented in <link linkend="_classbiteopt_1_1_bite_optimizer_1a8d1716460571a9aef6f8206715a5a71c">biteopt::BiteOptimizer</link>, <link linkend="_class_c_bite_opt_1_1_c_par_opt_1a0eb7bdd22fa894f836fbea2141ec3f39">CBiteOpt::CParOpt&lt; CNMSeqOpt &gt;</link>, <link linkend="_class_c_bite_opt_1_1_c_par_opt_1a0eb7bdd22fa894f836fbea2141ec3f39">CBiteOpt::CParOpt&lt; CSpherOpt &gt;</link>, <link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap_1a2f9fc126b59988b4a0812d87b3d6fdfd">CBiteOptDeep::CBiteOptWrap</link>, and <link linkend="_class_c_bite_opt_minimize_1ad68d81fd1dad55c40ccd01a9d6567ccf">CBiteOptMinimize</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_interface_a9debe40625c2bc248a4ffd12a9197a4d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d"/><section>
    <title>getMinValues()</title>
<indexterm><primary>getMinValues</primary><secondary>CBiteOptInterface</secondary></indexterm>
<indexterm><primary>CBiteOptInterface</primary><secondary>getMinValues</secondary></indexterm>
<para><computeroutput>virtual void CBiteOptInterface::getMinValues (double *const p) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para>
<para>Virtual function that should fill minimal parameter value vector.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>out</entry><entry>p</entry><entry>
<para>Minimal value vector. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implemented in <link linkend="_classbiteopt_1_1_bite_optimizer_1a11148136b4a3eebd78d235eda7e3dff4">biteopt::BiteOptimizer</link>, <link linkend="_class_c_bite_opt_1_1_c_par_opt_1a661fa30fe699ca82972c1999507fcc10">CBiteOpt::CParOpt&lt; CNMSeqOpt &gt;</link>, <link linkend="_class_c_bite_opt_1_1_c_par_opt_1a661fa30fe699ca82972c1999507fcc10">CBiteOpt::CParOpt&lt; CSpherOpt &gt;</link>, <link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap_1a2b9e245cc0cdb32268e01c0ec406fe63">CBiteOptDeep::CBiteOptWrap</link>, and <link linkend="_class_c_bite_opt_minimize_1a6a6d606aa0f4dc874acb855b66571124">CBiteOptMinimize</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_interface_ae7f8adaf2fd8acb10ccf057592a6229d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d"/><section>
    <title>optcost()</title>
<indexterm><primary>optcost</primary><secondary>CBiteOptInterface</secondary></indexterm>
<indexterm><primary>CBiteOptInterface</primary><secondary>optcost</secondary></indexterm>
<para><computeroutput>virtual double CBiteOptInterface::optcost (const double *const p)<computeroutput>[pure virtual]</computeroutput></computeroutput></para>
<para>Virtual function (objective function) that should calculate parameter vector&apos;s optimization cost.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>p</entry><entry>
<para>Parameter vector to evaluate. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Optimized cost. </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_classbiteopt_1_1_bite_optimizer_1a0244d5e664ac99fd264ebe908023ce0c">biteopt::BiteOptimizer</link>, <link linkend="_class_c_bite_opt_1_1_c_par_opt_1a4ca168bf20b06cb767d052e8610c9258">CBiteOpt::CParOpt&lt; CNMSeqOpt &gt;</link>, <link linkend="_class_c_bite_opt_1_1_c_par_opt_1a4ca168bf20b06cb767d052e8610c9258">CBiteOpt::CParOpt&lt; CSpherOpt &gt;</link>, <link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap_1a881038400bff3e6d813fcb4304a9bac0">CBiteOptDeep::CBiteOptWrap</link>, and <link linkend="_class_c_bite_opt_minimize_1ae80abdaf663fbb5c83e719eea4d49d48">CBiteOptMinimize</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_interface_a45d7e2c9ea31b6f8bb23758a6879df9d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
_fcmaescpp/include/<link linkend="_biteaux_8h">biteaux.h</link></section>
</section>

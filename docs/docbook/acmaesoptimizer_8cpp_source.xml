<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_acmaesoptimizer_8cpp_source" xml:lang="en-US">
<title>acmaesoptimizer.cpp</title>
<indexterm><primary>_fcmaescpp/acmaesoptimizer.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_acmaesoptimizer_8cpp_source_1l00001"/>00001 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00002"/>00002 <emphasis role="comment">//</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00003"/>00003 <emphasis role="comment">//&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00004"/>00004 <emphasis role="comment">//&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00005"/>00005 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00006"/>00006 <emphasis role="comment">//&#32;Eigen&#32;based&#32;implementation&#32;of&#32;active&#32;CMA-ES</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00007"/>00007 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00008"/>00008 <emphasis role="comment">//&#32;Supports&#32;parallel&#32;fitness&#32;function&#32;evaluation.&#32;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00009"/>00009 <emphasis role="comment">//&#32;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00010"/>00010 <emphasis role="comment">//&#32;For&#32;expensive&#32;objective&#32;functions&#32;(e.g.&#32;machine&#32;learning&#32;parameter&#32;optimization)&#32;use&#32;the&#32;workers</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00011"/>00011 <emphasis role="comment">//&#32;parameter&#32;to&#32;parallelize&#32;objective&#32;function&#32;evaluation.&#32;The&#32;workers&#32;parameter&#32;should&#32;be&#32;limited</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00012"/>00012 <emphasis role="comment">//&#32;the&#32;population&#32;size&#32;because&#32;otherwize&#32;poulation&#32;update&#32;is&#32;delayed.&#32;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00013"/>00013 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00014"/>00014 <emphasis role="comment">//&#32;Derived&#32;from&#32;http://cma.gforge.inria.fr/cmaes.m&#32;which&#32;follows</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00015"/>00015 <emphasis role="comment">//&#32;https://www.researchgate.net/publication/227050324_The_CMA_Evolution_Strategy_A_Comparing_Review</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00016"/>00016 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00017"/>00017 <emphasis role="comment">//&#32;Requires&#32;Eigen&#32;version&#32;&gt;=&#32;3.4&#32;because&#32;new&#32;slicing&#32;capabilities&#32;are&#32;used,&#32;see</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00018"/>00018 <emphasis role="comment">//&#32;https://eigen.tuxfamily.org/dox-devel/group__TutorialSlicingIndexing.html</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00019"/>00019 <emphasis role="comment">//&#32;requires&#32;https://github.com/bab2min/EigenRand&#32;for&#32;random&#32;number&#32;generation.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00020"/>00020 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00021"/>00021 <emphasis role="preprocessor">#include&#32;&lt;Eigen/Core&gt;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00022"/>00022 <emphasis role="preprocessor">#include&#32;&lt;Eigen/Eigenvalues&gt;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00023"/>00023 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00024"/>00024 <emphasis role="preprocessor">#include&#32;&lt;random&gt;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00025"/>00025 <emphasis role="preprocessor">#include&#32;&lt;float.h&gt;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00026"/>00026 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00027"/>00027 <emphasis role="preprocessor">#include&#32;&lt;ctime&gt;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00028"/>00028 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_evaluator_8h">evaluator.h</link>&quot;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00029"/>00029 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00030"/>00030 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00031"/>00031 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00032"/><link linkend="_namespaceacmaes">00032</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceacmaes">acmaes</link>&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00033"/>00033 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00034"/><link linkend="_namespaceacmaes_1a8f3b844e07e4684f10852956288758de">00034</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;<link linkend="_namespaceacmaes_1a8f3b844e07e4684f10852956288758de">inverse</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;&amp;indices)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;<link linkend="_namespaceacmaes_1a8f3b844e07e4684f10852956288758de">inverse</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>(indices.size());
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;indices.size();&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceacmaes_1a8f3b844e07e4684f10852956288758de">inverse</link>(indices(i))&#32;=&#32;i;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceacmaes_1a8f3b844e07e4684f10852956288758de">inverse</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00039"/>00039 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00040"/>00040 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00041"/><link linkend="_namespaceacmaes_1aa2100c3aed4c265a18c551b1c748a588">00041</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_namespaceacmaes_1aa2100c3aed4c265a18c551b1c748a588">sequence</link>(<emphasis role="keywordtype">double</emphasis>&#32;start,&#32;<emphasis role="keywordtype">double</emphasis>&#32;end,&#32;<emphasis role="keywordtype">double</emphasis>&#32;step)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;size&#32;=&#32;(int)&#32;((end&#32;-&#32;start)&#32;/&#32;step&#32;+&#32;1);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;d(size);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;value&#32;=&#32;start;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;r&#32;=&#32;0;&#32;r&#32;&lt;&#32;size;&#32;r++)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;d(r)&#32;=&#32;value;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;+=&#32;step;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00050"/>00050 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00051"/>00051 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00052"/><link linkend="_classacmaes_1_1_acmaes_optimizer">00052</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classacmaes_1_1_acmaes_optimizer_1a1a141c42370061770c70d35a2e72e22f">AcmaesOptimizer</link>&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00053"/>00053 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00054"/>00054 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00055"/>00055 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00056"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a1a141c42370061770c70d35a2e72e22f">00056</link> &#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1a141c42370061770c70d35a2e72e22f">AcmaesOptimizer</link>(<emphasis role="keywordtype">long</emphasis>&#32;runid_,&#32;<link linkend="_class_fitness">Fitness</link>&#32;*fitfun_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mu_,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;guess_,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;inputSigma_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxEvaluations_,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;accuracy_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;stopfitness_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;stopTolHistFun_,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;update_gap_,&#32;<emphasis role="keywordtype">long</emphasis>&#32;seed)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;runid&#32;used&#32;for&#32;debugging&#32;/&#32;logging</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a755e250be4d7f61b3d813a4f13a25282">runid</link>&#32;=&#32;runid_;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fitness&#32;function&#32;to&#32;minimize</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>&#32;=&#32;fitfun_;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;initial&#32;guess&#32;for&#32;the&#32;arguments&#32;of&#32;the&#32;fitness&#32;function</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a73710e1f7b550eb765980f6d8205acd2">guess</link>&#32;=&#32;guess_;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;accuracy&#32;=&#32;1.0&#32;is&#32;default,&#32;&gt;&#32;1.0&#32;reduces&#32;accuracy</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1af49bb3ec0e42ef7f4cbfe3934abc026a">accuracy</link>&#32;=&#32;accuracy_;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;objective&#32;variables/problem&#32;dimension</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;=&#32;guess_.size();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;population&#32;size,&#32;offspring&#32;number.&#32;The&#32;primary&#32;strategy&#32;parameter&#32;to&#32;play</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;with,&#32;which&#32;can&#32;be&#32;increased&#32;from&#32;its&#32;default&#32;value.&#32;Increasing&#32;the</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;population&#32;size&#32;improves&#32;global&#32;search&#32;properties&#32;in&#32;exchange&#32;to&#32;speed.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Speed&#32;decreases,&#32;as&#32;a&#32;rule,&#32;at&#32;most&#32;linearly&#32;with&#32;increasing&#32;population</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;size.&#32;It&#32;is&#32;advisable&#32;to&#32;begin&#32;with&#32;the&#32;default&#32;small&#32;population&#32;size.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(popsize_&#32;&gt;&#32;0)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>&#32;=&#32;popsize_;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>&#32;=&#32;4&#32;+&#32;int(3.&#32;*&#32;log(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;individual&#32;sigma&#32;values&#32;-&#32;initial&#32;search&#32;volume.&#32;inputSigma&#32;determines</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;initial&#32;coordinate&#32;wise&#32;standard&#32;deviations&#32;for&#32;the&#32;search.&#32;Setting</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SIGMA&#32;one&#32;third&#32;of&#32;the&#32;initial&#32;search&#32;region&#32;is&#32;appropriate.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(inputSigma_.size()&#32;==&#32;1)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aa64448926972de66e258f3eae95993d4">inputSigma</link>&#32;=&#32;vec::Constant(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;inputSigma_[0]);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aa64448926972de66e258f3eae95993d4">inputSigma</link>&#32;=&#32;inputSigma_;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;overall&#32;standard&#32;deviation&#32;-&#32;search&#32;volume.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aa64448926972de66e258f3eae95993d4">inputSigma</link>.maxCoeff();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;termination&#32;criteria</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;maximal&#32;number&#32;of&#32;evaluations&#32;allowed.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a64b1dc96aadfd73ac75ac18f602a4be5">maxEvaluations</link>&#32;=&#32;maxEvaluations_;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;limit&#32;for&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8257d791e3d09fefa27942e2842a02f5">stopfitness</link>&#32;=&#32;stopfitness_;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stop&#32;if&#32;x-changes&#32;larger&#32;stopTolUpX.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1acd6aa48f968c88bbf105a05bc2b66112">stopTolUpX</link>&#32;=&#32;1e3&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stop&#32;if&#32;x-change&#32;smaller&#32;stopTolX.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a676d55f32118eeb0bdf0546721f9ae23">stopTolX</link>&#32;=&#32;1e-11&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1af49bb3ec0e42ef7f4cbfe3934abc026a">accuracy</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stop&#32;if&#32;fun-changes&#32;smaller&#32;stopTolFun.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a14dd207015f4c247ca4a80c683a8b0f6">stopTolFun</link>&#32;=&#32;1e-12&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1af49bb3ec0e42ef7f4cbfe3934abc026a">accuracy</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stop&#32;if&#32;back&#32;fun-changes&#32;smaller&#32;stopTolHistFun.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a93f72fbef497480928c9e7b04123e930">stopTolHistFun</link>&#32;=&#32;stopTolHistFun_&#32;&lt;&#32;0&#32;?&#32;1e-13&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1af49bb3ec0e42ef7f4cbfe3934abc026a">accuracy</link>&#32;:&#32;stopTolHistFun_;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selection&#32;strategy&#32;parameters</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;parents/points&#32;for&#32;recombination.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9fba5c1ce916fdda28b4e9af75ef693f">mu</link>&#32;=&#32;mu_&#32;&gt;&#32;0&#32;?&#32;mu_&#32;:&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>&#32;/&#32;2;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;array&#32;for&#32;weighted&#32;recombination.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">weights</link>&#32;=&#32;(log(<link linkend="_namespaceacmaes_1aa2100c3aed4c265a18c551b1c748a588">sequence</link>(1,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9fba5c1ce916fdda28b4e9af75ef693f">mu</link>,&#32;1).array())&#32;*&#32;-1.)&#32;+&#32;log(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9fba5c1ce916fdda28b4e9af75ef693f">mu</link>&#32;+&#32;0.5);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;sumw&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">weights</link>.sum();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;sumwq&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">weights</link>.squaredNorm();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">weights</link>&#32;*=&#32;1.&#32;/&#32;sumw;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;variance-effectiveness&#32;of&#32;sum&#32;w_i&#32;x_i.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>&#32;=&#32;sumw&#32;*&#32;sumw&#32;/&#32;sumwq;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00111"/>00111 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dynamic&#32;strategy&#32;parameters&#32;and&#32;constants</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cumulation&#32;constant.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1adda41c9a7372cec6cbe9277c09117829">cc</link>&#32;=&#32;(4.&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>)&#32;/&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;4.&#32;+&#32;2.&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cumulation&#32;constant&#32;for&#32;step-size.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">cs</link>&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>&#32;+&#32;2.)&#32;/&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>&#32;+&#32;3.);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;damping&#32;for&#32;step-size.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a42ca377b32c9aba2a082b73203c7dddd">damps</link>&#32;=&#32;(1.&#32;+&#32;2.&#32;*&#32;std::max(0.,&#32;sqrt((<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>&#32;-&#32;1.)&#32;/&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;1.))&#32;-&#32;1.))
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;max(0.3,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.&#32;-&#32;<emphasis role="comment">//&#32;modification&#32;for&#32;short&#32;runs</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;/&#32;(1e-6&#32;+&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a64b1dc96aadfd73ac75ac18f602a4be5">maxEvaluations</link>/<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>)))
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">cs</link>;&#32;<emphasis role="comment">//&#32;minor&#32;increment</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;learning&#32;rate&#32;for&#32;rank-one&#32;update.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>&#32;=&#32;2.&#32;/&#32;((<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;1.3)&#32;*&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;1.3)&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;learning&#32;rate&#32;for&#32;rank-mu&#32;update&apos;</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">ccovmu</link>&#32;=&#32;min(1.&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2.&#32;*&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>&#32;-&#32;2.&#32;+&#32;1.&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;((<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;2.)&#32;*&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;2.)&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;expectation&#32;of&#32;||N(0,I)||&#32;==&#32;norm(randn(N,1)).</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6bff526b6be45c84a7196b26f9c10375">chiN</link>&#32;=&#32;sqrt(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>)&#32;*&#32;(1.&#32;-&#32;1.&#32;/&#32;(4.&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>)&#32;+&#32;1&#32;/&#32;(21.&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab663ec0cbe33131f3d5c9b5f30236b8b">ccov1Sep</link>&#32;=&#32;min(1.,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>&#32;*&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;1.5)&#32;/&#32;3.);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ac2566f3a92b546f094a7bb8ec5d87de6">ccovmuSep</link>&#32;=&#32;min(1.&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">ccovmu</link>&#32;*&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;1.5)&#32;/&#32;3.);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;lazy&#32;covariance&#32;update&#32;gap</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a56b024cd6dc9dfcc03b282918f905d4d">lazy_update_gap</link>&#32;=
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap_&#32;&gt;=&#32;0&#32;?
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap_&#32;:
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.0&#32;/&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">ccovmu</link>&#32;+&#32;1e-23)&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;/&#32;10.0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;CMA&#32;internal&#32;values&#32;-&#32;updated&#32;each&#32;generation</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;objective&#32;variables.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">xmean</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;encode(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a73710e1f7b550eb765980f6d8205acd2">guess</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;evolution&#32;path.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a3b2ec952c9c29e2c8fe353a7eb7b3a6f">pc</link>&#32;=&#32;<link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link>(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;evolution&#32;path&#32;for&#32;sigma.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a941f1cfcd98230d2022fb506e62b96df">ps</link>&#32;=&#32;<link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link>(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;norm&#32;of&#32;ps,&#32;stored&#32;for&#32;efficiency.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1adffd8b681b2402481801e0cc34b9d6e2">normps</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a941f1cfcd98230d2022fb506e62b96df">ps</link>.norm();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;coordinate&#32;system.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a326b26c7190938716b46310b7985fb1f">B</link>&#32;=&#32;Eigen::MatrixXd::Identity(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;diagonal&#32;of&#32;sqrt(D),&#32;stored&#32;for&#32;efficiency.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aa64448926972de66e258f3eae95993d4">inputSigma</link>&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1af0d9962901e706966ac55076a9123de0">diagC</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.cwiseProduct(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;B*D,&#32;stored&#32;for&#32;efficiency.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a28b375f6c8c9333a8d11169a4b4bbf51">BD</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a326b26c7190938716b46310b7985fb1f">B</link>.cwiseProduct(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.transpose().replicate(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;1));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;covariance&#32;matrix.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a326b26c7190938716b46310b7985fb1f">B</link>&#32;*&#32;(Eigen::MatrixXd::Identity(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>)&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a326b26c7190938716b46310b7985fb1f">B</link>.transpose());
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;iterations.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>&#32;=&#32;1;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;size&#32;of&#32;history&#32;queue&#32;of&#32;best&#32;values.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a51907ba6ceea0937ac45997d424ca5ed">historySize</link>&#32;=&#32;10&#32;+&#32;int(3.&#32;*&#32;10.&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stop&#32;criteria</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;best&#32;value&#32;so&#32;far</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a13682ca7e26ba1755a7a7b09d446ac8a">bestValue</link>&#32;=&#32;DBL_MAX;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;best&#32;parameters&#32;so&#32;far</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1acfda423e0a6771582cf79f67f0e66954">bestX</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a73710e1f7b550eb765980f6d8205acd2">guess</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;history&#32;queue&#32;of&#32;best&#32;values.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">fitnessHistory</link>&#32;=&#32;vec::Constant(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a51907ba6ceea0937ac45997d424ca5ed">historySize</link>,&#32;DBL_MAX);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">fitnessHistory</link>(0)&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a13682ca7e26ba1755a7a7b09d446ac8a">bestValue</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6484fd82e910d1481f21c2c85a267f56">rs</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;pcg64(seed);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00170"/>00170 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822ff0e80ba2c337ea65b4b361d7b332">computeArz</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae72ada0035312e1bb1edf6ad35204f71">fitness</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a54b9d653087f054270a377aeafa63e02">arx</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00175"/>00175 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00176"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ad1c4b82ea7f71d9d61f45fc4978cc734">00176</link> &#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad1c4b82ea7f71d9d61f45fc4978cc734">~AcmaesOptimizer</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6484fd82e910d1481f21c2c85a267f56">rs</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00179"/>00179 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;param&#32;zmean&#32;weighted&#32;row&#32;matrix&#32;of&#32;the&#32;gaussian&#32;random&#32;numbers&#32;generating&#32;the&#32;current&#32;offspring</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;param&#32;xold&#32;xmean&#32;matrix&#32;of&#32;the&#32;previous&#32;generation</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;return&#32;hsig&#32;flag&#32;indicating&#32;a&#32;small&#32;correction</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00183"/>00183 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00184"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ae9f3415b9bcc43366193e7d4b0beda87">00184</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae9f3415b9bcc43366193e7d4b0beda87">updateEvolutionPaths</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;zmean,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;xold)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a941f1cfcd98230d2022fb506e62b96df">ps</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a941f1cfcd98230d2022fb506e62b96df">ps</link>&#32;*&#32;(1.&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">cs</link>)&#32;+&#32;((<link linkend="_classacmaes_1_1_acmaes_optimizer_1a326b26c7190938716b46310b7985fb1f">B</link>&#32;*&#32;zmean)&#32;*&#32;sqrt(<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">cs</link>&#32;*&#32;(2.&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">cs</link>)&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1adffd8b681b2402481801e0cc34b9d6e2">normps</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a941f1cfcd98230d2022fb506e62b96df">ps</link>.norm();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hsig&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1adffd8b681b2402481801e0cc34b9d6e2">normps</link>&#32;/&#32;sqrt(1.&#32;-&#32;pow(1.&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">cs</link>,&#32;2.&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>))&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6bff526b6be45c84a7196b26f9c10375">chiN</link>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&#32;1.4&#32;+&#32;2.&#32;/&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;1.);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a3b2ec952c9c29e2c8fe353a7eb7b3a6f">pc</link>&#32;*=&#32;(1.&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1adda41c9a7372cec6cbe9277c09117829">cc</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hsig)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a3b2ec952c9c29e2c8fe353a7eb7b3a6f">pc</link>&#32;+=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">xmean</link>&#32;-&#32;xold)&#32;*&#32;(sqrt(<link linkend="_classacmaes_1_1_acmaes_optimizer_1adda41c9a7372cec6cbe9277c09117829">cc</link>&#32;*&#32;(2.&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1adda41c9a7372cec6cbe9277c09117829">cc</link>)&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>)&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hsig;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00194"/>00194 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;param&#32;hsig&#32;flag&#32;indicating&#32;a&#32;small&#32;correction</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;param&#32;bestArx&#32;fitness-sorted&#32;matrix&#32;of&#32;the&#32;argument&#32;vectors&#32;producing&#32;the&#32;current&#32;offspring</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;param&#32;arz&#32;unsorted&#32;matrix&#32;containing&#32;the&#32;gaussian&#32;random&#32;values&#32;of&#32;the&#32;current&#32;offspring</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;param&#32;arindex&#32;indices&#32;indicating&#32;the&#32;fitness-order&#32;of&#32;the&#32;current&#32;offspring</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;param&#32;xold&#32;xmean&#32;matrix&#32;of&#32;the&#32;previous&#32;generation</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00200"/>00200 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00201"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a911e67d9e8445b3a8be575f184341b8e">00201</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a911e67d9e8445b3a8be575f184341b8e">updateCovariance</link>(<emphasis role="keywordtype">bool</emphasis>&#32;hsig,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;&amp;bestArx,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;&amp;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29fdebcd5e9fe0daa7d3ab4b6b4eaf66">arz</link>,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;&amp;arindex,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;&amp;xold)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;negccov&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">ccovmu</link>&#32;&gt;&#32;0)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;arpos&#32;=&#32;(bestArx&#32;-&#32;xold.replicate(1,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9fba5c1ce916fdda28b4e9af75ef693f">mu</link>))&#32;*&#32;(1.&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>);&#32;<emphasis role="comment">//&#32;mu&#32;difference&#32;vectors</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;roneu&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a3b2ec952c9c29e2c8fe353a7eb7b3a6f">pc</link>&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a3b2ec952c9c29e2c8fe353a7eb7b3a6f">pc</link>.transpose()&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;minor&#32;correction&#32;if&#32;hsig==false</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;oldFac&#32;=&#32;hsig&#32;?&#32;0&#32;:&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1adda41c9a7372cec6cbe9277c09117829">cc</link>&#32;*&#32;(2.&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1adda41c9a7372cec6cbe9277c09117829">cc</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldFac&#32;+=&#32;1.&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">ccovmu</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Adapt&#32;covariance&#32;matrix&#32;C&#32;active&#32;CMA</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negccov&#32;=&#32;(1.&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">ccovmu</link>)&#32;*&#32;0.25&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;(pow(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;+&#32;2.,&#32;1.5)&#32;+&#32;2.&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;negminresidualvariance&#32;=&#32;0.66;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;keep&#32;at&#32;least&#32;0.66&#32;in&#32;all&#32;directions,&#32;small&#32;popsize&#32;are&#32;most&#32;critical</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;negalphaold&#32;=&#32;0.5;&#32;<emphasis role="comment">//&#32;where&#32;to&#32;make&#32;up&#32;for&#32;the&#32;variance&#32;loss,</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;prepare&#32;vectors,&#32;compute&#32;negative&#32;updating&#32;matrix&#32;Cneg</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;arReverseIndex&#32;=&#32;arindex.reverse();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;arzneg&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29fdebcd5e9fe0daa7d3ab4b6b4eaf66">arz</link>(Eigen::indexing::all,&#32;arReverseIndex.head(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9fba5c1ce916fdda28b4e9af75ef693f">mu</link>));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;arnorms&#32;=&#32;arzneg.colwise().norm();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;idxnorms&#32;=&#32;<link linkend="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c">sort_index</link>(arnorms);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;arnormsSorted&#32;=&#32;arnorms(idxnorms);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;idxReverse&#32;=&#32;idxnorms.reverse();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;arnormsReverse&#32;=&#32;arnorms(idxReverse);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arnorms&#32;=&#32;arnormsReverse.cwiseQuotient(arnormsSorted);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;arnormsInv&#32;=&#32;arnorms(<link linkend="_namespaceacmaes_1a8f3b844e07e4684f10852956288758de">inverse</link>(idxnorms));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;sqarnw&#32;=&#32;arnormsInv.cwiseProduct(arnormsInv).transpose()
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">weights</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;negcovMax&#32;=&#32;(1.&#32;-&#32;negminresidualvariance)&#32;/&#32;sqarnw(0);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(negccov&#32;&gt;&#32;negcovMax)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negccov&#32;=&#32;negcovMax;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arzneg&#32;=&#32;arzneg.cwiseProduct(
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arnormsInv.transpose().replicate(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;1));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;artmp&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a28b375f6c8c9333a8d11169a4b4bbf51">BD</link>&#32;*&#32;arzneg;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;Cneg&#32;=&#32;artmp&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">weights</link>.asDiagonal()&#32;*&#32;artmp.transpose();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldFac&#32;+=&#32;negalphaold&#32;*&#32;negccov;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>&#32;*&#32;oldFac)&#32;+&#32;roneu
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(arpos&#32;*&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">ccovmu</link>&#32;+&#32;(1.&#32;-&#32;negalphaold)&#32;*&#32;negccov)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">weights</link>.replicate(1,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>).cwiseProduct(
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arpos.transpose()))&#32;-&#32;(Cneg&#32;*&#32;negccov);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;negccov;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00243"/>00243 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;B&#32;and&#32;diagD&#32;from&#32;C</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;param&#32;negccov&#32;Negative&#32;covariance&#32;factor.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00246"/>00246 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00247"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a6e1292651cf19abf87f9ece1aa9c92d7">00247</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6e1292651cf19abf87f9ece1aa9c92d7">updateBD</link>(<emphasis role="keywordtype">double</emphasis>&#32;negccov)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00248"/>00248 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">ccovmu</link>&#32;+&#32;negccov&#32;&gt;&#32;0
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(std::fmod(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.&#32;/&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">ccovmu</link>&#32;+&#32;negccov)&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;/&#32;10.))&#32;&lt;&#32;1.)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;achieve&#32;O(N^2)&#32;enforce&#32;symmetry&#32;to&#32;prevent&#32;complex&#32;numbers</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;triC&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>.triangularView&lt;Eigen::Upper&gt;();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;triC1&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>.triangularView&lt;Eigen::StrictlyUpper&gt;();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>&#32;=&#32;triC&#32;+&#32;triC1.transpose();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Eigen::SelfAdjointEigenSolver&lt;mat&gt;&#32;sades;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sades.compute(<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;diagD&#32;defines&#32;the&#32;scaling</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>&#32;=&#32;sades.eigenvalues();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a326b26c7190938716b46310b7985fb1f">B</link>&#32;=&#32;sades.eigenvectors();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.minCoeff()&#32;&lt;=&#32;0)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>;&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>(i,&#32;0)&#32;&lt;&#32;0)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>(i,&#32;0)&#32;=&#32;0.;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;tfac&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.maxCoeff()&#32;/&#32;1e14;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>&#32;+=&#32;Eigen::MatrixXd::Identity(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>)&#32;*&#32;tfac;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>&#32;+=&#32;vec::Constant(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;1.0)&#32;*&#32;tfac;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.maxCoeff()&#32;&gt;&#32;1e14&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.minCoeff())&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;tfac&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.maxCoeff()&#32;/&#32;1e14&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.minCoeff();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>&#32;+=&#32;Eigen::MatrixXd::Identity(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>)&#32;*&#32;tfac;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>&#32;+=&#32;vec::Constant(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;1.0)&#32;*&#32;tfac;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1af0d9962901e706966ac55076a9123de0">diagC</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>.diagonal();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.cwiseSqrt();&#32;<emphasis role="comment">//&#32;D&#32;contains&#32;standard&#32;deviations&#32;now</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a28b375f6c8c9333a8d11169a4b4bbf51">BD</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a326b26c7190938716b46310b7985fb1f">B</link>.cwiseProduct(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.transpose().replicate(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;1));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00279"/>00279 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00280"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ae6ef63f98f9b5b9034438301df2ca323">00280</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae6ef63f98f9b5b9034438301df2ca323">ask_all</link>()&#32;{&#32;<emphasis role="comment">//&#32;undecoded</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;generate&#32;popsize&#32;offspring.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29fdebcd5e9fe0daa7d3ab4b6b4eaf66">arz</link>&#32;=&#32;<link linkend="_evaluator_8h_1a231544ac51b3f9312c104a3b7a3c49a6">normal</link>(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>,&#32;*<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6484fd82e910d1481f21c2c85a267f56">rs</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;xs(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;k&#32;=&#32;0;&#32;k&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>;&#32;k++)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;delta&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a28b375f6c8c9333a8d11169a4b4bbf51">BD</link>&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29fdebcd5e9fe0daa7d3ab4b6b4eaf66">arz</link>.col(k))&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs.col(k)&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;getClosestFeasibleNormed(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">xmean</link>&#32;+&#32;delta);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822ff0e80ba2c337ea65b4b361d7b332">computeArz</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xs;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00291"/>00291 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00292"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ad73e4ffab0c5d511107d58491540de24">00292</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad73e4ffab0c5d511107d58491540de24">tell_all</link>(<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;ys,&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;xs)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1afeb20b9c89d465d55e43c1da48beba53">told</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>;&#32;p++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ac1703b5f2c650cf8da235ea475e17d6f">tell</link>(ys(p),&#32;xs.col(p));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822ff0e80ba2c337ea65b4b361d7b332">computeArz</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00299"/>00299 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00300"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1aaabb9e299b54d36fc3244bfc05184e27">00300</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aaabb9e299b54d36fc3244bfc05184e27">tell_all_asked</link>(<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;ys,&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;xs)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1afeb20b9c89d465d55e43c1da48beba53">told</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>;&#32;p++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ac1703b5f2c650cf8da235ea475e17d6f">tell</link>(ys(p),&#32;xs.col(p));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822ff0e80ba2c337ea65b4b361d7b332">computeArz</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00307"/>00307 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00308"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a7e8a9548f7c49fb789b98f6570d5ea7b">00308</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7e8a9548f7c49fb789b98f6570d5ea7b">getPopulation</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;pop(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>;&#32;p++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pop.col(p)&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;decode(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;getClosestFeasibleNormed(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6d351621f77f58b69bdaedbd3f12c5e7">popX</link>.col(p)));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pop;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00314"/>00314 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00315"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a76117dfd997b8f098304f5d4f0fbf52e">00315</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a76117dfd997b8f098304f5d4f0fbf52e">ask</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ask&#32;for&#32;one&#32;new&#32;argument&#32;vector.</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;arz1&#32;=&#32;<link linkend="_evaluator_8h_1a5b652df2286e1f0c4dae7d4dd841bb8f">normalVec</link>(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;*<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6484fd82e910d1481f21c2c85a267f56">rs</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;delta&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a28b375f6c8c9333a8d11169a4b4bbf51">BD</link>&#32;*&#32;arz1)&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;arx1&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;getClosestFeasibleNormed(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">xmean</link>&#32;+&#32;delta);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822ff0e80ba2c337ea65b4b361d7b332">computeArz</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;arx1;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00323"/>00323 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00324"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ac1703b5f2c650cf8da235ea475e17d6f">00324</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ac1703b5f2c650cf8da235ea475e17d6f">tell</link>(<emphasis role="keywordtype">double</emphasis>&#32;y,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//tell&#32;function&#32;value&#32;for&#32;a&#32;argument&#32;list&#32;retrieved&#32;by&#32;ask_one().</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae72ada0035312e1bb1edf6ad35204f71">fitness</link>[<link linkend="_classacmaes_1_1_acmaes_optimizer_1afeb20b9c89d465d55e43c1da48beba53">told</link>]&#32;=&#32;isfinite(y)&#32;?&#32;y&#32;:&#32;DBL_MAX;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a54b9d653087f054270a377aeafa63e02">arx</link>.col(<link linkend="_classacmaes_1_1_acmaes_optimizer_1afeb20b9c89d465d55e43c1da48beba53">told</link>)&#32;=&#32;x;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1afeb20b9c89d465d55e43c1da48beba53">told</link>++;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1afeb20b9c89d465d55e43c1da48beba53">told</link>&#32;&gt;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">xmean</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;getClosestFeasibleNormed(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">xmean</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822ff0e80ba2c337ea65b4b361d7b332">computeArz</link>)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29fdebcd5e9fe0daa7d3ab4b6b4eaf66">arz</link>&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a28b375f6c8c9333a8d11169a4b4bbf51">BD</link>.inverse()
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;((<link linkend="_classacmaes_1_1_acmaes_optimizer_1a54b9d653087f054270a377aeafa63e02">arx</link>&#32;-&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">xmean</link>.replicate(1,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>))&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(std::exception&#32;&amp;e)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29fdebcd5e9fe0daa7d3ab4b6b4eaf66">arz</link>&#32;=&#32;<link linkend="_evaluator_8h_1a231544ac51b3f9312c104a3b7a3c49a6">normal</link>(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>,&#32;*<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6484fd82e910d1481f21c2c85a267f56">rs</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a36c0bd51d20f3c63e8cadf76421fc5d4">updateCMA</link>();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1afeb20b9c89d465d55e43c1da48beba53">told</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>&#32;+=&#32;1;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00345"/>00345 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00346"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a36c0bd51d20f3c63e8cadf76421fc5d4">00346</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a36c0bd51d20f3c63e8cadf76421fc5d4">updateCMA</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sort&#32;by&#32;fitness&#32;and&#32;compute&#32;weighted&#32;mean&#32;into&#32;xmean</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;arindex&#32;=&#32;<link linkend="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c">sort_index</link>(<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae72ada0035312e1bb1edf6ad35204f71">fitness</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;new&#32;xmean,&#32;this&#32;is&#32;selection&#32;and&#32;recombination</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;xold&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">xmean</link>;&#32;<emphasis role="comment">//&#32;for&#32;speed&#32;up&#32;of&#32;Eq.&#32;(2)&#32;and&#32;(3)</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;bestIndex&#32;=&#32;arindex.head(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9fba5c1ce916fdda28b4e9af75ef693f">mu</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;bestArx&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a54b9d653087f054270a377aeafa63e02">arx</link>(Eigen::indexing::all,&#32;bestIndex);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">xmean</link>&#32;=&#32;bestArx&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">weights</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;bestArz&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29fdebcd5e9fe0daa7d3ab4b6b4eaf66">arz</link>(Eigen::indexing::all,&#32;bestIndex);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;zmean&#32;=&#32;bestArz&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">weights</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hsig&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae9f3415b9bcc43366193e7d4b0beda87">updateEvolutionPaths</link>(zmean,&#32;xold);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;adapt&#32;step&#32;size&#32;sigma</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>&#32;*=&#32;exp(min(1.0,&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1adffd8b681b2402481801e0cc34b9d6e2">normps</link>&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6bff526b6be45c84a7196b26f9c10375">chiN</link>&#32;-&#32;1.)&#32;*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">cs</link>&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a42ca377b32c9aba2a082b73203c7dddd">damps</link>));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;bestFitness&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae72ada0035312e1bb1edf6ad35204f71">fitness</link>(arindex(0));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;worstFitness&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae72ada0035312e1bb1edf6ad35204f71">fitness</link>(arindex(arindex.size()&#32;-&#32;1));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a13682ca7e26ba1755a7a7b09d446ac8a">bestValue</link>&#32;&gt;&#32;bestFitness)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a13682ca7e26ba1755a7a7b09d446ac8a">bestValue</link>&#32;=&#32;bestFitness;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1acfda423e0a6771582cf79f67f0e66954">bestX</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;decode(bestArx.col(0));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isfinite(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8257d791e3d09fefa27942e2842a02f5">stopfitness</link>)&#32;&amp;&amp;&#32;bestFitness&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8257d791e3d09fefa27942e2842a02f5">stopfitness</link>)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;=&#32;1;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>&#32;&gt;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad2efb063f4c0954c1870313b98667bd0">last_update</link>&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a56b024cd6dc9dfcc03b282918f905d4d">lazy_update_gap</link>)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad2efb063f4c0954c1870313b98667bd0">last_update</link>&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;negccov&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a911e67d9e8445b3a8be575f184341b8e">updateCovariance</link>(hsig,&#32;bestArx,&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29fdebcd5e9fe0daa7d3ab4b6b4eaf66">arz</link>,&#32;arindex,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xold);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6e1292651cf19abf87f9ece1aa9c92d7">updateBD</link>(negccov);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;handle&#32;termination&#32;criteria</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;sqrtDiagC&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1af0d9962901e706966ac55076a9123de0">diagC</link>.cwiseSqrt();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;pcCol&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a3b2ec952c9c29e2c8fe353a7eb7b3a6f">pc</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>;&#32;i++)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>&#32;*&#32;(max(abs(pcCol[i]),&#32;sqrtDiagC[i]))&#32;&gt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a676d55f32118eeb0bdf0546721f9ae23">stopTolX</link>)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>&#32;-&#32;1)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;=&#32;2;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;&gt;&#32;0)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>;&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>&#32;*&#32;sqrtDiagC[i]&#32;&gt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1acd6aa48f968c88bbf105a05bc2b66112">stopTolUpX</link>)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;=&#32;3;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;&gt;&#32;0)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;historyBest&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">fitnessHistory</link>.minCoeff();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;historyWorst&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">fitnessHistory</link>.maxCoeff();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>&#32;&gt;&#32;2
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;max(historyWorst,&#32;worstFitness)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;min(historyBest,&#32;bestFitness)&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a14dd207015f4c247ca4a80c683a8b0f6">stopTolFun</link>)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;=&#32;4;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>&#32;&gt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">fitnessHistory</link>.size()
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;historyWorst&#32;-&#32;historyBest&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a93f72fbef497480928c9e7b04123e930">stopTolHistFun</link>)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;=&#32;5;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;condition&#32;number&#32;of&#32;the&#32;covariance&#32;matrix&#32;exceeds&#32;1e14</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.maxCoeff()&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>.minCoeff()&#32;&gt;&#32;1e7&#32;*&#32;1.0&#32;/&#32;sqrt(<link linkend="_classacmaes_1_1_acmaes_optimizer_1af49bb3ec0e42ef7f4cbfe3934abc026a">accuracy</link>))&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;=&#32;6;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;adjust&#32;step&#32;size&#32;in&#32;case&#32;of&#32;equal&#32;function&#32;values&#32;(flat&#32;fitness)</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a13682ca7e26ba1755a7a7b09d446ac8a">bestValue</link>&#32;==&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae72ada0035312e1bb1edf6ad35204f71">fitness</link>[arindex[(<emphasis role="keywordtype">int</emphasis>)&#32;(0.1&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>&#32;/&#32;4.)]])&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>&#32;*=&#32;exp(0.2&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">cs</link>&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a42ca377b32c9aba2a082b73203c7dddd">damps</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>&#32;&gt;&#32;2
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;max(historyWorst,&#32;bestFitness)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;std::min(historyBest,&#32;bestFitness)&#32;==&#32;0)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>&#32;*=&#32;::exp(0.2&#32;+&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">cs</link>&#32;/&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a42ca377b32c9aba2a082b73203c7dddd">damps</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;store&#32;best&#32;in&#32;history</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">fitnessHistory</link>.size();&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">fitnessHistory</link>[i]&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">fitnessHistory</link>[i&#32;-&#32;1];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">fitnessHistory</link>[0]&#32;=&#32;bestFitness;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00423"/>00423 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00424"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a6ffd7f760692210629187fea1b98007c">00424</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6ffd7f760692210629187fea1b98007c">doOptimize</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00425"/>00425 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;--------------------&#32;Generation&#32;Loop&#32;--------------------------------</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;resetEvaluations();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;evaluations()&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a64b1dc96aadfd73ac75ac18f602a4be5">maxEvaluations</link>&#32;&amp;&amp;&#32;!<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;terminate())&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;generate&#32;and&#32;evaluate&#32;popsize&#32;offspring</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;xs&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae6ef63f98f9b5b9034438301df2ca323">ask_all</link>();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;ys(<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;values(xs,&#32;ys);&#32;<emphasis role="comment">//&#32;decodes</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1afeb20b9c89d465d55e43c1da48beba53">told</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;k&#32;=&#32;0;&#32;k&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>&#32;&amp;&amp;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;==&#32;0;&#32;k++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ac1703b5f2c650cf8da235ea475e17d6f">tell</link>(ys(k),&#32;xs.col(k));&#32;<emphasis role="comment">//&#32;tell&#32;encoded</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;!=&#32;0)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;evaluations();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;evaluations();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00442"/>00442 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00443"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ab3af1e3acb2561d4b0be23b402b232a9">00443</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab3af1e3acb2561d4b0be23b402b232a9">do_optimize_delayed_update</link>(<emphasis role="keywordtype">int</emphasis>&#32;workers)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;resetEvaluations();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classevaluator">evaluator</link>&#32;eval(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>,&#32;1,&#32;workers);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;evals_x[workers];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fill&#32;eval&#32;queue&#32;with&#32;initial&#32;population</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;workers;&#32;i++)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a76117dfd997b8f098304f5d4f0fbf52e">ask</link>();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;xdec&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;decode(x);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eval.<link linkend="_classevaluator_1a62e9fb557b5a2ecfabc49a01eb7f59d5">evaluate</link>(xdec,&#32;i);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals_x[i]&#32;=&#32;x;&#32;<emphasis role="comment">//&#32;encoded</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;evaluations()&#32;&lt;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a64b1dc96aadfd73ac75ac18f602a4be5">maxEvaluations</link>)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structvec__id">vec_id</link>*&#32;vid&#32;=&#32;eval.<link linkend="_classevaluator_1a71fc6fd970c9d9f19af8202500c51b05">result</link>();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;y&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(vid-&gt;<link linkend="_structvec__id_1af5bf436ff9f915e145a897a73e4cdac9">_v</link>);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;vid-&gt;<link linkend="_structvec__id_1a126c3cb731d047e25c08742f735f0f13">_id</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;vid;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;evals_x[p];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ac1703b5f2c650cf8da235ea475e17d6f">tell</link>(y(0),&#32;x);&#32;<emphasis role="comment">//&#32;tell&#32;evaluated&#32;encoded&#32;x</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;evaluations()&#32;&gt;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a64b1dc96aadfd73ac75ac18f602a4be5">maxEvaluations</link>&#32;||&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>&#32;!=&#32;0)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a76117dfd997b8f098304f5d4f0fbf52e">ask</link>();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eval.<link linkend="_classevaluator_1a62e9fb557b5a2ecfabc49a01eb7f59d5">evaluate</link>(x,&#32;p);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals_x[p]&#32;=&#32;x;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>-&gt;evaluations();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00470"/>00470 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00471"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ae23d2ccb359090f4e5c2c162b7d6a4bf">00471</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae23d2ccb359090f4e5c2c162b7d6a4bf">getBestX</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1acfda423e0a6771582cf79f67f0e66954">bestX</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00474"/>00474 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00475"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a0d762f718e82fecd480762662f480e1a">00475</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a0d762f718e82fecd480762662f480e1a">getBestValue</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a13682ca7e26ba1755a7a7b09d446ac8a">bestValue</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00478"/>00478 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00479"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a60785f3698538af538a606d1eea6c908">00479</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a60785f3698538af538a606d1eea6c908">getIterations</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00482"/>00482 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00483"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a1b182abe1e3428733780dc6fe0b669e0">00483</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1b182abe1e3428733780dc6fe0b669e0">getStop</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00486"/>00486 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00487"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a8f2c15cc704f0ce15f6cc875522e2d5e">00487</link> &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8f2c15cc704f0ce15f6cc875522e2d5e">getFitfun</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00490"/>00490 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00491"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ae9ccb84da924f3a0df38032ac09298a8">00491</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae9ccb84da924f3a0df38032ac09298a8">getDim</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00494"/>00494 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00495"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a224ece6966b6635c9912673e06457697">00495</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a224ece6966b6635c9912673e06457697">getPopsize</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00498"/>00498 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00499"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1aba0ace56e07ab7c89e6f380a168f88a1">00499</link> &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aba0ace56e07ab7c89e6f380a168f88a1">getFitfunPar</link>()&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00501"/>00501 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00502"/>00502 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00503"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a6d351621f77f58b69bdaedbd3f12c5e7">00503</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6d351621f77f58b69bdaedbd3f12c5e7">popX</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00504"/>00504 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00505"/>00505 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00506"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a755e250be4d7f61b3d813a4f13a25282">00506</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a755e250be4d7f61b3d813a4f13a25282">runid</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00507"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">00507</link> &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>&#32;*<link linkend="_classacmaes_1_1_acmaes_optimizer_1a94047d045c240637d027ceb4ef111a95">fitfun</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00508"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a73710e1f7b550eb765980f6d8205acd2">00508</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a73710e1f7b550eb765980f6d8205acd2">guess</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00509"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1af49bb3ec0e42ef7f4cbfe3934abc026a">00509</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1af49bb3ec0e42ef7f4cbfe3934abc026a">accuracy</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00510"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">00510</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1abc8fbb4d336cd6525618902f212e9071">popsize</link>;&#32;<emphasis role="comment">//&#32;population&#32;size</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00511"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1aa64448926972de66e258f3eae95993d4">00511</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aa64448926972de66e258f3eae95993d4">inputSigma</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00512"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">00512</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29e0940b9fe073e2cf0879010ddd619a">dim</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00513"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a64b1dc96aadfd73ac75ac18f602a4be5">00513</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a64b1dc96aadfd73ac75ac18f602a4be5">maxEvaluations</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00514"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a8257d791e3d09fefa27942e2842a02f5">00514</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8257d791e3d09fefa27942e2842a02f5">stopfitness</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00515"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1acd6aa48f968c88bbf105a05bc2b66112">00515</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1acd6aa48f968c88bbf105a05bc2b66112">stopTolUpX</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00516"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a676d55f32118eeb0bdf0546721f9ae23">00516</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a676d55f32118eeb0bdf0546721f9ae23">stopTolX</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00517"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a14dd207015f4c247ca4a80c683a8b0f6">00517</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a14dd207015f4c247ca4a80c683a8b0f6">stopTolFun</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00518"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a93f72fbef497480928c9e7b04123e930">00518</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a93f72fbef497480928c9e7b04123e930">stopTolHistFun</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00519"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a9fba5c1ce916fdda28b4e9af75ef693f">00519</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9fba5c1ce916fdda28b4e9af75ef693f">mu</link>;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00520"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">00520</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a535998e869d050bac252c34d8b570b0f">weights</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00521"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">00521</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a12077354f7b80409fe6506c29b4f9d05">mueff</link>;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00522"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">00522</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a9290a3cb7cec20b03d78ccc1b53a06dc">sigma</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00523"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1adda41c9a7372cec6cbe9277c09117829">00523</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1adda41c9a7372cec6cbe9277c09117829">cc</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00524"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">00524</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab72d93c09c86ab626df76157673b5d57">cs</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00525"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a42ca377b32c9aba2a082b73203c7dddd">00525</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a42ca377b32c9aba2a082b73203c7dddd">damps</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00526"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">00526</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a8a406c0b2eac5e1e7c775e6951858172">ccov1</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00527"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">00527</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad5f6392eb25c1d4afeeab490c8d1556f">ccovmu</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00528"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a6bff526b6be45c84a7196b26f9c10375">00528</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6bff526b6be45c84a7196b26f9c10375">chiN</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00529"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ab663ec0cbe33131f3d5c9b5f30236b8b">00529</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ab663ec0cbe33131f3d5c9b5f30236b8b">ccov1Sep</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00530"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ac2566f3a92b546f094a7bb8ec5d87de6">00530</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ac2566f3a92b546f094a7bb8ec5d87de6">ccovmuSep</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00531"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a56b024cd6dc9dfcc03b282918f905d4d">00531</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a56b024cd6dc9dfcc03b282918f905d4d">lazy_update_gap</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00532"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">00532</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a7824c6afa9a2633c7e24d71db2f52787">xmean</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00533"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a3b2ec952c9c29e2c8fe353a7eb7b3a6f">00533</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a3b2ec952c9c29e2c8fe353a7eb7b3a6f">pc</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00534"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a941f1cfcd98230d2022fb506e62b96df">00534</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a941f1cfcd98230d2022fb506e62b96df">ps</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00535"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1adffd8b681b2402481801e0cc34b9d6e2">00535</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1adffd8b681b2402481801e0cc34b9d6e2">normps</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00536"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a326b26c7190938716b46310b7985fb1f">00536</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a326b26c7190938716b46310b7985fb1f">B</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00537"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a28b375f6c8c9333a8d11169a4b4bbf51">00537</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a28b375f6c8c9333a8d11169a4b4bbf51">BD</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00538"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">00538</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822048c321fe48fe4615a8fcb92e31a7">diagD</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00539"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">00539</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1aff3401adacb15732828daef99c6d7dab">C</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00540"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1af0d9962901e706966ac55076a9123de0">00540</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1af0d9962901e706966ac55076a9123de0">diagC</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00541"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a29fdebcd5e9fe0daa7d3ab4b6b4eaf66">00541</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a29fdebcd5e9fe0daa7d3ab4b6b4eaf66">arz</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00542"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a54b9d653087f054270a377aeafa63e02">00542</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a54b9d653087f054270a377aeafa63e02">arx</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00543"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ae72ada0035312e1bb1edf6ad35204f71">00543</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ae72ada0035312e1bb1edf6ad35204f71">fitness</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00544"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">00544</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a2c9bbb5f803acf531a67986025d0e913">iterations</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00545"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1ad2efb063f4c0954c1870313b98667bd0">00545</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1ad2efb063f4c0954c1870313b98667bd0">last_update</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00546"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">00546</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a4f8eb45ad2bbe6ee494dc655173f2f86">fitnessHistory</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00547"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a51907ba6ceea0937ac45997d424ca5ed">00547</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a51907ba6ceea0937ac45997d424ca5ed">historySize</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00548"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a13682ca7e26ba1755a7a7b09d446ac8a">00548</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a13682ca7e26ba1755a7a7b09d446ac8a">bestValue</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00549"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1acfda423e0a6771582cf79f67f0e66954">00549</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1acfda423e0a6771582cf79f67f0e66954">bestX</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00550"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">00550</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a1529659459b814102415217b9ce822c6">stop</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00551"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1afeb20b9c89d465d55e43c1da48beba53">00551</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1afeb20b9c89d465d55e43c1da48beba53">told</link>&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00552"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a6484fd82e910d1481f21c2c85a267f56">00552</link> &#32;&#32;&#32;&#32;pcg64&#32;*<link linkend="_classacmaes_1_1_acmaes_optimizer_1a6484fd82e910d1481f21c2c85a267f56">rs</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00553"/><link linkend="_classacmaes_1_1_acmaes_optimizer_1a822ff0e80ba2c337ea65b4b361d7b332">00553</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer_1a822ff0e80ba2c337ea65b4b361d7b332">computeArz</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00554"/>00554 };
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00555"/>00555 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00556"/>00556 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00557"/>00557 <emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespaceacmaes">acmaes</link>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00558"/>00558 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00559"/>00559 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00560"/><link linkend="_acmaesoptimizer_8cpp_1afc81c91b36bdd348c03d272ec53f027a">00560</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_acmaesoptimizer_8cpp_1afc81c91b36bdd348c03d272ec53f027a">optimizeACMA_C</link>(<emphasis role="keywordtype">long</emphasis>&#32;runid,&#32;<link linkend="_evaluator_8h_1af419da391481d5e767cbe038009da309">callback_type</link>&#32;func,&#32;<link linkend="_evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc">callback_parallel</link>&#32;func_par,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;*init,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*lower,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*upper,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*sigma,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxEvals,&#32;<emphasis role="keywordtype">double</emphasis>&#32;stopfitness,&#32;<emphasis role="keywordtype">double</emphasis>&#32;stopTolHistFun,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mu,&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize,&#32;<emphasis role="keywordtype">double</emphasis>&#32;accuracy,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;seed,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;normalize,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use_delayed_update,&#32;<emphasis role="keywordtype">int</emphasis>&#32;update_gap,&#32;<emphasis role="keywordtype">int</emphasis>&#32;workers,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;res)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00564"/>00564 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00565"/>00565 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;guess(dim),&#32;lower_limit(dim),&#32;upper_limit(dim),&#32;inputSigma(dim);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00566"/>00566 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{<emphasis role="comment">//&#32;guess&#32;is&#32;mandatory</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess[i]&#32;=&#32;init[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputSigma[i]&#32;=&#32;sigma[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00569"/>00569 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00570"/>00570 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lower&#32;!=&#32;NULL&#32;&amp;&amp;&#32;upper&#32;!=&#32;NULL)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess[i]&#32;=&#32;init[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit[i]&#32;=&#32;lower[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit[i]&#32;=&#32;upper[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00576"/>00576 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit.resize(0);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit.resize(0);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00580"/>00580 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00581"/>00581 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00582"/>00582 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>&#32;fitfun(func,&#32;func_par,&#32;dim,&#32;1,&#32;lower_limit,&#32;upper_limit);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00583"/>00583 &#32;&#32;&#32;&#32;fitfun.<link linkend="_class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6">setNormalize</link>(normalize);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00584"/>00584 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00585"/>00585 &#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>&#32;opt(runid,&#32;&amp;fitfun,&#32;popsize,&#32;mu,&#32;guess,&#32;inputSigma,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxEvals,&#32;accuracy,&#32;stopfitness,&#32;stopTolHistFun,&#32;update_gap,&#32;seed);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00587"/>00587 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;evals&#32;=&#32;0;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(workers&#32;&gt;&#32;1&#32;&amp;&amp;&#32;use_delayed_update)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;opt.do_optimize_delayed_update(workers);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;opt.doOptimize();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;bestX&#32;=&#32;opt.getBestX();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;bestY&#32;=&#32;opt.getBestValue();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[i]&#32;=&#32;bestX[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[dim]&#32;=&#32;bestY;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[dim&#32;+&#32;1]&#32;=&#32;evals;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[dim&#32;+&#32;2]&#32;=&#32;opt.getIterations();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[dim&#32;+&#32;3]&#32;=&#32;opt.getStop();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00601"/>00601 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(std::exception&#32;&amp;e)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;e.what()&#32;&lt;&lt;&#32;endl;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00604"/>00604 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00605"/>00605 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00606"/><link linkend="_acmaesoptimizer_8cpp_1ab128d45080b4023edb28550611997afe">00606</link> uintptr_t&#32;<link linkend="_acmaesoptimizer_8cpp_1ab128d45080b4023edb28550611997afe">initACMA_C</link>(<emphasis role="keywordtype">long</emphasis>&#32;runid,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;*init,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*lower,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*upper,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*sigma,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxEvals,&#32;<emphasis role="keywordtype">double</emphasis>&#32;stopfitness,&#32;<emphasis role="keywordtype">double</emphasis>&#32;stopTolHistFun,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mu,&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize,&#32;<emphasis role="keywordtype">double</emphasis>&#32;accuracy,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;seed,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;normalize,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use_delayed_update,&#32;<emphasis role="keywordtype">int</emphasis>&#32;update_gap)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00610"/>00610 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00611"/>00611 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;guess(dim),&#32;lower_limit(dim),&#32;upper_limit(dim),&#32;inputSigma(dim);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00612"/>00612 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{<emphasis role="comment">//&#32;guess&#32;is&#32;mandatory</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess[i]&#32;=&#32;init[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputSigma[i]&#32;=&#32;sigma[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00615"/>00615 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lower&#32;!=&#32;NULL&#32;&amp;&amp;&#32;upper&#32;!=&#32;NULL)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess[i]&#32;=&#32;init[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit[i]&#32;=&#32;lower[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit[i]&#32;=&#32;upper[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit.resize(0);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit.resize(0);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00626"/>00626 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00627"/>00627 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;fitfun&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_fitness">Fitness</link>(<link linkend="_evaluator_8h_1ad0943ebd623281f526e5aee2aa818895">noop_callback</link>,&#32;<link linkend="_evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e">noop_callback_par</link>,&#32;dim,&#32;1,&#32;lower_limit,&#32;upper_limit);&#32;<emphasis role="comment">//&#32;never&#32;used&#32;here</emphasis>
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;fitfun-&gt;<link linkend="_class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6">setNormalize</link>(normalize);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00630"/>00630 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>*&#32;opt&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>(runid,&#32;fitfun,&#32;popsize,&#32;mu,&#32;guess,&#32;inputSigma,
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxEvals,&#32;accuracy,&#32;stopfitness,&#32;stopTolHistFun,&#32;update_gap,&#32;seed);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uintptr_t)&#32;opt;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00634"/>00634 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00635"/>00635 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00636"/><link linkend="_acmaesoptimizer_8cpp_1a7b2394fc01d8d5612733f943d54a8982">00636</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_acmaesoptimizer_8cpp_1a7b2394fc01d8d5612733f943d54a8982">destroyACMA_C</link>(uintptr_t&#32;ptr)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00637"/>00637 &#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>*&#32;opt&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>*)ptr;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;fitfun&#32;=&#32;opt-&gt;getFitfun();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;fitfun;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;opt;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00641"/>00641 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00642"/>00642 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00643"/><link linkend="_acmaesoptimizer_8cpp_1afd9ea227572135d9dd02fe7ec9d489e4">00643</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_acmaesoptimizer_8cpp_1afd9ea227572135d9dd02fe7ec9d489e4">askACMA_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;xs)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>*)&#32;ptr;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;opt-&gt;getDim();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;opt-&gt;popX&#32;=&#32;opt-&gt;ask_all();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;fitfun&#32;=&#32;opt-&gt;getFitfun();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00649"/>00649 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;fitfun-&gt;<link linkend="_class_fitness_1a7fdca1fda75e3976b91e1e9e0eb12057">decode</link>(opt-&gt;popX.col(p));
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs[p&#32;*&#32;n&#32;+&#32;i]&#32;=&#32;x[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00654"/>00654 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00655"/>00655 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00656"/><link linkend="_acmaesoptimizer_8cpp_1a2cb3fdf36ee5dee68f436f1efa6be820">00656</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_acmaesoptimizer_8cpp_1a2cb3fdf36ee5dee68f436f1efa6be820">tellACMA_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;ys)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00657"/>00657 &#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>*)&#32;ptr;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00659"/>00659 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;vals(popsize);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00660"/>00660 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;popsize;&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals[i]&#32;=&#32;ys[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00662"/>00662 &#32;&#32;&#32;&#32;opt-&gt;tell_all_asked(vals,&#32;opt-&gt;popX);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00663"/>00663 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;getStop();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00664"/>00664 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00665"/>00665 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00666"/><link linkend="_acmaesoptimizer_8cpp_1ac4c1234b83df26634971a6707db1809d">00666</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_acmaesoptimizer_8cpp_1ac4c1234b83df26634971a6707db1809d">tellXACMA_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;ys,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;xs)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00667"/>00667 &#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>*)&#32;ptr;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00668"/>00668 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00669"/>00669 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim&#32;=&#32;opt-&gt;getDim();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00670"/>00670 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;fitfun&#32;=&#32;opt-&gt;getFitfun();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00671"/>00671 &#32;&#32;&#32;&#32;opt-&gt;popX&#32;=&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>(dim,&#32;popsize);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00672"/>00672 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x(dim);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[i]&#32;=&#32;xs[p&#32;*&#32;dim&#32;+&#32;i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt-&gt;popX.col(p)&#32;=&#32;fitfun-&gt;<link linkend="_class_fitness_1ab56956f8f382ffe1b9de9d35d156a65e">encode</link>(x);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00677"/>00677 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00678"/>00678 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;vals(popsize);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00679"/>00679 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;popsize;&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals[i]&#32;=&#32;ys[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00681"/>00681 &#32;&#32;&#32;&#32;opt-&gt;tell_all(vals,&#32;opt-&gt;popX);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00682"/>00682 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;getStop();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00683"/>00683 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00684"/>00684 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00685"/><link linkend="_acmaesoptimizer_8cpp_1a76a358e67b1d48a0f0f7813dd201efdf">00685</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_acmaesoptimizer_8cpp_1a76a358e67b1d48a0f0f7813dd201efdf">populationACMA_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;xs)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>*)&#32;ptr;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00687"/>00687 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim&#32;=&#32;opt-&gt;getDim();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00688"/>00688 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;popX&#32;=&#32;opt-&gt;getPopulation();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00690"/>00690 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;popX.col(p);
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[i]&#32;=&#32;xs[p&#32;*&#32;dim&#32;+&#32;i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00694"/>00694 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00695"/>00695 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;getStop();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00696"/>00696 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00697"/>00697 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00698"/><link linkend="_acmaesoptimizer_8cpp_1abe96370a07bb4c8fff0bc6e13e105c29">00698</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_acmaesoptimizer_8cpp_1abe96370a07bb4c8fff0bc6e13e105c29">resultACMA_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;res)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00699"/>00699 &#32;&#32;&#32;&#32;<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classacmaes_1_1_acmaes_optimizer">AcmaesOptimizer</link>*)&#32;ptr;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00700"/>00700 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;bestX&#32;=&#32;opt-&gt;getBestX();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00701"/>00701 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;bestY&#32;=&#32;opt-&gt;getBestValue();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00702"/>00702 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;bestX.size();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00703"/>00703 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bestX.size();&#32;i++)
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[i]&#32;=&#32;bestX[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00705"/>00705 &#32;&#32;&#32;&#32;res[n]&#32;=&#32;bestY;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00706"/>00706 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;fitfun&#32;=&#32;opt-&gt;getFitfun();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00707"/>00707 &#32;&#32;&#32;&#32;res[n&#32;+&#32;1]&#32;=&#32;fitfun-&gt;<link linkend="_class_fitness_1aba60038eac4e0e15d995e57f4ba079e1">evaluations</link>();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00708"/>00708 &#32;&#32;&#32;&#32;res[n&#32;+&#32;2]&#32;=&#32;opt-&gt;getIterations();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00709"/>00709 &#32;&#32;&#32;&#32;res[n&#32;+&#32;3]&#32;=&#32;opt-&gt;getStop();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00710"/>00710 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;getStop();
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00711"/>00711 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00712"/>00712 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00713"/><link linkend="_acmaesoptimizer_8cpp_1a679cc7980203dbcbbe97d11014fdb5bf">00713</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_acmaesoptimizer_8cpp_1a679cc7980203dbcbbe97d11014fdb5bf">testACMA_C</link>(<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;res)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00714"/>00714 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;i&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;res[i]&#32;&lt;&lt;&#32;endl;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[i]&#32;=&#32;-res[i];
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00717"/>00717 &#32;&#32;&#32;&#32;}
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00718"/>00718 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;7;
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00719"/>00719 }
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00720"/>00720 
<anchor xml:id="_acmaesoptimizer_8cpp_source_1l00721"/>00721 }
</programlisting></section>

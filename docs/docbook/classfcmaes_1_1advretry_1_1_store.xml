<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classfcmaes_1_1advretry_1_1_store" xml:lang="en-US">
<title>fcmaes.advretry.Store Class Reference</title>
<indexterm><primary>fcmaes.advretry.Store</primary></indexterm>
<para>

<para>Manages the storing, evaluation, and tracking of data in an optimization problem. </para>
 
</para>
Collaboration diagram for fcmaes.advretry.Store:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a1dfb9b034380f6ca44583ab26014d0ba">__init__</link> (self, Callable[[ArrayLike], float] <link linkend="_classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5">fun</link>, Bounds bounds, Optional[int] <link linkend="_classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538">max_eval_fac</link>=None, Optional[int] <link linkend="_classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae">check_interval</link>=100, Optional[int] <link linkend="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30">capacity</link>=500, Optional[int] <link linkend="_classfcmaes_1_1advretry_1_1_store_1a4c08da826f59305eaa14d6bbdbaa6b1d">num_retries</link>=None, Optional[int] <link linkend="_classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f">statistic_num</link>=0, Optional[str] <link linkend="_classfcmaes_1_1advretry_1_1_store_1a4a5af1d8a29594eff250c931f481d146">datafile</link>=None)</para>

<para>Initializes an instance of the class with parameters and attributes required for managing function optimization within specified bounds using shared multiprocessing resources. </para>
</listitem>
            <listitem><para>float <link linkend="_classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa">wrapper</link> (self, ArrayLike x)</para>

<para>Wrapper function to evaluate a given function, update statistics, and log the results. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a19b9d6c0787fb06a2b00e595f487bf37">save</link> (self, str name)</para>

<para>Saves the current data of the instance to a compressed file using bz2 and cPickle modules. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1adc9b28c43aee9110aef2fad53f30a077">load</link> (self, str name)</para>

<para>Loads and processes data from a compressed file. </para>
</listitem>
            <listitem><para>List <link linkend="_classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7">get_data</link> (self)</para>

<para>Retrieves and aggregates data from various attributes and methods. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3">set_data</link> (self, ArrayLike data)</para>

<para>Sets the data for an internal storage structure and processes it. </para>
</listitem>
            <listitem><para>np.ndarray <link linkend="_classfcmaes_1_1advretry_1_1_store_1afda8cdd53cf9e0c3160f59bb623becba">get_improvements</link> (self)</para>

<para>Calculates and returns an array of improvements based on stored time and value data. </para>
</listitem>
            <listitem><para>List <link linkend="_classfcmaes_1_1advretry_1_1_store_1a6ccfce173196171f999e4a3c4531f01f">get_statistics</link> (self, int num)</para>

<para>Calculates and returns a list of statistics determined by evenly dividing the provided time series data into a specified number of segments. </para>
</listitem>
            <listitem><para>int <link linkend="_classfcmaes_1_1advretry_1_1_store_1acb6d9b590c7c36a83fa8b764d6e15f7e">eval_num</link> (self, int max_evals)</para>

<para>Calculates the evaluation number based on a multiplier and maximum evaluations. </para>
</listitem>
            <listitem><para>Tuple[float, np.ndarray, np.ndarray, np.ndarray, np.ndarray] <link linkend="_classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591">limits</link> (self)</para>

<para>Returns the limits and other related calculations used for determining bounds during operations like crossover and mutation. </para>
</listitem>
            <listitem><para>float <link linkend="_classfcmaes_1_1advretry_1_1_store_1a00ab052ea8b184b7344875122481b623">distance</link> (self, np.ndarray xprev, np.ndarray x)</para>

<para>Calculates the normalized distance between two points in a Euclidean space. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9">replace</link> (self, int i, float y, np.ndarray x)</para>

<para>Replaces the y and x values at a specified index. </para>
</listitem>
            <listitem><para>Tuple[int, int] <link linkend="_classfcmaes_1_1advretry_1_1_store_1a879e1014d958865e37c48d5d271c8dc6">crossover</link> (self)</para>

<para>Selects two good entries for recombination based on a probabilistic threshold. </para>
</listitem>
            <listitem><para>int <link linkend="_classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4">sort</link> (self)</para>

<para>Sorts and updates stored data based on the given criteria. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe">add_result</link> (self, float y, np.ndarray x, int evals, Optional[float] limit=np.inf)</para>

<para>Adds a result to the current optimization process, updating the best result if necessary and storing the new result in the internal data structure. </para>
</listitem>
            <listitem><para>np.ndarray <link linkend="_classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558">get_x_best</link> (self)</para>

<para>Returns a copy of the best solutions stored in the internal state. </para>
</listitem>
            <listitem><para>np.ndarray <link linkend="_classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b">get_x</link> (self, pid)</para>

<para>Retrieves a segment of the <computeroutput>xs</computeroutput> array corresponding to the provided <computeroutput>pid</computeroutput>. </para>
</listitem>
            <listitem><para>np.ndarray <link linkend="_classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2">get_xs</link> (self)</para>

<para>Builds and returns an array of x values stored in the object. </para>
</listitem>
            <listitem><para>float <link linkend="_classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f">get_y</link> (self, int pid)</para>

<para>Fetches a value for a given ID from a dictionary of float values. </para>
</listitem>
            <listitem><para>np.ndarray <link linkend="_classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77">get_ys</link> (self)</para>

<para>Gets the stored y-values up to the specified count. </para>
</listitem>
            <listitem><para>float <link linkend="_classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a">get_y_best</link> (self)</para>

<para>Returns the best value of y stored in the <computeroutput>best_y</computeroutput> attribute. </para>
</listitem>
            <listitem><para>int <link linkend="_classfcmaes_1_1advretry_1_1_store_1a0e6a826522ffacef8ab24249fc4127b4">get_count_evals</link> (self)</para>

<para>Retrieves the value of the evaluation count. </para>
</listitem>
            <listitem><para>int <link linkend="_classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61">get_count_runs</link> (self)</para>

<para>Retrieves the count of runs. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a732636cd5ab3c40b878ef2e0274b1d1b">set_x</link> (self, pid, <link linkend="_classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89">xs</link>)</para>

<para>Sets a subset of the <computeroutput>xs</computeroutput> list for a specific process ID. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a12d96e54629b449293d2aabf5542ddc1">set_y</link> (self, pid, y)</para>

<para>Sets the value of y for a given pid within the &apos;ys&apos; mapping. </para>
</listitem>
            <listitem><para>bool <link linkend="_classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df">get_runs_compare_incr</link> (self, float limit)</para>

<para>Compares the current count of runs against a specified limit and increments internal counters accordingly if the limit is not exceeded. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da">dump</link> (self)</para>

<para>Logs a summary of the execution metrics and current status. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5">fun</link> = fun</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678">lower</link></para>

<para>The lower bounds for the optimization problem. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a8d112bb91cc58f032a0bb929c236fd8e">upper</link> = _convertBounds(bounds)</para>

<para>The upper bounds for the optimization problem. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1ad2d1513e8146883a75bab3f55fb4be95">delta</link> = self.upper - self.lower</para>

<para>The difference between upper and lower bounds. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30">capacity</link> = capacity</para>

<para>Maximum storage capacity for evaluated results. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a4c08da826f59305eaa14d6bbdbaa6b1d">num_retries</link> = num_retries</para>

<para>Maximum number of retries during the optimization process. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1aebbd407d5af1334e38fbdc5a8ba36d3f">eval_fac_incr</link> = <link linkend="_classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538">max_eval_fac</link> / (<link linkend="_classfcmaes_1_1advretry_1_1_store_1a4c08da826f59305eaa14d6bbdbaa6b1d">num_retries</link>/<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae">check_interval</link>)</para>

<para>Increment factor for evaluation adjustments. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538">max_eval_fac</link> = max_eval_fac</para>

<para>Maximum evaluation factor throughout the retries. </para>
</listitem>
            <listitem><para>int <link linkend="_classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae">check_interval</link> = check_interval</para>

<para>Interval for sorting the evaluation store. </para>
</listitem>
            <listitem><para>(pid+1) *self.dim] <link linkend="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9">dim</link> = len(self.lower)</para>

<para>Dimension of the optimization problem based on bounds. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a3353add8a5c4d01dd02a8a56890c1036">t0</link> = time.perf_counter()</para>

<para>Timestamp indicating the start of evaluations (used for timing statistics). </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f">statistic_num</link> = statistic_num</para>

<para>Number of statistical points maintained for tracking. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a4a5af1d8a29594eff250c931f481d146">datafile</link> = datafile</para>

<para>Path to file for saving and loading data. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8">rg</link> = random.Random()</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce">add_mutex</link> = mp.Lock()</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a784de4dd2241f0d45a199379be53532d">check_mutex</link> = mp.Lock()</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89">xs</link> = mp.RawArray(ct.c_double, <link linkend="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30">capacity</link> * self.dim)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100">ys</link> = mp.RawArray(ct.c_double, <link linkend="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30">capacity</link>)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c">eval_fac</link> = mp.RawValue(ct.c_double, 1)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98">count_evals</link> = mp.RawValue(ct.c_long, 0)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f">count_runs</link> = mp.RawValue(ct.c_int, 0)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link> = mp.RawValue(ct.c_int, 0)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a">best_y</link> = mp.RawValue(ct.c_double, np.inf)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1afefa9194fbf5ada1b23dcd45ed3e48f3">worst_y</link> = mp.RawValue(ct.c_double, np.inf)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57">best_x</link> = mp.RawArray(ct.c_double, self.dim)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d">time</link> = mp.RawArray(ct.c_double, self.statistic_num)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2">val</link> = mp.RawArray(ct.c_double, self.statistic_num)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4">si</link> = mp.RawValue(ct.c_int, 0)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1ab1505fe94e716ee8645e7e694f69efbc">sevals</link> = mp.RawValue(ct.c_long, 0)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1advretry_1_1_store_1a44fe2e19ed26797a80dd27ee7c1a6b50">bval</link> = mp.RawValue(ct.c_double, np.inf)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Manages the storing, evaluation, and tracking of data in an optimization problem. </para>



<para>The class enables handling function evaluations and implements tools for statistics tracking, result persistence, and multiprocessing compatibility. It facilitates managing optimization tasks with specific bounds, ensuring efficient computational resource usage and tracking statistical progress over iterations.</para>

<para><literallayout><computeroutput>   fun (Callable[[ArrayLike], float]): The fitness function to be optimized.
</computeroutput></literallayout> </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00234">234</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a1dfb9b034380f6ca44583ab26014d0ba"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.__init__ ( self, Callable[[ArrayLike], float] fun, Bounds bounds, Optional[int]  max_eval_fac = <computeroutput>None</computeroutput>
, Optional[int]  check_interval = <computeroutput>100</computeroutput>
, Optional[int]  capacity = <computeroutput>500</computeroutput>
, Optional[int]  num_retries = <computeroutput>None</computeroutput>
, Optional[int]  statistic_num = <computeroutput>0</computeroutput>
, Optional[str]  datafile = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Initializes an instance of the class with parameters and attributes required for managing function optimization within specified bounds using shared multiprocessing resources. </para>
</para>

<para>Sets up the evaluation store, statistic tracking, and random generator.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fun</entry><entry>
<para>A fitness function to be optimized. It takes an array-like input and returns a float value. </para>
</entry>
                            </row>
                            <row>
<entry>bounds</entry><entry>
<para>Bounds of the objective function arguments defined as an instance of the Bounds class. </para>
</entry>
                            </row>
                            <row>
<entry>max_eval_fac</entry><entry>
<para>Optional; Maximum number of evaluations factor. Defaults to None. If None, it is calculated based on <computeroutput>num_retries</computeroutput> and <computeroutput>check_interval</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>check_interval</entry><entry>
<para>Optional; Number of iterations after which the evaluation store is sorted. Defaults to 100. </para>
</entry>
                            </row>
                            <row>
<entry>capacity</entry><entry>
<para>Optional; Capacity of the evaluation store. Defaults to 500. </para>
</entry>
                            </row>
                            <row>
<entry>num_retries</entry><entry>
<para>Optional; Maximum number of retries allowed. If None, it is calculated based on <computeroutput>max_eval_fac</computeroutput> and <computeroutput>check_interval</computeroutput>. Defaults to None. </para>
</entry>
                            </row>
                            <row>
<entry>statistic_num</entry><entry>
<para>Optional; Number of statistics points to be maintained for tracking. Set to 0 to disable statistics. Defaults to 0. </para>
</entry>
                            </row>
                            <row>
<entry>datafile</entry><entry>
<para>Optional; Path to a file for saving/loading relevant data. Defaults to None. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00293">293</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe"/><section>
    <title>add_result()</title>
<indexterm><primary>add_result</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>add_result</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.add_result ( self, float y, np.ndarray x, int evals, Optional[float]  limit = <computeroutput>np.inf</computeroutput>
)</computeroutput></para><para>

<para>Adds a result to the current optimization process, updating the best result if necessary and storing the new result in the internal data structure. </para>
</para>

<para>This method is designed to handle updates in a thread-safe manner. It increments the number of evaluations, checks if the new result is within the given limit, and updates the best result as well as the storage if the criteria are met. If the storage reaches its capacity, it triggers a sorting operation to maintain order.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>y</entry><entry>
<para>The result value to be added. </para>
</entry>
                            </row>
                            <row>
<entry>x</entry><entry>
<para>The array representing input parameters corresponding to the result. </para>
</entry>
                            </row>
                            <row>
<entry>evals</entry><entry>
<para>The number of evaluations associated with this result. </para>
</entry>
                            </row>
                            <row>
<entry>limit</entry><entry>
<para>The threshold value. Results with a value greater than this limit are ignored. Defaults to infinity. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00663">663</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a7dfa5440d1d295083cef68ea37be60fe_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a879e1014d958865e37c48d5d271c8dc6"/><section>
    <title>crossover()</title>
<indexterm><primary>crossover</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>crossover</secondary></indexterm>
<para><computeroutput> Tuple[int,int] fcmaes.advretry.Store.crossover ( self)</computeroutput></para><para>

<para>Selects two good entries for recombination based on a probabilistic threshold. </para>
</para>

<para><literallayout><computeroutput>   This method attempts to choose two distinct indices from a pool based on a
   random limit derived from the current number of stored entries. The method
   performs several attempts to identify these indices under the defined constraints.
   If successful, it returns the selected indices; otherwise, it returns default
   values indicating no valid selection.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para>Tuple[int, int]: A tuple containing two indices selected for recombination. If the selection fails, returns (-1, -1). </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00592">592</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a879e1014d958865e37c48d5d271c8dc6_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a879e1014d958865e37c48d5d271c8dc6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a00ab052ea8b184b7344875122481b623"/><section>
    <title>distance()</title>
<indexterm><primary>distance</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>distance</secondary></indexterm>
<para><computeroutput> float fcmaes.advretry.Store.distance ( self, np.ndarray xprev, np.ndarray x)</computeroutput></para><para>

<para>Calculates the normalized distance between two points in a Euclidean space. </para>
</para>

<para><literallayout><computeroutput>   The distance is normalized based on the difference between two points, scaled
   by a pre-defined parameter `delta`, and divided by the square root of the
   number of dimensions (`dim`).
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>xprev</entry><entry>
<para>A numpy array representing the previous point. </para>
</entry>
                            </row>
                            <row>
<entry>x</entry><entry>
<para>A numpy array representing the current point.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>float The normalized distance between <computeroutput>xprev</computeroutput> and <computeroutput>x</computeroutput>. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00561">561</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a00ab052ea8b184b7344875122481b623_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da"/><section>
    <title>dump()</title>
<indexterm><primary>dump</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>dump</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.dump ( self)</computeroutput></para><para>

<para>Logs a summary of the execution metrics and current status. </para>
</para>

<para><literallayout><computeroutput>   This method collects relevant metrics about the execution process and generates a
   formatted log message to provide insights into the current state. Metrics such as
   evaluation counts, best and worst outcomes, and a snapshot of the best solutions are
   included in the message.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>None </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00852">852</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a03953d817f7ad4b1c13818e1f133a6da_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a03953d817f7ad4b1c13818e1f133a6da_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1acb6d9b590c7c36a83fa8b764d6e15f7e"/><section>
    <title>eval_num()</title>
<indexterm><primary>eval_num</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>eval_num</secondary></indexterm>
<para><computeroutput> int fcmaes.advretry.Store.eval_num ( self, int max_evals)</computeroutput></para><para>

<para>Calculates the evaluation number based on a multiplier and maximum evaluations. </para>
</para>

<para><literallayout><computeroutput>   This method computes the product of a multiplier (`eval_fac.value`) and the
   provided maximum evaluations (`max_evals`). The result is cast to an integer
   and returned.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>max_evals</entry><entry>
<para>The maximum number of evaluations.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>int The calculated evaluation number. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00505">505</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a0e6a826522ffacef8ab24249fc4127b4"/><section>
    <title>get_count_evals()</title>
<indexterm><primary>get_count_evals</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_count_evals</secondary></indexterm>
<para><computeroutput> int fcmaes.advretry.Store.get_count_evals ( self)</computeroutput></para><para>

<para>Retrieves the value of the evaluation count. </para>
</para>

<para><literallayout><computeroutput>   This method accesses the `count_evals` attribute and returns its integer
   value. It is primarily intended to report the current count of evaluations
   stored in the `count_evals` attribute.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>int The current evaluation count stored in <computeroutput>count_evals</computeroutput>. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00772">772</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61"/><section>
    <title>get_count_runs()</title>
<indexterm><primary>get_count_runs</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_count_runs</secondary></indexterm>
<para><computeroutput> int fcmaes.advretry.Store.get_count_runs ( self)</computeroutput></para><para>

<para>Retrieves the count of runs. </para>
</para>

<para><literallayout><computeroutput>   This method returns the value of the `count_runs` attribute, representing
   the total count of runs made.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>int The value of the <computeroutput>count_runs</computeroutput> attribute. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00784">784</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a329ccb4c8a17a35fec30a506495dee61_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7"/><section>
    <title>get_data()</title>
<indexterm><primary>get_data</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_data</secondary></indexterm>
<para><computeroutput> List fcmaes.advretry.Store.get_data ( self)</computeroutput></para><para>

<para>Retrieves and aggregates data from various attributes and methods. </para>
</para>

<para><literallayout><computeroutput>   This method gathers data by calling several other methods and accessing a specific
   attribute. It consolidates these pieces of data into a single list and returns it.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>List A list containing data from <computeroutput><link linkend="_classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2">get_xs()</link></computeroutput>, <computeroutput><link linkend="_classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77">get_ys()</link></computeroutput>, <computeroutput><link linkend="_classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558">get_x_best()</link></computeroutput>, <computeroutput><link linkend="_classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a">get_y_best()</link></computeroutput> methods, and the <computeroutput>num_stored.value</computeroutput> attribute. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00413">413</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_aabe26248085adae1ad80a9b17202e5b7_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_aabe26248085adae1ad80a9b17202e5b7_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1afda8cdd53cf9e0c3160f59bb623becba"/><section>
    <title>get_improvements()</title>
<indexterm><primary>get_improvements</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_improvements</secondary></indexterm>
<para><computeroutput> np.ndarray fcmaes.advretry.Store.get_improvements ( self)</computeroutput></para><para>

<para>Calculates and returns an array of improvements based on stored time and value data. </para>
</para>

<para><literallayout><computeroutput>   The method processes the time and value attributes up to the index defined by `si.value`
   and combines them into a structured NumPy array. It allows extracting the corresponding
   values and improvements over the determined slice of the data.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>np A NumPy array containing pairs of time and value up to <computeroutput>si.value</computeroutput>. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00454">454</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df"/><section>
    <title>get_runs_compare_incr()</title>
<indexterm><primary>get_runs_compare_incr</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_runs_compare_incr</secondary></indexterm>
<para><computeroutput> bool fcmaes.advretry.Store.get_runs_compare_incr ( self, float limit)</computeroutput></para><para>

<para>Compares the current count of runs against a specified limit and increments internal counters accordingly if the limit is not exceeded. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>limit</entry><entry>
<para>The upper threshold to compare against the current count of runs.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>bool True if the current count is less than the limit and the increment operation was performed. False otherwise. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00826">826</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_ac1a185da0fdff01550d275b4635f73df_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a6ccfce173196171f999e4a3c4531f01f"/><section>
    <title>get_statistics()</title>
<indexterm><primary>get_statistics</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_statistics</secondary></indexterm>
<para><computeroutput> List fcmaes.advretry.Store.get_statistics ( self, int num)</computeroutput></para><para>

<para>Calculates and returns a list of statistics determined by evenly dividing the provided time series data into a specified number of segments. </para>
</para>

<para>This function processes time series and value arrays to calculate specific statistics based on the distribution of data over a fixed number of intervals. It uses the time array to sample the values array at designated points, ensuring that the result represents data distributed across the defined segments.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>num</entry><entry>
<para>The number of segments into which the time series data will be divided.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>List A list containing the computed statistics based on the segmented intervals of the time series data.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>IndexError</entry><entry>
<para>If the number of segments exceeds the number of available data points. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00477">477</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b"/><section>
    <title>get_x()</title>
<indexterm><primary>get_x</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_x</secondary></indexterm>
<para><computeroutput> np.ndarray fcmaes.advretry.Store.get_x ( self,  pid)</computeroutput></para><para>

<para>Retrieves a segment of the <computeroutput>xs</computeroutput> array corresponding to the provided <computeroutput>pid</computeroutput>. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pid</entry><entry>
<para>Index used to calculate the segment.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>np The segment of the <computeroutput>xs</computeroutput> array. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00702">702</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a97e407315b2e0c802b9d5b4414f3f91b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558"/><section>
    <title>get_x_best()</title>
<indexterm><primary>get_x_best</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_x_best</secondary></indexterm>
<para><computeroutput> np.ndarray fcmaes.advretry.Store.get_x_best ( self)</computeroutput></para><para>

<para>Returns a copy of the best solutions stored in the internal state. </para>
</para>

<para><literallayout><computeroutput>   This method retrieves the best solution(s) found, which are stored
   internally, and returns a copy of the data to avoid unintentional
   modifications to the original data.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>np A numpy array containing the best solution(s). </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00690">690</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a95e2b65e516214df91625c67e4ebe558_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2"/><section>
    <title>get_xs()</title>
<indexterm><primary>get_xs</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_xs</secondary></indexterm>
<para><computeroutput> np.ndarray fcmaes.advretry.Store.get_xs ( self)</computeroutput></para><para>

<para>Builds and returns an array of x values stored in the object. </para>
</para>

<para><literallayout><computeroutput>   This method iterates over the number of stored x values and retrieves each
   value using the `get_x` method. The retrieved values are then compiled into
   a NumPy array, which is returned.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>np A NumPy array containing the retrieved x values. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00715">715</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a2df2e37a5663c3e12c22c4b97f2549a2_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a2df2e37a5663c3e12c22c4b97f2549a2_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f"/><section>
    <title>get_y()</title>
<indexterm><primary>get_y</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_y</secondary></indexterm>
<para><computeroutput> float fcmaes.advretry.Store.get_y ( self, int pid)</computeroutput></para><para>

<para>Fetches a value for a given ID from a dictionary of float values. </para>
</para>

<para><literallayout><computeroutput>   This method retrieves a corresponding float value from the `ys` dictionary
   based on the provided integer ID. The dictionary `ys` maps integer IDs to
   float values. The function returns the float value associated with the
   supplied `pid`.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pid</entry><entry>
<para>The unique identifier used to fetch a value from the <computeroutput>ys</computeroutput> </para>
</entry>
                            </row>
                            <row>
<entry>dictionary.</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>float The value corresponding to the provided <computeroutput>pid</computeroutput> from the <computeroutput>ys</computeroutput> </para>

<para>dictionary. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00734">734</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a907617cde0def7276f1f609d7690335f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a"/><section>
    <title>get_y_best()</title>
<indexterm><primary>get_y_best</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_y_best</secondary></indexterm>
<para><computeroutput> float fcmaes.advretry.Store.get_y_best ( self)</computeroutput></para><para>

<para>Returns the best value of y stored in the <computeroutput>best_y</computeroutput> attribute. </para>
</para>

<para><literallayout><computeroutput>   The function accesses the `best_y` attribute and retrieves its value
   as a float.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>float The best value of y. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00759">759</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a801f488c7741c549ab3212f5ce52803a_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77"/><section>
    <title>get_ys()</title>
<indexterm><primary>get_ys</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>get_ys</secondary></indexterm>
<para><computeroutput> np.ndarray fcmaes.advretry.Store.get_ys ( self)</computeroutput></para><para>

<para>Gets the stored y-values up to the specified count. </para>
</para>

<para><literallayout><computeroutput>   This method retrieves the portion of the y-values list that corresponds to
   the count determined by `num_stored.value`. The result is returned as a
   NumPy array.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>np A NumPy array containing the stored y-values up to the specified count. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00747">747</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a3cc073975313c4893de761cfc9771d77_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591"/><section>
    <title>limits()</title>
<indexterm><primary>limits</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>limits</secondary></indexterm>
<para><computeroutput> Tuple[float, np.ndarray, np.ndarray, np.ndarray, np.ndarray] fcmaes.advretry.Store.limits ( self)</computeroutput></para><para>

<para>Returns the limits and other related calculations used for determining bounds during operations like crossover and mutation. </para>
</para>

<para>The function calculates adjusted bounds, scaled deviations, and other factors based on the input variables, making use of random factors and mutex locks for thread safety.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Tuple[float, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]: A tuple containing the following elements:<itemizedlist>
<listitem>
<para>A float value representing the initial target point y0.</para>
</listitem><listitem>
<para>A NumPy array representing the point x1 selected for crossover.</para>
</listitem><listitem>
<para>A NumPy array representing the calculated lower bounds for crossover.</para>
</listitem><listitem>
<para>A NumPy array representing the calculated upper bounds for crossover.</para>
</listitem><listitem>
<para>A NumPy array representing the scaled standard deviations for crossover.</para>
</listitem></itemizedlist>
</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00529">529</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_ab543494f5cc2e6a7f877ca8cb0e35591_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1adc9b28c43aee9110aef2fad53f30a077"/><section>
    <title>load()</title>
<indexterm><primary>load</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>load</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.load ( self, str name)</computeroutput></para><para>

<para>Loads and processes data from a compressed file. </para>
</para>

<para><literallayout><computeroutput>   This method allows loading data from a file compressed with BZ2 and serialized
   with cPickle. After loading, the data is processed or assigned using the
   `set_data` method of the instance.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>name</entry><entry>
<para>The name of the file (without extension) to load data from. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00399">399</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_adc9b28c43aee9110aef2fad53f30a077_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9"/><section>
    <title>replace()</title>
<indexterm><primary>replace</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>replace</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.replace ( self, int i, float y, np.ndarray x)</computeroutput></para><para>

<para>Replaces the y and x values at a specified index. </para>
</para>

<para><literallayout><computeroutput>   This method updates the y and x values in the object&apos;s internal data structure at the index
   provided by the user.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>i</entry><entry>
<para>Index at which to set the new y and x values. </para>
</entry>
                            </row>
                            <row>
<entry>y</entry><entry>
<para>The new value for y to be set at the specified index. </para>
</entry>
                            </row>
                            <row>
<entry>x</entry><entry>
<para>The new value for x to be set at the specified index. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00575">575</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a0ae90f35f58deb629c18747fbf9b1cc9_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a0ae90f35f58deb629c18747fbf9b1cc9_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a19b9d6c0787fb06a2b00e595f487bf37"/><section>
    <title>save()</title>
<indexterm><primary>save</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>save</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.save ( self, str name)</computeroutput></para><para>

<para>Saves the current data of the instance to a compressed file using bz2 and cPickle modules. </para>
</para>

<para><literallayout><computeroutput>   The method compresses and serializes the data obtained from `get_data` and saves
   it to a file with the specified name appended by the &apos;.pbz2&apos; extension.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>name</entry><entry>
<para>The desired name for the output file, excluding the extension. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00386">386</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a19b9d6c0787fb06a2b00e595f487bf37_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a19b9d6c0787fb06a2b00e595f487bf37_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3"/><section>
    <title>set_data()</title>
<indexterm><primary>set_data</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>set_data</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.set_data ( self, ArrayLike data)</computeroutput></para><para>

<para>Sets the data for an internal storage structure and processes it. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>data</entry><entry>
<para>A multi-dimensional array-like structure containing:<itemizedlist>
<listitem>
<para>data[0]: The x-coordinates.</para>
</listitem><listitem>
<para>data[1]: The y-coordinates.</para>
</listitem><listitem>
<para>data[2]: A subset of best x-coordinates.</para>
</listitem><listitem>
<para>data[3]: The best y-coordinate.</para>
</listitem><listitem>
<para>data[4]: The total count of stored elements. </para>
</listitem></itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00434">434</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_acff238ba31618eab7787f5204b5676f3_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_acff238ba31618eab7787f5204b5676f3_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a732636cd5ab3c40b878ef2e0274b1d1b"/><section>
    <title>set_x()</title>
<indexterm><primary>set_x</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>set_x</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.set_x ( self,  pid,  xs)</computeroutput></para><para>

<para>Sets a subset of the <computeroutput>xs</computeroutput> list for a specific process ID. </para>
</para>

<para><literallayout><computeroutput>   This function updates a section of the `xs` attribute corresponding to a
   particular process ID (`pid`) based on the provided input values.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pid</entry><entry>
<para>Process ID whose section in <computeroutput>xs</computeroutput> is to be updated. </para>
</entry>
                            </row>
                            <row>
<entry>xs</entry><entry>
<para>List of values to update in the specific section of <computeroutput>xs</computeroutput> for the given process ID. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00798">798</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a732636cd5ab3c40b878ef2e0274b1d1b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a12d96e54629b449293d2aabf5542ddc1"/><section>
    <title>set_y()</title>
<indexterm><primary>set_y</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>set_y</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.set_y ( self,  pid,  y)</computeroutput></para><para>

<para>Sets the value of y for a given pid within the &apos;ys&apos; mapping. </para>
</para>

<para><literallayout><computeroutput>   Modifies the associated value of y in the dictionary &apos;ys&apos; for the
   provided process identifier (pid). This method stores or updates
   the y value tied to a specific pid.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pid</entry><entry>
<para>Identifier for the process whose y value is being set. </para>
</entry>
                            </row>
                            <row>
<entry>y</entry><entry>
<para>The value to associate with the given pid in the &apos;ys&apos; mapping. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00812">812</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_a12d96e54629b449293d2aabf5542ddc1_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4"/><section>
    <title>sort()</title>
<indexterm><primary>sort</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>sort</secondary></indexterm>
<para><computeroutput> int fcmaes.advretry.Store.sort ( self)</computeroutput></para><para>

<para>Sorts and updates stored data based on the given criteria. </para>
</para>

<para><literallayout><computeroutput>   The method sorts the stored data `ys` in ascending order of their values. It ensures
   diversity by selecting specific data points that meet the distance threshold from the
   two most recently added elements. It then updates the stored data to retain only the
   best 90% of the sorted elements up to the storage capacity.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>int The updated number of stored elements.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ValueError</entry><entry>
<para>If the number of stored elements is less than 2. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00623">623</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_aa5c9f7209b6bfb5bf079ad940a84eea4_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1advretry_1_1_store_aa5c9f7209b6bfb5bf079ad940a84eea4_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa"/><section>
    <title>wrapper()</title>
<indexterm><primary>wrapper</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>wrapper</secondary></indexterm>
<para><computeroutput> float fcmaes.advretry.Store.wrapper ( self, ArrayLike x)</computeroutput></para><para>

<para>Wrapper function to evaluate a given function, update statistics, and log the results. </para>
</para>

<para>It is typically used in optimization procedures to monitor evaluations and track progress over iterations.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>x</entry><entry>
<para>The input array to evaluate the function.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>float The evaluated function output for the given input array. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00360">360</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce"/><section>
    <title>add_mutex</title>
<indexterm><primary>add_mutex</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>add_mutex</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.add_mutex = mp.Lock()</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00328">328</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57"/><section>
    <title>best_x</title>
<indexterm><primary>best_x</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>best_x</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.best_x = mp.RawArray(ct.c_double, self.dim)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00338">338</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a"/><section>
    <title>best_y</title>
<indexterm><primary>best_y</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>best_y</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.best_y = mp.RawValue(ct.c_double, np.inf)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00336">336</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a44fe2e19ed26797a80dd27ee7c1a6b50"/><section>
    <title>bval</title>
<indexterm><primary>bval</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>bval</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.bval = mp.RawValue(ct.c_double, np.inf)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00346">346</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30"/><section>
    <title>capacity</title>
<indexterm><primary>capacity</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>capacity</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.capacity = capacity</computeroutput></para><para>

<para>Maximum storage capacity for evaluated results. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00306">306</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae"/><section>
    <title>check_interval</title>
<indexterm><primary>check_interval</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>check_interval</secondary></indexterm>
<para><computeroutput>int fcmaes.advretry.Store.check_interval = check_interval</computeroutput></para><para>

<para>Interval for sorting the evaluation store. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00318">318</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a784de4dd2241f0d45a199379be53532d"/><section>
    <title>check_mutex</title>
<indexterm><primary>check_mutex</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>check_mutex</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.check_mutex = mp.Lock()</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00329">329</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98"/><section>
    <title>count_evals</title>
<indexterm><primary>count_evals</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>count_evals</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.count_evals = mp.RawValue(ct.c_long, 0)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00333">333</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f"/><section>
    <title>count_runs</title>
<indexterm><primary>count_runs</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>count_runs</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.count_runs = mp.RawValue(ct.c_int, 0)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00334">334</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a4a5af1d8a29594eff250c931f481d146"/><section>
    <title>datafile</title>
<indexterm><primary>datafile</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>datafile</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.datafile = datafile</computeroutput></para><para>

<para>Path to file for saving and loading data. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00322">322</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1ad2d1513e8146883a75bab3f55fb4be95"/><section>
    <title>delta</title>
<indexterm><primary>delta</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>delta</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.delta = self.upper - self.lower</computeroutput></para><para>

<para>The difference between upper and lower bounds. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00305">305</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9"/><section>
    <title>dim</title>
<indexterm><primary>dim</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>dim</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.dim = len(self.lower)</computeroutput></para><para>

<para>Dimension of the optimization problem based on bounds. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00319">319</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c"/><section>
    <title>eval_fac</title>
<indexterm><primary>eval_fac</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>eval_fac</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.eval_fac = mp.RawValue(ct.c_double, 1)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00332">332</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1aebbd407d5af1334e38fbdc5a8ba36d3f"/><section>
    <title>eval_fac_incr</title>
<indexterm><primary>eval_fac_incr</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>eval_fac_incr</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.eval_fac_incr = <link linkend="_classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538">max_eval_fac</link> / (<link linkend="_classfcmaes_1_1advretry_1_1_store_1a4c08da826f59305eaa14d6bbdbaa6b1d">num_retries</link>/<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae">check_interval</link>)</computeroutput></para><para>

<para>Increment factor for evaluation adjustments. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00316">316</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5"/><section>
    <title>fun</title>
<indexterm><primary>fun</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>fun</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.fun = fun</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00303">303</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678"/><section>
    <title>lower</title>
<indexterm><primary>lower</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>lower</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.lower</computeroutput></para><para>

<para>The lower bounds for the optimization problem. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00304">304</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538"/><section>
    <title>max_eval_fac</title>
<indexterm><primary>max_eval_fac</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>max_eval_fac</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.max_eval_fac = max_eval_fac</computeroutput></para><para>

<para>Maximum evaluation factor throughout the retries. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00317">317</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a4c08da826f59305eaa14d6bbdbaa6b1d"/><section>
    <title>num_retries</title>
<indexterm><primary>num_retries</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>num_retries</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.num_retries = num_retries</computeroutput></para><para>

<para>Maximum number of retries during the optimization process. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00314">314</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497"/><section>
    <title>num_stored</title>
<indexterm><primary>num_stored</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>num_stored</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.num_stored = mp.RawValue(ct.c_int, 0)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00335">335</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8"/><section>
    <title>rg</title>
<indexterm><primary>rg</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>rg</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.rg = random.Random()</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00323">323</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1ab1505fe94e716ee8645e7e694f69efbc"/><section>
    <title>sevals</title>
<indexterm><primary>sevals</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>sevals</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.sevals = mp.RawValue(ct.c_long, 0)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00345">345</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4"/><section>
    <title>si</title>
<indexterm><primary>si</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>si</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.si = mp.RawValue(ct.c_int, 0)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00344">344</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f"/><section>
    <title>statistic_num</title>
<indexterm><primary>statistic_num</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>statistic_num</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.statistic_num = statistic_num</computeroutput></para><para>

<para>Number of statistical points maintained for tracking. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00321">321</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a3353add8a5c4d01dd02a8a56890c1036"/><section>
    <title>t0</title>
<indexterm><primary>t0</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>t0</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.t0 = time.perf_counter()</computeroutput></para><para>

<para>Timestamp indicating the start of evaluations (used for timing statistics). </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00320">320</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d"/><section>
    <title>time</title>
<indexterm><primary>time</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>time</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.time = mp.RawArray(ct.c_double, self.statistic_num)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00342">342</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a8d112bb91cc58f032a0bb929c236fd8e"/><section>
    <title>upper</title>
<indexterm><primary>upper</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>upper</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.upper = _convertBounds(bounds)</computeroutput></para><para>

<para>The upper bounds for the optimization problem. </para>
</para>
<para>
Definition at line <link linkend="_advretry_8py_source_1l00304">304</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2"/><section>
    <title>val</title>
<indexterm><primary>val</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>val</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.val = mp.RawArray(ct.c_double, self.statistic_num)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00343">343</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1afefa9194fbf5ada1b23dcd45ed3e48f3"/><section>
    <title>worst_y</title>
<indexterm><primary>worst_y</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>worst_y</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.worst_y = mp.RawValue(ct.c_double, np.inf)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00337">337</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89"/><section>
    <title>xs</title>
<indexterm><primary>xs</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>xs</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.xs = mp.RawArray(ct.c_double, <link linkend="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30">capacity</link> * self.dim)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00330">330</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100"/><section>
    <title>ys</title>
<indexterm><primary>ys</primary><secondary>fcmaes.advretry.Store</secondary></indexterm>
<indexterm><primary>fcmaes.advretry.Store</primary><secondary>ys</secondary></indexterm>
<para><computeroutput>fcmaes.advretry.Store.ys = mp.RawArray(ct.c_double, <link linkend="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30">capacity</link>)</computeroutput></para><para>
Definition at line <link linkend="_advretry_8py_source_1l00331">331</link> of file <link linkend="_advretry_8py_source">advretry.py</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
fcmaes/<link linkend="_advretry_8py">advretry.py</link></section>
</section>

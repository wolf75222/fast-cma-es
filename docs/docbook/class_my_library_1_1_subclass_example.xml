<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_my_library_1_1_subclass_example" xml:lang="en-US">
<title>MyLibrary::SubclassExample&lt; TemplatedClass &gt; Class Template Reference</title>
<indexterm><primary>MyLibrary::SubclassExample&lt; TemplatedClass &gt;</primary></indexterm>
<para>

<para>some subclass </para>
 
</para>
<para>
<computeroutput>#include &lt;subclass-example.hpp&gt;</computeroutput>
</para>
Inheritance diagram for MyLibrary::SubclassExample&lt; TemplatedClass &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_my_library_1_1_subclass_example__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for MyLibrary::SubclassExample&lt; TemplatedClass &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_my_library_1_1_subclass_example__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_class_my_library_1_1_subclass_example_1a08668a9f16511ad37fb547c985d62764">virtualfunc</link> () override</para>
</listitem>
            <listitem><para>template&lt;typename T&gt; </para><para>std::shared_ptr&lt; std::string &gt; <link linkend="_class_my_library_1_1_subclass_example_1ad2432fe3b060789f6f7052c515d515f4">function_template_test</link> (std::shared_ptr&lt; T &gt; &amp;param)</para>

<para>Template function function. </para>
</listitem>
            <listitem><para>template&lt;typename T, typename Foo, typename Bar, typename Alice, typename Bob, typename Charlie, typename Hello, typename World&gt; </para><para>std::pair&lt; std::string, std::string &gt; <link linkend="_class_my_library_1_1_subclass_example_1a92227fff4f72a11be0e21d88914ba63e">long_function_with_many_parameters</link> (std::shared_ptr&lt; T &gt; &amp;param1, std::shared_ptr&lt; std::string &gt; &amp;param2, bool parameter3, Alice paramater4 Bob parameter 5)</para>

<para>Extra long function with lots of parameters and many template types. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_my_library_1_1_example">MyLibrary::Example</link>        <itemizedlist>
            <listitem><para>std::string <link linkend="_class_my_library_1_1_example_1a1c0046b0674eb4cad09c5d3e943912b8">test</link> (const std::string &amp;test)</para>

<para>brief summary </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Static Public Member Functions inherited from <link linkend="_class_my_library_1_1_example">MyLibrary::Example</link>        <itemizedlist>
            <listitem><para>static bool <link linkend="_class_my_library_1_1_example_1a8c3ea5ce33b9e1fada7ff46eab0956a7">staticfunc</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename TemplatedClass&gt;<?linebreak?>class MyLibrary::SubclassExample&lt; TemplatedClass &gt;</title></simplesect>

<para>some subclass </para>
<para>
Definition at line <link linkend="_subclass-example_8hpp_source_1l00012">12</link> of file <link linkend="_subclass-example_8hpp_source">subclass-example.hpp</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_my_library_1_1_subclass_example_1ad2432fe3b060789f6f7052c515d515f4"/><section>
    <title>function_template_test()</title>
<indexterm><primary>function_template_test</primary><secondary>MyLibrary::SubclassExample&lt; TemplatedClass &gt;</secondary></indexterm>
<indexterm><primary>MyLibrary::SubclassExample&lt; TemplatedClass &gt;</primary><secondary>function_template_test</secondary></indexterm>
<computeroutput>template&lt;typename TemplatedClass&gt; </computeroutput><computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>std::shared_ptr&lt; std::string &gt; <link linkend="_class_my_library_1_1_subclass_example">MyLibrary::SubclassExample</link>&lt; TemplatedClass &gt;::function_template_test (std::shared_ptr&lt; T &gt; &amp; param)</computeroutput></para><para>

<para>Template function function. </para>
</para>
</section>
<anchor xml:id="_class_my_library_1_1_subclass_example_1a92227fff4f72a11be0e21d88914ba63e"/><section>
    <title>long_function_with_many_parameters()</title>
<indexterm><primary>long_function_with_many_parameters</primary><secondary>MyLibrary::SubclassExample&lt; TemplatedClass &gt;</secondary></indexterm>
<indexterm><primary>MyLibrary::SubclassExample&lt; TemplatedClass &gt;</primary><secondary>long_function_with_many_parameters</secondary></indexterm>
<computeroutput>template&lt;typename TemplatedClass&gt; </computeroutput><computeroutput>template&lt;typename T, typename Foo, typename Bar, typename Alice, typename Bob, typename Charlie, typename Hello, typename World&gt; </computeroutput><para><computeroutput>std::pair&lt; std::string, std::string &gt; <link linkend="_class_my_library_1_1_subclass_example">MyLibrary::SubclassExample</link>&lt; TemplatedClass &gt;::long_function_with_many_parameters (std::shared_ptr&lt; T &gt; &amp; param1, std::shared_ptr&lt; std::string &gt; &amp; param2, bool parameter3, Alice paramater4 Bob parameter 5)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Extra long function with lots of parameters and many template types. </para>
</para>

<para>Also has a long return type.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>param1</entry><entry>
<para>first parameter </para>
</entry>
                            </row>
                            <row>
<entry>param2</entry><entry>
<para>second parameter </para>
</entry>
                            </row>
                            <row>
<entry>parameter3</entry><entry>
<para>third parameter </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_subclass-example_8hpp_source_1l00037">37</link> of file <link linkend="_subclass-example_8hpp_source">subclass-example.hpp</link>.</para>
</section>
<anchor xml:id="_class_my_library_1_1_subclass_example_1a08668a9f16511ad37fb547c985d62764"/><section>
    <title>virtualfunc()</title>
<indexterm><primary>virtualfunc</primary><secondary>MyLibrary::SubclassExample&lt; TemplatedClass &gt;</secondary></indexterm>
<indexterm><primary>MyLibrary::SubclassExample&lt; TemplatedClass &gt;</primary><secondary>virtualfunc</secondary></indexterm>
<computeroutput>template&lt;typename TemplatedClass&gt; </computeroutput><para><computeroutput>int <link linkend="_class_my_library_1_1_subclass_example">MyLibrary::SubclassExample</link>&lt; TemplatedClass &gt;::virtualfunc ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para><para><link linkend="_bug_1_bug000002">Bug</link> 
<para>second bug </para>
</para><formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
<para>
Implements <link linkend="_class_my_library_1_1_example_1a8431ef1c10c4e2a36302b8e8556514f6">MyLibrary::Example</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
doxygen-awesome-css/include/MyLibrary/<link linkend="_subclass-example_8hpp">subclass-example.hpp</link></section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_benchmark__gtop__pygmo_8py_source" xml:lang="en-US">
<title>benchmark_gtop_pygmo.py</title>
<indexterm><primary>examples/benchmark_gtop_pygmo.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00005"/>00005 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;Test&#32;for&#32;fcmaes&#32;coordinated&#32;retry&#32;applied&#32;to&#32;https://www.esa.int/gsp/ACT/projects/gtop/</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00007"/>00007 <emphasis role="comment">#&#32;using&#32;https://github.com/esa/pygmo2&#32;/&#32;pagmo2&#32;optimization&#32;algorithms.</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00008"/>00008 <emphasis role="comment">#&#32;</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00009"/>00009 <emphasis role="comment">#&#32;Requires&#32;pygmo&#32;which&#32;needs&#32;python&#32;3.8,&#32;</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00010"/>00010 <emphasis role="comment">#&#32;Create&#32;an&#32;python&#32;3.8&#32;environment:</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00011"/>00011 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00012"/>00012 <emphasis role="comment">#&#32;mamba&#32;create&#32;-n&#32;env38&#32;python=3.8</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00013"/>00013 <emphasis role="comment">#&#32;conda&#32;activate&#32;env38</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00014"/>00014 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00015"/>00015 <emphasis role="comment">#&#32;Install&#32;dependencies:</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00016"/>00016 <emphasis role="comment">#&#32;pip&#32;install&#32;pygmo&#32;</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00017"/>00017 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00018"/>00018 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.2</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00019"/>00019 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00020"/>00020 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00021"/>00021 <emphasis role="keyword">import</emphasis>&#32;math
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00022"/>00022 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00023"/>00023 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1advretry">fcmaes.advretry</link>&#32;<emphasis role="keyword">import</emphasis>&#32;minimize
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00024"/>00024 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1astro">fcmaes.astro</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Messenger,&#32;Cassini2,&#32;Rosetta,&#32;Gtoc1,&#32;Cassini1,&#32;Sagas,&#32;Tandem,&#32;MessFull
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00025"/>00025 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;dtime,&#32;Optimizer,&#32;Sequence,&#32;De_cpp,&#32;Cma_cpp
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00026"/>00026 <emphasis role="keyword">from</emphasis>&#32;numpy.random&#32;<emphasis role="keyword">import</emphasis>&#32;MT19937,&#32;Generator
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00027"/>00027 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;OptimizeResult
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00028"/>00028 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00029"/>00029 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00030"/>00030 <emphasis role="keyword">import</emphasis>&#32;pygmo&#32;<emphasis role="keyword">as</emphasis>&#32;pg
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00031"/>00031 <emphasis role="keyword">import</emphasis>&#32;time
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00032"/>00032 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00033"/>00033 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00034"/>00034 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00035"/>00035 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00036"/>00036 logger.remove()
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00037"/><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1ac734fa0c08aa511b65e95ca5c64f2a4c">00037</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00038"/>00038 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00039"/>00039 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00040"/>00040 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp">pygmo_udp</link>(object):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00041"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp">00041</link> &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Wraps&#32;a&#32;fcmaes&#32;fitness&#32;function&#32;as&#32;pygmo&#32;udp.&quot;&quot;&quot;</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00042"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a554b734061744f3a24a94b3b2b5638b1">00042</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a554b734061744f3a24a94b3b2b5638b1">__init__</link>(self,&#32;fun,&#32;bounds):&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00043"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a3cbfcb92d557e07dca883659abd8375a">00043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a3cbfcb92d557e07dca883659abd8375a">fun</link>&#32;=&#32;fun
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00044"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1ab521631aff5164ef305cc19229711bb9">00044</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1ab521631aff5164ef305cc19229711bb9">bounds</link>&#32;=&#32;bounds
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00046"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a8b05705866c5de83931191324a4e1311">00046</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a8b05705866c5de83931191324a4e1311">fitness</link>(self,&#32;x):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a3cbfcb92d557e07dca883659abd8375a">fun</link>(x)]
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00048"/>00048 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00049"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a41d3b087b32923f75cbe401f3f2419e3">00049</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a41d3b087b32923f75cbe401f3f2419e3">get_bounds</link>(self):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1ab521631aff5164ef305cc19229711bb9">bounds</link>.lb,&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1ab521631aff5164ef305cc19229711bb9">bounds</link>.ub)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00051"/>00051 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00052"/>00052 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1adacb1bdcd0ee085801b2b9e6e8022ace">de_cma_pyg</link>(max_evaluations&#32;=&#32;50000,&#32;popsize=31,&#32;stop_fitness&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00053"/><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1adacb1bdcd0ee085801b2b9e6e8022ace">00053</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals&#32;=&#32;None,&#32;cma_max_evals&#32;=&#32;None):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Sequence&#32;de1220&#32;-&gt;&#32;cmaes&#32;pagmo.&quot;&quot;&quot;</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00055"/>00055 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;deEvals&#32;=&#32;np.random.uniform(0.1,&#32;0.3)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;de_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals&#32;=&#32;int(deEvals*max_evaluations)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;cma_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;=&#32;int((1.0-deEvals)*max_evaluations)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;opt1&#32;=&#32;<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg">De_pyg</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;de_max_evals,&#32;stop_fitness&#32;=&#32;stop_fitness)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;opt2&#32;=&#32;<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg">Cma_pyg</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;cma_max_evals,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>([opt1,&#32;opt2])
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00065"/>00065 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00066"/>00066 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1ae9fd95cc51761a89ffc0635dba4aa504">pyg_de_cma</link>(max_evaluations&#32;=&#32;50000,&#32;popsize=31,&#32;stop_fitness&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00067"/><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1ae9fd95cc51761a89ffc0635dba4aa504">00067</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals&#32;=&#32;None,&#32;cma_max_evals&#32;=&#32;None):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Sequence&#32;de1220&#32;-&gt;&#32;cmaes&#32;c++.&quot;&quot;&quot;</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00069"/>00069 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;deEvals&#32;=&#32;np.random.uniform(0.1,&#32;0.3)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;de_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals&#32;=&#32;int(deEvals*max_evaluations)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;cma_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;=&#32;int((1.0-deEvals)*max_evaluations)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00075"/>00075 &#32;&#32;&#32;&#32;opt1&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp">De_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;de_max_evals,&#32;stop_fitness&#32;=&#32;stop_fitness)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;opt2&#32;=&#32;<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg">Cma_pyg</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;cma_max_evals,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>([opt1,&#32;opt2])
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00079"/>00079 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00080"/>00080 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a35d3645d623ed7454908364351809f25">de_pyg_cma</link>(max_evaluations&#32;=&#32;50000,&#32;popsize=31,&#32;stop_fitness&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00081"/><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a35d3645d623ed7454908364351809f25">00081</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals&#32;=&#32;None,&#32;cma_max_evals&#32;=&#32;None):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Sequence&#32;de&#32;c++&#32;-&gt;&#32;cmaes&#32;pagmo.&quot;&quot;&quot;</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00083"/>00083 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00084"/>00084 &#32;&#32;&#32;&#32;deEvals&#32;=&#32;np.random.uniform(0.1,&#32;0.3)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;de_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals&#32;=&#32;int(deEvals*max_evaluations)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;cma_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;=&#32;int((1.0-deEvals)*max_evaluations)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;opt1&#32;=&#32;<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg">De_pyg</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;de_max_evals,&#32;stop_fitness&#32;=&#32;stop_fitness)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;opt2&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp">Cma_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;cma_max_evals,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>([opt1,&#32;opt2])
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00093"/>00093 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00094"/>00094 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg">Cma_pyg</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00095"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg">00095</link> &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;CMA_ES&#32;pagmo&#32;implementation.&quot;&quot;&quot;</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00096"/>00096 &#32;&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00097"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a72cd3810a8aa777511b258e2c10179b5">00097</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a72cd3810a8aa777511b258e2c10179b5">__init__</link>(self,&#32;max_evaluations=50000,&#32;popsize&#32;=&#32;31,&#32;guess=None,&#32;stop_fitness&#32;=&#32;-np.inf):&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;cma&#32;pagmo&apos;</emphasis>)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00099"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a417a165a5ceee871a126af16ba74aa40">00099</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a417a165a5ceee871a126af16ba74aa40">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00100"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ab9b4f3a7942f95a90e46cabf2ae20641">00100</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ab9b4f3a7942f95a90e46cabf2ae20641">guess</link>&#32;=&#32;guess
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00101"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1abb8008f11f1ddb42806a01d4a70c931b">00101</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1abb8008f11f1ddb42806a01d4a70c931b">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00102"/>00102 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00103"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a">00103</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a">minimize</link>(self,&#32;fun,&#32;bounds,&#32;guess=None,&#32;sdevs=0.3,&#32;rg=Generator(MT19937()),&#32;store=<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gen&#32;=&#32;int(self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store)&#32;/&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a417a165a5ceee871a126af16ba74aa40">popsize</link>&#32;+&#32;1)&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algo&#32;=&#32;pg.algorithm(pg.cmaes(gen=gen,&#32;force_bounds&#32;=&#32;<emphasis role="keyword">True</emphasis>,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sigma0&#32;=&#32;np.mean(sdevs),&#32;seed&#32;=&#32;int(rg.uniform(0,&#32;2**32&#32;-&#32;1))))
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;udp&#32;=&#32;<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp">pygmo_udp</link>(fun,&#32;bounds)&#32;&#32;&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prob&#32;=&#32;pg.problem(udp)&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pop&#32;=&#32;pg.population(prob,&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a417a165a5ceee871a126af16ba74aa40">popsize</link>)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;=&#32;np.multiply(0.5&#32;*&#32;(bounds.ub&#32;-&#32;bounds.lb),&#32;sdevs)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a417a165a5ceee871a126af16ba74aa40">popsize</link>):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xi&#32;=&#32;np.random.normal(guess,&#32;scale)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xi&#32;=&#32;np.maximum(np.minimum(xi,&#32;bounds.ub),&#32;bounds.lb)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pop.set_x(i,&#32;xi)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pop&#32;=&#32;algo.evolve(pop)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pop.champion_x,&#32;pop.champion_f,&#32;pop.problem.get_fevals()
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00118"/>00118 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00119"/>00119 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg">De_pyg</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00120"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg">00120</link> &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Differential&#32;Evolution&#32;pagmo&#32;implementation.&quot;&quot;&quot;</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00122"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a9f4fc297f56e80492558024b35ffa75c">00122</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a9f4fc297f56e80492558024b35ffa75c">__init__</link>(self,&#32;max_evaluations=50000,&#32;popsize&#32;=&#32;None,&#32;stop_fitness&#32;=&#32;-np.inf):&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;de1220&#32;pagmo&apos;</emphasis>)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00124"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a3d8f82742cfd9cc92c3f9711096abbea">00124</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a3d8f82742cfd9cc92c3f9711096abbea">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00125"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a00ba15f8005bd8a195e420220b6b4773">00125</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a00ba15f8005bd8a195e420220b6b4773">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00126"/>00126 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00127"/><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916">00127</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916">minimize</link>(self,&#32;fun,&#32;bounds,&#32;guess=None,&#32;sdevs=None,&#32;rg=Generator(MT19937()),&#32;store=<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gen&#32;=&#32;int(self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store)&#32;/&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a3d8f82742cfd9cc92c3f9711096abbea">popsize</link>&#32;+&#32;1)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algo&#32;=&#32;pg.algorithm(pg.de1220(gen=gen,&#32;allowed_variants&#32;=&#32;[1,&#32;2,&#32;4,&#32;7,&#32;10,&#32;13,&#32;14,&#32;15,&#32;16],&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variant_adptv&#32;=&#32;1,&#32;seed&#32;=&#32;int(rg.uniform(0,&#32;2**32&#32;-&#32;1))))
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00131"/>00131 <emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algo&#32;=&#32;pg.algorithm(pg.sade(gen=gen,&#32;variant_adptv&#32;=&#32;1,&#32;seed&#32;=&#32;int(rg.uniform(0,&#32;2**32&#32;-&#32;1))))</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;udp&#32;=&#32;<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp">pygmo_udp</link>(fun,&#32;bounds)&#32;&#32;&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prob&#32;=&#32;pg.problem(udp)&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pop&#32;=&#32;pg.population(prob,&#32;self.<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a3d8f82742cfd9cc92c3f9711096abbea">popsize</link>)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pop&#32;=&#32;algo.evolve(pop)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pop.champion_x,&#32;pop.champion_f,&#32;pop.problem.get_fevals()
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00137"/>00137 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00138"/><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa">00138</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa">_test_optimizer</link>(opt,&#32;problem,&#32;num_retries&#32;=&#32;10000,&#32;num&#32;=&#32;1,&#32;value_limit&#32;=&#32;100.0,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_val&#32;=&#32;-1E99,&#32;log&#32;=&#32;logger()):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00140"/>00140 &#32;&#32;&#32;&#32;logger.info(<emphasis role="stringliteral">&quot;Testing&#32;coordinated&#32;retry&#32;&quot;</emphasis>&#32;+&#32;opt.name&#32;+&#32;&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;problem.name&#32;)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00141"/>00141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(num):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;minimize(problem.fun,&#32;problem.bounds,&#32;value_limit,&#32;num_retries,&#32;log,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer=opt,&#32;stop_fitness&#32;=&#32;stop_val)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00144"/>00144 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00145"/><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819">00145</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819">_test_archipelago</link>(algo,&#32;problem,&#32;num&#32;=&#32;10000,&#32;stop_val&#32;=&#32;-1E99,&#32;log&#32;=&#32;logger()):&#32;&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;udp&#32;=&#32;<link linkend="_classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp">pygmo_udp</link>(problem.fun,&#32;problem.bounds)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00147"/>00147 &#32;&#32;&#32;&#32;prob&#32;=&#32;pg.problem(udp)&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00148"/>00148 &#32;&#32;&#32;&#32;best_y&#32;=&#32;np.inf
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;best_x&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00150"/>00150 &#32;&#32;&#32;&#32;t0&#32;=&#32;time.perf_counter()
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00151"/>00151 &#32;&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(num):
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;archi&#32;=&#32;pg.archipelago(n=mp.cpu_count(),&#32;algo=algo,&#32;prob=prob,&#32;pop_size=64)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;archi.evolve()&#32;&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;archi.wait()
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;archi.get_champions_f()
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;ys&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">and</emphasis>&#32;len(ys)&#32;&gt;&#32;0:&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sort&#32;=&#32;np.argsort([y[0]&#32;<emphasis role="keywordflow">for</emphasis>&#32;y&#32;<emphasis role="keywordflow">in</emphasis>&#32;ys])
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;ys[sort[0]][0]
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;best_y:
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_y&#32;=&#32;y
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_x&#32;=&#32;archi.get_champions_x()[sort[0]]
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;message&#32;=&#32;<emphasis role="stringliteral">&apos;{0}&#32;{1}&#32;{2}&#32;{3!s}&apos;</emphasis>.<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1ac734fa0c08aa511b65e95ca5c64f2a4c">format</link>(
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem.name,&#32;dtime(t0),&#32;best_y,&#32;list(best_x))
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(message)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;best_y&#32;&lt;&#32;stop_val:&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;OptimizeResult(x=best_x,&#32;fun=best_y,&#32;success=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00169"/>00169 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00170"/><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1acf3acdca1f90a44c0759ad0d1cda8b22">00170</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1acf3acdca1f90a44c0759ad0d1cda8b22">test_archipelago</link>():
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;max_evals&#32;=&#32;500000
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;popsize&#32;=&#32;32
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;gen&#32;=&#32;int(max_evals&#32;/&#32;popsize&#32;+&#32;1)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;algo&#32;=&#32;pg.algorithm(pg.de1220(gen=gen))
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00175"/>00175 &#32;&#32;&#32;&#32;fac&#32;=&#32;1.005
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00176"/>00176 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819">_test_archipelago</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_cassini1">Cassini1</link>(),&#32;num&#32;=&#32;400,&#32;stop_val&#32;=&#32;4.9307*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00177"/>00177 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819">_test_archipelago</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_cassini2">Cassini2</link>(),&#32;num&#32;=&#32;600,&#32;stop_val&#32;=&#32;8.383*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819">_test_archipelago</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_gtoc1">Gtoc1</link>(),&#32;num&#32;=&#32;1000,&#32;stop_val&#32;=&#32;-1581950/fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819">_test_archipelago</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_messenger">Messenger</link>(),&#32;num&#32;=&#32;800,&#32;stop_val&#32;=&#32;8.63*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819">_test_archipelago</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_rosetta">Rosetta</link>(),&#32;num&#32;=&#32;400,&#32;stop_val&#32;=&#32;1.3433*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819">_test_archipelago</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_sagas">Sagas</link>(),&#32;num&#32;=&#32;400,&#32;stop_val&#32;=&#32;18.187*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00182"/>00182 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819">_test_archipelago</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_tandem">Tandem</link>(5),&#32;num&#32;=&#32;2000,&#32;stop_val&#32;=&#32;-1500.6/fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00183"/>00183 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819">_test_archipelago</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_mess_full">MessFull</link>(),&#32;num&#32;=&#32;5000,&#32;stop_val&#32;=&#32;1.959*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00184"/>00184 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00185"/><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d">00185</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d">test_coordinated_retry</link>():
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00186"/>00186 &#32;&#32;&#32;&#32;numRuns&#32;=&#32;10
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00187"/>00187 &#32;&#32;&#32;&#32;min_evals&#32;=&#32;1500
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00188"/>00188 &#32;&#32;&#32;&#32;algo&#32;=&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1adacb1bdcd0ee085801b2b9e6e8022ace">de_cma_pyg</link>(min_evals)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00189"/>00189 &#32;&#32;&#32;&#32;<emphasis role="comment">#algo&#32;=&#32;pyg_de_cma(min_evals)</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00190"/>00190 &#32;&#32;&#32;&#32;<emphasis role="comment">#algo&#32;=&#32;de_pyg_cma(min_evals)</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00191"/>00191 &#32;&#32;&#32;&#32;fac&#32;=&#32;1.005
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00192"/>00192 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa">_test_optimizer</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_gtoc1">Gtoc1</link>(),&#32;num_retries&#32;=&#32;10000,&#32;num&#32;=&#32;numRuns,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;=&#32;-300000.0,&#32;stop_val&#32;=&#32;-1581950/fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00194"/>00194 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa">_test_optimizer</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_cassini1">Cassini1</link>(),&#32;num_retries&#32;=&#32;4000,&#32;num&#32;=&#32;numRuns,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;=&#32;20.0,&#32;stop_val&#32;=&#32;4.9307*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00196"/>00196 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa">_test_optimizer</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_cassini2">Cassini2</link>(),&#32;num_retries&#32;=&#32;6000,&#32;num&#32;=&#32;numRuns,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;=&#32;20.0,&#32;stop_val&#32;=&#32;8.383*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa">_test_optimizer</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_messenger">Messenger</link>(),&#32;num_retries&#32;=&#32;8000,&#32;num&#32;=&#32;numRuns,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;=&#32;20.0,&#32;stop_val&#32;=&#32;8.63*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00200"/>00200 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa">_test_optimizer</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_rosetta">Rosetta</link>(),&#32;num_retries&#32;=&#32;4000,&#32;num&#32;=&#32;numRuns,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;=&#32;20.0,&#32;stop_val&#32;=&#32;1.3433*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa">_test_optimizer</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_sagas">Sagas</link>(),&#32;num_retries&#32;=&#32;4000,&#32;num&#32;=&#32;numRuns,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;=&#32;100.0,&#32;stop_val&#32;=&#32;18.187*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa">_test_optimizer</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_tandem">Tandem</link>(5),&#32;num_retries&#32;=&#32;20000,&#32;num&#32;=&#32;numRuns,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;=&#32;-300.0,&#32;stop_val&#32;=&#32;-1500.6/fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa">_test_optimizer</link>(algo,&#32;<link linkend="_classfcmaes_1_1astro_1_1_mess_full">MessFull</link>(),&#32;num_retries&#32;=&#32;50000,&#32;num&#32;=&#32;numRuns,&#32;
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;=&#32;12.0,&#32;stop_val&#32;=&#32;1.959*fac)
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00208"/>00208 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00209"/>00209 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d">test_coordinated_retry</link>()
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="comment">#test_archipelago()</emphasis>
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00212"/>00212 
<anchor xml:id="_benchmark__gtop__pygmo_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;
</programlisting></section>

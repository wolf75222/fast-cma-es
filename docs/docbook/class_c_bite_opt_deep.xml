<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_c_bite_opt_deep" xml:lang="en-US">
<title>CBiteOptDeep Class Reference</title>
<indexterm><primary>CBiteOptDeep</primary></indexterm>
<para>
<computeroutput>#include &lt;biteopt.h&gt;</computeroutput>
</para>
Inheritance diagram for CBiteOptDeep:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for CBiteOptDeep:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap">CBiteOptWrap</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_c_bite_opt_deep_1a65d5f650fd7eae9ae1d1cb76387a3179">CBiteOptDeep</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_class_c_bite_opt_deep_1a8442d47ab16f76d4783a4f8227ab78a7">~CBiteOptDeep</link> ()</para>
</listitem>
            <listitem><para>virtual const double * <link linkend="_class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3">getBestParams</link> () const</para>
</listitem>
            <listitem><para>virtual double <link linkend="_class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31">getBestCost</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_c_bite_sel_base">CBiteSelBase</link> ** <link linkend="_class_c_bite_opt_deep_1a7b759e5dbc58b29e36f7d3c6a10e16a7">getSels</link> ()</para>
</listitem>
            <listitem><para>const char ** <link linkend="_class_c_bite_opt_deep_1a4ddcbc966999f0b3f4b59c8f8e909864">getSelNames</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_class_c_bite_opt_deep_1aa30c464f1425ad1219e7f512e75527a5">getSelCount</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61">updateDims</link> (const int aParamCount, const int M=6, const int PopSize0=0)</para>
</listitem>
            <listitem><para>void <link linkend="_class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b">init</link> (<link linkend="_class_c_bite_rnd">CBiteRnd</link> &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</para>
</listitem>
            <listitem><para>int <link linkend="_class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786">optimize</link> (<link linkend="_class_c_bite_rnd">CBiteRnd</link> &amp;rnd)</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_c_bite_opt_interface">CBiteOptInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809">CBiteOptInterface</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce">~CBiteOptInterface</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d">getMinValues</link> (double *const p) const =0</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d">getMaxValues</link> (double *const p) const =0</para>
</listitem>
            <listitem><para>virtual double <link linkend="_class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d">optcost</link> (const double *const p)=0</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_c_bite_opt_deep_1a5aeb781988a714cc50107efa2521cc52">deleteBuffers</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_class_c_bite_opt_deep_1ac7cfdf4754e5ad3fef6b3cd98ba22520">ParamCount</link></para>

<para>The total number of internal parameter values in use. </para>
</listitem>
            <listitem><para>int <link linkend="_class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b">OptCount</link></para>

<para>The total number of optimization objects in use. </para>
</listitem>
            <listitem><para><link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap">CBiteOptWrap</link> ** <link linkend="_class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6">Opts</link></para>

<para>Optimization objects. </para>
</listitem>
            <listitem><para><link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap">CBiteOptWrap</link> * <link linkend="_class_c_bite_opt_deep_1afd1350f64112950d0887700984547b96">BestOpt</link></para>

<para>Optimizer that contains the best solution. </para>
</listitem>
            <listitem><para><link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap">CBiteOptWrap</link> * <link linkend="_class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18">CurOpt</link></para>

<para>Current optimizer object. </para>
</listitem>
            <listitem><para>int <link linkend="_class_c_bite_opt_deep_1ad7c9509c6e4525db8faab200f4f2edf6">StallCount</link></para>

<para>The number of iterations without improvement. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Deep optimization class. Based on an array of M <link linkend="_class_c_bite_opt">CBiteOpt</link> objects. This &quot;deep&quot; method pushes the newly-obtained solution to the next <link linkend="_class_c_bite_opt">CBiteOpt</link> object which is then optimized.</para>

<para>Description is available at <link xlink:href="https://github.com/avaneev/biteopt">https://github.com/avaneev/biteopt</link> </para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01438">1438</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_c_bite_opt_deep_1a65d5f650fd7eae9ae1d1cb76387a3179"/><section>
    <title>CBiteOptDeep()</title>
<indexterm><primary>CBiteOptDeep</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>CBiteOptDeep</secondary></indexterm>
<para><computeroutput>CBiteOptDeep::CBiteOptDeep ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_biteopt_8h_source_1l01441">1441</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a65d5f650fd7eae9ae1d1cb76387a3179_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1a8442d47ab16f76d4783a4f8227ab78a7"/><section>
    <title>~CBiteOptDeep()</title>
<indexterm><primary>~CBiteOptDeep</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>~CBiteOptDeep</secondary></indexterm>
<para><computeroutput>virtual CBiteOptDeep::~CBiteOptDeep ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_biteopt_8h_source_1l01448">1448</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a8442d47ab16f76d4783a4f8227ab78a7_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_c_bite_opt_deep_1a5aeb781988a714cc50107efa2521cc52"/><section>
    <title>deleteBuffers()</title>
<indexterm><primary>deleteBuffers</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>deleteBuffers</secondary></indexterm>
<para><computeroutput>void CBiteOptDeep::deleteBuffers ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Function deletes previously allocated buffers. </para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01653">1653</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a5aeb781988a714cc50107efa2521cc52_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31"/><section>
    <title>getBestCost()</title>
<indexterm><primary>getBestCost</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>getBestCost</secondary></indexterm>
<para><computeroutput>virtual double CBiteOptDeep::getBestCost ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para><formalpara><title>Returns</title>

<para>Cost of the best parameter vector. </para>
</formalpara>
</para>
<para>
Implements <link linkend="_class_c_bite_opt_interface_1a79e5a8cdcdf2c9a12f16e4aeba49c75f">CBiteOptInterface</link>.</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01458">1458</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a961516dc7772d327e64965fc3e07ce31_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a961516dc7772d327e64965fc3e07ce31_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3"/><section>
    <title>getBestParams()</title>
<indexterm><primary>getBestParams</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>getBestParams</secondary></indexterm>
<para><computeroutput>virtual const double * CBiteOptDeep::getBestParams ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para><formalpara><title>Returns</title>

<para>Best parameter vector. </para>
</formalpara>
</para>
<para>
Implements <link linkend="_class_c_bite_opt_interface_1a2da6e8d4cfb2ecc8380b0cd220d1aeac">CBiteOptInterface</link>.</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01453">1453</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a17c7c044ef259f3c68e2e47c53c043a3_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a17c7c044ef259f3c68e2e47c53c043a3_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1aa30c464f1425ad1219e7f512e75527a5"/><section>
    <title>getSelCount()</title>
<indexterm><primary>getSelCount</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>getSelCount</secondary></indexterm>
<para><computeroutput>int CBiteOptDeep::getSelCount ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Function returns the number of selectors in use by the current <link linkend="_class_c_bite_opt">CBiteOpt</link> object. </para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01487">1487</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_aa30c464f1425ad1219e7f512e75527a5_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_aa30c464f1425ad1219e7f512e75527a5_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1a4ddcbc966999f0b3f4b59c8f8e909864"/><section>
    <title>getSelNames()</title>
<indexterm><primary>getSelNames</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>getSelNames</secondary></indexterm>
<para><computeroutput>const char ** CBiteOptDeep::getSelNames ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Function returns a pointer to an array of selector names. </para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01477">1477</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a4ddcbc966999f0b3f4b59c8f8e909864_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a4ddcbc966999f0b3f4b59c8f8e909864_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1a7b759e5dbc58b29e36f7d3c6a10e16a7"/><section>
    <title>getSels()</title>
<indexterm><primary>getSels</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>getSels</secondary></indexterm>
<para><computeroutput><link linkend="_class_c_bite_sel_base">CBiteSelBase</link> ** CBiteOptDeep::getSels ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Function returns a pointer to an array of selectors in use by the current <link linkend="_class_c_bite_opt">CBiteOpt</link> object. </para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01468">1468</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a7b759e5dbc58b29e36f7d3c6a10e16a7_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a7b759e5dbc58b29e36f7d3c6a10e16a7_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b"/><section>
    <title>init()</title>
<indexterm><primary>init</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>init</secondary></indexterm>
<para><computeroutput>void CBiteOptDeep::init (<link linkend="_class_c_bite_rnd">CBiteRnd</link> &amp; rnd, const double *const InitParams = <computeroutput>NULL</computeroutput>
, const double InitRadius = <computeroutput>1.0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Function initializes *this optimizer. Performs N=PopSize objective function evaluations.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>rnd</entry><entry>
<para>Random number generator. </para>
</entry>
                            </row>
                            <row>
<entry>InitParams</entry><entry>
<para>Initial parameter values. </para>
</entry>
                            </row>
                            <row>
<entry>InitRadius</entry><entry>
<para>Initial radius, relative to the default value. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01539">1539</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_abeb2e2aa0929e9fb6741ac7b0892a31b_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_abeb2e2aa0929e9fb6741ac7b0892a31b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786"/><section>
    <title>optimize()</title>
<indexterm><primary>optimize</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>optimize</secondary></indexterm>
<para><computeroutput>int CBiteOptDeep::optimize (<link linkend="_class_c_bite_rnd">CBiteRnd</link> &amp; rnd)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Function performs the parameter optimization iteration that involves 1 objective function evaluation.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>rnd</entry><entry>
<para>Random number generator. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The number of non-improving iterations so far. The plateau threshold value is ParamCount * 64. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01563">1563</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a5f9dce3d0bcb37dd0d63fec707204786_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a5f9dce3d0bcb37dd0d63fec707204786_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61"/><section>
    <title>updateDims()</title>
<indexterm><primary>updateDims</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>updateDims</secondary></indexterm>
<para><computeroutput>void CBiteOptDeep::updateDims (const int aParamCount, const int M = <computeroutput>6</computeroutput>
, const int PopSize0 = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Function updates dimensionality of *this object. Function does nothing if dimensionality has not changed since the last call. This function should be called at least once before calling the <link linkend="_class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b">init()</link> function.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>aParamCount</entry><entry>
<para>The number of parameters being optimized. </para>
</entry>
                            </row>
                            <row>
<entry>M</entry><entry>
<para>The number of <link linkend="_class_c_bite_opt">CBiteOpt</link> objects. This number depends on the complexity of the objective function, if the default value does not produce a good solution, it should be increased together with the iteration count. Minimal value is 1, in this case a plain <link linkend="_class_c_bite_opt">CBiteOpt</link> optimization will be performed. </para>
</entry>
                            </row>
                            <row>
<entry>PopSize0</entry><entry>
<para>The number of elements in population to use. If set to 0, the default formula will be used. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01507">1507</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a48ae954f715acc3433125af9b0abaa61_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_c_bite_opt_deep_a48ae954f715acc3433125af9b0abaa61_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_c_bite_opt_deep_1afd1350f64112950d0887700984547b96"/><section>
    <title>BestOpt</title>
<indexterm><primary>BestOpt</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>BestOpt</secondary></indexterm>
<para><computeroutput><link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap">CBiteOptWrap</link>* CBiteOptDeep::BestOpt<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Optimizer that contains the best solution. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01645">1645</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18"/><section>
    <title>CurOpt</title>
<indexterm><primary>CurOpt</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>CurOpt</secondary></indexterm>
<para><computeroutput><link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap">CBiteOptWrap</link>* CBiteOptDeep::CurOpt<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Current optimizer object. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01646">1646</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b"/><section>
    <title>OptCount</title>
<indexterm><primary>OptCount</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>OptCount</secondary></indexterm>
<para><computeroutput>int CBiteOptDeep::OptCount<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>The total number of optimization objects in use. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01643">1643</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6"/><section>
    <title>Opts</title>
<indexterm><primary>Opts</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>Opts</secondary></indexterm>
<para><computeroutput><link linkend="_class_c_bite_opt_deep_1_1_c_bite_opt_wrap">CBiteOptWrap</link>** CBiteOptDeep::Opts<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Optimization objects. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01644">1644</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1ac7cfdf4754e5ad3fef6b3cd98ba22520"/><section>
    <title>ParamCount</title>
<indexterm><primary>ParamCount</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>ParamCount</secondary></indexterm>
<para><computeroutput>int CBiteOptDeep::ParamCount<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>The total number of internal parameter values in use. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01642">1642</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<anchor xml:id="_class_c_bite_opt_deep_1ad7c9509c6e4525db8faab200f4f2edf6"/><section>
    <title>StallCount</title>
<indexterm><primary>StallCount</primary><secondary>CBiteOptDeep</secondary></indexterm>
<indexterm><primary>CBiteOptDeep</primary><secondary>StallCount</secondary></indexterm>
<para><computeroutput>int CBiteOptDeep::StallCount<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>The number of iterations without improvement. </para>
</para>
<para>
Definition at line <link linkend="_biteopt_8h_source_1l01647">1647</link> of file <link linkend="_biteopt_8h_source">biteopt.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
_fcmaescpp/include/<link linkend="_biteopt_8h">biteopt.h</link></section>
</section>

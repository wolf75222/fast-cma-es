<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_scheduling_8py_source" xml:lang="en-US">
<title>scheduling.py</title>
<indexterm><primary>examples/scheduling.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_scheduling_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1scheduling">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00005"/>00005 
<anchor xml:id="_scheduling_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;See&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Scheduling.adoc&#32;for&#32;a&#32;detailed&#32;description.</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00007"/>00007 
<anchor xml:id="_scheduling_8py_source_1l00008"/>00008 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.2</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00009"/>00009 
<anchor xml:id="_scheduling_8py_source_1l00010"/>00010 <emphasis role="keyword">import</emphasis>&#32;pandas&#32;<emphasis role="keyword">as</emphasis>&#32;pd
<anchor xml:id="_scheduling_8py_source_1l00011"/>00011 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_scheduling_8py_source_1l00012"/>00012 <emphasis role="keyword">import</emphasis>&#32;math,&#32;time
<anchor xml:id="_scheduling_8py_source_1l00013"/>00013 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;retry,&#32;advretry,&#32;mode,&#32;modecpp
<anchor xml:id="_scheduling_8py_source_1l00014"/>00014 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Bite_cpp,&#32;Cma_cpp,&#32;De_cpp,&#32;de_cma,&#32;dtime,&#32;Dual_annealing,&#32;Differential_evolution,&#32;Minimize
<anchor xml:id="_scheduling_8py_source_1l00015"/>00015 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds
<anchor xml:id="_scheduling_8py_source_1l00016"/>00016 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_scheduling_8py_source_1l00017"/>00017 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp&#32;
<anchor xml:id="_scheduling_8py_source_1l00018"/>00018 <emphasis role="keyword">from</emphasis>&#32;numba&#32;<emphasis role="keyword">import</emphasis>&#32;njit,&#32;numba
<anchor xml:id="_scheduling_8py_source_1l00019"/>00019 
<anchor xml:id="_scheduling_8py_source_1l00020"/>00020 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_scheduling_8py_source_1l00021"/>00021 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_scheduling_8py_source_1l00022"/>00022 
<anchor xml:id="_scheduling_8py_source_1l00023"/>00023 logger.remove()
<anchor xml:id="_scheduling_8py_source_1l00024"/><link linkend="_namespaceexamples_1_1scheduling_1a6a224f324c4b0255a7c9ee2e0b3ecb56">00024</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_scheduling_8py_source_1l00025"/>00025 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_scheduling_8py_source_1l00026"/>00026 
<anchor xml:id="_scheduling_8py_source_1l00027"/><link linkend="_namespaceexamples_1_1scheduling_1a0de8c3a22eac606b2f5fe7f33205ee70">00027</link> STATION_NUM&#32;=&#32;12&#32;<emphasis role="comment">#&#32;number&#32;of&#32;dyson&#32;ring&#32;stations</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00028"/><link linkend="_namespaceexamples_1_1scheduling_1a7fc878ed92cb500572e6876821c5d97f">00028</link> TRAJECTORY_NUM&#32;=&#32;50&#32;<emphasis role="comment">#&#32;we&#32;select&#32;10&#32;mothership&#32;trajectories&#32;from&#32;these&#32;trajectories</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00029"/><link linkend="_namespaceexamples_1_1scheduling_1a66fa9995c0ca0abe7c130eb32ed75377">00029</link> ASTEROID_NUM&#32;=&#32;83454&#32;<emphasis role="comment">#&#32;number&#32;of&#32;asteroids</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00030"/>00030 
<anchor xml:id="_scheduling_8py_source_1l00031"/><link linkend="_namespaceexamples_1_1scheduling_1acc865effb06c5acf64afac6c28f1b1c4">00031</link> MAX_TIME&#32;=&#32;20.0&#32;<emphasis role="comment">#&#32;mission&#32;time&#32;in&#32;years</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00032"/><link linkend="_namespaceexamples_1_1scheduling_1a93fb6ce388e505e50c12697e2ada8c48">00032</link> WAIT_TIME&#32;=&#32;90/365.25&#32;<emphasis role="comment">#&#32;years,&#32;after&#32;arrival&#32;wait&#32;until&#32;construction&#32;may&#32;start</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00033"/><link linkend="_namespaceexamples_1_1scheduling_1a7cd5df9eeb21860bc32419ff89843345">00033</link> ALPHA&#32;=&#32;6.0e-9&#32;<emphasis role="comment">#&#32;conversion&#32;factor&#32;time&#32;of&#32;flight&#32;-&gt;&#32;arrival&#32;mass</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00034"/>00034 <emphasis role="comment">#A_DYSON&#32;=&#32;1.3197946923098154&#32;#&#32;ESAs&#32;dyson&#32;sphere</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00035"/><link linkend="_namespaceexamples_1_1scheduling_1a81964c0fe65663ecb8a640ebf2980c59">00035</link> A_DYSON&#32;=&#32;1.1&#32;<emphasis role="comment">#&#32;Tsinhuas&#32;dyson&#32;sphere</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00036"/>00036 
<anchor xml:id="_scheduling_8py_source_1l00037"/><link linkend="_namespaceexamples_1_1scheduling_1a238c380bbe3791fa8b45aa7e25f561d3">00037</link> DAY&#32;=&#32;24&#32;*&#32;3600
<anchor xml:id="_scheduling_8py_source_1l00038"/><link linkend="_namespaceexamples_1_1scheduling_1a643ae9a76a6aace4f82709ea70110912">00038</link> YEAR&#32;=&#32;DAY*365.25
<anchor xml:id="_scheduling_8py_source_1l00039"/>00039 
<anchor xml:id="_scheduling_8py_source_1l00040"/>00040 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00041"/><link linkend="_namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b">00041</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b">select</link>(asteroid,&#32;station,&#32;trajectory,&#32;mass,&#32;transfer_start,&#32;transfer_time,&#32;x):
<anchor xml:id="_scheduling_8py_source_1l00042"/>00042 &#32;&#32;&#32;&#32;trajectories&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d">trajectory_selection</link>(x,&#32;TRAJECTORY_NUM)[1]&#32;<emphasis role="comment">#&#32;select&#32;10&#32;trajectories&#32;representing&#32;the&#32;10&#32;mothership&#32;trajectories</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00043"/>00043 &#32;&#32;&#32;&#32;stations&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53">dyson_stations</link>(x,&#32;STATION_NUM)&#32;<emphasis role="comment">#&#32;derive&#32;dyson_stations&#32;targeted&#32;at&#32;time&#32;slots&#32;from&#32;argument&#32;vector</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00044"/>00044 &#32;&#32;&#32;&#32;times&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102">timings</link>(x,&#32;STATION_NUM)&#32;<emphasis role="comment">#&#32;derive&#32;station&#32;build&#32;time&#32;slot&#32;boundaries&#32;from&#32;argument&#32;vector&#32;(in&#32;years)</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;slot_mass&#32;=&#32;np.zeros(STATION_NUM)&#32;<emphasis role="comment">#&#32;mass&#32;sum&#32;per&#32;time&#32;slot</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;ast_val&#32;=&#32;np.zeros(ASTEROID_NUM)&#32;<emphasis role="comment">#&#32;deployed&#32;mass&#32;for&#32;asteroid</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;ast_slot&#32;=&#32;np.zeros(ASTEROID_NUM,&#32;dtype=numba.int32)&#32;<emphasis role="comment">#&#32;build&#32;time&#32;slot&#32;used&#32;for&#32;asteroid</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(asteroid.size):
<anchor xml:id="_scheduling_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tr&#32;=&#32;int(trajectory[i])&#32;<emphasis role="comment">#&#32;current&#32;trajectory</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;trajectories[tr]&#32;==&#32;0:&#32;<emphasis role="comment">#&#32;trajectory&#32;not&#32;selected</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ast_id&#32;=&#32;int(asteroid[i])&#32;<emphasis role="comment">#&#32;asteroid&#32;transferred</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stat&#32;=&#32;int(station[i])&#32;<emphasis role="comment">#&#32;dyson&#32;sphere&#32;station&#32;targeted&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;mass[i]&#32;<emphasis role="comment">#&#32;estimated&#32;asteroid&#32;mass&#32;at&#32;arrival&#32;time&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time_of_flight&#32;=&#32;transfer_time[i]&#32;<emphasis role="comment">#&#32;TOF&#32;of&#32;asteroid&#32;transfer</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrival_time&#32;=&#32;transfer_start[i]&#32;+&#32;transfer_time[i]&#32;<emphasis role="comment">#&#32;arrival&#32;time&#32;of&#32;asteroid&#32;transfer</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;which&#32;station&#32;time&#32;slot&#32;?&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;slot&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(STATION_NUM):
<anchor xml:id="_scheduling_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_time&#32;=&#32;times[slot+1]&#32;<emphasis role="comment">#&#32;time&#32;interval&#32;of&#32;time&#32;slot</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slot_time&#32;=&#32;times[slot]
<anchor xml:id="_scheduling_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_time&#32;=&#32;slot_time&#32;+&#32;WAIT_TIME&#32;<emphasis role="comment">#&#32;we&#32;have&#32;to&#32;wait&#32;90&#32;days</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;min_time&#32;&gt;=&#32;MAX_TIME:
<anchor xml:id="_scheduling_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;arrival_time&#32;&gt;=&#32;slot_time&#32;<emphasis role="keywordflow">and</emphasis>&#32;arrival_time&#32;&lt;=&#32;max_time:&#32;<emphasis role="comment">#&#32;inside&#32;time&#32;slot</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;stat&#32;==&#32;stations[slot]:&#32;<emphasis role="comment">#&#32;does&#32;the&#32;station&#32;fit?</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof&#32;=&#32;time_of_flight&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#if&#32;we&#32;have&#32;to&#32;fly&#32;a&#32;non&#32;optimal&#32;transfer,&#32;arrival&#32;mass&#32;is&#32;reduced</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;arrival_time&#32;&lt;&#32;min_time:&#32;<emphasis role="comment">#&#32;90&#32;DAYS&#32;are&#32;not&#32;yet&#32;over</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to_add&#32;=&#32;min_time&#32;-&#32;arrival_time&#32;<emphasis role="comment">#&#32;add&#32;time&#32;difference</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to_add&#32;*=&#32;math.sqrt(1&#32;+&#32;to_add/WAIT_TIME)&#32;<emphasis role="comment">#&#32;add&#32;some&#32;more&#32;time&#32;to&#32;enable&#32;transfer</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tof&#32;+=&#32;to_add
<anchor xml:id="_scheduling_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mval&#32;=&#32;(1.0&#32;-&#32;YEAR*tof*ALPHA)&#32;*&#32;m&#32;<emphasis role="comment">#&#32;estimated&#32;asteroid&#32;mass&#32;at&#32;arrival&#32;time&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;ast_val[ast_id]&#32;&gt;&#32;0:&#32;<emphasis role="comment">#&#32;asteroid&#32;already&#32;transferred&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_slot&#32;=&#32;ast_slot[ast_id]
<anchor xml:id="_scheduling_8py_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_mass&#32;=&#32;np.amin(slot_mass)&#32;<emphasis role="comment">#&#32;greedily&#32;replace&#32;if&#32;current&#32;mass&#32;is&#32;higher</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_mass&#32;=&#32;slot_mass[old_slot]&#32;<emphasis role="comment">#&#32;but&#32;never&#32;replace&#32;at&#32;a&#32;nearly&#32;minimal&#32;slot</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(old_slot&#32;==&#32;slot&#32;<emphasis role="keywordflow">or</emphasis>&#32;min_mass&#32;&lt;&#32;0.99*old_mass)&#32;<emphasis role="keywordflow">and</emphasis>&#32;ast_val[ast_id]&#32;&lt;&#32;mval:&#32;
<anchor xml:id="_scheduling_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;replace&#32;with&#32;actual&#32;transfer,&#32;remove&#32;old&#32;asteroid&#32;mass</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slot_mass[old_slot]&#32;-=&#32;ast_val[ast_id]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:&#32;<emphasis role="comment">#&#32;keep&#32;old&#32;transfer,&#32;don&apos;t&#32;use&#32;the&#32;new&#32;one</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mval&#32;=&#32;0
<anchor xml:id="_scheduling_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;mval&#32;&gt;&#32;0:&#32;&#32;<emphasis role="comment">#&#32;register&#32;actual&#32;transfer</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slot_mass[slot]&#32;+=&#32;mval
<anchor xml:id="_scheduling_8py_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ast_val[ast_id]&#32;=&#32;mval
<anchor xml:id="_scheduling_8py_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ast_slot[ast_id]&#32;=&#32;slot&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00086"/>00086 &#32;&#32;&#32;&#32;slot_mass.sort()
<anchor xml:id="_scheduling_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;min_mass&#32;=&#32;slot_mass[0]
<anchor xml:id="_scheduling_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;f&#32;=&#32;1.0
<anchor xml:id="_scheduling_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;m&#32;<emphasis role="keywordflow">in</emphasis>&#32;slot_mass:
<anchor xml:id="_scheduling_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;help&#32;the&#32;optimizer&#32;in&#32;case&#32;the&#32;minimum&#32;is&#32;0</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_mass&#32;+=&#32;f*m
<anchor xml:id="_scheduling_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f&#32;*=&#32;0.5
<anchor xml:id="_scheduling_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;min_mass,&#32;slot_mass
<anchor xml:id="_scheduling_8py_source_1l00094"/>00094 
<anchor xml:id="_scheduling_8py_source_1l00095"/><link linkend="_classexamples_1_1scheduling_1_1fitness">00095</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1scheduling_1_1fitness">fitness</link>(object):&#32;<emphasis role="comment">#&#32;the&#32;objective&#32;function</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00096"/>00096 
<anchor xml:id="_scheduling_8py_source_1l00097"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a4ef1711a34383984fe05eb4c41a6161e">00097</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1scheduling_1_1fitness_1a4ef1711a34383984fe05eb4c41a6161e">__init__</link>(self,&#32;transfers):
<anchor xml:id="_scheduling_8py_source_1l00098"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce">00098</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce">evals</link>&#32;=&#32;mp.RawValue(ct.c_long,&#32;0)&#32;&#32;<emphasis role="comment">#&#32;writable&#32;across&#32;python&#32;processes</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00099"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e">00099</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e">best_y</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;np.inf)&#32;<emphasis role="comment">#&#32;writable&#32;across&#32;python&#32;processes</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00100"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a128eb9a2d9dc7afccae971d4357976eb">00100</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a128eb9a2d9dc7afccae971d4357976eb">t0</link>&#32;=&#32;time.perf_counter()
<anchor xml:id="_scheduling_8py_source_1l00101"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a06815cb664a05b50f3ee6594d9b5ff94">00101</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a06815cb664a05b50f3ee6594d9b5ff94">transfers</link>&#32;=&#32;transfers
<anchor xml:id="_scheduling_8py_source_1l00102"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7">00102</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7">asteroid</link>&#32;=&#32;transfers[<emphasis role="stringliteral">&quot;asteroid&quot;</emphasis>].to_numpy()
<anchor xml:id="_scheduling_8py_source_1l00103"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044">00103</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044">station</link>&#32;=&#32;transfers[<emphasis role="stringliteral">&quot;station&quot;</emphasis>].to_numpy()&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00104"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87">00104</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87">trajectory</link>&#32;=&#32;transfers[<emphasis role="stringliteral">&quot;trajectory&quot;</emphasis>].to_numpy()
<anchor xml:id="_scheduling_8py_source_1l00105"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5">00105</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5">transfer_start</link>&#32;=&#32;transfers[<emphasis role="stringliteral">&quot;transfer_start&quot;</emphasis>].to_numpy()&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00106"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c">00106</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c">transfer_time</link>&#32;=&#32;transfers[<emphasis role="stringliteral">&quot;transfer_time&quot;</emphasis>].to_numpy()
<anchor xml:id="_scheduling_8py_source_1l00107"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e">00107</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e">mass</link>&#32;=&#32;transfers[<emphasis role="stringliteral">&quot;mass&quot;</emphasis>].to_numpy()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00108"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1af376623fb6066a93517e1be01d8f7cb6">00108</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af376623fb6066a93517e1be01d8f7cb6">dv</link>&#32;=&#32;transfers[<emphasis role="stringliteral">&quot;dv&quot;</emphasis>].to_numpy()&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00109"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6">00109</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6">trajectory_dv</link>&#32;=&#32;<link linkend="_classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6">trajectory_dv</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7">asteroid</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87">trajectory</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af376623fb6066a93517e1be01d8f7cb6">dv</link>)
<anchor xml:id="_scheduling_8py_source_1l00110"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a9fcd9faba20dabb88e8396d21e2bd6ea">00110</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a9fcd9faba20dabb88e8396d21e2bd6ea">nobj</link>&#32;=&#32;2
<anchor xml:id="_scheduling_8py_source_1l00111"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a0c832c38c4d5e650792b17323418d2f5">00111</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a0c832c38c4d5e650792b17323418d2f5">ncon</link>&#32;=&#32;0
<anchor xml:id="_scheduling_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00113"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542">00113</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542">__call__</link>(self,&#32;x):&#32;<emphasis role="comment">#&#32;single&#32;objective&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;determine&#32;the&#32;minimal&#32;station&#32;mass</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_mass,&#32;slot_mass&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b">select</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7">asteroid</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044">station</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87">trajectory</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e">mass</link>,&#32;
<anchor xml:id="_scheduling_8py_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5">transfer_start</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c">transfer_time</link>,&#32;x)&#32;
<anchor xml:id="_scheduling_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdv&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6">select_dvs</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6">trajectory_dv</link>,&#32;x)
<anchor xml:id="_scheduling_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;-<link linkend="_classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6">score</link>(min_mass,&#32;sdv)
<anchor xml:id="_scheduling_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce">evals</link>.value&#32;+=&#32;1
<anchor xml:id="_scheduling_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e">best_y</link>.value:
<anchor xml:id="_scheduling_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e">best_y</link>.value&#32;=&#32;y&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trajectories&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d">trajectory_selection</link>(x,&#32;TRAJECTORY_NUM)[0]&#32;
<anchor xml:id="_scheduling_8py_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stations&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53">dyson_stations</link>(x,&#32;STATION_NUM)&#32;
<anchor xml:id="_scheduling_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;times&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102">timings</link>(x,&#32;STATION_NUM)&#32;
<anchor xml:id="_scheduling_8py_source_1l00125"/>00125 
<anchor xml:id="_scheduling_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sc&#32;=&#32;<link linkend="_classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6">score</link>(np.amin(slot_mass),&#32;sdv)
<anchor xml:id="_scheduling_8py_source_1l00127"/>00127 
<anchor xml:id="_scheduling_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger().info(<emphasis role="stringliteral">&quot;evals&#32;=&#32;{0}:&#32;time&#32;=&#32;{1:.1f}&#32;s&#32;=&#32;{2:.0f}&#32;a&#32;=&#32;{3:.0f}&#32;t&#32;=&#32;{4:s}&#32;s&#32;=&#32;{5:s}&#32;b&#32;=&#32;{6:s}&#32;m&#32;=&#32;{7:s}&#32;dv&#32;=&#32;{8:s}&quot;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.<link linkend="_namespaceexamples_1_1scheduling_1a6a224f324c4b0255a7c9ee2e0b3ecb56">format</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce">evals</link>.value,&#32;dtime(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a128eb9a2d9dc7afccae971d4357976eb">t0</link>),&#32;sc,&#32;<link linkend="_namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11">ast_num</link>(x,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7">asteroid</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87">trajectory</link>),&#32;
<anchor xml:id="_scheduling_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([round(ti,2)&#32;<emphasis role="keywordflow">for</emphasis>&#32;ti&#32;<emphasis role="keywordflow">in</emphasis>&#32;times[1:-1]]),&#32;
<anchor xml:id="_scheduling_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([int(si)&#32;<emphasis role="keywordflow">for</emphasis>&#32;si&#32;<emphasis role="keywordflow">in</emphasis>&#32;stations]),
<anchor xml:id="_scheduling_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([int(ti)&#32;<emphasis role="keywordflow">for</emphasis>&#32;ti&#32;<emphasis role="keywordflow">in</emphasis>&#32;trajectories]),
<anchor xml:id="_scheduling_8py_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([round(mi,2)&#32;<emphasis role="keywordflow">for</emphasis>&#32;mi&#32;<emphasis role="keywordflow">in</emphasis>&#32;slot_mass*1E-15]),
<anchor xml:id="_scheduling_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([round(di,2)&#32;<emphasis role="keywordflow">for</emphasis>&#32;di&#32;<emphasis role="keywordflow">in</emphasis>&#32;sdv])
<anchor xml:id="_scheduling_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;))
<anchor xml:id="_scheduling_8py_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00137"/>00137 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00138"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47">00138</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47">fun</link>(self,&#32;x):&#32;<emphasis role="comment">#&#32;multiple&#32;objectives&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_mass,&#32;slot_mass&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b">select</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7">asteroid</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044">station</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87">trajectory</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e">mass</link>,&#32;
<anchor xml:id="_scheduling_8py_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5">transfer_start</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c">transfer_time</link>,&#32;x)&#32;
<anchor xml:id="_scheduling_8py_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdv&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6">select_dvs</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6">trajectory_dv</link>,&#32;x)
<anchor xml:id="_scheduling_8py_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scr,&#32;dv_val&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1abce02ddc9637c49f7152ef997c3db2eb">score_vals</link>(np.amin(slot_mass),&#32;sdv)
<anchor xml:id="_scheduling_8py_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;-scr
<anchor xml:id="_scheduling_8py_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;[-min_mass*1E-10,&#32;dv_val]
<anchor xml:id="_scheduling_8py_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce">evals</link>.value&#32;+=&#32;1
<anchor xml:id="_scheduling_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e">best_y</link>.value:
<anchor xml:id="_scheduling_8py_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e">best_y</link>.value&#32;=&#32;y&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trajectories&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d">trajectory_selection</link>(x,&#32;TRAJECTORY_NUM)[0]&#32;
<anchor xml:id="_scheduling_8py_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stations&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53">dyson_stations</link>(x,&#32;STATION_NUM)&#32;
<anchor xml:id="_scheduling_8py_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;times&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102">timings</link>(x,&#32;STATION_NUM)&#32;
<anchor xml:id="_scheduling_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sc&#32;=&#32;<link linkend="_classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6">score</link>(np.amin(slot_mass),&#32;sdv)
<anchor xml:id="_scheduling_8py_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger().info(<emphasis role="stringliteral">&quot;evals&#32;=&#32;{0}:&#32;time&#32;=&#32;{1:.1f}&#32;s&#32;=&#32;{2:.0f}&#32;a&#32;=&#32;{3:.0f}&#32;t&#32;=&#32;{4:s}&#32;s&#32;=&#32;{5:s}&#32;b&#32;=&#32;{6:s}&#32;m&#32;=&#32;{7:s}&#32;dv&#32;=&#32;{8:s}&quot;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.<link linkend="_namespaceexamples_1_1scheduling_1a6a224f324c4b0255a7c9ee2e0b3ecb56">format</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce">evals</link>.value,&#32;dtime(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a128eb9a2d9dc7afccae971d4357976eb">t0</link>),&#32;-self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e">best_y</link>.value,&#32;<link linkend="_namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11">ast_num</link>(x,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7">asteroid</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87">trajectory</link>),&#32;
<anchor xml:id="_scheduling_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([round(ti,2)&#32;<emphasis role="keywordflow">for</emphasis>&#32;ti&#32;<emphasis role="keywordflow">in</emphasis>&#32;times[1:-1]]),&#32;
<anchor xml:id="_scheduling_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([int(si)&#32;<emphasis role="keywordflow">for</emphasis>&#32;si&#32;<emphasis role="keywordflow">in</emphasis>&#32;stations]),
<anchor xml:id="_scheduling_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([int(ti)&#32;<emphasis role="keywordflow">for</emphasis>&#32;ti&#32;<emphasis role="keywordflow">in</emphasis>&#32;trajectories]),
<anchor xml:id="_scheduling_8py_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([round(mi,2)&#32;<emphasis role="keywordflow">for</emphasis>&#32;mi&#32;<emphasis role="keywordflow">in</emphasis>&#32;slot_mass*1E-15]),
<anchor xml:id="_scheduling_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([round(di,2)&#32;<emphasis role="keywordflow">for</emphasis>&#32;di&#32;<emphasis role="keywordflow">in</emphasis>&#32;sdv])
<anchor xml:id="_scheduling_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;))
<anchor xml:id="_scheduling_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ys&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00163"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419">00163</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419">qd_fun</link>(self,&#32;x):&#32;<emphasis role="comment">#&#32;quality&#32;diversity&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;slot_mass&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b">select</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7">asteroid</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044">station</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87">trajectory</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e">mass</link>,&#32;
<anchor xml:id="_scheduling_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5">transfer_start</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c">transfer_time</link>,&#32;x)&#32;
<anchor xml:id="_scheduling_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdv&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6">select_dvs</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6">trajectory_dv</link>,&#32;x)
<anchor xml:id="_scheduling_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;dv_val&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1abce02ddc9637c49f7152ef997c3db2eb">score_vals</link>(np.amin(slot_mass),&#32;sdv)
<anchor xml:id="_scheduling_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sc&#32;=&#32;<link linkend="_classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6">score</link>(np.amin(slot_mass),&#32;sdv)
<anchor xml:id="_scheduling_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;-sc
<anchor xml:id="_scheduling_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce">evals</link>.value&#32;+=&#32;1
<anchor xml:id="_scheduling_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;d&#32;=&#32;np.array([np.amin(slot_mass)*1E-15,&#32;dv_val])&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e">best_y</link>.value:
<anchor xml:id="_scheduling_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e">best_y</link>.value&#32;=&#32;y&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trajectories&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d">trajectory_selection</link>(x,&#32;TRAJECTORY_NUM)[0]&#32;
<anchor xml:id="_scheduling_8py_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stations&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53">dyson_stations</link>(x,&#32;STATION_NUM)&#32;
<anchor xml:id="_scheduling_8py_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;times&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102">timings</link>(x,&#32;STATION_NUM)&#32;
<anchor xml:id="_scheduling_8py_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger().info(<emphasis role="stringliteral">&quot;evals&#32;=&#32;{0}:&#32;time&#32;=&#32;{1:.1f}&#32;s&#32;=&#32;{2:.0f}&#32;a&#32;=&#32;{3:.0f}&#32;t&#32;=&#32;{4:s}&#32;s&#32;=&#32;{5:s}&#32;b&#32;=&#32;{6:s}&#32;m&#32;=&#32;{7:s}&#32;dv&#32;=&#32;{8:s}&quot;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.<link linkend="_namespaceexamples_1_1scheduling_1a6a224f324c4b0255a7c9ee2e0b3ecb56">format</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce">evals</link>.value,&#32;dtime(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a128eb9a2d9dc7afccae971d4357976eb">t0</link>),&#32;-self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e">best_y</link>.value,&#32;<link linkend="_namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11">ast_num</link>(x,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7">asteroid</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87">trajectory</link>),&#32;
<anchor xml:id="_scheduling_8py_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([round(ti,2)&#32;<emphasis role="keywordflow">for</emphasis>&#32;ti&#32;<emphasis role="keywordflow">in</emphasis>&#32;times[1:-1]]),&#32;
<anchor xml:id="_scheduling_8py_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([int(si)&#32;<emphasis role="keywordflow">for</emphasis>&#32;si&#32;<emphasis role="keywordflow">in</emphasis>&#32;stations]),
<anchor xml:id="_scheduling_8py_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([int(ti)&#32;<emphasis role="keywordflow">for</emphasis>&#32;ti&#32;<emphasis role="keywordflow">in</emphasis>&#32;trajectories]),
<anchor xml:id="_scheduling_8py_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([round(mi,2)&#32;<emphasis role="keywordflow">for</emphasis>&#32;mi&#32;<emphasis role="keywordflow">in</emphasis>&#32;slot_mass*1E-15]),
<anchor xml:id="_scheduling_8py_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str([round(di,2)&#32;<emphasis role="keywordflow">for</emphasis>&#32;di&#32;<emphasis role="keywordflow">in</emphasis>&#32;sdv])
<anchor xml:id="_scheduling_8py_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;))
<anchor xml:id="_scheduling_8py_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y,&#32;d&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00186"/>00186 
<anchor xml:id="_scheduling_8py_source_1l00187"/><link linkend="_classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6">00187</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6">score</link>(self,&#32;x):&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_,&#32;slot_mass&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b">select</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7">asteroid</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044">station</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87">trajectory</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e">mass</link>,&#32;
<anchor xml:id="_scheduling_8py_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5">transfer_start</link>,&#32;self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c">transfer_time</link>,&#32;x)
<anchor xml:id="_scheduling_8py_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdv&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6">select_dvs</link>(self.<link linkend="_classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6">trajectory_dv</link>,&#32;x)&#32;
<anchor xml:id="_scheduling_8py_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6">score</link>(np.amin(slot_mass),&#32;sdv)
<anchor xml:id="_scheduling_8py_source_1l00192"/>00192 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00193"/><link linkend="_namespaceexamples_1_1scheduling_1a692cea66b0bddb89af116d021965b1f1">00193</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a692cea66b0bddb89af116d021965b1f1">check_pymoo</link>(dim,&#32;fit,&#32;lb,&#32;ub,&#32;is_MO):
<anchor xml:id="_scheduling_8py_source_1l00194"/>00194 
<anchor xml:id="_scheduling_8py_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;pymoo.core.problem&#32;<emphasis role="keyword">import</emphasis>&#32;ElementwiseProblem&#32;
<anchor xml:id="_scheduling_8py_source_1l00196"/>00196 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;pymoo.algorithms.moo.nsga2&#32;<emphasis role="keyword">import</emphasis>&#32;NSGA2
<anchor xml:id="_scheduling_8py_source_1l00197"/>00197 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;pymoo.algorithms.soo.nonconvex.de&#32;<emphasis role="keyword">import</emphasis>&#32;DE
<anchor xml:id="_scheduling_8py_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;pymoo.factory&#32;<emphasis role="keyword">import</emphasis>&#32;get_sampling,&#32;get_crossover,&#32;get_mutation&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;pymoo.factory&#32;<emphasis role="keyword">import</emphasis>&#32;get_termination
<anchor xml:id="_scheduling_8py_source_1l00200"/>00200 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;pymoo.operators.mixed_variable_operator&#32;<emphasis role="keyword">import</emphasis>&#32;MixedVariableSampling,&#32;MixedVariableMutation,&#32;MixedVariableCrossover
<anchor xml:id="_scheduling_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;pymoo.core.problem&#32;<emphasis role="keyword">import</emphasis>&#32;starmap_parallelized_eval
<anchor xml:id="_scheduling_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;multiprocessing.pool&#32;<emphasis role="keyword">import</emphasis>&#32;ThreadPool
<anchor xml:id="_scheduling_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_MO:&#32;
<anchor xml:id="_scheduling_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lb[:10]&#32;=&#32;0&#32;
<anchor xml:id="_scheduling_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ub[:10]&#32;=&#32;TRAJECTORY_NUM-1&#32;<emphasis role="comment">#&#32;integer&#32;variables&#32;include&#32;upper&#32;bound&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00208"/>00208 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>MyProblem(ElementwiseProblem):
<anchor xml:id="_scheduling_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__init__(self,&#32;**kwargs):
<anchor xml:id="_scheduling_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;super().__init__(n_var=dim,
<anchor xml:id="_scheduling_8py_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n_obj=2,
<anchor xml:id="_scheduling_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n_constr=0,
<anchor xml:id="_scheduling_8py_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xl=np.array(lb),
<anchor xml:id="_scheduling_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xu=np.array(ub),&#32;**kwargs)
<anchor xml:id="_scheduling_8py_source_1l00216"/>00216 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>_evaluate(self,&#32;x,&#32;out,&#32;*args,&#32;**kwargs):&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_MO:
<anchor xml:id="_scheduling_8py_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<emphasis role="stringliteral">&quot;F&quot;</emphasis>]&#32;=&#32;fit.fun(x.astype(float))&#32;<emphasis role="comment">#&#32;numba&#32;requires&#32;all&#32;floats</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_scheduling_8py_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out[<emphasis role="stringliteral">&quot;F&quot;</emphasis>]&#32;=&#32;fit(x.astype(float))&#32;&#32;<emphasis role="comment">#&#32;&#32;fit&#32;returns&#32;the&#32;score&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00222"/>00222 
<anchor xml:id="_scheduling_8py_source_1l00223"/>00223 &#32;&#32;&#32;&#32;pool&#32;=&#32;ThreadPool(16)
<anchor xml:id="_scheduling_8py_source_1l00224"/>00224 &#32;&#32;&#32;&#32;problem&#32;=&#32;MyProblem(runner=pool.starmap,&#32;func_eval=starmap_parallelized_eval)
<anchor xml:id="_scheduling_8py_source_1l00225"/>00225 &#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00226"/>00226 &#32;&#32;&#32;&#32;mask&#32;=&#32;[<emphasis role="stringliteral">&quot;int&quot;</emphasis>]*10+[<emphasis role="stringliteral">&quot;real&quot;</emphasis>]*(dim-10)
<anchor xml:id="_scheduling_8py_source_1l00227"/>00227 
<anchor xml:id="_scheduling_8py_source_1l00228"/>00228 &#32;&#32;&#32;&#32;sampling&#32;=&#32;MixedVariableSampling(mask,&#32;{
<anchor xml:id="_scheduling_8py_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;real&quot;</emphasis>:&#32;get_sampling(<emphasis role="stringliteral">&quot;real_random&quot;</emphasis>),
<anchor xml:id="_scheduling_8py_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;int&quot;</emphasis>:&#32;get_sampling(<emphasis role="stringliteral">&quot;int_random&quot;</emphasis>)
<anchor xml:id="_scheduling_8py_source_1l00231"/>00231 &#32;&#32;&#32;&#32;})
<anchor xml:id="_scheduling_8py_source_1l00232"/>00232 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00233"/>00233 &#32;&#32;&#32;&#32;crossover&#32;=&#32;MixedVariableCrossover(mask,&#32;{
<anchor xml:id="_scheduling_8py_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;real&quot;</emphasis>:&#32;get_crossover(<emphasis role="stringliteral">&quot;real_sbx&quot;</emphasis>,&#32;prob=0.9,&#32;eta=15),
<anchor xml:id="_scheduling_8py_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;int&quot;</emphasis>:&#32;get_crossover(<emphasis role="stringliteral">&quot;int_sbx&quot;</emphasis>,&#32;prob=0.9,&#32;eta=15)
<anchor xml:id="_scheduling_8py_source_1l00236"/>00236 &#32;&#32;&#32;&#32;})
<anchor xml:id="_scheduling_8py_source_1l00237"/>00237 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00238"/>00238 &#32;&#32;&#32;&#32;mutation&#32;=&#32;MixedVariableMutation(mask,&#32;{
<anchor xml:id="_scheduling_8py_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;real&quot;</emphasis>:&#32;get_mutation(<emphasis role="stringliteral">&quot;real_pm&quot;</emphasis>,&#32;eta=20),
<anchor xml:id="_scheduling_8py_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;int&quot;</emphasis>:&#32;get_mutation(<emphasis role="stringliteral">&quot;int_pm&quot;</emphasis>,&#32;eta=20)
<anchor xml:id="_scheduling_8py_source_1l00241"/>00241 &#32;&#32;&#32;&#32;})
<anchor xml:id="_scheduling_8py_source_1l00242"/>00242 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00243"/>00243 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_MO:
<anchor xml:id="_scheduling_8py_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm&#32;=&#32;NSGA2(
<anchor xml:id="_scheduling_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pop_size=256,
<anchor xml:id="_scheduling_8py_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n_offsprings=10,
<anchor xml:id="_scheduling_8py_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampling=sampling,
<anchor xml:id="_scheduling_8py_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crossover=crossover,
<anchor xml:id="_scheduling_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutation=mutation,
<anchor xml:id="_scheduling_8py_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eliminate_duplicates=<emphasis role="keyword">True</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;
<anchor xml:id="_scheduling_8py_source_1l00252"/>00252 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm&#32;=&#32;DE(
<anchor xml:id="_scheduling_8py_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pop_size=100,
<anchor xml:id="_scheduling_8py_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variant=<emphasis role="stringliteral">&quot;DE/rand/1/bin&quot;</emphasis>,
<anchor xml:id="_scheduling_8py_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CR=0.3,
<anchor xml:id="_scheduling_8py_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dither=<emphasis role="stringliteral">&quot;vector&quot;</emphasis>,
<anchor xml:id="_scheduling_8py_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_scheduling_8py_source_1l00259"/>00259 &#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00260"/>00260 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;pymoo.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;minimize
<anchor xml:id="_scheduling_8py_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00262"/>00262 &#32;&#32;&#32;&#32;res&#32;=&#32;minimize(problem,
<anchor xml:id="_scheduling_8py_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm,
<anchor xml:id="_scheduling_8py_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;get_termination(<emphasis role="stringliteral">&quot;n_gen&quot;</emphasis>,&#32;500000),
<anchor xml:id="_scheduling_8py_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;verbose=<emphasis role="keyword">False</emphasis>)
<anchor xml:id="_scheduling_8py_source_1l00266"/>00266 
<anchor xml:id="_scheduling_8py_source_1l00267"/><link linkend="_namespaceexamples_1_1scheduling_1a59d0a8a992360512d79106e3e3a51eeb">00267</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a59d0a8a992360512d79106e3e3a51eeb">check_de_update</link>(dim,&#32;fit):
<anchor xml:id="_scheduling_8py_source_1l00268"/>00268 &#32;&#32;&#32;&#32;fit.bounds.lb[:10]&#32;=&#32;0&#32;
<anchor xml:id="_scheduling_8py_source_1l00269"/>00269 &#32;&#32;&#32;&#32;fit.bounds.ub[:10]&#32;=&#32;TRAJECTORY_NUM-1&#32;<emphasis role="comment">#&#32;integer&#32;variables&#32;include&#32;upper&#32;bound&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00270"/>00270 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;mixed&#32;integer&#32;multi&#32;objective&#32;optimization&#32;&apos;modecpp&apos;&#32;multi&#32;threaded,&#32;DE&#32;population&#32;update</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00271"/>00271 &#32;&#32;&#32;&#32;xs,&#32;front&#32;=&#32;modecpp.retry(fit.fun,&#32;fit.nobj,&#32;fit.ncon,&#32;fit.bounds,&#32;num_retries=640,&#32;popsize&#32;=&#32;128,&#32;
<anchor xml:id="_scheduling_8py_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;3000000,&#32;nsga_update&#32;=&#32;<emphasis role="keyword">False</emphasis>,&#32;
<anchor xml:id="_scheduling_8py_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger&#32;=&#32;logger(),&#32;workers=16,&#32;
<anchor xml:id="_scheduling_8py_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints=[<emphasis role="keyword">True</emphasis>]*10+[<emphasis role="keyword">False</emphasis>]*(dim-10))
<anchor xml:id="_scheduling_8py_source_1l00275"/>00275 
<anchor xml:id="_scheduling_8py_source_1l00276"/><link linkend="_namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486">00276</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486">get_fitness</link>():
<anchor xml:id="_scheduling_8py_source_1l00277"/>00277 &#32;&#32;&#32;&#32;name&#32;=&#32;<emphasis role="stringliteral">&apos;tsin3000.60&apos;</emphasis>&#32;<emphasis role="comment">#&#32;60&#32;trajectories&#32;to&#32;choose&#32;from</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00278"/>00278 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;name&#32;=&#32;&apos;tsin3000.10&apos;&#32;#&#32;10&#32;fixed&#32;trajectories</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00279"/>00279 &#32;&#32;&#32;&#32;transfers&#32;=&#32;pd.read_csv(<emphasis role="stringliteral">&apos;data/&apos;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&apos;.xz&apos;</emphasis>,&#32;sep=<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>,&#32;usecols=[1,2,3,4,5,6,7],&#32;compression=<emphasis role="stringliteral">&apos;xz&apos;</emphasis>,
<anchor xml:id="_scheduling_8py_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names=[<emphasis role="stringliteral">&apos;asteroid&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;station&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;trajectory&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;mass&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;dv&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;transfer_start&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;transfer_time&apos;</emphasis>])
<anchor xml:id="_scheduling_8py_source_1l00281"/>00281 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;uncomment&#32;to&#32;write&#32;a&#32;clear&#32;text&#32;csv</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00282"/>00282 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;transfers.to_csv(&apos;data/&apos;&#32;+&#32;name&#32;+&#32;&apos;.txt&apos;,&#32;sep=&apos;&#32;&apos;,&#32;header=False)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00283"/>00283 
<anchor xml:id="_scheduling_8py_source_1l00284"/>00284 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;TRAJECTORY_NUM,&#32;ASTEROID_NUM&#32;<emphasis role="comment">#&#32;adjust&#32;number&#32;of&#32;asteroids&#32;/&#32;trajectories&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00285"/>00285 &#32;&#32;&#32;&#32;TRAJECTORY_NUM&#32;=&#32;int(np.amax(transfers[<emphasis role="stringliteral">&quot;trajectory&quot;</emphasis>])&#32;+&#32;1)
<anchor xml:id="_scheduling_8py_source_1l00286"/>00286 &#32;&#32;&#32;&#32;ASTEROID_NUM&#32;=&#32;int(np.amax(transfers[<emphasis role="stringliteral">&quot;asteroid&quot;</emphasis>])&#32;+&#32;1)
<anchor xml:id="_scheduling_8py_source_1l00287"/>00287 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00288"/>00288 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;bounds&#32;for&#32;the&#32;objective&#32;function</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00289"/>00289 &#32;&#32;&#32;&#32;dim&#32;=&#32;10+2*STATION_NUM-1
<anchor xml:id="_scheduling_8py_source_1l00290"/>00290 &#32;&#32;&#32;&#32;lower_bound&#32;=&#32;np.zeros(dim)
<anchor xml:id="_scheduling_8py_source_1l00291"/>00291 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;lower_bound[10+STATION_NUM:dim]&#32;=&#32;0.00001&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00292"/>00292 &#32;&#32;&#32;&#32;upper_bound&#32;=&#32;np.zeros(dim)
<anchor xml:id="_scheduling_8py_source_1l00293"/>00293 &#32;&#32;&#32;&#32;lower_bound[:]&#32;=&#32;0.0000001&#32;
<anchor xml:id="_scheduling_8py_source_1l00294"/>00294 &#32;&#32;&#32;&#32;upper_bound[10:]&#32;=&#32;0.9999999
<anchor xml:id="_scheduling_8py_source_1l00295"/>00295 &#32;&#32;&#32;&#32;upper_bound[:10]&#32;=&#32;TRAJECTORY_NUM-0.00001&#32;<emphasis role="comment">#&#32;trajectory&#32;indices</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00296"/>00296 &#32;&#32;&#32;&#32;bounds&#32;=&#32;Bounds(lower_bound,&#32;upper_bound)
<anchor xml:id="_scheduling_8py_source_1l00297"/>00297 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00298"/>00298 &#32;&#32;&#32;&#32;fit&#32;=&#32;<link linkend="_classexamples_1_1scheduling_1_1fitness">fitness</link>(transfers)
<anchor xml:id="_scheduling_8py_source_1l00299"/>00299 &#32;&#32;&#32;&#32;fit.bounds&#32;=&#32;bounds
<anchor xml:id="_scheduling_8py_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fit
<anchor xml:id="_scheduling_8py_source_1l00301"/>00301 
<anchor xml:id="_scheduling_8py_source_1l00302"/><link linkend="_namespaceexamples_1_1scheduling_1aee3b215ee9f014805933d7f107793261">00302</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1aee3b215ee9f014805933d7f107793261">optimize</link>():&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00303"/>00303 &#32;&#32;&#32;&#32;fit&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486">get_fitness</link>()
<anchor xml:id="_scheduling_8py_source_1l00304"/>00304 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00305"/>00305 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;check_pymoo(dim,&#32;fit,&#32;lower_bound,&#32;upper_bound,&#32;False)</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;check_de_update(dim,&#32;fit)</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00307"/>00307 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00308"/>00308 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;multi&#32;objective&#32;optimization&#32;&apos;modecpp&apos;&#32;multi&#32;threaded,&#32;NSGA-II&#32;population&#32;update</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00309"/>00309 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;xs,&#32;front&#32;=&#32;modecpp.retry(fit.fun,&#32;fit.nobj,&#32;fit.ncon,&#32;fit.bounds,&#32;num_retries=640,&#32;popsize&#32;=&#32;96,&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00310"/>00310 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;3000000,&#32;nsga_update&#32;=&#32;True,&#32;logger&#32;=&#32;logger(),&#32;workers=16)</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00311"/>00311 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00312"/>00312 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;smart&#32;boundary&#32;management&#32;(SMB)&#32;with&#32;DE-&gt;CMA</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00313"/>00313 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;store&#32;=&#32;advretry.Store(fitness(transfers),&#32;bounds,&#32;num_retries=10000,&#32;max_eval_fac=5.0)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;advretry.retry(store,&#32;de_cma(10000).minimize)&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00315"/>00315 
<anchor xml:id="_scheduling_8py_source_1l00316"/>00316 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;smart&#32;boundary&#32;management&#32;(SMB)&#32;with&#32;CMA-ES</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00317"/>00317 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;store&#32;=&#32;advretry.Store(fitness(transfers),&#32;bounds,&#32;num_retries=10000,&#32;max_eval_fac=5.0)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00318"/>00318 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;advretry.retry(store,&#32;Cma_cpp(10000).minimize)&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00319"/>00319 
<anchor xml:id="_scheduling_8py_source_1l00320"/>00320 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;BiteOpt&#32;algorithm&#32;multi&#32;threaded</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00321"/>00321 &#32;&#32;&#32;&#32;store&#32;=&#32;<link linkend="_classfcmaes_1_1retry_1_1_store">retry.Store</link>(<link linkend="_classexamples_1_1scheduling_1_1fitness">fitness</link>(transfers),&#32;bounds)&#32;
<anchor xml:id="_scheduling_8py_source_1l00322"/>00322 &#32;&#32;&#32;&#32;retry.retry(store,&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp">Bite_cpp</link>(1000000,&#32;M=1).minimize,&#32;num_retries=3200)&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00323"/>00323 
<anchor xml:id="_scheduling_8py_source_1l00324"/>00324 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;CMA-ES&#32;multi&#32;threaded</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00325"/>00325 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;store&#32;=&#32;retry.Store(fitness(transfers),&#32;bounds)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00326"/>00326 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;retry.retry(store,&#32;Cma_cpp(1000000).minimize,&#32;num_retries=3200)&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00327"/>00327 
<anchor xml:id="_scheduling_8py_source_1l00328"/>00328 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;scipy&#32;minimize&#32;algorithm&#32;multi&#32;threaded</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00329"/>00329 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;store&#32;=&#32;retry.Store(fitness(transfers),&#32;bounds)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00330"/>00330 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;retry.retry(store,&#32;Minimize(1000000).minimize,&#32;num_retries=3200)&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00331"/>00331 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00332"/>00332 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;fcmaes&#32;differential&#32;evolution&#32;multi&#32;threaded</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00333"/>00333 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;store&#32;=&#32;retry.Store(fitness(transfers),&#32;bounds)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00334"/>00334 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;retry.retry(store,&#32;De_cpp(1000000).minimize,&#32;num_retries=3200)&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00335"/>00335 
<anchor xml:id="_scheduling_8py_source_1l00336"/>00336 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;scipy&#32;differential&#32;evolution&#32;multi&#32;threaded</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00337"/>00337 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;store&#32;=&#32;retry.Store(fitness(transfers),&#32;bounds)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00338"/>00338 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;retry.retry(store,&#32;Differential_evolution(1000000).minimize,&#32;num_retries=3200)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00339"/>00339 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00340"/>00340 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;scipy&#32;dual&#32;annealing&#32;multi&#32;threaded</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00341"/>00341 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;store&#32;=&#32;retry.Store(fitness(transfers),&#32;bounds)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00342"/>00342 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;retry.retry(store,&#32;Dual_annealing(1000000).minimize,&#32;num_retries=3200)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00343"/>00343 &#32;
<anchor xml:id="_scheduling_8py_source_1l00344"/>00344 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;scipy&#32;differential&#32;evolution&#32;single&#32;threaded</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00345"/>00345 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;store&#32;=&#32;retry.Store(fitness(transfers),&#32;bounds)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00346"/>00346 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;retry.retry(store,&#32;Differential_evolution(1000000).minimize,&#32;num_retries=320,&#32;workers=1)&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00347"/>00347 
<anchor xml:id="_scheduling_8py_source_1l00348"/>00348 <emphasis role="comment">#&#32;quality&#32;diversity</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00349"/>00349 
<anchor xml:id="_scheduling_8py_source_1l00350"/>00350 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;diversifier,&#32;mapelites
<anchor xml:id="_scheduling_8py_source_1l00351"/>00351 
<anchor xml:id="_scheduling_8py_source_1l00352"/><link linkend="_namespaceexamples_1_1scheduling_1a446a90f88f19e750f2a8c52f98660ee4">00352</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a446a90f88f19e750f2a8c52f98660ee4">plot3d</link>(ys,&#32;name,&#32;xlabel=&apos;&apos;,&#32;ylabel=&apos;&apos;,&#32;zlabel=&apos;&apos;):
<anchor xml:id="_scheduling_8py_source_1l00353"/>00353 &#32;&#32;&#32;&#32;<emphasis role="keyword">import</emphasis>&#32;matplotlib.pyplot&#32;<emphasis role="keyword">as</emphasis>&#32;plt
<anchor xml:id="_scheduling_8py_source_1l00354"/>00354 &#32;&#32;&#32;&#32;x&#32;=&#32;ys[:,&#32;0];&#32;y&#32;=&#32;ys[:,&#32;1];&#32;z&#32;=&#32;ys[:,&#32;2]
<anchor xml:id="_scheduling_8py_source_1l00355"/>00355 &#32;&#32;&#32;&#32;fig&#32;=&#32;plt.figure()
<anchor xml:id="_scheduling_8py_source_1l00356"/>00356 &#32;&#32;&#32;&#32;ax&#32;=&#32;fig.add_subplot()&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00357"/>00357 &#32;&#32;&#32;&#32;img&#32;=&#32;ax.scatter(x,&#32;y,&#32;s=4,&#32;c=z,&#32;cmap=<emphasis role="stringliteral">&apos;rainbow&apos;</emphasis>)
<anchor xml:id="_scheduling_8py_source_1l00358"/>00358 &#32;&#32;&#32;&#32;cbar&#32;=&#32;fig.colorbar(img)
<anchor xml:id="_scheduling_8py_source_1l00359"/>00359 &#32;&#32;&#32;&#32;plt.xlabel(xlabel)&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00360"/>00360 &#32;&#32;&#32;&#32;plt.ylabel(ylabel)
<anchor xml:id="_scheduling_8py_source_1l00361"/>00361 &#32;&#32;&#32;&#32;cbar.set_label(zlabel)
<anchor xml:id="_scheduling_8py_source_1l00362"/>00362 &#32;&#32;&#32;&#32;fig.set_figheight(8)
<anchor xml:id="_scheduling_8py_source_1l00363"/>00363 &#32;&#32;&#32;&#32;fig.set_figwidth(8)
<anchor xml:id="_scheduling_8py_source_1l00364"/>00364 &#32;&#32;&#32;&#32;fig.savefig(name,&#32;dpi=300)
<anchor xml:id="_scheduling_8py_source_1l00365"/>00365 
<anchor xml:id="_scheduling_8py_source_1l00366"/><link linkend="_namespaceexamples_1_1scheduling_1a61f08d3370844ad2267d011c37260ad2">00366</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a61f08d3370844ad2267d011c37260ad2">plot_archive</link>(archive,&#32;problem):&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00367"/>00367 &#32;&#32;&#32;&#32;si&#32;=&#32;archive.argsort()
<anchor xml:id="_scheduling_8py_source_1l00368"/>00368 &#32;&#32;&#32;&#32;ys&#32;=&#32;archive.get_ys()[si]
<anchor xml:id="_scheduling_8py_source_1l00369"/>00369 &#32;&#32;&#32;&#32;xs&#32;=&#32;archive.get_xs()[si]
<anchor xml:id="_scheduling_8py_source_1l00370"/>00370 &#32;&#32;&#32;&#32;ds&#32;=&#32;archive.get_ds()[si]
<anchor xml:id="_scheduling_8py_source_1l00371"/>00371 &#32;&#32;&#32;&#32;ysp&#32;=&#32;[]
<anchor xml:id="_scheduling_8py_source_1l00372"/>00372 &#32;&#32;&#32;&#32;si&#32;=&#32;np.argsort(ys)
<anchor xml:id="_scheduling_8py_source_1l00373"/>00373 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(si)):
<anchor xml:id="_scheduling_8py_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;ys[i]&#32;&lt;&#32;np.inf:&#32;<emphasis role="comment">#&#32;throw&#32;out&#32;invalid</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_mass&#32;=&#32;ds[i][0]
<anchor xml:id="_scheduling_8py_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dv_val&#32;=&#32;ds[i][1]
<anchor xml:id="_scheduling_8py_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;score&#32;=&#32;problem.score(xs[i])&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ysp.append([min_mass,&#32;dv_val,&#32;score])
<anchor xml:id="_scheduling_8py_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;score&#32;&gt;&#32;5000:
<anchor xml:id="_scheduling_8py_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(score,&#32;min_mass,&#32;dv_val)
<anchor xml:id="_scheduling_8py_source_1l00381"/>00381 &#32;&#32;&#32;&#32;ysp&#32;=&#32;np.array(ysp)
<anchor xml:id="_scheduling_8py_source_1l00382"/>00382 &#32;&#32;&#32;&#32;print(len(ysp))
<anchor xml:id="_scheduling_8py_source_1l00383"/>00383 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1scheduling_1a446a90f88f19e750f2a8c52f98660ee4">plot3d</link>(ysp,&#32;<emphasis role="stringliteral">&quot;scheduling_nd&quot;</emphasis>,&#32;<emphasis role="stringliteral">&apos;min&#32;mass&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;dv&#32;val&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;score&apos;</emphasis>)
<anchor xml:id="_scheduling_8py_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00385"/><link linkend="_namespaceexamples_1_1scheduling_1a6556fae25bdbd6c39503674979477c1d">00385</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a6556fae25bdbd6c39503674979477c1d">nd_optimize</link>():
<anchor xml:id="_scheduling_8py_source_1l00386"/>00386 &#32;&#32;&#32;&#32;problem&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486">get_fitness</link>()
<anchor xml:id="_scheduling_8py_source_1l00387"/>00387 &#32;&#32;&#32;&#32;problem.qd_dim&#32;=&#32;2
<anchor xml:id="_scheduling_8py_source_1l00388"/>00388 &#32;&#32;&#32;&#32;problem.qd_bounds&#32;=&#32;Bounds([1.0,15],[2.2,24])
<anchor xml:id="_scheduling_8py_source_1l00389"/>00389 &#32;&#32;&#32;&#32;niche_num&#32;=&#32;10000&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00390"/>00390 &#32;&#32;&#32;&#32;name&#32;=&#32;<emphasis role="stringliteral">&quot;scheduler_nd&quot;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00391"/>00391 &#32;&#32;&#32;&#32;arch&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00392"/>00392 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;mapelites.load_archive(&apos;scheduler_nd&apos;,&#32;problem.bounds,&#32;problem.qd_bounds,&#32;niche_num)&#32;</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00393"/>00393 &#32;&#32;&#32;&#32;opt_params0&#32;=&#32;{<emphasis role="stringliteral">&apos;solver&apos;</emphasis>:<emphasis role="stringliteral">&apos;elites&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;popsize&apos;</emphasis>:200}
<anchor xml:id="_scheduling_8py_source_1l00394"/>00394 &#32;&#32;&#32;&#32;opt_params1&#32;=&#32;{<emphasis role="stringliteral">&apos;solver&apos;</emphasis>:<emphasis role="stringliteral">&apos;BITE_CPP&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;max_evals&apos;</emphasis>:1000000,&#32;<emphasis role="stringliteral">&apos;stall_criterion&apos;</emphasis>:3}
<anchor xml:id="_scheduling_8py_source_1l00395"/>00395 &#32;&#32;&#32;&#32;arch&#32;=&#32;diversifier.minimize(
<anchor xml:id="_scheduling_8py_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfcmaes_1_1mapelites_1_1wrapper">mapelites.wrapper</link>(problem.qd_fun,&#32;2,&#32;interval=100000,&#32;save_interval=200000000),&#32;
<anchor xml:id="_scheduling_8py_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem.bounds,&#32;problem.qd_bounds,&#32;
<anchor xml:id="_scheduling_8py_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;=&#32;32,&#32;opt_params=[opt_params0,&#32;opt_params1],&#32;
<anchor xml:id="_scheduling_8py_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evals=100000000,&#32;archive&#32;=&#32;arch,
<anchor xml:id="_scheduling_8py_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;niche_num&#32;=&#32;niche_num,&#32;samples_per_niche&#32;=&#32;20)&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00401"/>00401 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&apos;final&#32;archive:&apos;</emphasis>,&#32;arch.info())
<anchor xml:id="_scheduling_8py_source_1l00402"/>00402 &#32;&#32;&#32;&#32;arch.save(name)
<anchor xml:id="_scheduling_8py_source_1l00403"/>00403 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1scheduling_1a61f08d3370844ad2267d011c37260ad2">plot_archive</link>(arch,&#32;problem)
<anchor xml:id="_scheduling_8py_source_1l00404"/>00404 
<anchor xml:id="_scheduling_8py_source_1l00405"/>00405 <emphasis role="comment">#&#32;utility&#32;functions</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00406"/>00406 
<anchor xml:id="_scheduling_8py_source_1l00407"/>00407 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_scheduling_8py_source_1l00408"/><link linkend="_namespaceexamples_1_1scheduling_1a171925bee0250e0755f9521ef6756bc7">00408</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a171925bee0250e0755f9521ef6756bc7">next_free</link>(used,&#32;p):
<anchor xml:id="_scheduling_8py_source_1l00409"/>00409 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;used[p]:
<anchor xml:id="_scheduling_8py_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;(p&#32;+&#32;1)&#32;%&#32;used.size
<anchor xml:id="_scheduling_8py_source_1l00411"/>00411 &#32;&#32;&#32;&#32;used[p]&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00412"/>00412 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p
<anchor xml:id="_scheduling_8py_source_1l00413"/>00413 
<anchor xml:id="_scheduling_8py_source_1l00414"/>00414 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_scheduling_8py_source_1l00415"/><link linkend="_namespaceexamples_1_1scheduling_1a9b78175a9bd193289a2db7a992840231">00415</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a9b78175a9bd193289a2db7a992840231">disjoined</link>(s,&#32;n):
<anchor xml:id="_scheduling_8py_source_1l00416"/>00416 &#32;&#32;&#32;&#32;disjoined_s&#32;=&#32;np.zeros(s.size,&#32;dtype=numba.int32)
<anchor xml:id="_scheduling_8py_source_1l00417"/>00417 &#32;&#32;&#32;&#32;used&#32;=&#32;np.zeros(n,&#32;dtype=numba.boolean)
<anchor xml:id="_scheduling_8py_source_1l00418"/>00418 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(s.size):
<anchor xml:id="_scheduling_8py_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disjoined_s[i]&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a171925bee0250e0755f9521ef6756bc7">next_free</link>(used,&#32;s[i])
<anchor xml:id="_scheduling_8py_source_1l00420"/>00420 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;disjoined_s,&#32;used
<anchor xml:id="_scheduling_8py_source_1l00421"/>00421 
<anchor xml:id="_scheduling_8py_source_1l00422"/>00422 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_scheduling_8py_source_1l00423"/><link linkend="_namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102">00423</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102">timings</link>(x,&#32;n):
<anchor xml:id="_scheduling_8py_source_1l00424"/>00424 &#32;&#32;&#32;&#32;times&#32;=&#32;np.zeros(n+1)
<anchor xml:id="_scheduling_8py_source_1l00425"/>00425 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n-1):
<anchor xml:id="_scheduling_8py_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;times[i]&#32;=&#32;MAX_TIME&#32;*&#32;x[10+STATION_NUM+i]
<anchor xml:id="_scheduling_8py_source_1l00427"/>00427 &#32;&#32;&#32;&#32;times[n-1]&#32;=&#32;0
<anchor xml:id="_scheduling_8py_source_1l00428"/>00428 &#32;&#32;&#32;&#32;times[n]&#32;=&#32;MAX_TIME
<anchor xml:id="_scheduling_8py_source_1l00429"/>00429 &#32;&#32;&#32;&#32;times.sort()
<anchor xml:id="_scheduling_8py_source_1l00430"/>00430 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;times
<anchor xml:id="_scheduling_8py_source_1l00431"/>00431 
<anchor xml:id="_scheduling_8py_source_1l00432"/>00432 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_scheduling_8py_source_1l00433"/><link linkend="_namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53">00433</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53">dyson_stations</link>(x,&#32;n):
<anchor xml:id="_scheduling_8py_source_1l00434"/>00434 &#32;&#32;&#32;&#32;stations&#32;=&#32;np.argsort(x[10:10+n])
<anchor xml:id="_scheduling_8py_source_1l00435"/>00435 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;station&#32;numbers&#32;start&#32;with&#32;1</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00436"/>00436 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array([s+1&#32;<emphasis role="keywordflow">for</emphasis>&#32;s&#32;<emphasis role="keywordflow">in</emphasis>&#32;stations])
<anchor xml:id="_scheduling_8py_source_1l00437"/>00437 
<anchor xml:id="_scheduling_8py_source_1l00438"/>00438 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_scheduling_8py_source_1l00439"/><link linkend="_namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d">00439</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d">trajectory_selection</link>(x,&#32;n):
<anchor xml:id="_scheduling_8py_source_1l00440"/>00440 &#32;&#32;&#32;&#32;trajectories&#32;=&#32;np.zeros(10,&#32;dtype=numba.int32)
<anchor xml:id="_scheduling_8py_source_1l00441"/>00441 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(10):
<anchor xml:id="_scheduling_8py_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trajectories[i]&#32;=&#32;int(x[i])
<anchor xml:id="_scheduling_8py_source_1l00443"/>00443 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceexamples_1_1scheduling_1a9b78175a9bd193289a2db7a992840231">disjoined</link>(trajectories,&#32;n)
<anchor xml:id="_scheduling_8py_source_1l00444"/>00444 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00445"/>00445 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_scheduling_8py_source_1l00446"/><link linkend="_namespaceexamples_1_1scheduling_1aa1884a671e4ac02c8cc86173c911794c">00446</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1aa1884a671e4ac02c8cc86173c911794c">score</link>(min_mass,&#32;trajectory_dv):
<anchor xml:id="_scheduling_8py_source_1l00447"/>00447 &#32;&#32;&#32;&#32;mass_val&#32;=&#32;min_mass&#32;*&#32;1E-10
<anchor xml:id="_scheduling_8py_source_1l00448"/>00448 &#32;&#32;&#32;&#32;dv_val&#32;=&#32;0
<anchor xml:id="_scheduling_8py_source_1l00449"/>00449 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;dv&#32;<emphasis role="keywordflow">in</emphasis>&#32;trajectory_dv:
<anchor xml:id="_scheduling_8py_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dv_val&#32;+=&#32;(1.0&#32;+&#32;dv/50.0)**2
<anchor xml:id="_scheduling_8py_source_1l00451"/>00451 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mass_val&#32;/&#32;(A_DYSON&#32;*&#32;A_DYSON&#32;*&#32;dv_val)
<anchor xml:id="_scheduling_8py_source_1l00452"/>00452 
<anchor xml:id="_scheduling_8py_source_1l00453"/>00453 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_scheduling_8py_source_1l00454"/><link linkend="_namespaceexamples_1_1scheduling_1abce02ddc9637c49f7152ef997c3db2eb">00454</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1abce02ddc9637c49f7152ef997c3db2eb">score_vals</link>(min_mass,&#32;trajectory_dv):
<anchor xml:id="_scheduling_8py_source_1l00455"/>00455 &#32;&#32;&#32;&#32;mass_val&#32;=&#32;min_mass&#32;*&#32;1E-10
<anchor xml:id="_scheduling_8py_source_1l00456"/>00456 &#32;&#32;&#32;&#32;dv_val&#32;=&#32;0
<anchor xml:id="_scheduling_8py_source_1l00457"/>00457 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;dv&#32;<emphasis role="keywordflow">in</emphasis>&#32;trajectory_dv:
<anchor xml:id="_scheduling_8py_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dv_val&#32;+=&#32;(1.0&#32;+&#32;dv/50.0)**2
<anchor xml:id="_scheduling_8py_source_1l00459"/>00459 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mass_val&#32;/&#32;(A_DYSON&#32;*&#32;A_DYSON&#32;*&#32;dv_val),&#32;dv_val
<anchor xml:id="_scheduling_8py_source_1l00460"/>00460 
<anchor xml:id="_scheduling_8py_source_1l00461"/>00461 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00462"/><link linkend="_namespaceexamples_1_1scheduling_1abae88677822865f44d0e0124ca35f438">00462</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1abae88677822865f44d0e0124ca35f438">trajectory_dv</link>(asteroid,&#32;trajectory,&#32;delta_v):
<anchor xml:id="_scheduling_8py_source_1l00463"/>00463 &#32;&#32;&#32;&#32;ast_dv&#32;=&#32;np.zeros((TRAJECTORY_NUM,ASTEROID_NUM))
<anchor xml:id="_scheduling_8py_source_1l00464"/>00464 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(asteroid.size):&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ast_id&#32;=&#32;int(asteroid[i])&#32;<emphasis role="comment">#&#32;asteroid&#32;transferred</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tr&#32;=&#32;trajectory[i]&#32;<emphasis role="comment">#&#32;current&#32;trajectory</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ast_dv[tr,&#32;ast_id]&#32;=&#32;delta_v[i]&#32;<emphasis role="comment">#&#32;mothership&#32;delta&#32;velocity&#32;to&#32;reach&#32;the&#32;asteroid</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00468"/>00468 &#32;&#32;&#32;&#32;trajectory_dv&#32;=&#32;np.sum(ast_dv,&#32;axis=1)
<anchor xml:id="_scheduling_8py_source_1l00469"/>00469 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;trajectory_dv
<anchor xml:id="_scheduling_8py_source_1l00470"/>00470 
<anchor xml:id="_scheduling_8py_source_1l00471"/>00471 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00472"/><link linkend="_namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6">00472</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6">select_dvs</link>(bdv,&#32;x):
<anchor xml:id="_scheduling_8py_source_1l00473"/>00473 &#32;&#32;&#32;&#32;trajectories&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d">trajectory_selection</link>(x,&#32;TRAJECTORY_NUM)[0]
<anchor xml:id="_scheduling_8py_source_1l00474"/>00474 &#32;&#32;&#32;&#32;sdv&#32;=&#32;np.zeros(10)
<anchor xml:id="_scheduling_8py_source_1l00475"/>00475 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(10):
<anchor xml:id="_scheduling_8py_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdv[i]&#32;=&#32;bdv[int(trajectories[i])]
<anchor xml:id="_scheduling_8py_source_1l00477"/>00477 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sdv
<anchor xml:id="_scheduling_8py_source_1l00478"/>00478 
<anchor xml:id="_scheduling_8py_source_1l00479"/>00479 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00480"/><link linkend="_namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11">00480</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11">ast_num</link>(x,&#32;asteroid,&#32;trajectory):
<anchor xml:id="_scheduling_8py_source_1l00481"/>00481 &#32;&#32;&#32;&#32;asts&#32;=&#32;np.zeros((ASTEROID_NUM))
<anchor xml:id="_scheduling_8py_source_1l00482"/>00482 &#32;&#32;&#32;&#32;trajectories&#32;=&#32;<link linkend="_namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d">trajectory_selection</link>(x,&#32;TRAJECTORY_NUM)[1]
<anchor xml:id="_scheduling_8py_source_1l00483"/>00483 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(asteroid.size):
<anchor xml:id="_scheduling_8py_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;trajectories[trajectory[i]]:&#32;<emphasis role="comment">#&#32;trajectory&#32;not&#32;selected</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;asts[int(asteroid[i])]&#32;=&#32;1&#32;<emphasis role="comment">#&#32;asteroid&#32;transferred</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00487"/>00487 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.sum(asts)&#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00488"/>00488 
<anchor xml:id="_scheduling_8py_source_1l00489"/><link linkend="_namespaceexamples_1_1scheduling_1a9714bb5daa021b51c31c14cf8584c0d1">00489</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1scheduling_1a9714bb5daa021b51c31c14cf8584c0d1">main</link>():
<anchor xml:id="_scheduling_8py_source_1l00490"/>00490 &#32;&#32;&#32;&#32;<emphasis role="comment">#optimize()</emphasis>
<anchor xml:id="_scheduling_8py_source_1l00491"/>00491 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1scheduling_1a6556fae25bdbd6c39503674979477c1d">nd_optimize</link>()
<anchor xml:id="_scheduling_8py_source_1l00492"/>00492 &#32;&#32;&#32;&#32;
<anchor xml:id="_scheduling_8py_source_1l00493"/>00493 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_scheduling_8py_source_1l00494"/>00494 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1scheduling_1a9714bb5daa021b51c31c14cf8584c0d1">main</link>()
</programlisting></section>

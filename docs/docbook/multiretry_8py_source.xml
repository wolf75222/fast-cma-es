<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_multiretry_8py_source" xml:lang="en-US">
<title>multiretry.py</title>
<indexterm><primary>fcmaes/multiretry.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_multiretry_8py_source_1l00001"/><link linkend="_namespacefcmaes_1_1multiretry">00001</link> <emphasis role="comment">#&#32;-*-&#32;coding:&#32;utf-8&#32;-*-</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00002"/>00002 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00003"/>00003 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00004"/>00004 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00005"/>00005 <emphasis role="stringliteral">&#32;Fast&#32;CMA-ES&#32;-&#32;version&#32;1.6.11</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00006"/>00006 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00007"/>00007 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00008"/>00008 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Latitude</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00009"/>00009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00010"/>00010 <emphasis role="stringliteral">&#32;License:&#32;MIT</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00011"/>00011 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00012"/>00012 <emphasis role="stringliteral">&#32;File:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00013"/>00013 <emphasis role="stringliteral">&#32;&#32;-&#32;multiretry.py</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00014"/>00014 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00015"/>00015 <emphasis role="stringliteral">&#32;Description:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00016"/>00016 <emphasis role="stringliteral">&#32;&#32;-&#32;Parallel&#32;optimization&#32;retry&#32;of&#32;a&#32;list&#32;of&#32;problems.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00017"/>00017 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00018"/>00018 <emphasis role="stringliteral">&#32;Authors:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00019"/>00019 <emphasis role="stringliteral">&#32;&#32;-&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00020"/>00020 <emphasis role="stringliteral">&#32;&#32;-&#32;romain.despoullains@latitude.eu</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00021"/>00021 <emphasis role="stringliteral">&#32;&#32;-&#32;corentin.generet@latitude.eu</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00022"/>00022 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00023"/>00023 <emphasis role="stringliteral">&#32;References:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00024"/>00024 <emphasis role="stringliteral">&#32;&#32;-&#32;[1]&#32;https://github.com/dietmarwo/fast-cma-es</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00025"/>00025 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00026"/>00026 <emphasis role="stringliteral">&#32;Documentation:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00027"/>00027 <emphasis role="stringliteral">&#32;&#32;-</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00028"/>00028 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00029"/>00029 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00030"/>00030 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00031"/>00031 
<anchor xml:id="_multiretry_8py_source_1l00032"/>00032 
<anchor xml:id="_multiretry_8py_source_1l00033"/>00033 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_multiretry_8py_source_1l00034"/>00034 <emphasis role="keyword">import</emphasis>&#32;_pickle&#32;<emphasis role="keyword">as</emphasis>&#32;cPickle
<anchor xml:id="_multiretry_8py_source_1l00035"/>00035 <emphasis role="keyword">import</emphasis>&#32;bz2
<anchor xml:id="_multiretry_8py_source_1l00036"/>00036 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp
<anchor xml:id="_multiretry_8py_source_1l00037"/>00037 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;OptimizeResult,&#32;Bounds
<anchor xml:id="_multiretry_8py_source_1l00038"/>00038 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;de_cma,&#32;eprint,&#32;Optimizer
<anchor xml:id="_multiretry_8py_source_1l00039"/>00039 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;advretry
<anchor xml:id="_multiretry_8py_source_1l00040"/>00040 
<anchor xml:id="_multiretry_8py_source_1l00041"/>00041 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1evaluator">fcmaes.evaluator</link>&#32;<emphasis role="keyword">import</emphasis>&#32;is_debug_active
<anchor xml:id="_multiretry_8py_source_1l00042"/>00042 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_multiretry_8py_source_1l00043"/>00043 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;Optional,&#32;Callable,&#32;Tuple,&#32;List
<anchor xml:id="_multiretry_8py_source_1l00044"/>00044 <emphasis role="keyword">from</emphasis>&#32;numpy.typing&#32;<emphasis role="keyword">import</emphasis>&#32;ArrayLike
<anchor xml:id="_multiretry_8py_source_1l00045"/>00045 
<anchor xml:id="_multiretry_8py_source_1l00046"/>00046 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1multiretry_1a622afd956406ccabb7ebebdfdf9715b6">minimize</link>(problems:&#32;ArrayLike,&#32;
<anchor xml:id="_multiretry_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ids:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_multiretry_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retries_inc:&#32;Optional[int]&#32;=&#32;min(256,&#32;8*mp.cpu_count()),&#32;
<anchor xml:id="_multiretry_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;Optional[int]&#32;=&#32;10000,
<anchor xml:id="_multiretry_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep:&#32;Optional[float]&#32;=&#32;0.7,&#32;
<anchor xml:id="_multiretry_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer:&#32;Optional[Optimizer]&#32;=&#32;de_cma(1500),&#32;
<anchor xml:id="_multiretry_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;datafile&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;List:
<anchor xml:id="_multiretry_8py_source_1l00053"/>00053 
<anchor xml:id="_multiretry_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00055"/>00055 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Minimizes&#32;the&#32;given&#32;set&#32;of&#32;problems&#32;by&#32;iteratively&#32;applying&#32;the&#32;optimizer&#32;and</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00056"/>00056 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;removing&#32;the&#32;worst-performing&#32;solutions&#32;until&#32;only&#32;one&#32;remains.&#32;Supports</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00057"/>00057 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;retries&#32;and&#32;optional&#32;data&#32;file&#32;usage&#32;for&#32;saving&#32;and&#32;loading&#32;intermediate</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00058"/>00058 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;results.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00059"/>00059 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00060"/>00060 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Minimization&#32;of&#32;a&#32;list&#32;of&#32;optimization&#32;problems&#32;by&#32;first&#32;applying&#32;parallel&#32;retry</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00061"/>00061 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;filter&#32;the&#32;best&#32;ones&#32;and&#32;then&#32;applying&#32;coordinated&#32;retry&#32;to&#32;evaluate&#32;these&#32;further.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00062"/>00062 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Can&#32;replace&#32;mixed&#32;integer&#32;optimization&#32;if&#32;the&#32;integer&#32;variables&#32;are&#32;narrowly&#32;bound.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00063"/>00063 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;In&#32;this&#32;case&#32;all&#32;combinations&#32;of&#32;these&#32;integer&#32;values&#32;can&#32;be&#32;enumerated&#32;to&#32;generate&#32;a</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00064"/>00064 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;list&#32;of&#32;problem&#32;instances&#32;each&#32;representing&#32;one&#32;combination.&#32;See&#32;for&#32;instance</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00065"/>00065 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;https://www.esa.int/gsp/ACT/projects/gtop/tandem&#32;where&#32;there&#32;is&#32;a&#32;problem&#32;instance&#32;for&#32;each</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00066"/>00066 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;planet&#32;sequence.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00067"/>00067 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00068"/>00068 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00069"/>00069 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problems&#32;(ArrayLike):&#32;List&#32;or&#32;array-like&#32;structure&#32;containing&#32;the&#32;problems</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00070"/>00070 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;be&#32;minimized.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00071"/>00071 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ids&#32;(Optional[ArrayLike]):&#32;List&#32;or&#32;array-like&#32;structure&#32;containing</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00072"/>00072 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IDs&#32;for&#32;the&#32;problems.&#32;Defaults&#32;to&#32;None,&#32;in&#32;which&#32;case&#32;IDs&#32;will</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00073"/>00073 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;auto-generated&#32;as&#32;strings&#32;in&#32;ascending&#32;order&#32;starting&#32;from&#32;1.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00074"/>00074 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retries_inc&#32;(Optional[int]):&#32;Number&#32;of&#32;initial&#32;retries&#32;increment.&#32;Defaults</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00075"/>00075 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;min(256,&#32;8&#32;times&#32;the&#32;number&#32;of&#32;CPU&#32;cores).</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00076"/>00076 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;retries&#32;for&#32;each&#32;problem.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00077"/>00077 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;10000.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00078"/>00078 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep&#32;(Optional[float]):&#32;Fraction&#32;of&#32;best-performing&#32;problems&#32;to&#32;retain&#32;in</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00079"/>00079 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;each&#32;iteration.&#32;Defaults&#32;to&#32;0.7.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00080"/>00080 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer&#32;(Optional[Optimizer]):&#32;Optimizer&#32;object&#32;used&#32;to&#32;minimize&#32;the</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00081"/>00081 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problems.&#32;Defaults&#32;to&#32;de_cma(1500).</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00082"/>00082 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;datafile:&#32;Optional&#32;parameter&#32;representing&#32;the&#32;file&#32;path&#32;to&#32;load&#32;and&#32;save</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00083"/><link linkend="_namespacefcmaes_1_1multiretry_1a622afd956406ccabb7ebebdfdf9715b6">00083</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intermediate&#32;results.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00084"/>00084 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00085"/>00085 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00086"/>00086 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List:&#32;Sorted&#32;list&#32;of&#32;all&#32;problem&#32;statistics&#32;after&#32;successful</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00087"/>00087 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minimization.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00088"/>00088 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00089"/>00089 
<anchor xml:id="_multiretry_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;solver&#32;=&#32;<link linkend="_classfcmaes_1_1multiretry_1_1multiretry">multiretry</link>()
<anchor xml:id="_multiretry_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;n&#32;=&#32;len(problems)
<anchor xml:id="_multiretry_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n):&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;id&#32;=&#32;str(i+1)&#32;<emphasis role="keywordflow">if</emphasis>&#32;ids&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;ids[i]&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solver.add(<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats">problem_stats</link>(problems[i],&#32;id,&#32;i,&#32;retries_inc,&#32;num_retries))
<anchor xml:id="_multiretry_8py_source_1l00096"/>00096 &#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;datafile&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_multiretry_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solver.load(datafile)
<anchor xml:id="_multiretry_8py_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;solver.size()&#32;&gt;&#32;1:&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solver.retry(optimizer)
<anchor xml:id="_multiretry_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to_remove&#32;=&#32;int(round((1.0&#32;-&#32;keep)&#32;*&#32;solver.size()))
<anchor xml:id="_multiretry_8py_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;to_remove&#32;==&#32;0&#32;<emphasis role="keywordflow">and</emphasis>&#32;keep&#32;&lt;&#32;1.0:
<anchor xml:id="_multiretry_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to_remove&#32;=&#32;1
<anchor xml:id="_multiretry_8py_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solver.remove_worst(to_remove)
<anchor xml:id="_multiretry_8py_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solver.dump()
<anchor xml:id="_multiretry_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;datafile&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_multiretry_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solver.save(datafile)
<anchor xml:id="_multiretry_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;idx&#32;=&#32;solver.values_all().argsort()
<anchor xml:id="_multiretry_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list(np.asarray(solver.all_stats)[idx])
<anchor xml:id="_multiretry_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00113"/>00113 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats">problem_stats</link>:
<anchor xml:id="_multiretry_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Represents&#32;statistics&#32;and&#32;operational&#32;parameters&#32;for&#32;a&#32;specific&#32;problem.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00115"/>00115 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00116"/>00116 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;encapsulates&#32;the&#32;problem&apos;s&#32;parameters,&#32;optimization&#32;store,&#32;retry&#32;mechanism,</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00117"/>00117 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;manages&#32;retries&#32;for&#32;optimization&#32;processes.&#32;It&#32;is&#32;designed&#32;to&#32;handle&#32;optimization</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00118"/>00118 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;problems&#32;with&#32;adjustable&#32;retry&#32;increments&#32;and&#32;constraints.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00119"/>00119 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00120"/>00120 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00121"/>00121 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prob:&#32;The&#32;problem&#32;instance&#32;containing&#32;the&#32;problem&apos;s&#32;functions&#32;and&#32;bounds.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00122"/>00122 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;The&#32;name&#32;of&#32;the&#32;problem.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00123"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats">00123</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;The&#32;function&#32;representing&#32;the&#32;objective&#32;of&#32;the&#32;problem.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00124"/>00124 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retries_inc&#32;(int):&#32;The&#32;number&#32;of&#32;retries&#32;incrementally&#32;added&#32;on&#32;each&#32;retry&#32;operation.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00125"/>00125 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;(float):&#32;The&#32;best&#32;value&#32;obtained&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00126"/>00126 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;id:&#32;The&#32;identifier&#32;for&#32;the&#32;problem&#32;instance.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00127"/>00127 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index:&#32;The&#32;index&#32;associated&#32;with&#32;the&#32;problem&#32;instance.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00128"/>00128 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1aa0f75cc24bf60c302db2476b7b536c08">__init__</link>(self,&#32;prob,&#32;id,&#32;index,&#32;retries_inc&#32;=&#32;64,&#32;num_retries&#32;=&#32;10000):
<anchor xml:id="_multiretry_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00131"/>00131 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;instance&#32;of&#32;the&#32;class&#32;with&#32;the&#32;given&#32;problem,&#32;identifier,&#32;index,</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00132"/>00132 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optional&#32;retries&#32;increment&#32;value,&#32;and&#32;number&#32;of&#32;retries.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00133"/>00133 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00134"/>00134 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00135"/>00135 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prob:&#32;An&#32;object&#32;representing&#32;the&#32;problem&#32;to&#32;solve.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00136"/>00136 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;id:&#32;An&#32;identifier&#32;associated&#32;with&#32;the&#32;instance.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00137"/>00137 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index:&#32;An&#32;integer&#32;specifying&#32;the&#32;index&#32;of&#32;the&#32;instance.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00138"/>00138 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retries_inc:&#32;Optional&#32;integer&#32;specifying&#32;the&#32;increment&#32;for&#32;retries&#32;(default&#32;64).</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00139"/>00139 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;Optional&#32;integer&#32;specifying&#32;the&#32;total&#32;number&#32;of&#32;retries&#32;(default&#32;10000).</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00140"/>00140 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1ae367b1b41066f3652e4885add625054a">store</link>&#32;=&#32;<link linkend="_classfcmaes_1_1advretry_1_1_store">advretry.Store</link>(prob.fun,&#32;prob.bounds,&#32;num_retries=num_retries)
<anchor xml:id="_multiretry_8py_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1a609b88130dc53480e9b2482d528bdc9d">prob</link>&#32;=&#32;prob
<anchor xml:id="_multiretry_8py_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1a816013d97866561967441f7f5d469a60">name</link>&#32;=&#32;prob.name
<anchor xml:id="_multiretry_8py_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1aa692dda9e8785372877087a37861e73e">fun</link>&#32;=&#32;prob.fun
<anchor xml:id="_multiretry_8py_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1a9f91d58092173d90258dfdab875b1a63">retries_inc</link>&#32;=&#32;retries_inc
<anchor xml:id="_multiretry_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1ac081ca6b75614526547d3be6c661cbb5">value</link>&#32;=&#32;0
<anchor xml:id="_multiretry_8py_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1aa558cc8f587b4b125d6761578f1be803">id</link>&#32;=&#32;id
<anchor xml:id="_multiretry_8py_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1a8ae48429f680e70a0447d7896be1d4eb">index</link>&#32;=&#32;index
<anchor xml:id="_multiretry_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1acec8f2c5826ca9ebd4b5591ae90d8e69">ret</link>&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1ae367b1b41066f3652e4885add625054a">store</link>.num_retries&#32;=&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1a9f91d58092173d90258dfdab875b1a63">retries_inc</link>
<anchor xml:id="_multiretry_8py_source_1l00151"/>00151 
<anchor xml:id="_multiretry_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>retry(self,&#32;optimizer):
<anchor xml:id="_multiretry_8py_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00154"/>00154 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retries&#32;the&#32;optimization&#32;process&#32;and&#32;updates&#32;the&#32;relevant&#32;attributes&#32;in&#32;the&#32;store.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00155"/>00155 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00156"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1aa0f75cc24bf60c302db2476b7b536c08">00156</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;increments&#32;the&#32;retry&#32;count&#32;stored&#32;in&#32;the&#32;store.&#32;It&#32;performs&#32;an&#32;optimization</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00157"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1ae367b1b41066f3652e4885add625054a">00157</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retry&#32;using&#32;the&#32;provided&#32;`optimizer`&#32;and&#32;updates&#32;the&#32;best&#32;obtained&#32;value&#32;in&#32;the</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00158"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1a609b88130dc53480e9b2482d528bdc9d">00158</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00159"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1a816013d97866561967441f7f5d469a60">00159</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00160"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1aa692dda9e8785372877087a37861e73e">00160</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00161"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1a9f91d58092173d90258dfdab875b1a63">00161</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer:&#32;An&#32;optimization&#32;object&#32;used&#32;to&#32;minimize&#32;the&#32;function.&#32;It&#32;must&#32;provide</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00162"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1ac081ca6b75614526547d3be6c661cbb5">00162</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;`minimize`&#32;method&#32;to&#32;execute&#32;the&#32;optimization&#32;operations.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00163"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1aa558cc8f587b4b125d6761578f1be803">00163</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00164"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1a8ae48429f680e70a0447d7896be1d4eb">00164</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1ae367b1b41066f3652e4885add625054a">store</link>.num_retries&#32;+=&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1a9f91d58092173d90258dfdab875b1a63">retries_inc</link>
<anchor xml:id="_multiretry_8py_source_1l00165"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1acec8f2c5826ca9ebd4b5591ae90d8e69">00165</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1acec8f2c5826ca9ebd4b5591ae90d8e69">ret</link>&#32;=&#32;advretry.retry(self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1ae367b1b41066f3652e4885add625054a">store</link>,&#32;optimizer.minimize)
<anchor xml:id="_multiretry_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1ac081ca6b75614526547d3be6c661cbb5">value</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1ae367b1b41066f3652e4885add625054a">store</link>.get_y_best()
<anchor xml:id="_multiretry_8py_source_1l00167"/>00167 &#32;
<anchor xml:id="_multiretry_8py_source_1l00168"/>00168 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry">multiretry</link>:
<anchor xml:id="_multiretry_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00170"/>00170 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;A&#32;class&#32;for&#32;managing&#32;and&#32;retrying&#32;task&#32;statistics&#32;with&#32;extended&#32;functionalities&#32;like&#32;removing</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00171"/>00171 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;worst-performing&#32;tasks,&#32;saving&#32;and&#32;loading&#32;data,&#32;and&#32;retrieving&#32;metrics.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00172"/>00172 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00173"/>00173 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;class&#32;is&#32;designed&#32;to&#32;facilitate&#32;the&#32;management&#32;of&#32;task-related&#32;statistics,&#32;allowing</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00174"/>00174 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;operations&#32;such&#32;as&#32;retrying&#32;tasks&#32;with&#32;an&#32;optimizer,&#32;sorting&#32;tasks&#32;based&#32;on&#32;performance,</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00175"/>00175 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;persisting&#32;data&#32;for&#32;external&#32;use.&#32;It&#32;also&#32;supports&#32;evaluating&#32;and&#32;managing&#32;both&#32;primary</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00176"/>00176 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;aggregated&#32;statistics.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00177"/>00177 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00178"/>00178 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00179"/><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1abff769ec9721100a3274ce5e4e1d7035">00179</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem_stats&#32;(list):&#32;A&#32;list&#32;of&#32;statistics&#32;related&#32;to&#32;problems&#32;currently&#32;being&#32;managed.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00180"/>00180 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;all_stats&#32;(list):&#32;A&#32;comprehensive&#32;list&#32;of&#32;all&#32;statistics&#32;including&#32;completed&#32;and</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00181"/>00181 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ongoing&#32;problems.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00182"/>00182 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00183"/>00183 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1problem__stats_1aa0f75cc24bf60c302db2476b7b536c08">__init__</link>(self):
<anchor xml:id="_multiretry_8py_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00185"/>00185 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Represents&#32;a&#32;container&#32;designed&#32;to&#32;manage&#32;problem&#32;statistics&#32;and&#32;aggregate&#32;data.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00186"/>00186 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00187"/>00187 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00188"/>00188 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem_stats&#32;(list):&#32;A&#32;list&#32;designed&#32;to&#32;hold&#32;statistics&#32;related&#32;specifically&#32;to&#32;problems.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00189"/>00189 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;all_stats&#32;(list):&#32;A&#32;list&#32;intended&#32;to&#32;store&#32;aggregated&#32;or&#32;general&#32;statistics.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00190"/>00190 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.problem_stats&#32;=&#32;[]
<anchor xml:id="_multiretry_8py_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.all_stats&#32;=&#32;[]
<anchor xml:id="_multiretry_8py_source_1l00193"/>00193 &#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00194"/>00194 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>add(self,&#32;stats):
<anchor xml:id="_multiretry_8py_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00196"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry">00196</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Adds&#32;the&#32;provided&#32;statistics&#32;to&#32;the&#32;problem&#32;and&#32;all&#32;statistics&#32;lists.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00197"/>00197 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00198"/>00198 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00199"/>00199 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stats:&#32;The&#32;statistics&#32;to&#32;be&#32;added&#32;to&#32;the&#32;lists.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00200"/>00200 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a50eaad12e27a3c2850d1e34ac6050ab1">problem_stats</link>.append(stats)
<anchor xml:id="_multiretry_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>.append(stats)
<anchor xml:id="_multiretry_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>retry(self,&#32;optimizer):
<anchor xml:id="_multiretry_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00206"/>00206 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retries&#32;optimization&#32;for&#32;each&#32;problem&#32;in&#32;the&#32;problem&#32;statistics&#32;list.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00207"/>00207 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00208"/>00208 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;iterates&#32;through&#32;the&#32;list&#32;of&#32;problem&#32;statistics&#32;and&#32;attempts&#32;to</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00209"/>00209 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retry&#32;the&#32;optimization&#32;process&#32;using&#32;the&#32;given&#32;optimizer.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00210"/>00210 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00211"/>00211 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00212"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a77bf3a97684c97c11cbe30adcb54a74a">00212</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer:&#32;The&#32;optimizer&#32;instance&#32;to&#32;use&#32;for&#32;retrying&#32;the&#32;problems.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00213"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a50eaad12e27a3c2850d1e34ac6050ab1">00213</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00214"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">00214</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;ps&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a50eaad12e27a3c2850d1e34ac6050ab1">problem_stats</link>:
<anchor xml:id="_multiretry_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_debug_active():
<anchor xml:id="_multiretry_8py_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.debug(<emphasis role="stringliteral">&quot;problem&#32;&quot;</emphasis>&#32;+&#32;ps.prob.name&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;str(ps.id))
<anchor xml:id="_multiretry_8py_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps.retry(optimizer)
<anchor xml:id="_multiretry_8py_source_1l00218"/>00218 &#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00219"/>00219 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a96427eba6d0685bada50f247b508580d">values</link>(self):
<anchor xml:id="_multiretry_8py_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00221"/>00221 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generates&#32;a&#32;NumPy&#32;array&#32;from&#32;the&#32;values&#32;of&#32;the&#32;`problem_stats`&#32;attribute.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00222"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a8cd2b04b9e59bbe46a34efeacc59f4f1">00222</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00223"/>00223 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00224"/>00224 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;A&#32;NumPy&#32;array&#32;containing&#32;the&#32;values&#32;of&#32;`problem_stats`,</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00225"/>00225 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;converted&#32;to&#32;float&#32;type.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00226"/>00226 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.fromiter((ps.value&#32;<emphasis role="keywordflow">for</emphasis>&#32;ps&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a50eaad12e27a3c2850d1e34ac6050ab1">problem_stats</link>),&#32;dtype=float)
<anchor xml:id="_multiretry_8py_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00229"/>00229 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a9be3531534aef30b5b4f3242da6a69db">remove_worst</link>(self,&#32;n&#32;=&#32;1):
<anchor xml:id="_multiretry_8py_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00231"/>00231 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Removes&#32;the&#32;worst-performing&#32;items&#32;from&#32;the&#32;current&#32;problem&#32;statistics&#32;list.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00232"/>00232 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00233"/>00233 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;removes&#32;items&#32;from&#32;the&#32;problem&#32;statistics&#32;list&#32;based&#32;on&#32;their</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00234"/>00234 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;performance&#32;metrics.&#32;The&#32;items&#32;are&#32;sorted&#32;in&#32;ascending&#32;order&#32;first,</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00235"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a55f05d04ff385042a990d3139b2c4f19">00235</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;specified&#32;number&#32;of&#32;worst-performing&#32;items&#32;(based&#32;on&#32;the&#32;input&#32;value)</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00236"/>00236 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;are&#32;removed&#32;from&#32;the&#32;end&#32;of&#32;the&#32;list.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00237"/>00237 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00238"/>00238 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00239"/>00239 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;(int,&#32;optional):&#32;The&#32;number&#32;of&#32;worst-performing&#32;items&#32;to&#32;remove.&#32;Defaults</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00240"/>00240 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;1.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00241"/>00241 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00242"/>00242 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idx&#32;=&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a96427eba6d0685bada50f247b508580d">values</link>().argsort()
<anchor xml:id="_multiretry_8py_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a50eaad12e27a3c2850d1e34ac6050ab1">problem_stats</link>&#32;=&#32;list(np.asarray(self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a50eaad12e27a3c2850d1e34ac6050ab1">problem_stats</link>)[idx])
<anchor xml:id="_multiretry_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n):
<anchor xml:id="_multiretry_8py_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a50eaad12e27a3c2850d1e34ac6050ab1">problem_stats</link>.pop(-1)
<anchor xml:id="_multiretry_8py_source_1l00247"/>00247 
<anchor xml:id="_multiretry_8py_source_1l00248"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a96427eba6d0685bada50f247b508580d">00248</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a498ccce18e874dc891d0060bc2a77b7f">size</link>(self):
<anchor xml:id="_multiretry_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00250"/>00250 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calculates&#32;and&#32;returns&#32;the&#32;size&#32;of&#32;the&#32;problem&#32;statistics.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00251"/>00251 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00252"/>00252 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;determines&#32;the&#32;size&#32;based&#32;on&#32;the&#32;number&#32;of&#32;entries</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00253"/>00253 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;`problem_stats`&#32;attribute.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00254"/>00254 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00255"/>00255 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00256"/>00256 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;number&#32;of&#32;entries&#32;in&#32;`problem_stats`.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00257"/>00257 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len(self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a50eaad12e27a3c2850d1e34ac6050ab1">problem_stats</link>)
<anchor xml:id="_multiretry_8py_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00260"/>00260 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a7c6d566da882dd32bae574f6ed3fb38c">dump</link>(self):
<anchor xml:id="_multiretry_8py_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00262"/>00262 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dumps&#32;the&#32;problem&#32;statistics&#32;for&#32;debugging&#32;purposes.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00263"/>00263 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00264"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a9be3531534aef30b5b4f3242da6a69db">00264</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;is&#32;intended&#32;for&#32;use&#32;in&#32;debugging&#32;scenarios,&#32;where&#32;it&#32;logs&#32;the</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00265"/>00265 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem&#32;statistics&#32;contained&#32;in&#32;the&#32;object.&#32;The&#32;logging&#32;only&#32;occurs&#32;if</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00266"/>00266 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debugging&#32;is&#32;active.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00267"/>00267 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00268"/>00268 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00269"/>00269 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00270"/>00270 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00271"/>00271 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00272"/>00272 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00273"/>00273 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00274"/>00274 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00275"/>00275 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00276"/>00276 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_debug_active():
<anchor xml:id="_multiretry_8py_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a498ccce18e874dc891d0060bc2a77b7f">size</link>()):
<anchor xml:id="_multiretry_8py_source_1l00279"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a498ccce18e874dc891d0060bc2a77b7f">00279</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps&#32;=&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a50eaad12e27a3c2850d1e34ac6050ab1">problem_stats</link>[i]
<anchor xml:id="_multiretry_8py_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.debug(str(ps.id)&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;str(ps.value))
<anchor xml:id="_multiretry_8py_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00282"/>00282 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a5760fc807f9695ac7cb1e50d83ffc1e1">dump_all</link>(self):
<anchor xml:id="_multiretry_8py_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00284"/>00284 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dumps&#32;all&#32;statistics&#32;in&#32;a&#32;sorted&#32;manner&#32;when&#32;debug&#32;mode&#32;is&#32;active.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00285"/>00285 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00286"/>00286 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;sorts&#32;the&#32;internal&#32;`all_stats`&#32;attribute&#32;based&#32;on&#32;the&#32;indices</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00287"/>00287 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;the&#32;`values_all`&#32;method&apos;s&#32;results.&#32;It&#32;then&#32;logs&#32;each&#32;statistic&apos;s&#32;`id`&#32;and</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00288"/>00288 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`value`&#32;using&#32;the&#32;debug&#32;logger.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00289"/>00289 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00290"/>00290 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00291"/>00291 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00292"/>00292 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_debug_active():
<anchor xml:id="_multiretry_8py_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idx&#32;=&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1ac8076246ab84314be35894a67437a19e">values_all</link>().argsort()
<anchor xml:id="_multiretry_8py_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>&#32;=&#32;list(np.asarray(self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>)[idx])
<anchor xml:id="_multiretry_8py_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>)):
<anchor xml:id="_multiretry_8py_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps&#32;=&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>[i]
<anchor xml:id="_multiretry_8py_source_1l00298"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a7c6d566da882dd32bae574f6ed3fb38c">00298</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.debug(str(ps.id)&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;str(ps.value))
<anchor xml:id="_multiretry_8py_source_1l00299"/>00299 
<anchor xml:id="_multiretry_8py_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1ac8076246ab84314be35894a67437a19e">values_all</link>(self):
<anchor xml:id="_multiretry_8py_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00302"/>00302 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gets&#32;the&#32;values&#32;of&#32;all&#32;stats&#32;as&#32;a&#32;numpy&#32;array.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00303"/>00303 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00304"/>00304 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;iterates&#32;over&#32;all&#32;stats&#32;and&#32;extracts&#32;their&#32;values,&#32;returning&#32;them</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00305"/>00305 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;as&#32;a&#32;numpy&#32;array&#32;of&#32;type&#32;float.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00306"/>00306 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00307"/>00307 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00308"/>00308 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;A&#32;numpy&#32;array&#32;containing&#32;the&#32;float&#32;values&#32;of&#32;all&#32;stats.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00309"/>00309 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.fromiter((ps.value&#32;<emphasis role="keywordflow">for</emphasis>&#32;ps&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>),&#32;dtype=float)
<anchor xml:id="_multiretry_8py_source_1l00311"/>00311 &#32;
<anchor xml:id="_multiretry_8py_source_1l00312"/>00312 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a4901ed08a9e521c5c1c74c3ecc12a513">result</link>(self):
<anchor xml:id="_multiretry_8py_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00314"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a5760fc807f9695ac7cb1e50d83ffc1e1">00314</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sorts&#32;statistics&#32;based&#32;on&#32;values&#32;and&#32;returns&#32;a&#32;list&#32;of&#32;optimization&#32;results.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00315"/>00315 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00316"/>00316 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;processes&#32;the&#32;data&#32;contained&#32;in&#32;the&#32;`all_stats`&#32;attribute&#32;by&#32;sorting</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00317"/>00317 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;using&#32;the&#32;`values_all`&#32;method.&#32;It&#32;extracts&#32;optimization-related&#32;information,</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00318"/>00318 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;such&#32;as&#32;the&#32;best&#32;solution,&#32;function&#32;value,&#32;number&#32;of&#32;function&#32;evaluations,&#32;and</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00319"/>00319 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;success&#32;status,&#32;for&#32;each&#32;statistics&#32;entry.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00320"/>00320 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00321"/>00321 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00322"/>00322 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List[List]:&#32;A&#32;list&#32;containing&#32;sublists,&#32;where&#32;each&#32;sublist&#32;consists&#32;of&#32;a</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00323"/>00323 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem&#32;instance&#32;and&#32;its&#32;corresponding&#32;optimization&#32;outcome</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00324"/>00324 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;encapsulated&#32;in&#32;an&#32;`OptimizeResult`&#32;object.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00325"/>00325 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idx&#32;=&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1ac8076246ab84314be35894a67437a19e">values_all</link>().argsort()
<anchor xml:id="_multiretry_8py_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>&#32;=&#32;list(np.asarray(self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>)[idx])
<anchor xml:id="_multiretry_8py_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;[]
<anchor xml:id="_multiretry_8py_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>)):
<anchor xml:id="_multiretry_8py_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem&#32;=&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>[i].prob
<anchor xml:id="_multiretry_8py_source_1l00331"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1ac8076246ab84314be35894a67437a19e">00331</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>[i].store
<anchor xml:id="_multiretry_8py_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.append([problem,&#32;
<anchor xml:id="_multiretry_8py_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult(x=store.get_x_best(),&#32;fun=store.get_y_best(),&#32;
<anchor xml:id="_multiretry_8py_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nfev=store.get_count_evals(),&#32;success=<emphasis role="keyword">True</emphasis>)])
<anchor xml:id="_multiretry_8py_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00336"/>00336 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;persist&#32;all&#32;stats</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00337"/>00337 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a68046c0b4cc7c281cec9dfa673ce58fb">save</link>(self,&#32;name):
<anchor xml:id="_multiretry_8py_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00339"/>00339 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Saves&#32;the&#32;data&#32;returned&#32;by&#32;the&#32;`get_data`&#32;method&#32;into&#32;a&#32;compressed&#32;bz2&#32;file</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00340"/>00340 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;with&#32;the&#32;specified&#32;name.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00341"/>00341 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00342"/>00342 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;data&#32;is&#32;serialized&#32;using&#32;`cPickle`&#32;and&#32;saved&#32;in&#32;a&#32;`bz2`&#32;compressed&#32;format.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00343"/>00343 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;an&#32;error&#32;occurs&#32;during&#32;this&#32;process,&#32;an&#32;error&#32;message&#32;is&#32;printed.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00344"/>00344 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00345"/>00345 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00346"/>00346 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;The&#32;base&#32;name&#32;of&#32;the&#32;file&#32;where&#32;the&#32;data&#32;will&#32;be&#32;saved.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00347"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a4901ed08a9e521c5c1c74c3ecc12a513">00347</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;`.pbz2`&#32;extension&#32;will&#32;be&#32;appended&#32;automatically.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00348"/>00348 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_multiretry_8py_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;bz2.BZ2File(name&#32;+&#32;<emphasis role="stringliteral">&apos;.pbz2&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;w&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;f:&#32;
<anchor xml:id="_multiretry_8py_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cPickle.dump(self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a9f823aeb9dfd28ddc6ce5e4789013405">get_data</link>(),&#32;f)
<anchor xml:id="_multiretry_8py_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_multiretry_8py_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eprint(<emphasis role="stringliteral">&apos;error&#32;writing&#32;data&#32;file&#32;&apos;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&apos;.pbz2&#32;&apos;</emphasis>&#32;+&#32;str(ex))
<anchor xml:id="_multiretry_8py_source_1l00354"/>00354 
<anchor xml:id="_multiretry_8py_source_1l00355"/>00355 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a34c47ed6cd26370e8c8d5227791921b8">load</link>(self,&#32;name):
<anchor xml:id="_multiretry_8py_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00357"/>00357 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Loads&#32;data&#32;from&#32;a&#32;compressed&#32;pickle&#32;(.pbz2)&#32;file&#32;and&#32;sets&#32;it&#32;to&#32;the&#32;current&#32;instance.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00358"/>00358 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00359"/>00359 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;attempts&#32;to&#32;load&#32;the&#32;serialized&#32;data&#32;from&#32;the&#32;specified&#32;file&#32;name,&#32;decompressing&#32;it</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00360"/>00360 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;necessary,&#32;and&#32;assigns&#32;the&#32;loaded&#32;data&#32;to&#32;the&#32;current&#32;instance&#32;using&#32;the&#32;`set_data`&#32;method.&#32;If</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00361"/>00361 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;error&#32;occurs&#32;during&#32;the&#32;file&#32;reading&#32;or&#32;deserialization&#32;process,&#32;an&#32;error&#32;message&#32;is&#32;printed</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00362"/>00362 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;with&#32;details&#32;of&#32;the&#32;exception.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00363"/>00363 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00364"/>00364 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00365"/>00365 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;Name&#32;of&#32;the&#32;file&#32;(without&#32;the&#32;extension)&#32;from&#32;which&#32;the&#32;data&#32;is&#32;to&#32;be&#32;loaded.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00366"/>00366 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00367"/>00367 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00368"/>00368 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Exception:&#32;If&#32;there&#32;is&#32;an&#32;error&#32;during&#32;file&#32;reading&#32;or&#32;data&#32;deserialization.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00369"/>00369 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00370"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a68046c0b4cc7c281cec9dfa673ce58fb">00370</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_multiretry_8py_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;cPickle.load(bz2.BZ2File(name&#32;+&#32;<emphasis role="stringliteral">&apos;.pbz2&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;rb&apos;</emphasis>))
<anchor xml:id="_multiretry_8py_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a21913764a493beb8b148d1fcb640d5df">set_data</link>(data)
<anchor xml:id="_multiretry_8py_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_multiretry_8py_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eprint(<emphasis role="stringliteral">&apos;error&#32;reading&#32;data&#32;file&#32;&apos;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&apos;.pbz2&#32;&apos;</emphasis>&#32;+&#32;str(ex))
<anchor xml:id="_multiretry_8py_source_1l00375"/>00375 &#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00376"/>00376 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a9f823aeb9dfd28ddc6ce5e4789013405">get_data</link>(self):
<anchor xml:id="_multiretry_8py_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00378"/>00378 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Fetches&#32;and&#32;aggregates&#32;data&#32;from&#32;all&#32;stats&#32;objects.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00379"/>00379 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00380"/>00380 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;iterates&#32;over&#32;the&#32;`all_stats`&#32;collection,&#32;retrieves&#32;the</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00381"/>00381 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;from&#32;each&#32;`store`&#32;property&#32;of&#32;the&#32;stats&#32;objects,&#32;and&#32;appends</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00382"/>00382 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;to&#32;the&#32;resulting&#32;list.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00383"/>00383 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00384"/>00384 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00385"/>00385 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list:&#32;A&#32;list&#32;containing&#32;the&#32;aggregated&#32;data&#32;from&#32;all&#32;stats&#32;objects.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00386"/>00386 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;[]
<anchor xml:id="_multiretry_8py_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;stats&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.append(stats.store.get_data())
<anchor xml:id="_multiretry_8py_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data
<anchor xml:id="_multiretry_8py_source_1l00391"/><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a34c47ed6cd26370e8c8d5227791921b8">00391</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00392"/>00392 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a21913764a493beb8b148d1fcb640d5df">set_data</link>(self,&#32;data):
<anchor xml:id="_multiretry_8py_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00394"/>00394 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sets&#32;the&#32;provided&#32;`data`&#32;to&#32;the&#32;corresponding&#32;store&#32;objects&#32;in&#32;`all_stats`.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00395"/>00395 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00396"/>00396 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;iterates&#32;over&#32;the&#32;`data`&#32;list&#32;and&#32;assigns&#32;each&#32;element&#32;of&#32;`data`</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00397"/>00397 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;store&#32;of&#32;the&#32;corresponding&#32;index&#32;in&#32;the&#32;`all_stats`&#32;list.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00398"/>00398 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_multiretry_8py_source_1l00399"/>00399 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00400"/>00400 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;(list):&#32;A&#32;list&#32;where&#32;each&#32;element&#32;corresponds&#32;to&#32;data&#32;for&#32;the&#32;store&#32;of</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00401"/>00401 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;same&#32;position&#32;in&#32;the&#32;`all_stats`&#32;list.</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00402"/>00402 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_multiretry_8py_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(data)):
<anchor xml:id="_multiretry_8py_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1multiretry_1_1multiretry_1a45317d4e99e798e661776de739d331b8">all_stats</link>[i].store.set_data(data[i])
<anchor xml:id="_multiretry_8py_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_multiretry_8py_source_1l00406"/>00406 &#32;&#32;&#32;&#32;
</programlisting></section>

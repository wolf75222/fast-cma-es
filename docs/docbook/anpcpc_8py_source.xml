<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_anpcpc_8py_source" xml:lang="en-US">
<title>anpcpc.py</title>
<indexterm><primary>examples/anpcp/anpcpc.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_anpcpc_8py_source_1l00001"/><link linkend="_namespaceanpcpc">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00005"/>00005 <emphasis role="comment">#&#32;</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;See&#32;https://github.com/netotz/alpha-neighbor-p-center-problem/blob/main/README.md</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00007"/>00007 <emphasis role="comment">#&#32;See&#32;https://www.researchgate.net/publication/257196448_Optimal_algorithms_for_the_a-neighbor_p-center_problem</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00008"/>00008 <emphasis role="comment">#</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00009"/>00009 <emphasis role="comment">#&#32;This&#32;implements&#32;a&#32;continuous&#32;variation&#32;of&#32;the&#32;problem:&#32;</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00010"/>00010 <emphasis role="comment">#&#32;We&#32;don&apos;t&#32;offer&#32;a&#32;set&#32;of&#32;facilities&#32;to&#32;choose&#32;from.&#32;Only&#32;p,&#32;the&#32;number&#32;of&#32;chosen&#32;facilities&#32;is&#32;given&#32;and&#32;we</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00011"/>00011 <emphasis role="comment">#&#32;search&#32;for&#32;optimal&#32;coordinates.&#32;Users&#32;are&#32;taken&#32;from&#32;the&#32;TSP/JSON&#32;files&#32;as&#32;before&#32;and&#32;the&#32;boundaries</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00012"/>00012 <emphasis role="comment">#&#32;of&#32;the&#32;coordinates&#32;are&#32;determined&#32;using&#32;the&#32;facilities&#32;defined&#32;there.&#32;</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00013"/>00013 <emphasis role="comment">#&#32;Additionally&#32;a&#32;variant&#32;is&#32;implemented&#32;(commented&#32;out)&#32;where&#32;instead&#32;of&#32;the&#32;alpha-best&#32;we&#32;</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00014"/>00014 <emphasis role="comment">#&#32;use&#32;the&#32;sum&#32;of&#32;the&#32;best&#32;alpha&#32;distances.</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00015"/>00015 <emphasis role="comment">#&#32;Note&#32;that&#32;we&#32;internally&#32;use&#32;the&#32;square&#32;of&#32;the&#32;distance&#32;to&#32;speed&#32;up&#32;the&#32;computation&#32;of&#32;the&#32;distance&#32;matrix.&#32;&#32;</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00016"/>00016 <emphasis role="comment">#&#32;See&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Service.adoc&#32;for&#32;a&#32;detailed&#32;description.&#32;</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00017"/>00017 
<anchor xml:id="_anpcpc_8py_source_1l00018"/>00018 <emphasis role="keyword">import</emphasis>&#32;json,&#32;sys
<anchor xml:id="_anpcpc_8py_source_1l00019"/>00019 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_anpcpc_8py_source_1l00020"/>00020 <emphasis role="keyword">from</emphasis>&#32;numba&#32;<emphasis role="keyword">import</emphasis>&#32;njit
<anchor xml:id="_anpcpc_8py_source_1l00021"/>00021 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Bite_cpp,&#32;Cma_cpp,&#32;wrapper,&#32;logger
<anchor xml:id="_anpcpc_8py_source_1l00022"/>00022 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;retry
<anchor xml:id="_anpcpc_8py_source_1l00023"/>00023 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00024"/>00024 
<anchor xml:id="_anpcpc_8py_source_1l00025"/>00025 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_anpcpc_8py_source_1l00026"/>00026 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_anpcpc_8py_source_1l00027"/>00027 
<anchor xml:id="_anpcpc_8py_source_1l00028"/>00028 logger.remove()
<anchor xml:id="_anpcpc_8py_source_1l00029"/><link linkend="_namespaceanpcpc_1af8e80f1693970acfb7792b645adde448">00029</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_anpcpc_8py_source_1l00030"/>00030 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_anpcpc_8py_source_1l00031"/>00031 
<anchor xml:id="_anpcpc_8py_source_1l00032"/>00032 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00033"/><link linkend="_namespaceanpcpc_1a6d061093fd5f80bcbd737e82b3245a72">00033</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceanpcpc_1a6d061093fd5f80bcbd737e82b3245a72">calc_distance_</link>(users,&#32;facilities_x,&#32;facilities_y):
<anchor xml:id="_anpcpc_8py_source_1l00034"/>00034 &#32;&#32;&#32;&#32;distance&#32;=&#32;np.zeros((len(users),&#32;len(facilities_x)))
<anchor xml:id="_anpcpc_8py_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(users)):
<anchor xml:id="_anpcpc_8py_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(facilities_x)):&#32;<emphasis role="comment">#&#32;round&#32;to&#32;next&#32;int</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx&#32;=&#32;users[i,0]&#32;-&#32;facilities_x[j]
<anchor xml:id="_anpcpc_8py_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy&#32;=&#32;users[i,1]&#32;-&#32;facilities_y[j]
<anchor xml:id="_anpcpc_8py_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;we&#32;use&#32;the&#32;square&#32;of&#32;the&#32;distance&#32;because&#32;it&#32;is&#32;faster&#32;to&#32;compute</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance[i,j]&#32;=&#32;dx*dx&#32;+&#32;dy*dy&#32;
<anchor xml:id="_anpcpc_8py_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;distance&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00042"/>00042 
<anchor xml:id="_anpcpc_8py_source_1l00043"/>00043 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_anpcpc_8py_source_1l00044"/><link linkend="_namespaceanpcpc_1a6f7639f06e2fed3d414229306a974296">00044</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceanpcpc_1a6f7639f06e2fed3d414229306a974296">fitness_</link>(facilities_x,&#32;facilities_y,&#32;users,&#32;alpha):
<anchor xml:id="_anpcpc_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;distance&#32;=&#32;<link linkend="_namespaceanpcpc_1a6d061093fd5f80bcbd737e82b3245a72">calc_distance_</link>(users,&#32;facilities_x,&#32;facilities_y)&#32;
<anchor xml:id="_anpcpc_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;partitioned&#32;=&#32;np.partition(distance,&#32;alpha)&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;max([max(d[:alpha])&#32;<emphasis role="keywordflow">for</emphasis>&#32;d&#32;<emphasis role="keywordflow">in</emphasis>&#32;partitioned])
<anchor xml:id="_anpcpc_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;variant&#32;where&#32;instead&#32;of&#32;the&#32;alpha-best&#32;we&#32;use&#32;the&#32;sum&#32;of&#32;the&#32;best&#32;alpha&#32;distances</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;return&#32;max([np.sum(d[:alpha])&#32;for&#32;d&#32;in&#32;partitioned])</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00051"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c">00051</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classanpcpc_1_1_a_n_p_c_p_c">ANPCPC</link>():
<anchor xml:id="_anpcpc_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00053"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aabecc1aef0611cd232b2ed831264bdd8">00053</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aabecc1aef0611cd232b2ed831264bdd8">__init__</link>(self,&#32;p,&#32;alpha):
<anchor xml:id="_anpcpc_8py_source_1l00054"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823">00054</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823">p</link>&#32;=&#32;p
<anchor xml:id="_anpcpc_8py_source_1l00055"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a56b43f80f56c4fe551c9898e9a9d3243">00055</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a56b43f80f56c4fe551c9898e9a9d3243">alpha</link>&#32;=&#32;alpha
<anchor xml:id="_anpcpc_8py_source_1l00056"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743">dim</link>&#32;=&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823">p</link>&#32;*&#32;2
<anchor xml:id="_anpcpc_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00058"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a46599d8abb6d8e679b83469e854e287c">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a46599d8abb6d8e679b83469e854e287c">init_json</link>(self,&#32;json_file):&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;open(json_file)&#32;<emphasis role="keyword">as</emphasis>&#32;json_file:
<anchor xml:id="_anpcpc_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anpcp&#32;=&#32;json.load(json_file)&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00061"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74">00061</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74">users</link>&#32;=&#32;anpcp[<emphasis role="stringliteral">&apos;users&apos;</emphasis>]
<anchor xml:id="_anpcpc_8py_source_1l00062"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8">00062</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8">facilities</link>&#32;=&#32;np.array(anpcp[<emphasis role="stringliteral">&apos;facilities&apos;</emphasis>])
<anchor xml:id="_anpcpc_8py_source_1l00063"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a2aa59723704620f5b355784f07170ed7">00063</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a2aa59723704620f5b355784f07170ed7">unum</link>&#32;=&#32;len(self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74">users</link>)
<anchor xml:id="_anpcpc_8py_source_1l00064"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a305e5bb644df3f478d65806ed9dc1fb6">00064</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a305e5bb644df3f478d65806ed9dc1fb6">bounds</link>&#32;=&#32;Bounds([0]*self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743">dim</link>,&#32;[np.max(self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8">facilities</link>)]*self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743">dim</link>)&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00065"/>00065 &#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00066"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a80f22fbf486b618f3a7ecd63c61a4649">00066</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a80f22fbf486b618f3a7ecd63c61a4649">init_tsp</link>(self,&#32;tsp_file):&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;open(tsp_file)&#32;<emphasis role="keyword">as</emphasis>&#32;csvfile:
<anchor xml:id="_anpcpc_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lines&#32;=&#32;csvfile.readlines()
<anchor xml:id="_anpcpc_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;users&#32;=&#32;[]
<anchor xml:id="_anpcpc_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;facilities&#32;=&#32;[]&#32;
<anchor xml:id="_anpcpc_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;line&#32;<emphasis role="keywordflow">in</emphasis>&#32;lines:
<anchor xml:id="_anpcpc_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row&#32;=&#32;line.split()
<anchor xml:id="_anpcpc_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(row)&#32;!=&#32;4&#32;<emphasis role="keywordflow">or</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;row[0][0].isdigit():
<anchor xml:id="_anpcpc_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coords&#32;=&#32;np.array([float(row[1]),&#32;float(row[2])])
<anchor xml:id="_anpcpc_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;row[3]&#32;==&#32;<emphasis role="stringliteral">&apos;1&apos;</emphasis>:
<anchor xml:id="_anpcpc_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;facilities.append(coords)
<anchor xml:id="_anpcpc_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_anpcpc_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;users.append(coords)
<anchor xml:id="_anpcpc_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74">users</link>&#32;=&#32;np.array(users)&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8">facilities</link>&#32;=&#32;np.array(facilities)&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a2aa59723704620f5b355784f07170ed7">unum</link>&#32;=&#32;len(self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74">users</link>)
<anchor xml:id="_anpcpc_8py_source_1l00083"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a68074d4d23b40c4fe5a825c4747ea9c8">00083</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a68074d4d23b40c4fe5a825c4747ea9c8">fnum</link>&#32;=&#32;len(facilities)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a305e5bb644df3f478d65806ed9dc1fb6">bounds</link>&#32;=&#32;Bounds([0]*self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743">dim</link>,&#32;[np.max(self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8">facilities</link>)]*self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743">dim</link>)&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00086"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1ac4f58722e70806a92094828b839f084e">00086</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1ac4f58722e70806a92094828b839f084e">random_x</link>(self,&#32;seed&#32;=&#32;123):
<anchor xml:id="_anpcpc_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rng&#32;=&#32;np.random.default_rng(seed)
<anchor xml:id="_anpcpc_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rng.random(self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743">dim</link>)&#32;*&#32;np.max(self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8">facilities</link>)
<anchor xml:id="_anpcpc_8py_source_1l00089"/>00089 
<anchor xml:id="_anpcpc_8py_source_1l00090"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a87fc9a0c27deed3382ad48e45e11b999">00090</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a87fc9a0c27deed3382ad48e45e11b999">get_facilities</link>(self,&#32;x):
<anchor xml:id="_anpcpc_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;facilities_x&#32;=&#32;x[:self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823">p</link>]
<anchor xml:id="_anpcpc_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;facilities_y&#32;=&#32;x[self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823">p</link>:]
<anchor xml:id="_anpcpc_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array([[facilities_x[i],&#32;facilities_y[i]]&#32;\
<anchor xml:id="_anpcpc_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(facilities_x))])
<anchor xml:id="_anpcpc_8py_source_1l00095"/>00095 
<anchor xml:id="_anpcpc_8py_source_1l00096"/><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a1a9e91f15724d47e3ca531214abb18db">00096</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a1a9e91f15724d47e3ca531214abb18db">fitness</link>(self,&#32;x):
<anchor xml:id="_anpcpc_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;facilities_x&#32;=&#32;x[:self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823">p</link>]
<anchor xml:id="_anpcpc_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;facilities_y&#32;=&#32;x[self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823">p</link>:]
<anchor xml:id="_anpcpc_8py_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceanpcpc_1a6f7639f06e2fed3d414229306a974296">fitness_</link>(facilities_x,&#32;facilities_y,&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74">users</link>,&#32;self.<link linkend="_classanpcpc_1_1_a_n_p_c_p_c_1a56b43f80f56c4fe551c9898e9a9d3243">alpha</link>)
<anchor xml:id="_anpcpc_8py_source_1l00100"/>00100 &#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00101"/><link linkend="_namespaceanpcpc_1a40270bab751f1a6b11ea3f2e2859c9b6">00101</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceanpcpc_1a40270bab751f1a6b11ea3f2e2859c9b6">optimize</link>(anpcpc,&#32;opt,&#32;num_retries&#32;=&#32;32):
<anchor xml:id="_anpcpc_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;ret&#32;=&#32;retry.minimize(<link linkend="_classfcmaes_1_1optimizer_1_1wrapper">wrapper</link>(anpcpc.fitness),&#32;
<anchor xml:id="_anpcpc_8py_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anpcpc.bounds,&#32;num_retries&#32;=&#32;num_retries,&#32;
<anchor xml:id="_anpcpc_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer=opt)
<anchor xml:id="_anpcpc_8py_source_1l00105"/>00105 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;facility&#32;locations&#32;=&#32;&quot;</emphasis>,&#32;anpcpc.get_facilities(ret.x))
<anchor xml:id="_anpcpc_8py_source_1l00106"/>00106 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;value&#32;=&#32;&quot;</emphasis>,&#32;np.sqrt(ret.fun))
<anchor xml:id="_anpcpc_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00108"/>00108 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_anpcpc_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;anpcpc&#32;=&#32;ANPCPC(6,&#32;2)&#32;#&#32;p&#32;=&#32;6,&#32;alpha&#32;=&#32;2&#32;&#32;&#32;</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;anpcpc.init_tsp(&apos;data/att48_36_12_4.anpcp.tsp&apos;)&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;anpcpc&#32;=&#32;ANPCPC(12,&#32;2)&#32;#&#32;p&#32;=&#32;12,&#32;alpha&#32;=&#32;2</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;anpcpc.init_tsp(&apos;data/rat783_588_195_4.anpcp.tsp&apos;)&#32;&#32;&#32;</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00113"/><link linkend="_namespaceanpcpc_1aa0eb3717747838dafe9f87910283b8e8">00113</link> &#32;&#32;&#32;&#32;anpcpc&#32;=&#32;<link linkend="_classanpcpc_1_1_a_n_p_c_p_c">ANPCPC</link>(12,&#32;2)&#32;<emphasis role="comment">#&#32;p&#32;=&#32;12,&#32;alpha&#32;=&#32;2</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;anpcpc.init_tsp(<emphasis role="stringliteral">&apos;data/rl1323_993_330_4.anpcp.tsp&apos;</emphasis>)
<anchor xml:id="_anpcpc_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;
<anchor xml:id="_anpcpc_8py_source_1l00116"/><link linkend="_namespaceanpcpc_1ab08cea8848a3e910b2167bd758b129b8">00116</link> &#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;100000
<anchor xml:id="_anpcpc_8py_source_1l00117"/><link linkend="_namespaceanpcpc_1a736b88f96bf165d1b09df84f4e39c799">00117</link> &#32;&#32;&#32;&#32;opt&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp">Bite_cpp</link>(max_evaluations,&#32;M=6)
<anchor xml:id="_anpcpc_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;opt&#32;=&#32;Cma_cpp(max_evaluations)</emphasis>
<anchor xml:id="_anpcpc_8py_source_1l00119"/><link linkend="_namespaceanpcpc_1aebaa9deca41cafd15bede126256385ed">00119</link> &#32;&#32;&#32;&#32;<link linkend="_namespaceanpcpc_1a40270bab751f1a6b11ea3f2e2859c9b6">optimize</link>(anpcpc,&#32;opt,&#32;num_retries&#32;=&#32;32)
<anchor xml:id="_anpcpc_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;
</programlisting></section>

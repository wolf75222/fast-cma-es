<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_optimizer_8py_source" xml:lang="en-US">
<title>optimizer.py</title>
<indexterm><primary>fcmaes/optimizer.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_optimizer_8py_source_1l00001"/><link linkend="_namespacefcmaes_1_1optimizer">00001</link> <emphasis role="comment">#&#32;-*-&#32;coding:&#32;utf-8&#32;-*-</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00002"/>00002 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00003"/>00003 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00004"/>00004 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00005"/>00005 <emphasis role="stringliteral">&#32;Fast&#32;CMA-ES&#32;-&#32;version&#32;1.6.11</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00006"/>00006 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00007"/>00007 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00008"/>00008 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Latitude</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00009"/>00009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00010"/>00010 <emphasis role="stringliteral">&#32;License:&#32;MIT</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00011"/>00011 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00012"/>00012 <emphasis role="stringliteral">&#32;File:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00013"/>00013 <emphasis role="stringliteral">&#32;&#32;-&#32;optimizer.py</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00014"/>00014 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00015"/>00015 <emphasis role="stringliteral">&#32;Description:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00016"/>00016 <emphasis role="stringliteral">&#32;&#32;-&#32;Provides&#32;different&#32;optimization&#32;methods&#32;for&#32;use&#32;with&#32;parallel&#32;retry.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00017"/>00017 <emphasis role="stringliteral">&#32;&#32;-&#32;Implements&#32;a&#32;sequence&#32;of&#32;optimizers,&#32;random&#32;choice&#32;of&#32;optimizers,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00018"/>00018 <emphasis role="stringliteral">&#32;&#32;and&#32;different&#32;optimizers&#32;like&#32;CRFMNES,&#32;CMA-ES,&#32;Differential&#32;Evolution,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00019"/>00019 <emphasis role="stringliteral">&#32;&#32;Dual&#32;Annealing,&#32;Bite,&#32;and&#32;PGPE.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00020"/>00020 <emphasis role="stringliteral">&#32;&#32;-&#32;Provides&#32;a&#32;wrapper&#32;for&#32;fitness&#32;functions&#32;to&#32;use&#32;with&#32;parallel&#32;retry.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00021"/>00021 <emphasis role="stringliteral">&#32;&#32;-&#32;Implements&#32;utility&#32;functions&#32;for&#32;scaling,&#32;fitting,&#32;and&#32;generating&#32;random&#32;values.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00022"/>00022 <emphasis role="stringliteral">&#32;&#32;-&#32;Implements&#32;a&#32;base&#32;class&#32;for&#32;optimizers&#32;and&#32;derived&#32;classes&#32;for&#32;specific&#32;optimizers.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00023"/>00023 <emphasis role="stringliteral">&#32;&#32;-&#32;Provides&#32;functions&#32;to&#32;create&#32;common&#32;optimizer&#32;sequences&#32;like&#32;DE&#32;-&gt;&#32;CMA-ES,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00024"/>00024 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00025"/>00025 <emphasis role="stringliteral">&#32;Authors:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00026"/>00026 <emphasis role="stringliteral">&#32;&#32;-&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00027"/>00027 <emphasis role="stringliteral">&#32;&#32;-&#32;romain.despoullains@latitude.eu</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00028"/>00028 <emphasis role="stringliteral">&#32;&#32;-&#32;corentin.generet@latitude.eu</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00029"/>00029 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00030"/>00030 <emphasis role="stringliteral">&#32;References:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00031"/>00031 <emphasis role="stringliteral">&#32;&#32;-&#32;[1]&#32;https://github.com/dietmarwo/fast-cma-es</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00032"/>00032 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00033"/>00033 <emphasis role="stringliteral">&#32;Documentation:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00034"/>00034 <emphasis role="stringliteral">&#32;&#32;-</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00035"/>00035 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00036"/>00036 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00037"/>00037 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00038"/>00038 
<anchor xml:id="_optimizer_8py_source_1l00039"/>00039 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_optimizer_8py_source_1l00040"/>00040 <emphasis role="keyword">from</emphasis>&#32;numpy.random&#32;<emphasis role="keyword">import</emphasis>&#32;PCG64DXSM,&#32;Generator
<anchor xml:id="_optimizer_8py_source_1l00041"/>00041 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds,&#32;minimize,&#32;shgo,&#32;differential_evolution,&#32;dual_annealing,&#32;basinhopping
<anchor xml:id="_optimizer_8py_source_1l00042"/>00042 <emphasis role="keyword">import</emphasis>&#32;sys
<anchor xml:id="_optimizer_8py_source_1l00043"/>00043 <emphasis role="keyword">import</emphasis>&#32;time
<anchor xml:id="_optimizer_8py_source_1l00044"/>00044 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_optimizer_8py_source_1l00045"/>00045 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_optimizer_8py_source_1l00046"/>00046 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp&#32;
<anchor xml:id="_optimizer_8py_source_1l00047"/>00047 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1evaluator">fcmaes.evaluator</link>&#32;<emphasis role="keyword">import</emphasis>&#32;serial,&#32;parallel
<anchor xml:id="_optimizer_8py_source_1l00048"/>00048 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;crfmnes,&#32;crfmnescpp,&#32;pgpecpp,&#32;cmaes,&#32;de,&#32;cmaescpp,&#32;decpp,&#32;dacpp,&#32;bitecpp
<anchor xml:id="_optimizer_8py_source_1l00049"/>00049 
<anchor xml:id="_optimizer_8py_source_1l00050"/>00050 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;Optional,&#32;Callable,&#32;Tuple,&#32;Union
<anchor xml:id="_optimizer_8py_source_1l00051"/>00051 <emphasis role="keyword">from</emphasis>&#32;numpy.typing&#32;<emphasis role="keyword">import</emphasis>&#32;ArrayLike
<anchor xml:id="_optimizer_8py_source_1l00052"/>00052 
<anchor xml:id="_optimizer_8py_source_1l00053"/>00053 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1ae1056ace6b9d6293933260f0ffd8b139">eprint</link>(*args,&#32;**kwargs):
<anchor xml:id="_optimizer_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00055"/>00055 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Prints&#32;the&#32;provided&#32;arguments&#32;to&#32;the&#32;standard&#32;error&#32;stream.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00056"/>00056 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00057"/>00057 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;behaves&#32;similarly&#32;to&#32;the&#32;built-in&#32;print&#32;function&#32;but&#32;redirects</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00058"/>00058 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;output&#32;to&#32;the&#32;standard&#32;error&#32;stream&#32;(sys.stderr)&#32;instead&#32;of&#32;the&#32;standard</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00059"/>00059 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;output&#32;stream.&#32;This&#32;function&#32;is&#32;useful&#32;for&#32;logging&#32;errors&#32;or&#32;debugging</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00060"/>00060 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;information&#32;without&#32;interfering&#32;with&#32;normal&#32;program&#32;output.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00061"/>00061 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00062"/>00062 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00063"/>00063 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*args:&#32;Variable-length&#32;positional&#32;arguments&#32;to&#32;be&#32;printed.&#32;The&#32;arguments</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00064"/>00064 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;are&#32;converted&#32;to&#32;strings&#32;using&#32;str()&#32;before&#32;being&#32;printed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00065"/>00065 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;**kwargs:&#32;Variable-length&#32;keyword&#32;arguments&#32;that&#32;are&#32;passed&#32;to&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00066"/>00066 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;built-in&#32;print&#32;function.&#32;Common&#32;options&#32;include&#32;`sep`,&#32;`end`,&#32;and</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00067"/>00067 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`flush`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00068"/>00068 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;print(*args,&#32;file=sys.stderr,&#32;**kwargs)
<anchor xml:id="_optimizer_8py_source_1l00070"/><link linkend="_namespacefcmaes_1_1optimizer_1ae1056ace6b9d6293933260f0ffd8b139">00070</link> 
<anchor xml:id="_optimizer_8py_source_1l00071"/>00071 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1a4bd18244815f50df9c133ce56be95865">scale</link>(lower:&#32;ArrayLike,&#32;
<anchor xml:id="_optimizer_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper:&#32;ArrayLike)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_optimizer_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00074"/>00074 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Scales&#32;the&#32;difference&#32;between&#32;the&#32;upper&#32;and&#32;lower&#32;bounds&#32;by&#32;a&#32;factor&#32;of&#32;0.5.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00075"/>00075 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00076"/>00076 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;calculates&#32;the&#32;scaled&#32;difference&#32;between&#32;two&#32;array-like&#32;inputs,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00077"/>00077 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;representing&#32;the&#32;lower&#32;and&#32;upper&#32;bounds,&#32;respectively.&#32;The&#32;result&#32;is&#32;computed&#32;by</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00078"/>00078 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;taking&#32;the&#32;difference&#32;of&#32;the&#32;two&#32;inputs&#32;and&#32;multiplying&#32;by&#32;0.5.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00079"/>00079 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00080"/>00080 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00081"/>00081 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower&#32;(ArrayLike):&#32;The&#32;lower&#32;bounds&#32;as&#32;an&#32;array-like&#32;structure.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00082"/>00082 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;(ArrayLike):&#32;The&#32;upper&#32;bounds&#32;as&#32;an&#32;array-like&#32;structure.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00083"/>00083 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00084"/>00084 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00085"/>00085 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;NumPy&#32;array&#32;representing&#32;the&#32;scaled&#32;difference&#32;between&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00086"/>00086 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;and&#32;lower&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00087"/>00087 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00088"/><link linkend="_namespacefcmaes_1_1optimizer_1a4bd18244815f50df9c133ce56be95865">00088</link> &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.5&#32;*&#32;(np.asarray(upper)&#32;-&#32;np.asarray(lower))
<anchor xml:id="_optimizer_8py_source_1l00089"/>00089 
<anchor xml:id="_optimizer_8py_source_1l00090"/>00090 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1aaae18e4aad3a1d3f8ca3b264c16f10a8">typical</link>(lower:&#32;ArrayLike,&#32;
<anchor xml:id="_optimizer_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper:&#32;ArrayLike)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_optimizer_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00093"/>00093 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Computes&#32;the&#32;midpoint&#32;of&#32;the&#32;bounds&#32;by&#32;taking&#32;the&#32;average&#32;of&#32;the&#32;lower</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00094"/>00094 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;upper&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00095"/>00095 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00096"/>00096 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00097"/>00097 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower:&#32;Lower&#32;bounds&#32;specified&#32;as&#32;an&#32;array-like&#32;structure.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00098"/>00098 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper:&#32;Upper&#32;bounds&#32;specified&#32;as&#32;an&#32;array-like&#32;structure.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00099"/>00099 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00100"/>00100 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00101"/>00101 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;NumPy&#32;array&#32;containing&#32;the&#32;computed&#32;midpoints&#32;of&#32;the&#32;corresponding</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00102"/>00102 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower&#32;and&#32;upper&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00103"/>00103 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00104"/><link linkend="_namespacefcmaes_1_1optimizer_1aaae18e4aad3a1d3f8ca3b264c16f10a8">00104</link> &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.5&#32;*&#32;(np.asarray(upper)&#32;+&#32;np.asarray(lower))
<anchor xml:id="_optimizer_8py_source_1l00105"/>00105 
<anchor xml:id="_optimizer_8py_source_1l00106"/>00106 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1a83e03a72c4ba10e3773f1ec31350bd56">fitting</link>(guess:&#32;ArrayLike,&#32;
<anchor xml:id="_optimizer_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower:&#32;ArrayLike,&#32;
<anchor xml:id="_optimizer_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper:&#32;ArrayLike)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_optimizer_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00110"/>00110 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Clip&#32;an&#32;input&#32;array-like&#32;to&#32;ensure&#32;it&#32;remains&#32;within&#32;specified&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00111"/>00111 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00112"/>00112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;ensures&#32;that&#32;the&#32;values&#32;in&#32;the&#32;input&#32;array-like&#32;`guess`&#32;are</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00113"/>00113 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;restricted&#32;to&#32;a&#32;range&#32;defined&#32;by&#32;`lower`&#32;(minimum&#32;bound)&#32;and&#32;`upper`&#32;(maximum</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00114"/>00114 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;bound).&#32;The&#32;input&#32;arrays&#32;are&#32;converted&#32;into&#32;NumPy&#32;arrays&#32;before&#32;applying&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00115"/>00115 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;clipping&#32;operation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00116"/>00116 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00117"/>00117 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00118"/>00118 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Input&#32;array-like&#32;containing&#32;the&#32;values&#32;to&#32;be&#32;clipped.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00119"/>00119 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower:&#32;Array-like&#32;specifying&#32;the&#32;lower&#32;bounds&#32;for&#32;clipping.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00120"/>00120 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper:&#32;Array-like&#32;specifying&#32;the&#32;upper&#32;bounds&#32;for&#32;clipping.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00121"/>00121 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00122"/>00122 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00123"/>00123 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;NumPy&#32;array&#32;with&#32;values&#32;clipped&#32;to&#32;lie&#32;within&#32;the&#32;boundaries</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00124"/>00124 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defined&#32;by&#32;`lower`&#32;and&#32;`upper`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00125"/><link linkend="_namespacefcmaes_1_1optimizer_1a83e03a72c4ba10e3773f1ec31350bd56">00125</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.clip(np.asarray(guess),&#32;np.asarray(upper),&#32;np.asarray(lower))
<anchor xml:id="_optimizer_8py_source_1l00127"/>00127 
<anchor xml:id="_optimizer_8py_source_1l00128"/>00128 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1a28ae2bbd57e22b7bf12623dcc7cb75c8">is_terminate</link>(runid:&#32;int,&#32;
<anchor xml:id="_optimizer_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterations:&#32;int,&#32;
<anchor xml:id="_optimizer_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val:&#32;float)&#32;-&gt;&#32;bool:
<anchor xml:id="_optimizer_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00132"/>00132 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Determines&#32;whether&#32;a&#32;process&#32;should&#32;terminate&#32;based&#32;on&#32;the&#32;given&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00133"/>00133 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00134"/>00134 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;evaluates&#32;specific&#32;conditions&#32;using&#32;the&#32;provided&#32;parameters&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00135"/>00135 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;determine&#32;if&#32;the&#32;process&#32;should&#32;terminate.&#32;Returns&#32;a&#32;boolean&#32;value&#32;indicating</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00136"/>00136 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;termination&#32;status.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00137"/>00137 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00138"/>00138 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00139"/>00139 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runid&#32;(int):&#32;A&#32;unique&#32;identifier&#32;representing&#32;the&#32;current&#32;run.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00140"/>00140 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterations&#32;(int):&#32;The&#32;number&#32;of&#32;iterations&#32;executed&#32;so&#32;far&#32;in&#32;a&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00141"/>00141 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;(float):&#32;A&#32;numeric&#32;value&#32;used&#32;to&#32;evaluate&#32;termination&#32;conditions.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00142"/>00142 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00143"/>00143 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00144"/>00144 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;True&#32;if&#32;the&#32;process&#32;meets&#32;the&#32;termination&#32;condition,&#32;False&#32;otherwise.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00145"/><link linkend="_namespacefcmaes_1_1optimizer_1a28ae2bbd57e22b7bf12623dcc7cb75c8">00145</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00147"/>00147 
<anchor xml:id="_optimizer_8py_source_1l00148"/>00148 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1a86bf62954992be8d3ff9a4fbeed47c54">random_x</link>(lower:&#32;ArrayLike,&#32;upper:&#32;ArrayLike)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_optimizer_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00150"/>00150 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Generates&#32;a&#32;random&#32;numpy&#32;array&#32;of&#32;values&#32;within&#32;the&#32;specified&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00151"/>00151 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00152"/>00152 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;takes&#32;lower&#32;and&#32;upper&#32;bounds&#32;as&#32;input&#32;arrays&#32;and&#32;returns</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00153"/>00153 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;a&#32;numpy&#32;array&#32;with&#32;randomized&#32;values&#32;scaled&#32;and&#32;translated&#32;to&#32;lie</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00154"/>00154 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;within&#32;the&#32;specified&#32;bounds.&#32;The&#32;size&#32;and&#32;shape&#32;of&#32;the&#32;output&#32;array</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00155"/>00155 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;are&#32;determined&#32;by&#32;the&#32;size&#32;of&#32;the&#32;`lower`&#32;input.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00156"/>00156 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00157"/>00157 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00158"/>00158 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower:&#32;Lower&#32;bounds&#32;for&#32;the&#32;random&#32;values.&#32;Should&#32;be&#32;array-like</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00159"/>00159 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;convertible&#32;to&#32;a&#32;numpy&#32;array.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00160"/>00160 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper:&#32;Upper&#32;bounds&#32;for&#32;the&#32;random&#32;values.&#32;Should&#32;be&#32;array-like</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00161"/>00161 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;convertible&#32;to&#32;a&#32;numpy&#32;array.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00162"/>00162 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00163"/>00163 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00164"/>00164 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;numpy&#32;array&#32;containing&#32;random&#32;values&#32;within&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00165"/>00165 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specified&#32;lower&#32;and&#32;upper&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00166"/>00166 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;lower&#32;=&#32;np.asarray(lower)
<anchor xml:id="_optimizer_8py_source_1l00168"/><link linkend="_namespacefcmaes_1_1optimizer_1a86bf62954992be8d3ff9a4fbeed47c54">00168</link> &#32;&#32;&#32;&#32;upper&#32;=&#32;np.asarray(upper)
<anchor xml:id="_optimizer_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lower&#32;+&#32;np.multiply(upper&#32;-&#32;lower,&#32;np.random.rand(lower.size))
<anchor xml:id="_optimizer_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00171"/>00171 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1ac563cd1fadd680f0e114a92adb740159">dtime</link>(t0:&#32;float)&#32;-&gt;&#32;float:
<anchor xml:id="_optimizer_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00173"/>00173 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Calculates&#32;the&#32;elapsed&#32;time&#32;in&#32;seconds&#32;since&#32;the&#32;provided&#32;starting&#32;time&#32;`t0`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00174"/>00174 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00175"/>00175 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;computes&#32;the&#32;difference&#32;between&#32;the&#32;current&#32;time&#32;(as&#32;measured&#32;by</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00176"/>00176 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;`time.perf_counter`)&#32;and&#32;the&#32;given&#32;starting&#32;time&#32;`t0`.&#32;The&#32;result&#32;is&#32;rounded</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00177"/>00177 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;two&#32;decimal&#32;places&#32;for&#32;precision.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00178"/>00178 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00179"/>00179 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00180"/>00180 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t0:&#32;A&#32;float&#32;representing&#32;the&#32;starting&#32;time,&#32;typically&#32;obtained&#32;from</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00181"/>00181 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`time.perf_counter`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00182"/>00182 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00183"/>00183 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00184"/>00184 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;float&#32;representing&#32;the&#32;elapsed&#32;time&#32;in&#32;seconds,&#32;rounded&#32;to&#32;two&#32;decimal</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00185"/>00185 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;places.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00186"/>00186 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00187"/>00187 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;round(time.perf_counter()&#32;-&#32;t0,&#32;2)
<anchor xml:id="_optimizer_8py_source_1l00188"/><link linkend="_namespacefcmaes_1_1optimizer_1ac563cd1fadd680f0e114a92adb740159">00188</link> 
<anchor xml:id="_optimizer_8py_source_1l00189"/>00189 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1wrapper">wrapper</link>(object):
<anchor xml:id="_optimizer_8py_source_1l00190"/>00190 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Wrapper&#32;for&#32;optimization&#32;evaluation&#32;and&#32;logging.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00191"/>00191 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00192"/>00192 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;serves&#32;as&#32;a&#32;wrapper&#32;around&#32;a&#32;user-defined&#32;objective&#32;function</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00193"/>00193 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;(`fit`).&#32;It&#32;tracks&#32;the&#32;number&#32;of&#32;function&#32;evaluations,&#32;the&#32;best&#32;evaluation</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00194"/>00194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;value&#32;found&#32;so&#32;far,&#32;and&#32;provides&#32;logging&#32;functionality.&#32;The&#32;wrapper&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00195"/>00195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;typically&#32;used&#32;in&#32;optimization&#32;tasks&#32;to&#32;facilitate&#32;performance&#32;tracking</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00196"/>00196 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;debug&#32;information.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00197"/>00197 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00198"/>00198 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00199"/>00199 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fit&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;be</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00200"/>00200 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluated.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00201"/>00201 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;(multiprocessing.sharedctypes.Synchronized):&#32;A&#32;shared&#32;integer</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00202"/>00202 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;tracks&#32;the&#32;total&#32;number&#32;of&#32;evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00203"/><link linkend="_classfcmaes_1_1optimizer_1_1wrapper">00203</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_y&#32;(multiprocessing.sharedctypes.Synchronized):&#32;A&#32;shared&#32;double</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00204"/>00204 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;used&#32;to&#32;store&#32;the&#32;best&#32;result&#32;value&#32;found&#32;so&#32;far.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00205"/>00205 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t0&#32;(float):&#32;The&#32;timestamp&#32;(in&#32;seconds)&#32;when&#32;the&#32;wrapper&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00206"/>00206 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;instantiated.&#32;Used&#32;for&#32;tracking&#32;elapsed&#32;time.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00207"/>00207 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00208"/>00208 
<anchor xml:id="_optimizer_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1aed261250f7e3866c2dcf79a3e2f99e8d">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fit:&#32;Callable[[ArrayLike],&#32;float]):
<anchor xml:id="_optimizer_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00212"/>00212 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;class&#32;with&#32;a&#32;fitness&#32;evaluation&#32;function,&#32;shared&#32;evaluation&#32;counts,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00213"/>00213 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best&#32;result&#32;achieved,&#32;and&#32;initial&#32;time&#32;measurement.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00214"/>00214 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00215"/>00215 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00216"/>00216 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fit&#32;(Callable[[ArrayLike],&#32;float]):&#32;A&#32;callable&#32;function&#32;that&#32;evaluates&#32;the&#32;fitness&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00217"/>00217 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;array-like&#32;input&#32;and&#32;returns&#32;a&#32;float&#32;score.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00218"/>00218 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1a79dcdc4f646076fb112f0f41de73f2d5">fit</link>&#32;=&#32;fit
<anchor xml:id="_optimizer_8py_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1aa70a5066e0c47fb11d70e9f59485ae19">evals</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)&#32;
<anchor xml:id="_optimizer_8py_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1adec55deddde66d5eeaa8e51681f3c094">best_y</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;np.inf)&#32;
<anchor xml:id="_optimizer_8py_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1aea57e451cd341d8ec740d1beedb095f3">t0</link>&#32;=&#32;time.perf_counter()
<anchor xml:id="_optimizer_8py_source_1l00223"/>00223 
<anchor xml:id="_optimizer_8py_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1a430bf153bd7cabe32d29db369f16b53e">__call__</link>(self,&#32;x:&#32;ArrayLike)&#32;-&gt;&#32;float:
<anchor xml:id="_optimizer_8py_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00226"/>00226 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Executes&#32;the&#32;callable&#32;object&#32;with&#32;the&#32;given&#32;input&#32;`x`,&#32;tracking&#32;its&#32;evaluations&#32;and&#32;logging&#32;improvements.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00227"/>00227 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00228"/><link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1aed261250f7e3866c2dcf79a3e2f99e8d">00228</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;evaluates&#32;the&#32;function&#32;with&#32;the&#32;provided&#32;input&#32;array-like&#32;`x`,&#32;updates&#32;the&#32;best&#32;result&#32;seen&#32;so&#32;far,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00229"/>00229 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;logs&#32;the&#32;details&#32;if&#32;an&#32;improvement&#32;occurs.&#32;If&#32;an&#32;exception&#32;is&#32;raised&#32;during&#32;execution,&#32;it&#32;prints&#32;the&#32;error</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00230"/><link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1a79dcdc4f646076fb112f0f41de73f2d5">00230</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;returns&#32;the&#32;maximum&#32;float&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00231"/><link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1aa70a5066e0c47fb11d70e9f59485ae19">00231</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00232"/><link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1adec55deddde66d5eeaa8e51681f3c094">00232</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00233"/><link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1aea57e451cd341d8ec740d1beedb095f3">00233</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;(ArrayLike):&#32;The&#32;input&#32;to&#32;be&#32;evaluated&#32;by&#32;the&#32;callable&#32;object.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00234"/>00234 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00235"/>00235 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00236"/>00236 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;result&#32;of&#32;the&#32;evaluation,&#32;or&#32;the&#32;maximum&#32;float&#32;value&#32;in&#32;case&#32;of&#32;an&#32;exception.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00237"/>00237 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1aa70a5066e0c47fb11d70e9f59485ae19">evals</link>.value&#32;+=&#32;1
<anchor xml:id="_optimizer_8py_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1a79dcdc4f646076fb112f0f41de73f2d5">fit</link>(x)
<anchor xml:id="_optimizer_8py_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y0&#32;=&#32;y&#32;<emphasis role="keywordflow">if</emphasis>&#32;np.isscalar(y)&#32;<emphasis role="keywordflow">else</emphasis>&#32;sum(y)
<anchor xml:id="_optimizer_8py_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y0&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1adec55deddde66d5eeaa8e51681f3c094">best_y</link>.value:
<anchor xml:id="_optimizer_8py_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1adec55deddde66d5eeaa8e51681f3c094">best_y</link>.value&#32;=&#32;y0
<anchor xml:id="_optimizer_8py_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(&#32;
<anchor xml:id="_optimizer_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f<emphasis role="stringliteral">&apos;{dtime(self.t0)}&#32;{self.evals.value}&#32;{self.evals.value/(1E-9&#32;+&#32;dtime(self.t0)):.1f}&#32;{self.best_y.value}&#32;{list(x)}&apos;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_optimizer_8py_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y
<anchor xml:id="_optimizer_8py_source_1l00248"/><link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1a430bf153bd7cabe32d29db369f16b53e">00248</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_optimizer_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(str(ex))&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sys.float_info.max&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00251"/>00251 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00252"/>00252 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>(object):
<anchor xml:id="_optimizer_8py_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00254"/>00254 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Provides&#32;functionalities&#32;for&#32;optimization&#32;tasks.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00255"/>00255 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00256"/>00256 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;is&#32;designed&#32;to&#32;handle&#32;optimization&#32;operations,&#32;allowing&#32;users</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00257"/>00257 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;set&#32;a&#32;maximum&#32;number&#32;of&#32;evaluations&#32;and&#32;assign&#32;a&#32;specific&#32;name&#32;to&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00258"/>00258 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimizer.&#32;It&#32;also&#32;has&#32;methods&#32;for&#32;retrieving&#32;the&#32;maximum&#32;evaluation&#32;number</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00259"/>00259 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;counting&#32;runs,&#32;optionally&#32;integrating&#32;with&#32;a&#32;`store`&#32;object.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00260"/>00260 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00261"/>00261 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00262"/>00262 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(int,&#32;optional):&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00263"/>00263 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimizer.&#32;Default&#32;is&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00264"/>00264 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str,&#32;optional):&#32;The&#32;name&#32;assigned&#32;to&#32;the&#32;optimizer.&#32;Default&#32;is&#32;an</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00265"/>00265 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;empty&#32;string.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00266"/>00266 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00267"/>00267 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00268"/>00268 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1wrapper_1aed261250f7e3866c2dcf79a3e2f99e8d">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,&#32;
<anchor xml:id="_optimizer_8py_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name:&#32;Optional[str]&#32;=&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00272"/>00272 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;class&#32;with&#32;specific&#32;parameters&#32;including&#32;the&#32;maximum&#32;number&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00273"/>00273 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluations&#32;and&#32;the&#32;name.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00274"/>00274 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00275"/>00275 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00276"/>00276 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int].&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;allowed.&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00277"/><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">00277</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name:&#32;Optional[str].&#32;The&#32;name&#32;or&#32;identifier&#32;for&#32;the&#32;instance.&#32;Defaults&#32;to&#32;an&#32;empty&#32;string.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00278"/>00278 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>&#32;=&#32;max_evaluations
<anchor xml:id="_optimizer_8py_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>&#32;=&#32;name&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00281"/>00281 
<anchor xml:id="_optimizer_8py_source_1l00282"/>00282 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(self,&#32;store=None):
<anchor xml:id="_optimizer_8py_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00284"/>00284 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Evaluates&#32;and&#32;returns&#32;the&#32;maximum&#32;number&#32;of&#32;evaluations&#32;based&#32;on&#32;the&#32;provided&#32;store</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00285"/>00285 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;the&#32;object&apos;s&#32;default&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00286"/>00286 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00287"/><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1">00287</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00288"/>00288 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(optional):&#32;A&#32;store&#32;object&#32;that&#32;provides&#32;the&#32;`eval_num`&#32;method.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00289"/>00289 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00290"/><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">00290</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00291"/><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">00291</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations,&#32;as&#32;determined&#32;by&#32;the&#32;store&#32;if&#32;provided,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00292"/>00292 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;the&#32;object&apos;s&#32;default&#32;maximum&#32;evaluations&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00293"/>00293 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;store&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;\
<anchor xml:id="_optimizer_8py_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.eval_num(self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>)
<anchor xml:id="_optimizer_8py_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00297"/>00297 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link>(self,&#32;store=None):
<anchor xml:id="_optimizer_8py_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00299"/>00299 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gets&#32;the&#32;count&#32;of&#32;runs&#32;from&#32;the&#32;provided&#32;store.&#32;If&#32;no&#32;store&#32;is&#32;provided,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00300"/>00300 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returns&#32;0.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00301"/>00301 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00302"/>00302 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00303"/>00303 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;An&#32;object&#32;with&#32;a&#32;method&#32;`get_count_runs`.&#32;If&#32;None,&#32;the&#32;method</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00304"/><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">00304</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returns&#32;0.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00305"/>00305 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00306"/>00306 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00307"/>00307 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;count&#32;of&#32;runs&#32;retrieved&#32;from&#32;the&#32;store,&#32;or&#32;0&#32;if&#32;the&#32;store</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00308"/>00308 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;not&#32;provided.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00309"/>00309 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0&#32;<emphasis role="keywordflow">if</emphasis>&#32;store&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;\
<anchor xml:id="_optimizer_8py_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.get_count_runs()
<anchor xml:id="_optimizer_8py_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00313"/>00313 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00315"/>00315 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;A&#32;class&#32;for&#32;sequentially&#32;combining&#32;multiple&#32;optimizers.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00316"/>00316 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00317"/>00317 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;Sequence&#32;class&#32;is&#32;designed&#32;to&#32;execute&#32;a&#32;series&#32;of&#32;optimizers&#32;sequentially.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00318"/>00318 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Each&#32;optimizer&#32;in&#32;the&#32;provided&#32;sequence&#32;takes&#32;over&#32;from&#32;the&#32;result&#32;of&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00319"/>00319 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;previous&#32;one,&#32;allowing&#32;for&#32;a&#32;composite&#32;approach&#32;to&#32;optimization.&#32;The&#32;class</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00320"/><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">00320</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;inherits&#32;from&#32;the&#32;Optimizer&#32;base&#32;class.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00321"/>00321 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00322"/>00322 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00323"/>00323 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizers&#32;(ArrayLike):&#32;List&#32;of&#32;optimizer&#32;instances&#32;to&#32;be&#32;executed</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00324"/>00324 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sequentially.&#32;Each&#32;optimizer&#32;must&#32;inherit&#32;from&#32;the&#32;base&#32;Optimizer</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00325"/>00325 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;class.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00326"/>00326 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(int):&#32;Total&#32;number&#32;of&#32;evaluations&#32;across&#32;all&#32;optimizers</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00327"/>00327 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;sequence.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00328"/>00328 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;Concatenated&#32;name&#32;of&#32;all&#32;optimizers&#32;in&#32;the&#32;sequence,&#32;separated</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00329"/>00329 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;by&#32;arrows&#32;(&apos;&#32;-&gt;&#32;&apos;).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00330"/>00330 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00331"/>00331 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00332"/>00332 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1">__init__</link>(self,&#32;optimizers:&#32;ArrayLike):
<anchor xml:id="_optimizer_8py_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00334"/>00334 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;class&#32;with&#32;a&#32;list&#32;of&#32;optimizers,&#32;calculating&#32;the&#32;total&#32;number&#32;of&#32;evaluations&#32;and&#32;preparing&#32;the&#32;combined</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00335"/><link linkend="_classfcmaes_1_1optimizer_1_1_sequence">00335</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer&#32;name.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00336"/>00336 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00337"/>00337 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Each&#32;optimizer&#32;from&#32;the&#32;provided&#32;list&#32;contributes&#32;its&#32;name&#32;and&#32;maximum&#32;evaluations&#32;to&#32;compose&#32;a&#32;combined&#32;metadata</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00338"/>00338 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;representation&#32;for&#32;the&#32;initialized&#32;object.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00339"/>00339 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00340"/>00340 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00341"/>00341 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizers&#32;(ArrayLike):&#32;A&#32;list&#32;or&#32;array-like&#32;object&#32;containing&#32;optimizer&#32;instances.&#32;Each&#32;optimizer&#32;should&#32;have&#32;a</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00342"/>00342 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`name`&#32;attribute&#32;and&#32;a&#32;`max_evaluations`&#32;attribute.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00343"/>00343 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self)
<anchor xml:id="_optimizer_8py_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_sequence_1a4115470350e4b99353bd0ad57f11e1c7">optimizers</link>&#32;=&#32;optimizers&#32;
<anchor xml:id="_optimizer_8py_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>&#32;=&#32;0&#32;
<anchor xml:id="_optimizer_8py_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;optimizer&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_sequence_1a4115470350e4b99353bd0ad57f11e1c7">optimizers</link>:
<anchor xml:id="_optimizer_8py_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>&#32;+=&#32;optimizer.name&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;-&gt;&#32;&apos;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>&#32;+=&#32;optimizer.max_evaluations
<anchor xml:id="_optimizer_8py_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>[:-4]
<anchor xml:id="_optimizer_8py_source_1l00351"/>00351 
<anchor xml:id="_optimizer_8py_source_1l00352"/>00352 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_sequence_1adc63a6013eab2ee950d72914cb655e4e">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,&#32;
<anchor xml:id="_optimizer_8py_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike,&#32;Callable]]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store=<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00360"/>00360 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;using&#32;multiple&#32;optimizers&#32;and&#32;evaluates</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00361"/>00361 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;respective&#32;results&#32;to&#32;find&#32;the&#32;optimal&#32;solution.&#32;This&#32;function&#32;iteratively</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00362"/>00362 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;utilizes&#32;different&#32;optimizers&#32;to&#32;search&#32;for&#32;the&#32;minimum&#32;value&#32;of&#32;the&#32;objective</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00363"/><link linkend="_classfcmaes_1_1optimizer_1_1_sequence_1a66a64a03f89942b1f44ed1a5e4f251db">00363</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;within&#32;specified&#32;bounds&#32;while&#32;updating&#32;the&#32;best&#32;guess&#32;during&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00364"/>00364 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;The&#32;total&#32;function&#32;evaluations&#32;across&#32;all&#32;optimizers&#32;are&#32;accumulated.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00365"/><link linkend="_classfcmaes_1_1optimizer_1_1_sequence_1a4115470350e4b99353bd0ad57f11e1c7">00365</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00366"/><link linkend="_classfcmaes_1_1optimizer_1_1_sequence">00366</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00367"/>00367 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00368"/>00368 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Must&#32;accept&#32;a&#32;variable&#32;of&#32;type&#32;ArrayLike&#32;and&#32;return&#32;a&#32;float.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00369"/>00369 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Bounds):&#32;The&#32;bounds&#32;within&#32;which&#32;the&#32;optimization&#32;is&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00370"/><link linkend="_classfcmaes_1_1optimizer_1_1_sequence">00370</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;An&#32;optional&#32;initial&#32;guess&#32;for&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00371"/>00371 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[Union[float,&#32;ArrayLike,&#32;Callable]]):&#32;Optional&#32;standard</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00372"/>00372 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deviations&#32;or&#32;a&#32;callable&#32;defining&#32;standard&#32;deviation&#32;that&#32;supports</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00373"/>00373 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00374"/>00374 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;Random&#32;number&#32;generator&#32;for&#32;stochastic&#32;techniques,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00375"/>00375 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaults&#32;to&#32;numpy&apos;s&#32;Generator(PCG64DXSM).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00376"/>00376 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional&#32;parameter&#32;to&#32;store&#32;intermediate&#32;results&#32;or&#32;data&#32;related</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00377"/>00377 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00378"/>00378 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00379"/>00379 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00380"/>00380 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00381"/>00381 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;optimal&#32;parameters&#32;as&#32;a&#32;numpy&#32;ndarray.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00382"/>00382 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;minimum&#32;value&#32;of&#32;the&#32;function&#32;found.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00383"/>00383 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;Total&#32;function&#32;evaluations&#32;across&#32;all&#32;optimizers.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00384"/>00384 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;0
<anchor xml:id="_optimizer_8py_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;np.inf
<anchor xml:id="_optimizer_8py_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;optimizer&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_sequence_1a4115470350e4b99353bd0ad57f11e1c7">optimizers</link>:
<anchor xml:id="_optimizer_8py_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;optimizer.minimize(fun,&#32;bounds,&#32;guess,&#32;sdevs,&#32;rg,&#32;store)
<anchor xml:id="_optimizer_8py_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;ret[1]&#32;&lt;&#32;y:
<anchor xml:id="_optimizer_8py_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;ret[1]
<anchor xml:id="_optimizer_8py_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;ret[0]
<anchor xml:id="_optimizer_8py_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;x
<anchor xml:id="_optimizer_8py_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;+=&#32;ret[2]
<anchor xml:id="_optimizer_8py_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x,&#32;y,&#32;evals
<anchor xml:id="_optimizer_8py_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00396"/>00396 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_choice">Choice</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l00397"/>00397 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;A&#32;class&#32;representing&#32;a&#32;choice-based&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00398"/><link linkend="_classfcmaes_1_1optimizer_1_1_sequence_1adc63a6013eab2ee950d72914cb655e4e">00398</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00399"/>00399 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;Choice&#32;class&#32;allows&#32;selecting&#32;a&#32;random&#32;optimizer&#32;from&#32;a&#32;list&#32;of&#32;provided</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00400"/>00400 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimizers.&#32;It&#32;facilitates&#32;optimization&#32;by&#32;delegating&#32;the&#32;minimize&#32;function</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00401"/>00401 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;one&#32;of&#32;the&#32;contained&#32;optimizers.&#32;The&#32;purpose&#32;of&#32;this&#32;class&#32;is&#32;to&#32;provide</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00402"/>00402 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;flexibility&#32;in&#32;switching&#32;between&#32;different&#32;optimization&#32;strategies&#32;dynamically.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00403"/>00403 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00404"/>00404 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00405"/>00405 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizers&#32;(ArrayLike):&#32;A&#32;list&#32;of&#32;optimizers&#32;to&#32;be&#32;used&#32;by&#32;the&#32;choice</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00406"/>00406 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00407"/>00407 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(int):&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;allowed,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00408"/>00408 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;determined&#32;from&#32;the&#32;first&#32;optimizer&#32;in&#32;the&#32;list.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00409"/>00409 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00410"/>00410 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00411"/>00411 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_sequence_1a66a64a03f89942b1f44ed1a5e4f251db">__init__</link>(self,&#32;optimizers:&#32;ArrayLike):
<anchor xml:id="_optimizer_8py_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00413"/>00413 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Combines&#32;multiple&#32;optimizers&#32;to&#32;operate&#32;as&#32;a&#32;single&#32;optimizer.&#32;This&#32;class</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00414"/>00414 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allows&#32;multiple&#32;optimization&#32;algorithms&#32;to&#32;be&#32;combined&#32;and&#32;treated&#32;as</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00415"/>00415 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;unified&#32;optimizer.&#32;Each&#32;individual&#32;optimizer&#32;contributes&#32;to&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00416"/>00416 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;effectiveness&#32;of&#32;the&#32;overall&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00417"/>00417 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00418"/>00418 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00419"/>00419 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizers&#32;(ArrayLike):&#32;A&#32;collection&#32;of&#32;optimizer&#32;instances&#32;that</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00420"/>00420 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;will&#32;be&#32;combined&#32;into&#32;a&#32;unified&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00421"/>00421 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00422"/>00422 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00423"/>00423 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizers&#32;(ArrayLike):&#32;Collection&#32;of&#32;optimizer&#32;instances.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00424"/>00424 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(int):&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;defined&#32;by</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00425"/>00425 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;first&#32;optimizer&#32;in&#32;the&#32;collection.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00426"/><link linkend="_classfcmaes_1_1optimizer_1_1_choice">00426</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;Concatenated&#32;names&#32;of&#32;all&#32;optimizers&#32;separated&#32;by&#32;&quot;&#32;|&#32;&quot;.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00427"/>00427 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self)
<anchor xml:id="_optimizer_8py_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_choice_1a63c504ba4d8b574728b84223f1c01158">optimizers</link>&#32;=&#32;optimizers&#32;
<anchor xml:id="_optimizer_8py_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>&#32;=&#32;optimizers[0].max_evaluations&#32;
<anchor xml:id="_optimizer_8py_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;optimizer&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_choice_1a63c504ba4d8b574728b84223f1c01158">optimizers</link>:
<anchor xml:id="_optimizer_8py_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>&#32;+=&#32;optimizer.name&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;|&#32;&apos;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>[:-3]
<anchor xml:id="_optimizer_8py_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00435"/>00435 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_choice_1acc04c696958e97fdd9c4f8ad51354530">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,&#32;
<anchor xml:id="_optimizer_8py_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike,&#32;Callable]]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store=<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00443"/>00443 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;function&#32;using&#32;one&#32;of&#32;the&#32;available&#32;optimizers&#32;chosen&#32;at&#32;random.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00444"/>00444 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00445"/>00445 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;selects&#32;an&#32;optimizer&#32;from&#32;the&#32;available&#32;pool&#32;of&#32;optimizers&#32;randomnly,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00446"/>00446 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;then&#32;uses&#32;the&#32;selected&#32;optimizer&#32;to&#32;minimize&#32;the&#32;given&#32;function.&#32;The&#32;function&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00447"/>00447 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;minimized,&#32;along&#32;with&#32;other&#32;parameters&#32;required&#32;for&#32;the&#32;optimization,&#32;are&#32;passed</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00448"/>00448 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;chosen&#32;optimizer.&#32;The&#32;result&#32;of&#32;the&#32;optimization,&#32;including&#32;the&#32;solution,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00449"/>00449 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minimum&#32;value,&#32;and&#32;number&#32;of&#32;iterations,&#32;is&#32;returned.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00450"/>00450 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00451"/>00451 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00452"/>00452 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;function&#32;to&#32;minimize.&#32;This&#32;should&#32;take</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00453"/>00453 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;single&#32;argument,&#32;which&#32;is&#32;a&#32;set&#32;of&#32;parameter&#32;values,&#32;and&#32;return&#32;a&#32;scalar</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00454"/>00454 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;representing&#32;the&#32;objective&#32;to&#32;minimize.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00455"/><link linkend="_classfcmaes_1_1optimizer_1_1_choice_1a5d640dae06a047492e728d0fc2bac409">00455</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Bounds):&#32;The&#32;bounds&#32;for&#32;the&#32;optimization,&#32;specifying&#32;the&#32;feasible</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00456"/>00456 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range&#32;for&#32;each&#32;parameter&#32;in&#32;the&#32;input&#32;space.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00457"/><link linkend="_classfcmaes_1_1optimizer_1_1_choice_1a63c504ba4d8b574728b84223f1c01158">00457</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization.&#32;Provides</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00458"/><link linkend="_classfcmaes_1_1optimizer_1_1_choice">00458</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;starting&#32;point&#32;for&#32;the&#32;optimization&#32;process.&#32;If&#32;not&#32;provided,&#32;defaults</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00459"/>00459 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00460"/>00460 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[Union[float,&#32;ArrayLike,&#32;Callable]]):&#32;Standard&#32;deviations&#32;or</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00461"/><link linkend="_classfcmaes_1_1optimizer_1_1_choice">00461</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;function&#32;to&#32;generate&#32;them,&#32;influencing&#32;the&#32;exploration&#32;during&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00462"/>00462 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.&#32;If&#32;not&#32;provided,&#32;defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00463"/>00463 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;Random&#32;number&#32;generator&#32;instance&#32;for&#32;selecting&#32;a</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00464"/>00464 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;random&#32;optimizer&#32;and&#32;potentially&#32;generating&#32;random&#32;values&#32;for&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00465"/>00465 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;a&#32;`Generator`&#32;using&#32;`PCG64DXSM`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00466"/>00466 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional&#32;storage&#32;object&#32;for&#32;logging&#32;or&#32;saving&#32;optimization&#32;history.&#32;The</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00467"/>00467 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;structure&#32;and&#32;usage&#32;are&#32;dependent&#32;on&#32;the&#32;specific&#32;optimizers&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00468"/>00468 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00469"/>00469 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00470"/>00470 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing&#32;the&#32;optimization&#32;results:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00471"/>00471 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;A&#32;NumPy&#32;array&#32;with&#32;the&#32;parameters&#32;corresponding&#32;to&#32;the&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00472"/>00472 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;A&#32;float&#32;denoting&#32;the&#32;minimum&#32;value&#32;of&#32;the&#32;objective&#32;function&#32;found.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00473"/>00473 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;An&#32;integer&#32;indicating&#32;the&#32;number&#32;of&#32;iterations&#32;used&#32;in&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00474"/>00474 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;choice&#32;=&#32;rg.integers(0,&#32;len(self.<link linkend="_classfcmaes_1_1optimizer_1_1_choice_1a63c504ba4d8b574728b84223f1c01158">optimizers</link>))
<anchor xml:id="_optimizer_8py_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_choice_1a63c504ba4d8b574728b84223f1c01158">optimizers</link>[choice]
<anchor xml:id="_optimizer_8py_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt.minimize(fun,&#32;bounds,&#32;guess,&#32;sdevs,&#32;rg,&#32;store)
<anchor xml:id="_optimizer_8py_source_1l00478"/>00478 
<anchor xml:id="_optimizer_8py_source_1l00479"/>00479 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1a7619d6ba38c7ec9033f6dbd0580f094b">de_cma</link>(max_evaluations:&#32;Optional[int]&#32;=&#32;50000,&#32;
<anchor xml:id="_optimizer_8py_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_optimizer_8py_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Sequence:
<anchor xml:id="_optimizer_8py_source_1l00486"/>00486 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00487"/>00487 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Creates&#32;a&#32;sequence&#32;of&#32;optimization&#32;algorithms&#32;combining&#32;Differential&#32;Evolution&#32;(DE)&#32;and&#32;Covariance&#32;Matrix&#32;Adaptation&#32;(CMA).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00488"/>00488 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00489"/>00489 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;allows&#32;the&#32;user&#32;to&#32;specify&#32;the&#32;maximum&#32;number&#32;of&#32;evaluations,&#32;population&#32;size,&#32;and&#32;stopping&#32;fitness,&#32;and&#32;it</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00490"/>00490 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;distributes&#32;the&#32;evaluations&#32;proportionally&#32;between&#32;DE&#32;and&#32;CMA.&#32;The&#32;parameters&#32;for&#32;DE&#32;and&#32;CMA&#32;can&#32;also&#32;be&#32;individually</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00491"/>00491 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;customized.&#32;It&#32;returns&#32;a&#32;sequence&#32;of&#32;optimization&#32;instances&#32;for&#32;further&#32;use&#32;in&#32;optimization&#32;tasks.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00492"/>00492 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00493"/>00493 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00494"/>00494 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;to&#32;be&#32;distributed&#32;between&#32;DE&#32;and&#32;CMA&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00495"/>00495 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithms.&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00496"/><link linkend="_classfcmaes_1_1optimizer_1_1_choice_1acc04c696958e97fdd9c4f8ad51354530">00496</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Population&#32;size&#32;for&#32;the&#32;optimizers.&#32;Defaults&#32;to&#32;31.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00497"/>00497 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;Fitness&#32;threshold&#32;to&#32;stop&#32;the&#32;optimization&#32;process.&#32;Defaults&#32;to&#32;-infinity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00498"/>00498 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals&#32;(Optional[int]):&#32;Specific&#32;maximum&#32;number&#32;of&#32;evaluations&#32;for&#32;the&#32;DE&#32;optimizer.&#32;If&#32;None,&#32;it&#32;is&#32;calculated</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00499"/>00499 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;as&#32;a&#32;proportion&#32;of&#32;max_evaluations.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00500"/>00500 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;(Optional[int]):&#32;Specific&#32;maximum&#32;number&#32;of&#32;evaluations&#32;for&#32;the&#32;CMA&#32;optimizer.&#32;If&#32;None,&#32;it&#32;is&#32;calculated</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00501"/>00501 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;as&#32;a&#32;proportion&#32;of&#32;max_evaluations.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00502"/>00502 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints&#32;(Optional[ArrayLike]):&#32;Array-like&#32;parameter&#32;to&#32;indicate&#32;integer&#32;constraints&#32;for&#32;optimization.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00503"/>00503 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;Number&#32;of&#32;workers&#32;to&#32;use&#32;for&#32;optimization.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00504"/>00504 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00505"/>00505 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00506"/>00506 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sequence:&#32;A&#32;sequence&#32;containing&#32;instances&#32;of&#32;DE&#32;and&#32;CMA&#32;optimizers&#32;with&#32;specified&#32;configurations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00507"/>00507 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00508"/>00508 
<anchor xml:id="_optimizer_8py_source_1l00509"/>00509 &#32;&#32;&#32;&#32;de_evals&#32;=&#32;np.random.uniform(0.1,&#32;0.5)
<anchor xml:id="_optimizer_8py_source_1l00510"/>00510 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;de_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals&#32;=&#32;int(de_evals*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00512"/>00512 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;cma_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;=&#32;int((1.0-de_evals)*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00514"/>00514 &#32;&#32;&#32;&#32;opt1&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp">De_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;de_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness,&#32;ints=ints,&#32;workers&#32;=&#32;workers)
<anchor xml:id="_optimizer_8py_source_1l00516"/>00516 &#32;&#32;&#32;&#32;opt2&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp">Cma_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;cma_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness,&#32;workers&#32;=&#32;workers)
<anchor xml:id="_optimizer_8py_source_1l00518"/>00518 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>([opt1,&#32;opt2])
<anchor xml:id="_optimizer_8py_source_1l00519"/>00519 
<anchor xml:id="_optimizer_8py_source_1l00520"/>00520 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1a47d1c3b0025fdbfe74a53b4c09e50b2f">de_cma_py</link>(max_evaluations:&#32;Optional[int]&#32;=&#32;50000,&#32;
<anchor xml:id="_optimizer_8py_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_optimizer_8py_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Sequence:
<anchor xml:id="_optimizer_8py_source_1l00527"/>00527 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00528"/>00528 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Creates&#32;and&#32;returns&#32;a&#32;sequence&#32;of&#32;optimizers&#32;configured&#32;with&#32;DE&#32;(Differential</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00529"/><link linkend="_namespacefcmaes_1_1optimizer_1a7619d6ba38c7ec9033f6dbd0580f094b">00529</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Evolution)&#32;and&#32;CMA&#32;(Covariance&#32;Matrix&#32;Adaptation)&#32;algorithms.&#32;The&#32;function</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00530"/>00530 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;allows&#32;customization&#32;of&#32;population&#32;size,&#32;maximum&#32;evaluations,&#32;stopping</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00531"/>00531 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;fitness,&#32;and&#32;the&#32;balance&#32;between&#32;DE&#32;and&#32;CMA&#32;evaluation&#32;limits.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00532"/>00532 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00533"/>00533 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;It&#32;is&#32;useful&#32;for&#32;processes&#32;requiring&#32;hybrid&#32;optimization&#32;and&#32;provides&#32;a</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00534"/>00534 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;flexible&#32;interface&#32;for&#32;setting&#32;up&#32;the&#32;optimization&#32;procedure.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00535"/>00535 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00536"/>00536 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00537"/>00537 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;The&#32;total&#32;number&#32;of&#32;evaluations&#32;allowed&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00538"/>00538 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;procedure.&#32;Default&#32;is&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00539"/>00539 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;The&#32;population&#32;size&#32;for&#32;both&#32;DE&#32;and&#32;CMA&#32;optimization&#32;methods.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00540"/>00540 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;31.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00541"/>00541 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;The&#32;stopping&#32;criteria&#32;based&#32;on&#32;fitness&#32;value.&#32;Default&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00542"/>00542 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-inf&#32;(no&#32;stopping&#32;fitness).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00543"/>00543 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals:&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;for&#32;the&#32;DE&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00544"/>00544 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;None,&#32;it&#32;is&#32;calculated&#32;dynamically&#32;based&#32;on&#32;`max_evaluations`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00545"/>00545 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00546"/>00546 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals:&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;for&#32;the&#32;CMA&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00547"/>00547 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;None,&#32;it&#32;is&#32;calculated&#32;dynamically&#32;based&#32;on&#32;`max_evaluations`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00548"/>00548 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00549"/>00549 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;Array-like&#32;input&#32;of&#32;integer&#32;constraints&#32;(if&#32;any).&#32;Used&#32;specifically&#32;in</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00550"/>00550 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;DE&#32;algorithm.&#32;Default&#32;is&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00551"/>00551 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Number&#32;of&#32;parallel&#32;processes&#32;or&#32;threads&#32;allowed&#32;for&#32;computations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00552"/>00552 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00553"/>00553 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00554"/>00554 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00555"/>00555 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;sequence&#32;containing&#32;two&#32;elements:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00556"/>00556 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.&#32;A&#32;DE&#32;optimizer&#32;configured&#32;with&#32;given&#32;or&#32;calculated&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00557"/>00557 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2.&#32;A&#32;CMA&#32;optimizer&#32;configured&#32;with&#32;given&#32;or&#32;calculated&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00558"/>00558 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00559"/>00559 
<anchor xml:id="_optimizer_8py_source_1l00560"/>00560 &#32;&#32;&#32;&#32;de_evals&#32;=&#32;np.random.uniform(0.1,&#32;0.5)
<anchor xml:id="_optimizer_8py_source_1l00561"/>00561 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;de_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals&#32;=&#32;int(de_evals*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00563"/>00563 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;cma_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;=&#32;int((1.0-de_evals)*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00565"/>00565 &#32;&#32;&#32;&#32;opt1&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_de__python">De_python</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;de_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness,&#32;ints=ints,&#32;workers&#32;=&#32;workers)
<anchor xml:id="_optimizer_8py_source_1l00567"/>00567 &#32;&#32;&#32;&#32;opt2&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python">Cma_python</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;cma_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness,&#32;workers&#32;=&#32;workers)
<anchor xml:id="_optimizer_8py_source_1l00569"/>00569 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>([opt1,&#32;opt2])
<anchor xml:id="_optimizer_8py_source_1l00570"/>00570 
<anchor xml:id="_optimizer_8py_source_1l00571"/>00571 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1a08e08a743a3d7654472d545ac33dd2d4">da_cma</link>(max_evaluations:&#32;Optional[int]&#32;=&#32;50000,&#32;
<anchor xml:id="_optimizer_8py_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;da_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf)&#32;-&gt;&#32;Sequence:
<anchor xml:id="_optimizer_8py_source_1l00576"/>00576 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00577"/>00577 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Combines&#32;Differential&#32;Algorithm&#32;(DA)&#32;and&#32;Covariance&#32;Matrix&#32;Adaptation&#32;(CMA)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00578"/>00578 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;techniques&#32;into&#32;a&#32;sequential&#32;process,&#32;dividing&#32;the&#32;computational</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00579"/>00579 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;budget&#32;between&#32;the&#32;two&#32;algorithms&#32;and&#32;returning&#32;the&#32;resulting&#32;sequence.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00580"/>00580 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00581"/>00581 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;allows&#32;for&#32;parameterized&#32;customization&#32;of&#32;each&#32;algorithm&apos;s</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00582"/><link linkend="_namespacefcmaes_1_1optimizer_1a47d1c3b0025fdbfe74a53b4c09e50b2f">00582</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;maximum&#32;evaluations,&#32;population&#32;size,&#32;and&#32;stopping&#32;fitness&#32;to&#32;suit&#32;specific</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00583"/>00583 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;problems.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00584"/>00584 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00585"/>00585 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00586"/>00586 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;The&#32;total&#32;number&#32;of&#32;evaluations&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00587"/>00587 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allocate&#32;between&#32;the&#32;DA&#32;and&#32;CMA&#32;algorithms.&#32;Default&#32;is&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00588"/>00588 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Population&#32;size&#32;for&#32;the&#32;CMA&#32;algorithm.&#32;Default</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00589"/>00589 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;31.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00590"/>00590 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;da_max_evals&#32;(Optional[int]):&#32;The&#32;maximum&#32;evaluations&#32;for&#32;the&#32;DA</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00591"/>00591 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm.&#32;If&#32;None,&#32;it&#32;is&#32;calculated&#32;as&#32;a&#32;fraction&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00592"/>00592 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`max_evaluations`.&#32;Default&#32;is&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00593"/>00593 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;(Optional[int]):&#32;The&#32;maximum&#32;evaluations&#32;for&#32;the&#32;CMA</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00594"/>00594 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm.&#32;If&#32;None,&#32;it&#32;is&#32;calculated&#32;as&#32;the&#32;remaining&#32;budget&#32;from</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00595"/>00595 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`max_evaluations`.&#32;Default&#32;is&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00596"/>00596 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;The&#32;minimum&#32;fitness&#32;value&#32;at&#32;which&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00597"/>00597 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;terminate&#32;optimization.&#32;Default&#32;is&#32;-np.inf.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00598"/>00598 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00599"/>00599 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00600"/>00600 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sequence:&#32;A&#32;sequence&#32;of&#32;DA&#32;and&#32;CMA&#32;optimization&#32;processes&#32;configured&#32;with</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00601"/>00601 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;provided&#32;or&#32;default&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00602"/>00602 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00603"/>00603 
<anchor xml:id="_optimizer_8py_source_1l00604"/>00604 &#32;&#32;&#32;&#32;da_evals&#32;=&#32;np.random.uniform(0.1,&#32;0.5)
<anchor xml:id="_optimizer_8py_source_1l00605"/>00605 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;da_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;da_max_evals&#32;=&#32;int(da_evals*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00607"/>00607 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;cma_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;=&#32;int((1.0-da_evals)*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00609"/>00609 &#32;&#32;&#32;&#32;opt1&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp">Da_cpp</link>(max_evaluations&#32;=&#32;da_max_evals,&#32;stop_fitness&#32;=&#32;stop_fitness)
<anchor xml:id="_optimizer_8py_source_1l00610"/>00610 &#32;&#32;&#32;&#32;opt2&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp">Cma_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;cma_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness)
<anchor xml:id="_optimizer_8py_source_1l00612"/>00612 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>([opt1,&#32;opt2])
<anchor xml:id="_optimizer_8py_source_1l00613"/>00613 
<anchor xml:id="_optimizer_8py_source_1l00614"/>00614 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1acf749397f0f3e9790e9d162554304df7">de_crfmnes</link>(max_evaluations:&#32;Optional[int]&#32;=&#32;50000,&#32;
<anchor xml:id="_optimizer_8py_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;32,&#32;
<anchor xml:id="_optimizer_8py_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_optimizer_8py_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crfm_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Sequence:
<anchor xml:id="_optimizer_8py_source_1l00621"/>00621 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00622"/>00622 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Combines&#32;Differential&#32;Evolution&#32;(DE)&#32;and&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00623"/>00623 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Strategies&#32;(CR-FM-NES)&#32;optimization&#32;algorithms&#32;in&#32;sequence.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00624"/>00624 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00625"/>00625 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;initializes&#32;and&#32;configures&#32;two&#32;optimization&#32;algorithms,&#32;DE&#32;and</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00626"/>00626 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;CR-FM-NES,&#32;with&#32;specified&#32;parameters&#32;and&#32;returns&#32;a&#32;sequence&#32;of&#32;the&#32;two&#32;optimizers.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00627"/>00627 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;maximum&#32;evaluations&#32;for&#32;each&#32;optimizer&#32;are&#32;proportionally&#32;allocated&#32;based</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00628"/><link linkend="_namespacefcmaes_1_1optimizer_1a08e08a743a3d7654472d545ac33dd2d4">00628</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;on&#32;a&#32;random&#32;variable&#32;unless&#32;explicitly&#32;specified.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00629"/>00629 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00630"/>00630 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00631"/>00631 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;The&#32;total&#32;number&#32;of&#32;evaluations&#32;available&#32;for&#32;both</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00632"/>00632 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;algorithms&#32;(default:&#32;50000).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00633"/>00633 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;The&#32;population&#32;size&#32;for&#32;both&#32;optimization&#32;algorithms&#32;(default:&#32;32).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00634"/>00634 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;The&#32;fitness&#32;threshold&#32;to&#32;stop&#32;optimization&#32;when&#32;achieved</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00635"/>00635 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(default:&#32;-infinity).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00636"/>00636 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals:&#32;Maximum&#32;evaluations&#32;explicitly&#32;allocated&#32;for&#32;DE.&#32;If&#32;None,&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00637"/>00637 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluations&#32;are&#32;derived&#32;from&#32;a&#32;random&#32;proportion&#32;of&#32;max_evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00638"/>00638 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crfm_max_evals:&#32;Maximum&#32;evaluations&#32;explicitly&#32;allocated&#32;for&#32;CR-FM-NES.&#32;If</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00639"/>00639 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None,&#32;the&#32;evaluations&#32;are&#32;derived&#32;as&#32;the&#32;remainder&#32;of&#32;max_evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00640"/>00640 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;An&#32;optional&#32;array-like&#32;structure&#32;indicating&#32;integer&#32;constraints&#32;in&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00641"/>00641 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process&#32;(default:&#32;None).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00642"/>00642 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;The&#32;number&#32;of&#32;workers&#32;for&#32;parallel&#32;processing&#32;in&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00643"/>00643 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithms&#32;(default:&#32;None).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00644"/>00644 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00645"/>00645 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00646"/>00646 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sequence:&#32;A&#32;sequence&#32;containing&#32;two&#32;optimizers,&#32;the&#32;first&#32;implementing&#32;DE</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00647"/>00647 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;second&#32;implementing&#32;CR-FM-NES.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00648"/>00648 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00649"/>00649 
<anchor xml:id="_optimizer_8py_source_1l00650"/>00650 &#32;&#32;&#32;&#32;de_evals&#32;=&#32;np.random.uniform(0.1,&#32;0.5)
<anchor xml:id="_optimizer_8py_source_1l00651"/>00651 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;de_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;de_max_evals&#32;=&#32;int(de_evals*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00653"/>00653 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;crfm_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crfm_max_evals&#32;=&#32;int((1.0-de_evals)*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00655"/>00655 &#32;&#32;&#32;&#32;opt1&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp">De_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;de_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness,&#32;ints=ints,&#32;workers&#32;=&#32;workers)
<anchor xml:id="_optimizer_8py_source_1l00657"/>00657 &#32;&#32;&#32;&#32;opt2&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp">Crfmnes_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;crfm_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness,&#32;workers&#32;=&#32;workers)
<anchor xml:id="_optimizer_8py_source_1l00659"/>00659 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>([opt1,&#32;opt2])
<anchor xml:id="_optimizer_8py_source_1l00660"/>00660 
<anchor xml:id="_optimizer_8py_source_1l00661"/>00661 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1acdb72c2fc9851551f88b19ccb5f58874">crfmnes_bite</link>(max_evaluations:&#32;Optional[int]&#32;=&#32;50000,&#32;
<anchor xml:id="_optimizer_8py_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_optimizer_8py_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crfm_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bite_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;M:&#32;Optional[int]&#32;=&#32;1)&#32;-&gt;&#32;Sequence:
<anchor xml:id="_optimizer_8py_source_1l00667"/>00667 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00668"/>00668 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Creates&#32;a&#32;sequence&#32;of&#32;two&#32;optimization&#32;methods,&#32;Crfmnes_cpp&#32;and&#32;Bite_cpp,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00669"/>00669 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;with&#32;configurable&#32;parameters&#32;for&#32;evaluations,&#32;population&#32;size,&#32;stopping</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00670"/>00670 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;fitness&#32;criteria,&#32;and&#32;others.&#32;The&#32;evaluation&#32;budgets&#32;for&#32;each</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00671"/>00671 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimizer&#32;are&#32;adjusted&#32;proportionally&#32;based&#32;on&#32;the&#32;given&#32;parameters&#32;or</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00672"/><link linkend="_namespacefcmaes_1_1optimizer_1acf749397f0f3e9790e9d162554304df7">00672</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;their&#32;defaults.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00673"/>00673 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00674"/>00674 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00675"/>00675 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Maximum&#32;number&#32;of&#32;allowed&#32;evaluations&#32;for&#32;the&#32;overall</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00676"/>00676 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.&#32;Default&#32;is&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00677"/>00677 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Population&#32;size&#32;for&#32;the&#32;optimization&#32;process.&#32;Default&#32;is&#32;31.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00678"/>00678 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization&#32;stops&#32;if&#32;reached.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00679"/>00679 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00680"/>00680 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crfm_max_evals:&#32;Maximum&#32;evaluations&#32;assigned&#32;to&#32;the&#32;Crfmnes_cpp</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00681"/>00681 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;method.&#32;If&#32;not&#32;provided,&#32;it&#32;is&#32;calculated&#32;based&#32;on&#32;a</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00682"/>00682 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;proportion&#32;of&#32;`max_evaluations`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00683"/>00683 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bite_max_evals:&#32;Maximum&#32;evaluations&#32;assigned&#32;to&#32;the&#32;Bite_cpp</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00684"/>00684 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;method.&#32;If&#32;not&#32;provided,&#32;it&#32;is&#32;calculated&#32;as&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00685"/>00685 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remaining&#32;proportion&#32;of&#32;`max_evaluations`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00686"/>00686 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;M:&#32;Parameter&#32;specific&#32;to&#32;the&#32;Bite_cpp&#32;optimization&#32;method&#32;which&#32;may</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00687"/>00687 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;influence&#32;its&#32;behavior.&#32;Default&#32;is&#32;1.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00688"/>00688 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00689"/>00689 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00690"/>00690 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sequence:&#32;A&#32;sequence&#32;containing&#32;two&#32;initialized&#32;optimizers,&#32;Crfmnes_cpp</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00691"/>00691 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;Bite_cpp,&#32;configured&#32;with&#32;the&#32;provided&#32;or&#32;default&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00692"/>00692 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00693"/>00693 
<anchor xml:id="_optimizer_8py_source_1l00694"/>00694 &#32;&#32;&#32;&#32;crfmnes_evals&#32;=&#32;np.random.uniform(0.1,&#32;0.5)
<anchor xml:id="_optimizer_8py_source_1l00695"/>00695 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;crfm_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crfm_max_evals&#32;=&#32;int(crfmnes_evals*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00697"/>00697 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;bite_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bite_max_evals&#32;=&#32;int((1.0-crfmnes_evals)*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00699"/>00699 &#32;&#32;&#32;&#32;opt1&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp">Crfmnes_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;crfm_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness)
<anchor xml:id="_optimizer_8py_source_1l00701"/>00701 &#32;&#32;&#32;&#32;opt2&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp">Bite_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;bite_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness,&#32;M=M)
<anchor xml:id="_optimizer_8py_source_1l00703"/>00703 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>([opt1,&#32;opt2])
<anchor xml:id="_optimizer_8py_source_1l00704"/>00704 
<anchor xml:id="_optimizer_8py_source_1l00705"/>00705 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1aa81db687f4de5f26a620f2275ad5667a">bite_cma</link>(max_evaluations:&#32;Optional[int]&#32;=&#32;50000,&#32;
<anchor xml:id="_optimizer_8py_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bite_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;M:&#32;Optional[int]&#32;=&#32;1)&#32;-&gt;&#32;Sequence:
<anchor xml:id="_optimizer_8py_source_1l00711"/>00711 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00712"/>00712 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Generates&#32;a&#32;sequence&#32;of&#32;optimization&#32;strategies&#32;using&#32;the&#32;Biogeography-based</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00713"/>00713 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;technique&#32;(Bite)&#32;and&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;(CMA)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00714"/>00714 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;algorithm.&#32;The&#32;function&#32;allows&#32;customization&#32;of&#32;evaluations,&#32;population&#32;size,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00715"/>00715 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;stopping&#32;criteria&#32;to&#32;balance&#32;between&#32;the&#32;two&#32;strategies.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00716"/>00716 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00717"/><link linkend="_namespacefcmaes_1_1optimizer_1acdb72c2fc9851551f88b19ccb5f58874">00717</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00718"/>00718 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;allowed</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00719"/>00719 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;the&#32;combined&#32;Bite&#32;and&#32;CMA&#32;optimization.&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00720"/>00720 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Population&#32;size&#32;for&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00721"/>00721 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strategies.&#32;Defaults&#32;to&#32;31.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00722"/>00722 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;Minimal&#32;fitness&#32;threshold&#32;to&#32;stop&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00723"/>00723 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;early.&#32;Defaults&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00724"/>00724 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bite_max_evals&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;allocated</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00725"/>00725 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;the&#32;Bite&#32;component.&#32;If&#32;None,&#32;it&#32;is&#32;computed&#32;as&#32;a&#32;proportion&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00726"/>00726 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;based&#32;on&#32;a&#32;random&#32;factor.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00727"/>00727 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;allocated</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00728"/>00728 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;the&#32;CMA&#32;component.&#32;If&#32;None,&#32;it&#32;is&#32;derived&#32;as&#32;the&#32;remainder&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00729"/>00729 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;after&#32;the&#32;Bite&#32;component&#32;evaluations.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00730"/>00730 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;M&#32;(Optional[int]):&#32;Number&#32;of&#32;parallel&#32;optimization&#32;runs&#32;for&#32;the&#32;Bite</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00731"/>00731 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strategy.&#32;Defaults&#32;to&#32;1.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00732"/>00732 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00733"/>00733 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00734"/>00734 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sequence:&#32;A&#32;sequence&#32;containing&#32;two&#32;optimization&#32;strategies,&#32;where&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00735"/>00735 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;first&#32;element&#32;uses&#32;the&#32;Bite&#32;algorithm&#32;and&#32;the&#32;second&#32;element&#32;uses</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00736"/>00736 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;CMA&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00737"/>00737 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00738"/>00738 
<anchor xml:id="_optimizer_8py_source_1l00739"/>00739 &#32;&#32;&#32;&#32;bite_evals&#32;=&#32;np.random.uniform(0.1,&#32;0.5)
<anchor xml:id="_optimizer_8py_source_1l00740"/>00740 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;bite_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bite_max_evals&#32;=&#32;int(bite_evals*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00742"/>00742 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;cma_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;=&#32;int((1.0-bite_evals)*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00744"/>00744 &#32;&#32;&#32;&#32;opt1&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp">Bite_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;bite_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness,&#32;M=M)
<anchor xml:id="_optimizer_8py_source_1l00746"/>00746 &#32;&#32;&#32;&#32;opt2&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp">Cma_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;cma_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness)
<anchor xml:id="_optimizer_8py_source_1l00748"/>00748 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>([opt1,&#32;opt2])
<anchor xml:id="_optimizer_8py_source_1l00749"/>00749 
<anchor xml:id="_optimizer_8py_source_1l00750"/>00750 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1optimizer_1a62ac4124b543bccd313f445c06b7354a">cma_bite</link>(max_evaluations:&#32;Optional[int]&#32;=&#32;50000,&#32;
<anchor xml:id="_optimizer_8py_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;32,&#32;
<anchor xml:id="_optimizer_8py_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_optimizer_8py_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bite_max_evals:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;M:&#32;Optional[int]&#32;=&#32;1)&#32;-&gt;&#32;Sequence:
<anchor xml:id="_optimizer_8py_source_1l00756"/>00756 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00757"/>00757 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Combines&#32;CMA-ES&#32;and&#32;BITE&#32;optimization&#32;algorithms&#32;into&#32;a&#32;single&#32;sequence&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00758"/>00758 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;operations,&#32;utilizing&#32;their&#32;respective&#32;strengths&#32;for&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00759"/>00759 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00760"/>00760 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;initializes&#32;instances&#32;of&#32;CMA-ES&#32;(Covariance&#32;Matrix&#32;Adaptation</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00761"/>00761 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Evolution&#32;Strategy)&#32;and&#32;BITE&#32;(Binary&#32;Teaching–Learning-Based&#32;Optimization)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00762"/><link linkend="_namespacefcmaes_1_1optimizer_1aa81db687f4de5f26a620f2275ad5667a">00762</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;algorithms&#32;with&#32;specified&#32;parameters,&#32;calculates&#32;their&#32;respective&#32;evaluation</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00763"/>00763 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;budgets,&#32;and&#32;returns&#32;a&#32;sequence&#32;of&#32;these&#32;algorithms&#32;for&#32;further&#32;processing.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00764"/>00764 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00765"/>00765 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;CMA-ES&#32;algorithm&#32;is&#32;used&#32;for&#32;global&#32;optimization&#32;tasks,&#32;and&#32;the&#32;BITE</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00766"/>00766 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;algorithm&#32;focuses&#32;on&#32;discrete&#32;or&#32;binary&#32;optimization.&#32;The&#32;combination&#32;allows</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00767"/>00767 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;for&#32;more&#32;versatile&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00768"/>00768 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00769"/>00769 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00770"/>00770 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional&#32;parameter&#32;specifying&#32;the&#32;total&#32;number&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00771"/>00771 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluations&#32;available&#32;for&#32;both&#32;algorithms.&#32;Default&#32;is&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00772"/>00772 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional&#32;parameter&#32;specifying&#32;the&#32;population&#32;size&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00773"/>00773 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;algorithms.&#32;Default&#32;is&#32;32.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00774"/>00774 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional&#32;parameter&#32;indicating&#32;the&#32;fitness&#32;value&#32;at&#32;which</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00775"/>00775 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;should&#32;stop.&#32;The&#32;default&#32;is&#32;-np.inf.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00776"/>00776 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals:&#32;Optional&#32;parameter&#32;specifying&#32;the&#32;evaluation&#32;budget&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00777"/>00777 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;CMA-ES&#32;algorithm.&#32;If&#32;not&#32;provided,&#32;it&#32;is&#32;calculated&#32;as&#32;a&#32;fraction</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00778"/>00778 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;max_evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00779"/>00779 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bite_max_evals:&#32;Optional&#32;parameter&#32;specifying&#32;the&#32;evaluation&#32;budget&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00780"/>00780 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;BITE&#32;algorithm.&#32;If&#32;not&#32;provided,&#32;it&#32;is&#32;calculated&#32;as&#32;the&#32;remainder</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00781"/>00781 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;the&#32;total&#32;evaluation&#32;budget&#32;after&#32;allocating&#32;to&#32;CMA-ES.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00782"/>00782 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;M:&#32;Optional&#32;parameter&#32;specifying&#32;the&#32;additional&#32;configuration&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00783"/>00783 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BITE&#32;algorithm.&#32;Default&#32;is&#32;1.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00784"/>00784 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00785"/>00785 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00786"/>00786 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sequence:&#32;A&#32;sequence&#32;containing&#32;two&#32;optimization&#32;objects,&#32;the&#32;first</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00787"/>00787 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configured&#32;for&#32;CMA-ES&#32;and&#32;the&#32;second&#32;for&#32;BITE.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00788"/>00788 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00789"/>00789 
<anchor xml:id="_optimizer_8py_source_1l00790"/>00790 &#32;&#32;&#32;&#32;cma_evals&#32;=&#32;np.random.uniform(0.1,&#32;0.5)
<anchor xml:id="_optimizer_8py_source_1l00791"/>00791 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;cma_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cma_max_evals&#32;=&#32;int(cma_evals*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00793"/>00793 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;bite_max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bite_max_evals&#32;=&#32;int((1.0-cma_evals)*max_evaluations)
<anchor xml:id="_optimizer_8py_source_1l00795"/>00795 &#32;&#32;&#32;&#32;opt1&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp">Cma_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;cma_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness,&#32;stop_hist&#32;=&#32;0)
<anchor xml:id="_optimizer_8py_source_1l00797"/>00797 &#32;&#32;&#32;&#32;opt2&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp">Bite_cpp</link>(popsize=popsize,&#32;max_evaluations&#32;=&#32;bite_max_evals,&#32;
<anchor xml:id="_optimizer_8py_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;stop_fitness,&#32;M=M)
<anchor xml:id="_optimizer_8py_source_1l00799"/>00799 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_sequence">Sequence</link>([opt1,&#32;opt2])
<anchor xml:id="_optimizer_8py_source_1l00800"/>00800 
<anchor xml:id="_optimizer_8py_source_1l00801"/>00801 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes">Crfmnes</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l00802"/>00802 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00803"/>00803 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Implements&#32;the&#32;CR-FM-NES&#32;(Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy&#32;with&#32;Full&#32;Matrix)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00804"/>00804 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00805"/>00805 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00806"/>00806 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;provides&#32;functionality&#32;to&#32;perform&#32;constrained&#32;function&#32;minimization&#32;using</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00807"/>00807 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;CR-FM-NES&#32;optimization&#32;approach.&#32;It&#32;supports&#32;features&#32;such&#32;as&#32;population-based</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00808"/>00808 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;search,&#32;optional&#32;fitness&#32;stopping&#32;criteria,&#32;and&#32;multi-threaded&#32;evaluations.&#32;The&#32;optimizer</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00809"/>00809 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;is&#32;designed&#32;for&#32;use&#32;in&#32;scenarios&#32;requiring&#32;efficient&#32;searching&#32;in&#32;complex&#32;objective</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00810"/>00810 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;functions&#32;with&#32;optional&#32;boundary&#32;constraints.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00811"/>00811 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00812"/>00812 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00813"/><link linkend="_namespacefcmaes_1_1optimizer_1a62ac4124b543bccd313f445c06b7354a">00813</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;Size&#32;of&#32;the&#32;population&#32;used&#32;in&#32;each&#32;generation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00814"/>00814 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Fitness&#32;threshold&#32;for&#32;stopping&#32;the&#32;optimization&#32;process.&#32;The</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00815"/>00815 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;stops&#32;if&#32;a&#32;solution&#32;with&#32;this&#32;fitness&#32;or&#32;better&#32;is&#32;found.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00816"/>00816 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(ArrayLike):&#32;Initial&#32;guess&#32;for&#32;the&#32;starting&#32;position&#32;of&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00817"/>00817 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;not&#32;provided,&#32;a&#32;default&#32;initialization&#32;is&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00818"/>00818 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(float):&#32;Initial&#32;standard&#32;deviation&#32;for&#32;the&#32;covariance&#32;matrix&#32;in&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00819"/>00819 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.&#32;It&#32;determines&#32;the&#32;scale&#32;of&#32;the&#32;search.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00820"/>00820 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(int):&#32;Number&#32;of&#32;parallel&#32;workers&#32;used&#32;for&#32;function&#32;evaluations.&#32;A&#32;higher</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00821"/>00821 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;number&#32;can&#32;speed&#32;up&#32;optimization&#32;for&#32;computationally&#32;intensive&#32;objective&#32;functions.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00822"/>00822 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00823"/>00823 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00824"/>00824 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__init__(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;32,&#32;
<anchor xml:id="_optimizer_8py_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00832"/>00832 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;optimizer&#32;with&#32;specific&#32;parameters&#32;for&#32;the&#32;CR-FM-NES&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00833"/>00833 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00834"/>00834 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;constructor&#32;sets&#32;up&#32;the&#32;configuration&#32;for&#32;the&#32;optimizer,&#32;including</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00835"/>00835 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maximum&#32;evaluations,&#32;population&#32;size,&#32;initial&#32;guess,&#32;stopping&#32;fitness,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00836"/>00836 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;standard&#32;deviations,&#32;and&#32;the&#32;number&#32;of&#32;workers&#32;for&#32;parallel&#32;evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00837"/>00837 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00838"/>00838 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00839"/>00839 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00840"/>00840 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00841"/>00841 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00842"/>00842 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00843"/>00843 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Size&#32;of&#32;the&#32;population&#32;for&#32;each&#32;generation&#32;in&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00844"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes">00844</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;32.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00845"/>00845 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00846"/>00846 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initial&#32;guess&#32;or&#32;starting&#32;point&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00847"/>00847 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00848"/>00848 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00849"/>00849 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Target&#32;fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization&#32;stops.&#32;Defaults</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00850"/>00850 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00851"/>00851 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00852"/>00852 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Standard&#32;deviations&#32;used&#32;in&#32;the&#32;search&#32;distribution.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00853"/>00853 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00854"/>00854 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Number&#32;of&#32;workers&#32;to&#32;use&#32;for&#32;parallel&#32;evaluations.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00855"/>00855 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;crfmnes&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1abf110ededa79f1101d0acefadef018f8">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1a784caafbf6afcebd51d20067ead7aaae">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1af4d308e51cb40add76e8a257dc54e634">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1ac325129f209caae80b300744683acf34">sdevs</link>&#32;=&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1a3dbb8d59213de71c0f3b5b9b74c3751b">workers</link>&#32;=&#32;workers
<anchor xml:id="_optimizer_8py_source_1l00862"/>00862 
<anchor xml:id="_optimizer_8py_source_1l00863"/>00863 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1aeaf53b0b1cef69245496384c9c5569fb">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;0.3,&#32;
<anchor xml:id="_optimizer_8py_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00871"/>00871 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;using&#32;a&#32;specific&#32;optimization&#32;strategy.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00872"/>00872 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00873"/>00873 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;executes&#32;a&#32;constrained&#32;optimization&#32;method&#32;to&#32;find&#32;the&#32;minimum&#32;value</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00874"/>00874 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;the&#32;provided&#32;objective&#32;function&#32;within&#32;explicit&#32;boundaries.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00875"/>00875 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00876"/>00876 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00877"/>00877 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;be&#32;minimized.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00878"/>00878 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;takes&#32;an&#32;input&#32;of&#32;type&#32;ArrayLike&#32;and&#32;returns&#32;a&#32;float&#32;representing&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00879"/>00879 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scalar&#32;value&#32;of&#32;the&#32;objective.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00880"/>00880 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;Constraints&#32;on&#32;the&#32;optimization&#32;variables</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00881"/>00881 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defined&#32;as&#32;lower&#32;and&#32;upper&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00882"/>00882 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization.&#32;If&#32;not</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00883"/>00883 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided,&#32;the&#32;class&apos;s&#32;internal&#32;guess&#32;attribute&#32;is&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00884"/>00884 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Initial&#32;standard&#32;deviation&#32;for&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00885"/>00885 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;0.3&#32;if&#32;not&#32;specified&#32;and&#32;overrides&#32;the&#32;class&apos;s&#32;internal</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00886"/>00886 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;attribute&#32;if&#32;provided.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00887"/>00887 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;Random&#32;number&#32;generator&#32;used&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00888"/>00888 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;a&#32;Generator&#32;instance&#32;of&#32;PCG64DXSM.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00889"/>00889 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;An&#32;optional&#32;argument&#32;for&#32;storing&#32;optimization-related&#32;data.&#32;The&#32;usage</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00890"/>00890 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;depends&#32;on&#32;the&#32;implementation&#32;of&#32;the&#32;optimization&#32;method.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00891"/>00891 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00892"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1a7aa38ceaaa7ce8a91a9932d1d893217e">00892</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00893"/>00893 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing&#32;the&#32;best&#32;solution&#32;found</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00894"/>00894 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(as&#32;a&#32;NumPy&#32;array),&#32;the&#32;corresponding&#32;function&#32;value,&#32;and&#32;the&#32;number&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00895"/>00895 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00896"/>00896 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;crfmnes.minimize(fun,&#32;bounds,&#32;
<anchor xml:id="_optimizer_8py_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1af4d308e51cb40add76e8a257dc54e634">guess</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1af4d308e51cb40add76e8a257dc54e634">guess</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;guess,
<anchor xml:id="_optimizer_8py_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1ac325129f209caae80b300744683acf34">sdevs</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1ac325129f209caae80b300744683acf34">sdevs</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;sdevs,
<anchor xml:id="_optimizer_8py_source_1l00900"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1abf110ededa79f1101d0acefadef018f8">00900</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l00901"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1a784caafbf6afcebd51d20067ead7aaae">00901</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize=self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1abf110ededa79f1101d0acefadef018f8">popsize</link>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00902"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1af4d308e51cb40add76e8a257dc54e634">00902</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1a784caafbf6afcebd51d20067ead7aaae">stop_fitness</link>,
<anchor xml:id="_optimizer_8py_source_1l00903"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1ac325129f209caae80b300744683acf34">00903</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=rg,&#32;runid=self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link>(store),
<anchor xml:id="_optimizer_8py_source_1l00904"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1a3dbb8d59213de71c0f3b5b9b74c3751b">00904</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1a3dbb8d59213de71c0f3b5b9b74c3751b">workers</link>)&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l00906"/>00906 
<anchor xml:id="_optimizer_8py_source_1l00907"/>00907 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp">Crfmnes_cpp</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l00908"/>00908 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00909"/>00909 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;An&#32;implementation&#32;of&#32;the&#32;CR-FM-NES&#32;(Covariance-Rescaling&#32;Fast&#32;Matrix-Normal&#32;Evolution&#32;Strategies)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00910"/>00910 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimizer&#32;designed&#32;for&#32;solving&#32;real-valued&#32;optimization&#32;problems.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00911"/>00911 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00912"/>00912 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;serves&#32;as&#32;a&#32;wrapper&#32;to&#32;a&#32;lower-level&#32;implementation,&#32;providing&#32;a&#32;user-friendly</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00913"/>00913 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;interface&#32;for&#32;evolutionary&#32;optimization&#32;tasks.&#32;The&#32;main&#32;purpose&#32;of&#32;this&#32;optimizer&#32;is&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00914"/>00914 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;enable&#32;efficient&#32;optimization&#32;of&#32;noisy&#32;objective&#32;functions&#32;in&#32;high-dimensional&#32;spaces</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00915"/>00915 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;through&#32;the&#32;use&#32;of&#32;a&#32;covariance&#32;rescaling&#32;mechanism.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00916"/>00916 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00917"/>00917 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00918"/>00918 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;The&#32;population&#32;size&#32;for&#32;the&#32;evolutionary&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00919"/>00919 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;The&#32;fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization&#32;process&#32;halts&#32;if</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00920"/>00920 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;achieved.&#32;Defaults&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00921"/>00921 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(ArrayLike,&#32;optional):&#32;An&#32;initial&#32;guess&#32;value&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00922"/>00922 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;not&#32;provided&#32;at&#32;initialization,&#32;it&#32;must&#32;be&#32;set&#32;during&#32;the&#32;call&#32;to&#32;`minimize`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00923"/>00923 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(float,&#32;optional):&#32;Initial&#32;standard&#32;deviations&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00924"/>00924 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;not&#32;provided&#32;at&#32;initialization,&#32;it&#32;must&#32;be&#32;set&#32;during&#32;the&#32;call&#32;to&#32;`minimize`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00925"/>00925 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(int,&#32;optional):&#32;The&#32;number&#32;of&#32;parallel&#32;workers&#32;to&#32;use&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00926"/>00926 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;None,&#32;single-threaded&#32;execution&#32;is&#32;assumed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00927"/>00927 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00928"/>00928 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l00929"/>00929 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1a7aa38ceaaa7ce8a91a9932d1d893217e">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;32,&#32;
<anchor xml:id="_optimizer_8py_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00933"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1aeaf53b0b1cef69245496384c9c5569fb">00933</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00937"/>00937 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;optimizer&#32;with&#32;the&#32;specified&#32;parameters&#32;to&#32;control&#32;the&#32;behavior&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00938"/>00938 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;evolutionary&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00939"/>00939 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00940"/>00940 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00941"/>00941 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;during&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00942"/>00942 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00943"/>00943 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;The&#32;population&#32;size&#32;used&#32;in&#32;the&#32;algorithm.&#32;Defaults&#32;to&#32;32.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00944"/>00944 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;The&#32;optional&#32;initial&#32;guess&#32;for&#32;the&#32;solution&#32;vector.&#32;If&#32;not&#32;provided,&#32;it</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00945"/>00945 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;will&#32;be&#32;set&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00946"/>00946 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;The&#32;threshold&#32;fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization&#32;stops.&#32;The</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00947"/>00947 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process&#32;terminates&#32;when&#32;this&#32;value&#32;is&#32;reached&#32;or&#32;exceeded.&#32;Defaults&#32;to&#32;-np.inf.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00948"/>00948 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;The&#32;optional&#32;initial&#32;standard&#32;deviations&#32;for&#32;the&#32;solution&#32;vector.&#32;If&#32;not</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00949"/>00949 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided,&#32;it&#32;will&#32;be&#32;set&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00950"/>00950 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;The&#32;number&#32;of&#32;parallel&#32;workers&#32;used&#32;for&#32;evaluations&#32;during&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00951"/>00951 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00952"/>00952 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;crfmnes&#32;cpp&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1abf110ededa79f1101d0acefadef018f8">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1a784caafbf6afcebd51d20067ead7aaae">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1af4d308e51cb40add76e8a257dc54e634">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1ac325129f209caae80b300744683acf34">sdevs</link>&#32;=&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1a3dbb8d59213de71c0f3b5b9b74c3751b">workers</link>&#32;=&#32;workers
<anchor xml:id="_optimizer_8py_source_1l00959"/>00959 
<anchor xml:id="_optimizer_8py_source_1l00960"/>00960 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes_1aeaf53b0b1cef69245496384c9c5569fb">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;0.3,&#32;
<anchor xml:id="_optimizer_8py_source_1l00965"/>00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00968"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp">00968</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimize&#32;the&#32;provided&#32;objective&#32;function&#32;under&#32;given&#32;constraints.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00969"/>00969 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00970"/>00970 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;performs&#32;function&#32;minimization&#32;using&#32;the&#32;provided&#32;objective</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00971"/>00971 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function,&#32;optimization&#32;bounds,&#32;and&#32;optional&#32;parameters&#32;such&#32;as&#32;an&#32;initial&#32;guess,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00972"/>00972 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;standard&#32;deviations,&#32;a&#32;random&#32;generator,&#32;or&#32;a&#32;data&#32;storage&#32;object.&#32;It&#32;delegates</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00973"/>00973 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;computation&#32;to&#32;an&#32;underlying&#32;implementation&#32;and&#32;returns&#32;the&#32;results&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00974"/>00974 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;minimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00975"/>00975 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00976"/>00976 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00977"/>00977 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;be&#32;minimized.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00978"/>00978 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;must&#32;accept&#32;a&#32;single&#32;argument&#32;(input&#32;array)&#32;and&#32;return&#32;a&#32;scalar&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00979"/>00979 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;within&#32;which&#32;the&#32;minimization&#32;is&#32;to&#32;be</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00980"/>00980 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;performed.&#32;This&#32;must&#32;specify&#32;valid&#32;limits&#32;for&#32;the&#32;input&#32;values.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00981"/>00981 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;The&#32;initial&#32;guess&#32;for&#32;the&#32;minimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00982"/>00982 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;not&#32;provided,&#32;it&#32;defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00983"/>00983 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;The&#32;standard&#32;deviation&#32;for&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00984"/>00984 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;If&#32;not&#32;provided,&#32;defaults&#32;to&#32;0.3.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00985"/>00985 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;A&#32;random&#32;number&#32;generator&#32;to&#32;ensure&#32;consistent&#32;and</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00986"/>00986 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reproducible&#32;behavior.&#32;Defaults&#32;to&#32;`Generator(PCG64DXSM())`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00987"/>00987 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;An&#32;optional&#32;object&#32;for&#32;storing&#32;the&#32;state&#32;or&#32;results&#32;of&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00988"/>00988 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minimization&#32;process.&#32;Its&#32;behavior&#32;depends&#32;on&#32;its&#32;implementation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00989"/>00989 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00990"/>00990 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00991"/>00991 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00992"/>00992 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;np.ndarray:&#32;The&#32;optimal&#32;parameters&#32;minimizing&#32;the&#32;objective&#32;function.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00993"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a46da4d64dafe49cf3de81ac538bd96c7">00993</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;float:&#32;The&#32;minimum&#32;value&#32;of&#32;the&#32;objective&#32;function&#32;at&#32;the&#32;optimal&#32;point.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00994"/>00994 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;int:&#32;The&#32;total&#32;number&#32;of&#32;function&#32;evaluations&#32;performed&#32;during&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00995"/>00995 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00996"/>00996 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l00997"/>00997 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;crfmnescpp.minimize(fun,&#32;bounds,&#32;
<anchor xml:id="_optimizer_8py_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a01fc558e855be7732876a6e5facf3d1c">guess</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a01fc558e855be7732876a6e5facf3d1c">guess</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;guess,
<anchor xml:id="_optimizer_8py_source_1l01000"/>01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a87d76bc7c9ce8d7cce77354a5bd3415b">sdevs</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a87d76bc7c9ce8d7cce77354a5bd3415b">sdevs</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;sdevs,
<anchor xml:id="_optimizer_8py_source_1l01001"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1adf8a89f1eba94649ba1fbafd89e68ba8">01001</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l01002"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a241df60d5265b688e9959feca89318fb">01002</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize=self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1adf8a89f1eba94649ba1fbafd89e68ba8">popsize</link>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01003"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a01fc558e855be7732876a6e5facf3d1c">01003</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a241df60d5265b688e9959feca89318fb">stop_fitness</link>,
<anchor xml:id="_optimizer_8py_source_1l01004"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a87d76bc7c9ce8d7cce77354a5bd3415b">01004</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=rg,&#32;runid=self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l01005"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a8407a495267d4a58ad2b1364eb49b79e">01005</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a8407a495267d4a58ad2b1364eb49b79e">workers</link>)&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l01007"/>01007 
<anchor xml:id="_optimizer_8py_source_1l01008"/>01008 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp">Pgpe_cpp</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l01009"/>01009 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01010"/>01010 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Performs&#32;optimization&#32;using&#32;the&#32;PGPE&#32;(Policy&#32;Gradient&#32;with&#32;Parameter&#32;Exploration)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01011"/>01011 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;algorithm&#32;implemented&#32;in&#32;C++.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01012"/>01012 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01013"/>01013 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;acts&#32;as&#32;a&#32;Python&#32;interface&#32;to&#32;leverage&#32;an&#32;efficient&#32;C++&#32;implementation</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01014"/>01014 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;of&#32;the&#32;PGPE&#32;algorithm&#32;for&#32;solving&#32;optimization&#32;problems.&#32;It&#32;inherits&#32;from&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01015"/>01015 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;base&#32;`Optimizer`&#32;class&#32;and&#32;provides&#32;the&#32;ability&#32;to&#32;minimize&#32;a&#32;function&#32;using</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01016"/>01016 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;population-based&#32;search&#32;strategies.&#32;The&#32;optimizer&#32;uses&#32;given&#32;constraints&#32;and</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01017"/>01017 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;parameters&#32;to&#32;iteratively&#32;converge&#32;towards&#32;the&#32;optimal&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01018"/>01018 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01019"/>01019 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01020"/>01020 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;Number&#32;of&#32;individuals&#32;in&#32;the&#32;population&#32;per&#32;generation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01021"/>01021 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization&#32;stops&#32;if&#32;achieved.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01022"/>01022 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(ArrayLike):&#32;Initial&#32;guess&#32;for&#32;the&#32;parameter&#32;values.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01023"/>01023 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(float):&#32;Initial&#32;standard&#32;deviation&#32;for&#32;parameter&#32;exploration.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01024"/>01024 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(int):&#32;Number&#32;of&#32;parallel&#32;processes&#32;for&#32;evaluation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01025"/>01025 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01026"/>01026 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01027"/>01027 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a46da4d64dafe49cf3de81ac538bd96c7">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01028"/>01028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;500000,
<anchor xml:id="_optimizer_8py_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;640,&#32;
<anchor xml:id="_optimizer_8py_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01033"/>01033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01035"/>01035 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;optimizer&#32;with&#32;the&#32;specified&#32;parameters.&#32;This&#32;optimizer&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01036"/>01036 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intended&#32;for&#32;use&#32;in&#32;scenarios&#32;requiring&#32;parameter&#32;guessing&#32;and&#32;optimized</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01037"/>01037 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;population-based&#32;performance&#32;evaluation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01038"/><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a28a1d5e195fa924386bd76c29a9f682d">01038</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01039"/>01039 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01040"/>01040 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;An&#32;optional&#32;integer&#32;specifying&#32;the&#32;maximum&#32;number&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01041"/>01041 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;evaluations&#32;allowed&#32;during&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01042"/>01042 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;500000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01043"/>01043 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;An&#32;optional&#32;integer&#32;specifying&#32;the&#32;population&#32;size&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01044"/>01044 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer.&#32;Defaults&#32;to&#32;640.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01045"/>01045 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;An&#32;optional&#32;parameter&#32;defining&#32;the&#32;initial&#32;guess&#32;or&#32;starting</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01046"/>01046 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point&#32;for&#32;the&#32;optimization&#32;as&#32;an&#32;array-like&#32;object.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01047"/>01047 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;An&#32;optional&#32;float&#32;representing&#32;the&#32;stopping&#32;threshold&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01048"/>01048 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fitness.&#32;Optimization&#32;ends&#32;when&#32;this&#32;fitness&#32;value&#32;is&#32;reached.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01049"/>01049 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01050"/>01050 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;An&#32;optional&#32;float&#32;specifying&#32;the&#32;standard&#32;deviation&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01051"/>01051 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guessed&#32;parameters.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01052"/>01052 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;An&#32;optional&#32;integer&#32;specifying&#32;the&#32;number&#32;of&#32;worker&#32;threads</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01053"/>01053 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;processes&#32;to&#32;be&#32;used&#32;during&#32;the&#32;optimization&#32;process.&#32;Defaults</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01054"/>01054 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01055"/>01055 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;pgpe&#32;cpp&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1adf8a89f1eba94649ba1fbafd89e68ba8">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l01058"/>01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a241df60d5265b688e9959feca89318fb">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l01059"/>01059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a01fc558e855be7732876a6e5facf3d1c">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a87d76bc7c9ce8d7cce77354a5bd3415b">sdevs</link>&#32;=&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a8407a495267d4a58ad2b1364eb49b79e">workers</link>&#32;=&#32;workers
<anchor xml:id="_optimizer_8py_source_1l01062"/>01062 
<anchor xml:id="_optimizer_8py_source_1l01063"/>01063 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a28a1d5e195fa924386bd76c29a9f682d">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01064"/>01064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l01065"/>01065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l01066"/>01066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01067"/><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp">01067</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;0.1,&#32;
<anchor xml:id="_optimizer_8py_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Minimizes&#32;a&#32;given&#32;function&#32;using&#32;a&#32;defined&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01071"/>01071 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01072"/>01072 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;uses&#32;a&#32;stochastic&#32;optimization&#32;algorithm&#32;to&#32;find&#32;the&#32;minimum</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01073"/>01073 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;of&#32;the&#32;given&#32;function&#32;within&#32;specified&#32;bounds.&#32;It&#32;allows&#32;for&#32;an</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01074"/>01074 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optional&#32;initial&#32;guess,&#32;standard&#32;deviation&#32;for&#32;the&#32;input&#32;parameters,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01075"/>01075 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;can&#32;utilize&#32;parallel&#32;processing&#32;through&#32;workers.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01076"/>01076 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01077"/>01077 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01078"/>01078 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01079"/>01079 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;should&#32;accept&#32;an&#32;array-like&#32;input&#32;and&#32;return&#32;a&#32;scalar&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01080"/>01080 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;within&#32;which&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01081"/>01081 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;will&#32;be&#32;performed.&#32;It&#32;defines&#32;the&#32;valid&#32;parameter&#32;space.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01082"/>01082 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike],&#32;optional):&#32;Optional&#32;initial&#32;guess&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01083"/>01083 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimization.&#32;If&#32;not&#32;provided,&#32;a&#32;default&#32;guess&#32;may&#32;be&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01084"/>01084 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01085"/>01085 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float],&#32;optional):&#32;The&#32;standard&#32;deviation&#32;for&#32;the&#32;input</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01086"/>01086 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters.&#32;This&#32;is&#32;used&#32;in&#32;the&#32;optimization&#32;algorithm&#32;to&#32;explore</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01087"/>01087 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;parameter&#32;space.&#32;Defaults&#32;to&#32;0.1.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01088"/>01088 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator],&#32;optional):&#32;A&#32;random&#32;generator&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01089"/>01089 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;algorithm.&#32;Defaults&#32;to&#32;Generator(PCG64DXSM()).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01090"/>01090 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional&#32;storage&#32;object&#32;to&#32;store&#32;intermediate&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01091"/>01091 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;results&#32;or&#32;states.&#32;Its&#32;usage&#32;depends&#32;on&#32;the&#32;specific&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01092"/>01092 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;procedure.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01093"/>01093 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01094"/>01094 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01095"/>01095 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01096"/>01096 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;optimal&#32;parameters&#32;as&#32;a&#32;numpy&#32;array.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01097"/>01097 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;minimum&#32;value&#32;of&#32;the&#32;objective&#32;function.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01098"/>01098 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;number&#32;of&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01099"/>01099 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01100"/>01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;pgpecpp.minimize(fun,&#32;bounds,&#32;
<anchor xml:id="_optimizer_8py_source_1l01101"/>01101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a3acb28558e183337fbc25d0f30dfc2a0">guess</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a3acb28558e183337fbc25d0f30dfc2a0">guess</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;guess,
<anchor xml:id="_optimizer_8py_source_1l01102"/>01102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a32af3f567e2852891077542f09c90ec1">sdevs</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a32af3f567e2852891077542f09c90ec1">sdevs</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;sdevs,
<anchor xml:id="_optimizer_8py_source_1l01103"/>01103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l01104"/>01104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize=self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1ad8bb83e394a209e90761b1d77b424e47">popsize</link>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01105"/>01105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8927d734b23546a18e42e14ade1569e5">stop_fitness</link>,
<anchor xml:id="_optimizer_8py_source_1l01106"/><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a2845640bcdc3ee87799cf8decf702f1d">01106</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=rg,&#32;runid=self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l01107"/>01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8862c3af607ca2bb3c07bbef226691aa">workers</link>)&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01108"/>01108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l01109"/>01109 
<anchor xml:id="_optimizer_8py_source_1l01110"/>01110 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python">Cma_python</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l01111"/>01111 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01112"/>01112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Cma_python&#32;optimizer&#32;class.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01113"/>01113 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01114"/><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1ad8bb83e394a209e90761b1d77b424e47">01114</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;implements&#32;the&#32;CMA-ES&#32;optimization&#32;algorithm&#32;with&#32;additional</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01115"/><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8927d734b23546a18e42e14ade1569e5">01115</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;customizable&#32;parameters.&#32;It&#32;is&#32;designed&#32;to&#32;minimize&#32;objective&#32;functions</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01116"/><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a3acb28558e183337fbc25d0f30dfc2a0">01116</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;within&#32;provided&#32;bounds&#32;and&#32;constraints.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01117"/><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a32af3f567e2852891077542f09c90ec1">01117</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01118"/><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8862c3af607ca2bb3c07bbef226691aa">01118</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01119"/>01119 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;Population&#32;size&#32;used&#32;by&#32;the&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01120"/>01120 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Target&#32;fitness&#32;value.&#32;If&#32;reached,&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01121"/>01121 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process&#32;will&#32;stop&#32;early.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01122"/>01122 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap&#32;(int&#32;or&#32;None):&#32;Number&#32;of&#32;iterations&#32;between&#32;covariance&#32;matrix</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01123"/>01123 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updates.&#32;None&#32;means&#32;default&#32;behavior.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01124"/>01124 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(ArrayLike&#32;or&#32;None):&#32;Initial&#32;guess&#32;for&#32;the&#32;solution&#32;in&#32;the&#32;search</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01125"/>01125 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;space.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01126"/>01126 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(float&#32;or&#32;ArrayLike&#32;or&#32;None):&#32;Standard&#32;deviations&#32;for&#32;the&#32;search.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01127"/>01127 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;set&#32;to&#32;None,&#32;default&#32;values&#32;will&#32;be&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01128"/>01128 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;(bool):&#32;Whether&#32;to&#32;normalize&#32;input&#32;data&#32;during&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01129"/>01129 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(int&#32;or&#32;None):&#32;Number&#32;of&#32;workers&#32;for&#32;parallelized&#32;evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01130"/>01130 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01131"/>01131 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01132"/>01132 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a2845640bcdc3ee87799cf8decf702f1d">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01133"/>01133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l01134"/>01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01138"/>01138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01140"/>01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l01141"/>01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01142"/>01142 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;CMA-ES&#32;optimizer&#32;with&#32;its&#32;configuration&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01143"/>01143 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01144"/>01144 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;sets&#32;up&#32;the&#32;optimizer&#32;by&#32;initializing&#32;its&#32;key&#32;attributes&#32;based&#32;on&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01145"/>01145 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user-specified&#32;or&#32;default&#32;values.&#32;It&#32;inherits&#32;the&#32;generic&#32;optimizer&#32;functionality</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01146"/>01146 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;extends&#32;it&#32;with&#32;CMA-ES-specific&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01147"/>01147 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01148"/>01148 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01149"/>01149 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional&#32;maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;(default&#32;50000).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01150"/><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a15393a3e9dbb73be5cf8e5c9cc6f8c2d">01150</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional&#32;population&#32;size&#32;for&#32;the&#32;CMA-ES&#32;algorithm&#32;(default&#32;31).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01151"/>01151 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional&#32;initial&#32;guess&#32;for&#32;the&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01152"/>01152 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional&#32;fitness&#32;value&#32;at&#32;which&#32;optimization&#32;stops&#32;(default&#32;-inf).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01153"/>01153 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional&#32;standard&#32;deviations&#32;for&#32;the&#32;distribution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01154"/>01154 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional&#32;number&#32;of&#32;workers&#32;for&#32;parallel&#32;evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01155"/>01155 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap:&#32;Optional&#32;number&#32;of&#32;generations&#32;between&#32;updates.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01156"/>01156 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize:&#32;Optional&#32;boolean&#32;to&#32;enable&#32;normalization&#32;of&#32;input&#32;parameters</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01157"/>01157 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(default&#32;True).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01158"/>01158 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01159"/>01159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;cma&#32;py&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l01160"/>01160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1ad8bb83e394a209e90761b1d77b424e47">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l01161"/>01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8927d734b23546a18e42e14ade1569e5">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.update_gap&#32;=&#32;update_gap
<anchor xml:id="_optimizer_8py_source_1l01163"/>01163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a3acb28558e183337fbc25d0f30dfc2a0">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l01164"/>01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a32af3f567e2852891077542f09c90ec1">sdevs</link>&#32;=&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l01165"/>01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.normalize&#32;=&#32;normalize
<anchor xml:id="_optimizer_8py_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8862c3af607ca2bb3c07bbef226691aa">workers</link>&#32;=&#32;workers
<anchor xml:id="_optimizer_8py_source_1l01167"/>01167 
<anchor xml:id="_optimizer_8py_source_1l01168"/>01168 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a15393a3e9dbb73be5cf8e5c9cc6f8c2d">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l01171"/>01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01172"/>01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike,&#32;Callable]]&#32;=&#32;0.1,&#32;
<anchor xml:id="_optimizer_8py_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01176"/>01176 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;provided&#32;objective&#32;function&#32;using&#32;the&#32;CMA-ES&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01177"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python">01177</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01178"/>01178 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;utilizes&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy&#32;(CMA-ES)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01179"/>01179 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;perform&#32;function&#32;minimization.&#32;It&#32;supports&#32;optional&#32;parameters&#32;such&#32;as&#32;bounds,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01180"/>01180 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initial&#32;guesses,&#32;and&#32;standard&#32;deviations&#32;for&#32;sampling,&#32;among&#32;others.&#32;The&#32;method</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01181"/>01181 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returns&#32;the&#32;optimal&#32;solution,&#32;the&#32;corresponding&#32;function&#32;value,&#32;and&#32;the&#32;number</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01182"/>01182 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01183"/>01183 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01184"/>01184 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01185"/>01185 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;be&#32;minimized.&#32;It</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01186"/>01186 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;should&#32;take&#32;an&#32;input&#32;array&#32;and&#32;return&#32;a&#32;scalar&#32;function&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01187"/>01187 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;within&#32;which&#32;the&#32;solution&#32;is&#32;searched.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01188"/>01188 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Can&#32;be&#32;None&#32;for&#32;unbounded&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01189"/>01189 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike],&#32;optional):&#32;The&#32;initial&#32;guess&#32;for&#32;the&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01190"/>01190 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;not&#32;provided,&#32;an&#32;internal&#32;guess&#32;will&#32;be&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01191"/>01191 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[Union[float,&#32;ArrayLike,&#32;Callable]],&#32;optional):&#32;The&#32;standard</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01192"/>01192 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deviations&#32;used&#32;for&#32;sampling&#32;around&#32;the&#32;guess.&#32;Defaults&#32;to&#32;0.1.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01193"/>01193 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator],&#32;optional):&#32;The&#32;random&#32;number&#32;generator&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01194"/>01194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.&#32;Defaults&#32;to&#32;Generator(PCG64DXSM()).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01195"/>01195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;An&#32;optional&#32;object&#32;used&#32;for&#32;storing&#32;additional&#32;metadata&#32;or&#32;state</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01196"/>01196 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01197"/>01197 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01198"/>01198 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01199"/>01199 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01200"/>01200 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;optimal&#32;solution&#32;as&#32;an&#32;array.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01201"/>01201 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;minimum&#32;function&#32;value&#32;achieved.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01202"/>01202 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;number&#32;of&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01203"/>01203 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01204"/>01204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;cmaes.minimize(fun,&#32;bounds,&#32;
<anchor xml:id="_optimizer_8py_source_1l01205"/>01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a">guess</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a">guess</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;guess,
<anchor xml:id="_optimizer_8py_source_1l01206"/>01206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c">sdevs</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c">sdevs</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;sdevs,
<anchor xml:id="_optimizer_8py_source_1l01207"/>01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l01208"/>01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize=self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371">popsize</link>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f">stop_fitness</link>,
<anchor xml:id="_optimizer_8py_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=rg,&#32;runid=self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link>(store),
<anchor xml:id="_optimizer_8py_source_1l01211"/>01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a3ba6830a8e6ee037faaa309c2e68dce0">normalize</link>,
<anchor xml:id="_optimizer_8py_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a22a6511d0a158b47ceb15c09119ce9f7">update_gap</link>,
<anchor xml:id="_optimizer_8py_source_1l01213"/>01213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca">workers</link>)&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01214"/>01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l01215"/>01215 
<anchor xml:id="_optimizer_8py_source_1l01216"/>01216 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp">Cma_cpp</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l01217"/>01217 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01218"/>01218 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;implements&#32;the&#32;CMA-ES&#32;optimization&#32;algorithm&#32;with&#32;customization&#32;options.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01219"/>01219 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01220"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a82643dd56a018e574b60be0a2dfae303">01220</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;Cma_cpp&#32;class&#32;extends&#32;the&#32;functionality&#32;of&#32;a&#32;generic&#32;optimizer&#32;by&#32;introducing</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01221"/>01221 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;CMA-ES&#32;specific&#32;features.&#32;This&#32;includes&#32;options&#32;for&#32;population&#32;size,&#32;convergence</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01222"/>01222 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;criteria,&#32;standard&#32;deviations&#32;for&#32;mutations,&#32;and&#32;the&#32;ability&#32;to&#32;parallelize&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01223"/>01223 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;process.&#32;It&#32;is&#32;designed&#32;for&#32;optimizing&#32;objective&#32;functions&#32;with&#32;or</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01224"/>01224 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;without&#32;constraints.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01225"/>01225 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01226"/>01226 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01227"/>01227 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;The&#32;population&#32;size&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01228"/>01228 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Fitness&#32;value&#32;threshold&#32;for&#32;stopping&#32;the&#32;optimization&#32;process&#32;early.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01229"/>01229 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_hist&#32;(int):&#32;Number&#32;of&#32;recent&#32;fitness&#32;values&#32;considered&#32;for&#32;convergence&#32;checks.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01230"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371">01230</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(ArrayLike):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization&#32;variables.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01231"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f">01231</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(float):&#32;Initial&#32;standard&#32;deviations&#32;for&#32;the&#32;distribution&#32;used&#32;in&#32;CMA-ES.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01232"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a22a6511d0a158b47ceb15c09119ce9f7">01232</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap&#32;(int):&#32;Interval&#32;(in&#32;terms&#32;of&#32;generations)&#32;between&#32;updates&#32;to&#32;the&#32;distribution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01233"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a">01233</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delayed_update&#32;(bool):&#32;Indicates&#32;whether&#32;updates&#32;to&#32;the&#32;distribution&#32;are&#32;delayed&#32;until</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01234"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c">01234</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;certain&#32;criteria&#32;are&#32;met.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01235"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a3ba6830a8e6ee037faaa309c2e68dce0">01235</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;(bool):&#32;Specifies&#32;whether&#32;the&#32;input&#32;parameters&#32;should&#32;be&#32;normalized&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01236"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca">01236</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01237"/>01237 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(int):&#32;The&#32;number&#32;of&#32;workers&#32;used&#32;to&#32;parallelize&#32;computations&#32;and&#32;evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01238"/>01238 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01239"/>01239 &#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01240"/>01240 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a82643dd56a018e574b60be0a2dfae303">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01244"/>01244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l01245"/>01245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01246"/>01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01247"/>01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01249"/>01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delayed_update:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>,&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01250"/>01250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_hist:&#32;Optional[int]&#32;=&#32;-1):
<anchor xml:id="_optimizer_8py_source_1l01251"/>01251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01252"/>01252 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;CMA-ES&#32;optimization&#32;algorithm&#32;with&#32;the&#32;specified&#32;parameters.&#32;This</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01253"/>01253 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;method&#32;extends&#32;an&#32;existing&#32;optimizer&#32;by&#32;incorporating&#32;properties&#32;specific&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01254"/>01254 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CMA-ES.&#32;It&#32;allows&#32;fine-tuning&#32;of&#32;the&#32;optimization&#32;process&#32;through&#32;various&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01255"/>01255 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01256"/>01256 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01257"/>01257 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;for&#32;the&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01258"/>01258 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;The&#32;population&#32;size&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01259"/>01259 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization&#32;variables.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01260"/>01260 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;Fitness&#32;value&#32;threshold&#32;for&#32;stopping&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01261"/>01261 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Initial&#32;standard&#32;deviations&#32;for&#32;the&#32;distribution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01262"/>01262 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;workers&#32;to&#32;parallelize&#32;computations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01263"/>01263 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap&#32;(Optional[int]):&#32;Interval&#32;(in&#32;terms&#32;of&#32;generations)&#32;between&#32;updates&#32;to&#32;the&#32;distribution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01264"/>01264 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;(Optional[bool]):&#32;Specifies&#32;whether&#32;the&#32;input&#32;parameters&#32;should&#32;be&#32;normalized.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01265"/>01265 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delayed_update&#32;(Optional[bool]):&#32;Indicates&#32;whether&#32;updates&#32;to&#32;the&#32;distribution&#32;are&#32;delayed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01266"/>01266 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_hist&#32;(Optional[int]):&#32;Number&#32;of&#32;recent&#32;fitness&#32;values&#32;to&#32;consider&#32;for&#32;convergence&#32;checks.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01267"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6">01267</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01268"/>01268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;cma&#32;cpp&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l01269"/>01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l01270"/>01270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l01271"/>01271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.stop_hist&#32;=&#32;stop_hist
<anchor xml:id="_optimizer_8py_source_1l01272"/>01272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l01273"/>01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c">sdevs</link>&#32;=&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l01274"/>01274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a22a6511d0a158b47ceb15c09119ce9f7">update_gap</link>&#32;=&#32;update_gap
<anchor xml:id="_optimizer_8py_source_1l01275"/>01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.delayed_update&#32;=&#32;delayed_update
<anchor xml:id="_optimizer_8py_source_1l01276"/>01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a3ba6830a8e6ee037faaa309c2e68dce0">normalize</link>&#32;=&#32;normalize
<anchor xml:id="_optimizer_8py_source_1l01277"/>01277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca">workers</link>&#32;=&#32;workers
<anchor xml:id="_optimizer_8py_source_1l01278"/>01278 
<anchor xml:id="_optimizer_8py_source_1l01279"/>01279 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01280"/>01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l01281"/>01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike,&#32;Callable]]&#32;=&#32;0.1,&#32;
<anchor xml:id="_optimizer_8py_source_1l01284"/>01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l01285"/>01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l01286"/>01286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01287"/>01287 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;an&#32;objective&#32;function&#32;using&#32;the&#32;CMA-ES&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01288"/>01288 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01289"/>01289 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;utilizes&#32;the&#32;CMA-ES&#32;(Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy)&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01290"/>01290 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;find&#32;the&#32;minima&#32;of&#32;the&#32;given&#32;objective&#32;function&#32;within&#32;specified&#32;bounds.&#32;The&#32;algorithm</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01291"/>01291 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;supports&#32;customizable&#32;standard&#32;deviations&#32;for&#32;mutations,&#32;an&#32;optional&#32;random&#32;number&#32;generator,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01292"/>01292 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;ability&#32;to&#32;store&#32;optimization&#32;progress.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01293"/>01293 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01294"/>01294 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01295"/>01295 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;A&#32;callable&#32;objective&#32;function&#32;to&#32;minimize.&#32;It&#32;accepts&#32;an&#32;array-like&#32;object&#32;as&#32;input</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01296"/>01296 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;returns&#32;a&#32;scalar&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01297"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp">01297</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;The&#32;bounds&#32;within&#32;which&#32;the&#32;optimization&#32;will&#32;be&#32;performed.&#32;This&#32;is&#32;optional</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01298"/>01298 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;can&#32;be&#32;used&#32;to&#32;constrain&#32;the&#32;search&#32;space.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01299"/>01299 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization.&#32;If&#32;not&#32;provided,&#32;a&#32;default&#32;initial&#32;guess&#32;is&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01300"/>01300 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional&#32;standard&#32;deviations&#32;for&#32;mutations.&#32;It&#32;can&#32;be&#32;provided&#32;as&#32;a&#32;float,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01301"/>01301 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;array-like&#32;object,&#32;or&#32;a&#32;callable.&#32;Default&#32;is&#32;0.1.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01302"/>01302 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;A&#32;random&#32;number&#32;generator&#32;instance.&#32;By&#32;default,&#32;it&#32;uses&#32;a&#32;generator&#32;from&#32;the&#32;PCG64DXSM</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01303"/>01303 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01304"/>01304 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional.&#32;A&#32;store&#32;to&#32;save&#32;progress&#32;or&#32;retrieve&#32;optimization&#32;state.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01305"/>01305 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01306"/>01306 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01307"/>01307 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01308"/>01308 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;first&#32;element&#32;is&#32;the&#32;array&#32;containing&#32;the&#32;optimal&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01309"/>01309 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;second&#32;element&#32;is&#32;the&#32;corresponding&#32;minimum&#32;function&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01310"/>01310 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;third&#32;element&#32;is&#32;the&#32;number&#32;of&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01311"/>01311 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01312"/>01312 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01313"/>01313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;cmaescpp.minimize(fun,&#32;bounds,
<anchor xml:id="_optimizer_8py_source_1l01314"/>01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c">guess</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c">guess</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;guess,
<anchor xml:id="_optimizer_8py_source_1l01315"/>01315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120">sdevs</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120">sdevs</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;sdevs,
<anchor xml:id="_optimizer_8py_source_1l01316"/>01316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store),
<anchor xml:id="_optimizer_8py_source_1l01317"/>01317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578">popsize</link>,
<anchor xml:id="_optimizer_8py_source_1l01318"/>01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ae7c8ca1a9885411036279c8990bada8e">stop_fitness</link>,
<anchor xml:id="_optimizer_8py_source_1l01319"/>01319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_hist&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad8ae4d6852922d2037677886a6e47081">stop_hist</link>,
<anchor xml:id="_optimizer_8py_source_1l01320"/>01320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;=&#32;rg,&#32;runid&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link>(store),
<anchor xml:id="_optimizer_8py_source_1l01321"/>01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a30083184aacba7ca41b7a96e06ba164c">update_gap</link>,
<anchor xml:id="_optimizer_8py_source_1l01322"/>01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a7d425626d29af5e5e323d059572b9931">normalize</link>,
<anchor xml:id="_optimizer_8py_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delayed_update&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ab75f2eed9cd3127b7174cc45f7ede81d">delayed_update</link>,
<anchor xml:id="_optimizer_8py_source_1l01324"/>01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ada69629e32dd255e9ae77bdc81803f7e">workers</link>)&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01325"/>01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l01326"/>01326 
<anchor xml:id="_optimizer_8py_source_1l01327"/>01327 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig">Cma_orig</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l01328"/>01328 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01329"/>01329 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Represents&#32;an&#32;optimizer&#32;specifically&#32;designed&#32;for&#32;the&#32;CMA-ES&#32;(Covariance&#32;Matrix</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01330"/>01330 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Adaptation&#32;Evolution&#32;Strategy)&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01331"/>01331 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01332"/>01332 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;is&#32;used&#32;to&#32;solve&#32;sophisticated&#32;optimization&#32;problems&#32;by&#32;utilizing&#32;the&#32;CMA-ES</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01333"/>01333 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;methodology&#32;to&#32;iteratively&#32;refine&#32;solutions.&#32;It&#32;inherits&#32;from&#32;a&#32;base&#32;Optimizer&#32;class&#32;and</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01334"/>01334 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;provides&#32;additional&#32;attributes&#32;and&#32;functionality&#32;associated&#32;with&#32;CMA-ES&#32;for&#32;advanced</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01335"/>01335 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;use&#32;cases.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01336"/>01336 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01337"/>01337 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01338"/>01338 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;The&#32;population&#32;size,&#32;determining&#32;the&#32;number&#32;of&#32;candidate</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01339"/>01339 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions&#32;to&#32;evaluate&#32;per&#32;generation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01340"/>01340 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;A&#32;threshold&#32;fitness&#32;value;&#32;the&#32;optimization&#32;process</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01341"/>01341 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;halts&#32;if&#32;this&#32;fitness&#32;value&#32;is&#32;achieved.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01342"/>01342 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;The&#32;initial&#32;guess&#32;or&#32;starting&#32;point&#32;in&#32;the&#32;search&#32;space</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01343"/>01343 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;the&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01344"/>01344 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Initial&#32;standard&#32;deviations&#32;for&#32;constructing&#32;a&#32;variance-covariance</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01345"/>01345 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matrix&#32;in&#32;the&#32;adaptation&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01346"/>01346 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01347"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a9d071c64c65735fdf51ec4f744397e29">01347</link> &#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01348"/>01348 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a9d071c64c65735fdf51ec4f744397e29">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l01350"/>01350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l01351"/>01351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01352"/>01352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l01353"/>01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l01354"/>01354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01355"/>01355 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;optimizer&#32;instance&#32;specifically&#32;designed&#32;for&#32;the&#32;CMA-ES&#32;(Covariance&#32;Matrix</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01356"/>01356 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Adaptation&#32;Evolution&#32;Strategy)&#32;algorithm.&#32;This&#32;is&#32;used&#32;for&#32;solving&#32;optimization&#32;problems</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01357"/>01357 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;by&#32;iteratively&#32;improving&#32;upon&#32;solutions&#32;in&#32;search&#32;space.&#32;The&#32;class&#32;inherits&#32;core&#32;functionality</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01358"/>01358 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;a&#32;base&#32;Optimizer&#32;class&#32;and&#32;initializes&#32;additional&#32;parameters&#32;related&#32;to&#32;the&#32;CMA-ES&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01359"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578">01359</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01360"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ae7c8ca1a9885411036279c8990bada8e">01360</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01361"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad8ae4d6852922d2037677886a6e47081">01361</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;for&#32;the&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01362"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c">01362</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Population&#32;size,&#32;representing&#32;the&#32;number&#32;of&#32;candidate&#32;solutions</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01363"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120">01363</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processed&#32;per&#32;generation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01364"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a30083184aacba7ca41b7a96e06ba164c">01364</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;solution,&#32;acting&#32;as&#32;a&#32;starting&#32;point</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01365"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ab75f2eed9cd3127b7174cc45f7ede81d">01365</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;the&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01366"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a7d425626d29af5e5e323d059572b9931">01366</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;Value&#32;of&#32;fitness&#32;to&#32;stop&#32;the&#32;optimization&#32;process&#32;if&#32;achieved.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01367"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ada69629e32dd255e9ae77bdc81803f7e">01367</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Standard&#32;deviations&#32;to&#32;initialize&#32;the&#32;search&#32;distribution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01368"/>01368 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01369"/>01369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;cma&#32;orig&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l01370"/>01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l01371"/>01371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ae7c8ca1a9885411036279c8990bada8e">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l01372"/>01372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l01373"/>01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120">sdevs</link>&#32;=&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l01374"/>01374 
<anchor xml:id="_optimizer_8py_source_1l01375"/>01375 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01376"/>01376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l01377"/>01377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l01378"/>01378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01379"/>01379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike]]&#32;=&#32;0.3,&#32;
<anchor xml:id="_optimizer_8py_source_1l01380"/>01380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l01381"/>01381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l01382"/>01382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01383"/>01383 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;the&#32;given&#32;objective&#32;function&#32;using&#32;the&#32;CMA-ES&#32;(Covariance&#32;Matrix&#32;Adaptation</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01384"/>01384 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Evolution&#32;Strategy)&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01385"/>01385 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01386"/>01386 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;aims&#32;to&#32;find&#32;the&#32;optimal&#32;set&#32;of&#32;parameters&#32;that&#32;minimize&#32;the&#32;output</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01387"/>01387 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;of&#32;a&#32;provided&#32;function.&#32;It&#32;utilizes&#32;the&#32;CMA-ES&#32;optimization&#32;routine,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01388"/>01388 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;which&#32;is&#32;particularly&#32;effective&#32;for&#32;non-linear&#32;and&#32;non-convex&#32;optimization&#32;problems.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01389"/>01389 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01390"/>01390 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01391"/>01391 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01392"/>01392 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;should&#32;accept&#32;an&#32;array-like&#32;object&#32;as&#32;input&#32;and&#32;return&#32;a&#32;float&#32;as&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01393"/>01393 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cost&#32;or&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01394"/>01394 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;for&#32;the&#32;variables&#32;in&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01395"/>01395 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;bounds&#32;provide&#32;lower&#32;(bounds.lb)&#32;and&#32;upper&#32;(bounds.ub)&#32;limits&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01396"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a">01396</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01397"/>01397 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike],&#32;optional):&#32;An&#32;initial&#32;guess&#32;for&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01398"/>01398 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;If&#32;None,&#32;a&#32;random&#32;guess&#32;within&#32;the&#32;bounds&#32;will&#32;be&#32;generated.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01399"/>01399 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01400"/>01400 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[Union[float,&#32;ArrayLike]],&#32;optional):&#32;Standard&#32;deviation&#32;or</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01401"/>01401 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;of&#32;the&#32;search&#32;distribution.&#32;If&#32;None,&#32;a&#32;default&#32;value&#32;of&#32;0.3&#32;will</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01402"/>01402 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;used.&#32;Defaults&#32;to&#32;0.3.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01403"/>01403 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator],&#32;optional):&#32;A&#32;random&#32;generator&#32;instance,&#32;defaulting</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01404"/>01404 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;Generator(PCG64DXSM()).&#32;This&#32;is&#32;used&#32;for&#32;generating&#32;random&#32;values</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01405"/>01405 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;optimization&#32;when&#32;necessary.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01406"/>01406 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(any):&#32;A&#32;storage&#32;mechanism&#32;used&#32;to&#32;manage&#32;or&#32;obtain&#32;related&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01407"/>01407 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;metadata&#32;like&#32;limiting&#32;the&#32;maximum&#32;evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01408"/>01408 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01409"/>01409 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01410"/>01410 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01411"/>01411 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;Best&#32;solution&#32;(`np.ndarray`):&#32;The&#32;array&#32;representing&#32;the&#32;optimal&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01412"/>01412 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;Best&#32;objective&#32;value&#32;(`float`):&#32;The&#32;minimal&#32;value&#32;obtained&#32;from&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01413"/>01413 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objective&#32;function.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01414"/>01414 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;Number&#32;of&#32;evaluations&#32;(`int`):&#32;The&#32;total&#32;number&#32;of&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01415"/>01415 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01416"/>01416 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01417"/>01417 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImportError:&#32;If&#32;the&#32;required&#32;`cma`&#32;library&#32;is&#32;not&#32;installed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01418"/>01418 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Exception:&#32;Any&#32;error&#32;that&#32;arises&#32;during&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01419"/>01419 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01420"/>01420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower&#32;=&#32;bounds.lb
<anchor xml:id="_optimizer_8py_source_1l01421"/>01421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;=&#32;bounds.ub
<anchor xml:id="_optimizer_8py_source_1l01422"/>01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c">guess</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c">guess</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;guess
<anchor xml:id="_optimizer_8py_source_1l01423"/>01423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l01424"/>01424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;rg.uniform(lower,&#32;upper)
<anchor xml:id="_optimizer_8py_source_1l01425"/>01425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store)&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01426"/>01426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120">sdevs</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120">sdevs</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l01427"/>01427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l01428"/>01428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">import</emphasis>&#32;cma
<anchor xml:id="_optimizer_8py_source_1l01429"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig">01429</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;ImportError&#32;<emphasis role="keyword">as</emphasis>&#32;e:
<anchor xml:id="_optimizer_8py_source_1l01430"/>01430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;ImportError(<emphasis role="stringliteral">&quot;Please&#32;install&#32;CMA&#32;(pip&#32;install&#32;cma)&quot;</emphasis>)&#32;
<anchor xml:id="_optimizer_8py_source_1l01431"/>01431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:&#32;
<anchor xml:id="_optimizer_8py_source_1l01432"/>01432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;es&#32;=&#32;cma.CMAEvolutionStrategy(guess,&#32;0.1,&#32;&#32;{<emphasis role="stringliteral">&apos;bounds&apos;</emphasis>:&#32;[lower,&#32;upper],&#32;
<anchor xml:id="_optimizer_8py_source_1l01433"/>01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;typical_x&apos;</emphasis>:&#32;guess,
<anchor xml:id="_optimizer_8py_source_1l01434"/>01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;scaling_of_variables&apos;</emphasis>:&#32;<link linkend="_namespacefcmaes_1_1optimizer_1a4bd18244815f50df9c133ce56be95865">scale</link>(lower,&#32;upper),
<anchor xml:id="_optimizer_8py_source_1l01435"/>01435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;popsize&apos;</emphasis>:&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a90f09477ed9000f2c20750fa9ac73ed5">popsize</link>,
<anchor xml:id="_optimizer_8py_source_1l01436"/>01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;CMA_stds&apos;</emphasis>:&#32;input_sigma,
<anchor xml:id="_optimizer_8py_source_1l01437"/>01437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;verbose&apos;</emphasis>:&#32;-1,
<anchor xml:id="_optimizer_8py_source_1l01438"/>01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;verb_disp&apos;</emphasis>:&#32;-1})
<anchor xml:id="_optimizer_8py_source_1l01439"/>01439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;0
<anchor xml:id="_optimizer_8py_source_1l01440"/>01440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(max_evaluations):
<anchor xml:id="_optimizer_8py_source_1l01441"/>01441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X,&#32;Y&#32;=&#32;es.ask_and_eval(fun)
<anchor xml:id="_optimizer_8py_source_1l01442"/>01442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;es.tell(X,&#32;Y)
<anchor xml:id="_optimizer_8py_source_1l01443"/>01443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;+=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a90f09477ed9000f2c20750fa9ac73ed5">popsize</link>
<anchor xml:id="_optimizer_8py_source_1l01444"/>01444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;es.stop():
<anchor xml:id="_optimizer_8py_source_1l01445"/>01445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>&#32;
<anchor xml:id="_optimizer_8py_source_1l01446"/>01446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;evals&#32;&gt;&#32;max_evaluations:
<anchor xml:id="_optimizer_8py_source_1l01447"/>01447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01448"/>01448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;es.result.xbest,&#32;es.result.fbest,&#32;evals
<anchor xml:id="_optimizer_8py_source_1l01449"/>01449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_optimizer_8py_source_1l01450"/>01450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(ex)
<anchor xml:id="_optimizer_8py_source_1l01451"/>01451 
<anchor xml:id="_optimizer_8py_source_1l01452"/>01452 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw">Cma_lw</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l01453"/>01453 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;CMA-ES&#32;lightweight&#32;optimizer&#32;implementation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01454"/>01454 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01455"/>01455 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;implements&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01456"/>01456 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;(CMA-ES)&#32;algorithm&#32;in&#32;a&#32;lightweight&#32;manner.&#32;It&#32;is&#32;designed&#32;to&#32;perform</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01457"/>01457 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;black-box&#32;optimization&#32;for&#32;continuous&#32;problems.&#32;The&#32;optimizer&#32;iteratively</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01458"/>01458 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;searches&#32;for&#32;the&#32;minimum&#32;of&#32;a&#32;given&#32;objective&#32;function&#32;within&#32;provided</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01459"/>01459 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;bounds,&#32;using&#32;strategies&#32;for&#32;population&#32;sampling&#32;and&#32;updates.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01460"/>01460 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01461"/>01461 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01462"/>01462 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;Population&#32;size&#32;parameter&#32;that&#32;determines&#32;the&#32;number&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01463"/>01463 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate&#32;solutions&#32;sampled&#32;per&#32;iteration.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01464"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a1dd748026586bac7e0f73ed6328d0917">01464</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Threshold&#32;for&#32;the&#32;optimization&#32;stopping&#32;if&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01465"/>01465 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fitness&#32;value&#32;of&#32;the&#32;best&#32;solution&#32;reaches&#32;or&#32;falls&#32;below&#32;this</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01466"/>01466 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01467"/>01467 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(ArrayLike,&#32;optional):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization;&#32;if&#32;not</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01468"/>01468 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided,&#32;it&#32;can&#32;be&#32;randomly&#32;generated&#32;within&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01469"/>01469 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Union[float,&#32;ArrayLike],&#32;optional):&#32;Standard&#32;deviations&#32;used&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01470"/>01470 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initializing&#32;the&#32;search&#32;distribution;&#32;it&#32;can&#32;be&#32;a&#32;scalar&#32;or&#32;an</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01471"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a90f09477ed9000f2c20750fa9ac73ed5">01471</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;matching&#32;the&#32;dimensionality&#32;of&#32;the&#32;problem.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01472"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1aa3e54c6b1d49bf087f1afcb4e4d92f13">01472</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(int,&#32;optional):&#32;Number&#32;of&#32;worker&#32;processes&#32;used&#32;for&#32;parallel</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01473"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a91b1661ab6194b9f03f1bc5eb95195e0">01473</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluation&#32;of&#32;the&#32;objective&#32;function;&#32;defaults&#32;to&#32;serial&#32;execution</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01474"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a246b1629a6e77876a03baa8ef4a485ff">01474</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;None&#32;or&#32;a&#32;value&#32;≤&#32;1.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01475"/>01475 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01476"/>01476 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01477"/>01477 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a1dd748026586bac7e0f73ed6328d0917">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01478"/>01478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l01479"/>01479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l01480"/>01480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01481"/>01481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l01482"/>01482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike]]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01483"/>01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l01484"/>01484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01485"/>01485 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;CMA-LW&#32;optimizer&#32;with&#32;specified&#32;parameters&#32;to&#32;configure&#32;its&#32;behavior.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01486"/>01486 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;optimizer&#32;is&#32;designed&#32;to&#32;perform&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01487"/>01487 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(CMA-ES)&#32;with&#32;a&#32;lightweight&#32;implementation.&#32;Parameters&#32;like&#32;`max_evaluations`,&#32;`popsize`,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01488"/>01488 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;`workers`&#32;control&#32;the&#32;optimization&#32;process&#32;while&#32;`guess`&#32;and&#32;`sdevs`&#32;define</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01489"/>01489 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;starting&#32;points&#32;and&#32;variability.&#32;This&#32;initialization&#32;prepares&#32;the&#32;object&#32;with</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01490"/>01490 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configuration&#32;settings.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01491"/>01491 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01492"/>01492 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01493"/>01493 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional;&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;for&#32;the&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01494"/>01494 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional;&#32;Population&#32;size&#32;used&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01495"/>01495 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional;&#32;Initial&#32;guess&#32;or&#32;starting&#32;point&#32;for&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01496"/>01496 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional;&#32;Stopping&#32;criterion&#32;based&#32;on&#32;target&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01497"/>01497 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional;&#32;Standard&#32;deviations&#32;for&#32;the&#32;initial&#32;distribution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01498"/>01498 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional;&#32;Number&#32;of&#32;parallel&#32;workers&#32;to&#32;use&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01499"/>01499 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01500"/>01500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;cma_lw&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l01501"/>01501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a90f09477ed9000f2c20750fa9ac73ed5">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l01502"/>01502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1aa3e54c6b1d49bf087f1afcb4e4d92f13">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l01503"/>01503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a91b1661ab6194b9f03f1bc5eb95195e0">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l01504"/>01504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a246b1629a6e77876a03baa8ef4a485ff">sdevs</link>&#32;=&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l01505"/>01505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.workers&#32;=&#32;workers
<anchor xml:id="_optimizer_8py_source_1l01506"/>01506 
<anchor xml:id="_optimizer_8py_source_1l01507"/>01507 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01508"/>01508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l01509"/>01509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l01510"/>01510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01511"/>01511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike]]&#32;=&#32;0.3,&#32;
<anchor xml:id="_optimizer_8py_source_1l01512"/>01512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l01513"/>01513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l01514"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0">01514</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01515"/>01515 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;using&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy&#32;(CMA-ES).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01516"/>01516 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01517"/>01517 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;employs&#32;an&#32;iterative&#32;optimization&#32;algorithm&#32;to&#32;find&#32;the&#32;minimum&#32;of&#32;the&#32;provided&#32;objective</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01518"/>01518 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function.&#32;It&#32;supports&#32;parallel&#32;execution&#32;of&#32;the&#32;function&#32;evaluations&#32;if&#32;enabled.&#32;The&#32;method&#32;allows&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01519"/>01519 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;specification&#32;of&#32;initial&#32;guesses,&#32;bounds,&#32;standard&#32;deviations,&#32;and&#32;random&#32;number&#32;generators&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01520"/>01520 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flexible&#32;and&#32;customizable&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01521"/>01521 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01522"/>01522 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01523"/>01523 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01524"/>01524 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;of&#32;the&#32;search&#32;domain&#32;for&#32;each&#32;dimension.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01525"/>01525 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization.&#32;If&#32;not&#32;provided,&#32;it&#32;is&#32;generated</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01526"/>01526 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;randomly&#32;within&#32;the&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01527"/>01527 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[Union[float,&#32;ArrayLike]]):&#32;Initial&#32;standard&#32;deviation(s)&#32;for&#32;the&#32;CMA-ES&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01528"/>01528 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;default&#32;is&#32;0.3.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01529"/>01529 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;Random&#32;number&#32;generator&#32;used&#32;for&#32;initialization.&#32;Defaults&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01530"/>01530 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;PCG64DXSM&#32;generator&#32;instance.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01531"/>01531 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Used&#32;to&#32;store&#32;intermediate&#32;results&#32;during&#32;the&#32;optimization&#32;process.&#32;Its&#32;usage&#32;is&#32;optional.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01532"/>01532 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01533"/>01533 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01534"/>01534 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;Returns&#32;a&#32;tuple&#32;containing&#32;the&#32;best&#32;solution&#32;found&#32;(as&#32;a&#32;numpy&#32;array),</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01535"/>01535 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;associated&#32;objective&#32;function&#32;value,&#32;and&#32;the&#32;total&#32;number&#32;of&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01536"/>01536 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01537"/>01537 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01538"/>01538 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImportError:&#32;If&#32;the&#32;required&#32;&apos;cmaes&apos;&#32;library&#32;is&#32;not&#32;installed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01539"/>01539 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01540"/>01540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l01541"/>01541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">import</emphasis>&#32;cmaes
<anchor xml:id="_optimizer_8py_source_1l01542"/>01542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;ImportError&#32;<emphasis role="keyword">as</emphasis>&#32;e:
<anchor xml:id="_optimizer_8py_source_1l01543"/>01543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;ImportError(<emphasis role="stringliteral">&quot;Please&#32;install&#32;cmaes&#32;(pip&#32;install&#32;cmaes)&quot;</emphasis>)&#32;
<anchor xml:id="_optimizer_8py_source_1l01544"/>01544 
<anchor xml:id="_optimizer_8py_source_1l01545"/>01545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l01546"/>01546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a91b1661ab6194b9f03f1bc5eb95195e0">guess</link>
<anchor xml:id="_optimizer_8py_source_1l01547"/>01547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01548"/>01548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;rg.uniform(bounds.lb,&#32;bounds.ub)
<anchor xml:id="_optimizer_8py_source_1l01549"/>01549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bds&#32;=&#32;np.array([t&#32;<emphasis role="keywordflow">for</emphasis>&#32;t&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(bounds.lb,&#32;bounds.ub)])
<anchor xml:id="_optimizer_8py_source_1l01550"/>01550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seed&#32;=&#32;int(rg.uniform(0,&#32;2**32&#32;-&#32;1))
<anchor xml:id="_optimizer_8py_source_1l01551"/>01551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer&#32;=&#32;cmaes.CMA(mean=guess,&#32;sigma=np.mean(sdevs),&#32;bounds=bds,&#32;seed=seed,&#32;population_size=self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__orig_1a90f09477ed9000f2c20750fa9ac73ed5">popsize</link>)
<anchor xml:id="_optimizer_8py_source_1l01552"/>01552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_y&#32;=&#32;np.inf
<anchor xml:id="_optimizer_8py_source_1l01553"/>01553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;0
<anchor xml:id="_optimizer_8py_source_1l01554"/>01554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;=&#32;serial(fun)&#32;<emphasis role="keywordflow">if</emphasis>&#32;(self.workers&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;self.workers&#32;&lt;=&#32;1)&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="_classfcmaes_1_1evaluator_1_1parallel">parallel</link>(fun,&#32;self.workers)&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01555"/>01555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;evals&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>&#32;<emphasis role="keywordflow">and</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;optimizer.should_stop():
<anchor xml:id="_optimizer_8py_source_1l01556"/>01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;[optimizer.ask()&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(optimizer.population_size)]
<anchor xml:id="_optimizer_8py_source_1l01557"/>01557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;fun(xs)
<anchor xml:id="_optimizer_8py_source_1l01558"/>01558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions&#32;=&#32;[]
<anchor xml:id="_optimizer_8py_source_1l01559"/>01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(optimizer.population_size):
<anchor xml:id="_optimizer_8py_source_1l01560"/>01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;xs[i]
<anchor xml:id="_optimizer_8py_source_1l01561"/>01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;ys[i]
<anchor xml:id="_optimizer_8py_source_1l01562"/>01562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions.append((x,&#32;y))
<anchor xml:id="_optimizer_8py_source_1l01563"/>01563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;best_y:
<anchor xml:id="_optimizer_8py_source_1l01564"/>01564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_y&#32;=&#32;y
<anchor xml:id="_optimizer_8py_source_1l01565"/>01565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_x&#32;=&#32;x
<anchor xml:id="_optimizer_8py_source_1l01566"/>01566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer.tell(solutions)
<anchor xml:id="_optimizer_8py_source_1l01567"/>01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;+=&#32;optimizer.population_size&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01568"/>01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;isinstance(fun,&#32;parallel):
<anchor xml:id="_optimizer_8py_source_1l01569"/>01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun.stop()
<anchor xml:id="_optimizer_8py_source_1l01570"/>01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;best_x,&#32;best_y,&#32;evals
<anchor xml:id="_optimizer_8py_source_1l01571"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw">01571</link> 
<anchor xml:id="_optimizer_8py_source_1l01572"/>01572 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm">Cma_awm</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l01573"/>01573 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01574"/>01574 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Cma_awm&#32;optimizer&#32;using&#32;the&#32;CMA-ES&#32;algorithm&#32;tailored&#32;for&#32;problems&#32;with&#32;both&#32;continuous</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01575"/>01575 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;discrete&#32;decision&#32;spaces.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01576"/>01576 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01577"/>01577 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;extends&#32;the&#32;Optimizer&#32;base&#32;class&#32;to&#32;implement&#32;the&#32;CMA-ES&#32;(Covariance&#32;Matrix</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01578"/>01578 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Adaptation&#32;Evolution&#32;Strategy)&#32;algorithm&#32;with&#32;customized&#32;parameters.&#32;It&#32;is&#32;suitable&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01579"/>01579 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;tasks&#32;in&#32;mixed&#32;search&#32;spaces&#32;where&#32;continuous&#32;and&#32;discrete&#32;variables&#32;coexist.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01580"/>01580 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01581"/>01581 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01582"/>01582 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Size&#32;of&#32;the&#32;population&#32;used&#32;in&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01583"/>01583 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;The&#32;fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization&#32;process</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01584"/>01584 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;will&#32;stop&#32;if&#32;reached.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01585"/>01585 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;or&#32;solution&#32;provided&#32;to&#32;the&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01586"/>01586 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[Union[float,&#32;ArrayLike]]):&#32;The&#32;standard&#32;deviations&#32;of&#32;the&#32;initial</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01587"/>01587 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;search&#32;distribution&#32;for&#32;the&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01588"/>01588 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;Number&#32;of&#32;parallel&#32;workers&#32;utilized&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01589"/>01589 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;continuous_space:&#32;Continuous&#32;constraints&#32;or&#32;ranges&#32;for&#32;the&#32;problem&#32;space.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01590"/>01590 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;discrete_space:&#32;Discrete&#32;constraints&#32;or&#32;options&#32;for&#32;the&#32;problem&#32;space.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01591"/>01591 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01592"/>01592 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01593"/>01593 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1afe014de535eeb9ece1e4cbf6ddf7f62d">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01594"/>01594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l01595"/>01595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l01596"/>01596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01597"/>01597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l01598"/>01598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike]]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01599"/>01599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;continuous_space&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01600"/>01600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;discrete_space&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01601"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1afe014de535eeb9ece1e4cbf6ddf7f62d">01601</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l01602"/>01602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01603"/>01603 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;CMA-ES&#32;optimizer&#32;with&#32;specific&#32;parameters&#32;for&#32;optimization&#32;tasks.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01604"/>01604 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01605"/>01605 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01606"/>01606 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;function&#32;evaluations&#32;allowed</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01607"/>01607 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;the&#32;optimization&#32;process.&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01608"/>01608 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Size&#32;of&#32;the&#32;population&#32;used&#32;in&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01609"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a1861ff82b2a8709da57f19cb75a483ce">01609</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;31.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01610"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a93cdf2e5be18ff6b6ba1de0fe2ca3faf">01610</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;or&#32;solution&#32;for&#32;the&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01611"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1abd9e72f56c6e5b5b1fbe57bd16691589">01611</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01612"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a9fd63506e11cbdde339d20f108f6669c">01612</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;Desired&#32;fitness&#32;value&#32;to&#32;stop&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01613"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a76927f85115786da386af8ac5a0620ce">01613</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;when&#32;achieved.&#32;Defaults&#32;to&#32;-np.inf.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01614"/>01614 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[Union[float,&#32;ArrayLike]]):&#32;Standard&#32;deviations&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01615"/>01615 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initial&#32;search&#32;distribution.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01616"/>01616 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;continuous_space:&#32;Continuous&#32;space&#32;constraints&#32;for&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01617"/>01617 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01618"/>01618 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;discrete_space:&#32;Discrete&#32;space&#32;constraints&#32;for&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01619"/>01619 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01620"/>01620 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;Number&#32;of&#32;parallel&#32;workers&#32;to&#32;be&#32;used&#32;during</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01621"/>01621 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01622"/>01622 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01623"/>01623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;cma_awm&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l01624"/>01624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a1861ff82b2a8709da57f19cb75a483ce">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l01625"/>01625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a93cdf2e5be18ff6b6ba1de0fe2ca3faf">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l01626"/>01626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1abd9e72f56c6e5b5b1fbe57bd16691589">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l01627"/>01627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a9fd63506e11cbdde339d20f108f6669c">sdevs</link>&#32;=&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l01628"/>01628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a76927f85115786da386af8ac5a0620ce">workers</link>&#32;=&#32;workers
<anchor xml:id="_optimizer_8py_source_1l01629"/>01629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.continuous_space&#32;=&#32;continuous_space
<anchor xml:id="_optimizer_8py_source_1l01630"/>01630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.discrete_space&#32;=&#32;discrete_space
<anchor xml:id="_optimizer_8py_source_1l01631"/>01631 
<anchor xml:id="_optimizer_8py_source_1l01632"/>01632 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01633"/>01633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l01634"/>01634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l01635"/>01635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01636"/>01636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike]]&#32;=&#32;0.3,&#32;
<anchor xml:id="_optimizer_8py_source_1l01637"/>01637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l01638"/>01638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l01639"/>01639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01640"/>01640 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;using&#32;the&#32;CMAwM&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01641"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a">01641</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01642"/>01642 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;uses&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;with&#32;Mirrored&#32;Sampling&#32;(CMAwM)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01643"/>01643 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;efficiently&#32;find&#32;the&#32;minimum&#32;of&#32;the&#32;given&#32;objective&#32;function&#32;within&#32;the&#32;defined</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01644"/>01644 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds.&#32;It&#32;supports&#32;continuous&#32;and&#32;discrete&#32;spaces&#32;and&#32;allows&#32;for&#32;parallel&#32;evaluation</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01645"/>01645 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;function&#32;calls&#32;when&#32;multiple&#32;workers&#32;are&#32;specified.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01646"/>01646 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01647"/>01647 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01648"/>01648 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01649"/>01649 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;takes&#32;an&#32;input&#32;array&#32;and&#32;returns&#32;a&#32;scalar&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01650"/>01650 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;within&#32;which&#32;to&#32;search&#32;for&#32;a&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01651"/>01651 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Must&#32;define&#32;lower&#32;(lb)&#32;and&#32;upper&#32;(ub)&#32;bounds&#32;for&#32;each&#32;dimension.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01652"/>01652 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike],&#32;optional):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01653"/>01653 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;not&#32;provided,&#32;defaults&#32;to&#32;the&#32;value&#32;defined&#32;in&#32;the&#32;class&#32;or&#32;is&#32;sampled&#32;uniformly</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01654"/>01654 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;within&#32;the&#32;bounds.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01655"/>01655 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[Union[float,&#32;ArrayLike]],&#32;optional):&#32;Standard&#32;deviations&#32;for&#32;initial</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01656"/>01656 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distribution&#32;of&#32;solutions.&#32;Either&#32;a&#32;float&#32;for&#32;uniform&#32;deviations&#32;or&#32;an&#32;array</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01657"/>01657 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matching&#32;the&#32;dimensionality&#32;of&#32;the&#32;problem.&#32;Defaults&#32;to&#32;0.3.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01658"/>01658 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator],&#32;optional):&#32;A&#32;random&#32;generator&#32;for&#32;sampling&#32;and&#32;reproducibility.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01659"/>01659 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;a&#32;predefined&#32;PCG64DXSM&#32;generator.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01660"/>01660 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(optional):&#32;Optional&#32;object&#32;or&#32;mechanism&#32;to&#32;store&#32;intermediate&#32;results;&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01661"/>01661 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specific&#32;usage&#32;of&#32;this&#32;parameter&#32;depends&#32;on&#32;the&#32;implementation.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01662"/>01662 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01663"/>01663 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01664"/>01664 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing&#32;the&#32;best&#32;solution&#32;found&#32;(as&#32;an&#32;array),</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01665"/>01665 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;corresponding&#32;fitness&#32;value&#32;(float),&#32;and&#32;the&#32;total&#32;number&#32;of&#32;evaluations&#32;performed&#32;(int).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01666"/>01666 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01667"/>01667 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01668"/>01668 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImportError:&#32;If&#32;the&#32;required&#32;&quot;cmaes&quot;&#32;library&#32;is&#32;not&#32;installed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01669"/>01669 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01670"/>01670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l01671"/>01671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">import</emphasis>&#32;cmaes
<anchor xml:id="_optimizer_8py_source_1l01672"/>01672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;ImportError&#32;<emphasis role="keyword">as</emphasis>&#32;e:
<anchor xml:id="_optimizer_8py_source_1l01673"/>01673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;ImportError(<emphasis role="stringliteral">&quot;Please&#32;install&#32;cmaes&#32;(pip&#32;install&#32;cmaes)&quot;</emphasis>)&#32;
<anchor xml:id="_optimizer_8py_source_1l01674"/>01674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01675"/>01675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l01676"/>01676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1abd9e72f56c6e5b5b1fbe57bd16691589">guess</link>
<anchor xml:id="_optimizer_8py_source_1l01677"/>01677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01678"/>01678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;rg.uniform(bounds.lb,&#32;bounds.ub)
<anchor xml:id="_optimizer_8py_source_1l01679"/>01679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seed&#32;=&#32;int(rg.uniform(0,&#32;2**32&#32;-&#32;1))
<anchor xml:id="_optimizer_8py_source_1l01680"/>01680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer&#32;=&#32;cmaes.CMAwM(mean=guess,&#32;sigma=np.mean(sdevs),&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01681"/>01681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;continuous_space=self.continuous_space,&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01682"/>01682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;discrete_space=self.discrete_space,&#32;
<anchor xml:id="_optimizer_8py_source_1l01683"/>01683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seed=seed,&#32;population_size=self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a1861ff82b2a8709da57f19cb75a483ce">popsize</link>)
<anchor xml:id="_optimizer_8py_source_1l01684"/>01684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_y&#32;=&#32;1E99
<anchor xml:id="_optimizer_8py_source_1l01685"/>01685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;0
<anchor xml:id="_optimizer_8py_source_1l01686"/>01686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;=&#32;serial(fun)&#32;<emphasis role="keywordflow">if</emphasis>&#32;(self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a76927f85115786da386af8ac5a0620ce">workers</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a76927f85115786da386af8ac5a0620ce">workers</link>&#32;&lt;=&#32;1)&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="_classfcmaes_1_1evaluator_1_1parallel">parallel</link>(fun,&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__lw_1a76927f85115786da386af8ac5a0620ce">workers</link>)&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01687"/>01687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;evals&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>&#32;<emphasis role="keywordflow">and</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;optimizer.should_stop():
<anchor xml:id="_optimizer_8py_source_1l01688"/>01688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;asks&#32;=&#32;[optimizer.ask()&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(optimizer.population_size)]
<anchor xml:id="_optimizer_8py_source_1l01689"/>01689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;fun([x[0]&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;asks])
<anchor xml:id="_optimizer_8py_source_1l01690"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm">01690</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions&#32;=&#32;[]
<anchor xml:id="_optimizer_8py_source_1l01691"/>01691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(optimizer.population_size):
<anchor xml:id="_optimizer_8py_source_1l01692"/>01692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;asks[i][1]
<anchor xml:id="_optimizer_8py_source_1l01693"/>01693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;ys[i]
<anchor xml:id="_optimizer_8py_source_1l01694"/>01694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions.append((x,&#32;y))
<anchor xml:id="_optimizer_8py_source_1l01695"/>01695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;best_y:
<anchor xml:id="_optimizer_8py_source_1l01696"/>01696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_y&#32;=&#32;y
<anchor xml:id="_optimizer_8py_source_1l01697"/>01697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_x&#32;=&#32;x
<anchor xml:id="_optimizer_8py_source_1l01698"/>01698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer.tell(solutions)
<anchor xml:id="_optimizer_8py_source_1l01699"/>01699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;+=&#32;optimizer.population_size&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01700"/>01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;isinstance(fun,&#32;parallel):
<anchor xml:id="_optimizer_8py_source_1l01701"/>01701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun.stop()
<anchor xml:id="_optimizer_8py_source_1l01702"/>01702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;best_x,&#32;best_y,&#32;evals
<anchor xml:id="_optimizer_8py_source_1l01703"/>01703 
<anchor xml:id="_optimizer_8py_source_1l01704"/>01704 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep">Cma_sep</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l01705"/>01705 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01706"/>01706 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Cma_sep&#32;is&#32;an&#32;optimizer&#32;class&#32;utilizing&#32;the&#32;CMA-ES&#32;(Covariance&#32;Matrix&#32;Adaptation</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01707"/>01707 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Evolution&#32;Strategy)&#32;in&#32;a&#32;separable&#32;form&#32;for&#32;high-dimensional&#32;optimization&#32;tasks.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01708"/>01708 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01709"/>01709 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;Cma_sep&#32;class&#32;enables&#32;optimization&#32;over&#32;a&#32;multivariate&#32;space&#32;efficiently&#32;using</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01710"/>01710 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;separable&#32;CMA-ES&#32;by&#32;supporting&#32;configurable&#32;parameters.&#32;It&#32;integrates&#32;easily</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01711"/>01711 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;with&#32;parallel&#32;or&#32;serial&#32;computation&#32;of&#32;fitness&#32;functions.&#32;Users&#32;can&#32;input&#32;a&#32;starting</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01712"/>01712 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;guess,&#32;specify&#32;standard&#32;deviations,&#32;and&#32;set&#32;termination&#32;criteria&#32;based&#32;on</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01713"/>01713 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;fitness&#32;or&#32;evaluations.&#32;This&#32;class&#32;is&#32;especially&#32;suitable&#32;for&#32;optimization&#32;problems</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01714"/>01714 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;where&#32;separable&#32;approximations&#32;are&#32;beneficial.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01715"/>01715 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01716"/>01716 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01717"/>01717 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;Population&#32;size&#32;for&#32;the&#32;optimization&#32;process.&#32;Higher&#32;values</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01718"/>01718 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;may&#32;provide&#32;better&#32;diversity&#32;but&#32;increase&#32;computation&#32;cost.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01719"/>01719 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Stop&#32;criterion&#32;for&#32;fitness.&#32;Optimization&#32;halts&#32;if&#32;a</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01720"/>01720 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solution&#32;achieves&#32;this&#32;fitness&#32;or&#32;better.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01721"/>01721 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(ArrayLike):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization&#32;process.&#32;If&#32;None,&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01722"/>01722 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm&#32;initializes&#32;randomly&#32;within&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01723"/>01723 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Union[float,&#32;ArrayLike]):&#32;Standard&#32;deviations&#32;for&#32;the&#32;initial&#32;search</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01724"/>01724 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distribution.&#32;Scalar&#32;or&#32;array&#32;to&#32;control&#32;exploration&#32;magnitude.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01725"/>01725 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(int):&#32;Number&#32;of&#32;parallel&#32;workers&#32;for&#32;evaluating&#32;the&#32;fitness</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01726"/>01726 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function.&#32;If&#32;None&#32;or&#32;&lt;=&#32;1,&#32;fitness&#32;evaluations&#32;are&#32;serialized.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01727"/>01727 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01728"/>01728 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01729"/>01729 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1a9c298a21af035fd7f8527648a4483673">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01730"/>01730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l01731"/>01731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_optimizer_8py_source_1l01732"/>01732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01733"/>01733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l01734"/>01734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike]]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01735"/>01735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l01736"/>01736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01737"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1a9c298a21af035fd7f8527648a4483673">01737</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;evolutionary&#32;optimization&#32;class&#32;with&#32;specific&#32;parameters&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01738"/>01738 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;with&#32;Separable&#32;Functions&#32;(CMA-SEP).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01739"/>01739 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01740"/>01740 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01741"/>01741 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;allowed</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01742"/>01742 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;the&#32;optimization&#32;process.&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01743"/>01743 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;The&#32;population&#32;size&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01744"/>01744 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;31.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01745"/>01745 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;The&#32;initial&#32;guess&#32;for&#32;the&#32;optimization.&#32;If</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01746"/>01746 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None,&#32;it&#32;must&#32;be&#32;provided&#32;during&#32;optimization&#32;setup.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01747"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1adfed8224a61810107b7df8908a1872cb">01747</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;The&#32;fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01748"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1a9244263d6e7b2315ffa2f09b7fde5aac">01748</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stops.&#32;If&#32;-np.inf,&#32;optimization&#32;will&#32;not&#32;stop&#32;based&#32;on&#32;fitness.&#32;Defaults</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01749"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1adcd113e9905647601dc5c7539a6eb4cb">01749</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;-np.inf.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01750"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1a03b189caddedc1bdd249597786622c12">01750</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[Union[float,&#32;ArrayLike]]):&#32;The&#32;standard&#32;deviations&#32;used&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01751"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1ab41fe95321101071e337afb74b3fd7d6">01751</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampling&#32;during&#32;the&#32;optimization&#32;process.&#32;If&#32;None,&#32;a&#32;default&#32;set&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01752"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1a3393db059ecb730f3016c1c33287324e">01752</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;standard&#32;deviations&#32;should&#32;be&#32;used&#32;or&#32;initialized&#32;later.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01753"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1af411add911152d8b4c3d25369f787955">01753</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;worker&#32;threads&#32;or&#32;processes&#32;to&#32;use</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01754"/>01754 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;parallelization.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01755"/>01755 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01756"/>01756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;cma_sep&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l01757"/>01757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1adfed8224a61810107b7df8908a1872cb">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l01758"/>01758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1a9244263d6e7b2315ffa2f09b7fde5aac">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l01759"/>01759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1adcd113e9905647601dc5c7539a6eb4cb">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l01760"/>01760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1a03b189caddedc1bdd249597786622c12">sdevs</link>&#32;=&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l01761"/>01761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1ab41fe95321101071e337afb74b3fd7d6">workers</link>&#32;=&#32;workers
<anchor xml:id="_optimizer_8py_source_1l01762"/>01762 
<anchor xml:id="_optimizer_8py_source_1l01763"/>01763 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01764"/>01764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l01765"/>01765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l01766"/>01766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01767"/>01767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[Union[float,&#32;ArrayLike]]&#32;=&#32;0.3,&#32;
<anchor xml:id="_optimizer_8py_source_1l01768"/>01768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l01769"/>01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l01770"/>01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01771"/>01771 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;using&#32;the&#32;CMA-ES&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01772"/>01772 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01773"/>01773 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;leverages&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy&#32;(CMA-ES)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01774"/>01774 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;optimize&#32;the&#32;given&#32;function,&#32;which&#32;is&#32;useful&#32;for&#32;solving&#32;non-linear&#32;and&#32;non-convex</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01775"/>01775 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;problems.&#32;It&#32;supports&#32;bounds&#32;constraints&#32;and&#32;parallel&#32;execution&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01776"/>01776 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;accelerate&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01777"/>01777 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01778"/>01778 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01779"/>01779 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.&#32;It&#32;takes</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01780"/>01780 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;input&#32;array&#32;and&#32;outputs&#32;a&#32;float&#32;representing&#32;the&#32;function&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01781"/>01781 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;parameter&#32;bounds&#32;for&#32;the&#32;optimization.&#32;Must&#32;be</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01782"/>01782 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;type&#32;`Bounds`&#32;with&#32;lower&#32;and&#32;upper&#32;limits&#32;defined.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01783"/>01783 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Optional&#32;initial&#32;guess&#32;for&#32;the&#32;starting&#32;point&#32;of&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01784"/>01784 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.&#32;If&#32;not&#32;provided,&#32;it&#32;defaults&#32;to&#32;`self.guess`&#32;or&#32;samples&#32;randomly</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01785"/>01785 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;the&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01786"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0">01786</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[Union[float,&#32;ArrayLike]]):&#32;Standard&#32;deviation(s)&#32;for&#32;the&#32;initial</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01787"/>01787 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;search&#32;distribution.&#32;Can&#32;be&#32;a&#32;float&#32;or&#32;an&#32;array-like&#32;structure.&#32;Default&#32;is&#32;0.3.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01788"/>01788 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;Optional&#32;random&#32;number&#32;generator&#32;to&#32;ensure&#32;consistency</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01789"/>01789 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;sampling.&#32;Defaults&#32;to&#32;a&#32;Generator&#32;instance&#32;with&#32;a&#32;PCG64DXSM&#32;source.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01790"/>01790 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(Optional):&#32;Unspecified&#32;storage&#32;parameter&#32;for&#32;additional&#32;usage&#32;or&#32;output.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01791"/>01791 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01792"/>01792 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01793"/>01793 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01794"/>01794 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;np.ndarray:&#32;The&#32;best&#32;solution&#32;vector&#32;found&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01795"/>01795 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;float:&#32;The&#32;corresponding&#32;minimum&#32;function&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01796"/>01796 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;int:&#32;The&#32;total&#32;number&#32;of&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01797"/>01797 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01798"/>01798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l01799"/>01799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">import</emphasis>&#32;cmaes
<anchor xml:id="_optimizer_8py_source_1l01800"/>01800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;ImportError&#32;<emphasis role="keyword">as</emphasis>&#32;e:
<anchor xml:id="_optimizer_8py_source_1l01801"/>01801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;ImportError(<emphasis role="stringliteral">&quot;Please&#32;install&#32;cmaes&#32;(pip&#32;install&#32;cmaes)&quot;</emphasis>)&#32;
<anchor xml:id="_optimizer_8py_source_1l01802"/>01802 
<anchor xml:id="_optimizer_8py_source_1l01803"/>01803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l01804"/>01804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1adcd113e9905647601dc5c7539a6eb4cb">guess</link>
<anchor xml:id="_optimizer_8py_source_1l01805"/>01805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01806"/>01806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;rg.uniform(bounds.lb,&#32;bounds.ub)
<anchor xml:id="_optimizer_8py_source_1l01807"/>01807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bds&#32;=&#32;np.array([t&#32;<emphasis role="keywordflow">for</emphasis>&#32;t&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(bounds.lb,&#32;bounds.ub)])
<anchor xml:id="_optimizer_8py_source_1l01808"/>01808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seed&#32;=&#32;int(rg.uniform(0,&#32;2**32&#32;-&#32;1))
<anchor xml:id="_optimizer_8py_source_1l01809"/>01809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer&#32;=&#32;cmaes.SepCMA(mean=guess,&#32;sigma=np.mean(sdevs),&#32;bounds=bds,&#32;seed=seed,&#32;population_size=self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1adfed8224a61810107b7df8908a1872cb">popsize</link>)
<anchor xml:id="_optimizer_8py_source_1l01810"/>01810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_y&#32;=&#32;np.inf
<anchor xml:id="_optimizer_8py_source_1l01811"/>01811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;0
<anchor xml:id="_optimizer_8py_source_1l01812"/>01812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;=&#32;serial(fun)&#32;<emphasis role="keywordflow">if</emphasis>&#32;(self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1ab41fe95321101071e337afb74b3fd7d6">workers</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1ab41fe95321101071e337afb74b3fd7d6">workers</link>&#32;&lt;=&#32;1)&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="_classfcmaes_1_1evaluator_1_1parallel">parallel</link>(fun,&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__awm_1ab41fe95321101071e337afb74b3fd7d6">workers</link>)&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01813"/>01813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;evals&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>&#32;<emphasis role="keywordflow">and</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;optimizer.should_stop():
<anchor xml:id="_optimizer_8py_source_1l01814"/>01814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;[optimizer.ask()&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(optimizer.population_size)]
<anchor xml:id="_optimizer_8py_source_1l01815"/>01815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;fun(xs)
<anchor xml:id="_optimizer_8py_source_1l01816"/>01816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions&#32;=&#32;[]
<anchor xml:id="_optimizer_8py_source_1l01817"/>01817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(optimizer.population_size):
<anchor xml:id="_optimizer_8py_source_1l01818"/>01818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;xs[i]
<anchor xml:id="_optimizer_8py_source_1l01819"/>01819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;ys[i]
<anchor xml:id="_optimizer_8py_source_1l01820"/>01820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions.append((x,&#32;y))
<anchor xml:id="_optimizer_8py_source_1l01821"/>01821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;best_y:
<anchor xml:id="_optimizer_8py_source_1l01822"/>01822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_y&#32;=&#32;y
<anchor xml:id="_optimizer_8py_source_1l01823"/>01823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_x&#32;=&#32;x
<anchor xml:id="_optimizer_8py_source_1l01824"/>01824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer.tell(solutions)
<anchor xml:id="_optimizer_8py_source_1l01825"/>01825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;+=&#32;optimizer.population_size&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01826"/>01826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;isinstance(fun,&#32;parallel):
<anchor xml:id="_optimizer_8py_source_1l01827"/>01827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun.stop()
<anchor xml:id="_optimizer_8py_source_1l01828"/>01828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;best_x,&#32;best_y,&#32;evals
<anchor xml:id="_optimizer_8py_source_1l01829"/>01829 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01830"/>01830 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp">De_cpp</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l01831"/>01831 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01832"/>01832 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Differential&#32;Evolution&#32;optimizer&#32;using&#32;C++&#32;backend.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01833"/>01833 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01834"/>01834 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;implements&#32;a&#32;Differential&#32;Evolution&#32;(DE)&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01835"/>01835 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;It&#32;interfaces&#32;with&#32;a&#32;C++&#32;backend&#32;to&#32;efficiently&#32;optimize&#32;a&#32;given&#32;objective</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01836"/>01836 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;function&#32;within&#32;specified&#32;boundaries.&#32;The&#32;optimizer&#32;supports&#32;several</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01837"/>01837 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;parameters&#32;such&#32;as&#32;population&#32;size,&#32;crossover&#32;rate,&#32;mutation&#32;factor,&#32;and</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01838"/>01838 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;others&#32;to&#32;control&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01839"/>01839 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01840"/>01840 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01841"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep">01841</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int,&#32;optional):&#32;Size&#32;of&#32;the&#32;population&#32;for&#32;the&#32;DE&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01842"/>01842 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(ArrayLike,&#32;optional):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization&#32;variables.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01843"/>01843 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Fitness&#32;value&#32;at&#32;which&#32;optimization&#32;will&#32;stop&#32;early.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01844"/>01844 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep&#32;(int):&#32;Number&#32;of&#32;top&#32;solutions&#32;to&#32;retain&#32;during&#32;certain&#32;steps.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01845"/>01845 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f&#32;(float):&#32;Differential&#32;weight&#32;or&#32;mutation&#32;factor&#32;in&#32;the&#32;DE&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01846"/>01846 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr&#32;(float):&#32;Crossover&#32;probability&#32;in&#32;the&#32;DE&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01847"/>01847 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints&#32;(ArrayLike,&#32;optional):&#32;Specifies&#32;which&#32;variables&#32;are&#32;integers,&#32;if&#32;any.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01848"/>01848 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(int,&#32;optional):&#32;Number&#32;of&#32;workers&#32;for&#32;parallel&#32;evaluation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01849"/>01849 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01850"/>01850 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01851"/>01851 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a77bae4af713b31cc22068d9a219e67e1">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01852"/>01852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l01853"/>01853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01854"/>01854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01855"/>01855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l01856"/>01856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep:&#32;Optional[int]&#32;=&#32;200,&#32;
<anchor xml:id="_optimizer_8py_source_1l01857"/>01857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f:&#32;Optional[float]&#32;=&#32;0.5,&#32;
<anchor xml:id="_optimizer_8py_source_1l01858"/>01858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr:&#32;Optional[float]&#32;=&#32;0.9,&#32;
<anchor xml:id="_optimizer_8py_source_1l01859"/>01859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01860"/>01860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l01861"/>01861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01862"/>01862 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;differential&#32;evolution&#32;optimizer&#32;with&#32;the&#32;given&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01863"/>01863 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01864"/>01864 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;optimizer&#32;adapts&#32;the&#32;DE/rand/1/bin&#32;strategy&#32;and&#32;performs&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01865"/>01865 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;by&#32;iteratively&#32;improving&#32;the&#32;candidate&#32;solutions&#32;based&#32;on&#32;differential</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01866"/>01866 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evolution&#32;algorithm&#32;parameters&#32;and&#32;constraints.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01867"/>01867 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01868"/>01868 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01869"/>01869 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional;&#32;Maximum&#32;number&#32;of&#32;function&#32;evaluations</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01870"/>01870 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;perform&#32;before&#32;terminating.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01871"/>01871 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional;&#32;Population&#32;size&#32;of&#32;the&#32;candidate&#32;solutions.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01872"/>01872 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional;&#32;Initial&#32;guess&#32;or&#32;starting&#32;point&#32;for&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01873"/>01873 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional;&#32;If&#32;achieved,&#32;optimization&#32;stops&#32;early.&#32;Defaults</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01874"/>01874 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01875"/>01875 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep:&#32;Optional;&#32;Number&#32;of&#32;top&#32;individuals&#32;to&#32;retain&#32;for&#32;the&#32;next</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01876"/>01876 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;generation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01877"/>01877 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f:&#32;Optional;&#32;Differential&#32;weight&#32;factor&#32;for&#32;scaling&#32;the&#32;mutation</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01878"/>01878 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector.&#32;Defaults&#32;to&#32;0.5.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01879"/>01879 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr:&#32;Optional;&#32;Crossover&#32;probability&#32;for&#32;recombination.&#32;Defaults</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01880"/>01880 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;0.9.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01881"/>01881 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;Optional;&#32;Specifies&#32;whether&#32;the&#32;variables&#32;being&#32;optimized</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01882"/>01882 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;should&#32;be&#32;treated&#32;as&#32;integers&#32;or&#32;not.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01883"/>01883 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional;&#32;Number&#32;of&#32;workers&#32;for&#32;parallel&#32;processing&#32;during</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01884"/>01884 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01885"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a77bae4af713b31cc22068d9a219e67e1">01885</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01886"/>01886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;de&#32;cpp&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l01887"/>01887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1abddd49200f8a013f6fb55ce8698dd111">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l01888"/>01888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a4357690ffebc7f4f1467a31db2371194">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l01889"/>01889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a6bcb1fd525cca55a937381532eaab1d8">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l01890"/>01890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.keep&#32;=&#32;keep
<anchor xml:id="_optimizer_8py_source_1l01891"/>01891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.f&#32;=&#32;f
<anchor xml:id="_optimizer_8py_source_1l01892"/>01892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.cr&#32;=&#32;cr
<anchor xml:id="_optimizer_8py_source_1l01893"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1abddd49200f8a013f6fb55ce8698dd111">01893</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.ints&#32;=&#32;ints
<anchor xml:id="_optimizer_8py_source_1l01894"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a6bcb1fd525cca55a937381532eaab1d8">01894</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a497ac6bf34a3b0d86ced9bf82b00bb0e">workers</link>&#32;=&#32;workers
<anchor xml:id="_optimizer_8py_source_1l01895"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a4357690ffebc7f4f1467a31db2371194">01895</link> 
<anchor xml:id="_optimizer_8py_source_1l01896"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a5462e127f44c3e90a14dd8a7e4e39c78">01896</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01897"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a497ac6bf34a3b0d86ced9bf82b00bb0e">01897</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l01898"/>01898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l01899"/>01899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01900"/>01900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01901"/>01901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l01902"/>01902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l01903"/>01903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01904"/>01904 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;using&#32;a&#32;differential&#32;evolution&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01905"/>01905 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm.&#32;This&#32;method&#32;attempts&#32;to&#32;find&#32;the&#32;global&#32;minimum&#32;of&#32;the&#32;objective</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01906"/>01906 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;within&#32;a&#32;bounded&#32;search&#32;space.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01907"/>01907 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01908"/>01908 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01909"/>01909 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;Objective&#32;function&#32;to&#32;be&#32;minimized.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01910"/>01910 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;takes&#32;an&#32;array-like&#32;input&#32;and&#32;returns&#32;a&#32;float&#32;as&#32;the&#32;function&apos;s</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01911"/>01911 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;at&#32;that&#32;input&#32;point.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01912"/>01912 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;An&#32;optional&#32;boundary&#32;specification&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01913"/>01913 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.&#32;Defines&#32;the&#32;search&#32;space&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01914"/>01914 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization&#32;algorithm,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01915"/>01915 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;provided.&#32;If&#32;not&#32;supplied,&#32;fallback&#32;to&#32;the&#32;default&#32;guess.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01916"/>01916 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Standard&#32;deviations&#32;for&#32;the&#32;process.&#32;This</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01917"/>01917 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameter&#32;is&#32;ignored&#32;in&#32;the&#32;implementation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01918"/>01918 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;Random&#32;number&#32;generator&#32;to&#32;be&#32;used&#32;during&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01919"/>01919 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.&#32;Defaults&#32;to&#32;Generator(PCG64DXSM()).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01920"/>01920 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;An&#32;optional&#32;parameter&#32;to&#32;store&#32;additional&#32;computation&#32;details,&#32;if</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01921"/>01921 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;necessary.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01922"/>01922 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01923"/>01923 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01924"/>01924 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[numpy.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing&#32;the&#32;optimized&#32;parameter&#32;set,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01925"/>01925 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;objective&#32;function&apos;s&#32;value&#32;at&#32;the&#32;optimized&#32;parameters&#32;(fitness),</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01926"/>01926 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;total&#32;number&#32;of&#32;function&#32;evaluations&#32;performed&#32;during&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01927"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb">01927</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01928"/>01928 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01929"/>01929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l01930"/>01930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a4357690ffebc7f4f1467a31db2371194">guess</link>
<anchor xml:id="_optimizer_8py_source_1l01931"/>01931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01932"/>01932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;decpp.minimize(fun,&#32;<emphasis role="keywordtype">None</emphasis>,&#32;bounds,&#32;
<anchor xml:id="_optimizer_8py_source_1l01933"/>01933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize=self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1abddd49200f8a013f6fb55ce8698dd111">popsize</link>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01934"/>01934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l01935"/>01935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a6bcb1fd525cca55a937381532eaab1d8">stop_fitness</link>,
<anchor xml:id="_optimizer_8py_source_1l01936"/>01936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep&#32;=&#32;self.keep,&#32;f&#32;=&#32;self.f,&#32;cr&#32;=&#32;self.cr,&#32;ints=self.ints,
<anchor xml:id="_optimizer_8py_source_1l01937"/>01937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=rg,&#32;runid&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l01938"/>01938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a497ac6bf34a3b0d86ced9bf82b00bb0e">workers</link>,&#32;x0&#32;=&#32;guess)
<anchor xml:id="_optimizer_8py_source_1l01939"/>01939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l01940"/>01940 
<anchor xml:id="_optimizer_8py_source_1l01941"/>01941 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_de__python">De_python</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l01942"/>01942 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01943"/>01943 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Differential&#32;Evolution&#32;(DE)&#32;optimizer&#32;implemented&#32;in&#32;Python.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01944"/>01944 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01945"/>01945 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;provides&#32;an&#32;implementation&#32;of&#32;the&#32;Differential&#32;Evolution&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01946"/>01946 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;algorithm.&#32;DE&#32;is&#32;a&#32;stochastic,&#32;population-based&#32;optimization&#32;algorithm&#32;suitable</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01947"/>01947 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;for&#32;solving&#32;complex&#32;optimization&#32;problems,&#32;often&#32;used&#32;when&#32;no&#32;gradient&#32;information</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01948"/>01948 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;is&#32;available.&#32;This&#32;implementation&#32;supports&#32;parallelism&#32;and&#32;configurable&#32;constraints.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01949"/>01949 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01950"/>01950 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01951"/>01951 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int,&#32;optional):&#32;The&#32;population&#32;size,&#32;i.e.,&#32;the&#32;number&#32;of&#32;candidate</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01952"/>01952 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions&#32;evaluated&#32;in&#32;each&#32;generation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01953"/>01953 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float,&#32;optional):&#32;The&#32;fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01954"/>01954 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stops&#32;if&#32;reached.&#32;Default&#32;is&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01955"/>01955 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep&#32;(int,&#32;optional):&#32;The&#32;number&#32;of&#32;best-performing&#32;individuals&#32;retained</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01956"/>01956 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;between&#32;generations&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01957"/>01957 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f&#32;(float,&#32;optional):&#32;The&#32;mutation&#32;factor,&#32;controlling&#32;the&#32;amplification&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01958"/>01958 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;differential&#32;variations.&#32;Ranges&#32;typically&#32;between&#32;0&#32;and&#32;2.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01959"/>01959 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr&#32;(float,&#32;optional):&#32;The&#32;crossover&#32;probability,&#32;indicating&#32;the&#32;probability</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01960"/>01960 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;recombination.&#32;Ranges&#32;typically&#32;between&#32;0&#32;and&#32;1.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01961"/>01961 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints&#32;(ArrayLike,&#32;optional):&#32;Indices&#32;indicating&#32;which&#32;variables&#32;to&#32;constrain</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01962"/>01962 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;integer&#32;values.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01963"/>01963 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(int,&#32;optional):&#32;The&#32;number&#32;of&#32;worker&#32;threads&#32;used&#32;for&#32;parallel</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01964"/>01964 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluation&#32;of&#32;the&#32;population.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01965"/>01965 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01966"/>01966 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l01967"/>01967 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__sep_1a77bae4af713b31cc22068d9a219e67e1">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l01968"/>01968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l01969"/>01969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_optimizer_8py_source_1l01970"/>01970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l01971"/>01971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep:&#32;Optional[int]&#32;=&#32;200,&#32;
<anchor xml:id="_optimizer_8py_source_1l01972"/>01972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f:&#32;Optional[float]&#32;=&#32;0.5,&#32;
<anchor xml:id="_optimizer_8py_source_1l01973"/>01973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr:&#32;Optional[float]&#32;=&#32;0.9,&#32;
<anchor xml:id="_optimizer_8py_source_1l01974"/>01974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l01975"/>01975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l01976"/>01976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01977"/>01977 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;instance&#32;of&#32;the&#32;Differential&#32;Evolution&#32;(DE)&#32;optimizer&#32;with&#32;the&#32;given&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01978"/>01978 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01979"/>01979 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;class&#32;is&#32;a&#32;specialized&#32;optimizer&#32;extending&#32;the&#32;base&#32;`Optimizer`&#32;functionality&#32;and&#32;is&#32;used</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01980"/>01980 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;perform&#32;optimization&#32;using&#32;the&#32;DE&#32;algorithm.&#32;The&#32;parameters&#32;configure&#32;the&#32;specifics&#32;of&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01981"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp">01981</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process&#32;such&#32;as&#32;population&#32;size,&#32;mutation&#32;and&#32;crossover&#32;probabilities,&#32;stopping</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01982"/>01982 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;criteria,&#32;and&#32;other&#32;optional&#32;configurations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01983"/>01983 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01984"/>01984 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01985"/>01985 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;to&#32;perform&#32;during&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01986"/>01986 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;Default&#32;is&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01987"/>01987 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Size&#32;of&#32;the&#32;population&#32;used&#32;in&#32;the&#32;DE&#32;algorithm.&#32;If&#32;not&#32;provided,&#32;it&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01988"/>01988 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;automatically&#32;determined&#32;based&#32;on&#32;the&#32;problem&#32;configuration.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01989"/>01989 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;The&#32;threshold&#32;for&#32;the&#32;fitness&#32;value&#32;to&#32;stop&#32;the&#32;optimization&#32;run.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01990"/>01990 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;-np.inf,&#32;meaning&#32;the&#32;optimization&#32;will&#32;continue&#32;until&#32;max&#32;evaluations&#32;are&#32;exhausted.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01991"/>01991 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep&#32;(Optional[int]):&#32;Number&#32;of&#32;best&#32;solutions&#32;to&#32;retain&#32;between&#32;iterations.&#32;Default&#32;is&#32;200.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01992"/>01992 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f&#32;(Optional[float]):&#32;Differential&#32;weight&#32;used&#32;in&#32;the&#32;mutation&#32;process.&#32;Default&#32;is&#32;0.5.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01993"/>01993 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr&#32;(Optional[float]):&#32;Crossover&#32;rate&#32;probability&#32;used&#32;in&#32;the&#32;recombination&#32;step.&#32;Default&#32;is&#32;0.9.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01994"/>01994 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints&#32;(Optional[ArrayLike]):&#32;Array-like&#32;object&#32;specifying&#32;whether&#32;certain&#32;decision&#32;variables&#32;in</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01995"/>01995 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimization&#32;problem&#32;should&#32;be&#32;treated&#32;as&#32;integers.&#32;Default&#32;is&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01996"/>01996 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;Number&#32;of&#32;parallel&#32;workers&#32;or&#32;threads&#32;used&#32;for&#32;computation.&#32;Default&#32;is&#32;None,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01997"/>01997 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;which&#32;uses&#32;the&#32;system&apos;s&#32;available&#32;resources.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l01998"/>01998 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l01999"/>01999 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02000"/>02000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;de&#32;py&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l02001"/>02001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1aeee0354a9a88e72a8de9a14518e0b631">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l02002"/>02002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1ac215b9338b1e36507d52f271011f2623">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l02003"/>02003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1ac6682fdfdc8f6b55907437b02e679657">keep</link>&#32;=&#32;keep
<anchor xml:id="_optimizer_8py_source_1l02004"/>02004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a59179389fcc9cb26537457c5330ffd49">f</link>&#32;=&#32;f
<anchor xml:id="_optimizer_8py_source_1l02005"/>02005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a9148bc8b53eac219089f0ba26797748a">cr</link>&#32;=&#32;cr
<anchor xml:id="_optimizer_8py_source_1l02006"/>02006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1afed059c9c4f9fbd12aca70b2d807bc26">ints</link>&#32;=&#32;ints
<anchor xml:id="_optimizer_8py_source_1l02007"/>02007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a3b20c4a11064d97a46e01e0fa1212497">workers</link>&#32;=&#32;workers
<anchor xml:id="_optimizer_8py_source_1l02008"/>02008 
<anchor xml:id="_optimizer_8py_source_1l02009"/>02009 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02010"/>02010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02011"/>02011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02012"/>02012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02013"/>02013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02014"/>02014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02015"/>02015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02016"/>02016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02017"/>02017 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;the&#32;given&#32;objective&#32;function&#32;within&#32;the&#32;specified&#32;bounds&#32;using</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02018"/>02018 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;differential&#32;evolution&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02019"/>02019 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02020"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a1f80db786b4efa5e8e7b87f372f57cf9">02020</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;uses&#32;a&#32;differential&#32;evolution&#32;optimization&#32;algorithm&#32;to&#32;find</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02021"/>02021 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;minimum&#32;of&#32;a&#32;given&#32;objective&#32;function.&#32;Users&#32;can&#32;specify&#32;initial</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02022"/>02022 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters&#32;such&#32;as&#32;bounds,&#32;population&#32;size,&#32;and&#32;maximum&#32;evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02023"/>02023 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02024"/>02024 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02025"/>02025 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.&#32;This</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02026"/>02026 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;should&#32;accept&#32;an&#32;array-like&#32;input&#32;and&#32;return&#32;a&#32;float.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02027"/>02027 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;within&#32;which&#32;the&#32;optimization&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02028"/>02028 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;performed.&#32;Each&#32;dimension&#32;should&#32;have&#32;a&#32;lower&#32;and&#32;upper&#32;bound&#32;defined.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02029"/>02029 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;An&#32;optional&#32;initial&#32;guess&#32;for&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02030"/>02030 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;A&#32;random&#32;number&#32;generator&#32;to&#32;control&#32;stochastic</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02031"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1aeee0354a9a88e72a8de9a14518e0b631">02031</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;elements&#32;of&#32;the&#32;optimization.&#32;Default&#32;is&#32;Generator(PCG64DXSM()).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02032"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a8a7c5c4f984128d0bf719d2042b5b6e4">02032</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;A&#32;mechanism&#32;to&#32;store&#32;intermediate&#32;results&#32;or&#32;progress&#32;during&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02033"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1ac215b9338b1e36507d52f271011f2623">02033</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.&#32;This&#32;is&#32;passed&#32;directly&#32;but&#32;its&#32;internal&#32;behavior</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02034"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1ac6682fdfdc8f6b55907437b02e679657">02034</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;not&#32;described&#32;here.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02035"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a59179389fcc9cb26537457c5330ffd49">02035</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02036"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a9148bc8b53eac219089f0ba26797748a">02036</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02037"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1afed059c9c4f9fbd12aca70b2d807bc26">02037</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02038"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a3b20c4a11064d97a46e01e0fa1212497">02038</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;best&#32;set&#32;of&#32;parameters&#32;found&#32;during&#32;optimization&#32;(np.ndarray).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02039"/>02039 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;objective&#32;function&#32;value&#32;corresponding&#32;to&#32;the&#32;best&#32;parameters</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02040"/>02040 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(float).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02041"/>02041 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;number&#32;of&#32;function&#32;evaluations&#32;performed&#32;(int).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02042"/>02042 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02043"/>02043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;de.minimize(fun,&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02044"/>02044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds,&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1aeee0354a9a88e72a8de9a14518e0b631">popsize</link>,&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store),
<anchor xml:id="_optimizer_8py_source_1l02045"/>02045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1ac215b9338b1e36507d52f271011f2623">stop_fitness</link>,
<anchor xml:id="_optimizer_8py_source_1l02046"/>02046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1ac6682fdfdc8f6b55907437b02e679657">keep</link>,&#32;f&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a59179389fcc9cb26537457c5330ffd49">f</link>,&#32;cr&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a9148bc8b53eac219089f0ba26797748a">cr</link>,&#32;ints=self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1afed059c9c4f9fbd12aca70b2d807bc26">ints</link>,
<anchor xml:id="_optimizer_8py_source_1l02047"/>02047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=rg,&#32;workers&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a3b20c4a11064d97a46e01e0fa1212497">workers</link>)
<anchor xml:id="_optimizer_8py_source_1l02048"/>02048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l02049"/>02049 
<anchor xml:id="_optimizer_8py_source_1l02050"/>02050 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell">Cma_ask_tell</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02051"/>02051 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;CMA-ES&#32;Ask-Tell&#32;based&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02052"/>02052 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02053"/>02053 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;implements&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02054"/>02054 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;(CMA-ES)&#32;using&#32;an&#32;ask-tell&#32;interface&#32;for&#32;optimization&#32;tasks.&#32;It&#32;is&#32;designed</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02055"/>02055 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;minimize&#32;objective&#32;functions&#32;over&#32;specified&#32;domains&#32;with&#32;control&#32;over</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02056"/>02056 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;population&#32;size&#32;and&#32;stopping&#32;criteria.&#32;The&#32;optimizer&#32;maintains&#32;an&#32;iterative</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02057"/>02057 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;mechanism&#32;for&#32;asking&#32;candidate&#32;solutions,&#32;evaluating&#32;their&#32;quality,&#32;and</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02058"/>02058 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;updating&#32;its&#32;models&#32;to&#32;converge&#32;to&#32;an&#32;optimal&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02059"/>02059 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02060"/>02060 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;optimizer&#32;integrates&#32;seamlessly&#32;with&#32;the&#32;CMA-ES&#32;library&#32;and&#32;allows&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02061"/>02061 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;various&#32;customization&#32;options&#32;like&#32;user-defined&#32;initial&#32;guesses,&#32;population</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02062"/>02062 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;sizes,&#32;and&#32;stopping&#32;fitness.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02063"/>02063 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02064"/>02064 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02065"/>02065 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;Size&#32;of&#32;the&#32;population&#32;used&#32;in&#32;the&#32;CMA-ES&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02066"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c">02066</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Threshold&#32;for&#32;stopping&#32;if&#32;the&#32;fitness&#32;value</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02067"/>02067 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reaches&#32;or&#32;exceeds&#32;this&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02068"/>02068 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02069"/>02069 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02070"/>02070 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Standard&#32;deviation&#32;for&#32;the&#32;initial&#32;sampling.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02071"/>02071 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;None,&#32;defaults&#32;are&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02072"/>02072 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02073"/>02073 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02074"/>02074 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a1f80db786b4efa5e8e7b87f372f57cf9">__init__</link>(self,&#32;max_evaluations=50000,
<anchor xml:id="_optimizer_8py_source_1l02075"/>02075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;=&#32;31,&#32;guess=None,&#32;stop_fitness&#32;=&#32;-np.inf,&#32;sdevs&#32;=&#32;None):
<anchor xml:id="_optimizer_8py_source_1l02076"/>02076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02077"/>02077 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;CMA-ES&#32;optimizer&#32;with&#32;specified&#32;configurations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02078"/>02078 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02079"/>02079 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;constructor&#32;initializes&#32;an&#32;instance&#32;of&#32;the&#32;CMA-ES&#32;optimizer&#32;with&#32;user-defined</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02080"/>02080 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;default&#32;values.&#32;It&#32;sets&#32;the&#32;number&#32;of&#32;maximum&#32;evaluations,&#32;population&#32;size,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02081"/>02081 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initial&#32;guess,&#32;stop&#32;fitness&#32;value,&#32;and&#32;standard&#32;deviations&#32;for&#32;the&#32;optimizer&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02082"/>02082 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;as&#32;per&#32;the&#32;provided&#32;or&#32;default&#32;arguments.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02083"/>02083 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02084"/>02084 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02085"/>02085 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;int</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02086"/>02086 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;the&#32;optimizer&#32;is&#32;allowed&#32;to&#32;perform.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02087"/>02087 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;int</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02088"/>02088 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;population&#32;size&#32;indicating&#32;the&#32;number&#32;of&#32;individuals&#32;per&#32;generation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02089"/>02089 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[float]</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02090"/>02090 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;An&#32;optional&#32;initial&#32;guess&#32;for&#32;the&#32;initial&#32;search&#32;point.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02091"/>02091 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;float</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02092"/>02092 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;stop&#32;criterion&#32;based&#32;on&#32;achieving&#32;the&#32;target&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02093"/>02093 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02094"/>02094 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;An&#32;optional&#32;standard&#32;deviation&#32;array&#32;for&#32;initializing&#32;the&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02095"/>02095 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02096"/>02096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;cma&#32;at&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l02097"/>02097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1aeee0354a9a88e72a8de9a14518e0b631">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l02098"/>02098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1ac215b9338b1e36507d52f271011f2623">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l02099"/>02099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a8a7c5c4f984128d0bf719d2042b5b6e4">guess</link>&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l02100"/>02100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.sdevs&#32;=&#32;sdevs
<anchor xml:id="_optimizer_8py_source_1l02101"/>02101 
<anchor xml:id="_optimizer_8py_source_1l02102"/>02102 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02103"/>02103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02104"/>02104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02105"/>02105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02106"/>02106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02107"/>02107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02108"/>02108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02109"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__python">02109</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02110"/>02110 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;within&#32;specified&#32;bounds&#32;using&#32;CMA-ES&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02111"/>02111 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02112"/>02112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;applies&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy&#32;(CMA-ES)&#32;to&#32;find</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02113"/>02113 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;minimum&#32;of&#32;a&#32;given&#32;objective&#32;function.&#32;The&#32;optimization&#32;process&#32;involves&#32;multiple</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02114"/>02114 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iterations&#32;where&#32;candidate&#32;solutions&#32;are&#32;generated,&#32;evaluated,&#32;and&#32;subsequently&#32;refined</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02115"/>02115 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;until&#32;a&#32;stopping&#32;criterion&#32;is&#32;met.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02116"/>02116 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02117"/>02117 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02118"/>02118 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.&#32;This</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02119"/>02119 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;should&#32;take&#32;an&#32;array-like&#32;input&#32;and&#32;return&#32;a&#32;scalar&#32;value&#32;as&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02120"/>02120 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&apos;s&#32;output.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02121"/>02121 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;boundary&#32;constraints&#32;for&#32;the&#32;optimization.&#32;Specifies</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02122"/>02122 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;lower&#32;and&#32;upper&#32;bounds&#32;for&#32;the&#32;input&#32;values.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02123"/>02123 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike],&#32;optional):&#32;An&#32;initial&#32;guess&#32;for&#32;the&#32;solution.&#32;If&#32;not</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02124"/>02124 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specified,&#32;the&#32;optimizer&#32;will&#32;choose&#32;an&#32;initial&#32;value&#32;automatically.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02125"/>02125 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float],&#32;optional):&#32;Standard&#32;deviations&#32;for&#32;the&#32;CMA-ES&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02126"/>02126 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ignored&#32;if&#32;already&#32;specified&#32;in&#32;the&#32;class&#32;instance.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02127"/>02127 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator],&#32;optional):&#32;A&#32;random&#32;number&#32;generator&#32;to&#32;use&#32;for&#32;sampling</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02128"/>02128 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;CMA-ES&#32;algorithm.&#32;Defaults&#32;to&#32;`Generator(PCG64DXSM())`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02129"/>02129 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;A&#32;storage&#32;mechanism&#32;to&#32;track&#32;evaluations&#32;and&#32;optimization&#32;states.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02130"/>02130 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02131"/>02131 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02132"/>02132 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing&#32;the&#32;best&#32;solution&#32;found&#32;as&#32;an</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02133"/>02133 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;(`es.best_x`),&#32;its&#32;corresponding&#32;objective&#32;function&#32;value&#32;(`es.best_value`),</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02134"/>02134 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;total&#32;number&#32;of&#32;function&#32;evaluations&#32;performed&#32;(`evals`).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02135"/>02135 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02136"/>02136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;es&#32;=&#32;<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes">cmaes.Cmaes</link>(bounds,
<anchor xml:id="_optimizer_8py_source_1l02137"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a117ce72331b424a57089228ca286e29b">02137</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a69e1e5d4ef59774da8d311e5414f423b">popsize</link>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02138"/>02138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma&#32;=&#32;self.sdevs&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.sdevs&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;sdevs,&#32;
<anchor xml:id="_optimizer_8py_source_1l02139"/>02139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;=&#32;rg)&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02140"/>02140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iters&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store)&#32;//&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a69e1e5d4ef59774da8d311e5414f423b">popsize</link>
<anchor xml:id="_optimizer_8py_source_1l02141"/>02141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;0
<anchor xml:id="_optimizer_8py_source_1l02142"/>02142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(iters):
<anchor xml:id="_optimizer_8py_source_1l02143"/>02143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;es.ask()
<anchor xml:id="_optimizer_8py_source_1l02144"/>02144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;[fun(x)&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;xs]
<anchor xml:id="_optimizer_8py_source_1l02145"/>02145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;+=&#32;len(xs)
<anchor xml:id="_optimizer_8py_source_1l02146"/>02146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop&#32;=&#32;es.tell(ys)
<anchor xml:id="_optimizer_8py_source_1l02147"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a69e1e5d4ef59774da8d311e5414f423b">02147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;stop&#32;!=&#32;0:
<anchor xml:id="_optimizer_8py_source_1l02148"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1add6597366425631f6da2437eeaf81068">02148</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>&#32;
<anchor xml:id="_optimizer_8py_source_1l02149"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a352951220906583104f8431b7d0bc7d2">02149</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;es.best_x,&#32;es.best_value,&#32;evals
<anchor xml:id="_optimizer_8py_source_1l02150"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a8f01f6f1c691b49141a1be706362fa84">02150</link> 
<anchor xml:id="_optimizer_8py_source_1l02151"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a8b3d07574a419fe034e45103e3fae567">02151</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell">De_ask_tell</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02152"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1ac7722b0c33dcef4798a5755abe2d424f">02152</link> &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02153"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1ac68ccfdd7268fe6a21f708593b6bc13e">02153</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Differential&#32;Evolution&#32;optimizer&#32;for&#32;numerical&#32;optimization&#32;tasks.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02154"/>02154 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02155"/>02155 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;implements&#32;the&#32;Differential&#32;Evolution&#32;(DE)&#32;optimizer,&#32;which&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02156"/>02156 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;a&#32;population-based,&#32;stochastic&#32;optimization&#32;technique&#32;suitable&#32;for&#32;solving</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02157"/>02157 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;complex&#32;continuous&#32;optimization&#32;problems.&#32;The&#32;optimizer&#32;uses&#32;operations</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02158"/>02158 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;like&#32;mutation,&#32;crossover,&#32;and&#32;selection&#32;to&#32;evolve&#32;a&#32;population&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02159"/>02159 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;candidate&#32;solutions&#32;towards&#32;an&#32;optimal&#32;solution&#32;over&#32;a&#32;number&#32;of&#32;iterations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02160"/>02160 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02161"/>02161 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02162"/>02162 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Number&#32;of&#32;individuals&#32;in&#32;the&#32;population,&#32;which</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02163"/>02163 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defines&#32;the&#32;optimization&apos;s&#32;search&#32;capacity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02164"/>02164 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;Fitness&#32;threshold&#32;for&#32;early&#32;stopping</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02165"/>02165 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;an&#32;individual&#32;in&#32;the&#32;population&#32;achieves&#32;this&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02166"/>02166 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep&#32;(Optional[int]):&#32;Number&#32;of&#32;top-performing&#32;individuals&#32;retained&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02167"/>02167 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;next&#32;generation&#32;to&#32;stabilize&#32;the&#32;evolution&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02168"/>02168 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f&#32;(Optional[float]):&#32;Differential&#32;weighting&#32;factor&#32;for&#32;mutation,&#32;controlling</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02169"/>02169 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;scaling&#32;of&#32;the&#32;difference&#32;vectors.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02170"/>02170 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr&#32;(Optional[float]):&#32;Crossover&#32;probability&#32;that&#32;determines&#32;the&#32;rate&#32;at&#32;which</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02171"/>02171 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;components&#32;are&#32;exchanged&#32;between&#32;solutions.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02172"/>02172 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02173"/>02173 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02174"/>02174 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a117ce72331b424a57089228ca286e29b">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02175"/>02175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l02176"/>02176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_optimizer_8py_source_1l02177"/>02177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l02178"/>02178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep:&#32;Optional[int]&#32;=&#32;200,&#32;
<anchor xml:id="_optimizer_8py_source_1l02179"/>02179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f:&#32;Optional[float]&#32;=&#32;0.5,&#32;
<anchor xml:id="_optimizer_8py_source_1l02180"/>02180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr:&#32;Optional[float]&#32;=&#32;0.9):
<anchor xml:id="_optimizer_8py_source_1l02181"/>02181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02182"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325">02182</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;Differential&#32;Evolution&#32;(DE)&#32;optimizer&#32;with&#32;specified&#32;configuration&#32;options.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02183"/>02183 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;DE&#32;optimizer&#32;is&#32;part&#32;of&#32;evolutionary&#32;algorithms&#32;and&#32;works&#32;by&#32;iteratively&#32;improving&#32;a</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02184"/>02184 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate&#32;solution&#32;with&#32;regard&#32;to&#32;a&#32;measure&#32;of&#32;quality&#32;(fitness).&#32;This&#32;initialization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02185"/>02185 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;method&#32;allows&#32;setting&#32;the&#32;core&#32;parameters&#32;of&#32;the&#32;DE&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02186"/>02186 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02187"/>02187 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02188"/>02188 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;that&#32;the&#32;optimizer</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02189"/>02189 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;can&#32;perform&#32;before&#32;stopping.&#32;Default&#32;is&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02190"/>02190 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Number&#32;of&#32;individuals&#32;in&#32;the&#32;population.&#32;Determines&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02191"/>02191 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;population&#32;size&#32;for&#32;optimization.&#32;Default&#32;is&#32;None&#32;(uses&#32;a&#32;default&#32;or&#32;dynamically</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02192"/>02192 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;calculated&#32;value).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02193"/>02193 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;Fitness&#32;value&#32;at&#32;which&#32;the&#32;optimizer&#32;will&#32;stop&#32;early</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02194"/>02194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;reached.&#32;Default&#32;is&#32;-np.inf&#32;(no&#32;early&#32;stopping&#32;based&#32;on&#32;fitness).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02195"/>02195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keep&#32;(Optional[int]):&#32;Number&#32;of&#32;individuals&#32;or&#32;solutions&#32;to&#32;keep&#32;from&#32;one&#32;generation</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02196"/>02196 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;next&#32;within&#32;the&#32;optimization&#32;process.&#32;Default&#32;is&#32;200.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02197"/>02197 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f&#32;(Optional[float]):&#32;Differential&#32;weighting&#32;factor,&#32;a&#32;scaling&#32;constant&#32;used&#32;to&#32;scale</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02198"/>02198 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;difference&#32;between&#32;two&#32;individuals&#32;in&#32;the&#32;population.&#32;Default&#32;is&#32;0.5.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02199"/>02199 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr&#32;(Optional[float]):&#32;Crossover&#32;probability,&#32;the&#32;rate&#32;at&#32;which&#32;components&#32;are</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02200"/>02200 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;swapped&#32;between&#32;solutions&#32;during&#32;the&#32;recombination&#32;process.&#32;Default&#32;is&#32;0.9.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02201"/>02201 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02202"/>02202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;de&#32;at&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l02203"/>02203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a69e1e5d4ef59774da8d311e5414f423b">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l02204"/>02204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1add6597366425631f6da2437eeaf81068">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l02205"/>02205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a352951220906583104f8431b7d0bc7d2">keep</link>&#32;=&#32;keep
<anchor xml:id="_optimizer_8py_source_1l02206"/>02206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a8f01f6f1c691b49141a1be706362fa84">f</link>&#32;=&#32;f
<anchor xml:id="_optimizer_8py_source_1l02207"/>02207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1a8b3d07574a419fe034e45103e3fae567">cr</link>&#32;=&#32;cr
<anchor xml:id="_optimizer_8py_source_1l02208"/>02208 
<anchor xml:id="_optimizer_8py_source_1l02209"/>02209 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02210"/>02210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02211"/>02211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02212"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell">02212</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02213"/>02213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02214"/>02214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02215"/>02215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02216"/>02216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;using&#32;a&#32;Differential&#32;Evolution&#32;(DE)&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02217"/>02217 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02218"/>02218 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;algorithm&#32;works&#32;by&#32;iteratively&#32;evolving&#32;a&#32;population&#32;of&#32;potential&#32;solutions&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02219"/>02219 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize&#32;the&#32;given&#32;objective&#32;function&#32;within&#32;specified&#32;bounds.&#32;It&#32;supports&#32;features</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02220"/>02220 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;like&#32;random&#32;seeds,&#32;population&#32;size&#32;customization,&#32;and&#32;optional&#32;constraint&#32;handling.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02221"/>02221 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;`minimize`&#32;method&#32;evaluates&#32;the&#32;convergence&#32;of&#32;the&#32;algorithm&#32;based&#32;on&#32;specified</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02222"/>02222 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maximum&#32;evaluations,&#32;and&#32;returns&#32;the&#32;best&#32;solution,&#32;its&#32;value,&#32;and&#32;the&#32;number&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02223"/>02223 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluations&#32;conducted.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02224"/>02224 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02225"/>02225 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02226"/>02226 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;Objective&#32;function&#32;to&#32;minimize.&#32;This&#32;is&#32;a&#32;callable</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02227"/>02227 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;takes&#32;an&#32;array-like&#32;input&#32;and&#32;returns&#32;a&#32;scalar&#32;output&#32;representing&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02228"/>02228 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02229"/>02229 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;Boundary&#32;constraints&#32;for&#32;the&#32;search&#32;space.&#32;Specifies&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02230"/>02230 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower&#32;and&#32;upper&#32;bounds&#32;for&#32;each&#32;dimension&#32;of&#32;the&#32;input&#32;array.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02231"/>02231 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;solution.&#32;Optional&#32;and&#32;can&#32;be&#32;left</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02232"/>02232 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;as&#32;None,&#32;in&#32;which&#32;case&#32;the&#32;default&#32;initialization&#32;strategy&#32;is&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02233"/>02233 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Placeholder&#32;parameter.&#32;This&#32;argument&#32;is&#32;ignored&#32;in&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02234"/>02234 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02235"/>02235 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;Random&#32;generator&#32;for&#32;stochastic&#32;operations.&#32;By&#32;default,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02236"/>02236 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;uses&#32;a&#32;PCG64DXSM&#32;generator&#32;instance.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02237"/>02237 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(object):&#32;Optional&#32;storage&#32;handler&#32;for&#32;tracking&#32;or&#32;persisting&#32;evaluation&#32;metrics</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02238"/>02238 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;the&#32;optimization&#32;process.&#32;This&#32;parameter&#32;is&#32;passed&#32;to&#32;internal&#32;utility</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02239"/>02239 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;methods&#32;for&#32;handling&#32;storage&#32;requirements.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02240"/>02240 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02241"/>02241 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02242"/>02242 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing&#32;three&#32;elements:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02243"/>02243 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;np.ndarray:&#32;The&#32;best&#32;solution&#32;found&#32;by&#32;the&#32;optimizer&#32;(array&#32;with&#32;dimensions</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02244"/>02244 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defined&#32;by&#32;the&#32;bounds).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02245"/>02245 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;float:&#32;The&#32;value&#32;of&#32;the&#32;objective&#32;function&#32;at&#32;the&#32;best&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02246"/>02246 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;int:&#32;The&#32;total&#32;number&#32;of&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02247"/>02247 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02248"/>02248 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02249"/>02249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;=&#32;len(bounds.lb)
<anchor xml:id="_optimizer_8py_source_1l02250"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a09d9c0f932642fd605a5db7793836eb6">02250</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;=&#32;31&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a2a32bf4b1974985835c6fe4d78efbfa0">popsize</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a2a32bf4b1974985835c6fe4d78efbfa0">popsize</link>
<anchor xml:id="_optimizer_8py_source_1l02251"/>02251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;es&#32;=&#32;<link linkend="_classfcmaes_1_1de_1_1_d_e">de.DE</link>(dim,&#32;bounds,&#32;popsize&#32;=&#32;popsize,&#32;rg&#32;=&#32;rg,&#32;keep&#32;=&#32;self.keep,&#32;F&#32;=&#32;self.f,&#32;Cr&#32;=&#32;self.cr)&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02252"/>02252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;es.fun&#32;=&#32;fun&#32;&#32;<emphasis role="comment">#remove</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02253"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a2a32bf4b1974985835c6fe4d78efbfa0">02253</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evals&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store)
<anchor xml:id="_optimizer_8py_source_1l02254"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a7d349b5034ba57f809452070bc13b7c8">02254</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;es.evals&#32;&lt;&#32;max_evals:
<anchor xml:id="_optimizer_8py_source_1l02255"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a3c87ed72ee15e5bcd89e0e484ef980c8">02255</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;es.ask()
<anchor xml:id="_optimizer_8py_source_1l02256"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a54e31b68f53d2561911716c31f45b1be">02256</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;[fun(x)&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;xs]
<anchor xml:id="_optimizer_8py_source_1l02257"/>02257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop&#32;=&#32;es.tell(ys,&#32;xs)
<anchor xml:id="_optimizer_8py_source_1l02258"/>02258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;stop&#32;!=&#32;0:
<anchor xml:id="_optimizer_8py_source_1l02259"/>02259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>&#32;
<anchor xml:id="_optimizer_8py_source_1l02260"/>02260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;es.best_x,&#32;es.best_value,&#32;es.evals
<anchor xml:id="_optimizer_8py_source_1l02261"/>02261 
<anchor xml:id="_optimizer_8py_source_1l02262"/>02262 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1random__search">random_search</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02263"/>02263 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02264"/>02264 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;A&#32;class&#32;for&#32;performing&#32;optimization&#32;using&#32;a&#32;random&#32;search&#32;strategy.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02265"/>02265 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02266"/>02266 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;implements&#32;a&#32;random&#32;search&#32;optimization&#32;algorithm,&#32;which</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02267"/>02267 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;is&#32;a&#32;straightforward&#32;method&#32;that&#32;randomly&#32;samples&#32;candidate&#32;solutions</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02268"/>02268 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;within&#32;the&#32;specified&#32;bounds&#32;to&#32;minimize&#32;the&#32;objective&#32;function.&#32;It&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02269"/>02269 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;useful&#32;for&#32;exploring&#32;high-dimensional&#32;or&#32;complicated&#32;search&#32;spaces</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02270"/>02270 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;does&#32;not&#32;rely&#32;on&#32;gradient&#32;information.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02271"/>02271 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02272"/>02272 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02273"/>02273 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(int):&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;for&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02274"/>02274 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;Determines&#32;the&#32;computational&#32;budget&#32;for&#32;the&#32;search.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02275"/>02275 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02276"/>02276 &#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02277"/>02277 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a09d9c0f932642fd605a5db7793836eb6">__init__</link>(self,&#32;max_evaluations=50000):
<anchor xml:id="_optimizer_8py_source_1l02278"/>02278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02279"/>02279 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;instance&#32;of&#32;the&#32;optimizer&#32;with&#32;a&#32;random&#32;search&#32;strategy.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02280"/>02280 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02281"/>02281 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02282"/>02282 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(int,&#32;optional):&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02283"/>02283 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimization&#32;process.&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02284"/>02284 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02285"/><link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592">02285</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;random&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l02286"/>02286 &#32;
<anchor xml:id="_optimizer_8py_source_1l02287"/>02287 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02288"/>02288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02289"/>02289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02290"/>02290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02291"/>02291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02292"/>02292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02293"/>02293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02294"/>02294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02295"/>02295 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;function&#32;within&#32;the&#32;specified&#32;bounds&#32;using&#32;a&#32;random&#32;sampling</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02296"/>02296 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;method.&#32;The&#32;method&#32;repeatedly&#32;samples&#32;points&#32;within&#32;the&#32;bounds,&#32;evaluates&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02297"/>02297 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;at&#32;those&#32;points,&#32;and&#32;keeps&#32;track&#32;of&#32;the&#32;point&#32;with&#32;the&#32;minimum&#32;function&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02298"/>02298 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02299"/>02299 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02300"/>02300 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;Objective&#32;function&#32;to&#32;be&#32;minimized.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02301"/>02301 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;Optimization&#32;bounds&#32;specifying&#32;the&#32;lower&#32;(lb)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02302"/>02302 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;upper&#32;(ub)&#32;limits&#32;for&#32;the&#32;variables.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02303"/>02303 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;solution&#32;(ignored&#32;by</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02304"/>02304 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;implementation).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02305"/>02305 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Not&#32;used&#32;in&#32;the&#32;implementation&#32;(ignored).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02306"/>02306 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;Random&#32;number&#32;generator&#32;to&#32;sample</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02307"/>02307 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;points&#32;within&#32;bounds,&#32;defaults&#32;to&#32;`Generator(PCG64DXSM())`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02308"/>02308 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Auxiliary&#32;data&#32;structure&#32;to&#32;track&#32;the&#32;state&#32;or&#32;additional</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02309"/>02309 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;information&#32;(details&#32;not&#32;specified).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02310"/>02310 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02311"/>02311 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02312"/>02312 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing&#32;the&#32;best&#32;input&#32;point</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02313"/>02313 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;(x_min),&#32;the&#32;minimum&#32;function&#32;value&#32;(y_min),&#32;and&#32;the&#32;total&#32;number</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02314"/>02314 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;function&#32;evaluations&#32;performed&#32;(evals).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02315"/>02315 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02316"/>02316 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02317"/>02317 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None&#32;explicitly&#32;raised,&#32;but&#32;function&#32;evaluations&#32;or&#32;sampling&#32;may&#32;fail</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02318"/>02318 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;due&#32;to&#32;improper&#32;configuration&#32;or&#32;input.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02319"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell">02319</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02320"/>02320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim,&#32;x_min,&#32;y_min&#32;=&#32;len(bounds.lb),&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02321"/>02321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_chunk_size&#32;=&#32;1&#32;+&#32;4e4&#32;/&#32;dim
<anchor xml:id="_optimizer_8py_source_1l02322"/>02322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store)
<anchor xml:id="_optimizer_8py_source_1l02323"/>02323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;budget&#32;=&#32;evals
<anchor xml:id="_optimizer_8py_source_1l02324"/>02324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;budget&#32;&gt;&#32;0:
<anchor xml:id="_optimizer_8py_source_1l02325"/>02325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chunk&#32;=&#32;int(max([1,&#32;min([budget,&#32;max_chunk_size])]))
<anchor xml:id="_optimizer_8py_source_1l02326"/>02326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X&#32;=&#32;rg.uniform(bounds.lb,&#32;bounds.ub,&#32;size&#32;=&#32;[chunk,&#32;dim])
<anchor xml:id="_optimizer_8py_source_1l02327"/>02327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;F&#32;=&#32;[fun(x)&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;X]
<anchor xml:id="_optimizer_8py_source_1l02328"/>02328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;=&#32;np.argmin(F)&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(F)&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02329"/>02329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;index&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">and</emphasis>&#32;(y_min&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;F[index]&#32;&lt;&#32;y_min):
<anchor xml:id="_optimizer_8py_source_1l02330"/>02330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_min,&#32;y_min&#32;=&#32;X[index],&#32;F[index]
<anchor xml:id="_optimizer_8py_source_1l02331"/>02331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;budget&#32;-=&#32;chunk
<anchor xml:id="_optimizer_8py_source_1l02332"/>02332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x_min,&#32;y_min,&#32;evals
<anchor xml:id="_optimizer_8py_source_1l02333"/>02333 
<anchor xml:id="_optimizer_8py_source_1l02334"/>02334 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02335"/>02335 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp">Da_cpp</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02336"/>02336 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02337"/>02337 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Represents&#32;the&#32;Da_cpp&#32;optimization&#32;algorithm,&#32;a&#32;variant&#32;of&#32;the&#32;Optimizer&#32;class.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02338"/>02338 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02339"/>02339 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;provides&#32;an&#32;interface&#32;to&#32;a&#32;differential&#32;evolution-based&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02340"/>02340 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;algorithm&#32;implemented&#32;in&#32;the&#32;`dacpp`&#32;library.&#32;It&#32;allows&#32;customization&#32;of&#32;certain</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02341"/>02341 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;parameters&#32;such&#32;as&#32;the&#32;maximum&#32;number&#32;of&#32;evaluations,&#32;stopping&#32;fitness&#32;criteria,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02342"/>02342 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;whether&#32;local&#32;search&#32;should&#32;be&#32;applied.&#32;The&#32;optimizer&#32;can&#32;be&#32;used&#32;to&#32;find&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02343"/>02343 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;minimum&#32;of&#32;a&#32;given&#32;objective&#32;function&#32;within&#32;specified&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02344"/>02344 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02345"/>02345 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02346"/>02346 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Defines&#32;the&#32;stopping&#32;fitness&#32;value.&#32;If&#32;the&#32;objective</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02347"/>02347 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;achieves&#32;a&#32;fitness&#32;less&#32;than&#32;or&#32;equal&#32;to&#32;this&#32;value,&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02348"/>02348 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;is&#32;terminated.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02349"/>02349 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use_local_search&#32;(bool):&#32;Indicates&#32;whether&#32;local&#32;search&#32;should&#32;be&#32;utilized</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02350"/>02350 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;the&#32;optimization&#32;process&#32;to&#32;refine&#32;results.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02351"/>02351 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(ArrayLike&#32;or&#32;None):&#32;Provides&#32;an&#32;optional&#32;initial&#32;guess&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02352"/>02352 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.&#32;If&#32;unspecified,&#32;no&#32;initial&#32;guess&#32;is&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02353"/>02353 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02354"/>02354 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02355"/>02355 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a438d0e4e3eb02efc66eb6a0e7d2728e1">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02356"/>02356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l02357"/>02357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_optimizer_8py_source_1l02358"/>02358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use_local_search:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>,
<anchor xml:id="_optimizer_8py_source_1l02359"/>02359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l02360"/>02360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02361"/>02361 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;optimizer&#32;with&#32;given&#32;parameters&#32;and&#32;defaults.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02362"/>02362 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02363"/>02363 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;constructor&#32;sets&#32;up&#32;the&#32;optimizer&#32;with&#32;options&#32;for&#32;a&#32;maximum&#32;number&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02364"/>02364 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluations,&#32;a&#32;stopping&#32;fitness&#32;threshold,&#32;a&#32;toggle&#32;for&#32;local&#32;search,&#32;and</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02365"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a438d0e4e3eb02efc66eb6a0e7d2728e1">02365</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;optional&#32;initial&#32;guess.&#32;These&#32;parameters&#32;guide&#32;the&#32;optimizer&apos;s&#32;behavior</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02366"/>02366 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;its&#32;execution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02367"/>02367 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02368"/>02368 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02369"/>02369 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;permissible&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02370"/>02370 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02371"/>02371 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization&#32;process&#32;should</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02372"/>02372 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop.&#32;Defaults&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02373"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1ad7be76f5ffe7fc538f9d630e8ebf4137">02373</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use_local_search:&#32;Boolean&#32;indicating&#32;whether&#32;to&#32;enable&#32;local&#32;search.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02374"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1aa94dd4195cc987dcedf14f4c483c1b51">02374</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;True.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02375"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1aaa99670844fc1389c8c2149247cdff1d">02375</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Initial&#32;guess&#32;or&#32;starting&#32;point&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02376"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a059ad704d037181b31185585a82c9941">02376</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Can&#32;be&#32;provided&#32;as&#32;an&#32;array-like&#32;structure.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02377"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a38c525587b6c8ee2d3776273ac3846ac">02377</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02378"/>02378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;da&#32;cpp&apos;</emphasis>,)
<anchor xml:id="_optimizer_8py_source_1l02379"/>02379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1aa94dd4195cc987dcedf14f4c483c1b51">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l02380"/>02380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.use_local_search&#32;=&#32;use_local_search
<anchor xml:id="_optimizer_8py_source_1l02381"/>02381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.guess&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l02382"/>02382 &#32;
<anchor xml:id="_optimizer_8py_source_1l02383"/>02383 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02384"/>02384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02385"/>02385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02386"/>02386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02387"/>02387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02388"/>02388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02389"/>02389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02390"/>02390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02391"/>02391 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;an&#32;objective&#32;function&#32;within&#32;given&#32;bounds&#32;using&#32;a&#32;stochastic&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02392"/>02392 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;method.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02393"/>02393 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02394"/>02394 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;attempts&#32;to&#32;find&#32;the&#32;minimum&#32;of&#32;the&#32;provided&#32;objective&#32;function&#32;by</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02395"/>02395 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exploring&#32;the&#32;parameter&#32;space&#32;defined&#32;by&#32;the&#32;given&#32;bounds.&#32;An&#32;optional&#32;initial&#32;guess</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02396"/>02396 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;can&#32;be&#32;provided&#32;to&#32;start&#32;the&#32;optimization&#32;at&#32;a&#32;specific&#32;point.&#32;The&#32;function&#32;uses&#32;a</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02397"/>02397 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;random&#32;number&#32;generator&#32;for&#32;stochasticity&#32;during&#32;optimization.&#32;The&#32;result&#32;includes</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02398"/>02398 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimal&#32;point,&#32;the&#32;optimal&#32;function&#32;value,&#32;and&#32;the&#32;number&#32;of&#32;function&#32;evaluations.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02399"/>02399 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02400"/>02400 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02401"/>02401 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02402"/>02402 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;must&#32;take&#32;an&#32;array-like&#32;input&#32;and&#32;return&#32;a&#32;float.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02403"/>02403 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;for&#32;the&#32;variables&#32;as&#32;a&#32;Bounds&#32;object.&#32;Defines</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02404"/>02404 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;search&#32;space&#32;for&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02405"/>02405 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;An&#32;optional&#32;initial&#32;guess&#32;for&#32;the&#32;optimization.&#32;If&#32;not</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02406"/>02406 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided,&#32;a&#32;default&#32;guess&#32;specified&#32;by&#32;the&#32;class&#32;will&#32;be&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02407"/>02407 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Standard&#32;deviation&#32;for&#32;some&#32;internal&#32;process.&#32;Ignored&#32;in</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02408"/>02408 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;current&#32;implementation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02409"/>02409 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;A&#32;random&#32;number&#32;generator&#32;instance&#32;for&#32;stochasticity&#32;during&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02410"/>02410 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Storage&#32;or&#32;logging&#32;object&#32;used&#32;to&#32;keep&#32;track&#32;of&#32;evaluation&#32;counts&#32;or&#32;other</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02411"/>02411 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02412"/><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388">02412</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02413"/>02413 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02414"/>02414 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02415"/>02415 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;best&#32;solution&#32;found&#32;(as&#32;a&#32;numpy.ndarray).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02416"/>02416 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;objective&#32;function&#32;value&#32;at&#32;the&#32;best&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02417"/>02417 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;total&#32;number&#32;of&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02418"/>02418 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02419"/>02419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;dacpp.minimize(fun,&#32;bounds,&#32;
<anchor xml:id="_optimizer_8py_source_1l02420"/>02420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.guess&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;guess,
<anchor xml:id="_optimizer_8py_source_1l02421"/>02421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l02422"/>02422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use_local_search&#32;=&#32;self.use_local_search,
<anchor xml:id="_optimizer_8py_source_1l02423"/>02423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=rg,&#32;runid&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link>(store))
<anchor xml:id="_optimizer_8py_source_1l02424"/>02424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l02425"/>02425 
<anchor xml:id="_optimizer_8py_source_1l02426"/>02426 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp">Bite_cpp</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02427"/>02427 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02428"/>02428 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;A&#32;hybrid&#32;optimization&#32;algorithm&#32;(BITE++&#32;algorithm)&#32;developed&#32;for&#32;solving</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02429"/>02429 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;complex&#32;optimization&#32;problems.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02430"/>02430 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02431"/>02431 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;`Bite_cpp`&#32;class&#32;is&#32;derived&#32;from&#32;the&#32;`Optimizer`&#32;base&#32;class&#32;and&#32;implements</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02432"/>02432 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;a&#32;specific&#32;optimization&#32;algorithm.&#32;It&#32;is&#32;especially&#32;suitable&#32;for&#32;multi-variable</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02433"/>02433 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;tasks&#32;and&#32;allows&#32;fine&#32;control&#32;over&#32;the&#32;algorithm&apos;s&#32;behavior&#32;through</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02434"/>02434 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;configurable&#32;parameters.&#32;This&#32;class&#32;serves&#32;as&#32;an&#32;interface&#32;to&#32;the&#32;underlying</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02435"/>02435 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;algorithm&#32;implemented&#32;in&#32;the&#32;BITE++&#32;library.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02436"/>02436 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02437"/>02437 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02438"/>02438 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(ArrayLike):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization&#32;process.&#32;If&#32;None,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02439"/>02439 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;algorithm&#32;will&#32;start&#32;with&#32;random&#32;initialization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02440"/>02440 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Target&#32;fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02441"/>02441 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process&#32;stops.&#32;Default&#32;is&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02442"/>02442 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;M&#32;(int):&#32;Optional&#32;parameter&#32;for&#32;algorithm-specific&#32;settings.&#32;Defaults&#32;to&#32;1</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02443"/>02443 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;not&#32;explicitly&#32;defined.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02444"/><link linkend="_classfcmaes_1_1optimizer_1_1random__search">02444</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;Population&#32;size&#32;used&#32;by&#32;the&#32;optimization&#32;algorithm.&#32;Defaults</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02445"/>02445 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;0&#32;if&#32;not&#32;explicitly&#32;configured.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02446"/>02446 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stall_criterion&#32;(int):&#32;Number&#32;of&#32;iterations&#32;over&#32;which&#32;lack&#32;of&#32;improvement</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02447"/>02447 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;halts&#32;the&#32;optimization&#32;process.&#32;Defaults&#32;to&#32;0.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02448"/>02448 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02449"/>02449 &#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02450"/>02450 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1random__search_1a6fa5aeb0f39108286986746640a41331">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02451"/>02451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l02452"/>02452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02453"/>02453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02454"/>02454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;M:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_optimizer_8py_source_1l02455"/>02455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_optimizer_8py_source_1l02456"/><link linkend="_classfcmaes_1_1optimizer_1_1random__search_1a6fa5aeb0f39108286986746640a41331">02456</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stall_criterion:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l02457"/>02457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02458"/>02458 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;optimization&#32;algorithm&#32;with&#32;parameters&#32;specific&#32;to&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02459"/>02459 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02460"/>02460 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02461"/>02461 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional;&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;for&#32;the&#32;optimizer&#32;to&#32;perform.&#32;Default&#32;is&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02462"/>02462 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional;&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization&#32;process.&#32;Default&#32;is&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02463"/>02463 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional;&#32;Fitness&#32;value&#32;at&#32;which&#32;to&#32;stop&#32;the&#32;optimization.&#32;Default&#32;is&#32;negative&#32;infinity&#32;(-np.inf).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02464"/>02464 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;M:&#32;Optional;&#32;Parameter&#32;related&#32;to&#32;the&#32;optimization&#32;configuration.&#32;Default&#32;value&#32;is&#32;1&#32;if&#32;not&#32;provided.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02465"/>02465 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional;&#32;Population&#32;size&#32;for&#32;the&#32;optimization&#32;process.&#32;Default&#32;value&#32;is&#32;0&#32;if&#32;not&#32;provided.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02466"/>02466 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stall_criterion:&#32;Optional;&#32;Criterion&#32;related&#32;to&#32;the&#32;stall&#32;condition&#32;in&#32;optimization.&#32;Default&#32;value&#32;is&#32;0&#32;if&#32;not&#32;provided.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02467"/>02467 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02468"/>02468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;bite&#32;cpp&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l02469"/>02469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.guess&#32;=&#32;guess
<anchor xml:id="_optimizer_8py_source_1l02470"/>02470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.stop_fitness&#32;=&#32;stop_fitness
<anchor xml:id="_optimizer_8py_source_1l02471"/>02471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.M&#32;=&#32;1&#32;<emphasis role="keywordflow">if</emphasis>&#32;M&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;M&#32;
<anchor xml:id="_optimizer_8py_source_1l02472"/>02472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.popsize&#32;=&#32;0&#32;<emphasis role="keywordflow">if</emphasis>&#32;popsize&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;popsize&#32;
<anchor xml:id="_optimizer_8py_source_1l02473"/>02473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.stall_criterion&#32;=&#32;0&#32;<emphasis role="keywordflow">if</emphasis>&#32;stall_criterion&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;stall_criterion&#32;
<anchor xml:id="_optimizer_8py_source_1l02474"/>02474 
<anchor xml:id="_optimizer_8py_source_1l02475"/>02475 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1random__search_1a32252573912d707c4725f05041d70db1">minimize</link>(self,
<anchor xml:id="_optimizer_8py_source_1l02476"/>02476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02477"/>02477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02478"/>02478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02479"/>02479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02480"/>02480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02481"/>02481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02482"/>02482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02483"/>02483 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;scalar&#32;function&#32;of&#32;multiple&#32;variables&#32;using&#32;a&#32;given&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02484"/>02484 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02485"/><link linkend="_classfcmaes_1_1optimizer_1_1random__search_1a32252573912d707c4725f05041d70db1">02485</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;applies&#32;an&#32;algorithm&#32;to&#32;minimize&#32;the&#32;objective&#32;function&#32;`fun`&#32;within&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02486"/>02486 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specified&#32;bounds.&#32;It&#32;optionally&#32;uses&#32;an&#32;initial&#32;guess&#32;for&#32;the&#32;solution,&#32;random&#32;generator</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02487"/>02487 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;sampling,&#32;and&#32;allows&#32;storing&#32;intermediate&#32;results.&#32;The&#32;function&#32;is&#32;particularly</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02488"/>02488 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;designed&#32;to&#32;handle&#32;optimization&#32;tasks&#32;efficiently&#32;with&#32;various&#32;configuration&#32;options.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02489"/>02489 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02490"/>02490 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02491"/>02491 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;Objective&#32;function&#32;to&#32;be&#32;minimized.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02492"/>02492 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;should&#32;accept&#32;an&#32;array-like&#32;input&#32;and&#32;return&#32;a&#32;float&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02493"/>02493 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;Bounds&#32;for&#32;the&#32;optimization&#32;variables.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02494"/>02494 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Specifies&#32;the&#32;range&#32;of&#32;the&#32;variables&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02495"/>02495 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;solution.&#32;If&#32;None,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02496"/>02496 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;default&#32;guess&#32;will&#32;be&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02497"/>02497 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Ignored.&#32;Value&#32;provided&#32;to&#32;this&#32;parameter&#32;will&#32;have&#32;no&#32;effect.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02498"/>02498 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Random&#32;generator&#32;instance&#32;for&#32;sampling&#32;during&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02499"/>02499 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;Generator(PCG64DXSM()).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02500"/>02500 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional&#32;storage&#32;for&#32;storing&#32;intermediate&#32;results&#32;such&#32;as&#32;run&#32;history&#32;or</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02501"/>02501 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diagnostics&#32;information.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02502"/>02502 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02503"/>02503 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02504"/>02504 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02505"/>02505 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;optimized&#32;solution&#32;as&#32;a&#32;NumPy&#32;array.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02506"/>02506 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;value&#32;of&#32;the&#32;objective&#32;function&#32;at&#32;the&#32;optimized&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02507"/>02507 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;total&#32;number&#32;of&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02508"/>02508 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02509"/>02509 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02510"/>02510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;bitecpp.minimize(fun,&#32;bounds,&#32;
<anchor xml:id="_optimizer_8py_source_1l02511"/>02511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.guess&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;guess,
<anchor xml:id="_optimizer_8py_source_1l02512"/>02512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l02513"/>02513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;self.stop_fitness,&#32;M&#32;=&#32;self.M,&#32;popsize&#32;=&#32;self.popsize,&#32;
<anchor xml:id="_optimizer_8py_source_1l02514"/>02514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stall_criterion&#32;=&#32;self.stall_criterion,
<anchor xml:id="_optimizer_8py_source_1l02515"/>02515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=rg,&#32;runid&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link>(store))&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02516"/>02516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l02517"/>02517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02518"/>02518 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_dual__annealing">Dual_annealing</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02519"/>02519 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Dual&#32;annealing&#32;optimization&#32;algorithm&#32;implementation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02520"/>02520 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02521"/><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp">02521</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;facilitates&#32;performing&#32;optimization&#32;using&#32;the&#32;dual-annealing</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02522"/>02522 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;algorithm,&#32;as&#32;implemented&#32;in&#32;SciPy.&#32;It&#32;provides&#32;functionality&#32;for&#32;finding</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02523"/>02523 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;global&#32;minimum&#32;of&#32;a&#32;function&#32;within&#32;given&#32;bounds.&#32;Local&#32;search&#32;can&#32;also</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02524"/>02524 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;be&#32;enabled&#32;or&#32;disabled&#32;for&#32;refinement&#32;after&#32;the&#32;global&#32;optimization&#32;phase.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02525"/>02525 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02526"/>02526 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02527"/>02527 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;function&#32;evaluations</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02528"/>02528 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allowed&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02529"/>02529 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;no_local_search&#32;(bool):&#32;A&#32;flag&#32;indicating&#32;whether&#32;local&#32;search&#32;is&#32;disabled.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02530"/>02530 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;True,&#32;local&#32;search&#32;is&#32;not&#32;applied.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02531"/>02531 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02532"/>02532 &#32;
<anchor xml:id="_optimizer_8py_source_1l02533"/>02533 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1a6041f0fa9c49b4908d638bc2c502b7a0">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02534"/>02534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l02535"/>02535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use_local_search:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>):
<anchor xml:id="_optimizer_8py_source_1l02536"/>02536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02537"/>02537 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;optimizer&#32;instance&#32;that&#32;uses&#32;the&#32;scipy&#32;differential&#32;annealing</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02538"/>02538 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm.&#32;This&#32;class&#32;inherits&#32;from&#32;the&#32;base&#32;`Optimizer`&#32;class.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02539"/>02539 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02540"/>02540 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;allows&#32;customization&#32;of&#32;the&#32;maximum&#32;number&#32;of&#32;evaluations&#32;and&#32;whether</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02541"/>02541 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;local&#32;search&#32;should&#32;be&#32;employed&#32;as&#32;part&#32;of&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02542"/>02542 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02543"/>02543 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02544"/>02544 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional;&#32;maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;during</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02545"/>02545 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.&#32;Defaults&#32;to&#32;50000&#32;if&#32;not&#32;provided.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02546"/>02546 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use_local_search:&#32;Optional;&#32;flag&#32;indicating&#32;whether&#32;to&#32;use&#32;local&#32;search</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02547"/>02547 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;optimization.&#32;Defaults&#32;to&#32;True&#32;if&#32;not&#32;provided.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02548"/>02548 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02549"/>02549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;scipy&#32;da&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l02550"/>02550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.no_local_search&#32;=&#32;<emphasis role="keywordflow">not</emphasis>&#32;use_local_search
<anchor xml:id="_optimizer_8py_source_1l02551"/><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1a6041f0fa9c49b4908d638bc2c502b7a0">02551</link> &#32;
<anchor xml:id="_optimizer_8py_source_1l02552"/>02552 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02553"/>02553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02554"/>02554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02555"/>02555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02556"/>02556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02557"/><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1a1ee5e02f5bdc6f640595c081eb01c230">02557</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02558"/><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1acb3f2d082778319925251a69518fa25a">02558</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02559"/><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1adb6bcafec8f433b6d7971da3c9bad807">02559</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02560"/>02560 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;scalar&#32;function&#32;of&#32;one&#32;or&#32;more&#32;variables&#32;using&#32;the&#32;Dual&#32;Annealing</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02561"/>02561 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;method.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02562"/>02562 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02563"/>02563 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;minimizes&#32;an&#32;objective&#32;function&#32;over&#32;a&#32;domain&#32;defined&#32;by&#32;bounds</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02564"/>02564 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;an&#32;optional&#32;initial&#32;guess.&#32;It&#32;allows&#32;specifying&#32;a&#32;random&#32;number&#32;generator</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02565"/>02565 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;provides&#32;an&#32;option&#32;for&#32;storing&#32;intermediate&#32;results.&#32;The&#32;optimization&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02566"/>02566 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;done&#32;using&#32;the&#32;Dual&#32;Annealing&#32;algorithm,&#32;which&#32;is&#32;particularly&#32;effective&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02567"/>02567 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;global&#32;optimization&#32;problems.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02568"/>02568 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02569"/>02569 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02570"/>02570 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable&#32;function&#32;to&#32;minimize.&#32;It&#32;must&#32;accept&#32;a&#32;single&#32;argument,&#32;which</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02571"/>02571 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;the&#32;optimization&#32;variable(s),&#32;and&#32;return&#32;a&#32;scalar&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02572"/>02572 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds&#32;object&#32;defining&#32;the&#32;lower&#32;and&#32;upper&#32;limits&#32;for&#32;each</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02573"/>02573 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;variable.&#32;The&#32;bounds&#32;must&#32;be&#32;specified&#32;for&#32;all&#32;dimensions.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02574"/>02574 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional&#32;initial&#32;guess&#32;for&#32;the&#32;optimization&#32;variables.&#32;It&#32;provides</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02575"/>02575 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;starting&#32;point&#32;for&#32;the&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02576"/>02576 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional&#32;float&#32;intended&#32;for&#32;standard&#32;deviations.&#32;This&#32;parameter&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02577"/>02577 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currently&#32;ignored&#32;in&#32;the&#32;implementation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02578"/>02578 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Random&#32;number&#32;generator&#32;instance&#32;used&#32;for&#32;seeding&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02579"/>02579 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process&#32;to&#32;ensure&#32;reproducibility.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02580"/>02580 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional&#32;storage&#32;used&#32;to&#32;manage&#32;intermediate&#32;results&#32;or&#32;post-process</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02581"/>02581 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;details.&#32;If&#32;provided,&#32;results&#32;may&#32;be&#32;customized&#32;based&#32;on</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02582"/>02582 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;storage&#32;behavior.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02583"/>02583 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02584"/>02584 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02585"/>02585 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02586"/>02586 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;optimized&#32;variable(s)&#32;`np.ndarray`,&#32;representing&#32;the&#32;location&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02587"/>02587 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;minimum.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02588"/>02588 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;scalar&#32;value&#32;of&#32;the&#32;objective&#32;function&#32;at&#32;the&#32;minimum.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02589"/>02589 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;total&#32;number&#32;of&#32;function&#32;evaluations&#32;performed&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02590"/><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad">02590</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02591"/>02591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;<link linkend="_namespacedual__annealing">dual_annealing</link>(fun,&#32;bounds=list(zip(bounds.lb,&#32;bounds.ub)),
<anchor xml:id="_optimizer_8py_source_1l02592"/>02592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxfun&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store),&#32;
<anchor xml:id="_optimizer_8py_source_1l02593"/>02593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;no_local_search&#32;=&#32;self.no_local_search,
<anchor xml:id="_optimizer_8py_source_1l02594"/>02594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0=guess,
<anchor xml:id="_optimizer_8py_source_1l02595"/>02595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seed&#32;=&#32;int(rg.uniform(0,&#32;2**32&#32;-&#32;1)))
<anchor xml:id="_optimizer_8py_source_1l02596"/>02596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l02597"/>02597 
<anchor xml:id="_optimizer_8py_source_1l02598"/>02598 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution">Differential_evolution</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02599"/>02599 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;A&#32;class&#32;for&#32;performing&#32;optimization&#32;using&#32;the&#32;Differential&#32;Evolution&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02600"/>02600 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02601"/>02601 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Differential&#32;Evolution&#32;is&#32;a&#32;global&#32;optimization&#32;algorithm&#32;suited&#32;for&#32;optimizing</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02602"/>02602 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;real-valued,&#32;multi-modal&#32;functions.&#32;This&#32;class&#32;is&#32;built&#32;upon&#32;the&#32;`scipy.optimize`</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02603"/>02603 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;implementation&#32;and&#32;extends&#32;it&#32;with&#32;additional&#32;functionality&#32;specific&#32;to&#32;its&#32;purpose.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02604"/>02604 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02605"/>02605 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02606"/>02606 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;The&#32;population&#32;size&#32;used&#32;by&#32;the&#32;Differential&#32;Evolution&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02607"/>02607 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02608"/>02608 &#32;
<anchor xml:id="_optimizer_8py_source_1l02609"/>02609 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp_1a6041f0fa9c49b4908d638bc2c502b7a0">__init__</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02610"/>02610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,
<anchor xml:id="_optimizer_8py_source_1l02611"/>02611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31):
<anchor xml:id="_optimizer_8py_source_1l02612"/>02612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02613"/>02613 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;instance&#32;of&#32;the&#32;DE&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02614"/>02614 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02615"/>02615 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;optimizer&#32;class&#32;is&#32;responsible&#32;for&#32;configuring&#32;and&#32;managing&#32;settings</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02616"/>02616 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specific&#32;to&#32;the&#32;differential&#32;evolution&#32;(DE)&#32;algorithm.&#32;Upon&#32;initialization,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02617"/><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp">02617</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;sets&#32;up&#32;the&#32;maximum&#32;evaluations&#32;allowed&#32;and&#32;the&#32;population&#32;size&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02618"/>02618 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DE&#32;routine.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02619"/>02619 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02620"/>02620 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02621"/>02621 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional;&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;allotted&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02622"/>02622 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;DE&#32;optimization&#32;algorithm.&#32;Defaults&#32;to&#32;50000&#32;if&#32;not&#32;provided.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02623"/>02623 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional;&#32;The&#32;population&#32;size&#32;used&#32;by&#32;the&#32;DE&#32;algorithm.&#32;Defaults</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02624"/>02624 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;31&#32;if&#32;not&#32;provided.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02625"/>02625 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02626"/>02626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;scipy&#32;de&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l02627"/>02627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a3c2b1016ec0c7132bd1aaf249a0606e2">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_optimizer_8py_source_1l02628"/>02628 &#32;
<anchor xml:id="_optimizer_8py_source_1l02629"/>02629 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02630"/>02630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02631"/>02631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02632"/>02632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02633"/>02633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02634"/>02634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02635"/>02635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02636"/>02636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02637"/>02637 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;using&#32;the&#32;Differential&#32;Evolution&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02638"/>02638 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02639"/>02639 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;method&#32;optimizes&#32;a&#32;given&#32;objective&#32;function&#32;within&#32;specified&#32;bounds,&#32;leveraging</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02640"/>02640 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stochastic&#32;parallel&#32;computation&#32;to&#32;approximate&#32;a&#32;global&#32;minimum.&#32;It&#32;uses&#32;a&#32;population-based</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02641"/>02641 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;approach&#32;evolved&#32;through&#32;random&#32;sampling.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02642"/>02642 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02643"/>02643 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02644"/>02644 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;Objective&#32;function&#32;to&#32;minimize.&#32;It&#32;takes&#32;an&#32;array-like</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02645"/>02645 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input&#32;and&#32;returns&#32;a&#32;float&#32;output&#32;representing&#32;the&#32;objective&#32;to&#32;minimize.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02646"/>02646 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;Constraints&#32;for&#32;the&#32;optimization.&#32;The&#32;lower&#32;(`bounds.lb`)&#32;and</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02647"/>02647 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;(`bounds.ub`)&#32;bounds&#32;define&#32;the&#32;search&#32;space&#32;for&#32;the&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02648"/>02648 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;the&#32;starting&#32;position&#32;in&#32;the&#32;parameter&#32;space.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02649"/>02649 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02650"/>02650 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Generator):&#32;Random&#32;number&#32;generator&#32;instance.&#32;Determines&#32;random&#32;seed&#32;for&#32;reproducibility.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02651"/>02651 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;`Generator(PCG64DXSM())`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02652"/>02652 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional&#32;storage&#32;object&#32;to&#32;record&#32;evaluation&#32;history&#32;or&#32;intermediate&#32;results.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02653"/><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ae9c52b6c377c3ac1a7b235db2f307d74">02653</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02654"/>02654 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02655"/>02655 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02656"/>02656 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;best&#32;solution&#32;(ndarray)&#32;found&#32;by&#32;the&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02657"/>02657 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;value&#32;of&#32;the&#32;objective&#32;function&#32;at&#32;the&#32;found&#32;solution&#32;(float).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02658"/>02658 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;number&#32;of&#32;function&#32;evaluations&#32;performed&#32;(int).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02659"/>02659 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02660"/>02660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;=&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a3c2b1016ec0c7132bd1aaf249a0606e2">popsize</link>&#32;
<anchor xml:id="_optimizer_8py_source_1l02661"/><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a900a36ee4e9e471f164fddc18f5af8ff">02661</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxiter&#32;=&#32;int(self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store)&#32;/&#32;(popsize&#32;*&#32;len(bounds.lb))&#32;-&#32;1)
<anchor xml:id="_optimizer_8py_source_1l02662"/><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ae2a0167e0a1282da6cbc91cef6528e03">02662</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;<link linkend="_namespacedifferential__evolution">differential_evolution</link>(fun,&#32;bounds=bounds,&#32;maxiter=maxiter,
<anchor xml:id="_optimizer_8py_source_1l02663"/><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a862c3e5d3d277ef587b91c91e022b760">02663</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seed&#32;=&#32;int(rg.uniform(0,&#32;2**32&#32;-&#32;1)))
<anchor xml:id="_optimizer_8py_source_1l02664"/><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a3c2b1016ec0c7132bd1aaf249a0606e2">02664</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l02665"/><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ad30512cc226b83fb569ad1a46aa1e208">02665</link> 
<anchor xml:id="_optimizer_8py_source_1l02666"/>02666 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_check_bounds">CheckBounds</link>(object):
<anchor xml:id="_optimizer_8py_source_1l02667"/>02667 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02668"/>02668 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Validates&#32;whether&#32;a&#32;given&#32;set&#32;of&#32;values&#32;falls&#32;within&#32;specified&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02669"/>02669 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02670"/>02670 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;is&#32;designed&#32;to&#32;check&#32;if&#32;a&#32;new&#32;set&#32;of&#32;parameters&#32;provided&#32;fits</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02671"/>02671 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;within&#32;the&#32;upper&#32;and&#32;lower&#32;bounds&#32;defined.&#32;It&#32;can&#32;be&#32;called&#32;with&#32;keyword</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02672"/>02672 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;arguments&#32;to&#32;perform&#32;the&#32;validation.&#32;Primarily&#32;useful&#32;in&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02673"/>02673 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;problems&#32;or&#32;parameter&#32;validations&#32;where&#32;constraints&#32;on&#32;variable&#32;limits&#32;are</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02674"/>02674 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;required.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02675"/>02675 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02676"/>02676 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02677"/>02677 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Bounds):&#32;The&#32;boundary&#32;constraints,&#32;containing&#32;the&#32;upper&#32;(`ub`)</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02678"/>02678 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;lower&#32;(`lb`)&#32;bounds&#32;used&#32;for&#32;validation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02679"/>02679 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02680"/>02680 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ae9c52b6c377c3ac1a7b235db2f307d74">__init__</link>(self,&#32;bounds:&#32;Bounds):
<anchor xml:id="_optimizer_8py_source_1l02681"/>02681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02682"/>02682 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Represents&#32;an&#32;object&#32;with&#32;defined&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02683"/>02683 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02684"/>02684 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;class&#32;encapsulates&#32;an&#32;object&#32;that&#32;requires&#32;bounds,&#32;likely&#32;for&#32;geometric</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02685"/>02685 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;spatial&#32;calculations.&#32;It&#32;is&#32;initialized&#32;with&#32;a&#32;Bounds&#32;instance.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02686"/>02686 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;Bounds&#32;parameter&#32;describes&#32;the&#32;necessary&#32;spatial&#32;boundary&#32;details&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02687"/>02687 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;construct&#32;the&#32;object.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02688"/>02688 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02689"/>02689 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02690"/>02690 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;The&#32;bounds&#32;object&#32;specifying&#32;spatial&#32;or&#32;defined&#32;boundaries.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02691"/>02691 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02692"/>02692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.bounds&#32;=&#32;bounds
<anchor xml:id="_optimizer_8py_source_1l02693"/>02693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02694"/>02694 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__call__(self,&#32;**kwargs):
<anchor xml:id="_optimizer_8py_source_1l02695"/><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972">02695</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02696"/>02696 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Checks&#32;if&#32;the&#32;given&#32;&apos;x_new&apos;&#32;value&#32;falls&#32;within&#32;the&#32;defined&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02697"/>02697 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02698"/>02698 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02699"/>02699 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;**kwargs:&#32;Arbitrary&#32;keyword&#32;arguments.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02700"/>02700 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02701"/>02701 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02702"/>02702 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;True&#32;if&#32;&apos;x_new&apos;&#32;is&#32;within&#32;bounds,&#32;False&#32;otherwise.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02703"/>02703 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02704"/>02704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;kwargs[<emphasis role="stringliteral">&quot;x_new&quot;</emphasis>]
<anchor xml:id="_optimizer_8py_source_1l02705"/>02705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inb&#32;=&#32;&#32;np.less_equal(x,&#32;self.bounds.ub).all()&#32;<emphasis role="keywordflow">and</emphasis>&#32;\
<anchor xml:id="_optimizer_8py_source_1l02706"/>02706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.greater_equal(x,&#32;self.bounds.lb).all()
<anchor xml:id="_optimizer_8py_source_1l02707"/>02707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;inb
<anchor xml:id="_optimizer_8py_source_1l02708"/>02708 
<anchor xml:id="_optimizer_8py_source_1l02709"/>02709 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_basin__hopping">Basin_hopping</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02710"/>02710 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02711"/>02711 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Optimization&#32;class&#32;implementing&#32;the&#32;basin&#32;hopping&#32;algorithm&#32;from&#32;SciPy.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02712"/>02712 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02713"/>02713 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;is&#32;used&#32;to&#32;solve&#32;optimization&#32;problems&#32;using&#32;the&#32;basin&#32;hopping</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02714"/>02714 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;algorithm,&#32;which&#32;is&#32;a&#32;global&#32;optimization&#32;technique.&#32;It&#32;combines&#32;random</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02715"/>02715 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;perturbation&#32;of&#32;the&#32;input&#32;parameters&#32;with&#32;local&#32;optimization,&#32;making&#32;it</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02716"/>02716 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;suitable&#32;for&#32;finding&#32;global&#32;minimums&#32;in&#32;problems&#32;with&#32;multiple&#32;local</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02717"/>02717 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;minima.&#32;The&#32;optimizer&#32;stops&#32;after&#32;a&#32;maximum&#32;number&#32;of&#32;evaluations&#32;or&#32;when</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02718"/>02718 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;a&#32;suitable&#32;solution&#32;is&#32;found.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02719"/>02719 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02720"/><link linkend="_classfcmaes_1_1optimizer_1_1_dual__annealing">02720</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02721"/>02721 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(int):&#32;Maximum&#32;number&#32;of&#32;function&#32;evaluations&#32;allowed</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02722"/>02722 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;the&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02723"/>02723 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;Name&#32;of&#32;the&#32;optimization&#32;algorithm&#32;being&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02724"/>02724 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02725"/>02725 &#32;
<anchor xml:id="_optimizer_8py_source_1l02726"/>02726 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_dual__annealing_1ae4f414368932eac040e7431fec8fd6bc">__init__</link>(self,&#32;max_evaluations=50000,&#32;store=None):
<anchor xml:id="_optimizer_8py_source_1l02727"/>02727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02728"/>02728 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;optimizer,&#32;which&#32;employs&#32;the&#32;SciPy&#32;basin-hopping&#32;algorithm&#32;to&#32;perform&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02729"/>02729 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02730"/>02730 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;constructor&#32;sets&#32;up&#32;the&#32;optimizer&#32;with&#32;the&#32;maximum&#32;allowable&#32;evaluations&#32;and&#32;an&#32;optional&#32;storage&#32;system</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02731"/>02731 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;retaining&#32;optimization&#32;state&#32;or&#32;results.&#32;The&#32;optimization&#32;process&#32;employs&#32;a&#32;global&#32;optimization&#32;algorithm</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02732"/>02732 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;effectively&#32;navigates&#32;through&#32;a&#32;rough&#32;landscape&#32;to&#32;find&#32;the&#32;global&#32;minimum.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02733"/>02733 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02734"/>02734 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02735"/>02735 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;int</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02736"/>02736 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;maximum&#32;number&#32;of&#32;iterations&#32;or&#32;evaluations&#32;the&#32;optimizer&#32;is&#32;allowed&#32;to&#32;perform.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02737"/>02737 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02738"/>02738 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02739"/>02739 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;An&#32;optional&#32;storage&#32;mechanism&#32;to&#32;save&#32;or&#32;track&#32;the&#32;state/results&#32;of&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02740"/>02740 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02741"/>02741 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02742"/>02742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;scipy&#32;basin&#32;hopping&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l02743"/><link linkend="_classfcmaes_1_1optimizer_1_1_dual__annealing_1ae4f414368932eac040e7431fec8fd6bc">02743</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02744"/>02744 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_dual__annealing_1aae221326dd0bd3d5b646badbf6a59133">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02745"/>02745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02746"/>02746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02747"/><link linkend="_classfcmaes_1_1optimizer_1_1_dual__annealing_1a9b9402e2a5a598d792164d460b82056d">02747</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02748"/>02748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02749"/>02749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02750"/>02750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02751"/>02751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02752"/>02752 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;using&#32;the&#32;basinhopping&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02753"/>02753 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm&#32;with&#32;local&#32;search.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02754"/>02754 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02755"/>02755 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;performs&#32;optimization&#32;by&#32;generating&#32;random&#32;starting&#32;points</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02756"/>02756 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;within&#32;the&#32;specified&#32;bounds&#32;and&#32;repeatedly&#32;applies&#32;local&#32;search&#32;algorithms</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02757"/>02757 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;find&#32;the&#32;minimum&#32;of&#32;the&#32;function.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02758"/>02758 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02759"/>02759 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02760"/>02760 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02761"/>02761 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;must&#32;accept&#32;an&#32;input&#32;array&#32;and&#32;return&#32;a&#32;scalar&#32;value&#32;as&#32;output.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02762"/>02762 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;or&#32;constraints&#32;on&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02763"/>02763 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem.&#32;This&#32;should&#32;define&#32;the&#32;lower&#32;and&#32;upper&#32;limits&#32;for&#32;each</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02764"/>02764 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dimension&#32;of&#32;the&#32;input.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02765"/>02765 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;The&#32;optional&#32;initial&#32;guess&#32;for&#32;the&#32;starting</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02766"/>02766 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point&#32;of&#32;the&#32;optimization.&#32;If&#32;not&#32;provided,&#32;a&#32;uniform&#32;random&#32;starting</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02767"/>02767 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point&#32;within&#32;the&#32;bounds&#32;is&#32;generated.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02768"/>02768 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Ignored&#32;parameter&#32;for&#32;compatibility&#32;purposes.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02769"/>02769 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Generator):&#32;A&#32;random&#32;number&#32;generator&#32;for&#32;providing&#32;random&#32;points</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02770"/>02770 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;within&#32;the&#32;bounds&#32;during&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02771"/>02771 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Additional&#32;storage&#32;object&#32;or&#32;parameter,&#32;used&#32;for&#32;handling&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02772"/>02772 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maximum&#32;allowable&#32;evaluations&#32;during&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02773"/>02773 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02774"/>02774 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02775"/>02775 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;Returns&#32;a&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02776"/>02776 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;array&#32;of&#32;input&#32;values&#32;(`np.ndarray`)&#32;that&#32;minimize&#32;the&#32;objective</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02777"/>02777 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02778"/>02778 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;minimum&#32;objective&#32;value&#32;(`float`).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02779"/>02779 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;number&#32;of&#32;function&#32;evaluations&#32;performed&#32;(`int`).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02780"/>02780 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02781"/><link linkend="_classfcmaes_1_1optimizer_1_1_dual__annealing_1aae221326dd0bd3d5b646badbf6a59133">02781</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localevals&#32;=&#32;200
<anchor xml:id="_optimizer_8py_source_1l02782"/>02782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxiter&#32;=&#32;int(self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store)&#32;/&#32;localevals)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02783"/>02783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l02784"/>02784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;rg.uniform(bounds.lb,&#32;bounds.ub)
<anchor xml:id="_optimizer_8py_source_1l02785"/>02785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02786"/>02786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;basinhopping(fun,&#32;guess,&#32;niter=maxiter,&#32;
<anchor xml:id="_optimizer_8py_source_1l02787"/>02787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minimizer_kwargs={<emphasis role="stringliteral">&quot;method&quot;</emphasis>:&#32;<emphasis role="stringliteral">&apos;SLSQP&apos;</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02788"/>02788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;bounds&quot;</emphasis>:bounds},
<anchor xml:id="_optimizer_8py_source_1l02789"/>02789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;accept_test=<link linkend="_classfcmaes_1_1optimizer_1_1_check_bounds">CheckBounds</link>(bounds),
<anchor xml:id="_optimizer_8py_source_1l02790"/>02790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seed&#32;=&#32;int(rg.uniform(0,&#32;2**32&#32;-&#32;1)))
<anchor xml:id="_optimizer_8py_source_1l02791"/>02791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l02792"/>02792 
<anchor xml:id="_optimizer_8py_source_1l02793"/>02793 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_minimize">Minimize</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02794"/>02794 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Optimization&#32;utilizing&#32;the&#32;scipy&#32;minimize&#32;function.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02795"/>02795 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02796"/>02796 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;is&#32;designed&#32;to&#32;perform&#32;optimization&#32;tasks&#32;using&#32;the&#32;scipy</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02797"/>02797 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;minimize&#32;method.&#32;It&#32;allows&#32;for&#32;specifying&#32;bounds,&#32;initial&#32;guesses,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02798"/>02798 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;handles&#32;optimization&#32;with&#32;lower-level&#32;control.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02799"/>02799 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02800"/>02800 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02801"/>02801 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(int):&#32;Maximum&#32;number&#32;of&#32;function&#32;evaluations</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02802"/>02802 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allowed&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02803"/><link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution">02803</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;Name&#32;of&#32;the&#32;optimizer,&#32;set&#32;to&#32;&apos;scipy&#32;minimize&apos;.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02804"/>02804 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02805"/>02805 &#32;
<anchor xml:id="_optimizer_8py_source_1l02806"/>02806 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a92e2de95c88f14f16c601cb783f9e64d">__init__</link>(self,&#32;max_evaluations=50000,&#32;store=None):
<anchor xml:id="_optimizer_8py_source_1l02807"/>02807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02808"/>02808 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;optimizer&#32;using&#32;the&#32;scipy&#32;minimize&#32;method&#32;with&#32;a&#32;specified&#32;maximum&#32;number</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02809"/>02809 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;evaluations&#32;and&#32;an&#32;optional&#32;store&#32;for&#32;collected&#32;data.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02810"/>02810 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02811"/>02811 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02812"/>02812 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;int,&#32;optional</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02813"/>02813 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;during&#32;optimization.&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02814"/>02814 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Any,&#32;optional</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02815"/>02815 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optional&#32;storage&#32;for&#32;collected&#32;data&#32;during&#32;optimization.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02816"/>02816 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02817"/>02817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;scipy&#32;minimize&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l02818"/>02818 &#32;
<anchor xml:id="_optimizer_8py_source_1l02819"/>02819 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02820"/>02820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02821"/>02821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02822"/><link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a92e2de95c88f14f16c601cb783f9e64d">02822</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02823"/>02823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02824"/>02824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02825"/>02825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02826"/><link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a6acd0d736b610c904c1ecdec83ee1b42">02826</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02827"/>02827 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;function&#32;within&#32;specified&#32;bounds&#32;and&#32;optionally&#32;using&#32;an&#32;initial</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02828"/>02828 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02829"/>02829 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02830"/>02830 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;uses&#32;a&#32;specified&#32;random&#32;generator&#32;to&#32;generate&#32;an&#32;initial&#32;guess&#32;if&#32;none</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02831"/>02831 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;provided.&#32;The&#32;optimization&#32;process&#32;is&#32;carried&#32;out&#32;within&#32;the&#32;provided&#32;bounds,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02832"/>02832 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;optimal&#32;solution,&#32;objective&#32;function&#32;value&#32;at&#32;the&#32;optimum,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02833"/>02833 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;number&#32;of&#32;function&#32;evaluations&#32;are&#32;returned.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02834"/>02834 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02835"/>02835 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02836"/>02836 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;be&#32;minimized.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02837"/>02837 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Accepts&#32;an&#32;array-like&#32;input&#32;and&#32;returns&#32;a&#32;floating-point&#32;value.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02838"/>02838 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;boundary&#32;constraints&#32;for&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02839"/>02839 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variables&#32;in&#32;the&#32;form&#32;of&#32;lower&#32;and&#32;upper&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02840"/>02840 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike],&#32;optional):&#32;The&#32;initial&#32;guess&#32;for&#32;the&#32;optimization,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02841"/>02841 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;provided.&#32;If&#32;None,&#32;a&#32;random&#32;value&#32;within&#32;bounds&#32;will&#32;be&#32;generated.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02842"/>02842 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02843"/>02843 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float],&#32;optional):&#32;Ignored.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02844"/>02844 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Generator):&#32;A&#32;random&#32;generator&#32;for&#32;creating&#32;random&#32;numbers,&#32;used&#32;if&#32;no</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02845"/>02845 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;is&#32;provided.&#32;Defaults&#32;to&#32;Generator(PCG64DXSM()).</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02846"/>02846 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Reserved&#32;for&#32;potential&#32;future&#32;usage.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02847"/>02847 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02848"/>02848 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02849"/>02849 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02850"/>02850 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;optimal&#32;solution&#32;as&#32;a&#32;NumPy&#32;array.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02851"/>02851 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;objective&#32;function&#32;value&#32;at&#32;the&#32;optimum.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02852"/><link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776">02852</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;number&#32;of&#32;function&#32;evaluations&#32;during&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02853"/>02853 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02854"/>02854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l02855"/>02855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;rg.uniform(bounds.lb,&#32;bounds.ub)
<anchor xml:id="_optimizer_8py_source_1l02856"/>02856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776">minimize</link>(fun,&#32;x0=guess,&#32;bounds=bounds)
<anchor xml:id="_optimizer_8py_source_1l02857"/>02857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l02858"/>02858 &#32;
<anchor xml:id="_optimizer_8py_source_1l02859"/>02859 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_shgo">Shgo</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02860"/>02860 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Shgo&#32;optimizer&#32;for&#32;mathematical&#32;function&#32;minimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02861"/>02861 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02862"/>02862 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;leverages&#32;the&#32;scipy&#32;`shgo`&#32;optimization&#32;algorithm&#32;to&#32;minimize</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02863"/>02863 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;a&#32;given&#32;mathematical&#32;function&#32;within&#32;a&#32;specified&#32;set&#32;of&#32;bounds.&#32;It&#32;is</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02864"/>02864 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;particularly&#32;suitable&#32;for&#32;global&#32;optimization&#32;problems.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02865"/>02865 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02866"/>02866 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;optimizer&#32;evaluates&#32;the&#32;function&#32;iteratively&#32;and&#32;searches&#32;for&#32;its</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02867"/>02867 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;minimum&#32;value,&#32;returning&#32;the&#32;optimal&#32;solution,&#32;the&#32;function&apos;s&#32;value&#32;at</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02868"/>02868 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;solution,&#32;and&#32;the&#32;number&#32;of&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02869"/>02869 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02870"/>02870 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02871"/>02871 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(int):&#32;Maximum&#32;number&#32;of&#32;function&#32;evaluations&#32;allowed</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02872"/>02872 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02873"/>02873 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02874"/>02874 
<anchor xml:id="_optimizer_8py_source_1l02875"/>02875 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution_1a92e2de95c88f14f16c601cb783f9e64d">__init__</link>(self,&#32;max_evaluations=50000,&#32;store=None):
<anchor xml:id="_optimizer_8py_source_1l02876"/>02876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02877"/><link linkend="_classfcmaes_1_1optimizer_1_1_check_bounds">02877</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;a&#32;Scipy&#32;SHGO&#32;(Simplicial&#32;Homology&#32;Global&#32;Optimization)&#32;optimizer.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02878"/>02878 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02879"/>02879 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;constructor&#32;sets&#32;up&#32;the&#32;optimizer&#32;with&#32;a&#32;maximum&#32;number&#32;of&#32;evaluations</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02880"/>02880 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;an&#32;optional&#32;storage&#32;to&#32;manage&#32;optimization&#32;runs.&#32;It&#32;leverages&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02881"/>02881 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`Optimizer`&#32;base&#32;class&#32;for&#32;initialization&#32;and&#32;specifies&#32;the&#32;use&#32;of&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02882"/>02882 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SHGO&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02883"/>02883 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02884"/>02884 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02885"/>02885 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;int</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02886"/>02886 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;maximum&#32;number&#32;of&#32;function&#32;evaluations&#32;allowed&#32;during&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02887"/>02887 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02888"/>02888 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;object&#32;or&#32;None</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02889"/>02889 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;An&#32;optional&#32;parameter&#32;to&#32;store&#32;or&#32;manage&#32;optimization&#32;results.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02890"/>02890 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;not&#32;provided,&#32;defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02891"/>02891 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02892"/>02892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;scipy&#32;shgo&apos;</emphasis>)
<anchor xml:id="_optimizer_8py_source_1l02893"/><link linkend="_classfcmaes_1_1optimizer_1_1_check_bounds_1a21fd59a9771e5e58340921efd952eadd">02893</link> &#32;
<anchor xml:id="_optimizer_8py_source_1l02894"/><link linkend="_classfcmaes_1_1optimizer_1_1_check_bounds_1aed2f7dfc674ae70d6e768e4b6415ae7f">02894</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>minimize(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l02895"/>02895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l02896"/>02896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l02897"/>02897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l02898"/>02898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02899"/>02899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l02900"/>02900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l02901"/>02901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02902"/>02902 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;callable&#32;function&#32;within&#32;specified&#32;bounds&#32;using&#32;a&#32;particular&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02903"/>02903 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02904"/>02904 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;leverages&#32;the&#32;SHGO&#32;(Simplicial&#32;Homology&#32;Global&#32;Optimization)&#32;algorithm&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02905"/><link linkend="_classfcmaes_1_1optimizer_1_1_check_bounds_1a85adee224b45c4a645b251017c1d604b">02905</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;identify&#32;the&#32;minimum&#32;of&#32;a&#32;user-provided&#32;objective&#32;function&#32;over&#32;given&#32;bounds.&#32;The&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02906"/>02906 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process&#32;involves&#32;constraints,&#32;initial&#32;guesses,&#32;and&#32;additional&#32;configuration.&#32;The&#32;optimizer</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02907"/>02907 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returns&#32;the&#32;minimum&#32;parameters,&#32;the&#32;minimum&#32;function&#32;value,&#32;and&#32;the&#32;number&#32;of&#32;objective</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02908"/>02908 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02909"/>02909 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02910"/>02910 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02911"/>02911 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.&#32;It&#32;should&#32;be&#32;a</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02912"/>02912 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;callable&#32;that&#32;accepts&#32;an&#32;array-like&#32;input&#32;and&#32;returns&#32;a&#32;scalar.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02913"/>02913 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;for&#32;the&#32;search&#32;space,&#32;typically&#32;containing&#32;lower</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02914"/>02914 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;upper&#32;limits&#32;for&#32;each&#32;dimension&#32;of&#32;the&#32;input.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02915"/>02915 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike],&#32;optional):&#32;An&#32;optional&#32;array&#32;providing&#32;an&#32;initial&#32;guess&#32;for</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02916"/>02916 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimization.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02917"/>02917 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float],&#32;optional):&#32;A&#32;parameter&#32;intended&#32;for&#32;standard&#32;deviations,&#32;currently</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02918"/>02918 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ignored&#32;in&#32;this&#32;implementation.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02919"/>02919 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Generator,&#32;optional):&#32;A&#32;random&#32;number&#32;generator&#32;used&#32;for&#32;reproducible&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02920"/>02920 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processes.&#32;Defaults&#32;to&#32;a&#32;PCG64DXSM&#32;generator&#32;instance.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02921"/>02921 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(optional):&#32;A&#32;storage&#32;option&#32;to&#32;track&#32;evaluation&#32;or&#32;state&#32;during&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02922"/>02922 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;The&#32;exact&#32;format&#32;and&#32;use&#32;depend&#32;on&#32;user&#32;implementation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02923"/><link linkend="_classfcmaes_1_1optimizer_1_1_basin__hopping">02923</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02924"/>02924 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02925"/>02925 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing&#32;the&#32;following:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02926"/>02926 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;np.ndarray:&#32;The&#32;parameter&#32;values&#32;at&#32;the&#32;minimum&#32;point.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02927"/>02927 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;float:&#32;The&#32;minimum&#32;value&#32;of&#32;the&#32;objective&#32;function.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02928"/>02928 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;int:&#32;The&#32;total&#32;number&#32;of&#32;function&#32;evaluations&#32;performed&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02929"/>02929 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02930"/>02930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;shgo(fun,&#32;bounds=list(zip(bounds.lb,&#32;bounds.ub)),&#32;
<anchor xml:id="_optimizer_8py_source_1l02931"/>02931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;options={<emphasis role="stringliteral">&apos;maxfev&apos;</emphasis>:&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store)})
<anchor xml:id="_optimizer_8py_source_1l02932"/>02932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_optimizer_8py_source_1l02933"/>02933 
<anchor xml:id="_optimizer_8py_source_1l02934"/>02934 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1single__objective">single_objective</link>:
<anchor xml:id="_optimizer_8py_source_1l02935"/>02935 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Represents&#32;a&#32;wrapper&#32;for&#32;a&#32;single-objective&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02936"/>02936 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02937"/>02937 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;encapsulates&#32;a&#32;single-objective&#32;optimization&#32;problem&#32;provided</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02938"/>02938 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;via&#32;a&#32;Pagmo&#32;problem&#32;instance.&#32;It&#32;provides&#32;a&#32;fitness&#32;function&#32;for&#32;evaluating</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02939"/>02939 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;solutions&#32;and&#32;handles&#32;problem-specific&#32;details&#32;such&#32;as&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02940"/>02940 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02941"/>02941 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02942"/>02942 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pagmo_prob:&#32;Pagmo&#32;problem&#32;instance&#32;containing&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02943"/>02943 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;A&#32;string&#32;representing&#32;the&#32;name&#32;of&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02944"/>02944 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(function):&#32;A&#32;function&#32;that&#32;evaluates&#32;the&#32;fitness&#32;of&#32;a&#32;solution.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02945"/>02945 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Bounds):&#32;An&#32;object&#32;defining&#32;the&#32;lower&#32;and&#32;upper&#32;bounds&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02946"/>02946 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;decision&#32;variables&#32;in&#32;the&#32;problem.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02947"/>02947 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02948"/><link linkend="_classfcmaes_1_1optimizer_1_1_basin__hopping_1adc078d65d34197f8aef544ebe27fde81">02948</link> &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02949"/>02949 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_basin__hopping_1adc078d65d34197f8aef544ebe27fde81">__init__</link>(self,&#32;pagmo_prob):
<anchor xml:id="_optimizer_8py_source_1l02950"/>02950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02951"/>02951 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;instance&#32;of&#32;the&#32;class&#32;with&#32;properties&#32;derived&#32;from&#32;the&#32;provided&#32;pagmo</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02952"/>02952 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02953"/>02953 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02954"/>02954 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02955"/>02955 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pagmo_prob:&#32;A&#32;pagmo&#32;problem&#32;instance&#32;used&#32;to&#32;initialize&#32;the&#32;class.&#32;It&#32;is&#32;expected</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02956"/>02956 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;contain&#32;methods&#32;`get_name()`&#32;and&#32;`get_bounds()`,&#32;which&#32;provide&#32;the&#32;name&#32;of</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02957"/>02957 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;problem&#32;and&#32;its&#32;boundary&#32;values,&#32;respectively.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02958"/>02958 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02959"/>02959 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02960"/>02960 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pagmo_prob:&#32;The&#32;provided&#32;pagmo&#32;problem&#32;instance.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02961"/>02961 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name:&#32;Name&#32;of&#32;the&#32;problem&#32;as&#32;retrieved&#32;from&#32;the&#32;`get_name`&#32;method&#32;of&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02962"/>02962 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided&#32;pagmo&#32;problem&#32;instance.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02963"/>02963 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Fitness&#32;function&#32;associated&#32;with&#32;the&#32;initialized&#32;class&#32;instance.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02964"/>02964 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds&#32;object&#32;created&#32;using&#32;the&#32;lower&#32;and&#32;upper&#32;bounds&#32;of&#32;the&#32;problem&#32;as</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02965"/>02965 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retrieved&#32;from&#32;the&#32;`get_bounds`&#32;method&#32;of&#32;the&#32;provided&#32;pagmo&#32;problem&#32;instance.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02966"/>02966 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02967"/>02967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.pagmo_prob&#32;=&#32;pagmo_prob
<anchor xml:id="_optimizer_8py_source_1l02968"/>02968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>&#32;=&#32;pagmo_prob.get_name()&#32;
<anchor xml:id="_optimizer_8py_source_1l02969"/>02969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.fun&#32;=&#32;self.fitness
<anchor xml:id="_optimizer_8py_source_1l02970"/>02970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lb,&#32;ub&#32;=&#32;pagmo_prob.get_bounds()
<anchor xml:id="_optimizer_8py_source_1l02971"/>02971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.bounds&#32;=&#32;Bounds(lb,&#32;ub)
<anchor xml:id="_optimizer_8py_source_1l02972"/>02972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l02973"/>02973 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>fitness(self,X):
<anchor xml:id="_optimizer_8py_source_1l02974"/>02974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02975"/>02975 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calculates&#32;the&#32;fitness&#32;value&#32;for&#32;a&#32;given&#32;input&#32;vector&#32;X&#32;using&#32;the&#32;problem&apos;s</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02976"/>02976 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fitness&#32;function.&#32;If&#32;any&#32;exception&#32;occurs&#32;during&#32;the&#32;calculation,&#32;it&#32;returns</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02977"/>02977 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;maximum&#32;floating-point&#32;value&#32;as&#32;a&#32;fallback.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02978"/>02978 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02979"/>02979 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02980"/>02980 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X&#32;(list[float]):&#32;The&#32;input&#32;vector&#32;for&#32;which&#32;the&#32;fitness&#32;value&#32;is&#32;to&#32;be</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02981"/><link linkend="_classfcmaes_1_1optimizer_1_1_basin__hopping_1ab665db39cdee947aae4959f7d2f7b13c">02981</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;calculated.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02982"/>02982 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02983"/>02983 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02984"/>02984 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;fitness&#32;value&#32;calculated&#32;for&#32;the&#32;input&#32;vector&#32;X.&#32;Returns</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02985"/>02985 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sys.float_info.max&#32;in&#32;case&#32;of&#32;an&#32;exception.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02986"/>02986 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02987"/>02987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l02988"/>02988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.pagmo_prob.fitness(X)[0]
<anchor xml:id="_optimizer_8py_source_1l02989"/>02989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_optimizer_8py_source_1l02990"/>02990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sys.float_info.max
<anchor xml:id="_optimizer_8py_source_1l02991"/>02991 
<anchor xml:id="_optimizer_8py_source_1l02992"/>02992 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_n_lopt">NLopt</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_optimizer_8py_source_1l02993"/>02993 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02994"/>02994 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Optimizer&#32;class&#32;utilizing&#32;NLopt&#32;algorithms&#32;for&#32;optimization&#32;tasks.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02995"/>02995 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l02996"/>02996 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;is&#32;designed&#32;to&#32;perform&#32;optimization&#32;using&#32;the&#32;NLopt&#32;library,</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02997"/>02997 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;which&#32;provides&#32;algorithms&#32;for&#32;nonlinear&#32;optimization&#32;with&#32;constraints&#32;and&#32;bounds.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02998"/>02998 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;NLopt&#32;optimizer&#32;supports&#32;various&#32;optimization&#32;algorithms&#32;and&#32;is&#32;utilized</emphasis>
<anchor xml:id="_optimizer_8py_source_1l02999"/>02999 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;through&#32;this&#32;wrapper&#32;to&#32;interact&#32;with&#32;objective&#32;functions,&#32;bounds,&#32;and&#32;initial</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03000"/>03000 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;guess&#32;settings.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03001"/>03001 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l03002"/>03002 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03003"/>03003 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algo:&#32;The&#32;NLopt&#32;algorithm&#32;object&#32;that&#32;defines&#32;the&#32;optimization&#32;algorithm&#32;to&#32;use.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03004"/>03004 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03005"/>03005 
<anchor xml:id="_optimizer_8py_source_1l03006"/>03006 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_basin__hopping_1adc078d65d34197f8aef544ebe27fde81">__init__</link>(self,&#32;algo,&#32;max_evaluations=50000,&#32;store=None):
<anchor xml:id="_optimizer_8py_source_1l03007"/>03007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03008"/><link linkend="_classfcmaes_1_1optimizer_1_1_minimize">03008</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;optimizer&#32;with&#32;the&#32;specified&#32;algorithm,&#32;maximum&#32;evaluation&#32;limit,&#32;and&#32;storage&#32;option.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03009"/>03009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l03010"/>03010 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03011"/>03011 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algo:&#32;Instance&#32;of&#32;the&#32;optimization&#32;algorithm&#32;to&#32;be&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03012"/>03012 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;to&#32;perform&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03013"/>03013 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;50000.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03014"/>03014 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional&#32;parameter&#32;for&#32;storage&#32;of&#32;intermediate&#32;results.&#32;Defaults&#32;to</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03015"/>03015 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03016"/>03016 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03017"/>03017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;max_evaluations,&#32;<emphasis role="stringliteral">&apos;NLopt&#32;&apos;</emphasis>&#32;+&#32;algo.get_algorithm_name())
<anchor xml:id="_optimizer_8py_source_1l03018"/>03018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.algo&#32;=&#32;algo
<anchor xml:id="_optimizer_8py_source_1l03019"/>03019 &#32;
<anchor xml:id="_optimizer_8py_source_1l03020"/>03020 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1optimizer_1_1_minimize_1a58bfab5556bb4969d88c7905361515ab">minimize</link>(self,&#32;
<anchor xml:id="_optimizer_8py_source_1l03021"/>03021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_optimizer_8py_source_1l03022"/>03022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds],&#32;
<anchor xml:id="_optimizer_8py_source_1l03023"/>03023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_optimizer_8py_source_1l03024"/>03024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs:&#32;Optional[float]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03025"/>03025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg=Generator(PCG64DXSM()),&#32;
<anchor xml:id="_optimizer_8py_source_1l03026"/>03026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:
<anchor xml:id="_optimizer_8py_source_1l03027"/>03027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03028"/><link linkend="_classfcmaes_1_1optimizer_1_1_minimize_1a1d0c22f3f65fc79861e54f90424f0203">03028</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;an&#32;objective&#32;function&#32;within&#32;given&#32;bounds&#32;using&#32;an&#32;optimizer&#32;object.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03029"/>03029 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l03030"/>03030 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;leverages&#32;the&#32;optimization&#32;algorithm&#32;set&#32;on&#32;the&#32;optimizer&#32;object</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03031"/>03031 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;minimize&#32;the&#32;provided&#32;objective&#32;function.&#32;It&#32;also&#32;allows&#32;setting&#32;initial</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03032"/>03032 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;values&#32;and&#32;configuration&#32;through&#32;the&#32;specified&#32;parameters.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03033"/>03033 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l03034"/>03034 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03035"/>03035 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;that&#32;takes&#32;an</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03036"/>03036 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array-like&#32;input&#32;and&#32;returns&#32;a&#32;float&#32;as&#32;its&#32;value&#32;to&#32;be&#32;minimized.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03037"/>03037 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;bounds&#32;for&#32;the&#32;optimization.&#32;It&#32;defines</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03038"/>03038 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;lower&#32;and&#32;upper&#32;limits&#32;for&#32;the&#32;parameters&#32;of&#32;the&#32;target&#32;function.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03039"/>03039 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;values&#32;for&#32;the&#32;optimization</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03040"/>03040 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameters.&#32;If&#32;not&#32;provided,&#32;a&#32;random&#32;guess&#32;within&#32;bounds&#32;will&#32;be&#32;used.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03041"/>03041 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdevs&#32;(Optional[float]):&#32;Standard&#32;deviation&#32;initial&#32;step&#32;size&#32;for&#32;the</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03042"/>03042 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer.&#32;This&#32;parameter&#32;may&#32;not&#32;always&#32;be&#32;utilized&#32;and&#32;is&#32;ignored</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03043"/>03043 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;this&#32;method.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03044"/>03044 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Generator):&#32;Random&#32;number&#32;generator&#32;instance&#32;for&#32;generating&#32;random</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03045"/>03045 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initial&#32;guesses&#32;if&#32;`guess`&#32;is&#32;not&#32;provided.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03046"/>03046 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(Any):&#32;Optional&#32;object&#32;to&#32;store&#32;information&#32;during&#32;the&#32;evaluation</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03047"/>03047 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;This&#32;parameter&#32;may&#32;affect&#32;the&#32;behavior&#32;of&#32;`max_eval_num`.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03048"/>03048 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l03049"/>03049 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03050"/>03050 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;float,&#32;int]:&#32;A&#32;tuple&#32;containing&#32;the&#32;optimal&#32;parameter</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03051"/>03051 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values&#32;(array-like),&#32;the&#32;function&#32;value&#32;at&#32;the&#32;minimum,&#32;and&#32;the&#32;number</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03052"/>03052 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03053"/>03053 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03054"/>03054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.fun&#32;=&#32;fun
<anchor xml:id="_optimizer_8py_source_1l03055"/>03055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt&#32;=&#32;self.algo
<anchor xml:id="_optimizer_8py_source_1l03056"/>03056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt.set_min_objective(self.nlfunc)
<anchor xml:id="_optimizer_8py_source_1l03057"/>03057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt.set_lower_bounds(bounds.lb)
<anchor xml:id="_optimizer_8py_source_1l03058"/>03058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt.set_upper_bounds(bounds.ub)
<anchor xml:id="_optimizer_8py_source_1l03059"/><link linkend="_classfcmaes_1_1optimizer_1_1_minimize_1a58bfab5556bb4969d88c7905361515ab">03059</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt.set_maxeval(self.<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link>(store))
<anchor xml:id="_optimizer_8py_source_1l03060"/>03060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt.set_initial_step(sdevs)
<anchor xml:id="_optimizer_8py_source_1l03061"/>03061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l03062"/>03062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;rg.uniform(bounds.lb,&#32;bounds.ub)
<anchor xml:id="_optimizer_8py_source_1l03063"/>03063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;opt.optimize(guess)
<anchor xml:id="_optimizer_8py_source_1l03064"/>03064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;opt.last_optimum_value()
<anchor xml:id="_optimizer_8py_source_1l03065"/>03065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x,&#32;y,&#32;opt.get_numevals()
<anchor xml:id="_optimizer_8py_source_1l03066"/>03066 &#32;&#32;&#32;&#32;
<anchor xml:id="_optimizer_8py_source_1l03067"/>03067 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>nlfunc(self,&#32;x,&#32;_):
<anchor xml:id="_optimizer_8py_source_1l03068"/>03068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03069"/>03069 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Executes&#32;a&#32;computation&#32;using&#32;the&#32;provided&#32;function.&#32;If&#32;an&#32;exception&#32;occurs&#32;during</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03070"/>03070 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;execution,&#32;it&#32;returns&#32;the&#32;maximum&#32;float&#32;value&#32;from&#32;sys.float_info.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03071"/>03071 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l03072"/>03072 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03073"/>03073 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;Input&#32;value&#32;passed&#32;to&#32;the&#32;function&#32;for&#32;computation.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03074"/>03074 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_:&#32;Unused&#32;parameter.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03075"/>03075 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_optimizer_8py_source_1l03076"/>03076 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03077"/>03077 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;result&#32;of&#32;the&#32;function&#32;computation&#32;if&#32;successful,&#32;or&#32;the&#32;maximum&#32;float</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03078"/>03078 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;from&#32;sys.float_info&#32;in&#32;case&#32;of&#32;an&#32;exception.</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03079"/>03079 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_optimizer_8py_source_1l03080"/>03080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_optimizer_8py_source_1l03081"/>03081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.fun(x)
<anchor xml:id="_optimizer_8py_source_1l03082"/>03082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_optimizer_8py_source_1l03083"/>03083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sys.float_info.max
<anchor xml:id="_optimizer_8py_source_1l03084"/><link linkend="_classfcmaes_1_1optimizer_1_1_shgo">03084</link> &#32;&#32;&#32;&#32;
</programlisting></section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_maxcut_8py_source" xml:lang="en-US">
<title>maxcut.py</title>
<indexterm><primary>examples/maxcut.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_maxcut_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1maxcut">00001</link> <emphasis role="stringliteral">&apos;&apos;&apos;&#32;</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00002"/>00002 <emphasis role="stringliteral">Tests&#32;performance&#32;of&#32;CR-FM-NES&#32;and&#32;SPSA&#32;using&#32;parallel&#32;optimization&#32;retry&#32;for&#32;the&#32;quantum</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00003"/>00003 <emphasis role="stringliteral">implementation&#32;of&#32;maxcut&#32;by&#32;optimizing&#32;the&#32;parameters&#32;of&#32;a&#32;</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00004"/>00004 <emphasis role="stringliteral">VQE&#32;(variational&#32;quantum&#32;eigensolver)</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00005"/>00005 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_maxcut_8py_source_1l00006"/>00006 <emphasis role="stringliteral">This&#32;code&#32;is&#32;adapted&#32;from</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00007"/>00007 <emphasis role="stringliteral">https://qiskit.org/documentation/optimization/tutorials/06_examples_max_cut_and_tsp.html</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00008"/>00008 <emphasis role="stringliteral">https://qiskit.org/documentation/tutorials/algorithms/03_vqe_simulation_with_noise.html</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00009"/>00009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_maxcut_8py_source_1l00010"/>00010 <emphasis role="stringliteral">Changes:</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00011"/>00011 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_maxcut_8py_source_1l00012"/>00012 <emphasis role="stringliteral">qiskit&#32;was&#32;largely&#32;refactored&#32;lately,&#32;a&#32;lot&#32;of&#32;imports&#32;needed&#32;to&#32;be&#32;changed</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00013"/>00013 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_maxcut_8py_source_1l00014"/>00014 <emphasis role="stringliteral">Added&#32;two&#32;optimizer&#32;wrappers:</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00015"/>00015 <emphasis role="stringliteral">-&#32;wrapped&#32;SPSA&#32;as&#32;fcmaes&#32;optimizer&#32;(fcmaes_SPSA)</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00016"/>00016 <emphasis role="stringliteral">-&#32;wrapped&#32;fcmaes&#32;optimizers&#32;+&#32;parallel&#32;retry&#32;as&#32;qiskit&#32;optimizer</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00017"/>00017 <emphasis role="stringliteral">&#32;</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00018"/>00018 <emphasis role="stringliteral">These&#32;packages&#32;need&#32;to&#32;be&#32;installed&#32;before&#32;executing&#32;the&#32;code:</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00019"/>00019 <emphasis role="stringliteral">pip&#32;install&#32;quiskit</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00020"/>00020 <emphasis role="stringliteral">pip&#32;install&#32;quiskit-optimization</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00021"/>00021 <emphasis role="stringliteral">pip&#32;install&#32;-U&#32;qiskit-aer</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00022"/>00022 <emphasis role="stringliteral">pip&#32;install&#32;fcmaes</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00023"/>00023 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_maxcut_8py_source_1l00024"/>00024 <emphasis role="stringliteral">See&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Quant.adoc&#32;for&#32;a&#32;detailed&#32;description.</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00025"/>00025 <emphasis role="stringliteral">&apos;&apos;&apos;</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00026"/>00026 
<anchor xml:id="_maxcut_8py_source_1l00027"/>00027 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.2</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00028"/>00028 
<anchor xml:id="_maxcut_8py_source_1l00029"/>00029 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_maxcut_8py_source_1l00030"/>00030 <emphasis role="keyword">import</emphasis>&#32;networkx&#32;<emphasis role="keyword">as</emphasis>&#32;nx
<anchor xml:id="_maxcut_8py_source_1l00031"/>00031 
<anchor xml:id="_maxcut_8py_source_1l00032"/>00032 <emphasis role="keyword">from</emphasis>&#32;qiskit&#32;<emphasis role="keyword">import</emphasis>&#32;Aer
<anchor xml:id="_maxcut_8py_source_1l00033"/>00033 <emphasis role="keyword">from</emphasis>&#32;qiskit.circuit.library&#32;<emphasis role="keyword">import</emphasis>&#32;TwoLocal
<anchor xml:id="_maxcut_8py_source_1l00034"/>00034 <emphasis role="keyword">from</emphasis>&#32;qiskit_optimization.applications&#32;<emphasis role="keyword">import</emphasis>&#32;Maxcut,&#32;Tsp
<anchor xml:id="_maxcut_8py_source_1l00035"/>00035 <emphasis role="keyword">from</emphasis>&#32;qiskit.algorithms&#32;<emphasis role="keyword">import</emphasis>&#32;VQE,&#32;NumPyMinimumEigensolver
<anchor xml:id="_maxcut_8py_source_1l00036"/>00036 <emphasis role="keyword">from</emphasis>&#32;qiskit.algorithms.optimizers&#32;<emphasis role="keyword">import</emphasis>&#32;SPSA
<anchor xml:id="_maxcut_8py_source_1l00037"/>00037 <emphasis role="keyword">from</emphasis>&#32;qiskit.utils&#32;<emphasis role="keyword">import</emphasis>&#32;QuantumInstance
<anchor xml:id="_maxcut_8py_source_1l00038"/>00038 <emphasis role="keyword">from</emphasis>&#32;qiskit.providers.aer&#32;<emphasis role="keyword">import</emphasis>&#32;QasmSimulator
<anchor xml:id="_maxcut_8py_source_1l00039"/>00039 <emphasis role="keyword">from</emphasis>&#32;qiskit.providers.aer.noise&#32;<emphasis role="keyword">import</emphasis>&#32;NoiseModel
<anchor xml:id="_maxcut_8py_source_1l00040"/>00040 <emphasis role="keyword">from</emphasis>&#32;qiskit.providers.fake_provider&#32;<emphasis role="keyword">import</emphasis>&#32;FakeVigo
<anchor xml:id="_maxcut_8py_source_1l00041"/>00041 <emphasis role="keyword">from</emphasis>&#32;qiskit.algorithms&#32;<emphasis role="keyword">import</emphasis>&#32;optimizers
<anchor xml:id="_maxcut_8py_source_1l00042"/>00042 <emphasis role="keyword">from</emphasis>&#32;qiskit.algorithms.optimizers&#32;<emphasis role="keyword">import</emphasis>&#32;OptimizerSupportLevel,&#32;OptimizerResult
<anchor xml:id="_maxcut_8py_source_1l00043"/>00043 <emphasis role="keyword">from</emphasis>&#32;qiskit.algorithms.optimizers.optimizer&#32;<emphasis role="keyword">import</emphasis>&#32;POINT
<anchor xml:id="_maxcut_8py_source_1l00044"/>00044 
<anchor xml:id="_maxcut_8py_source_1l00045"/>00045 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;Optional,&#32;Callable,&#32;List,&#32;Dict,&#32;Any,&#32;Tuple
<anchor xml:id="_maxcut_8py_source_1l00046"/>00046 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds
<anchor xml:id="_maxcut_8py_source_1l00047"/>00047 <emphasis role="keyword">import</emphasis>&#32;threadpoolctl
<anchor xml:id="_maxcut_8py_source_1l00048"/>00048 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp
<anchor xml:id="_maxcut_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00050"/>00050 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Optimizer,&#32;Crfmnes_cpp,&#32;Crfmnes,&#32;Cma_python,&#32;wrapper,&#32;logger&#32;
<anchor xml:id="_maxcut_8py_source_1l00051"/>00051 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;retry
<anchor xml:id="_maxcut_8py_source_1l00052"/>00052 
<anchor xml:id="_maxcut_8py_source_1l00053"/>00053 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_maxcut_8py_source_1l00054"/>00054 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_maxcut_8py_source_1l00055"/>00055 
<anchor xml:id="_maxcut_8py_source_1l00056"/>00056 logger.remove()
<anchor xml:id="_maxcut_8py_source_1l00057"/><link linkend="_namespaceexamples_1_1maxcut_1aa3cc5f1ee347c061fa4829906787318b">00057</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_maxcut_8py_source_1l00058"/>00058 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_maxcut_8py_source_1l00059"/>00059 
<anchor xml:id="_maxcut_8py_source_1l00060"/>00060 <emphasis role="comment">#&#32;wraps&#32;SPSA&#32;as&#32;fcmaes&#32;optimizer</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00061"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___s_p_s_a">00061</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1maxcut_1_1fcmaes___s_p_s_a">fcmaes_SPSA</link>(<link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">Optimizer</link>):
<anchor xml:id="_maxcut_8py_source_1l00062"/>00062 
<anchor xml:id="_maxcut_8py_source_1l00063"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a0cb3788055eab2918241a2d216ca629e">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a0cb3788055eab2918241a2d216ca629e">__init__</link>(self,&#32;maxiter=1000):&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizer.__init__(self,&#32;maxiter,&#32;<emphasis role="stringliteral">&apos;SPSA&apos;</emphasis>)
<anchor xml:id="_maxcut_8py_source_1l00065"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a6d0c5f60a7a6da494656f103acf9c3d5">00065</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a6d0c5f60a7a6da494656f103acf9c3d5">opt</link>&#32;=&#32;SPSA(maxiter=maxiter)&#32;<emphasis role="comment">#&#32;guessing</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00066"/>00066 
<anchor xml:id="_maxcut_8py_source_1l00067"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a1b0cb9b532604387d1521da09efccb50">00067</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a1b0cb9b532604387d1521da09efccb50">minimize</link>(self,&#32;fun,&#32;bounds,&#32;guess=None,&#32;sdevs=None,&#32;rg=None,&#32;store=None):
<anchor xml:id="_maxcut_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:&#32;<emphasis role="comment">#&#32;necessary&#32;for&#32;parallel&#32;retry</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;np.random.uniform(bounds.lb,&#32;bounds.ub)&#32;<emphasis role="keywordflow">if</emphasis>&#32;rg&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;\
<anchor xml:id="_maxcut_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg.uniform(bounds.lb,&#32;bounds.ub)&#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a6d0c5f60a7a6da494656f103acf9c3d5">opt</link>.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a1b0cb9b532604387d1521da09efccb50">minimize</link>(fun,&#32;guess,&#32;bounds=[t&#32;<emphasis role="keywordflow">for</emphasis>&#32;t&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(bounds.lb,&#32;bounds.ub)])
<anchor xml:id="_maxcut_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret.x,&#32;ret.fun,&#32;ret.nfev
<anchor xml:id="_maxcut_8py_source_1l00073"/>00073 
<anchor xml:id="_maxcut_8py_source_1l00074"/>00074 <emphasis role="comment">#&#32;wraps&#32;fcmaes&#32;optimizers&#32;+&#32;parallel&#32;retry&#32;as&#32;qiskit&#32;optimizer</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00075"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer">00075</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer">fcmaes_Optimizer</link>(optimizers.Optimizer):
<anchor xml:id="_maxcut_8py_source_1l00076"/>00076 
<anchor xml:id="_maxcut_8py_source_1l00077"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a13d3b711374425e7bedd9936d1be1940">00077</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a13d3b711374425e7bedd9936d1be1940">__init__</link>(
<anchor xml:id="_maxcut_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self,
<anchor xml:id="_maxcut_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer,&#32;<emphasis role="comment">#&#32;used&#32;qiskit&#32;optimizer</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;variable&#32;bounds</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_retries:&#32;int&#32;=&#32;1,&#32;<emphasis role="comment">#&#32;number&#32;of&#32;parallel&#32;optimization&#32;retries</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;int&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;maximal&#32;number&#32;of&#32;parallel&#32;workers,&#32;if&#32;None&#32;uses&#32;all&#32;physical&#32;available&#32;threads</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use_wrapper&#32;=&#32;<emphasis role="keyword">False</emphasis>,&#32;<emphasis role="comment">#&#32;monitors&#32;optimization&#32;progress</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger&#32;=&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="comment">#&#32;monitors&#32;parallel&#32;retry</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00086"/>00086 &#32;&#32;&#32;&#32;)&#32;-&gt;&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_maxcut_8py_source_1l00087"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a48e3eb5669742b003aaaae8b7fffdf5f">00087</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a48e3eb5669742b003aaaae8b7fffdf5f">_optimizer</link>&#32;=&#32;optimizer
<anchor xml:id="_maxcut_8py_source_1l00088"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a88871f75c30a3e71cffe3ea0b879a27d">00088</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a88871f75c30a3e71cffe3ea0b879a27d">_bounds</link>&#32;=&#32;bounds
<anchor xml:id="_maxcut_8py_source_1l00089"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1ac57441ef830353ad6ffe5fd961061306">00089</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1ac57441ef830353ad6ffe5fd961061306">_max_retries</link>&#32;=&#32;max_retries
<anchor xml:id="_maxcut_8py_source_1l00090"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a4fe72093883bd0b7d751079443408b42">00090</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a4fe72093883bd0b7d751079443408b42">_workers</link>&#32;=&#32;mp.cpu_count()&#32;<emphasis role="keywordflow">if</emphasis>&#32;workers&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;workers&#32;
<anchor xml:id="_maxcut_8py_source_1l00091"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1aedc181d6c63eaafb9ef7c405e9410736">00091</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1aedc181d6c63eaafb9ef7c405e9410736">_use_wrapper</link>&#32;=&#32;use_wrapper
<anchor xml:id="_maxcut_8py_source_1l00092"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a05197bc618bc1f6d313a13c508db7a64">00092</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a05197bc618bc1f6d313a13c508db7a64">_logger</link>&#32;=&#32;logger
<anchor xml:id="_maxcut_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a055f54dac3620d222a29f8790baef305">get_support_level</link>(self):
<anchor xml:id="_maxcut_8py_source_1l00095"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a055f54dac3620d222a29f8790baef305">00095</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Returns&#32;support&#32;level&#32;dictionary.&quot;&quot;&quot;</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{
<anchor xml:id="_maxcut_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;gradient&quot;</emphasis>:&#32;OptimizerSupportLevel.ignored,
<anchor xml:id="_maxcut_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;bounds&quot;</emphasis>:&#32;OptimizerSupportLevel.required,
<anchor xml:id="_maxcut_8py_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;initial_point&quot;</emphasis>:&#32;OptimizerSupportLevel.supported,
<anchor xml:id="_maxcut_8py_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_maxcut_8py_source_1l00101"/>00101 
<anchor xml:id="_maxcut_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@property</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00103"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1af6557da6fed6cbe613e7eb5d3a2a2bfb">00103</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1af6557da6fed6cbe613e7eb5d3a2a2bfb">settings</link>(self)&#32;-&gt;&#32;Dict[str,&#32;Any]:
<anchor xml:id="_maxcut_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{<emphasis role="stringliteral">&quot;optimizer&quot;</emphasis>:&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a48e3eb5669742b003aaaae8b7fffdf5f">_optimizer</link>.name,&#32;<emphasis role="stringliteral">&quot;_max_retries&quot;</emphasis>:&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1ac57441ef830353ad6ffe5fd961061306">_max_retries</link>}
<anchor xml:id="_maxcut_8py_source_1l00105"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a1bb4080dbf712f3009acb3fa02544943">00105</link> 
<anchor xml:id="_maxcut_8py_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1af1011c9cb8dfae55ebe5c7d63cd74e40">minimize</link>(
<anchor xml:id="_maxcut_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self,
<anchor xml:id="_maxcut_8py_source_1l00108"/><link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1af1011c9cb8dfae55ebe5c7d63cd74e40">00108</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[POINT],&#32;float],
<anchor xml:id="_maxcut_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0:&#32;POINT,
<anchor xml:id="_maxcut_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;jac:&#32;Optional[Callable[[POINT],&#32;POINT]]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_maxcut_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[List[Tuple[float,&#32;float]]]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_maxcut_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;)&#32;-&gt;&#32;OptimizerResult:
<anchor xml:id="_maxcut_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bnds&#32;=&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a88871f75c30a3e71cffe3ea0b879a27d">_bounds</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;bounds&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;Bounds([b[0]&#32;<emphasis role="keywordflow">for</emphasis>&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;bounds],&#32;[b[1]&#32;<emphasis role="keywordflow">for</emphasis>&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;bounds])
<anchor xml:id="_maxcut_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1aedc181d6c63eaafb9ef7c405e9410736">_use_wrapper</link>:
<anchor xml:id="_maxcut_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1wrapper">wrapper</link>(fun)&#32;<emphasis role="comment">#&#32;monitors&#32;progress&#32;for&#32;all&#32;parallel&#32;processes</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;OptimizerResult()
<anchor xml:id="_maxcut_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1ac57441ef830353ad6ffe5fd961061306">_max_retries</link>&#32;&lt;=&#32;1:
<anchor xml:id="_maxcut_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x,&#32;y,&#32;nfev&#32;=&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a48e3eb5669742b003aaaae8b7fffdf5f">_optimizer</link>.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1af1011c9cb8dfae55ebe5c7d63cd74e40">minimize</link>(fun,&#32;bnds,&#32;guess=x0)
<anchor xml:id="_maxcut_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.x&#32;=&#32;x
<anchor xml:id="_maxcut_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.fun&#32;=&#32;y
<anchor xml:id="_maxcut_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.nfev&#32;=&#32;nfev
<anchor xml:id="_maxcut_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:&#32;
<anchor xml:id="_maxcut_8py_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;retry.minimize(fun,&#32;bnds,&#32;num_retries=self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1ac57441ef830353ad6ffe5fd961061306">_max_retries</link>,&#32;workers&#32;=&#32;self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a4fe72093883bd0b7d751079443408b42">_workers</link>,
<anchor xml:id="_maxcut_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer=self.<link linkend="_classexamples_1_1maxcut_1_1fcmaes___optimizer_1a48e3eb5669742b003aaaae8b7fffdf5f">_optimizer</link>)
<anchor xml:id="_maxcut_8py_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.x&#32;=&#32;ret.x
<anchor xml:id="_maxcut_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.fun&#32;=&#32;ret.fun
<anchor xml:id="_maxcut_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.nfev&#32;=&#32;ret.nfev
<anchor xml:id="_maxcut_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result
<anchor xml:id="_maxcut_8py_source_1l00129"/>00129 
<anchor xml:id="_maxcut_8py_source_1l00130"/>00130 <emphasis role="keyword">def&#32;</emphasis>maxcut(optimizer,&#32;<emphasis role="comment">#&#32;used&#32;quiskit&#32;optimizer</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;13,&#32;<emphasis role="comment">#&#32;number&#32;of&#32;nodes&#32;in&#32;graph</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00132"/><link linkend="_namespaceexamples_1_1maxcut_1a401b3e4e3b71951161d316bc933160e5">00132</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backend_name&#32;=&#32;&quot;aer_simulator&quot;,&#32;
<anchor xml:id="_maxcut_8py_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;add_noise=False,&#32;<emphasis role="comment">#&#32;add&#32;noise&#32;to&#32;simulator</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;):
<anchor xml:id="_maxcut_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;G&#32;=&#32;nx.dense_gnm_random_graph(n,&#32;2*n,&#32;seed=123)
<anchor xml:id="_maxcut_8py_source_1l00136"/>00136 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(u,&#32;v)&#32;<emphasis role="keywordflow">in</emphasis>&#32;G.edges():
<anchor xml:id="_maxcut_8py_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G.edges[u,v][<emphasis role="stringliteral">&apos;weight&apos;</emphasis>]&#32;=&#32;1
<anchor xml:id="_maxcut_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;w&#32;=&#32;np.zeros([n,&#32;n])
<anchor xml:id="_maxcut_8py_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n):
<anchor xml:id="_maxcut_8py_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n):
<anchor xml:id="_maxcut_8py_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;G.get_edge_data(i,&#32;j,&#32;default=0)
<anchor xml:id="_maxcut_8py_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;temp&#32;!=&#32;0:
<anchor xml:id="_maxcut_8py_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;w[i,&#32;j]&#32;=&#32;temp[<emphasis role="stringliteral">&quot;weight&quot;</emphasis>]
<anchor xml:id="_maxcut_8py_source_1l00144"/>00144 &#32;&#32;&#32;&#32;print(w)
<anchor xml:id="_maxcut_8py_source_1l00145"/>00145 &#32;&#32;&#32;&#32;max_cut&#32;=&#32;Maxcut(w)
<anchor xml:id="_maxcut_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;qp&#32;=&#32;max_cut.to_quadratic_program()
<anchor xml:id="_maxcut_8py_source_1l00147"/>00147 &#32;&#32;&#32;&#32;print(qp.prettyprint())
<anchor xml:id="_maxcut_8py_source_1l00148"/>00148 &#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;qubitOp,&#32;offset&#32;=&#32;qp.to_ising()
<anchor xml:id="_maxcut_8py_source_1l00150"/>00150 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Offset:&quot;</emphasis>,&#32;offset)
<anchor xml:id="_maxcut_8py_source_1l00151"/>00151 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Using&#32;Hamiltonian:&quot;</emphasis>)
<anchor xml:id="_maxcut_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;print(str(qubitOp))
<anchor xml:id="_maxcut_8py_source_1l00153"/>00153 &#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00154"/>00154 &#32;&#32;&#32;&#32;ee&#32;=&#32;NumPyMinimumEigensolver()&#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;result&#32;=&#32;ee.compute_minimum_eigenvalue(qubitOp)
<anchor xml:id="_maxcut_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;x&#32;=&#32;max_cut.sample_most_likely(result.eigenstate)
<anchor xml:id="_maxcut_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;energy:&quot;</emphasis>,&#32;result.eigenvalue.real)
<anchor xml:id="_maxcut_8py_source_1l00158"/>00158 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;max-cut&#32;objective:&quot;</emphasis>,&#32;result.eigenvalue.real&#32;+&#32;offset)
<anchor xml:id="_maxcut_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;solution:&quot;</emphasis>,&#32;x)
<anchor xml:id="_maxcut_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;solution&#32;objective:&quot;</emphasis>,&#32;qp.objective.evaluate(x))
<anchor xml:id="_maxcut_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;backend&#32;=&#32;Aer.get_backend(backend_name)
<anchor xml:id="_maxcut_8py_source_1l00163"/>00163 
<anchor xml:id="_maxcut_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;add_noise:&#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;device_backend&#32;=&#32;FakeVigo()
<anchor xml:id="_maxcut_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;device&#32;=&#32;QasmSimulator.from_backend(device_backend)
<anchor xml:id="_maxcut_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noise_model&#32;=&#32;NoiseModel.from_backend(device)
<anchor xml:id="_maxcut_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(noise_model)
<anchor xml:id="_maxcut_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;quantum_instance&#32;=&#32;QuantumInstance(backend,&#32;noise_model=noise_model)
<anchor xml:id="_maxcut_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_maxcut_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;quantum_instance&#32;=&#32;QuantumInstance(backend)
<anchor xml:id="_maxcut_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;backend.set_options(max_parallel_threads=1)
<anchor xml:id="_maxcut_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00175"/>00175 &#32;&#32;&#32;&#32;ry&#32;=&#32;TwoLocal(qubitOp.num_qubits,&#32;<emphasis role="stringliteral">&quot;ry&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;cz&quot;</emphasis>,&#32;reps=5,&#32;entanglement=<emphasis role="stringliteral">&quot;linear&quot;</emphasis>)
<anchor xml:id="_maxcut_8py_source_1l00176"/>00176 &#32;&#32;&#32;&#32;vqe&#32;=&#32;VQE(ry,&#32;optimizer=optimizer,&#32;quantum_instance=quantum_instance)&#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00177"/>00177 &#32;&#32;&#32;&#32;dim&#32;=&#32;vqe.ansatz.num_parameters
<anchor xml:id="_maxcut_8py_source_1l00178"/>00178 &#32;&#32;&#32;&#32;vqe.ansatz.parameter_bounds&#32;=&#32;[(-2&#32;*&#32;np.pi,&#32;2&#32;*&#32;np.pi)]*dim
<anchor xml:id="_maxcut_8py_source_1l00179"/>00179 &#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;run&#32;VQE</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;threadpoolctl.threadpool_limits(limits=1,&#32;user_api=<emphasis role="stringliteral">&quot;blas&quot;</emphasis>):&#32;
<anchor xml:id="_maxcut_8py_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;blas&#32;threading&#32;restriction,&#32;speeds&#32;up&#32;&quot;aer_simulator_statevector&quot;&#32;</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;vqe.compute_minimum_eigenvalue(qubitOp)
<anchor xml:id="_maxcut_8py_source_1l00184"/>00184 &#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;print&#32;results</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00186"/>00186 &#32;&#32;&#32;&#32;x&#32;=&#32;max_cut.sample_most_likely(result.eigenstate)
<anchor xml:id="_maxcut_8py_source_1l00187"/>00187 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;energy:&quot;</emphasis>,&#32;result.eigenvalue.real)
<anchor xml:id="_maxcut_8py_source_1l00188"/>00188 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;time:&quot;</emphasis>,&#32;result.optimizer_time)
<anchor xml:id="_maxcut_8py_source_1l00189"/>00189 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;max-cut&#32;objective:&quot;</emphasis>,&#32;result.eigenvalue.real&#32;+&#32;offset)
<anchor xml:id="_maxcut_8py_source_1l00190"/>00190 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;solution:&quot;</emphasis>,&#32;x)
<anchor xml:id="_maxcut_8py_source_1l00191"/>00191 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;solution&#32;objective:&quot;</emphasis>,&#32;qp.objective.evaluate(x))
<anchor xml:id="_maxcut_8py_source_1l00192"/>00192 
<anchor xml:id="_maxcut_8py_source_1l00193"/>00193 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_maxcut_8py_source_1l00194"/>00194 &#32;&#32;&#32;&#32;n&#32;=&#32;16&#32;<emphasis role="comment">#&#32;number&#32;of&#32;nodes&#32;in&#32;graph</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00195"/>00195 &#32;&#32;&#32;&#32;
<anchor xml:id="_maxcut_8py_source_1l00196"/><link linkend="_namespaceexamples_1_1maxcut_1a9bc9ad3cda5a76da69f8968aa644b3eb">00196</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;1&#32;run&#32;SPSA&#32;&#32;</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00197"/>00197 &#32;&#32;&#32;&#32;maxcut(SPSA(maxiter=6000),&#32;n,&#32;<emphasis role="stringliteral">&quot;aer_simulator&quot;</emphasis>)
<anchor xml:id="_maxcut_8py_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;1&#32;run&#32;SPSA&#32;with&#32;noise</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;maxcut(SPSA(maxiter=6000),&#32;n,&#32;&quot;aer_simulator&quot;,&#32;add_noise=True)</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00200"/>00200 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;1&#32;run&#32;CR-FM-NES&#32;parallel&#32;fitness&#32;evaluation</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,&#32;popsize=16,&#32;workers=16),&#32;use_wrapper=True),&#32;n,&#32;&quot;aer_simulator&quot;)</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;1&#32;run&#32;CR-FM-NES&#32;parallel&#32;fitness&#32;evaluation&#32;with&#32;noise</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,&#32;popsize=16,&#32;workers=16),&#32;use_wrapper=True),&#32;n,&#32;&quot;aer_simulator&quot;,&#32;add_noise=True)</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;32&#32;parallel&#32;runs&#32;SPSA&#32;</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;maxcut(fcmaes_Optimizer(fcmaes_SPSA(6000),&#32;max_retries&#32;=&#32;32,&#32;use_wrapper=True),&#32;n,&#32;&quot;aer_simulator&quot;)</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;32&#32;parallel&#32;runs&#32;CR-FM-NES</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,&#32;popsize=16),&#32;max_retries&#32;=&#32;16,&#32;use_wrapper=True),&#32;n,&#32;&quot;aer_simulator&quot;)</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00208"/>00208 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;32&#32;parallel&#32;runs&#32;CR-FM-NES&#32;increased&#32;population&#32;size</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,&#32;popsize=24),&#32;max_retries&#32;=&#32;16,&#32;use_wrapper=True),&#32;n,&#32;&quot;aer_simulator&quot;)</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;32&#32;parallel&#32;runs&#32;SPSA&#32;with&#32;noise</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;maxcut(fcmaes_Optimizer(fcmaes_SPSA(6000),&#32;max_retries&#32;=&#32;32,&#32;use_wrapper=True),&#32;n,&#32;&quot;aer_simulator&quot;,&#32;add_noise=True)</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00212"/>00212 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;32&#32;parallel&#32;runs&#32;CR-FM-NES&#32;with&#32;noise</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,&#32;popsize=16),&#32;max_retries&#32;=&#32;32,&#32;use_wrapper=True),&#32;n,&#32;&quot;aer_simulator&quot;,&#32;add_noise=True)</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00214"/>00214 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;32&#32;parallel&#32;runs&#32;CR-FM-NES&#32;increased&#32;population&#32;size&#32;with&#32;noise</emphasis>
<anchor xml:id="_maxcut_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,&#32;popsize=24),&#32;max_retries&#32;=&#32;32,&#32;use_wrapper=True),&#32;n,&#32;&quot;aer_simulator&quot;,&#32;add_noise=True)&#32;&#32;&#32;&#32;</emphasis>
</programlisting></section>

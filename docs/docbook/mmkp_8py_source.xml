<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_mmkp_8py_source" xml:lang="en-US">
<title>mmkp.py</title>
<indexterm><primary>examples/mmkp/mmkp.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_mmkp_8py_source_1l00001"/><link linkend="_namespacemmkp">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00005"/>00005 <emphasis role="comment">#&#32;</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;Solving&#32;Multiple-Choice&#32;Multidimensional&#32;Knapsack&#32;Problem&#32;MMKP</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00007"/>00007 <emphasis role="comment">#</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00008"/>00008 <emphasis role="comment">#&#32;See&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Oneforall.adoc&#32;for&#32;a&#32;detailed&#32;description.</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00009"/>00009 
<anchor xml:id="_mmkp_8py_source_1l00010"/>00010 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_mmkp_8py_source_1l00011"/>00011 <emphasis role="keyword">import</emphasis>&#32;os
<anchor xml:id="_mmkp_8py_source_1l00012"/>00012 <emphasis role="keyword">from</emphasis>&#32;numba&#32;<emphasis role="keyword">import</emphasis>&#32;njit
<anchor xml:id="_mmkp_8py_source_1l00013"/>00013 <emphasis role="keyword">import</emphasis>&#32;numba
<anchor xml:id="_mmkp_8py_source_1l00014"/>00014 <emphasis role="keyword">from</emphasis>&#32;datetime&#32;<emphasis role="keyword">import</emphasis>&#32;datetime
<anchor xml:id="_mmkp_8py_source_1l00015"/>00015 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;crfmnes_bite,&#32;wrapper
<anchor xml:id="_mmkp_8py_source_1l00016"/>00016 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;retry
<anchor xml:id="_mmkp_8py_source_1l00017"/>00017 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds
<anchor xml:id="_mmkp_8py_source_1l00018"/>00018 
<anchor xml:id="_mmkp_8py_source_1l00019"/>00019 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_mmkp_8py_source_1l00020"/>00020 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_mmkp_8py_source_1l00021"/>00021 
<anchor xml:id="_mmkp_8py_source_1l00022"/>00022 logger.remove()
<anchor xml:id="_mmkp_8py_source_1l00023"/><link linkend="_namespacemmkp_1aeaff2315bbba323260bf42abcb887299">00023</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_mmkp_8py_source_1l00024"/>00024 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_mmkp_8py_source_1l00025"/>00025 
<anchor xml:id="_mmkp_8py_source_1l00026"/>00026 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00027"/><link linkend="_namespacemmkp_1a3a5108d8dc62c98878f97afeb7b824aa">00027</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacemmkp_1a3a5108d8dc62c98878f97afeb7b824aa">fitness_</link>(x,&#32;n,&#32;l,&#32;avail,&#32;values,&#32;resources):
<anchor xml:id="_mmkp_8py_source_1l00028"/>00028 &#32;&#32;&#32;&#32;vsum&#32;=&#32;0
<anchor xml:id="_mmkp_8py_source_1l00029"/>00029 &#32;&#32;&#32;&#32;rsum&#32;=&#32;np.zeros(l,&#32;dtype=numba.int32)
<anchor xml:id="_mmkp_8py_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n):
<anchor xml:id="_mmkp_8py_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vsum&#32;+=&#32;values[i][x[i]]
<anchor xml:id="_mmkp_8py_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rsum&#32;+=&#32;resources[i][x[i]]&#32;&#32;&#32;
<anchor xml:id="_mmkp_8py_source_1l00033"/>00033 &#32;&#32;&#32;&#32;rsum&#32;=&#32;np.maximum(rsum&#32;-&#32;avail,&#32;np.zeros(l,&#32;dtype=numba.int32))
<anchor xml:id="_mmkp_8py_source_1l00034"/>00034 &#32;&#32;&#32;&#32;pen&#32;=&#32;np.sum(rsum)
<anchor xml:id="_mmkp_8py_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;vsum,&#32;pen
<anchor xml:id="_mmkp_8py_source_1l00036"/>00036 
<anchor xml:id="_mmkp_8py_source_1l00037"/><link linkend="_namespacemmkp_1acbf4d8b05ab4c16cc7258fc95e329bf9">00037</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacemmkp_1acbf4d8b05ab4c16cc7258fc95e329bf9">parse</link>(filename):
<anchor xml:id="_mmkp_8py_source_1l00038"/>00038 &#32;&#32;&#32;&#32;n&#32;=&#32;0
<anchor xml:id="_mmkp_8py_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;open(filename)&#32;<emphasis role="keyword">as</emphasis>&#32;csvfile:
<anchor xml:id="_mmkp_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lines&#32;=&#32;csvfile.readlines()
<anchor xml:id="_mmkp_8py_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avail&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values&#32;=&#32;[]
<anchor xml:id="_mmkp_8py_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resources&#32;=&#32;[]&#32;
<anchor xml:id="_mmkp_8py_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;line&#32;<emphasis role="keywordflow">in</emphasis>&#32;lines:
<anchor xml:id="_mmkp_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row&#32;=&#32;line.split()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mmkp_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(row)&#32;&lt;&#32;1:
<anchor xml:id="_mmkp_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;n&#32;==&#32;0:
<anchor xml:id="_mmkp_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;int(row[0])
<anchor xml:id="_mmkp_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;=&#32;int(row[1])
<anchor xml:id="_mmkp_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;=&#32;int(row[2])
<anchor xml:id="_mmkp_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mmkp_8py_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;avail&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mmkp_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avail&#32;=&#32;[int(r)&#32;<emphasis role="keywordflow">for</emphasis>&#32;r&#32;<emphasis role="keywordflow">in</emphasis>&#32;row]
<anchor xml:id="_mmkp_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mmkp_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;row[0]&#32;==&#32;<emphasis role="stringliteral">&apos;Solutions&apos;</emphasis>:
<anchor xml:id="_mmkp_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(row)&#32;&gt;&#32;1:
<anchor xml:id="_mmkp_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values.append(float(row[0]))
<anchor xml:id="_mmkp_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resources.append([int(r)&#32;<emphasis role="keywordflow">for</emphasis>&#32;r&#32;<emphasis role="keywordflow">in</emphasis>&#32;row[1:]])
<anchor xml:id="_mmkp_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bsol&#32;=&#32;lines[-1].split()
<anchor xml:id="_mmkp_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bval&#32;=&#32;float(bsol[-1]&#32;)
<anchor xml:id="_mmkp_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bsol&#32;=&#32;np.array([int(r)&#32;<emphasis role="keywordflow">for</emphasis>&#32;r&#32;<emphasis role="keywordflow">in</emphasis>&#32;bsol[:-1]],&#32;dtype=int)
<anchor xml:id="_mmkp_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;n,&#32;l,&#32;m,&#32;bval,&#32;bsol,&#32;\
<anchor xml:id="_mmkp_8py_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.array(avail,&#32;dtype=int),&#32;\
<anchor xml:id="_mmkp_8py_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.reshape(np.array(values),&#32;(n,l)),\
<anchor xml:id="_mmkp_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.reshape(np.array(resources,&#32;dtype=int),&#32;(n,l,m))
<anchor xml:id="_mmkp_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mmkp_8py_source_1l00069"/><link linkend="_classmmkp_1_1_m_m_k_p">00069</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classmmkp_1_1_m_m_k_p">MMKP</link>():
<anchor xml:id="_mmkp_8py_source_1l00070"/><link linkend="_classmmkp_1_1_m_m_k_p_1a6a38a2a564dddc89a43fb20169895634">00070</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classmmkp_1_1_m_m_k_p_1a6a38a2a564dddc89a43fb20169895634">__init__</link>(self,&#32;problem):
<anchor xml:id="_mmkp_8py_source_1l00071"/><link linkend="_classmmkp_1_1_m_m_k_p_1a62f6b253d0a093a354bb1d7af30fbc14">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a62f6b253d0a093a354bb1d7af30fbc14">problem</link>&#32;=&#32;problem
<anchor xml:id="_mmkp_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filename&#32;=&#32;<emphasis role="stringliteral">&apos;problems/&apos;</emphasis>&#32;+&#32;problem
<anchor xml:id="_mmkp_8py_source_1l00073"/><link linkend="_classmmkp_1_1_m_m_k_p_1ad3000e24c5205205079e224810a6d506">00073</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a6a441591c5c7b1bf6eb80c9bafa8d52e">n</link>,&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1ad7ded520557368c699215d828397d33d">l</link>,&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1aed2bd5d990a56a186ed6d7af40d19de8">m</link>,&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a455876cfbd60cb44c18f0adf512710d6">best_val</link>,&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1ad3000e24c5205205079e224810a6d506">best_sol</link>,\
<anchor xml:id="_mmkp_8py_source_1l00074"/><link linkend="_classmmkp_1_1_m_m_k_p_1a4b8d157169439be49770affa59b88316">00074</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a4b8d157169439be49770affa59b88316">avail</link>,&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1ab4fea66e9c32aabf1ebf9732cf36e1a4">values</link>,&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a202a059df46a4b0f0cca3e36355a6e05">resources</link>&#32;=&#32;<link linkend="_namespacemmkp_1acbf4d8b05ab4c16cc7258fc95e329bf9">parse</link>(filename)
<anchor xml:id="_mmkp_8py_source_1l00075"/><link linkend="_classmmkp_1_1_m_m_k_p_1aabb5288b6a681b13d3f80f9b06cfb7ef">00075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1aabb5288b6a681b13d3f80f9b06cfb7ef">dim</link>&#32;=&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a6a441591c5c7b1bf6eb80c9bafa8d52e">n</link>
<anchor xml:id="_mmkp_8py_source_1l00076"/><link linkend="_classmmkp_1_1_m_m_k_p_1a600bb297210e79ebdf4c1371a65997b4">00076</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a600bb297210e79ebdf4c1371a65997b4">bounds</link>&#32;=&#32;Bounds([0]*self.<link linkend="_classmmkp_1_1_m_m_k_p_1aabb5288b6a681b13d3f80f9b06cfb7ef">dim</link>,&#32;[self.<link linkend="_classmmkp_1_1_m_m_k_p_1ad7ded520557368c699215d828397d33d">l</link>-1E-12]*self.<link linkend="_classmmkp_1_1_m_m_k_p_1aabb5288b6a681b13d3f80f9b06cfb7ef">dim</link>)
<anchor xml:id="_mmkp_8py_source_1l00077"/>00077 
<anchor xml:id="_mmkp_8py_source_1l00078"/><link linkend="_classmmkp_1_1_m_m_k_p_1a1dfd349f5b8fb7723a37b3ce28eb4823">00078</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classmmkp_1_1_m_m_k_p_1a1dfd349f5b8fb7723a37b3ce28eb4823">deviation</link>(self,&#32;vsum):
<anchor xml:id="_mmkp_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;100&#32;*&#32;((self.<link linkend="_classmmkp_1_1_m_m_k_p_1a455876cfbd60cb44c18f0adf512710d6">best_val</link>&#32;-&#32;vsum)&#32;/&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a455876cfbd60cb44c18f0adf512710d6">best_val</link>)
<anchor xml:id="_mmkp_8py_source_1l00080"/>00080 
<anchor xml:id="_mmkp_8py_source_1l00081"/><link linkend="_classmmkp_1_1_m_m_k_p_1a213f560e4e944cc784b84e78cf46f9ba">00081</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classmmkp_1_1_m_m_k_p_1a213f560e4e944cc784b84e78cf46f9ba">fitness_pen</link>(self,&#32;x):&#32;&#32;&#32;
<anchor xml:id="_mmkp_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacemmkp_1a3a5108d8dc62c98878f97afeb7b824aa">fitness_</link>(x.astype(int),&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a6a441591c5c7b1bf6eb80c9bafa8d52e">n</link>,&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1ad7ded520557368c699215d828397d33d">l</link>,&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a4b8d157169439be49770affa59b88316">avail</link>,&#32;\
<anchor xml:id="_mmkp_8py_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1ab4fea66e9c32aabf1ebf9732cf36e1a4">values</link>,&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a202a059df46a4b0f0cca3e36355a6e05">resources</link>)
<anchor xml:id="_mmkp_8py_source_1l00084"/>00084 
<anchor xml:id="_mmkp_8py_source_1l00085"/><link linkend="_classmmkp_1_1_m_m_k_p_1aeab8da83296dbb68b5c90753e6fe6ff1">00085</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classmmkp_1_1_m_m_k_p_1aeab8da83296dbb68b5c90753e6fe6ff1">fitness</link>(self,&#32;x):&#32;&#32;&#32;
<anchor xml:id="_mmkp_8py_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vsum,&#32;penalty&#32;=&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a213f560e4e944cc784b84e78cf46f9ba">fitness_pen</link>(x)
<anchor xml:id="_mmkp_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;penalty&#32;&gt;&#32;0:
<anchor xml:id="_mmkp_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;penalty&#32;+=&#32;100&#32;&#32;&#32;&#32;
<anchor xml:id="_mmkp_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a1dfd349f5b8fb7723a37b3ce28eb4823">deviation</link>(vsum)&#32;+&#32;penalty&#32;&#32;&#32;&#32;
<anchor xml:id="_mmkp_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;
<anchor xml:id="_mmkp_8py_source_1l00091"/><link linkend="_classmmkp_1_1_m_m_k_p_1a47221aa9a69b03bc277ca6bd3c3afd20">00091</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classmmkp_1_1_m_m_k_p_1a47221aa9a69b03bc277ca6bd3c3afd20">dump</link>(self,&#32;x):
<anchor xml:id="_mmkp_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;x.astype(int)
<anchor xml:id="_mmkp_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vsum,&#32;_&#32;=&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a213f560e4e944cc784b84e78cf46f9ba">fitness_pen</link>(x)
<anchor xml:id="_mmkp_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lines&#32;=&#32;[]
<anchor xml:id="_mmkp_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lines.append(<emphasis role="stringliteral">&apos;Instance&#32;Name&#32;:&#32;&apos;</emphasis>&#32;+&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a62f6b253d0a093a354bb1d7af30fbc14">problem</link>&#32;+&#32;<emphasis role="stringliteral">&apos;\n&apos;</emphasis>)
<anchor xml:id="_mmkp_8py_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lines.append(<emphasis role="stringliteral">&apos;Date&#32;:&#32;&apos;</emphasis>&#32;+&#32;str(datetime.today().date())&#32;+&#32;<emphasis role="stringliteral">&apos;\n&apos;</emphasis>)
<anchor xml:id="_mmkp_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lines.append(<emphasis role="stringliteral">&apos;Score&#32;=&#32;&apos;</emphasis>&#32;+&#32;str(vsum)&#32;+&#32;
<anchor xml:id="_mmkp_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&#32;Deviation&#32;=&#32;&apos;</emphasis>&#32;+&#32;str(round(self.<link linkend="_classmmkp_1_1_m_m_k_p_1a1dfd349f5b8fb7723a37b3ce28eb4823">deviation</link>(vsum),2))&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;%\n&quot;</emphasis>)
<anchor xml:id="_mmkp_8py_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lines.append(<emphasis role="stringliteral">&apos;Solution\n&apos;</emphasis>)
<anchor xml:id="_mmkp_8py_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lines.append(<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>.join([str(xi)&#32;<emphasis role="keywordflow">for</emphasis>&#32;xi&#32;<emphasis role="keywordflow">in</emphasis>&#32;x]))
<anchor xml:id="_mmkp_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filename&#32;=&#32;<emphasis role="stringliteral">&apos;solutions_co/&apos;</emphasis>&#32;+&#32;self.<link linkend="_classmmkp_1_1_m_m_k_p_1a62f6b253d0a093a354bb1d7af30fbc14">problem</link>&#32;+&#32;<emphasis role="stringliteral">&apos;.txt&apos;</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;open(filename,&#32;<emphasis role="stringliteral">&apos;w&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;f:
<anchor xml:id="_mmkp_8py_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f.writelines(lines)
<anchor xml:id="_mmkp_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(<emphasis role="stringliteral">&apos;&apos;</emphasis>.join(lines))
<anchor xml:id="_mmkp_8py_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mmkp_8py_source_1l00106"/><link linkend="_namespacemmkp_1a65f010ffc522cb211692efb799859c78">00106</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacemmkp_1a65f010ffc522cb211692efb799859c78">optimize</link>(mmkp,&#32;opt,&#32;num_retries&#32;=&#32;32):
<anchor xml:id="_mmkp_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;ret&#32;=&#32;retry.minimize(<link linkend="_classfcmaes_1_1optimizer_1_1wrapper">wrapper</link>(mmkp.fitness),&#32;
<anchor xml:id="_mmkp_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mmkp.bounds,&#32;num_retries&#32;=&#32;num_retries,&#32;
<anchor xml:id="_mmkp_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;1E-12,&#32;optimizer=opt)
<anchor xml:id="_mmkp_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;x&#32;=&#32;ret.x.astype(int)
<anchor xml:id="_mmkp_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;mmkp.dump(ret.x)
<anchor xml:id="_mmkp_8py_source_1l00112"/>00112 
<anchor xml:id="_mmkp_8py_source_1l00113"/><link linkend="_namespacemmkp_1a33b6275af2dd6a9f23dbb9c5abf6936e">00113</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacemmkp_1a33b6275af2dd6a9f23dbb9c5abf6936e">opt_dir</link>(dir):
<anchor xml:id="_mmkp_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;files&#32;=&#32;os.listdir(dir)
<anchor xml:id="_mmkp_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;files.sort()
<anchor xml:id="_mmkp_8py_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;file&#32;<emphasis role="keywordflow">in</emphasis>&#32;files:
<anchor xml:id="_mmkp_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem&#32;=&#32;file.split(<emphasis role="stringliteral">&apos;.&apos;</emphasis>)[0]
<anchor xml:id="_mmkp_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mmkp&#32;=&#32;<link linkend="_classmmkp_1_1_m_m_k_p">MMKP</link>(problem)
<anchor xml:id="_mmkp_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;=&#32;mmkp.dim
<anchor xml:id="_mmkp_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;=&#32;500<emphasis role="comment">#100&#32;+&#32;dim</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;10000000<emphasis role="comment">#popsize*20000</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt&#32;=&#32;crfmnes_bite(max_evaluations,&#32;popsize=popsize,&#32;M=4,&#32;stop_fitness&#32;=&#32;1E-12)
<anchor xml:id="_mmkp_8py_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacemmkp_1a65f010ffc522cb211692efb799859c78">optimize</link>(mmkp,&#32;opt,&#32;num_retries&#32;=&#32;1024)
<anchor xml:id="_mmkp_8py_source_1l00124"/>00124 
<anchor xml:id="_mmkp_8py_source_1l00125"/>00125 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_mmkp_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<link linkend="_namespacemmkp_1a33b6275af2dd6a9f23dbb9c5abf6936e">opt_dir</link>(<emphasis role="stringliteral">&apos;problems&apos;</emphasis>)
<anchor xml:id="_mmkp_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;
<anchor xml:id="_mmkp_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;x&#32;=&#32;np.array([4,8,9,5,8,8,9,7,8,4,4,9,4,9,1,8,8,6,4,8],&#32;dtype=int)</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;mmkp&#32;=&#32;MMKP(&apos;I04&apos;)</emphasis>
<anchor xml:id="_mmkp_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;print(mmkp.fitness_pen(x))</emphasis>
</programlisting></section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_pgpe_8cpp_source" xml:lang="en-US">
<title>pgpe.cpp</title>
<indexterm><primary>_fcmaescpp/pgpe.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_pgpe_8cpp_source_1l00001"/>00001 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00002"/>00002 <emphasis role="comment">//</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00003"/>00003 <emphasis role="comment">//&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00004"/>00004 <emphasis role="comment">//&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00005"/>00005 <emphasis role="comment">//</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00006"/>00006 <emphasis role="comment">//&#32;Eigen&#32;based&#32;implementation&#32;of&#32;PGPE&#32;see&#32;http://mediatum.ub.tum.de/doc/1099128/631352.pdf&#32;.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00007"/>00007 <emphasis role="comment">//&#32;Derived&#32;from&#32;https://github.com/google/evojax/blob/main/evojax/algo/pgpe.py&#32;.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00008"/>00008 <emphasis role="comment">//</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00009"/>00009 <emphasis role="comment">//&#32;Requires&#32;Eigen&#32;version&#32;&gt;=&#32;3.4&#32;because&#32;new&#32;slicing&#32;capabilities&#32;are&#32;used,&#32;see</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00010"/>00010 <emphasis role="comment">//&#32;https://eigen.tuxfamily.org/dox-devel/group__TutorialSlicingIndexing.html</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00011"/>00011 <emphasis role="comment">//&#32;requires&#32;https://github.com/bab2min/EigenRand&#32;for&#32;random&#32;number&#32;generation.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00012"/>00012 <emphasis role="comment">//</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00013"/>00013 <emphasis role="comment">//&#32;Supports&#32;only&#32;ADAM&#32;based&#32;mean/baseline&#32;update.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00014"/>00014 
<anchor xml:id="_pgpe_8cpp_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&lt;Eigen/Core&gt;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&lt;fstream&gt;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&lt;float.h&gt;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00020"/>00020 <emphasis role="preprocessor">#include&#32;&lt;ctime&gt;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00021"/>00021 <emphasis role="preprocessor">#include&#32;&lt;random&gt;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00022"/>00022 <emphasis role="preprocessor">#include&#32;&lt;queue&gt;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00023"/>00023 <emphasis role="preprocessor">#include&#32;&lt;tuple&gt;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00024"/>00024 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_evaluator_8h">evaluator.h</link>&quot;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00025"/>00025 
<anchor xml:id="_pgpe_8cpp_source_1l00026"/>00026 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="_pgpe_8cpp_source_1l00027"/>00027 
<anchor xml:id="_pgpe_8cpp_source_1l00028"/><link linkend="_namespacepgpe">00028</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacepgpe">pgpe</link>&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00029"/>00029 
<anchor xml:id="_pgpe_8cpp_source_1l00030"/><link linkend="_namespacepgpe_1acf8eb800c548fcaacd7f2cce47367122">00030</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_namespacepgpe_1acf8eb800c548fcaacd7f2cce47367122">sdev</link>(<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;v)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sqrt((v.array()&#32;-&#32;v.mean()).square().sum()&#32;/&#32;(v.size()&#32;-&#32;1));
<anchor xml:id="_pgpe_8cpp_source_1l00032"/>00032 }
<anchor xml:id="_pgpe_8cpp_source_1l00033"/>00033 
<anchor xml:id="_pgpe_8cpp_source_1l00034"/><link linkend="_classpgpe_1_1_a_d_a_m">00034</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classpgpe_1_1_a_d_a_m_1adb338e468abbeabd2afd13d4d676b205">ADAM</link>&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00035"/>00035 
<anchor xml:id="_pgpe_8cpp_source_1l00036"/>00036 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_pgpe_8cpp_source_1l00037"/>00037 
<anchor xml:id="_pgpe_8cpp_source_1l00038"/><link linkend="_classpgpe_1_1_a_d_a_m_1adb338e468abbeabd2afd13d4d676b205">00038</link> &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1adb338e468abbeabd2afd13d4d676b205">ADAM</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x0,&#32;<emphasis role="keywordtype">double</emphasis>&#32;b1_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;b2_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;eps_,
<anchor xml:id="_pgpe_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;center_learning_rate_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;decay_coef_)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc">dim</link>&#32;=&#32;x0.size();
<anchor xml:id="_pgpe_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a3b4e72135dc0972d32514ed425e5d99f">x</link>&#32;=&#32;x0;
<anchor xml:id="_pgpe_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048">m</link>&#32;=&#32;<link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link>(<link linkend="_classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc">dim</link>);
<anchor xml:id="_pgpe_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c">v</link>&#32;=&#32;<link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link>(<link linkend="_classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc">dim</link>);
<anchor xml:id="_pgpe_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6">b1</link>&#32;=&#32;b1_;
<anchor xml:id="_pgpe_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1">b2</link>&#32;=&#32;b2_;
<anchor xml:id="_pgpe_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1ad376ca8662b4f5b5de1311fff5bce942">eps</link>&#32;=&#32;<link linkend="_evaluator_8h_1a493b3a74ec3481711548e4b506b009cd">constant</link>(<link linkend="_classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc">dim</link>,&#32;eps_);
<anchor xml:id="_pgpe_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a0527e5f61c8d4babb53e3f8f369e3ddd">center_lr</link>&#32;=&#32;center_learning_rate_;
<anchor xml:id="_pgpe_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a3e4eaddab15e62725c5c6f11dec59b8d">decay_coef</link>&#32;=&#32;decay_coef_;
<anchor xml:id="_pgpe_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00050"/>00050 
<anchor xml:id="_pgpe_8cpp_source_1l00051"/><link linkend="_classpgpe_1_1_a_d_a_m_1a6023c4206a0929ea3b8f907d09081af1">00051</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a6023c4206a0929ea3b8f907d09081af1">update</link>(<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;g)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00052"/>00052 
<anchor xml:id="_pgpe_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048">m</link>&#32;=&#32;(1&#32;-&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6">b1</link>)&#32;*&#32;g&#32;+&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6">b1</link>&#32;*&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048">m</link>;&#32;&#32;<emphasis role="comment">//&#32;First&#32;moment&#32;estimate.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c">v</link>&#32;=&#32;(1&#32;-&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1">b2</link>)&#32;*&#32;g.array().square().matrix()&#32;+&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1">b2</link>&#32;*&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c">v</link>;&#32;<emphasis role="comment">//&#32;Second&#32;moment&#32;estimate.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;mhat&#32;=&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048">m</link>.array()
<anchor xml:id="_pgpe_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<link linkend="_evaluator_8h_1a493b3a74ec3481711548e4b506b009cd">constant</link>(<link linkend="_classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc">dim</link>,&#32;1.&#32;/&#32;(1.&#32;-&#32;pow(<link linkend="_classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6">b1</link>,&#32;i&#32;+&#32;1))).array();&#32;<emphasis role="comment">//&#32;Bias&#32;correction.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;vhat&#32;=&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c">v</link>.array()
<anchor xml:id="_pgpe_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<link linkend="_evaluator_8h_1a493b3a74ec3481711548e4b506b009cd">constant</link>(<link linkend="_classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc">dim</link>,&#32;1.&#32;/&#32;(1.&#32;-&#32;pow(<link linkend="_classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1">b2</link>,&#32;i&#32;+&#32;1))).array();
<anchor xml:id="_pgpe_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;delta&#32;=&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a5163c2770a4139ef247533d7bbc5b6bd">step_size</link>(i)
<anchor xml:id="_pgpe_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;(mhat.array()
<anchor xml:id="_pgpe_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;(vhat.cwiseSqrt()&#32;+&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1ad376ca8662b4f5b5de1311fff5bce942">eps</link>).cwiseInverse().array());
<anchor xml:id="_pgpe_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a3b4e72135dc0972d32514ed425e5d99f">x</link>&#32;-=&#32;delta;
<anchor xml:id="_pgpe_8cpp_source_1l00063"/>00063 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;i&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;step_size(i)&#32;&lt;&lt;&#32;&quot;&#32;&quot;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00064"/>00064 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;x.mean()&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;sdev(x)&#32;&lt;&lt;&#32;&quot;&#32;&quot;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00065"/>00065 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;m.mean()&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;sdev(m)&#32;&lt;&lt;&#32;&quot;&#32;&quot;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00066"/>00066 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;v.mean()&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;sdev(v)&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00068"/>00068 
<anchor xml:id="_pgpe_8cpp_source_1l00069"/><link linkend="_classpgpe_1_1_a_d_a_m_1a5163c2770a4139ef247533d7bbc5b6bd">00069</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a5163c2770a4139ef247533d7bbc5b6bd">step_size</link>(<emphasis role="keywordtype">int</emphasis>&#32;i)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a0527e5f61c8d4babb53e3f8f369e3ddd">center_lr</link>&#32;*&#32;pow(<link linkend="_classpgpe_1_1_a_d_a_m_1a3e4eaddab15e62725c5c6f11dec59b8d">decay_coef</link>,&#32;i);
<anchor xml:id="_pgpe_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00072"/>00072 
<anchor xml:id="_pgpe_8cpp_source_1l00073"/><link linkend="_classpgpe_1_1_a_d_a_m_1a3b4e72135dc0972d32514ed425e5d99f">00073</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a3b4e72135dc0972d32514ed425e5d99f">x</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00074"/><link linkend="_classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048">00074</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048">m</link>;&#32;&#32;<emphasis role="comment">//&#32;First&#32;moment&#32;estimate</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00075"/><link linkend="_classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c">00075</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c">v</link>;&#32;&#32;<emphasis role="comment">//&#32;Second&#32;moment&#32;estimate.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00076"/>00076 
<anchor xml:id="_pgpe_8cpp_source_1l00077"/>00077 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_pgpe_8cpp_source_1l00078"/><link linkend="_classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc">00078</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc">dim</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00079"/><link linkend="_classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6">00079</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6">b1</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00080"/><link linkend="_classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1">00080</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1">b2</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00081"/><link linkend="_classpgpe_1_1_a_d_a_m_1ad376ca8662b4f5b5de1311fff5bce942">00081</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1ad376ca8662b4f5b5de1311fff5bce942">eps</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00082"/><link linkend="_classpgpe_1_1_a_d_a_m_1a0527e5f61c8d4babb53e3f8f369e3ddd">00082</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a0527e5f61c8d4babb53e3f8f369e3ddd">center_lr</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00083"/><link linkend="_classpgpe_1_1_a_d_a_m_1a3e4eaddab15e62725c5c6f11dec59b8d">00083</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_a_d_a_m_1a3e4eaddab15e62725c5c6f11dec59b8d">decay_coef</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00084"/>00084 };
<anchor xml:id="_pgpe_8cpp_source_1l00085"/>00085 
<anchor xml:id="_pgpe_8cpp_source_1l00086"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer">00086</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1abb3c39813a8c1221d91192bc8a0847df">PGPEOptimizer</link>&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00087"/>00087 
<anchor xml:id="_pgpe_8cpp_source_1l00088"/>00088 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_pgpe_8cpp_source_1l00089"/>00089 
<anchor xml:id="_pgpe_8cpp_source_1l00090"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1abb3c39813a8c1221d91192bc8a0847df">00090</link> &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1abb3c39813a8c1221d91192bc8a0847df">PGPEOptimizer</link>(<emphasis role="keywordtype">long</emphasis>&#32;runid_,&#32;<link linkend="_class_fitness">Fitness</link>&#32;*fitfun_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;seed_,
<anchor xml:id="_pgpe_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize_,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;guess_,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;inputSigma_,
<anchor xml:id="_pgpe_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxEvaluations_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;stopfitness_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lr_decay_steps_,
<anchor xml:id="_pgpe_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use_ranking_,
<anchor xml:id="_pgpe_8cpp_source_1l00094"/>00094 
<anchor xml:id="_pgpe_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;center_learning_rate_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;stdev_learning_rate_,
<anchor xml:id="_pgpe_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;stdev_max_change_,
<anchor xml:id="_pgpe_8cpp_source_1l00097"/>00097 
<anchor xml:id="_pgpe_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;b1_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;b2_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;eps_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;decay_coef_)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;runid&#32;used&#32;to&#32;identify&#32;a&#32;specific&#32;run</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a905b9565ca17288415da939216dc70e0">runid</link>&#32;=&#32;runid_;
<anchor xml:id="_pgpe_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fitness&#32;function&#32;to&#32;minimize</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d">fitfun</link>&#32;=&#32;fitfun_;
<anchor xml:id="_pgpe_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;objective&#32;variables/problem&#32;dimension</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95">dim</link>&#32;=&#32;dim_;
<anchor xml:id="_pgpe_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Population&#32;size</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">popsize</link>&#32;=&#32;popsize_&#32;&gt;&#32;0&#32;?&#32;popsize_&#32;:&#32;4&#32;*&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95">dim</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;maximal&#32;number&#32;of&#32;evaluations&#32;allowed.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ad65ef0d571184f00a530b744b318720b">maxEvaluations</link>&#32;=&#32;maxEvaluations_&#32;&gt;&#32;0&#32;?&#32;maxEvaluations_&#32;:&#32;50000;
<anchor xml:id="_pgpe_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Limit&#32;for&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1abd2a628f0257f84148dfefa844d911ba">stopfitness</link>&#32;=&#32;stopfitness_;
<anchor xml:id="_pgpe_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;iterations&#32;already&#32;performed.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00">iterations</link>&#32;=&#32;0;
<anchor xml:id="_pgpe_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed">bestY</link>&#32;=&#32;DBL_MAX;
<anchor xml:id="_pgpe_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stop&#32;criteria</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4">stop</link>&#32;=&#32;0;
<anchor xml:id="_pgpe_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a5fe46e06fd5258960a7d1bf70dd1eab5">rs</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;pcg64(seed_);
<anchor xml:id="_pgpe_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f">optimizer</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classpgpe_1_1_a_d_a_m">ADAM</link>(guess_,&#32;b1_,&#32;b2_,&#32;eps_,&#32;center_learning_rate_,
<anchor xml:id="_pgpe_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;decay_coef_);
<anchor xml:id="_pgpe_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b">center</link>&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d">fitfun</link>-&gt;encode(guess_);
<anchor xml:id="_pgpe_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>&#32;=&#32;inputSigma_;
<anchor xml:id="_pgpe_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a06d3dbc71179429995fd6c068dfcb732">lr_decay_steps</link>&#32;=&#32;lr_decay_steps_;
<anchor xml:id="_pgpe_8cpp_source_1l00122"/>00122 
<anchor xml:id="_pgpe_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a0b57a5c636c110d07675dab85f18dd8a">use_ranking</link>&#32;=&#32;use_ranking_;
<anchor xml:id="_pgpe_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center_learning_rate_&#32;=&#32;abs(center_learning_rate_);
<anchor xml:id="_pgpe_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1af02edda627bf7e47c5b67069288af9fb">stdev_learning_rate</link>&#32;=&#32;abs(stdev_learning_rate_);
<anchor xml:id="_pgpe_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a851acdc3f2d277bed929991ad72c15e0">stdev_max_change</link>&#32;=&#32;abs(stdev_max_change_);
<anchor xml:id="_pgpe_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1af44c1f8d0f9632e39c187fe89c6df26e">init</link>();
<anchor xml:id="_pgpe_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00129"/>00129 
<anchor xml:id="_pgpe_8cpp_source_1l00130"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1afdc7c84fd76b0b6fe5c0df6a1827a98f">00130</link> &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1afdc7c84fd76b0b6fe5c0df6a1827a98f">~PGPEOptimizer</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a5fe46e06fd5258960a7d1bf70dd1eab5">rs</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f">optimizer</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00134"/>00134 
<anchor xml:id="_pgpe_8cpp_source_1l00135"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a94f0a09e1ac629bc2daa0782f0b78b7a">00135</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a94f0a09e1ac629bc2daa0782f0b78b7a">process_scores</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;ys)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Convert&#32;fitness&#32;scores&#32;to&#32;rank&#32;if&#32;necessary.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a0b57a5c636c110d07675dab85f18dd8a">use_ranking</link>)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;ranks(ys.size());
<anchor xml:id="_pgpe_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;yi&#32;=&#32;<link linkend="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c">sort_index</link>(ys);
<anchor xml:id="_pgpe_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;ys.size();&#32;i++)
<anchor xml:id="_pgpe_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ranks[yi[i]]&#32;=&#32;((<emphasis role="keywordtype">double</emphasis>)&#32;i)&#32;/&#32;ys.size()&#32;-&#32;0.5;
<anchor xml:id="_pgpe_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ranks;
<anchor xml:id="_pgpe_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ys;
<anchor xml:id="_pgpe_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00146"/>00146 
<anchor xml:id="_pgpe_8cpp_source_1l00147"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1aedf86311561b4c064c713229e9fff837">00147</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1aedf86311561b4c064c713229e9fff837">compute_reinforce_update</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;fitness_scores,
<anchor xml:id="_pgpe_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;&amp;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Compute&#32;the&#32;updates&#32;for&#32;the&#32;center&#32;and&#32;the&#32;standard&#32;deviation.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;fitness_scores.size()&#32;/&#32;2;
<anchor xml:id="_pgpe_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;fit&#32;=&#32;fitness_scores.reshaped(2,&#32;n);
<anchor xml:id="_pgpe_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;fit1&#32;=&#32;fit.row(0);&#32;<emphasis role="comment">//&#32;fitness&#32;for&#32;baseline&#32;+&#32;noise</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;fit2&#32;=&#32;fit.row(1);&#32;<emphasis role="comment">//&#32;fitness&#32;for&#32;baseline&#32;-&#32;noise</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;baseline&#32;=&#32;<link linkend="_evaluator_8h_1a493b3a74ec3481711548e4b506b009cd">constant</link>(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>.rows(),&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>.cols(),
<anchor xml:id="_pgpe_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fitness_scores.mean());
<anchor xml:id="_pgpe_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;all_scores&#32;=&#32;fit1&#32;-&#32;fit2;
<anchor xml:id="_pgpe_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;all_avg_scores&#32;=&#32;0.5&#32;*&#32;(fit1&#32;+&#32;fit2);
<anchor xml:id="_pgpe_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;stdev_sq&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>.array().square().matrix();
<anchor xml:id="_pgpe_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;total_mu&#32;=
<anchor xml:id="_pgpe_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>.array()
<anchor xml:id="_pgpe_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;all_scores.replicate(1,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>.rows()).transpose().array()
<anchor xml:id="_pgpe_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;0.5;
<anchor xml:id="_pgpe_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;total_sigma&#32;=
<anchor xml:id="_pgpe_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(all_avg_scores.replicate(1,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>.rows()).transpose()
<anchor xml:id="_pgpe_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;baseline).array()
<anchor xml:id="_pgpe_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>.array().square().matrix()
<anchor xml:id="_pgpe_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;stdev_sq.replicate(1,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>.cols())).array()
<anchor xml:id="_pgpe_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>.replicate(1,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>.cols()).array().inverse();
<anchor xml:id="_pgpe_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1aa05ce82c5de00141802efa50625c4060">grad_center</link>&#32;=&#32;total_mu.rowwise().mean();
<anchor xml:id="_pgpe_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a6f781a67d0054069b30742bdc7a3de0b">grad_stdev</link>&#32;=&#32;total_sigma.rowwise().mean();
<anchor xml:id="_pgpe_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00172"/>00172 
<anchor xml:id="_pgpe_8cpp_source_1l00173"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1af5dd12d8bb2b74222820282793a111ed">00173</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1af5dd12d8bb2b74222820282793a111ed">update_stdev</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>,&#32;<emphasis role="keywordtype">double</emphasis>&#32;lr,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;grad,
<anchor xml:id="_pgpe_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;max_change)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;allowed_delta&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>.cwiseAbs()&#32;*&#32;max_change;
<anchor xml:id="_pgpe_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;min_allowed&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>&#32;-&#32;allowed_delta;
<anchor xml:id="_pgpe_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;max_allowed&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>&#32;+&#32;allowed_delta;
<anchor xml:id="_pgpe_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>&#32;+&#32;lr&#32;*&#32;grad).cwiseMax(min_allowed).cwiseMin(max_allowed);
<anchor xml:id="_pgpe_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00180"/>00180 
<anchor xml:id="_pgpe_8cpp_source_1l00181"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a431dca3f8ed9c12e85c449474001930c">00181</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a431dca3f8ed9c12e85c449474001930c">ask</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b">center</link>)&#32;{&#32;<emphasis role="comment">//&#32;undecoded</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">popsize</link>&#32;/&#32;2;
<anchor xml:id="_pgpe_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>&#32;=&#32;<link linkend="_evaluator_8h_1a231544ac51b3f9312c104a3b7a3c49a6">normal</link>(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95">dim</link>,&#32;n,&#32;*<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a5fe46e06fd5258960a7d1bf70dd1eab5">rs</link>).array()
<anchor xml:id="_pgpe_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>.replicate(1,&#32;n).array();
<anchor xml:id="_pgpe_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;x&#32;=&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95">dim</link>,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">popsize</link>);
<anchor xml:id="_pgpe_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;x1&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b">center</link>.replicate(1,&#32;n)&#32;+&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;x2&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b">center</link>.replicate(1,&#32;n)&#32;-&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;n;&#32;p++)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.col(2&#32;*&#32;p)&#32;=&#32;x1.col(p);
<anchor xml:id="_pgpe_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.col(2&#32;*&#32;p&#32;+&#32;1)&#32;=&#32;x2.col(p);
<anchor xml:id="_pgpe_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x;
<anchor xml:id="_pgpe_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00194"/>00194 
<anchor xml:id="_pgpe_8cpp_source_1l00195"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1adb8d7f20201db004da433725efda69cc">00195</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1adb8d7f20201db004da433725efda69cc">ask</link>()&#32;{&#32;<emphasis role="comment">//&#32;undecoded</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1adb8d7f20201db004da433725efda69cc">ask</link>(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b">center</link>);
<anchor xml:id="_pgpe_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00198"/>00198 
<anchor xml:id="_pgpe_8cpp_source_1l00199"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1af44c1f8d0f9632e39c187fe89c6df26e">00199</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1af44c1f8d0f9632e39c187fe89c6df26e">init</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87">popX</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95">dim</link>,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">popsize</link>);
<anchor xml:id="_pgpe_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928">popY</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">popsize</link>);
<anchor xml:id="_pgpe_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">popsize</link>;&#32;p++)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928">popY</link>[p]&#32;=&#32;DBL_MAX;&#32;<emphasis role="comment">//&#32;compute&#32;fitness</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00206"/>00206 
<anchor xml:id="_pgpe_8cpp_source_1l00207"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1abcd7c230df525f67d06fa41f4450f23d">00207</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1abcd7c230df525f67d06fa41f4450f23d">ask_decode</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;generate&#32;popsize&#32;offspring.</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;xs&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1adb8d7f20201db004da433725efda69cc">ask</link>(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b">center</link>);
<anchor xml:id="_pgpe_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">popsize</link>;&#32;p++)
<anchor xml:id="_pgpe_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87">popX</link>.col(p)&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d">fitfun</link>-&gt;decode(
<anchor xml:id="_pgpe_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d">fitfun</link>-&gt;getClosestFeasibleNormed(xs.col(p)));
<anchor xml:id="_pgpe_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87">popX</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00215"/>00215 
<anchor xml:id="_pgpe_8cpp_source_1l00216"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a920b8cf76e73e296c8a416c6100e9b96">00216</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a920b8cf76e73e296c8a416c6100e9b96">tell</link>(<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;ys)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928">popY</link>&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a94f0a09e1ac629bc2daa0782f0b78b7a">process_scores</link>(-ys);&#32;<emphasis role="comment">//&#32;negate&#32;values&#32;since&#32;we&#32;minimize</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;bY&#32;=&#32;-<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928">popY</link>.maxCoeff();
<anchor xml:id="_pgpe_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed">bestY</link>&#32;&gt;&#32;bY)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed">bestY</link>&#32;=&#32;bY;
<anchor xml:id="_pgpe_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">popsize</link>;&#32;p++)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928">popY</link>[p]&#32;==&#32;-<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed">bestY</link>)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a60b5b90ad37acfd8b562ca3fb0189e5f">bestX</link>&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87">popX</link>.col(p);
<anchor xml:id="_pgpe_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_pgpe_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00227"/>00227 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;popsize&#32;*&#32;iterations&#32;&lt;&lt;&#32;&quot;:&#32;&quot;&#32;&lt;&lt;&#32;bestY&#32;&lt;&lt;&#32;&quot;&#32;&quot;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00228"/>00228 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;bestX.transpose()&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed">bestY</link>&#32;&lt;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1abd2a628f0257f84148dfefa844d911ba">stopfitness</link>)
<anchor xml:id="_pgpe_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4">stop</link>&#32;=&#32;1;
<anchor xml:id="_pgpe_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1aedf86311561b4c064c713229e9fff837">compute_reinforce_update</link>(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928">popY</link>,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>);
<anchor xml:id="_pgpe_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f">optimizer</link>-&gt;update(((<emphasis role="keywordtype">int</emphasis>)&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00">iterations</link>)&#32;/&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a06d3dbc71179429995fd6c068dfcb732">lr_decay_steps</link>,&#32;-<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1aa05ce82c5de00141802efa50625c4060">grad_center</link>);
<anchor xml:id="_pgpe_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00">iterations</link>&#32;+=&#32;1;
<anchor xml:id="_pgpe_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b">center</link>&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f">optimizer</link>-&gt;x;
<anchor xml:id="_pgpe_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>&#32;=&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1af5dd12d8bb2b74222820282793a111ed">update_stdev</link>(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1af02edda627bf7e47c5b67069288af9fb">stdev_learning_rate</link>,&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a6f781a67d0054069b30742bdc7a3de0b">grad_stdev</link>,
<anchor xml:id="_pgpe_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a851acdc3f2d277bed929991ad72c15e0">stdev_max_change</link>);
<anchor xml:id="_pgpe_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4">stop</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00240"/>00240 
<anchor xml:id="_pgpe_8cpp_source_1l00241"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a1c4686a59afbf7da3383fe594af0f2ea">00241</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a1c4686a59afbf7da3383fe594af0f2ea">getPopulation</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87">popX</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00244"/>00244 
<anchor xml:id="_pgpe_8cpp_source_1l00245"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ad9fae8865ce2ae4502feb469621cf336">00245</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ad9fae8865ce2ae4502feb469621cf336">getBestX</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a60b5b90ad37acfd8b562ca3fb0189e5f">bestX</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00248"/>00248 
<anchor xml:id="_pgpe_8cpp_source_1l00249"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a0edc78afeba19ac33c69025815923088">00249</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a0edc78afeba19ac33c69025815923088">getBestValue</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed">bestY</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00252"/>00252 
<anchor xml:id="_pgpe_8cpp_source_1l00253"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1aa189f3e0a4b7a3e1c2cd477de2bde537">00253</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1aa189f3e0a4b7a3e1c2cd477de2bde537">getIterations</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00">iterations</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00256"/>00256 
<anchor xml:id="_pgpe_8cpp_source_1l00257"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a13e59873810dc80105b232862e97694d">00257</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a13e59873810dc80105b232862e97694d">getStop</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4">stop</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00260"/>00260 
<anchor xml:id="_pgpe_8cpp_source_1l00261"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a03e67227b1099ca3c35c0f9d953cc86c">00261</link> &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a03e67227b1099ca3c35c0f9d953cc86c">getFitfun</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d">fitfun</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00264"/>00264 
<anchor xml:id="_pgpe_8cpp_source_1l00265"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1acd4bfd1277a1fdef42a5c3f4152205e9">00265</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1acd4bfd1277a1fdef42a5c3f4152205e9">getDim</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95">dim</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00268"/>00268 
<anchor xml:id="_pgpe_8cpp_source_1l00269"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1adc8adb1458abef40a6cd1eacc4fd38a9">00269</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1adc8adb1458abef40a6cd1eacc4fd38a9">getPopsize</link>()&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">popsize</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00272"/>00272 
<anchor xml:id="_pgpe_8cpp_source_1l00273"/>00273 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_pgpe_8cpp_source_1l00274"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a905b9565ca17288415da939216dc70e0">00274</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a905b9565ca17288415da939216dc70e0">runid</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00275"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d">00275</link> &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>&#32;*<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d">fitfun</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00276"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f">00276</link> &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_a_d_a_m">ADAM</link>&#32;*<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f">optimizer</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00277"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">00277</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d">popsize</link>;&#32;<emphasis role="comment">//&#32;population&#32;size</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00278"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95">00278</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95">dim</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00279"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ad65ef0d571184f00a530b744b318720b">00279</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ad65ef0d571184f00a530b744b318720b">maxEvaluations</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00280"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a8ae592b3eafa6b768dce659bd69f2b32">00280</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a8ae592b3eafa6b768dce659bd69f2b32">keep</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00281"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1abd2a628f0257f84148dfefa844d911ba">00281</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1abd2a628f0257f84148dfefa844d911ba">stopfitness</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00282"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00">00282</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00">iterations</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00283"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed">00283</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed">bestY</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00284"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a60b5b90ad37acfd8b562ca3fb0189e5f">00284</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a60b5b90ad37acfd8b562ca3fb0189e5f">bestX</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00285"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4">00285</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4">stop</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00286"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a5fe46e06fd5258960a7d1bf70dd1eab5">00286</link> &#32;&#32;&#32;&#32;pcg64&#32;*<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a5fe46e06fd5258960a7d1bf70dd1eab5">rs</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00287"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87">00287</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87">popX</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00288"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">00288</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1">scaled_noises</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00289"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928">00289</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928">popY</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00290"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b">00290</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b">center</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00291"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">00291</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3">stdev</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00292"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1aa05ce82c5de00141802efa50625c4060">00292</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1aa05ce82c5de00141802efa50625c4060">grad_center</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00293"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a6f781a67d0054069b30742bdc7a3de0b">00293</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a6f781a67d0054069b30742bdc7a3de0b">grad_stdev</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00294"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a0b57a5c636c110d07675dab85f18dd8a">00294</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a0b57a5c636c110d07675dab85f18dd8a">use_ranking</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00295"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a06d3dbc71179429995fd6c068dfcb732">00295</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a06d3dbc71179429995fd6c068dfcb732">lr_decay_steps</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00296"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1acc4988a82176b8c5e067766f443aed74">00296</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1acc4988a82176b8c5e067766f443aed74">center_learning_rate</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00297"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1af02edda627bf7e47c5b67069288af9fb">00297</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1af02edda627bf7e47c5b67069288af9fb">stdev_learning_rate</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00298"/><link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a851acdc3f2d277bed929991ad72c15e0">00298</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer_1a851acdc3f2d277bed929991ad72c15e0">stdev_max_change</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00299"/>00299 };
<anchor xml:id="_pgpe_8cpp_source_1l00300"/>00300 
<anchor xml:id="_pgpe_8cpp_source_1l00301"/>00301 }
<anchor xml:id="_pgpe_8cpp_source_1l00302"/>00302 
<anchor xml:id="_pgpe_8cpp_source_1l00303"/>00303 <emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespacepgpe">pgpe</link>;
<anchor xml:id="_pgpe_8cpp_source_1l00304"/>00304 
<anchor xml:id="_pgpe_8cpp_source_1l00305"/>00305 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00306"/><link linkend="_pgpe_8cpp_1a83f6d1c91509d2c28e236afbea4bd172">00306</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_pgpe_8cpp_1a83f6d1c91509d2c28e236afbea4bd172">optimizePGPE_C</link>(int64_t&#32;runid,&#32;<link linkend="_evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc">callback_parallel</link>&#32;func_par,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim,
<anchor xml:id="_pgpe_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;*init,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*lower,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*upper,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*sigma,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxEvals,
<anchor xml:id="_pgpe_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;stopfitness,&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize,&#32;int64_t&#32;seed,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lr_decay_steps,
<anchor xml:id="_pgpe_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use_ranking,&#32;<emphasis role="keywordtype">double</emphasis>&#32;center_learning_rate,
<anchor xml:id="_pgpe_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;stdev_learning_rate,&#32;<emphasis role="keywordtype">double</emphasis>&#32;stdev_max_change,&#32;<emphasis role="keywordtype">double</emphasis>&#32;b1,
<anchor xml:id="_pgpe_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;b2,&#32;<emphasis role="keywordtype">double</emphasis>&#32;eps,&#32;<emphasis role="keywordtype">double</emphasis>&#32;decay_coef,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;normalize,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*res)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00312"/>00312 
<anchor xml:id="_pgpe_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;guess(dim),&#32;lower_limit(dim),&#32;upper_limit(dim),&#32;inputSigma(dim);
<anchor xml:id="_pgpe_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{<emphasis role="comment">//&#32;guess&#32;is&#32;mandatory</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess[i]&#32;=&#32;init[i];
<anchor xml:id="_pgpe_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputSigma[i]&#32;=&#32;sigma[i];
<anchor xml:id="_pgpe_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lower&#32;!=&#32;NULL&#32;&amp;&amp;&#32;upper&#32;!=&#32;NULL)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess[i]&#32;=&#32;init[i];
<anchor xml:id="_pgpe_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit[i]&#32;=&#32;lower[i];
<anchor xml:id="_pgpe_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit[i]&#32;=&#32;upper[i];
<anchor xml:id="_pgpe_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit.resize(0);
<anchor xml:id="_pgpe_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit.resize(0);
<anchor xml:id="_pgpe_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_pgpe_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00329"/>00329 
<anchor xml:id="_pgpe_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>&#32;fitfun(<link linkend="_evaluator_8h_1ad0943ebd623281f526e5aee2aa818895">noop_callback</link>,&#32;func_par,&#32;dim,&#32;1,&#32;lower_limit,&#32;upper_limit);
<anchor xml:id="_pgpe_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;fitfun.<link linkend="_class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6">setNormalize</link>(normalize);
<anchor xml:id="_pgpe_8cpp_source_1l00332"/>00332 
<anchor xml:id="_pgpe_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>&#32;opt(runid,&#32;&amp;fitfun,&#32;dim,&#32;seed,&#32;popsize,&#32;guess,&#32;inputSigma,
<anchor xml:id="_pgpe_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxEvals,&#32;stopfitness,&#32;lr_decay_steps,&#32;use_ranking,
<anchor xml:id="_pgpe_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center_learning_rate,&#32;stdev_learning_rate,&#32;stdev_max_change,&#32;b1,&#32;b2,
<anchor xml:id="_pgpe_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps,&#32;decay_coef);
<anchor xml:id="_pgpe_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(fitfun.<link linkend="_class_fitness_1aba60038eac4e0e15d995e57f4ba079e1">evaluations</link>()&#32;&lt;&#32;maxEvals
<anchor xml:id="_pgpe_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!fitfun.<link linkend="_class_fitness_1a08a70acdfa7636ae3285e3576c9e3d11">terminate</link>()&#32;&amp;&amp;&#32;opt.getStop()&#32;==&#32;0)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;xs&#32;=&#32;opt.ask();
<anchor xml:id="_pgpe_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;ys(popsize);
<anchor xml:id="_pgpe_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fitfun.<link linkend="_class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce">values</link>(xs,&#32;ys);
<anchor xml:id="_pgpe_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt.tell(ys);
<anchor xml:id="_pgpe_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(std::exception&#32;&amp;e)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;e.what()&#32;&lt;&lt;&#32;endl;
<anchor xml:id="_pgpe_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;bestX&#32;=&#32;opt.getBestX();
<anchor xml:id="_pgpe_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;bestY&#32;=&#32;opt.getBestValue();
<anchor xml:id="_pgpe_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)
<anchor xml:id="_pgpe_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[i]&#32;=&#32;bestX[i];
<anchor xml:id="_pgpe_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;res[dim]&#32;=&#32;bestY;
<anchor xml:id="_pgpe_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;res[dim&#32;+&#32;1]&#32;=&#32;fitfun.<link linkend="_class_fitness_1aba60038eac4e0e15d995e57f4ba079e1">evaluations</link>();
<anchor xml:id="_pgpe_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;res[dim&#32;+&#32;2]&#32;=&#32;opt.getIterations();
<anchor xml:id="_pgpe_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;res[dim&#32;+&#32;3]&#32;=&#32;opt.getStop();
<anchor xml:id="_pgpe_8cpp_source_1l00356"/>00356 }
<anchor xml:id="_pgpe_8cpp_source_1l00357"/>00357 
<anchor xml:id="_pgpe_8cpp_source_1l00358"/><link linkend="_pgpe_8cpp_1a15e7e7ada6ad4ab26263681ac00ac55b">00358</link> uintptr_t&#32;<link linkend="_pgpe_8cpp_1a15e7e7ada6ad4ab26263681ac00ac55b">initPGPE_C</link>(int64_t&#32;runid,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*init,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*lower,
<anchor xml:id="_pgpe_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;*upper,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*sigma,&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize,&#32;int64_t&#32;seed,
<anchor xml:id="_pgpe_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lr_decay_steps,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use_ranking,&#32;<emphasis role="keywordtype">double</emphasis>&#32;center_learning_rate,
<anchor xml:id="_pgpe_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;stdev_learning_rate,&#32;<emphasis role="keywordtype">double</emphasis>&#32;stdev_max_change,&#32;<emphasis role="keywordtype">double</emphasis>&#32;b1,
<anchor xml:id="_pgpe_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;b2,&#32;<emphasis role="keywordtype">double</emphasis>&#32;eps,&#32;<emphasis role="keywordtype">double</emphasis>&#32;decay_coef,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;normalize)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00363"/>00363 
<anchor xml:id="_pgpe_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;guess(dim),&#32;lower_limit(dim),&#32;upper_limit(dim),&#32;inputSigma(dim);
<anchor xml:id="_pgpe_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{<emphasis role="comment">//&#32;guess&#32;is&#32;mandatory</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess[i]&#32;=&#32;init[i];
<anchor xml:id="_pgpe_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputSigma[i]&#32;=&#32;sigma[i];
<anchor xml:id="_pgpe_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lower&#32;!=&#32;NULL&#32;&amp;&amp;&#32;upper&#32;!=&#32;NULL)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess[i]&#32;=&#32;init[i];
<anchor xml:id="_pgpe_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit[i]&#32;=&#32;lower[i];
<anchor xml:id="_pgpe_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit[i]&#32;=&#32;upper[i];
<anchor xml:id="_pgpe_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit.resize(0);
<anchor xml:id="_pgpe_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit.resize(0);
<anchor xml:id="_pgpe_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_pgpe_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>&#32;*fitfun&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_fitness">Fitness</link>(<link linkend="_evaluator_8h_1ad0943ebd623281f526e5aee2aa818895">noop_callback</link>,&#32;<link linkend="_evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e">noop_callback_par</link>,&#32;dim,&#32;1,
<anchor xml:id="_pgpe_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit,&#32;upper_limit);
<anchor xml:id="_pgpe_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;fitfun-&gt;<link linkend="_class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6">setNormalize</link>(normalize);
<anchor xml:id="_pgpe_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>&#32;*opt&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>(runid,&#32;fitfun,&#32;dim,&#32;seed,&#32;popsize,
<anchor xml:id="_pgpe_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess,&#32;inputSigma,&#32;0,&#32;-DBL_MAX,&#32;lr_decay_steps,&#32;use_ranking,
<anchor xml:id="_pgpe_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center_learning_rate,&#32;stdev_learning_rate,&#32;stdev_max_change,&#32;b1,&#32;b2,
<anchor xml:id="_pgpe_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps,&#32;decay_coef);
<anchor xml:id="_pgpe_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uintptr_t)&#32;opt;
<anchor xml:id="_pgpe_8cpp_source_1l00388"/>00388 }
<anchor xml:id="_pgpe_8cpp_source_1l00389"/>00389 
<anchor xml:id="_pgpe_8cpp_source_1l00390"/><link linkend="_pgpe_8cpp_1a8909d326ed046a0387b7dd37e0c52619">00390</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_pgpe_8cpp_1a8909d326ed046a0387b7dd37e0c52619">destroyPGPE_C</link>(uintptr_t&#32;ptr)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>*)&#32;ptr;
<anchor xml:id="_pgpe_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>&#32;*fitfun&#32;=&#32;opt-&gt;getFitfun();
<anchor xml:id="_pgpe_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;fitfun;
<anchor xml:id="_pgpe_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;opt;
<anchor xml:id="_pgpe_8cpp_source_1l00395"/>00395 }
<anchor xml:id="_pgpe_8cpp_source_1l00396"/>00396 
<anchor xml:id="_pgpe_8cpp_source_1l00397"/><link linkend="_pgpe_8cpp_1a5243162be40907ba17766c126035e413">00397</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_pgpe_8cpp_1a5243162be40907ba17766c126035e413">askPGPE_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*xs)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>*)&#32;ptr;
<anchor xml:id="_pgpe_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;opt-&gt;getDim();
<anchor xml:id="_pgpe_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_pgpe_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;popX&#32;=&#32;opt-&gt;ask_decode();
<anchor xml:id="_pgpe_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>&#32;*fitfun&#32;=&#32;opt-&gt;getFitfun();
<anchor xml:id="_pgpe_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;popX.col(p);
<anchor xml:id="_pgpe_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="_pgpe_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs[p&#32;*&#32;n&#32;+&#32;i]&#32;=&#32;x[i];
<anchor xml:id="_pgpe_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00408"/>00408 }
<anchor xml:id="_pgpe_8cpp_source_1l00409"/>00409 
<anchor xml:id="_pgpe_8cpp_source_1l00410"/><link linkend="_pgpe_8cpp_1a20da2826016ed209c84182f30949d436">00410</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_pgpe_8cpp_1a20da2826016ed209c84182f30949d436">tellPGPE_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*ys)&#32;{&#32;<emphasis role="comment">//,&#32;double*&#32;xs)&#32;{</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>*)&#32;ptr;
<anchor xml:id="_pgpe_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_pgpe_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;vals(popsize);
<anchor xml:id="_pgpe_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;popsize;&#32;i++)
<anchor xml:id="_pgpe_8cpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals[i]&#32;=&#32;ys[i];
<anchor xml:id="_pgpe_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;opt-&gt;tell(vals);
<anchor xml:id="_pgpe_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;getStop();
<anchor xml:id="_pgpe_8cpp_source_1l00418"/>00418 }
<anchor xml:id="_pgpe_8cpp_source_1l00419"/>00419 
<anchor xml:id="_pgpe_8cpp_source_1l00420"/><link linkend="_pgpe_8cpp_1a2143eeef8d1b83e3c6f1d7818cffaa40">00420</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_pgpe_8cpp_1a2143eeef8d1b83e3c6f1d7818cffaa40">populationPGPE_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*xs)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>*)&#32;ptr;
<anchor xml:id="_pgpe_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim&#32;=&#32;opt-&gt;getDim();
<anchor xml:id="_pgpe_8cpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_pgpe_8cpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;popX&#32;=&#32;opt-&gt;getPopulation();
<anchor xml:id="_pgpe_8cpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;popX.col(p);
<anchor xml:id="_pgpe_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)
<anchor xml:id="_pgpe_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[i]&#32;=&#32;xs[p&#32;*&#32;dim&#32;+&#32;i];
<anchor xml:id="_pgpe_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pgpe_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;getStop();
<anchor xml:id="_pgpe_8cpp_source_1l00431"/>00431 }
<anchor xml:id="_pgpe_8cpp_source_1l00432"/>00432 
<anchor xml:id="_pgpe_8cpp_source_1l00433"/><link linkend="_pgpe_8cpp_1abd7f5b28d4595d7f9102a532a9f8c367">00433</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_pgpe_8cpp_1abd7f5b28d4595d7f9102a532a9f8c367">resultPGPE_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;res)&#32;{
<anchor xml:id="_pgpe_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classpgpe_1_1_p_g_p_e_optimizer">PGPEOptimizer</link>*)&#32;ptr;
<anchor xml:id="_pgpe_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;bestX&#32;=&#32;opt-&gt;getBestX();
<anchor xml:id="_pgpe_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;bestY&#32;=&#32;opt-&gt;getBestValue();
<anchor xml:id="_pgpe_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;bestX.size();
<anchor xml:id="_pgpe_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bestX.size();&#32;i++)
<anchor xml:id="_pgpe_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[i]&#32;=&#32;bestX[i];
<anchor xml:id="_pgpe_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;res[n]&#32;=&#32;bestY;
<anchor xml:id="_pgpe_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;fitfun&#32;=&#32;opt-&gt;getFitfun();
<anchor xml:id="_pgpe_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;res[n&#32;+&#32;1]&#32;=&#32;fitfun-&gt;<link linkend="_class_fitness_1aba60038eac4e0e15d995e57f4ba079e1">evaluations</link>();
<anchor xml:id="_pgpe_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;res[n&#32;+&#32;2]&#32;=&#32;opt-&gt;getIterations();
<anchor xml:id="_pgpe_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;res[n&#32;+&#32;3]&#32;=&#32;opt-&gt;getStop();
<anchor xml:id="_pgpe_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;getStop();
<anchor xml:id="_pgpe_8cpp_source_1l00446"/>00446 }
<anchor xml:id="_pgpe_8cpp_source_1l00447"/>00447 }
<anchor xml:id="_pgpe_8cpp_source_1l00448"/>00448 
<anchor xml:id="_pgpe_8cpp_source_1l00449"/>00449 <emphasis role="comment">//bool&#32;rosen(int&#32;n,&#32;const&#32;double&#32;*x,&#32;double&#32;*y)&#32;{</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00450"/>00450 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;f&#32;=&#32;0;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00451"/>00451 <emphasis role="comment">//&#32;&#32;&#32;&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n&#32;-&#32;1;&#32;i++)</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00452"/>00452 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f&#32;+=&#32;1e2&#32;*&#32;(x[i]&#32;*&#32;x[i]&#32;-&#32;x[i&#32;+&#32;1])&#32;*&#32;(x[i]&#32;*&#32;x[i]&#32;-&#32;x[i&#32;+&#32;1])</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00453"/>00453 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(x[i]&#32;-&#32;1.)&#32;*&#32;(x[i]&#32;-&#32;1.);</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00454"/>00454 <emphasis role="comment">//&#32;&#32;&#32;&#32;y[0]&#32;=&#32;-f;&#32;//negate&#32;!!!!!!</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00455"/>00455 <emphasis role="comment">//&#32;&#32;&#32;&#32;return&#32;false;&#32;//&#32;don&apos;t&#32;terminate</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00456"/>00456 <emphasis role="comment">//}</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00457"/>00457 <emphasis role="comment">//</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00458"/>00458 <emphasis role="comment">//double*&#32;test_rosen(int&#32;dim,&#32;int&#32;popsize)&#32;{</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00459"/>00459 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;n&#32;=&#32;dim;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00460"/>00460 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;max_iteration&#32;=&#32;10000;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00461"/>00461 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;maxEvals&#32;=&#32;max_iteration&#32;*&#32;popsize;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00462"/>00462 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;runid&#32;=&#32;0;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00463"/>00463 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;seed&#32;=&#32;4242;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00464"/>00464 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;stopfitness&#32;=&#32;-1E99;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00465"/>00465 <emphasis role="comment">//&#32;&#32;&#32;&#32;vec&#32;lower_limit&#32;=&#32;constant(dim,&#32;-100);</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00466"/>00466 <emphasis role="comment">//&#32;&#32;&#32;&#32;vec&#32;upper_limit&#32;=&#32;constant(dim,&#32;100);</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00467"/>00467 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;*res&#32;=&#32;new&#32;double[dim&#32;+&#32;4];</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00468"/>00468 <emphasis role="comment">//&#32;&#32;&#32;&#32;vec&#32;guess&#32;=&#32;zeros(dim);</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00469"/>00469 <emphasis role="comment">//&#32;&#32;&#32;&#32;vec&#32;inputSigma&#32;=&#32;constant(dim,&#32;0.1);</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00470"/>00470 <emphasis role="comment">//</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00471"/>00471 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;center_learning_rate&#32;=&#32;0.15;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00472"/>00472 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;stdev_learning_rate&#32;=&#32;0.1;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00473"/>00473 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;stdev_max_change&#32;=&#32;0.2;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00474"/>00474 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;b1&#32;=&#32;0.9;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00475"/>00475 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;b2&#32;=&#32;0.999;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00476"/>00476 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;eps&#32;=&#32;1e-8;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00477"/>00477 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;decay_coef&#32;=&#32;1.0;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00478"/>00478 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;lr_decay_steps&#32;=&#32;1000;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00479"/>00479 <emphasis role="comment">//&#32;&#32;&#32;&#32;bool&#32;use_ranking&#32;=&#32;false;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00480"/>00480 <emphasis role="comment">//</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00481"/>00481 <emphasis role="comment">//&#32;&#32;&#32;&#32;Fitness&#32;fitfun(rosen,&#32;noop_callback_par,&#32;dim,&#32;1,&#32;lower_limit,&#32;upper_limit);</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00482"/>00482 <emphasis role="comment">//&#32;&#32;&#32;&#32;PGPEOptimizer&#32;opt(runid,&#32;&amp;fitfun,&#32;dim,&#32;seed,&#32;popsize,&#32;guess,&#32;inputSigma,</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00483"/>00483 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxEvals,&#32;stopfitness,&#32;lr_decay_steps,&#32;use_ranking,</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00484"/>00484 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center_learning_rate,&#32;stdev_learning_rate,&#32;stdev_max_change,&#32;b1,&#32;b2,</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00485"/>00485 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps,&#32;decay_coef);</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00486"/>00486 <emphasis role="comment">//&#32;&#32;&#32;&#32;try&#32;{</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00487"/>00487 <emphasis role="comment">//</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00488"/>00488 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;max_iteration&#32;&amp;&amp;&#32;opt.getStop()&#32;==&#32;0;&#32;i++)&#32;{</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00489"/>00489 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&#32;xs&#32;=&#32;opt.ask_decode();</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00490"/>00490 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&#32;ys(popsize);</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00491"/>00491 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(int&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00492"/>00492 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&#32;y&#32;=&#32;fitfun.eval(xs.col(p));</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00493"/>00493 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys[p]&#32;=&#32;y[0];</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00494"/>00494 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00495"/>00495 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt.tell(ys);</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00496"/>00496 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00497"/>00497 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vec&#32;bestX&#32;=&#32;opt.getBestX();</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00498"/>00498 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double&#32;bestY&#32;=&#32;opt.getBestValue();</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00499"/>00499 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00500"/>00500 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[i]&#32;=&#32;bestX[i];</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00501"/>00501 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[n]&#32;=&#32;bestY;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00502"/>00502 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[n&#32;+&#32;1]&#32;=&#32;fitfun.evaluations();</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00503"/>00503 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[n&#32;+&#32;2]&#32;=&#32;opt.getIterations();</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00504"/>00504 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[n&#32;+&#32;3]&#32;=&#32;opt.getStop();</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00505"/>00505 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;res;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00506"/>00506 <emphasis role="comment">//&#32;&#32;&#32;&#32;}&#32;catch&#32;(std::exception&#32;&amp;e)&#32;{</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00507"/>00507 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;e.what()&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00508"/>00508 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;res;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00509"/>00509 <emphasis role="comment">//&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00510"/>00510 <emphasis role="comment">//}</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00511"/>00511 <emphasis role="comment">//</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00512"/>00512 <emphasis role="comment">//int&#32;main()&#32;{</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00513"/>00513 <emphasis role="comment">//</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00514"/>00514 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;dim&#32;=&#32;13;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00515"/>00515 <emphasis role="comment">//&#32;&#32;&#32;&#32;int&#32;popsize&#32;=&#32;80;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00516"/>00516 <emphasis role="comment">//&#32;&#32;&#32;&#32;double&#32;*res&#32;=&#32;test_rosen(dim,&#32;popsize);</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00517"/>00517 <emphasis role="comment">//&#32;&#32;&#32;&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim&#32;+&#32;4;&#32;i++)</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00518"/>00518 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;res[i]&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00519"/>00519 <emphasis role="comment">//&#32;&#32;&#32;&#32;return&#32;0;</emphasis>
<anchor xml:id="_pgpe_8cpp_source_1l00520"/>00520 <emphasis role="comment">//}</emphasis>
</programlisting></section>

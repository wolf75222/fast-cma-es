<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_daoptimizer_8cpp_source" xml:lang="en-US">
<title>daoptimizer.cpp</title>
<indexterm><primary>_fcmaescpp/daoptimizer.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_daoptimizer_8cpp_source_1l00001"/>00001 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00002"/>00002 <emphasis role="comment">//</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00003"/>00003 <emphasis role="comment">//&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00004"/>00004 <emphasis role="comment">//&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00005"/>00005 
<anchor xml:id="_daoptimizer_8cpp_source_1l00006"/>00006 <emphasis role="comment">//&#32;Eigen&#32;based&#32;implementation&#32;of&#32;dual&#32;annealing&#32;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00007"/>00007 <emphasis role="comment">//&#32;derived&#32;from&#32;https://github.com/scipy/scipy/blob/master/scipy/optimize/_dual_annealing.py</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00008"/>00008 <emphasis role="comment">//&#32;Implementation&#32;only&#32;differs&#32;regarding&#32;boundary&#32;handling&#32;-&#32;this&#32;implementattion&#32;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00009"/>00009 <emphasis role="comment">//&#32;uses&#32;boundary-normalized&#32;X&#32;values.&#32;Local&#32;search&#32;is&#32;fixed&#32;to&#32;LBFGS-B,&#32;see</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00010"/>00010 <emphasis role="comment">//&#32;https://github.com/yixuan/LBFGSpp/tree/master/include</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00011"/>00011 
<anchor xml:id="_daoptimizer_8cpp_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&lt;Eigen/Core&gt;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&lt;float.h&gt;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&lt;ctime&gt;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&lt;random&gt;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&lt;<link linkend="__l_b_f_g_s_b_8h">LBFGSB.h</link>&gt;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;pcg_random.hpp&quot;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00020"/>00020 
<anchor xml:id="_daoptimizer_8cpp_source_1l00021"/>00021 <emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespace_l_b_f_g_spp">LBFGSpp</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00022"/>00022 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="_daoptimizer_8cpp_source_1l00023"/>00023 
<anchor xml:id="_daoptimizer_8cpp_source_1l00024"/><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">00024</link> <emphasis role="keyword">typedef</emphasis>&#32;Eigen::Matrix&lt;double,&#32;Eigen::Dynamic,&#32;1&gt;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00025"/><link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">00025</link> <emphasis role="keyword">typedef</emphasis>&#32;Eigen::Matrix&lt;int,&#32;Eigen::Dynamic,&#32;1&gt;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00026"/><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">00026</link> <emphasis role="keyword">typedef</emphasis>&#32;Eigen::Matrix&lt;double,&#32;Eigen::Dynamic,&#32;Eigen::Dynamic&gt;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00027"/>00027 
<anchor xml:id="_daoptimizer_8cpp_source_1l00028"/><link linkend="_namespacedual__annealing">00028</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacedual__annealing">dual_annealing</link>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00029"/>00029 
<anchor xml:id="_daoptimizer_8cpp_source_1l00030"/><link linkend="_namespacedual__annealing_1acc0e4feae757283b161380c003152d7c">00030</link> <emphasis role="keyword">typedef</emphasis>&#32;double&#32;(*<link linkend="_namespacedual__annealing_1acc0e4feae757283b161380c003152d7c">callback_type</link>)(int,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>*);
<anchor xml:id="_daoptimizer_8cpp_source_1l00031"/>00031 
<anchor xml:id="_daoptimizer_8cpp_source_1l00032"/>00032 <emphasis role="comment">//&#32;wrapper&#32;around&#32;the&#32;fitness&#32;function,&#32;scales&#32;according&#32;to&#32;boundaries</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00033"/>00033 
<anchor xml:id="_daoptimizer_8cpp_source_1l00034"/>00034 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdual__annealing_1_1_fitness">Fitness</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00035"/>00035 
<anchor xml:id="_daoptimizer_8cpp_source_1l00036"/><link linkend="_namespacedual__annealing_1aa2dc69b8049771ea50c1c75e24ba4f61">00036</link> <emphasis role="keyword">static</emphasis>&#32;uniform_real_distribution&lt;&gt;&#32;<link linkend="_namespacedual__annealing_1aa2dc69b8049771ea50c1c75e24ba4f61">distr_01</link>&#32;=&#32;std::uniform_real_distribution&lt;&gt;(
<anchor xml:id="_daoptimizer_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;1);
<anchor xml:id="_daoptimizer_8cpp_source_1l00038"/><link linkend="_namespacedual__annealing_1a3355fe6c7e3315cbbdff5dd45558144f">00038</link> <emphasis role="keyword">static</emphasis>&#32;normal_distribution&lt;&gt;&#32;<link linkend="_namespacedual__annealing_1a3355fe6c7e3315cbbdff5dd45558144f">gauss_01</link>&#32;=&#32;std::normal_distribution&lt;&gt;(0,&#32;1);
<anchor xml:id="_daoptimizer_8cpp_source_1l00039"/>00039 
<anchor xml:id="_daoptimizer_8cpp_source_1l00040"/><link linkend="_namespacedual__annealing_1a8be31e030bc6b64855a87450168499d1">00040</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_namespacedual__annealing_1a8be31e030bc6b64855a87450168499d1">zeros</link>(<emphasis role="keywordtype">int</emphasis>&#32;n)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Eigen::MatrixXd::Zero(n,&#32;1);
<anchor xml:id="_daoptimizer_8cpp_source_1l00042"/>00042 }
<anchor xml:id="_daoptimizer_8cpp_source_1l00043"/>00043 
<anchor xml:id="_daoptimizer_8cpp_source_1l00044"/><link linkend="_namespacedual__annealing_1a3688f9a35c8af0e21f7670473fdfc196">00044</link> <emphasis role="keyword">static</emphasis>&#32;Eigen::MatrixXd&#32;<link linkend="_namespacedual__annealing_1a3688f9a35c8af0e21f7670473fdfc196">normalVec</link>(<emphasis role="keywordtype">int</emphasis>&#32;dim,&#32;pcg64&#32;&amp;rs)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Eigen::MatrixXd::NullaryExpr(dim,&#32;1,&#32;[&amp;]()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacedual__annealing_1a3355fe6c7e3315cbbdff5dd45558144f">gauss_01</link>(rs);
<anchor xml:id="_daoptimizer_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;});
<anchor xml:id="_daoptimizer_8cpp_source_1l00048"/>00048 }
<anchor xml:id="_daoptimizer_8cpp_source_1l00049"/>00049 
<anchor xml:id="_daoptimizer_8cpp_source_1l00050"/><link linkend="_namespacedual__annealing_1ab0a43c3dcc31de6ab3f4b6feb070a4df">00050</link> <emphasis role="keyword">static</emphasis>&#32;Eigen::MatrixXd&#32;<link linkend="_namespacedual__annealing_1ab0a43c3dcc31de6ab3f4b6feb070a4df">uniformVec</link>(<emphasis role="keywordtype">int</emphasis>&#32;dim,&#32;pcg64&#32;&amp;rs)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Eigen::MatrixXd::NullaryExpr(dim,&#32;1,&#32;[&amp;]()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacedual__annealing_1aa2dc69b8049771ea50c1c75e24ba4f61">distr_01</link>(rs);
<anchor xml:id="_daoptimizer_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;});
<anchor xml:id="_daoptimizer_8cpp_source_1l00054"/>00054 }
<anchor xml:id="_daoptimizer_8cpp_source_1l00055"/>00055 
<anchor xml:id="_daoptimizer_8cpp_source_1l00056"/><link linkend="_namespacedual__annealing_1ad43d310b3d2ac1ef9ad7cf7af4edb59f">00056</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_namespacedual__annealing_1ad43d310b3d2ac1ef9ad7cf7af4edb59f">emptyVec</link>&#32;=&#32;{&#32;};
<anchor xml:id="_daoptimizer_8cpp_source_1l00057"/>00057 
<anchor xml:id="_daoptimizer_8cpp_source_1l00058"/><link linkend="_namespacedual__annealing_1aa453b3bdb1c9bcf34d298af39b661639">00058</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_namespacedual__annealing_1aa453b3bdb1c9bcf34d298af39b661639">logv</link>(<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;v)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.unaryExpr([](<emphasis role="keywordtype">double</emphasis>&#32;x)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;log(x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;});
<anchor xml:id="_daoptimizer_8cpp_source_1l00062"/>00062 }
<anchor xml:id="_daoptimizer_8cpp_source_1l00063"/>00063 
<anchor xml:id="_daoptimizer_8cpp_source_1l00064"/><link linkend="_namespacedual__annealing_1a151b32ba2575f7a0632b5c55162fb4bd">00064</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_namespacedual__annealing_1a151b32ba2575f7a0632b5c55162fb4bd">expv</link>(<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;v)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;v.unaryExpr([](<emphasis role="keywordtype">double</emphasis>&#32;x)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;exp(x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;});
<anchor xml:id="_daoptimizer_8cpp_source_1l00068"/>00068 }
<anchor xml:id="_daoptimizer_8cpp_source_1l00069"/>00069 
<anchor xml:id="_daoptimizer_8cpp_source_1l00070"/>00070 <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_namespacedual__annealing_1ac314c8e5c367afe5307f99a29a667f6b">minLBFGS</link>(<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;*fitfun,&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;X0_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxIterations);
<anchor xml:id="_daoptimizer_8cpp_source_1l00071"/>00071 
<anchor xml:id="_daoptimizer_8cpp_source_1l00072"/><link linkend="_classdual__annealing_1_1_fitness">00072</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8">Fitness</link>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00073"/>00073 
<anchor xml:id="_daoptimizer_8cpp_source_1l00074"/>00074 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00075"/>00075 
<anchor xml:id="_daoptimizer_8cpp_source_1l00076"/><link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">00076</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00077"/><link linkend="_classdual__annealing_1_1_fitness_1aca95b5772925f77987ea96b12004b7b6">00077</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_fitness_1aca95b5772925f77987ea96b12004b7b6">upper</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00078"/>00078 
<anchor xml:id="_daoptimizer_8cpp_source_1l00079"/><link linkend="_classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8">00079</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8">Fitness</link>(<link linkend="_namespacedual__annealing_1acc0e4feae757283b161380c003152d7c">callback_type</link>&#32;pfunc,&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;*lower_limit,&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;*upper_limit,
<anchor xml:id="_daoptimizer_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;maxEvals_)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a420fcefb28b5a9ba16b80cabba1d017f">func</link>&#32;=&#32;pfunc;
<anchor xml:id="_daoptimizer_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link>&#32;=&#32;*lower_limit;
<anchor xml:id="_daoptimizer_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness_1aca95b5772925f77987ea96b12004b7b6">upper</link>&#32;=&#32;*upper_limit;
<anchor xml:id="_daoptimizer_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link>.size()&#32;&gt;&#32;0)&#32;<emphasis role="comment">//&#32;bounds&#32;defined</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63">scale</link>&#32;=&#32;(<link linkend="_classdual__annealing_1_1_fitness_1aca95b5772925f77987ea96b12004b7b6">upper</link>&#32;-&#32;<link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a6fb1053a249b16799a038672c59e915c">maxEvals</link>&#32;=&#32;maxEvals_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00088"/>00088 
<anchor xml:id="_daoptimizer_8cpp_source_1l00089"/><link linkend="_classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5">00089</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5">getClosestFeasible</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;X)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_daoptimizer_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link>.size()&#32;&gt;&#32;0)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;X.cwiseMin(1.0).cwiseMax(-1.0);
<anchor xml:id="_daoptimizer_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;X;
<anchor xml:id="_daoptimizer_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00095"/>00095 
<anchor xml:id="_daoptimizer_8cpp_source_1l00096"/><link linkend="_classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5">00096</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5">eval</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;X)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;X.size();
<anchor xml:id="_daoptimizer_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;res&#32;=&#32;<link linkend="_classdual__annealing_1_1_fitness_1a420fcefb28b5a9ba16b80cabba1d017f">func</link>(n,&#32;X.data());
<anchor xml:id="_daoptimizer_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42">evaluationCounter</link>++;
<anchor xml:id="_daoptimizer_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;res;
<anchor xml:id="_daoptimizer_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00102"/>00102 
<anchor xml:id="_daoptimizer_8cpp_source_1l00103"/><link linkend="_classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7">00103</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7">value</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;X)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;res&#32;=&#32;DBL_MAX;
<anchor xml:id="_daoptimizer_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link>.size()&#32;&gt;&#32;0)
<anchor xml:id="_daoptimizer_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;<link linkend="_classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5">eval</link>(<link linkend="_classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8">decode</link>(<link linkend="_classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5">getClosestFeasible</link>(X)));
<anchor xml:id="_daoptimizer_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;<link linkend="_classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5">eval</link>(X);
<anchor xml:id="_daoptimizer_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(res&#32;&lt;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c">bestY</link>)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c">bestY</link>&#32;=&#32;res;
<anchor xml:id="_daoptimizer_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness_1ab67b400f380bb926698cf02edd2f5ffa">bestX</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(X);
<anchor xml:id="_daoptimizer_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;res;
<anchor xml:id="_daoptimizer_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00115"/>00115 
<anchor xml:id="_daoptimizer_8cpp_source_1l00116"/><link linkend="_classdual__annealing_1_1_fitness_1a6ca3b936412ade3edf4441e48f87a966">00116</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a6ca3b936412ade3edf4441e48f87a966">LS_MAXITER_RATIO</link>&#32;=&#32;6;
<anchor xml:id="_daoptimizer_8cpp_source_1l00117"/><link linkend="_classdual__annealing_1_1_fitness_1a88756554a52354b1c976854944f5db4b">00117</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a88756554a52354b1c976854944f5db4b">LS_MAXITER_MIN</link>&#32;=&#32;100;
<anchor xml:id="_daoptimizer_8cpp_source_1l00118"/><link linkend="_classdual__annealing_1_1_fitness_1a6089fb532194afab1e05fac3e55c77c6">00118</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a6089fb532194afab1e05fac3e55c77c6">LS_MAXITER_MAX</link>&#32;=&#32;1000;
<anchor xml:id="_daoptimizer_8cpp_source_1l00119"/>00119 
<anchor xml:id="_daoptimizer_8cpp_source_1l00120"/><link linkend="_classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710">00120</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710">local_search</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x0,&#32;<emphasis role="keywordtype">double</emphasis>&#32;currval,&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;res)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;init&#32;=&#32;<link linkend="_classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5">getClosestFeasible</link>(x0);
<anchor xml:id="_daoptimizer_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c">bestY</link>&#32;=&#32;DBL_MAX;
<anchor xml:id="_daoptimizer_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxIter&#32;=&#32;<link linkend="_classdual__annealing_1_1_fitness_1a6ca3b936412ade3edf4441e48f87a966">LS_MAXITER_RATIO</link>&#32;*&#32;x0.size();
<anchor xml:id="_daoptimizer_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxIter&#32;&gt;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a6089fb532194afab1e05fac3e55c77c6">LS_MAXITER_MAX</link>)
<anchor xml:id="_daoptimizer_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxIter&#32;=&#32;<link linkend="_classdual__annealing_1_1_fitness_1a6089fb532194afab1e05fac3e55c77c6">LS_MAXITER_MAX</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxIter&#32;&lt;&#32;<link linkend="_classdual__annealing_1_1_fitness_1a88756554a52354b1c976854944f5db4b">LS_MAXITER_MIN</link>)
<anchor xml:id="_daoptimizer_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxIter&#32;=&#32;<link linkend="_classdual__annealing_1_1_fitness_1a88756554a52354b1c976854944f5db4b">LS_MAXITER_MIN</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedual__annealing_1ac314c8e5c367afe5307f99a29a667f6b">minLBFGS</link>(<emphasis role="keyword">this</emphasis>,&#32;init,&#32;maxIter);
<anchor xml:id="_daoptimizer_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c">bestY</link>&#32;&lt;&#32;DBL_MAX)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;res.size();&#32;i++)
<anchor xml:id="_daoptimizer_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[i]&#32;=&#32;<link linkend="_classdual__annealing_1_1_fitness_1ab67b400f380bb926698cf02edd2f5ffa">bestX</link>(i);
<anchor xml:id="_daoptimizer_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c">bestY</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00135"/>00135 
<anchor xml:id="_daoptimizer_8cpp_source_1l00136"/><link linkend="_classdual__annealing_1_1_fitness_1a288c5b34db28ee5a3c0e0916f6936d27">00136</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a288c5b34db28ee5a3c0e0916f6936d27">encode</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;X)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_daoptimizer_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link>.size()&#32;&gt;&#32;0)
<anchor xml:id="_daoptimizer_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(X&#32;-&#32;<link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link>).array()&#32;/&#32;<link linkend="_classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63">scale</link>.array();
<anchor xml:id="_daoptimizer_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;X;
<anchor xml:id="_daoptimizer_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00142"/>00142 
<anchor xml:id="_daoptimizer_8cpp_source_1l00143"/><link linkend="_classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8">00143</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8">decode</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;X)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_daoptimizer_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link>.size()&#32;&gt;&#32;0)
<anchor xml:id="_daoptimizer_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;X.cwiseProduct(<link linkend="_classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63">scale</link>)&#32;+&#32;<link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;X;
<anchor xml:id="_daoptimizer_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00149"/>00149 
<anchor xml:id="_daoptimizer_8cpp_source_1l00150"/><link linkend="_classdual__annealing_1_1_fitness_1a9abe3257d970e7fec842dedfeb409f37">00150</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a9abe3257d970e7fec842dedfeb409f37">getEvaluations</link>()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42">evaluationCounter</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00153"/>00153 
<anchor xml:id="_daoptimizer_8cpp_source_1l00154"/><link linkend="_classdual__annealing_1_1_fitness_1aa8838720841139fdfbac2c37a4dc0548">00154</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1aa8838720841139fdfbac2c37a4dc0548">maxEvalReached</link>()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42">evaluationCounter</link>&#32;&gt;=&#32;<link linkend="_classdual__annealing_1_1_fitness_1a6fb1053a249b16799a038672c59e915c">maxEvals</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00157"/>00157 
<anchor xml:id="_daoptimizer_8cpp_source_1l00158"/>00158 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00159"/><link linkend="_classdual__annealing_1_1_fitness_1a420fcefb28b5a9ba16b80cabba1d017f">00159</link> &#32;&#32;&#32;&#32;<link linkend="_namespacedual__annealing_1acc0e4feae757283b161380c003152d7c">callback_type</link>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a420fcefb28b5a9ba16b80cabba1d017f">func</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00160"/><link linkend="_classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42">00160</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42">evaluationCounter</link>&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00161"/><link linkend="_classdual__annealing_1_1_fitness_1a6fb1053a249b16799a038672c59e915c">00161</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a6fb1053a249b16799a038672c59e915c">maxEvals</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00162"/><link linkend="_classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63">00162</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63">scale</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00163"/><link linkend="_classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c">00163</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c">bestY</link>&#32;=&#32;DBL_MAX;
<anchor xml:id="_daoptimizer_8cpp_source_1l00164"/><link linkend="_classdual__annealing_1_1_fitness_1ab67b400f380bb926698cf02edd2f5ffa">00164</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_fitness_1ab67b400f380bb926698cf02edd2f5ffa">bestX</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00165"/>00165 };
<anchor xml:id="_daoptimizer_8cpp_source_1l00166"/>00166 
<anchor xml:id="_daoptimizer_8cpp_source_1l00167"/><link linkend="_classdual__annealing_1_1_l_b_f_g_s_func">00167</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a4a47dfad8532211a6da6eaf696f9eb77">LBFGSFunc</link>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00168"/>00168 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00169"/><link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1ab2864f24f45a4ced5f87d4b46be00aa8">00169</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;*<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1ab2864f24f45a4ced5f87d4b46be00aa8">func</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00170"/><link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a4631838189a072670a408711f5e26197">00170</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a4631838189a072670a408711f5e26197">dim</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00171"/>00171 
<anchor xml:id="_daoptimizer_8cpp_source_1l00172"/>00172 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00173"/>00173 
<anchor xml:id="_daoptimizer_8cpp_source_1l00174"/><link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a4a47dfad8532211a6da6eaf696f9eb77">00174</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a4a47dfad8532211a6da6eaf696f9eb77">LBFGSFunc</link>(<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;*Fitness_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim_)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1ab2864f24f45a4ced5f87d4b46be00aa8">func</link>&#32;=&#32;Fitness_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a4631838189a072670a408711f5e26197">dim</link>&#32;=&#32;dim_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00178"/>00178 
<anchor xml:id="_daoptimizer_8cpp_source_1l00179"/><link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a7493a5c4715c66ffe3d0c489ce1bf2d7">00179</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a7493a5c4715c66ffe3d0c489ce1bf2d7">operator()</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x,&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;grad)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!x.allFinite())
<anchor xml:id="_daoptimizer_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DBL_MAX;
<anchor xml:id="_daoptimizer_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;eps&#32;=&#32;1E-6;
<anchor xml:id="_daoptimizer_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;arg&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a4631838189a072670a408711f5e26197">dim</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a4631838189a072670a408711f5e26197">dim</link>;&#32;i++)
<anchor xml:id="_daoptimizer_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg[i]&#32;=&#32;x(i);
<anchor xml:id="_daoptimizer_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1a4631838189a072670a408711f5e26197">dim</link>;&#32;i++)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x1&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(arg);
<anchor xml:id="_daoptimizer_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x2&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(arg);
<anchor xml:id="_daoptimizer_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;e1&#32;=&#32;eps;
<anchor xml:id="_daoptimizer_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;e2&#32;=&#32;eps;
<anchor xml:id="_daoptimizer_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x1[i]&#32;+=&#32;eps;
<anchor xml:id="_daoptimizer_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x1[i]&#32;&gt;&#32;1)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x1[i]&#32;=&#32;1;
<anchor xml:id="_daoptimizer_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e1&#32;=&#32;1&#32;-&#32;arg[i];
<anchor xml:id="_daoptimizer_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x2[i]&#32;-=&#32;eps;
<anchor xml:id="_daoptimizer_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x2[i]&#32;&lt;&#32;0)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x2[i]&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e2&#32;=&#32;arg[i];
<anchor xml:id="_daoptimizer_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;f1&#32;=&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1ab2864f24f45a4ced5f87d4b46be00aa8">func</link>-&gt;value(x1);
<anchor xml:id="_daoptimizer_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;f2&#32;=&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1ab2864f24f45a4ced5f87d4b46be00aa8">func</link>-&gt;value(x2);
<anchor xml:id="_daoptimizer_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grad[i]&#32;=&#32;(f1&#32;-&#32;f2)&#32;/&#32;(e1&#32;+&#32;e2);
<anchor xml:id="_daoptimizer_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;f&#32;=&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func_1ab2864f24f45a4ced5f87d4b46be00aa8">func</link>-&gt;value(arg);
<anchor xml:id="_daoptimizer_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;f;
<anchor xml:id="_daoptimizer_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00208"/>00208 };
<anchor xml:id="_daoptimizer_8cpp_source_1l00209"/>00209 
<anchor xml:id="_daoptimizer_8cpp_source_1l00210"/><link linkend="_namespacedual__annealing_1ac314c8e5c367afe5307f99a29a667f6b">00210</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_namespacedual__annealing_1ac314c8e5c367afe5307f99a29a667f6b">minLBFGS</link>(<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;*fitfun,&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;X0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxIterations)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim&#32;=&#32;X0.size();
<anchor xml:id="_daoptimizer_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func">LBFGSFunc</link>&#32;fun&#32;=&#32;<link linkend="_classdual__annealing_1_1_l_b_f_g_s_func">LBFGSFunc</link>(fitfun,&#32;dim);
<anchor xml:id="_daoptimizer_8cpp_source_1l00213"/>00213 
<anchor xml:id="_daoptimizer_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;LBFGSBParam&lt;double&gt;&#32;param;
<anchor xml:id="_daoptimizer_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;param.max_iterations&#32;=&#32;maxIterations;
<anchor xml:id="_daoptimizer_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver">LBFGSBSolver&lt;double&gt;</link>&#32;solver(param);
<anchor xml:id="_daoptimizer_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;lb&#32;=&#32;vec::Constant(dim,&#32;0.0);
<anchor xml:id="_daoptimizer_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;ub&#32;=&#32;vec::Constant(dim,&#32;1.0);
<anchor xml:id="_daoptimizer_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initial&#32;values</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;vec::Constant(dim,&#32;0);
<anchor xml:id="_daoptimizer_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)
<anchor xml:id="_daoptimizer_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[i]&#32;=&#32;X0[i];
<anchor xml:id="_daoptimizer_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;fx;
<anchor xml:id="_daoptimizer_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;niter;
<anchor xml:id="_daoptimizer_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;niter&#32;=&#32;solver.<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a420f4521286e2ac37a37f41b9f5767a9">minimize</link>(fun,&#32;x,&#32;fx,&#32;lb,&#32;ub);
<anchor xml:id="_daoptimizer_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(std::exception&#32;&amp;e)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cout&#32;&lt;&lt;&#32;e.what()&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DBL_MAX;
<anchor xml:id="_daoptimizer_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fx;
<anchor xml:id="_daoptimizer_8cpp_source_1l00232"/>00232 }
<anchor xml:id="_daoptimizer_8cpp_source_1l00233"/>00233 
<anchor xml:id="_daoptimizer_8cpp_source_1l00234"/><link linkend="_classdual__annealing_1_1_visiting_distribution">00234</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdual__annealing_1_1_visiting_distribution_1a522d6cb53a56f02bba86980d18d04b40">VisitingDistribution</link>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00235"/>00235 
<anchor xml:id="_daoptimizer_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;<emphasis role="comment">//Class&#32;used&#32;to&#32;generate&#32;new&#32;coordinates&#32;based&#32;on&#32;the&#32;distorted</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;<emphasis role="comment">//Cauchy-Lorentz&#32;distribution.&#32;Depending&#32;on&#32;the&#32;steps&#32;within&#32;the&#32;Markov</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;<emphasis role="comment">//chain,&#32;the&#32;class&#32;implements&#32;the&#32;strategy&#32;for&#32;generating&#32;new&#32;location</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;<emphasis role="comment">//changes.</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00240"/>00240 
<anchor xml:id="_daoptimizer_8cpp_source_1l00241"/>00241 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00242"/>00242 
<anchor xml:id="_daoptimizer_8cpp_source_1l00243"/><link linkend="_classdual__annealing_1_1_visiting_distribution_1a522d6cb53a56f02bba86980d18d04b40">00243</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a522d6cb53a56f02bba86980d18d04b40">VisitingDistribution</link>(<emphasis role="keywordtype">int</emphasis>&#32;dim,&#32;<emphasis role="keywordtype">double</emphasis>&#32;visiting_param_,&#32;pcg64&#32;*rs_)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>&#32;=&#32;visiting_param_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a62b306315afc2b8802fed40375a38b69">rs</link>&#32;=&#32;rs_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00246"/>00246 
<anchor xml:id="_daoptimizer_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;these&#32;are&#32;invariant&#32;numbers&#32;unless&#32;visiting_param&#32;changes</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;factor2&#32;=&#32;exp(
<anchor xml:id="_daoptimizer_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(4.0&#32;-&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>)&#32;*&#32;log(<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>&#32;-&#32;1.0));
<anchor xml:id="_daoptimizer_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;factor3&#32;=&#32;exp(
<anchor xml:id="_daoptimizer_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(2.0&#32;-&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>)&#32;*&#32;log(2.0)&#32;/&#32;(<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>&#32;-&#32;1.0));
<anchor xml:id="_daoptimizer_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a3801b308cec6da63fa5678cdcf9bdf1b">_factor4_p</link>&#32;=&#32;sqrt(M_PI)&#32;*&#32;factor2&#32;/&#32;(factor3&#32;*&#32;(3.0&#32;-&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>));
<anchor xml:id="_daoptimizer_8cpp_source_1l00253"/>00253 
<anchor xml:id="_daoptimizer_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;factor5&#32;=&#32;1.0&#32;/&#32;(<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>&#32;-&#32;1.0)&#32;-&#32;0.5;
<anchor xml:id="_daoptimizer_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;d1&#32;=&#32;2.0&#32;-&#32;factor5;
<anchor xml:id="_daoptimizer_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a299fb41ee5ae47e41dad13b99ed701cb">_factor6</link>&#32;=&#32;M_PI&#32;*&#32;(1.0&#32;-&#32;factor5)&#32;/&#32;sin(M_PI&#32;*&#32;(1.0&#32;-&#32;factor5))
<anchor xml:id="_daoptimizer_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;exp(lgamma(d1));
<anchor xml:id="_daoptimizer_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00259"/>00259 
<anchor xml:id="_daoptimizer_8cpp_source_1l00260"/><link linkend="_classdual__annealing_1_1_visiting_distribution_1a0c95415e2aa6426dbe64d65eb799c7f7">00260</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a0c95415e2aa6426dbe64d65eb799c7f7">visiting</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;step,&#32;<emphasis role="keywordtype">double</emphasis>&#32;temperature)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Based&#32;on&#32;the&#32;step&#32;in&#32;the&#32;strategy&#32;chain,&#32;new&#32;coordinated&#32;are</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//generated&#32;by&#32;changing&#32;all&#32;components&#32;is&#32;the&#32;same&#32;time&#32;or&#32;only</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//one&#32;of&#32;them,&#32;the&#32;new&#32;values&#32;are&#32;computed&#32;with&#32;visit_fn&#32;method</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00264"/>00264 
<anchor xml:id="_daoptimizer_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim&#32;=&#32;x.size();
<anchor xml:id="_daoptimizer_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(step&#32;&lt;&#32;dim)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Changing&#32;all&#32;coordinates&#32;with&#32;a&#32;new&#32;visiting&#32;value</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;upper_sample&#32;=&#32;<link linkend="_namespacedual__annealing_1aa2dc69b8049771ea50c1c75e24ba4f61">distr_01</link>(*<link linkend="_classdual__annealing_1_1_visiting_distribution_1a62b306315afc2b8802fed40375a38b69">rs</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;lower_sample&#32;=&#32;<link linkend="_namespacedual__annealing_1aa2dc69b8049771ea50c1c75e24ba4f61">distr_01</link>(*<link linkend="_classdual__annealing_1_1_visiting_distribution_1a62b306315afc2b8802fed40375a38b69">rs</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;visits&#32;=&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a5fb765282e4ad1fcfd42481e20ad7a09">visit_fn</link>(temperature,&#32;dim);
<anchor xml:id="_daoptimizer_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(visits[i]&#32;&gt;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a015af994a7461bd70cd69bb11d578376">TAIL_LIMIT</link>)
<anchor xml:id="_daoptimizer_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;visits[i]&#32;=&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a015af994a7461bd70cd69bb11d578376">TAIL_LIMIT</link>&#32;*&#32;upper_sample;
<anchor xml:id="_daoptimizer_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(visits[i]&#32;&lt;&#32;-<link linkend="_classdual__annealing_1_1_visiting_distribution_1a015af994a7461bd70cd69bb11d578376">TAIL_LIMIT</link>)
<anchor xml:id="_daoptimizer_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;visits[i]&#32;=&#32;-<link linkend="_classdual__annealing_1_1_visiting_distribution_1a015af994a7461bd70cd69bb11d578376">TAIL_LIMIT</link>&#32;*&#32;lower_sample;
<anchor xml:id="_daoptimizer_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x_visit&#32;=&#32;visits&#32;+&#32;x;
<anchor xml:id="_daoptimizer_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;a&#32;=&#32;x_visit;
<anchor xml:id="_daoptimizer_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;b&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(dim);
<anchor xml:id="_daoptimizer_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b[i]&#32;=&#32;fmod(a[i],&#32;1)&#32;+&#32;1;
<anchor xml:id="_daoptimizer_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_visit[i]&#32;=&#32;fmod(b[i],&#32;1);
<anchor xml:id="_daoptimizer_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(abs(x_visit[i])&#32;&lt;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aacb719f5fb17e1ee8c03be5686192950">MIN_VISIT_BOUND</link>)
<anchor xml:id="_daoptimizer_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_visit[i]&#32;+=&#32;1.e-10;
<anchor xml:id="_daoptimizer_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cerr&#32;&lt;&lt;&#32;step&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;temperature&#32;&lt;&lt;&#32;&#32;endl;//&#32;&lt;&lt;&#32;x_visit&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x_visit;
<anchor xml:id="_daoptimizer_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Changing&#32;only&#32;one&#32;coordinate&#32;at&#32;a&#32;time&#32;based&#32;on&#32;strategy</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;chain&#32;step</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x_visit&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;visit&#32;=&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a5fb765282e4ad1fcfd42481e20ad7a09">visit_fn</link>(temperature,&#32;1)[0];
<anchor xml:id="_daoptimizer_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(visit&#32;&gt;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a015af994a7461bd70cd69bb11d578376">TAIL_LIMIT</link>)
<anchor xml:id="_daoptimizer_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;visit&#32;=&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a015af994a7461bd70cd69bb11d578376">TAIL_LIMIT</link>&#32;*&#32;<link linkend="_namespacedual__annealing_1aa2dc69b8049771ea50c1c75e24ba4f61">distr_01</link>(*<link linkend="_classdual__annealing_1_1_visiting_distribution_1a62b306315afc2b8802fed40375a38b69">rs</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(visit&#32;&lt;&#32;-<link linkend="_classdual__annealing_1_1_visiting_distribution_1a015af994a7461bd70cd69bb11d578376">TAIL_LIMIT</link>)
<anchor xml:id="_daoptimizer_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;visit&#32;=&#32;-<link linkend="_classdual__annealing_1_1_visiting_distribution_1a015af994a7461bd70cd69bb11d578376">TAIL_LIMIT</link>&#32;*&#32;<link linkend="_namespacedual__annealing_1aa2dc69b8049771ea50c1c75e24ba4f61">distr_01</link>(*<link linkend="_classdual__annealing_1_1_visiting_distribution_1a62b306315afc2b8802fed40375a38b69">rs</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;step&#32;-&#32;dim;
<anchor xml:id="_daoptimizer_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_visit[index]&#32;=&#32;visit&#32;+&#32;x[index];
<anchor xml:id="_daoptimizer_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;a&#32;=&#32;x_visit[index];
<anchor xml:id="_daoptimizer_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;b&#32;=&#32;fmod(a,&#32;1)&#32;+&#32;1;
<anchor xml:id="_daoptimizer_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_visit[index]&#32;=&#32;fmod(b,&#32;1);
<anchor xml:id="_daoptimizer_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(abs(x_visit[index])&#32;&lt;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aacb719f5fb17e1ee8c03be5686192950">MIN_VISIT_BOUND</link>)
<anchor xml:id="_daoptimizer_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_visit[index]&#32;+=&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aacb719f5fb17e1ee8c03be5686192950">MIN_VISIT_BOUND</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cerr&#32;&lt;&lt;&#32;step&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;temperature&#32;&lt;&lt;&#32;&#32;endl;//&#32;&lt;&lt;&#32;x_visit&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x_visit;
<anchor xml:id="_daoptimizer_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00308"/>00308 
<anchor xml:id="_daoptimizer_8cpp_source_1l00309"/><link linkend="_classdual__annealing_1_1_visiting_distribution_1a5fb765282e4ad1fcfd42481e20ad7a09">00309</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a5fb765282e4ad1fcfd42481e20ad7a09">visit_fn</link>(<emphasis role="keywordtype">double</emphasis>&#32;temperature,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00310"/>00310 
<anchor xml:id="_daoptimizer_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Formula&#32;Visita&#32;from&#32;p.&#32;405&#32;of&#32;reference&#32;[2]</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;<link linkend="_namespacedual__annealing_1a3688f9a35c8af0e21f7670473fdfc196">normalVec</link>(dim,&#32;*<link linkend="_classdual__annealing_1_1_visiting_distribution_1a62b306315afc2b8802fed40375a38b69">rs</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;y&#32;=&#32;<link linkend="_namespacedual__annealing_1a3688f9a35c8af0e21f7670473fdfc196">normalVec</link>(dim,&#32;*<link linkend="_classdual__annealing_1_1_visiting_distribution_1a62b306315afc2b8802fed40375a38b69">rs</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;;
<anchor xml:id="_daoptimizer_8cpp_source_1l00315"/>00315 
<anchor xml:id="_daoptimizer_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;factor1&#32;=&#32;exp(log(temperature)&#32;/&#32;(<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>&#32;-&#32;1.0));
<anchor xml:id="_daoptimizer_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;factor4&#32;=&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a3801b308cec6da63fa5678cdcf9bdf1b">_factor4_p</link>&#32;*&#32;factor1;
<anchor xml:id="_daoptimizer_8cpp_source_1l00318"/>00318 
<anchor xml:id="_daoptimizer_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sigmax</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;x
<anchor xml:id="_daoptimizer_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;exp(
<anchor xml:id="_daoptimizer_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-(<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>&#32;-&#32;1.0)&#32;*&#32;log(<link linkend="_classdual__annealing_1_1_visiting_distribution_1a299fb41ee5ae47e41dad13b99ed701cb">_factor6</link>&#32;/&#32;factor4)
<anchor xml:id="_daoptimizer_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;(3.0&#32;-&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>));
<anchor xml:id="_daoptimizer_8cpp_source_1l00324"/>00324 
<anchor xml:id="_daoptimizer_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;den&#32;=&#32;<link linkend="_namespacedual__annealing_1a151b32ba2575f7a0632b5c55162fb4bd">expv</link>(
<anchor xml:id="_daoptimizer_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacedual__annealing_1aa453b3bdb1c9bcf34d298af39b661639">logv</link>(y.cwiseAbs()&#32;*&#32;(<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>&#32;-&#32;1.0))
<anchor xml:id="_daoptimizer_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;(3.0&#32;-&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>));
<anchor xml:id="_daoptimizer_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x.cwiseQuotient(den);
<anchor xml:id="_daoptimizer_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00330"/>00330 
<anchor xml:id="_daoptimizer_8cpp_source_1l00331"/>00331 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00332"/>00332 
<anchor xml:id="_daoptimizer_8cpp_source_1l00333"/><link linkend="_classdual__annealing_1_1_visiting_distribution_1a62b306315afc2b8802fed40375a38b69">00333</link> &#32;&#32;&#32;&#32;pcg64&#32;*<link linkend="_classdual__annealing_1_1_visiting_distribution_1a62b306315afc2b8802fed40375a38b69">rs</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00334"/><link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">00334</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aa37781842ca3526be32001b2ace3168b">_visiting_param</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00335"/><link linkend="_classdual__annealing_1_1_visiting_distribution_1a3801b308cec6da63fa5678cdcf9bdf1b">00335</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a3801b308cec6da63fa5678cdcf9bdf1b">_factor4_p</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00336"/><link linkend="_classdual__annealing_1_1_visiting_distribution_1a299fb41ee5ae47e41dad13b99ed701cb">00336</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a299fb41ee5ae47e41dad13b99ed701cb">_factor6</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00337"/>00337 
<anchor xml:id="_daoptimizer_8cpp_source_1l00338"/><link linkend="_classdual__annealing_1_1_visiting_distribution_1a015af994a7461bd70cd69bb11d578376">00338</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1a015af994a7461bd70cd69bb11d578376">TAIL_LIMIT</link>&#32;=&#32;1.e8;
<anchor xml:id="_daoptimizer_8cpp_source_1l00339"/><link linkend="_classdual__annealing_1_1_visiting_distribution_1aacb719f5fb17e1ee8c03be5686192950">00339</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution_1aacb719f5fb17e1ee8c03be5686192950">MIN_VISIT_BOUND</link>&#32;=&#32;1.e-10;
<anchor xml:id="_daoptimizer_8cpp_source_1l00340"/>00340 };
<anchor xml:id="_daoptimizer_8cpp_source_1l00341"/>00341 
<anchor xml:id="_daoptimizer_8cpp_source_1l00342"/><link linkend="_classdual__annealing_1_1nanexception">00342</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdual__annealing_1_1nanexception">nanexception</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;exception&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00343"/><link linkend="_classdual__annealing_1_1nanexception_1a361bbd58684b727e57c9b1fb87eeae2e">00343</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classdual__annealing_1_1nanexception_1a361bbd58684b727e57c9b1fb87eeae2e">what</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;throw&#32;()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Objective&#32;function&#32;is&#32;returning&#32;nan&quot;</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00346"/><link linkend="_namespacedual__annealing_1ab078cd17a94ab74e2da2a4931983a391">00346</link> }&#32;<link linkend="_namespacedual__annealing_1ab078cd17a94ab74e2da2a4931983a391">naneexc</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00347"/>00347 
<anchor xml:id="_daoptimizer_8cpp_source_1l00348"/><link linkend="_namespacedual__annealing_1a614a5ed9ce767f856bcc9bc07bef6b2e">00348</link> <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_namespacedual__annealing_1a614a5ed9ce767f856bcc9bc07bef6b2e">BIG_VALUE</link>&#32;=&#32;1e16;
<anchor xml:id="_daoptimizer_8cpp_source_1l00349"/>00349 
<anchor xml:id="_daoptimizer_8cpp_source_1l00350"/><link linkend="_classdual__annealing_1_1_energy_state">00350</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdual__annealing_1_1_energy_state_1ab4019fca53c889b2713ca921edcb4d76">EnergyState</link>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00351"/>00351 
<anchor xml:id="_daoptimizer_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;<emphasis role="comment">//Class&#32;used&#32;to&#32;record&#32;the&#32;energy&#32;state-&gt;&#32;At&#32;any&#32;time,&#32;it&#32;knows&#32;what&#32;is&#32;the</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;<emphasis role="comment">//currently&#32;used&#32;coordinates&#32;and&#32;the&#32;most&#32;recent&#32;best&#32;location</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00354"/>00354 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00355"/>00355 
<anchor xml:id="_daoptimizer_8cpp_source_1l00356"/><link linkend="_classdual__annealing_1_1_energy_state_1a871b427d2f509df0fdc61057c2fafdbe">00356</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a871b427d2f509df0fdc61057c2fafdbe">ebest</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00357"/><link linkend="_classdual__annealing_1_1_energy_state_1a971f125dc3aac8af4095c28d888304e3">00357</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a971f125dc3aac8af4095c28d888304e3">xbest</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00358"/><link linkend="_classdual__annealing_1_1_energy_state_1aa4e93d97d69bc0e3f47cfb39751165ce">00358</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_energy_state_1aa4e93d97d69bc0e3f47cfb39751165ce">current_energy</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00359"/><link linkend="_classdual__annealing_1_1_energy_state_1ac2a7ba4addc25eb70635db3e95012659">00359</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_energy_state_1ac2a7ba4addc25eb70635db3e95012659">current_location</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00360"/>00360 
<anchor xml:id="_daoptimizer_8cpp_source_1l00361"/><link linkend="_classdual__annealing_1_1_energy_state_1ab4019fca53c889b2713ca921edcb4d76">00361</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1ab4019fca53c889b2713ca921edcb4d76">EnergyState</link>(<emphasis role="keywordtype">int</emphasis>&#32;dim_)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1aee07e95de848191c2d47f06bd820524a">dim</link>&#32;=&#32;dim_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a871b427d2f509df0fdc61057c2fafdbe">ebest</link>&#32;=&#32;DBL_MAX;
<anchor xml:id="_daoptimizer_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a971f125dc3aac8af4095c28d888304e3">xbest</link>&#32;=&#32;{&#32;};
<anchor xml:id="_daoptimizer_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1aa4e93d97d69bc0e3f47cfb39751165ce">current_energy</link>&#32;=&#32;DBL_MAX;
<anchor xml:id="_daoptimizer_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1ac2a7ba4addc25eb70635db3e95012659">current_location</link>&#32;=&#32;{&#32;};
<anchor xml:id="_daoptimizer_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00368"/>00368 
<anchor xml:id="_daoptimizer_8cpp_source_1l00369"/><link linkend="_classdual__annealing_1_1_energy_state_1a44539c22d2beaefdaf44bad69a84a570">00369</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a44539c22d2beaefdaf44bad69a84a570">reset</link>(<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;*owf,&#32;pcg64&#32;*rs,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x0)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0.size()&#32;==&#32;0)
<anchor xml:id="_daoptimizer_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1ac2a7ba4addc25eb70635db3e95012659">current_location</link>&#32;=&#32;<link linkend="_namespacedual__annealing_1a3688f9a35c8af0e21f7670473fdfc196">normalVec</link>(<link linkend="_classdual__annealing_1_1_energy_state_1aee07e95de848191c2d47f06bd820524a">dim</link>,&#32;*rs);
<anchor xml:id="_daoptimizer_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1ac2a7ba4addc25eb70635db3e95012659">current_location</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(x0);
<anchor xml:id="_daoptimizer_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;init_error&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;reinit_counter&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(init_error)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1aa4e93d97d69bc0e3f47cfb39751165ce">current_energy</link>&#32;=&#32;owf-&gt;<link linkend="_classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7">value</link>(<link linkend="_classdual__annealing_1_1_energy_state_1ac2a7ba4addc25eb70635db3e95012659">current_location</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_energy_state_1aa4e93d97d69bc0e3f47cfb39751165ce">current_energy</link>&#32;&gt;=&#32;<link linkend="_namespacedual__annealing_1a614a5ed9ce767f856bcc9bc07bef6b2e">BIG_VALUE</link>&#32;||&#32;isnan(<link linkend="_classdual__annealing_1_1_energy_state_1aa4e93d97d69bc0e3f47cfb39751165ce">current_energy</link>))&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(reinit_counter&#32;&gt;=&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a3cea69fd776444a0e672c9582ec15b03">MAX_REINIT_COUNT</link>)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;init_error&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<link linkend="_namespacedual__annealing_1ab078cd17a94ab74e2da2a4931983a391">naneexc</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1ac2a7ba4addc25eb70635db3e95012659">current_location</link>&#32;=&#32;<link linkend="_namespacedual__annealing_1ab0a43c3dcc31de6ab3f4b6feb070a4df">uniformVec</link>(<link linkend="_classdual__annealing_1_1_energy_state_1aee07e95de848191c2d47f06bd820524a">dim</link>,&#32;*rs);
<anchor xml:id="_daoptimizer_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reinit_counter++;
<anchor xml:id="_daoptimizer_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;init_error&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;first&#32;time&#32;reset,&#32;initialize&#32;ebest&#32;and&#32;xbest</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_energy_state_1a871b427d2f509df0fdc61057c2fafdbe">ebest</link>&#32;==&#32;DBL_MAX&#32;&amp;&amp;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a971f125dc3aac8af4095c28d888304e3">xbest</link>.size()&#32;==&#32;0)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a871b427d2f509df0fdc61057c2fafdbe">ebest</link>&#32;=&#32;<link linkend="_classdual__annealing_1_1_energy_state_1aa4e93d97d69bc0e3f47cfb39751165ce">current_energy</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a971f125dc3aac8af4095c28d888304e3">xbest</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(<link linkend="_classdual__annealing_1_1_energy_state_1ac2a7ba4addc25eb70635db3e95012659">current_location</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Otherwise,&#32;keep&#32;them&#32;in&#32;case&#32;of&#32;reannealing&#32;reset</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00395"/>00395 
<anchor xml:id="_daoptimizer_8cpp_source_1l00396"/><link linkend="_classdual__annealing_1_1_energy_state_1a253f480c318533c39555a064fa589711">00396</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a253f480c318533c39555a064fa589711">update_best</link>(<emphasis role="keywordtype">double</emphasis>&#32;e,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a871b427d2f509df0fdc61057c2fafdbe">ebest</link>&#32;=&#32;e;
<anchor xml:id="_daoptimizer_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a971f125dc3aac8af4095c28d888304e3">xbest</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00400"/>00400 
<anchor xml:id="_daoptimizer_8cpp_source_1l00401"/><link linkend="_classdual__annealing_1_1_energy_state_1a02f06aa547755c62064fcfc3dac274d5">00401</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a02f06aa547755c62064fcfc3dac274d5">update_current</link>(<emphasis role="keywordtype">double</emphasis>&#32;e,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1aa4e93d97d69bc0e3f47cfb39751165ce">current_energy</link>&#32;=&#32;e;
<anchor xml:id="_daoptimizer_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state_1ac2a7ba4addc25eb70635db3e95012659">current_location</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00405"/>00405 
<anchor xml:id="_daoptimizer_8cpp_source_1l00406"/>00406 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Maximimum&#32;number&#32;of&#32;trials&#32;for&#32;generating&#32;a&#32;valid&#32;starting&#32;point</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00408"/><link linkend="_classdual__annealing_1_1_energy_state_1a3cea69fd776444a0e672c9582ec15b03">00408</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classdual__annealing_1_1_energy_state_1a3cea69fd776444a0e672c9582ec15b03">MAX_REINIT_COUNT</link>&#32;=&#32;1000;
<anchor xml:id="_daoptimizer_8cpp_source_1l00409"/><link linkend="_classdual__annealing_1_1_energy_state_1aee07e95de848191c2d47f06bd820524a">00409</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classdual__annealing_1_1_energy_state_1aee07e95de848191c2d47f06bd820524a">dim</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00410"/>00410 };
<anchor xml:id="_daoptimizer_8cpp_source_1l00411"/>00411 
<anchor xml:id="_daoptimizer_8cpp_source_1l00412"/><link linkend="_classdual__annealing_1_1_strategy_chain">00412</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdual__annealing_1_1_strategy_chain_1a4ce4d3da5f8d7cd3551283663df76a83">StrategyChain</link>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Class&#32;used&#32;for&#32;the&#32;Markov&#32;chain&#32;and&#32;related&#32;strategy&#32;for&#32;local&#32;search</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;decision</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00415"/>00415 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00416"/>00416 
<anchor xml:id="_daoptimizer_8cpp_source_1l00417"/><link linkend="_classdual__annealing_1_1_strategy_chain_1a4ce4d3da5f8d7cd3551283663df76a83">00417</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a4ce4d3da5f8d7cd3551283663df76a83">StrategyChain</link>(<emphasis role="keywordtype">double</emphasis>&#32;acceptance_param_,&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution">VisitingDistribution</link>&#32;*vd_,
<anchor xml:id="_daoptimizer_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;*ofw_,&#32;pcg64&#32;*rs_,&#32;<link linkend="_classdual__annealing_1_1_energy_state">EnergyState</link>&#32;*state_)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Global&#32;optimizer&#32;state</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>&#32;=&#32;state_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Local&#32;markov&#32;chain&#32;minimum&#32;energy&#32;and&#32;location</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ac126ef9be8f8b7f4209130a3a137e7ba">emin</link>&#32;=&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_energy;
<anchor xml:id="_daoptimizer_8cpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a3a0358910020f79c26f94b38fd755f34">xmin</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_location);
<anchor xml:id="_daoptimizer_8cpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Acceptance&#32;parameter</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a4bd45a76ca10e2da7c55bb2443b7fb0b">acceptance_param</link>&#32;=&#32;acceptance_param_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Visiting&#32;distribution&#32;instance</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a11ec7898905e7efe0052469ca2d4bb4d">vd</link>&#32;=&#32;vd_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Wrapper&#32;to&#32;objective&#32;function&#32;and&#32;related&#32;local&#32;minimizer</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ace3a1711d168fb56e10b18f2f0909612">ofw</link>&#32;=&#32;ofw_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ab140b4425c3ab6ebe9ceffd5a433d8b4">not_improved_idx</link>&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ad49c7b2e8ffbc90f236cb6c442386947">not_improved_max_idx</link>&#32;=&#32;1000;
<anchor xml:id="_daoptimizer_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a1314379d4cb36007526aa01765e2959b">rs</link>&#32;=&#32;rs_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a1426934ad1afd5b8709841244d2baec0">temperature_step</link>&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a41a2102a33462fda04c034561ccd0bd8">K</link>&#32;=&#32;100&#32;*&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_location).size();
<anchor xml:id="_daoptimizer_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00436"/>00436 
<anchor xml:id="_daoptimizer_8cpp_source_1l00437"/><link linkend="_classdual__annealing_1_1_strategy_chain_1ab2c87c327d546df01f2535d8d3d86418">00437</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ab2c87c327d546df01f2535d8d3d86418">accept_reject</link>(<emphasis role="keywordtype">int</emphasis>&#32;j,&#32;<emphasis role="keywordtype">double</emphasis>&#32;e,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x_visit)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;r&#32;=&#32;<link linkend="_namespacedual__annealing_1aa2dc69b8049771ea50c1c75e24ba4f61">distr_01</link>(*<link linkend="_classdual__annealing_1_1_strategy_chain_1a1314379d4cb36007526aa01765e2959b">rs</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;pqv_temp&#32;=&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1a4bd45a76ca10e2da7c55bb2443b7fb0b">acceptance_param</link>&#32;-&#32;1.0)&#32;*&#32;(e&#32;-&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_energy)
<anchor xml:id="_daoptimizer_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1a1426934ad1afd5b8709841244d2baec0">temperature_step</link>&#32;+&#32;1.);
<anchor xml:id="_daoptimizer_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;pqv&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pqv_temp&#32;&lt;&#32;0.)
<anchor xml:id="_daoptimizer_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pqv&#32;=&#32;0.;
<anchor xml:id="_daoptimizer_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pqv&#32;=&#32;exp(log(pqv_temp)&#32;/&#32;(1.&#32;-&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a4bd45a76ca10e2da7c55bb2443b7fb0b">acceptance_param</link>));
<anchor xml:id="_daoptimizer_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r&#32;&lt;=&#32;pqv)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;accept&#32;the&#32;new&#32;location&#32;and&#32;update&#32;state</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;update_current(e,&#32;x_visit);
<anchor xml:id="_daoptimizer_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a3a0358910020f79c26f94b38fd755f34">xmin</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_location);
<anchor xml:id="_daoptimizer_8cpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;improvement&#32;since&#32;long&#32;time</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1ab140b4425c3ab6ebe9ceffd5a433d8b4">not_improved_idx</link>&#32;&gt;=&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ad49c7b2e8ffbc90f236cb6c442386947">not_improved_max_idx</link>)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;==&#32;0&#32;||&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_energy&#32;&lt;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ac126ef9be8f8b7f4209130a3a137e7ba">emin</link>)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ac126ef9be8f8b7f4209130a3a137e7ba">emin</link>&#32;=&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_energy;
<anchor xml:id="_daoptimizer_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a3a0358910020f79c26f94b38fd755f34">xmin</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_location);
<anchor xml:id="_daoptimizer_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00459"/>00459 
<anchor xml:id="_daoptimizer_8cpp_source_1l00460"/><link linkend="_classdual__annealing_1_1_strategy_chain_1a668e78f845ae5a2f3955fc8cb6d20461">00460</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a668e78f845ae5a2f3955fc8cb6d20461">run</link>(<emphasis role="keywordtype">int</emphasis>&#32;step,&#32;<emphasis role="keywordtype">double</emphasis>&#32;temperature)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a1426934ad1afd5b8709841244d2baec0">temperature_step</link>&#32;=&#32;temperature&#32;/&#32;(double)&#32;(step&#32;+&#32;1);
<anchor xml:id="_daoptimizer_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ab140b4425c3ab6ebe9ceffd5a433d8b4">not_improved_idx</link>&#32;+=&#32;1;
<anchor xml:id="_daoptimizer_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_location).size()&#32;*&#32;2;
<anchor xml:id="_daoptimizer_8cpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j++)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;==&#32;0)
<anchor xml:id="_daoptimizer_8cpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a6099c7e70349b2e72b4aa7de902eb0c2">state_improved</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(step&#32;==&#32;0&#32;&amp;&amp;&#32;j&#32;==&#32;0)
<anchor xml:id="_daoptimizer_8cpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a6099c7e70349b2e72b4aa7de902eb0c2">state_improved</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x_visit&#32;=&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a11ec7898905e7efe0052469ca2d4bb4d">vd</link>-&gt;visiting(<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_location,&#32;j,&#32;temperature);
<anchor xml:id="_daoptimizer_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calling&#32;the&#32;objective&#32;function</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;e&#32;=&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ace3a1711d168fb56e10b18f2f0909612">ofw</link>-&gt;value(x_visit);
<anchor xml:id="_daoptimizer_8cpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e&#32;&lt;&#32;state-&gt;current_energy)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;have&#32;got&#32;a&#32;better&#32;energy&#32;value</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;update_current(e,&#32;x_visit);
<anchor xml:id="_daoptimizer_8cpp_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e&#32;&lt;&#32;state-&gt;ebest)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;update_best(e,&#32;x_visit);
<anchor xml:id="_daoptimizer_8cpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a6099c7e70349b2e72b4aa7de902eb0c2">state_improved</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ab140b4425c3ab6ebe9ceffd5a433d8b4">not_improved_idx</link>&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;have&#32;not&#32;improved&#32;but&#32;do&#32;we&#32;accept&#32;the&#32;new&#32;location?</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ab2c87c327d546df01f2535d8d3d86418">accept_reject</link>(j,&#32;e,&#32;x_visit);
<anchor xml:id="_daoptimizer_8cpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1ace3a1711d168fb56e10b18f2f0909612">ofw</link>-&gt;maxEvalReached())
<anchor xml:id="_daoptimizer_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;<emphasis role="comment">//&#32;End&#32;of&#32;StrategyChain&#32;loop</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00488"/>00488 
<anchor xml:id="_daoptimizer_8cpp_source_1l00489"/><link linkend="_classdual__annealing_1_1_strategy_chain_1a28557c3e98c19aeb5bde009fb8be3601">00489</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a28557c3e98c19aeb5bde009fb8be3601">local_search</link>()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Decision&#32;making&#32;for&#32;performing&#32;a&#32;local&#32;search</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;based&#32;on&#32;Markov&#32;chain&#32;results</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;energy&#32;has&#32;been&#32;improved&#32;or&#32;no&#32;improvement&#32;since&#32;too&#32;long,</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;performing&#32;a&#32;local&#32;search&#32;with&#32;the&#32;best&#32;Markov&#32;chain&#32;location</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim&#32;=&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;xbest.size();
<anchor xml:id="_daoptimizer_8cpp_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1a6099c7e70349b2e72b4aa7de902eb0c2">state_improved</link>)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Global&#32;energy&#32;has&#32;improved,&#32;let&apos;s&#32;see&#32;if&#32;LS&#32;improved&#32;further</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(dim);
<anchor xml:id="_daoptimizer_8cpp_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;e&#32;=&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ace3a1711d168fb56e10b18f2f0909612">ofw</link>-&gt;local_search(<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;xbest,&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;ebest,&#32;x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e&#32;&lt;&#32;state-&gt;ebest)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ab140b4425c3ab6ebe9ceffd5a433d8b4">not_improved_idx</link>&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;update_best(e,&#32;x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;update_current(e,&#32;x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1ace3a1711d168fb56e10b18f2f0909612">ofw</link>-&gt;maxEvalReached())
<anchor xml:id="_daoptimizer_8cpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;probability&#32;of&#32;a&#32;need&#32;to&#32;perform&#32;a&#32;LS&#32;even&#32;if&#32;no&#32;improvment</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;do_ls&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1a41a2102a33462fda04c034561ccd0bd8">K &lt; 90 * state-&gt;</link>current_location.size())&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;pls&#32;=&#32;exp(
<anchor xml:id="_daoptimizer_8cpp_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a41a2102a33462fda04c034561ccd0bd8">K</link>&#32;*&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;ebest&#32;-&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_energy)
<anchor xml:id="_daoptimizer_8cpp_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a1426934ad1afd5b8709841244d2baec0">temperature_step</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pls&#32;&gt;=&#32;<link linkend="_namespacedual__annealing_1aa2dc69b8049771ea50c1c75e24ba4f61">distr_01</link>(*<link linkend="_classdual__annealing_1_1_strategy_chain_1a1314379d4cb36007526aa01765e2959b">rs</link>))
<anchor xml:id="_daoptimizer_8cpp_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;do_ls&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Global&#32;energy&#32;not&#32;improved,&#32;let&apos;s&#32;see&#32;what&#32;LS&#32;gives</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;the&#32;best&#32;strategy&#32;chain&#32;location</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_strategy_chain_1ab140b4425c3ab6ebe9ceffd5a433d8b4">not_improved_idx</link>&#32;&gt;=&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ad49c7b2e8ffbc90f236cb6c442386947">not_improved_max_idx</link>)
<anchor xml:id="_daoptimizer_8cpp_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;do_ls&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(do_ls)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(dim);
<anchor xml:id="_daoptimizer_8cpp_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;e&#32;=&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ace3a1711d168fb56e10b18f2f0909612">ofw</link>-&gt;local_search(<link linkend="_classdual__annealing_1_1_strategy_chain_1a3a0358910020f79c26f94b38fd755f34">xmin</link>,&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;ebest,&#32;x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a3a0358910020f79c26f94b38fd755f34">xmin</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>(x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ac126ef9be8f8b7f4209130a3a137e7ba">emin</link>&#32;=&#32;e;
<anchor xml:id="_daoptimizer_8cpp_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ab140b4425c3ab6ebe9ceffd5a433d8b4">not_improved_idx</link>&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ad49c7b2e8ffbc90f236cb6c442386947">not_improved_max_idx</link>&#32;=&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;current_location.size();
<anchor xml:id="_daoptimizer_8cpp_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e&#32;&lt;&#32;state-&gt;ebest)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;update_best(<link linkend="_classdual__annealing_1_1_strategy_chain_1ac126ef9be8f8b7f4209130a3a137e7ba">emin</link>,&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a3a0358910020f79c26f94b38fd755f34">xmin</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>-&gt;update_current(e,&#32;x);
<anchor xml:id="_daoptimizer_8cpp_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00532"/>00532 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00533"/>00533 
<anchor xml:id="_daoptimizer_8cpp_source_1l00534"/>00534 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00535"/>00535 
<anchor xml:id="_daoptimizer_8cpp_source_1l00536"/><link linkend="_classdual__annealing_1_1_strategy_chain_1ac126ef9be8f8b7f4209130a3a137e7ba">00536</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ac126ef9be8f8b7f4209130a3a137e7ba">emin</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00537"/><link linkend="_classdual__annealing_1_1_strategy_chain_1a3a0358910020f79c26f94b38fd755f34">00537</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a3a0358910020f79c26f94b38fd755f34">xmin</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00538"/><link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">00538</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state">EnergyState</link>&#32;*<link linkend="_classdual__annealing_1_1_strategy_chain_1abc2cfd8cfafd95685d430fa4b60bbccf">state</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00539"/><link linkend="_classdual__annealing_1_1_strategy_chain_1a4bd45a76ca10e2da7c55bb2443b7fb0b">00539</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a4bd45a76ca10e2da7c55bb2443b7fb0b">acceptance_param</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00540"/><link linkend="_classdual__annealing_1_1_strategy_chain_1a11ec7898905e7efe0052469ca2d4bb4d">00540</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution">VisitingDistribution</link>&#32;*<link linkend="_classdual__annealing_1_1_strategy_chain_1a11ec7898905e7efe0052469ca2d4bb4d">vd</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00541"/><link linkend="_classdual__annealing_1_1_strategy_chain_1ab140b4425c3ab6ebe9ceffd5a433d8b4">00541</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ab140b4425c3ab6ebe9ceffd5a433d8b4">not_improved_idx</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00542"/><link linkend="_classdual__annealing_1_1_strategy_chain_1ad49c7b2e8ffbc90f236cb6c442386947">00542</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1ad49c7b2e8ffbc90f236cb6c442386947">not_improved_max_idx</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00543"/><link linkend="_classdual__annealing_1_1_strategy_chain_1a1314379d4cb36007526aa01765e2959b">00543</link> &#32;&#32;&#32;&#32;pcg64&#32;*<link linkend="_classdual__annealing_1_1_strategy_chain_1a1314379d4cb36007526aa01765e2959b">rs</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00544"/><link linkend="_classdual__annealing_1_1_strategy_chain_1ace3a1711d168fb56e10b18f2f0909612">00544</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;*<link linkend="_classdual__annealing_1_1_strategy_chain_1ace3a1711d168fb56e10b18f2f0909612">ofw</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00545"/><link linkend="_classdual__annealing_1_1_strategy_chain_1a1426934ad1afd5b8709841244d2baec0">00545</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a1426934ad1afd5b8709841244d2baec0">temperature_step</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00546"/><link linkend="_classdual__annealing_1_1_strategy_chain_1a41a2102a33462fda04c034561ccd0bd8">00546</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a41a2102a33462fda04c034561ccd0bd8">K</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00547"/><link linkend="_classdual__annealing_1_1_strategy_chain_1a6099c7e70349b2e72b4aa7de902eb0c2">00547</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain_1a6099c7e70349b2e72b4aa7de902eb0c2">state_improved</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00548"/>00548 };
<anchor xml:id="_daoptimizer_8cpp_source_1l00549"/>00549 
<anchor xml:id="_daoptimizer_8cpp_source_1l00550"/><link linkend="_classdual__annealing_1_1sizeexception">00550</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdual__annealing_1_1sizeexception">sizeexception</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;exception&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00551"/><link linkend="_classdual__annealing_1_1sizeexception_1accb76493c20396c212123667e1e3c27b">00551</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_classdual__annealing_1_1sizeexception_1accb76493c20396c212123667e1e3c27b">what</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;throw&#32;()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Bounds&#32;size&#32;does&#32;not&#32;match&#32;x0&quot;</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00553"/>00553 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00554"/><link linkend="_namespacedual__annealing_1a40c22fe5772392ba4c147232af1cd4d3">00554</link> }&#32;<link linkend="_namespacedual__annealing_1a40c22fe5772392ba4c147232af1cd4d3">sizeeexc</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00555"/>00555 
<anchor xml:id="_daoptimizer_8cpp_source_1l00556"/><link linkend="_classdual__annealing_1_1_d_a_runner">00556</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdual__annealing_1_1_d_a_runner_1ab74bf44c93edc55f999fb2605f5ff8fa">DARunner</link>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00557"/>00557 
<anchor xml:id="_daoptimizer_8cpp_source_1l00558"/>00558 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00559"/>00559 
<anchor xml:id="_daoptimizer_8cpp_source_1l00560"/><link linkend="_classdual__annealing_1_1_d_a_runner_1ab74bf44c93edc55f999fb2605f5ff8fa">00560</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ab74bf44c93edc55f999fb2605f5ff8fa">DARunner</link>(<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;*fun_,&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x0_,&#32;<emphasis role="keywordtype">long</emphasis>&#32;seed_,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use_local_search_)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">owf</link>&#32;=&#32;fun_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x0_.size()&#32;&gt;&#32;0&#32;&amp;&amp;&#32;x0_.size()&#32;!=&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">owf</link>-&gt;lower.size())
<anchor xml:id="_daoptimizer_8cpp_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<link linkend="_namespacedual__annealing_1a40c22fe5772392ba4c147232af1cd4d3">sizeeexc</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Initialization&#32;of&#32;RandomState&#32;for&#32;reproducible&#32;runs&#32;if&#32;seed&#32;provided</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ae1c19d12feed61dc3f5933b7b426ad73">rs</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;pcg64(seed_);
<anchor xml:id="_daoptimizer_8cpp_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a78921fe0a6d5da888ecfea3c94032d9a">use_local_search</link>&#32;=&#32;use_local_search_;
<anchor xml:id="_daoptimizer_8cpp_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialization&#32;of&#32;the&#32;energy&#32;state</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1af151a579442ae1acac266642e5aaf639">es</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classdual__annealing_1_1_energy_state">EnergyState</link>(<link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">owf</link>-&gt;lower.size());
<anchor xml:id="_daoptimizer_8cpp_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1af151a579442ae1acac266642e5aaf639">es</link>-&gt;reset(<link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">owf</link>,&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ae1c19d12feed61dc3f5933b7b426ad73">rs</link>,&#32;x0_);
<anchor xml:id="_daoptimizer_8cpp_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;VisitingDistribution&#32;instance</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a9151deb647c2beb8201767b00a79785b">vd</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution">VisitingDistribution</link>(<link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">owf</link>-&gt;lower.size(),&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ac82ca2d8cb2aa15d9b258acd72457a54">qv</link>,&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ae1c19d12feed61dc3f5933b7b426ad73">rs</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Markov&#32;chain&#32;instance</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ac65e14436ec2b8978a0314de5cf44fec">sc</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classdual__annealing_1_1_strategy_chain">StrategyChain</link>(<link linkend="_classdual__annealing_1_1_d_a_runner_1af08f83bd6889eab07940f8449e82ac28">qa</link>,&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a9151deb647c2beb8201767b00a79785b">vd</link>,&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">owf</link>,&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ae1c19d12feed61dc3f5933b7b426ad73">rs</link>,&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1af151a579442ae1acac266642e5aaf639">es</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00574"/>00574 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00575"/>00575 
<anchor xml:id="_daoptimizer_8cpp_source_1l00576"/><link linkend="_classdual__annealing_1_1_d_a_runner_1a76caa1fe49af670bbdedc500bffe8549">00576</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a76caa1fe49af670bbdedc500bffe8549">~DARunner</link>()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ae1c19d12feed61dc3f5933b7b426ad73">rs</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a9151deb647c2beb8201767b00a79785b">vd</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ac65e14436ec2b8978a0314de5cf44fec">sc</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1af151a579442ae1acac266642e5aaf639">es</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00581"/>00581 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00582"/>00582 
<anchor xml:id="_daoptimizer_8cpp_source_1l00583"/><link linkend="_classdual__annealing_1_1_d_a_runner_1ae439a61ba872582e64f2fc32568cd669">00583</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ae439a61ba872582e64f2fc32568cd669">search</link>()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a0a4a5f10e88460ae6bd092917af3e5e9">iter</link>&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;t1&#32;=&#32;exp((<link linkend="_classdual__annealing_1_1_d_a_runner_1ac82ca2d8cb2aa15d9b258acd72457a54">qv</link>&#32;-&#32;1)&#32;*&#32;log(2.0))&#32;-&#32;1.0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a7040dfd6a925a6eb8f88bc0b541d5ff8">maxsteps</link>;&#32;i++)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;temperature&#32;for&#32;this&#32;step</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;s&#32;=&#32;i&#32;+&#32;2.0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;t2&#32;=&#32;exp((<link linkend="_classdual__annealing_1_1_d_a_runner_1ac82ca2d8cb2aa15d9b258acd72457a54">qv</link>&#32;-&#32;1)&#32;*&#32;log(s))&#32;-&#32;1.0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;temperature&#32;=&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1aa8381759804d5cc3b4292b52fac60839">temperature_start</link>&#32;*&#32;t1&#32;/&#32;t2;
<anchor xml:id="_daoptimizer_8cpp_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_d_a_runner_1a0a4a5f10e88460ae6bd092917af3e5e9">iter</link>++&#32;&gt;=&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a7040dfd6a925a6eb8f88bc0b541d5ff8">maxsteps</link>)
<anchor xml:id="_daoptimizer_8cpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Need&#32;a&#32;re-annealing&#32;process?</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(temperature&#32;&lt;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a0ef3f5607f26f6f636f7232fb89d068f">temperature_restart</link>)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1af151a579442ae1acac266642e5aaf639">es</link>-&gt;reset(<link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">owf</link>,&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ae1c19d12feed61dc3f5933b7b426ad73">rs</link>,&#32;<link linkend="_namespacedual__annealing_1ad43d310b3d2ac1ef9ad7cf7af4edb59f">emptyVec</link>);
<anchor xml:id="_daoptimizer_8cpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;starting&#32;strategy&#32;chain</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ac65e14436ec2b8978a0314de5cf44fec">sc</link>-&gt;run(i,&#32;temperature);
<anchor xml:id="_daoptimizer_8cpp_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">owf</link>-&gt;maxEvalReached())
<anchor xml:id="_daoptimizer_8cpp_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_d_a_runner_1a78921fe0a6d5da888ecfea3c94032d9a">use_local_search</link>)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ac65e14436ec2b8978a0314de5cf44fec">sc</link>-&gt;local_search();
<anchor xml:id="_daoptimizer_8cpp_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">owf</link>-&gt;maxEvalReached())
<anchor xml:id="_daoptimizer_8cpp_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00611"/>00611 
<anchor xml:id="_daoptimizer_8cpp_source_1l00612"/><link linkend="_classdual__annealing_1_1_d_a_runner_1ac923ec281c800062d6b3e1e4e778183f">00612</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ac923ec281c800062d6b3e1e4e778183f">bestX</link>()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1af151a579442ae1acac266642e5aaf639">es</link>-&gt;xbest;
<anchor xml:id="_daoptimizer_8cpp_source_1l00614"/>00614 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00615"/>00615 
<anchor xml:id="_daoptimizer_8cpp_source_1l00616"/><link linkend="_classdual__annealing_1_1_d_a_runner_1a4b0f48a1d4ae3a336fa8fd7ac5412274">00616</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a4b0f48a1d4ae3a336fa8fd7ac5412274">bestY</link>()&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1af151a579442ae1acac266642e5aaf639">es</link>-&gt;ebest;
<anchor xml:id="_daoptimizer_8cpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00619"/>00619 
<anchor xml:id="_daoptimizer_8cpp_source_1l00620"/>00620 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_daoptimizer_8cpp_source_1l00621"/>00621 
<anchor xml:id="_daoptimizer_8cpp_source_1l00622"/><link linkend="_classdual__annealing_1_1_d_a_runner_1af8ca542fabea4845d0f5328e5352a35e">00622</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1af8ca542fabea4845d0f5328e5352a35e">MAX_REINIT_COUNT</link>&#32;=&#32;1000;
<anchor xml:id="_daoptimizer_8cpp_source_1l00623"/><link linkend="_classdual__annealing_1_1_d_a_runner_1aa8381759804d5cc3b4292b52fac60839">00623</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1aa8381759804d5cc3b4292b52fac60839">temperature_start</link>&#32;=&#32;5230;
<anchor xml:id="_daoptimizer_8cpp_source_1l00624"/><link linkend="_classdual__annealing_1_1_d_a_runner_1ac82ca2d8cb2aa15d9b258acd72457a54">00624</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1ac82ca2d8cb2aa15d9b258acd72457a54">qv</link>&#32;=&#32;2.62;
<anchor xml:id="_daoptimizer_8cpp_source_1l00625"/><link linkend="_classdual__annealing_1_1_d_a_runner_1af08f83bd6889eab07940f8449e82ac28">00625</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1af08f83bd6889eab07940f8449e82ac28">qa</link>&#32;=&#32;-5.0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00626"/><link linkend="_classdual__annealing_1_1_d_a_runner_1a78921fe0a6d5da888ecfea3c94032d9a">00626</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a78921fe0a6d5da888ecfea3c94032d9a">use_local_search</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;maximum&#32;number&#32;of&#32;step&#32;(main&#32;iteration)</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00628"/><link linkend="_classdual__annealing_1_1_d_a_runner_1a7040dfd6a925a6eb8f88bc0b541d5ff8">00628</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a7040dfd6a925a6eb8f88bc0b541d5ff8">maxsteps</link>&#32;=&#32;1000;
<anchor xml:id="_daoptimizer_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;minimum&#32;value&#32;of&#32;annealing&#32;temperature&#32;reached&#32;to&#32;perform</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;re-annealing&#32;temperature_start</emphasis>
<anchor xml:id="_daoptimizer_8cpp_source_1l00631"/><link linkend="_classdual__annealing_1_1_d_a_runner_1a0ef3f5607f26f6f636f7232fb89d068f">00631</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a0ef3f5607f26f6f636f7232fb89d068f">temperature_restart</link>&#32;=&#32;0.1;
<anchor xml:id="_daoptimizer_8cpp_source_1l00632"/><link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">00632</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;*<link linkend="_classdual__annealing_1_1_d_a_runner_1a317b83fdc0799403979dd0b297adc415">owf</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00633"/><link linkend="_classdual__annealing_1_1_d_a_runner_1ae1c19d12feed61dc3f5933b7b426ad73">00633</link> &#32;&#32;&#32;&#32;pcg64&#32;*<link linkend="_classdual__annealing_1_1_d_a_runner_1ae1c19d12feed61dc3f5933b7b426ad73">rs</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00634"/><link linkend="_classdual__annealing_1_1_d_a_runner_1af151a579442ae1acac266642e5aaf639">00634</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_energy_state">EnergyState</link>&#32;*<link linkend="_classdual__annealing_1_1_d_a_runner_1af151a579442ae1acac266642e5aaf639">es</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00635"/><link linkend="_classdual__annealing_1_1_d_a_runner_1ac65e14436ec2b8978a0314de5cf44fec">00635</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_strategy_chain">StrategyChain</link>&#32;*<link linkend="_classdual__annealing_1_1_d_a_runner_1ac65e14436ec2b8978a0314de5cf44fec">sc</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00636"/><link linkend="_classdual__annealing_1_1_d_a_runner_1a9151deb647c2beb8201767b00a79785b">00636</link> &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_visiting_distribution">VisitingDistribution</link>&#32;*<link linkend="_classdual__annealing_1_1_d_a_runner_1a9151deb647c2beb8201767b00a79785b">vd</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00637"/><link linkend="_classdual__annealing_1_1_d_a_runner_1a0a4a5f10e88460ae6bd092917af3e5e9">00637</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classdual__annealing_1_1_d_a_runner_1a0a4a5f10e88460ae6bd092917af3e5e9">iter</link>&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00638"/>00638 };
<anchor xml:id="_daoptimizer_8cpp_source_1l00639"/>00639 
<anchor xml:id="_daoptimizer_8cpp_source_1l00640"/><link linkend="_namespacedual__annealing_1a9d98349bcdfafe6b4659304b33f53b88">00640</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_namespacedual__annealing_1a9d98349bcdfafe6b4659304b33f53b88">minimize</link>(<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;*fun,&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x0,&#32;<emphasis role="keywordtype">long</emphasis>&#32;seed,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use_local_search,
<anchor xml:id="_daoptimizer_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;X)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_d_a_runner">DARunner</link>&#32;gr&#32;=&#32;<link linkend="_classdual__annealing_1_1_d_a_runner">DARunner</link>(fun,&#32;x0,&#32;seed,&#32;use_local_search);
<anchor xml:id="_daoptimizer_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;gr.<link linkend="_classdual__annealing_1_1_d_a_runner_1ae439a61ba872582e64f2fc32568cd669">search</link>();
<anchor xml:id="_daoptimizer_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim&#32;=&#32;x0.size();
<anchor xml:id="_daoptimizer_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;bx&#32;=&#32;gr.<link linkend="_classdual__annealing_1_1_d_a_runner_1ac923ec281c800062d6b3e1e4e778183f">bestX</link>();
<anchor xml:id="_daoptimizer_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)
<anchor xml:id="_daoptimizer_8cpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X[i]&#32;=&#32;bx[i];
<anchor xml:id="_daoptimizer_8cpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;gr.<link linkend="_classdual__annealing_1_1_d_a_runner_1a4b0f48a1d4ae3a336fa8fd7ac5412274">bestY</link>();
<anchor xml:id="_daoptimizer_8cpp_source_1l00649"/>00649 }
<anchor xml:id="_daoptimizer_8cpp_source_1l00650"/>00650 }
<anchor xml:id="_daoptimizer_8cpp_source_1l00651"/>00651 
<anchor xml:id="_daoptimizer_8cpp_source_1l00652"/>00652 <emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespacedual__annealing">dual_annealing</link>;
<anchor xml:id="_daoptimizer_8cpp_source_1l00653"/>00653 
<anchor xml:id="_daoptimizer_8cpp_source_1l00654"/>00654 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00655"/><link linkend="_daoptimizer_8cpp_1aa097a54ac07d35740d86c465d2477195">00655</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aa097a54ac07d35740d86c465d2477195">optimizeDA_C</link>(<emphasis role="keywordtype">long</emphasis>&#32;runid,&#32;<link linkend="_namespacedual__annealing_1acc0e4feae757283b161380c003152d7c">callback_type</link>&#32;func,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim,&#32;<emphasis role="keywordtype">int</emphasis>&#32;seed,
<anchor xml:id="_daoptimizer_8cpp_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;*init,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*lower,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*upper,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxEvals,
<anchor xml:id="_daoptimizer_8cpp_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use_local_search,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;res)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;dim;
<anchor xml:id="_daoptimizer_8cpp_source_1l00659"/>00659 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;guess(n),&#32;lower_limit(n),&#32;upper_limit(n);
<anchor xml:id="_daoptimizer_8cpp_source_1l00660"/>00660 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="_daoptimizer_8cpp_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess[i]&#32;=&#32;init[i];
<anchor xml:id="_daoptimizer_8cpp_source_1l00662"/>00662 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lower&#32;!=&#32;NULL&#32;&amp;&amp;&#32;upper&#32;!=&#32;NULL)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit[i]&#32;=&#32;lower[i];
<anchor xml:id="_daoptimizer_8cpp_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit[i]&#32;=&#32;upper[i];
<anchor xml:id="_daoptimizer_8cpp_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00667"/>00667 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit.resize(0);
<anchor xml:id="_daoptimizer_8cpp_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit.resize(0);
<anchor xml:id="_daoptimizer_8cpp_source_1l00670"/>00670 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00671"/>00671 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxEvals&#32;&lt;=&#32;0)
<anchor xml:id="_daoptimizer_8cpp_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxEvals&#32;=&#32;1E7;
<anchor xml:id="_daoptimizer_8cpp_source_1l00673"/>00673 &#32;&#32;&#32;&#32;<link linkend="_classdual__annealing_1_1_fitness">Fitness</link>&#32;fitfun(func,&#32;&amp;lower_limit,&#32;&amp;upper_limit,&#32;maxEvals);
<anchor xml:id="_daoptimizer_8cpp_source_1l00674"/>00674 
<anchor xml:id="_daoptimizer_8cpp_source_1l00675"/>00675 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;X&#32;=&#32;<link linkend="_namespacedual__annealing_1a8be31e030bc6b64855a87450168499d1">zeros</link>(dim);
<anchor xml:id="_daoptimizer_8cpp_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;enc&#32;=&#32;fitfun.<link linkend="_classdual__annealing_1_1_fitness_1a288c5b34db28ee5a3c0e0916f6936d27">encode</link>(guess);
<anchor xml:id="_daoptimizer_8cpp_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;bestY&#32;=&#32;<link linkend="_namespacedual__annealing_1a9d98349bcdfafe6b4659304b33f53b88">minimize</link>(&amp;fitfun,&#32;enc,&#32;seed,&#32;use_local_search,&#32;X);
<anchor xml:id="_daoptimizer_8cpp_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;bestX&#32;=&#32;fitfun.<link linkend="_classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8">decode</link>(X);
<anchor xml:id="_daoptimizer_8cpp_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="_daoptimizer_8cpp_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[i]&#32;=&#32;bestX[i];
<anchor xml:id="_daoptimizer_8cpp_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[n]&#32;=&#32;bestY;
<anchor xml:id="_daoptimizer_8cpp_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[n&#32;+&#32;1]&#32;=&#32;fitfun.<link linkend="_classdual__annealing_1_1_fitness_1a9abe3257d970e7fec842dedfeb409f37">getEvaluations</link>();
<anchor xml:id="_daoptimizer_8cpp_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[n&#32;+&#32;2]&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res[n&#32;+&#32;3]&#32;=&#32;0;
<anchor xml:id="_daoptimizer_8cpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(std::exception&#32;&amp;e)&#32;{
<anchor xml:id="_daoptimizer_8cpp_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cerr&#32;&lt;&lt;&#32;e.what()&#32;&lt;&lt;&#32;endl;
<anchor xml:id="_daoptimizer_8cpp_source_1l00688"/>00688 &#32;&#32;&#32;&#32;}
<anchor xml:id="_daoptimizer_8cpp_source_1l00689"/>00689 }
<anchor xml:id="_daoptimizer_8cpp_source_1l00690"/>00690 }
<anchor xml:id="_daoptimizer_8cpp_source_1l00691"/>00691 
</programlisting></section>

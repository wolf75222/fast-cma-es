<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_crfmnes_8cpp" xml:lang="en-US">
<title>_fcmaescpp/crfmnes.cpp File Reference</title>
<indexterm><primary>_fcmaescpp/crfmnes.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;Eigen/Core&gt;<?linebreak?>#include &lt;Eigen/Eigenvalues&gt;<?linebreak?>#include &lt;iostream&gt;<?linebreak?>#include &lt;random&gt;<?linebreak?>#include &lt;float.h&gt;<?linebreak?>#include &lt;stdint.h&gt;<?linebreak?>#include &lt;ctime&gt;<?linebreak?>#include &lt;inttypes.h&gt;<?linebreak?>#include &quot;evaluator.h&quot;<?linebreak?></programlisting>Include dependency graph for crfmnes.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="crfmnes_8cpp__incl.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classcrmfnes_1_1_crfmnes_optimizer">crmfnes::CrfmnesOptimizer</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacecrmfnes">crmfnes</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_namespacecrmfnes_1a37f765d781ba1148662c876fc40498b8">crmfnes::sequence</link> (double start, double end, double step)</para>
</listitem>
            <listitem><para>void <link linkend="_crfmnes_8cpp_1a9081791c22cd931e965641b985273b52">optimizeCRFMNES_C</link> (int64_t runid, <link linkend="_evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc">callback_parallel</link> func_par, int dim, double *init, double *lower, double *upper, double sigma, int maxEvals, double stopfitness, int popsize, int64_t seed, double penalty_coef, bool use_constraint_violation, bool normalize, double *res)</para>
</listitem>
            <listitem><para>uintptr_t <link linkend="_crfmnes_8cpp_1a8ad70c1b6cadd1ed7b3bfa0d60d96911">initCRFMNES_C</link> (int64_t runid, int dim, double *init, double *lower, double *upper, double sigma, int popsize, int64_t seed, double penalty_coef, bool use_constraint_violation, bool normalize)</para>
</listitem>
            <listitem><para>void <link linkend="_crfmnes_8cpp_1a22d09131327c77abfd090eaa649faf5d">destroyCRFMNES_C</link> (uintptr_t ptr)</para>
</listitem>
            <listitem><para>void <link linkend="_crfmnes_8cpp_1aa1796ba79109494532e2a57b9555b7e5">askCRFMNES_C</link> (uintptr_t ptr, double *xs)</para>
</listitem>
            <listitem><para>int <link linkend="_crfmnes_8cpp_1a39b04e71778a1006c8cc1bea2d082074">tellCRFMNES_C</link> (uintptr_t ptr, double *ys)</para>
</listitem>
            <listitem><para>int <link linkend="_crfmnes_8cpp_1ae309750075a3655886dcf9647435b799">populationCRFMNES_C</link> (uintptr_t ptr, double *xs)</para>
</listitem>
            <listitem><para>int <link linkend="_crfmnes_8cpp_1aefaccee22121ee2d0f43d33fd5968c22">resultCRFMNES_C</link> (uintptr_t ptr, double *res)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_crfmnes_8cpp_1aa1796ba79109494532e2a57b9555b7e5"/><section>
    <title>askCRFMNES_C()</title>
<indexterm><primary>askCRFMNES_C</primary><secondary>crfmnes.cpp</secondary></indexterm>
<indexterm><primary>crfmnes.cpp</primary><secondary>askCRFMNES_C</secondary></indexterm>
<para><computeroutput>void askCRFMNES_C (uintptr_t ptr, double * xs)</computeroutput></para><para>
Definition at line <link linkend="_crfmnes_8cpp_source_1l00439">439</link> of file <link linkend="_crfmnes_8cpp_source">crfmnes.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="crfmnes_8cpp_aa1796ba79109494532e2a57b9555b7e5_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_crfmnes_8cpp_1a22d09131327c77abfd090eaa649faf5d"/><section>
    <title>destroyCRFMNES_C()</title>
<indexterm><primary>destroyCRFMNES_C</primary><secondary>crfmnes.cpp</secondary></indexterm>
<indexterm><primary>crfmnes.cpp</primary><secondary>destroyCRFMNES_C</secondary></indexterm>
<para><computeroutput>void destroyCRFMNES_C (uintptr_t ptr)</computeroutput></para><para>
Definition at line <link linkend="_crfmnes_8cpp_source_1l00432">432</link> of file <link linkend="_crfmnes_8cpp_source">crfmnes.cpp</link>.</para>
</section>
<anchor xml:id="_crfmnes_8cpp_1a8ad70c1b6cadd1ed7b3bfa0d60d96911"/><section>
    <title>initCRFMNES_C()</title>
<indexterm><primary>initCRFMNES_C</primary><secondary>crfmnes.cpp</secondary></indexterm>
<indexterm><primary>crfmnes.cpp</primary><secondary>initCRFMNES_C</secondary></indexterm>
<para><computeroutput>uintptr_t initCRFMNES_C (int64_t runid, int dim, double * init, double * lower, double * upper, double sigma, int popsize, int64_t seed, double penalty_coef, bool use_constraint_violation, bool normalize)</computeroutput></para><para>
Definition at line <link linkend="_crfmnes_8cpp_source_1l00405">405</link> of file <link linkend="_crfmnes_8cpp_source">crfmnes.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="crfmnes_8cpp_a8ad70c1b6cadd1ed7b3bfa0d60d96911_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_crfmnes_8cpp_1a9081791c22cd931e965641b985273b52"/><section>
    <title>optimizeCRFMNES_C()</title>
<indexterm><primary>optimizeCRFMNES_C</primary><secondary>crfmnes.cpp</secondary></indexterm>
<indexterm><primary>crfmnes.cpp</primary><secondary>optimizeCRFMNES_C</secondary></indexterm>
<para><computeroutput>void optimizeCRFMNES_C (int64_t runid, <link linkend="_evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc">callback_parallel</link> func_par, int dim, double * init, double * lower, double * upper, double sigma, int maxEvals, double stopfitness, int popsize, int64_t seed, double penalty_coef, bool use_constraint_violation, bool normalize, double * res)</computeroutput></para><para>
Definition at line <link linkend="_crfmnes_8cpp_source_1l00365">365</link> of file <link linkend="_crfmnes_8cpp_source">crfmnes.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="crfmnes_8cpp_a9081791c22cd931e965641b985273b52_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_crfmnes_8cpp_1ae309750075a3655886dcf9647435b799"/><section>
    <title>populationCRFMNES_C()</title>
<indexterm><primary>populationCRFMNES_C</primary><secondary>crfmnes.cpp</secondary></indexterm>
<indexterm><primary>crfmnes.cpp</primary><secondary>populationCRFMNES_C</secondary></indexterm>
<para><computeroutput>int populationCRFMNES_C (uintptr_t ptr, double * xs)</computeroutput></para><para>
Definition at line <link linkend="_crfmnes_8cpp_source_1l00471">471</link> of file <link linkend="_crfmnes_8cpp_source">crfmnes.cpp</link>.</para>
</section>
<anchor xml:id="_crfmnes_8cpp_1aefaccee22121ee2d0f43d33fd5968c22"/><section>
    <title>resultCRFMNES_C()</title>
<indexterm><primary>resultCRFMNES_C</primary><secondary>crfmnes.cpp</secondary></indexterm>
<indexterm><primary>crfmnes.cpp</primary><secondary>resultCRFMNES_C</secondary></indexterm>
<para><computeroutput>int resultCRFMNES_C (uintptr_t ptr, double * res)</computeroutput></para><para>
Definition at line <link linkend="_crfmnes_8cpp_source_1l00484">484</link> of file <link linkend="_crfmnes_8cpp_source">crfmnes.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="crfmnes_8cpp_aefaccee22121ee2d0f43d33fd5968c22_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_crfmnes_8cpp_1a39b04e71778a1006c8cc1bea2d082074"/><section>
    <title>tellCRFMNES_C()</title>
<indexterm><primary>tellCRFMNES_C</primary><secondary>crfmnes.cpp</secondary></indexterm>
<indexterm><primary>crfmnes.cpp</primary><secondary>tellCRFMNES_C</secondary></indexterm>
<para><computeroutput>int tellCRFMNES_C (uintptr_t ptr, double * ys)</computeroutput></para><para>
Definition at line <link linkend="_crfmnes_8cpp_source_1l00452">452</link> of file <link linkend="_crfmnes_8cpp_source">crfmnes.cpp</link>.</para>
</section>
</section>
</section>

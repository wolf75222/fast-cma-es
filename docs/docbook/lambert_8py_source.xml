<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lambert_8py_source" xml:lang="en-US">
<title>lambert.py</title>
<indexterm><primary>examples/kepler/lambert.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_lambert_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1kepler_1_1lambert">00001</link> <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_lambert_8py_source_1l00002"/>00002 <emphasis role="keyword">import</emphasis>&#32;math
<anchor xml:id="_lambert_8py_source_1l00003"/>00003 <emphasis role="keyword">import</emphasis>&#32;random
<anchor xml:id="_lambert_8py_source_1l00004"/>00004 <emphasis role="keyword">from</emphasis>&#32;pykep.core&#32;<emphasis role="keyword">import</emphasis>&#32;fb_vel
<anchor xml:id="_lambert_8py_source_1l00005"/>00005 
<anchor xml:id="_lambert_8py_source_1l00006"/>00006 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev">lambert_problem_multirev</link>:
<anchor xml:id="_lambert_8py_source_1l00007"/>00007 &#32;&#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">r&quot;&quot;&quot;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00009"/>00009 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;converts&#32;a&#32;lambert_problem&#32;instance&#32;-&#32;a&#32;number&#32;of&#32;solutions&#32;to&#32;a&#32;multi&#32;revolution&#32;Lambert&#32;problem</emphasis>
<anchor xml:id="_lambert_8py_source_1l00010"/>00010 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;an&#32;instance&#32;representing&#32;only&#32;&quot;the&#32;best&quot;&#32;solution.&#32;Criteria&#32;is&#32;the&#32;delta&#32;velocity&#32;of&#32;the&#32;incoming</emphasis>
<anchor xml:id="_lambert_8py_source_1l00011"/>00011 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;velocity&#32;v_in&#32;to&#32;the&#32;outgoing&#32;solution&#32;velocity&#32;get_v1().&#32;Can&#32;be&#32;used&#32;as&#32;a&#32;replacement&#32;for&#32;lambert_problem</emphasis>
<anchor xml:id="_lambert_8py_source_1l00012"/>00012 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;in&#32;_mga.py&#32;and&#32;_mga_1dsm.py.&#32;lambert_problem_multirev&#32;delivers&#32;an&#32;optimal&#32;unique&#32;solution&#32;comparing&#32;all</emphasis>
<anchor xml:id="_lambert_8py_source_1l00013"/>00013 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Lambert&#32;solutions&#32;of&#32;a&#32;multi&#32;revolution&#32;lambert&#32;problem&#32;which&#32;can&#32;improve&#32;optimization&#32;results&#32;for&#32;trajectories</emphasis>
<anchor xml:id="_lambert_8py_source_1l00014"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev">00014</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;including&#32;inner&#32;planets.</emphasis>
<anchor xml:id="_lambert_8py_source_1l00015"/>00015 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00016"/>00016 
<anchor xml:id="_lambert_8py_source_1l00017"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1adfd8d3b5191614adef6e58b98b73d2ca">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1adfd8d3b5191614adef6e58b98b73d2ca">__init__</link>(self,&#32;v_in,&#32;lambert_problem):
<anchor xml:id="_lambert_8py_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_i&#32;=&#32;0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;len(lambert_problem.get_v1())
<anchor xml:id="_lambert_8py_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;n&#32;&gt;&#32;0:&#32;
<anchor xml:id="_lambert_8py_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_dv&#32;=&#32;math.inf
<anchor xml:id="_lambert_8py_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n):
<anchor xml:id="_lambert_8py_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dv&#32;=&#32;np.linalg.norm([a&#32;-&#32;b&#32;<emphasis role="keywordflow">for</emphasis>&#32;a,&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(lambert_problem.get_v1()[i],&#32;v_in)])
<anchor xml:id="_lambert_8py_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;dv&#32;&lt;&#32;best_dv:
<anchor xml:id="_lambert_8py_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_dv&#32;=&#32;dv
<anchor xml:id="_lambert_8py_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_i&#32;=&#32;i&#32;
<anchor xml:id="_lambert_8py_source_1l00027"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1aff5f32bf1a98f1024836d744b36bd6ad">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1aff5f32bf1a98f1024836d744b36bd6ad">best_i</link>&#32;=&#32;best_i
<anchor xml:id="_lambert_8py_source_1l00028"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">lambert_problem</link>&#32;=&#32;lambert_problem
<anchor xml:id="_lambert_8py_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00030"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a0b71fd4f9727881739c3941b6b304a90">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a0b71fd4f9727881739c3941b6b304a90">get_v1</link>(self):
<anchor xml:id="_lambert_8py_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a0b71fd4f9727881739c3941b6b304a90">get_v1</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1aff5f32bf1a98f1024836d744b36bd6ad">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00032"/>00032 &#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00033"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1aaf2d7701e81477736096dfe7a077fa22">00033</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1aaf2d7701e81477736096dfe7a077fa22">get_v2</link>(self):
<anchor xml:id="_lambert_8py_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1aaf2d7701e81477736096dfe7a077fa22">get_v2</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1aff5f32bf1a98f1024836d744b36bd6ad">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00035"/>00035 
<anchor xml:id="_lambert_8py_source_1l00036"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1ae01a8d18150f5f4973e8b7b2bfe9e91c">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1ae01a8d18150f5f4973e8b7b2bfe9e91c">get_r1</link>(self):
<anchor xml:id="_lambert_8py_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1ae01a8d18150f5f4973e8b7b2bfe9e91c">get_r1</link>()&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00038"/>00038 
<anchor xml:id="_lambert_8py_source_1l00039"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a90f6d816f14cecca1001ce2aba5918a0">00039</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a90f6d816f14cecca1001ce2aba5918a0">get_r2</link>(self):
<anchor xml:id="_lambert_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a90f6d816f14cecca1001ce2aba5918a0">get_r2</link>()&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00041"/>00041 
<anchor xml:id="_lambert_8py_source_1l00042"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a4c2e9bfdfe5ec8e5131e57257a3e9bd1">00042</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a4c2e9bfdfe5ec8e5131e57257a3e9bd1">get_mu</link>(self):
<anchor xml:id="_lambert_8py_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a4c2e9bfdfe5ec8e5131e57257a3e9bd1">get_mu</link>()
<anchor xml:id="_lambert_8py_source_1l00044"/>00044 
<anchor xml:id="_lambert_8py_source_1l00045"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acb524881ce41e73025559fa7ffc00715">00045</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acb524881ce41e73025559fa7ffc00715">get_x</link>(self):
<anchor xml:id="_lambert_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acb524881ce41e73025559fa7ffc00715">get_x</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1aff5f32bf1a98f1024836d744b36bd6ad">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00047"/>00047 
<anchor xml:id="_lambert_8py_source_1l00048"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a4911c44dd7d48949280b46f2268ddfa8">00048</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a4911c44dd7d48949280b46f2268ddfa8">get_iters</link>(self):
<anchor xml:id="_lambert_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a4911c44dd7d48949280b46f2268ddfa8">get_iters</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1aff5f32bf1a98f1024836d744b36bd6ad">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00050"/>00050 
<anchor xml:id="_lambert_8py_source_1l00051"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a6757f67fa96e9a5889d01024d697b4cb">00051</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a6757f67fa96e9a5889d01024d697b4cb">get_tof</link>(self):
<anchor xml:id="_lambert_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a6757f67fa96e9a5889d01024d697b4cb">get_tof</link>()
<anchor xml:id="_lambert_8py_source_1l00053"/>00053 
<anchor xml:id="_lambert_8py_source_1l00054"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a2533a0e1f26125ace8b0922cb5e324b9">00054</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a2533a0e1f26125ace8b0922cb5e324b9">get_Nmax</link>(self):
<anchor xml:id="_lambert_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1acce45365d9ae28486d8b3f1322f3bc82">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev_1a2533a0e1f26125ace8b0922cb5e324b9">get_Nmax</link>()
<anchor xml:id="_lambert_8py_source_1l00056"/>00056 
<anchor xml:id="_lambert_8py_source_1l00057"/>00057 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga">lambert_problem_multirev_ga</link>:&#32;&#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">r&quot;&quot;&quot;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00059"/>00059 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;converts&#32;a&#32;lambert_problem&#32;instance&#32;-&#32;a&#32;number&#32;of&#32;solutions&#32;to&#32;a&#32;multi&#32;revolution&#32;Lambert&#32;problem</emphasis>
<anchor xml:id="_lambert_8py_source_1l00060"/>00060 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;an&#32;instance&#32;representing&#32;only&#32;&quot;the&#32;best&quot;&#32;solution.&#32;Criteria&#32;is&#32;the&#32;delta&#32;velocity&#32;of&#32;the&#32;incoming</emphasis>
<anchor xml:id="_lambert_8py_source_1l00061"/>00061 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;velocity&#32;v_in&#32;to&#32;the&#32;outgoing&#32;solution&#32;velocity&#32;get_v1()&#32;considering&#32;a&#32;GA&#32;maneuver&#32;at&#32;a&#32;planet.</emphasis>
<anchor xml:id="_lambert_8py_source_1l00062"/>00062 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Can&#32;be&#32;used&#32;as&#32;a&#32;replacement&#32;for&#32;lambert_problem&#32;in&#32;_mga.py&#32;and&#32;_mga_1dsm.py.&#32;lambert_problem_multirev&#32;delivers&#32;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00063"/>00063 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;an&#32;optimal&#32;unique&#32;solution&#32;comparing&#32;all&#32;Lambert&#32;solutions&#32;of&#32;a&#32;multi&#32;revolution&#32;lambert&#32;problem&#32;which&#32;can&#32;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00064"/>00064 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;improve&#32;optimization&#32;results&#32;for&#32;trajectories&#32;including&#32;inner&#32;planets.</emphasis>
<anchor xml:id="_lambert_8py_source_1l00065"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga">00065</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00066"/>00066 &#32;
<anchor xml:id="_lambert_8py_source_1l00067"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a68331e3fffd131d4b35a6cc3736c2178">00067</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a68331e3fffd131d4b35a6cc3736c2178">__init__</link>(self,&#32;v_in,&#32;lp,&#32;planet,&#32;v_planet):
<anchor xml:id="_lambert_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_i&#32;=&#32;0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;len(lp.get_v1())
<anchor xml:id="_lambert_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;n&#32;&gt;&#32;0:&#32;
<anchor xml:id="_lambert_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_dv&#32;=&#32;math.inf&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n):
<anchor xml:id="_lambert_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vin&#32;=&#32;[a&#32;-&#32;b&#32;<emphasis role="keywordflow">for</emphasis>&#32;a,&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(v_in,&#32;v_planet)]
<anchor xml:id="_lambert_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vout&#32;=&#32;[a&#32;-&#32;b&#32;<emphasis role="keywordflow">for</emphasis>&#32;a,&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(lp.get_v1()[i],&#32;v_planet)]
<anchor xml:id="_lambert_8py_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dv&#32;=&#32;fb_vel(vin,&#32;vout,&#32;planet)
<anchor xml:id="_lambert_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;dv&#32;&lt;&#32;best_dv:
<anchor xml:id="_lambert_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_dv&#32;=&#32;dv
<anchor xml:id="_lambert_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_i&#32;=&#32;i&#32;
<anchor xml:id="_lambert_8py_source_1l00079"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1adfabadd56bd8e605a38e2617f5228a2d">00079</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1adfabadd56bd8e605a38e2617f5228a2d">best_i</link>&#32;=&#32;best_i
<anchor xml:id="_lambert_8py_source_1l00080"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">00080</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">lambert_problem</link>&#32;=&#32;lp
<anchor xml:id="_lambert_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00082"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a5223139cb5aa6a14e22d7687e30324d3">00082</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a5223139cb5aa6a14e22d7687e30324d3">get_v1</link>(self):
<anchor xml:id="_lambert_8py_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a5223139cb5aa6a14e22d7687e30324d3">get_v1</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1adfabadd56bd8e605a38e2617f5228a2d">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00084"/>00084 &#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00085"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a7a820147a2bd36a8caba81ef0db28753">00085</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a7a820147a2bd36a8caba81ef0db28753">get_v2</link>(self):
<anchor xml:id="_lambert_8py_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a7a820147a2bd36a8caba81ef0db28753">get_v2</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1adfabadd56bd8e605a38e2617f5228a2d">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00087"/>00087 
<anchor xml:id="_lambert_8py_source_1l00088"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a71465de9cf4768c8b5ce6f66e814c9aa">00088</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a71465de9cf4768c8b5ce6f66e814c9aa">get_r1</link>(self):
<anchor xml:id="_lambert_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a71465de9cf4768c8b5ce6f66e814c9aa">get_r1</link>()&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00090"/>00090 
<anchor xml:id="_lambert_8py_source_1l00091"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1ad4001708940160e44e8b32727c4d63b2">00091</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1ad4001708940160e44e8b32727c4d63b2">get_r2</link>(self):
<anchor xml:id="_lambert_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1ad4001708940160e44e8b32727c4d63b2">get_r2</link>()&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00093"/>00093 
<anchor xml:id="_lambert_8py_source_1l00094"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a27f5c1918ea489d7612db695b518074b">00094</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a27f5c1918ea489d7612db695b518074b">get_mu</link>(self):
<anchor xml:id="_lambert_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a27f5c1918ea489d7612db695b518074b">get_mu</link>()
<anchor xml:id="_lambert_8py_source_1l00096"/>00096 
<anchor xml:id="_lambert_8py_source_1l00097"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a0683a879c52988d0039d1867bdfdc56b">00097</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a0683a879c52988d0039d1867bdfdc56b">get_x</link>(self):
<anchor xml:id="_lambert_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a0683a879c52988d0039d1867bdfdc56b">get_x</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1adfabadd56bd8e605a38e2617f5228a2d">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00099"/>00099 
<anchor xml:id="_lambert_8py_source_1l00100"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1abc3c43bb02f4dfe0a18fdc8ec7568754">00100</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1abc3c43bb02f4dfe0a18fdc8ec7568754">get_iters</link>(self):
<anchor xml:id="_lambert_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1abc3c43bb02f4dfe0a18fdc8ec7568754">get_iters</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1adfabadd56bd8e605a38e2617f5228a2d">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00102"/>00102 
<anchor xml:id="_lambert_8py_source_1l00103"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a45ccffe438b6e40403d4c77f63ec5447">00103</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a45ccffe438b6e40403d4c77f63ec5447">get_tof</link>(self):
<anchor xml:id="_lambert_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a45ccffe438b6e40403d4c77f63ec5447">get_tof</link>()
<anchor xml:id="_lambert_8py_source_1l00105"/>00105 
<anchor xml:id="_lambert_8py_source_1l00106"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a311b6bfea03c98e233f9c96acfac4846">00106</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a311b6bfea03c98e233f9c96acfac4846">get_Nmax</link>(self):
<anchor xml:id="_lambert_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a43545dc274cf92521b9f538a891094d0">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga_1a311b6bfea03c98e233f9c96acfac4846">get_Nmax</link>()
<anchor xml:id="_lambert_8py_source_1l00108"/>00108 
<anchor xml:id="_lambert_8py_source_1l00109"/>00109 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic">lambert_problem_stochastic</link>:
<anchor xml:id="_lambert_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">r&quot;&quot;&quot;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00111"/>00111 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;converts&#32;a&#32;lambert_problem&#32;instance&#32;-&#32;a&#32;number&#32;of&#32;solutions&#32;to&#32;a&#32;multi&#32;revolution&#32;Lambert&#32;problem&#32;-</emphasis>
<anchor xml:id="_lambert_8py_source_1l00112"/>00112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;an&#32;instance&#32;representing&#32;a&#32;single&#32;&quot;good&quot;&#32;solution.&#32;Criteria&#32;is&#32;the&#32;delta&#32;velocity&#32;of&#32;the&#32;incoming</emphasis>
<anchor xml:id="_lambert_8py_source_1l00113"/>00113 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;velocity&#32;v_in&#32;to&#32;the&#32;outgoing&#32;solution&#32;velocity&#32;get_v1().&#32;Can&#32;be&#32;used&#32;as&#32;a&#32;replacement&#32;for&#32;lambert_problem</emphasis>
<anchor xml:id="_lambert_8py_source_1l00114"/>00114 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;in&#32;_mga.py&#32;and&#32;_mga_1dsm.py.&#32;The&#32;used&#32;criteria&#32;is&#32;not&#32;the&#32;only&#32;one&#32;relevant&#32;for&#32;optimization&#32;problems&#32;aiming&#32;at&#32;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00115"/>00115 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;reducing&#32;the&#32;total&#32;delta&#32;velocity.&#32;I&#32;doesn&apos;t&#32;consider&#32;the&#32;incoming&#32;solution&#32;velocity&#32;get_v2()&#32;because&#32;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00116"/>00116 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;corresponding&#32;outgoing&#32;target&#32;velocity&#32;is&#32;not&#32;available&#32;yet.&#32;By&#32;randomly&#32;choosing&#32;a&#32;&quot;good&quot;&#32;solution&#32;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00117"/>00117 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;value&#32;of&#32;the&#32;objective&#32;function&#32;calling&#32;lambert_problem_stochastic&#32;is&#32;no&#32;longer&#32;deterministic.&#32;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00118"/>00118 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Combined&#32;with&#32;a&#32;non&#32;derivative&#32;optimization&#32;algorithm&#32;this&#32;way&#32;search&#32;can&#32;be&#32;replaced&#32;by&#32;optimization.&#32;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00119"/>00119 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_lambert_8py_source_1l00120"/>00120 <emphasis role="stringliteral">&#32;&#32;&#32;..&#32;note::</emphasis>
<anchor xml:id="_lambert_8py_source_1l00121"/>00121 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_lambert_8py_source_1l00122"/>00122 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;formula&#32;used&#32;to&#32;randomly&#32;skip&#32;over&#32;superior&#32;solutions&#32;was&#32;tested&#32;for&#32;_tandem&#32;and&#32;_messenger&#32;and&#32;GTOC1.&#32;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00123"/>00123 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Other&#32;problems&#32;may&#32;require&#32;different&#32;parameters.&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00124"/>00124 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_lambert_8py_source_1l00125"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic">00125</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_lambert_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00127"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a7d5f1ff71c65327f589e1b5f4d73f970">00127</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a7d5f1ff71c65327f589e1b5f4d73f970">__init__</link>(self,&#32;v_in,&#32;lambert_problem):
<anchor xml:id="_lambert_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_i&#32;=&#32;0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;len(lambert_problem.get_v1())
<anchor xml:id="_lambert_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;n&#32;&gt;&#32;0:&#32;
<anchor xml:id="_lambert_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_dv&#32;=&#32;math.inf
<anchor xml:id="_lambert_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n):
<anchor xml:id="_lambert_8py_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;convert&#32;to&#32;km/s</emphasis>
<anchor xml:id="_lambert_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dv&#32;=&#32;0.001&#32;*&#32;np.linalg.norm([a&#32;-&#32;b&#32;<emphasis role="keywordflow">for</emphasis>&#32;a,&#32;b&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(lambert_problem.get_v1()[i],&#32;v_in)])
<anchor xml:id="_lambert_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;dv&#32;&lt;&#32;best_dv:
<anchor xml:id="_lambert_8py_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;skip&#32;improvement&#32;randomly&#32;if&#32;dv&#32;is&#32;only&#32;slightly&#32;better</emphasis>
<anchor xml:id="_lambert_8py_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;&gt;&#32;0&#32;<emphasis role="keywordflow">and</emphasis>&#32;random.random()&#32;&lt;&#32;1.0&#32;/&#32;(1.0&#32;+&#32;2*(0.001*best_dv&#32;-&#32;dv)**2):
<anchor xml:id="_lambert_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_lambert_8py_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_dv&#32;=&#32;dv
<anchor xml:id="_lambert_8py_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_i&#32;=&#32;i
<anchor xml:id="_lambert_8py_source_1l00141"/>00141 
<anchor xml:id="_lambert_8py_source_1l00142"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa6ed163461145a76cbf9e851e9c6534a">00142</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa6ed163461145a76cbf9e851e9c6534a">best_i</link>&#32;=&#32;best_i
<anchor xml:id="_lambert_8py_source_1l00143"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">00143</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">lambert_problem</link>&#32;=&#32;lambert_problem
<anchor xml:id="_lambert_8py_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00145"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a49ec2e13ded362dd13c326863511151e">00145</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a49ec2e13ded362dd13c326863511151e">get_v1</link>(self):
<anchor xml:id="_lambert_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a49ec2e13ded362dd13c326863511151e">get_v1</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa6ed163461145a76cbf9e851e9c6534a">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00147"/>00147 &#32;&#32;&#32;
<anchor xml:id="_lambert_8py_source_1l00148"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a621b479a308e62cf3f4d0ace1c222ecd">00148</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a621b479a308e62cf3f4d0ace1c222ecd">get_v2</link>(self):
<anchor xml:id="_lambert_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a621b479a308e62cf3f4d0ace1c222ecd">get_v2</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa6ed163461145a76cbf9e851e9c6534a">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00150"/>00150 
<anchor xml:id="_lambert_8py_source_1l00151"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a9b71608dac985c0285d4e41eefe45ac8">00151</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a9b71608dac985c0285d4e41eefe45ac8">get_r1</link>(self):
<anchor xml:id="_lambert_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a9b71608dac985c0285d4e41eefe45ac8">get_r1</link>()
<anchor xml:id="_lambert_8py_source_1l00153"/>00153 
<anchor xml:id="_lambert_8py_source_1l00154"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aaa73678c748e8ce1212e2efe023c815b">00154</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aaa73678c748e8ce1212e2efe023c815b">get_r2</link>(self):
<anchor xml:id="_lambert_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aaa73678c748e8ce1212e2efe023c815b">get_r2</link>()
<anchor xml:id="_lambert_8py_source_1l00156"/>00156 
<anchor xml:id="_lambert_8py_source_1l00157"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a62d99915b93564d4b437f7176ec0c802">00157</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a62d99915b93564d4b437f7176ec0c802">get_mu</link>(self):
<anchor xml:id="_lambert_8py_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a62d99915b93564d4b437f7176ec0c802">get_mu</link>()
<anchor xml:id="_lambert_8py_source_1l00159"/>00159 
<anchor xml:id="_lambert_8py_source_1l00160"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1ae1b904d6fedd51f7e642c4e3efe5d69a">00160</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1ae1b904d6fedd51f7e642c4e3efe5d69a">get_x</link>(self):
<anchor xml:id="_lambert_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1ae1b904d6fedd51f7e642c4e3efe5d69a">get_x</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa6ed163461145a76cbf9e851e9c6534a">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00162"/>00162 
<anchor xml:id="_lambert_8py_source_1l00163"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1ab8c2e2994efb2ceacc9fceeb623ff553">00163</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1ab8c2e2994efb2ceacc9fceeb623ff553">get_iters</link>(self):
<anchor xml:id="_lambert_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1ab8c2e2994efb2ceacc9fceeb623ff553">get_iters</link>()[self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa6ed163461145a76cbf9e851e9c6534a">best_i</link>]]
<anchor xml:id="_lambert_8py_source_1l00165"/>00165 
<anchor xml:id="_lambert_8py_source_1l00166"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a5f11b92c53f560947472efd28706ff5d">00166</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a5f11b92c53f560947472efd28706ff5d">get_tof</link>(self):
<anchor xml:id="_lambert_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a5f11b92c53f560947472efd28706ff5d">get_tof</link>()
<anchor xml:id="_lambert_8py_source_1l00168"/>00168 
<anchor xml:id="_lambert_8py_source_1l00169"/><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a136900e2e2f648f9958ade293b1c9dfb">00169</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a136900e2e2f648f9958ade293b1c9dfb">get_Nmax</link>(self):
<anchor xml:id="_lambert_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1aa7b09bdd335595f9db708a59c15057a6">lambert_problem</link>.<link linkend="_classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic_1a136900e2e2f648f9958ade293b1c9dfb">get_Nmax</link>()
</programlisting></section>

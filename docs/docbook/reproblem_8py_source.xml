<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_reproblem_8py_source" xml:lang="en-US">
<title>reproblem.py</title>
<indexterm><primary>examples/reproblem.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_reproblem_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1reproblem">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00005"/>00005 
<anchor xml:id="_reproblem_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;Provides&#32;a&#32;Python&#32;wrapper&#32;to&#32;the&#32;C-version&#32;of&#32;the&#32;</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00007"/>00007 <emphasis role="comment">#&#32;&quot;Easy-to-use&#32;Real-world&#32;Multi-objective&#32;Optimization&#32;Problem&#32;Suite&quot;</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00008"/>00008 <emphasis role="comment">#&#32;https://github.com/ryojitanabe/reproblems</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00009"/>00009 <emphasis role="comment">#&#32;https://github.com/ryojitanabe/reproblems/blob/master/doc/re-supplementary_file.pdf</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00010"/>00010 <emphasis role="comment">#&#32;https://arxiv.org/abs/2009.12867</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00011"/>00011 
<anchor xml:id="_reproblem_8py_source_1l00012"/>00012 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.2</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00013"/>00013 
<anchor xml:id="_reproblem_8py_source_1l00014"/>00014 <emphasis role="keyword">import</emphasis>&#32;sys
<anchor xml:id="_reproblem_8py_source_1l00015"/>00015 <emphasis role="keyword">import</emphasis>&#32;math
<anchor xml:id="_reproblem_8py_source_1l00016"/>00016 <emphasis role="keyword">import</emphasis>&#32;os
<anchor xml:id="_reproblem_8py_source_1l00017"/>00017 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_reproblem_8py_source_1l00018"/>00018 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_reproblem_8py_source_1l00019"/>00019 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds
<anchor xml:id="_reproblem_8py_source_1l00020"/>00020 
<anchor xml:id="_reproblem_8py_source_1l00021"/>00021 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_reproblem_8py_source_1l00022"/>00022 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_reproblem_8py_source_1l00023"/>00023 
<anchor xml:id="_reproblem_8py_source_1l00024"/>00024 logger.remove()
<anchor xml:id="_reproblem_8py_source_1l00025"/><link linkend="_namespaceexamples_1_1reproblem_1a1ec84fb6aaafdabfdef64e2248356b7c">00025</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_reproblem_8py_source_1l00026"/>00026 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_reproblem_8py_source_1l00027"/>00027 
<anchor xml:id="_reproblem_8py_source_1l00028"/><link linkend="_namespaceexamples_1_1reproblem_1aad1bcf928c7cac4e8a77ec7ed972879d">00028</link> basepath&#32;=&#32;os.path.dirname(os.path.abspath(__file__))
<anchor xml:id="_reproblem_8py_source_1l00029"/>00029 <emphasis role="keywordflow">if</emphasis>&#32;sys.platform.startswith(<emphasis role="stringliteral">&apos;linux&apos;</emphasis>):
<anchor xml:id="_reproblem_8py_source_1l00030"/><link linkend="_namespaceexamples_1_1reproblem_1ae9e391de35d99b16b69e0cc83d0fb399">00030</link> &#32;&#32;&#32;&#32;libcmalib&#32;=&#32;ct.cdll.LoadLibrary(basepath&#32;+&#32;<emphasis role="stringliteral">&apos;/../fcmaes/lib/libacmalib.so&apos;</emphasis>)&#32;&#32;
<anchor xml:id="_reproblem_8py_source_1l00031"/>00031 <emphasis role="keywordflow">elif</emphasis>&#32;<emphasis role="stringliteral">&apos;mac&apos;</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;sys.platform:
<anchor xml:id="_reproblem_8py_source_1l00032"/>00032 &#32;&#32;&#32;&#32;libcmalib&#32;=&#32;ct.cdll.LoadLibrary(basepath&#32;+&#32;<emphasis role="stringliteral">&apos;/../fcmaes/lib/libacmalib.dylib&apos;</emphasis>)&#32;&#32;
<anchor xml:id="_reproblem_8py_source_1l00033"/>00033 <emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_reproblem_8py_source_1l00034"/>00034 &#32;&#32;&#32;&#32;os.environ[<emphasis role="stringliteral">&apos;PATH&apos;</emphasis>]&#32;=&#32;(basepath&#32;+&#32;<emphasis role="stringliteral">&apos;/lib&apos;</emphasis>)&#32;+&#32;os.pathsep&#32;+&#32;os.environ[<emphasis role="stringliteral">&apos;PATH&apos;</emphasis>]
<anchor xml:id="_reproblem_8py_source_1l00035"/>00035 &#32;&#32;&#32;&#32;libcmalib&#32;=&#32;ct.cdll.LoadLibrary(basepath&#32;+&#32;<emphasis role="stringliteral">&apos;/../fcmaes/lib/libacmalib.dll&apos;</emphasis>)&#32;&#32;
<anchor xml:id="_reproblem_8py_source_1l00036"/>00036 
<anchor xml:id="_reproblem_8py_source_1l00037"/><link linkend="_namespaceexamples_1_1reproblem_1a58085290ecd79262dab3ddbc05f0a43e">00037</link> objectives_re_C&#32;=&#32;libcmalib.objectives_re_C
<anchor xml:id="_reproblem_8py_source_1l00038"/><link linkend="_namespaceexamples_1_1reproblem_1aeb83fc4a8ed17c713ae4f96afda33d64">00038</link> objectives_re_C.argtypes&#32;=&#32;[ct.c_char_p,&#32;ct.POINTER(ct.c_double)]
<anchor xml:id="_reproblem_8py_source_1l00039"/>00039 
<anchor xml:id="_reproblem_8py_source_1l00040"/><link linkend="_namespaceexamples_1_1reproblem_1a71807d466129b8abb25bd7c0c32b90a2">00040</link> objectives_re_C.restype&#32;=&#32;ct.POINTER(ct.c_double)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_reproblem_8py_source_1l00041"/>00041 
<anchor xml:id="_reproblem_8py_source_1l00042"/><link linkend="_namespaceexamples_1_1reproblem_1a53004170ed8c799a80259975b54c71b4">00042</link> bounds_re_C&#32;=&#32;libcmalib.bounds_re_C
<anchor xml:id="_reproblem_8py_source_1l00043"/>00043 bounds_re_C.argtypes&#32;=&#32;[ct.c_char_p]
<anchor xml:id="_reproblem_8py_source_1l00044"/>00044 
<anchor xml:id="_reproblem_8py_source_1l00045"/>00045 bounds_re_C.restype&#32;=&#32;ct.POINTER(ct.c_double)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_reproblem_8py_source_1l00046"/>00046 
<anchor xml:id="_reproblem_8py_source_1l00047"/><link linkend="_namespaceexamples_1_1reproblem_1a7bf6d7281b617beb32bb6369c2be3905">00047</link> freemem&#32;=&#32;libcmalib.free_mem
<anchor xml:id="_reproblem_8py_source_1l00048"/>00048 freemem.argtypes&#32;=&#32;[ct.POINTER(ct.c_double)]
<anchor xml:id="_reproblem_8py_source_1l00049"/>00049 
<anchor xml:id="_reproblem_8py_source_1l00050"/><link linkend="_namespaceexamples_1_1reproblem_1ae65e9bff5a0a5413fed20efe2babdead">00050</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1reproblem_1ae65e9bff5a0a5413fed20efe2babdead">objectives_re</link>(name,&#32;x,&#32;numVars,&#32;numObjs):
<anchor xml:id="_reproblem_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;array_type&#32;=&#32;ct.c_double&#32;*&#32;numVars&#32;&#32;&#32;
<anchor xml:id="_reproblem_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_reproblem_8py_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;<link linkend="_namespaceexamples_1_1reproblem_1a58085290ecd79262dab3ddbc05f0a43e">objectives_re_C</link>(ct.create_string_buffer(name.encode(<emphasis role="stringliteral">&apos;utf-8&apos;</emphasis>)),&#32;array_type(*x))
<anchor xml:id="_reproblem_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;np.array(np.fromiter(res,&#32;dtype=np.float64,&#32;count=numObjs))
<anchor xml:id="_reproblem_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1reproblem_1a7bf6d7281b617beb32bb6369c2be3905">freemem</link>(res)
<anchor xml:id="_reproblem_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y
<anchor xml:id="_reproblem_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_reproblem_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;
<anchor xml:id="_reproblem_8py_source_1l00059"/>00059 
<anchor xml:id="_reproblem_8py_source_1l00060"/><link linkend="_namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820">00060</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820">bounds_re</link>(name):
<anchor xml:id="_reproblem_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_reproblem_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;<link linkend="_namespaceexamples_1_1reproblem_1a53004170ed8c799a80259975b54c71b4">bounds_re_C</link>(ct.create_string_buffer(name.encode(<emphasis role="stringliteral">&apos;utf-8&apos;</emphasis>)))
<anchor xml:id="_reproblem_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numVars&#32;=&#32;int(res[0])
<anchor xml:id="_reproblem_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numObjs&#32;=&#32;int(res[1])
<anchor xml:id="_reproblem_8py_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numConstr&#32;=&#32;int(res[2])
<anchor xml:id="_reproblem_8py_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower&#32;=&#32;np.array(res[3:3+numVars])
<anchor xml:id="_reproblem_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;=&#32;np.array(res[3+numVars:3+2*numVars])
<anchor xml:id="_reproblem_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1reproblem_1a7bf6d7281b617beb32bb6369c2be3905">freemem</link>(res)
<anchor xml:id="_reproblem_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;numVars,&#32;numObjs,&#32;numConstr,&#32;lower,&#32;upper
<anchor xml:id="_reproblem_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_reproblem_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;
<anchor xml:id="_reproblem_8py_source_1l00072"/>00072 &#32;&#32;
<anchor xml:id="_reproblem_8py_source_1l00073"/><link linkend="_classexamples_1_1reproblem_1_1re__problem">00073</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1reproblem_1_1re__problem">re_problem</link>(object):
<anchor xml:id="_reproblem_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;
<anchor xml:id="_reproblem_8py_source_1l00075"/><link linkend="_classexamples_1_1reproblem_1_1re__problem_1ad88a821be41b01aa8c32b77c4d6e4d2d">00075</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1reproblem_1_1re__problem_1ad88a821be41b01aa8c32b77c4d6e4d2d">__init__</link>(self,&#32;name,&#32;weight_bounds&#32;=&#32;Bounds([0,&#32;0],&#32;[1,&#32;1])):
<anchor xml:id="_reproblem_8py_source_1l00076"/><link linkend="_classexamples_1_1reproblem_1_1re__problem_1a48fb9610ac3b577460fb1ca8bd2d0d8b">00076</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1reproblem_1_1re__problem_1a48fb9610ac3b577460fb1ca8bd2d0d8b">name</link>&#32;=&#32;name
<anchor xml:id="_reproblem_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<link linkend="_namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820">bounds_re</link>(name)&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_reproblem_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;Exception(<emphasis role="stringliteral">&quot;re&#32;function&#32;is&#32;not&#32;implemented&quot;</emphasis>)
<anchor xml:id="_reproblem_8py_source_1l00079"/><link linkend="_classexamples_1_1reproblem_1_1re__problem_1a7111b338d81341160ae9609699f4b438">00079</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1reproblem_1_1re__problem_1a127ae7d067abfa91bdf7c5f3d9bc3694">numVars</link>,&#32;self.<link linkend="_classexamples_1_1reproblem_1_1re__problem_1a67857fd3321a5fd02bb0fe48cca8c9d5">numObjs</link>,&#32;self.<link linkend="_classexamples_1_1reproblem_1_1re__problem_1a7111b338d81341160ae9609699f4b438">numConstr</link>,&#32;lower,&#32;upper&#32;=&#32;<link linkend="_namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820">bounds_re</link>(name)
<anchor xml:id="_reproblem_8py_source_1l00080"/><link linkend="_classexamples_1_1reproblem_1_1re__problem_1acbac7ed28a50c8a838e0efd7349f3e65">00080</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1reproblem_1_1re__problem_1acbac7ed28a50c8a838e0efd7349f3e65">bounds</link>&#32;=&#32;Bounds(lower,&#32;upper)
<anchor xml:id="_reproblem_8py_source_1l00081"/><link linkend="_classexamples_1_1reproblem_1_1re__problem_1a074dc85532d8d477049f2073daca7bf0">00081</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1reproblem_1_1re__problem_1a074dc85532d8d477049f2073daca7bf0">weight_bounds</link>&#32;=&#32;weight_bounds&#32;<emphasis role="comment">#&#32;weighting&#32;of&#32;objectives</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00082"/>00082 &#32;
<anchor xml:id="_reproblem_8py_source_1l00083"/><link linkend="_classexamples_1_1reproblem_1_1re__problem_1aaa502e5bfc8d1a94d57be0856676919c">00083</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1reproblem_1_1re__problem_1aaa502e5bfc8d1a94d57be0856676919c">fun</link>(self,&#32;x):
<anchor xml:id="_reproblem_8py_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;<link linkend="_namespaceexamples_1_1reproblem_1ae65e9bff5a0a5413fed20efe2babdead">objectives_re</link>(self.<link linkend="_classexamples_1_1reproblem_1_1re__problem_1a48fb9610ac3b577460fb1ca8bd2d0d8b">name</link>,&#32;x,&#32;self.<link linkend="_classexamples_1_1reproblem_1_1re__problem_1a127ae7d067abfa91bdf7c5f3d9bc3694">numVars</link>,&#32;self.<link linkend="_classexamples_1_1reproblem_1_1re__problem_1a67857fd3321a5fd02bb0fe48cca8c9d5">numObjs</link>)
<anchor xml:id="_reproblem_8py_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y
<anchor xml:id="_reproblem_8py_source_1l00086"/>00086 
<anchor xml:id="_reproblem_8py_source_1l00087"/>00087 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;de_cma,&#32;Bite_cpp,&#32;Cma_cpp,&#32;dtime,&#32;logger
<anchor xml:id="_reproblem_8py_source_1l00088"/>00088 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;moretry,&#32;advretry
<anchor xml:id="_reproblem_8py_source_1l00089"/>00089 
<anchor xml:id="_reproblem_8py_source_1l00090"/><link linkend="_namespaceexamples_1_1reproblem_1a172e76e02ef5848a37c7e17b07e0d159">00090</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1reproblem_1a172e76e02ef5848a37c7e17b07e0d159">minimize_plot</link>(problem,&#32;opt,&#32;name,&#32;exp&#32;=&#32;2.0,&#32;num_retries&#32;=&#32;1024,&#32;value_limits=None):
<anchor xml:id="_reproblem_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;moretry.minimize_plot(problem.name&#32;+&#32;<emphasis role="stringliteral">&apos;_&apos;</emphasis>&#32;+&#32;name,&#32;opt,&#32;
<anchor xml:id="_reproblem_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem.fun,&#32;problem.bounds,&#32;problem.weight_bounds,&#32;
<anchor xml:id="_reproblem_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries&#32;=&#32;num_retries,&#32;exp&#32;=&#32;exp,&#32;value_limits&#32;=&#32;value_limits)
<anchor xml:id="_reproblem_8py_source_1l00094"/>00094 
<anchor xml:id="_reproblem_8py_source_1l00095"/><link linkend="_namespaceexamples_1_1reproblem_1a5cf58ca88bffce73f658f62ae55daefc">00095</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1reproblem_1a5cf58ca88bffce73f658f62ae55daefc">adv_minimize_plot</link>(problem,&#32;opt,&#32;name,&#32;value_limit&#32;=&#32;np.inf,&#32;num_retries&#32;=&#32;10240):
<anchor xml:id="_reproblem_8py_source_1l00096"/>00096 &#32;&#32;&#32;&#32;moretry.adv_minimize_plot(problem.name&#32;+&#32;<emphasis role="stringliteral">&apos;_&apos;</emphasis>&#32;+&#32;name,&#32;opt,&#32;
<anchor xml:id="_reproblem_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem.fun,&#32;problem.bounds,&#32;value_limit&#32;=&#32;value_limit,
<anchor xml:id="_reproblem_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries&#32;=&#32;num_retries)
<anchor xml:id="_reproblem_8py_source_1l00099"/>00099 
<anchor xml:id="_reproblem_8py_source_1l00100"/><link linkend="_namespaceexamples_1_1reproblem_1ad84f6c59065eaf6c3871238ac9efc1be">00100</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1reproblem_1ad84f6c59065eaf6c3871238ac9efc1be">main</link>():
<anchor xml:id="_reproblem_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="comment">#numVars,&#32;numObjs,&#32;numConstr,&#32;lower,&#32;upper&#32;=&#32;bounds_re(&apos;RE21&apos;)</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="comment">#rep&#32;=&#32;re_problem(&apos;RE21&apos;,&#32;weight_bounds&#32;=&#32;Bounds([0,&#32;10],&#32;[0.001,&#32;100])&#32;)</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="comment">#rep&#32;=&#32;re_problem(&apos;RE31&apos;,&#32;weight_bounds&#32;=&#32;Bounds([0.1,&#32;0.0001,&#32;0.1],&#32;[1,&#32;0.001,&#32;1])&#32;)</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="comment">#rep&#32;=&#32;re_problem(&apos;RE24&apos;,&#32;weight_bounds&#32;=&#32;Bounds([0.1,&#32;0.1],&#32;[1,&#32;1])&#32;)</emphasis>
<anchor xml:id="_reproblem_8py_source_1l00105"/>00105 &#32;&#32;&#32;&#32;rep&#32;=&#32;<link linkend="_classexamples_1_1reproblem_1_1re__problem">re_problem</link>(<emphasis role="stringliteral">&apos;RE42&apos;</emphasis>,&#32;weight_bounds&#32;=&#32;Bounds([0.2,&#32;0.2,&#32;0.2,&#32;1000],&#32;[1,&#32;1,&#32;1,&#32;1000])&#32;)
<anchor xml:id="_reproblem_8py_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1reproblem_1a172e76e02ef5848a37c7e17b07e0d159">minimize_plot</link>(rep,&#32;de_cma(1000),&#32;<emphasis role="stringliteral">&apos;_decma&apos;</emphasis>,&#32;num_retries&#32;=&#32;320,&#32;exp&#32;=&#32;2.0)
<anchor xml:id="_reproblem_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;
<anchor xml:id="_reproblem_8py_source_1l00108"/>00108 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_reproblem_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1reproblem_1ad84f6c59065eaf6c3871238ac9efc1be">main</link>()
<anchor xml:id="_reproblem_8py_source_1l00110"/>00110 
</programlisting></section>

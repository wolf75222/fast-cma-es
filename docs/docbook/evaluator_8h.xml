<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_evaluator_8h" xml:lang="en-US">
<title>_fcmaescpp/include/evaluator.h File Reference</title>
<indexterm><primary>_fcmaescpp/include/evaluator.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;Eigen/Core&gt;<?linebreak?>#include &lt;iostream&gt;<?linebreak?>#include &lt;algorithm&gt;<?linebreak?>#include &lt;queue&gt;<?linebreak?>#include &lt;mutex&gt;<?linebreak?>#include &lt;thread&gt;<?linebreak?>#include &lt;random&gt;<?linebreak?>#include &lt;vector&gt;<?linebreak?>#include &lt;chrono&gt;<?linebreak?>#include &lt;condition_variable&gt;<?linebreak?>#include &quot;pcg_random.hpp&quot;<?linebreak?></programlisting>Include dependency graph for evaluator.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h__incl.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h__dep__incl.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classblocking__queue">blocking_queue&lt; T &gt;</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_index_val">IndexVal</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_fitness">Fitness</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structvec__id">vec_id</link></para>
</listitem>
            <listitem><para>class <link linkend="_classevaluator">evaluator</link></para>
</listitem>
            <listitem><para>class <link linkend="_classevaluator_1_1evaluator__job">evaluator::evaluator_job</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_evaluator_8h_1ab911b458d875aed088497f4823d543ae">EIGEN_VECTORIZE_SSE2</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_evaluator_8h_1a19bfb27380067c74ae297dd7dad5fb37">Clock</link> = std::chrono::steady_clock</para>
</listitem>
            <listitem><para>typedef Eigen::Matrix&lt; double, Eigen::Dynamic, 1 &gt; <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link></para>
</listitem>
            <listitem><para>typedef Eigen::Matrix&lt; int, Eigen::Dynamic, 1 &gt; <link linkend="_evaluator_8h_1aa45a218a6a9d424e78898121d21f082d">ivec</link></para>
</listitem>
            <listitem><para>typedef Eigen::Matrix&lt; double, Eigen::Dynamic, Eigen::Dynamic &gt; <link linkend="_evaluator_8h_1af0f7533253586ad2aba962e9537d90bc">mat</link></para>
</listitem>
            <listitem><para>typedef Eigen::Matrix&lt; int, Eigen::Dynamic, Eigen::Dynamic &gt; <link linkend="_evaluator_8h_1abf39fef19e3ec51cce88f380c3370bff">imat</link></para>
</listitem>
            <listitem><para>typedef bool(* <link linkend="_evaluator_8h_1af419da391481d5e767cbe038009da309">callback_type</link>) (int, const double *, double *)</para>
</listitem>
            <listitem><para>typedef void(* <link linkend="_evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc">callback_parallel</link>) (int, int, double *, double *)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>static bool <link linkend="_evaluator_8h_1ad0943ebd623281f526e5aee2aa818895">noop_callback</link> (int popsize, const double *x, double *y)</para>
</listitem>
            <listitem><para>static void <link linkend="_evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e">noop_callback_par</link> (int popsize, int dim, double *x, double *y)</para>
</listitem>
            <listitem><para>static Eigen::MatrixXd <link linkend="_evaluator_8h_1a231544ac51b3f9312c104a3b7a3c49a6">normal</link> (int dx, int dy, pcg64 &amp;rs)</para>
</listitem>
            <listitem><para>static Eigen::MatrixXd <link linkend="_evaluator_8h_1a5b652df2286e1f0c4dae7d4dd841bb8f">normalVec</link> (int dim, pcg64 &amp;rs)</para>
</listitem>
            <listitem><para>static Eigen::MatrixXd <link linkend="_evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593">uniform</link> (int dx, int dy, pcg64 &amp;rs)</para>
</listitem>
            <listitem><para>static Eigen::MatrixXd <link linkend="_evaluator_8h_1a28d3e754a2edfdf68753c5562acd87d0">uniformVec</link> (int dim, pcg64 &amp;rs)</para>
</listitem>
            <listitem><para>static double <link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link> (pcg64 &amp;rs)</para>
</listitem>
            <listitem><para>static int <link linkend="_evaluator_8h_1a3f89a72cbd8f38570fbb77117bdc7cbb">randInt</link> (pcg64 &amp;rs, int max)</para>
</listitem>
            <listitem><para>static double <link linkend="_evaluator_8h_1aa3d770d0f4bda035e2cc8c6f5c1b0aee">normreal</link> (pcg64 &amp;rs, double mu, double sdev)</para>
</listitem>
            <listitem><para>static <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_evaluator_8h_1a26c726f0e49c18836df96a8489dc9147">normalVec</link> (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;mean, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;sdev, int dim, pcg64 &amp;rs)</para>
</listitem>
            <listitem><para>static <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link> (int n)</para>
</listitem>
            <listitem><para>static <link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> <link linkend="_evaluator_8h_1ae5c3f13d61f9d2fc9daf17f7c1c56c98">zeros</link> (int n, int m)</para>
</listitem>
            <listitem><para>static <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_evaluator_8h_1a493b3a74ec3481711548e4b506b009cd">constant</link> (int n, double val)</para>
</listitem>
            <listitem><para>static <link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> <link linkend="_evaluator_8h_1af16be3da823298a97b79f99d38769f75">constant</link> (int n, int m, double val)</para>
</listitem>
            <listitem><para>static bool <link linkend="_evaluator_8h_1a85426eb5cecc23caa06090d795034e5c">compareIndexVal</link> (<link linkend="_struct_index_val">IndexVal</link> i1, <link linkend="_struct_index_val">IndexVal</link> i2)</para>
</listitem>
            <listitem><para>static <link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link> <link linkend="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c">sort_index</link> (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;x)</para>
</listitem>
            <listitem><para>static int <link linkend="_evaluator_8h_1a5f25c709f7baaf3ad28d4523f16fa93e">index_min</link> (<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;v)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>static std::uniform_real_distribution <link linkend="_evaluator_8h_1a287b4a368f58519084aafdb8b9ff2142">distr_01</link></para>
</listitem>
            <listitem><para>static std::normal_distribution <link linkend="_evaluator_8h_1a74490c9b525b6b9b79b11e2d0f2fc0be">gauss_01</link> = std::normal_distribution&lt;&gt;(0, 1)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_evaluator_8h_1ab911b458d875aed088497f4823d543ae"/><section>
    <title>EIGEN_VECTORIZE_SSE2</title>
<indexterm><primary>EIGEN_VECTORIZE_SSE2</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>EIGEN_VECTORIZE_SSE2</secondary></indexterm>
<para><computeroutput>#define EIGEN_VECTORIZE_SSE2</computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00024">24</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc"/><section>
    <title>callback_parallel</title>
<indexterm><primary>callback_parallel</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>callback_parallel</secondary></indexterm>
<para><computeroutput>typedef void(* callback_parallel) (int, int, double *, double *)</computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00084">84</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_evaluator_8h_1af419da391481d5e767cbe038009da309"/><section>
    <title>callback_type</title>
<indexterm><primary>callback_type</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>callback_type</secondary></indexterm>
<para><computeroutput>typedef bool(* callback_type) (int, const double *, double *)</computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00082">82</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_evaluator_8h_1a19bfb27380067c74ae297dd7dad5fb37"/><section>
    <title>Clock</title>
<indexterm><primary>Clock</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>Clock</secondary></indexterm>
<para><computeroutput>using <link linkend="_evaluator_8h_1a19bfb27380067c74ae297dd7dad5fb37">Clock</link> = std::chrono::steady_clock</computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00027">27</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_evaluator_8h_1abf39fef19e3ec51cce88f380c3370bff"/><section>
    <title>imat</title>
<indexterm><primary>imat</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>imat</secondary></indexterm>
<para><computeroutput>typedef Eigen::Matrix&lt;int, Eigen::Dynamic, Eigen::Dynamic&gt; <link linkend="_evaluator_8h_1abf39fef19e3ec51cce88f380c3370bff">imat</link></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00080">80</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_evaluator_8h_1aa45a218a6a9d424e78898121d21f082d"/><section>
    <title>ivec</title>
<indexterm><primary>ivec</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>ivec</secondary></indexterm>
<para><computeroutput>typedef Eigen::Matrix&lt;int, Eigen::Dynamic, 1&gt; <link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00078">78</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_evaluator_8h_1af0f7533253586ad2aba962e9537d90bc"/><section>
    <title>mat</title>
<indexterm><primary>mat</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>mat</secondary></indexterm>
<para><computeroutput>typedef Eigen::Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic&gt; <link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00079">79</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f"/><section>
    <title>vec</title>
<indexterm><primary>vec</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>vec</secondary></indexterm>
<para><computeroutput>typedef Eigen::Matrix&lt;double, Eigen::Dynamic, 1&gt; <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00077">77</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_evaluator_8h_1a85426eb5cecc23caa06090d795034e5c"/><section>
    <title>compareIndexVal()</title>
<indexterm><primary>compareIndexVal</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>compareIndexVal</secondary></indexterm>
<para><computeroutput>static bool compareIndexVal (<link linkend="_struct_index_val">IndexVal</link> i1, <link linkend="_struct_index_val">IndexVal</link> i2)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00160">160</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a85426eb5cecc23caa06090d795034e5c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1a493b3a74ec3481711548e4b506b009cd"/><section>
    <title>constant()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>constant</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>constant</secondary></indexterm>
<para><computeroutput>static <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> constant (int n, double val)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00147">147</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a493b3a74ec3481711548e4b506b009cd_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1af16be3da823298a97b79f99d38769f75"/><section>
    <title>constant()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>constant</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>constant</secondary></indexterm>
<para><computeroutput>static <link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> constant (int n, int m, double val)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00151">151</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_evaluator_8h_1a5f25c709f7baaf3ad28d4523f16fa93e"/><section>
    <title>index_min()</title>
<indexterm><primary>index_min</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>index_min</secondary></indexterm>
<para><computeroutput>static int index_min (<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; v)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00177">177</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_evaluator_8h_1ad0943ebd623281f526e5aee2aa818895"/><section>
    <title>noop_callback()</title>
<indexterm><primary>noop_callback</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>noop_callback</secondary></indexterm>
<para><computeroutput>static bool noop_callback (int popsize, const double * x, double * y)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00086">86</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_ad0943ebd623281f526e5aee2aa818895_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e"/><section>
    <title>noop_callback_par()</title>
<indexterm><primary>noop_callback_par</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>noop_callback_par</secondary></indexterm>
<para><computeroutput>static void noop_callback_par (int popsize, int dim, double * x, double * y)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00090">90</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_ac05c49788a31e5f7cb8efbe8ca3b548e_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1a231544ac51b3f9312c104a3b7a3c49a6"/><section>
    <title>normal()</title>
<indexterm><primary>normal</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>normal</secondary></indexterm>
<para><computeroutput>static Eigen::MatrixXd normal (int dx, int dy, pcg64 &amp; rs)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00098">98</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a231544ac51b3f9312c104a3b7a3c49a6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1a26c726f0e49c18836df96a8489dc9147"/><section>
    <title>normalVec()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>normalVec</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>normalVec</secondary></indexterm>
<para><computeroutput>static <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> normalVec (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; mean, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; sdev, int dim, pcg64 &amp; rs)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00134">134</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a26c726f0e49c18836df96a8489dc9147_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1a5b652df2286e1f0c4dae7d4dd841bb8f"/><section>
    <title>normalVec()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>normalVec</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>normalVec</secondary></indexterm>
<para><computeroutput>static Eigen::MatrixXd normalVec (int dim, pcg64 &amp; rs)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00104">104</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a5b652df2286e1f0c4dae7d4dd841bb8f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1aa3d770d0f4bda035e2cc8c6f5c1b0aee"/><section>
    <title>normreal()</title>
<indexterm><primary>normreal</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>normreal</secondary></indexterm>
<para><computeroutput>static double normreal (pcg64 &amp; rs, double mu, double sdev)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00130">130</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_aa3d770d0f4bda035e2cc8c6f5c1b0aee_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b"/><section>
    <title>rand01()</title>
<indexterm><primary>rand01</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>rand01</secondary></indexterm>
<para><computeroutput>static double rand01 (pcg64 &amp; rs)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00122">122</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a0007d50439e7d7122b6dd54d05c7c45b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1a3f89a72cbd8f38570fbb77117bdc7cbb"/><section>
    <title>randInt()</title>
<indexterm><primary>randInt</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>randInt</secondary></indexterm>
<para><computeroutput>static int randInt (pcg64 &amp; rs, int max)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00126">126</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a3f89a72cbd8f38570fbb77117bdc7cbb_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c"/><section>
    <title>sort_index()</title>
<indexterm><primary>sort_index</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>sort_index</secondary></indexterm>
<para><computeroutput>static <link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link> sort_index (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; x)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00164">164</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a7689f88ea48c85c22d9b34208decd67c_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a7689f88ea48c85c22d9b34208decd67c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593"/><section>
    <title>uniform()</title>
<indexterm><primary>uniform</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>uniform</secondary></indexterm>
<para><computeroutput>static Eigen::MatrixXd uniform (int dx, int dy, pcg64 &amp; rs)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00110">110</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_ad408c1ac0c479863b2d1291c483c5593_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1a28d3e754a2edfdf68753c5562acd87d0"/><section>
    <title>uniformVec()</title>
<indexterm><primary>uniformVec</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>uniformVec</secondary></indexterm>
<para><computeroutput>static Eigen::MatrixXd uniformVec (int dim, pcg64 &amp; rs)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00116">116</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a28d3e754a2edfdf68753c5562acd87d0_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90"/><section>
    <title>zeros()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>zeros</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>zeros</secondary></indexterm>
<para><computeroutput>static <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> zeros (int n)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00139">139</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="evaluator_8h_a909812174fa9829bc49f6e00edb00b90_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_evaluator_8h_1ae5c3f13d61f9d2fc9daf17f7c1c56c98"/><section>
    <title>zeros()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>zeros</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>zeros</secondary></indexterm>
<para><computeroutput>static <link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> zeros (int n, int m)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00143">143</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_evaluator_8h_1a287b4a368f58519084aafdb8b9ff2142"/><section>
    <title>distr_01</title>
<indexterm><primary>distr_01</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>distr_01</secondary></indexterm>
<para><computeroutput>std::uniform_real_distribution distr_01<computeroutput>[static]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::uniform_real_distribution&lt;&gt;(0,&#32;1)
</programlisting><para>
Definition at line <link linkend="_evaluator_8h_source_1l00093">93</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_evaluator_8h_1a74490c9b525b6b9b79b11e2d0f2fc0be"/><section>
    <title>gauss_01</title>
<indexterm><primary>gauss_01</primary><secondary>evaluator.h</secondary></indexterm>
<indexterm><primary>evaluator.h</primary><secondary>gauss_01</secondary></indexterm>
<para><computeroutput>std::normal_distribution gauss_01 = std::normal_distribution&lt;&gt;(0, 1)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00096">96</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
</section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classfcmaes_1_1optimizer_1_1random__search" xml:lang="en-US">
<title>fcmaes.optimizer.random_search Class Reference</title>
<indexterm><primary>fcmaes.optimizer.random_search</primary></indexterm>
<para>

<para>A class for performing optimization using a random search strategy. </para>
 
</para>
Inheritance diagram for fcmaes.optimizer.random_search:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1random__search__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for fcmaes.optimizer.random_search:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1random__search__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1random__search_1a6fa5aeb0f39108286986746640a41331">__init__</link> (self, <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000)</para>

<para>Initializes an instance of the optimizer with a random search strategy. </para>
</listitem>
            <listitem><para>Tuple[np.ndarray, float, int] <link linkend="_classfcmaes_1_1optimizer_1_1random__search_1a32252573912d707c4725f05041d70db1">minimize</link> (self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</para>

<para>Minimizes a given function within the specified bounds using a random sampling method. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[str] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>=&apos;&apos;)</para>

<para>Initializes the class with specific parameters including the maximum number of evaluations and the name. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link> (self, store=None)</para>

<para>Evaluates and returns the maximum number of evaluations based on the provided store or the object&apos;s default value. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link> (self, store=None)</para>

<para>Gets the count of runs from the provided store. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Public Attributes inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link> = max_evaluations</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link> = name</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A class for performing optimization using a random search strategy. </para>



<para>This class implements a random search optimization algorithm, which is a straightforward method that randomly samples candidate solutions within the specified bounds to minimize the objective function. It is useful for exploring high-dimensional or complicated search spaces and does not rely on gradient information.</para>

<para><literallayout><computeroutput>       process. Determines the computational budget for the search.
</computeroutput></literallayout> </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02444">2444</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1random__search_1a6fa5aeb0f39108286986746640a41331"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>fcmaes.optimizer.random_search</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.random_search</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.random_search.__init__ ( self,  max_evaluations = <computeroutput>50000</computeroutput>
)</computeroutput></para><para>

<para>Initializes an instance of the optimizer with a random search strategy. </para>
</para>

<para><literallayout><computeroutput>       max_evaluations (int, optional): The maximum number of evaluations for
           the optimization process. Defaults to 50000.
</computeroutput></literallayout> </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02456">2456</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1random__search_1a32252573912d707c4725f05041d70db1"/><section>
    <title>minimize()</title>
<indexterm><primary>minimize</primary><secondary>fcmaes.optimizer.random_search</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.random_search</primary><secondary>minimize</secondary></indexterm>
<para><computeroutput> Tuple[np.ndarray, float, int] fcmaes.optimizer.random_search.minimize ( self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[float]  sdevs = <computeroutput>None</computeroutput>
, Optional[Generator]  rg = <computeroutput>Generator(PCG64DXSM())</computeroutput>
,  store = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Minimizes a given function within the specified bounds using a random sampling method. </para>
</para>

<para>The method repeatedly samples points within the bounds, evaluates the function at those points, and keeps track of the point with the minimum function value.</para>

<para><literallayout><computeroutput>       fun (Callable[[ArrayLike], float]): Objective function to be minimized.
</computeroutput></literallayout> 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>bounds</entry><entry>
<para>Optimization bounds specifying the lower (lb) and upper (ub) limits for the variables. </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>Initial guess for the solution (ignored by this implementation). </para>
</entry>
                            </row>
                            <row>
<entry>sdevs</entry><entry>
<para>Not used in the implementation (ignored). </para>
</entry>
                            </row>
                            <row>
<entry>rg</entry><entry>
<para>Random number generator to sample points within bounds, defaults to <computeroutput>Generator(PCG64DXSM())</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>store</entry><entry>
<para>Auxiliary data structure to track the state or additional information (details not specified).</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Tuple[np.ndarray, float, int]: A tuple containing the best input point found (x_min), the minimum function value (y_min), and the total number of function evaluations performed (evals).</para>
</formalpara>
<literallayout><computeroutput>       None explicitly raised, but function evaluations or sampling may fail
       due to improper configuration or input.
</computeroutput></literallayout> </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02485">2485</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1random__search_a32252573912d707c4725f05041d70db1_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
fcmaes/<link linkend="_optimizer_8py">optimizer.py</link></section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_crfmnes_8py_source" xml:lang="en-US">
<title>crfmnes.py</title>
<indexterm><primary>fcmaes/crfmnes.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_crfmnes_8py_source_1l00001"/><link linkend="_namespacefcmaes_1_1crfmnes">00001</link> <emphasis role="comment">#&#32;-*-&#32;coding:&#32;utf-8&#32;-*-</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00002"/>00002 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00003"/>00003 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00004"/>00004 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00005"/>00005 <emphasis role="stringliteral">&#32;Fast&#32;CMA-ES&#32;-&#32;version&#32;1.6.11</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00006"/>00006 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00007"/>00007 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00008"/>00008 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Latitude</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00009"/>00009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00010"/>00010 <emphasis role="stringliteral">&#32;License:&#32;MIT</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00011"/>00011 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00012"/>00012 <emphasis role="stringliteral">&#32;File:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00013"/>00013 <emphasis role="stringliteral">&#32;&#32;-&#32;crfmnes.py</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00014"/>00014 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00015"/>00015 <emphasis role="stringliteral">&#32;Description:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00016"/>00016 <emphasis role="stringliteral">&#32;&#32;-&#32;Numpy&#32;based&#32;implementation&#32;of&#32;Fast&#32;Moving&#32;Natural&#32;Evolution&#32;Strategy</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00017"/>00017 <emphasis role="stringliteral">&#32;&#32;for&#32;High-Dimensional&#32;Problems&#32;(CR-FM-NES),&#32;see&#32;[2].</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00018"/>00018 <emphasis role="stringliteral">&#32;&#32;-&#32;Derived&#32;from&#32;[1]&#32;and&#32;[3].</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00019"/>00019 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00020"/>00020 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00021"/>00021 <emphasis role="stringliteral">&#32;Authors:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00022"/>00022 <emphasis role="stringliteral">&#32;&#32;-&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00023"/>00023 <emphasis role="stringliteral">&#32;&#32;-&#32;romain.despoullains@latitude.eu</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00024"/>00024 <emphasis role="stringliteral">&#32;&#32;-&#32;corentin.generet@latitude.eu</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00025"/>00025 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00026"/>00026 <emphasis role="stringliteral">&#32;References:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00027"/>00027 <emphasis role="stringliteral">&#32;&#32;-&#32;[1]&#32;https://github.com/dietmarwo/fast-cma-es</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00028"/>00028 <emphasis role="stringliteral">&#32;&#32;-&#32;[2]&#32;https://arxiv.org/abs/2201.11422</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00029"/>00029 <emphasis role="stringliteral">&#32;&#32;-&#32;[3]&#32;https://github.com/nomuramasahir0/crfmnes</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00030"/>00030 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00031"/>00031 <emphasis role="stringliteral">&#32;Documentation:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00032"/>00032 <emphasis role="stringliteral">&#32;&#32;-</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00033"/>00033 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00034"/>00034 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00035"/>00035 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00036"/>00036 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00037"/>00037 <emphasis role="keyword">import</emphasis>&#32;math
<anchor xml:id="_crfmnes_8py_source_1l00038"/>00038 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_crfmnes_8py_source_1l00039"/>00039 <emphasis role="keyword">import</emphasis>&#32;os
<anchor xml:id="_crfmnes_8py_source_1l00040"/>00040 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;OptimizeResult,&#32;Bounds
<anchor xml:id="_crfmnes_8py_source_1l00041"/>00041 <emphasis role="keyword">from</emphasis>&#32;numpy.random&#32;<emphasis role="keyword">import</emphasis>&#32;PCG64DXSM,&#32;Generator
<anchor xml:id="_crfmnes_8py_source_1l00042"/>00042 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1evaluator">fcmaes.evaluator</link>&#32;<emphasis role="keyword">import</emphasis>&#32;_get_bounds,&#32;_fitness,&#32;serial,&#32;parallel
<anchor xml:id="_crfmnes_8py_source_1l00043"/>00043 
<anchor xml:id="_crfmnes_8py_source_1l00044"/>00044 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;Optional,&#32;Callable,&#32;Union,&#32;Dict
<anchor xml:id="_crfmnes_8py_source_1l00045"/>00045 <emphasis role="keyword">from</emphasis>&#32;numpy.typing&#32;<emphasis role="keyword">import</emphasis>&#32;ArrayLike
<anchor xml:id="_crfmnes_8py_source_1l00046"/>00046 
<anchor xml:id="_crfmnes_8py_source_1l00047"/>00047 
<anchor xml:id="_crfmnes_8py_source_1l00048"/>00048 
<anchor xml:id="_crfmnes_8py_source_1l00049"/>00049 <emphasis role="comment">#&#32;evaluation&#32;value&#32;of&#32;the&#32;infeasible&#32;solution</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00050"/>00050 INFEASIBLE&#32;=&#32;np.inf
<anchor xml:id="_crfmnes_8py_source_1l00051"/>00051 
<anchor xml:id="_crfmnes_8py_source_1l00052"/>00052 os.environ[<emphasis role="stringliteral">&apos;MKL_DEBUG_CPU_TYPE&apos;</emphasis>]&#32;=&#32;<emphasis role="stringliteral">&apos;5&apos;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00053"/>00053 
<anchor xml:id="_crfmnes_8py_source_1l00054"/>00054 <emphasis role="keyword">def&#32;</emphasis>minimize(fun:&#32;Callable[[ArrayLike],&#32;float],
<anchor xml:id="_crfmnes_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_crfmnes_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_crfmnes_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma:&#32;Optional[float]&#32;=&#32;0.3,
<anchor xml:id="_crfmnes_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;32,
<anchor xml:id="_crfmnes_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;100000,
<anchor xml:id="_crfmnes_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_crfmnes_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_crfmnes_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate:&#32;Optional[Callable[[ArrayLike,&#32;float],&#32;bool]]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_crfmnes_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),
<anchor xml:id="_crfmnes_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runid:&#32;Optional[int]&#32;=&#32;0,
<anchor xml:id="_crfmnes_8py_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">False</emphasis>,
<anchor xml:id="_crfmnes_8py_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;options:&#32;Optional[Dict]&#32;=&#32;{}
<anchor xml:id="_crfmnes_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;-&gt;&#32;OptimizeResult:
<anchor xml:id="_crfmnes_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00069"/>00069 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Minimizes&#32;an&#32;objective&#32;function&#32;using&#32;the&#32;CR-FM-NES&#32;algorithm.&#32;This&#32;method&#32;is&#32;suitable&#32;for</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00070"/>00070 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;problems&#32;in&#32;continuous&#32;domains&#32;where&#32;solutions&#32;are&#32;represented&#32;by&#32;real-valued&#32;vectors.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00071"/>00071 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;It&#32;supports&#32;various&#32;features&#32;like&#32;boundary&#32;constraints,&#32;parallel&#32;evaluations,&#32;fitness&#32;normalization,</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00072"/>00072 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;custom&#32;termination&#32;conditions.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00073"/>00073 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00074"/>00074 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00075"/>00075 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;be&#32;minimized.&#32;It&#32;should&#32;accept</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00076"/>00076 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;single&#32;input&#32;representing&#32;a&#32;candidate&#32;solution&#32;and&#32;return&#32;a&#32;scalar&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00077"/>00077 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;boundary&#32;constraints&#32;for&#32;the&#32;optimization&#32;problem.&#32;It&#32;defines</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00078"/>00078 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;feasible&#32;region&#32;for&#32;the&#32;search.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00079"/>00079 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;(Optional[ArrayLike]):&#32;An&#32;optional&#32;initial&#32;guess&#32;for&#32;the&#32;optimization.&#32;If&#32;not&#32;provided,</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00080"/>00080 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;algorithm&#32;will&#32;randomly&#32;initialize&#32;a&#32;starting&#32;point.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00081"/>00081 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma&#32;(Optional[float]):&#32;The&#32;initial&#32;standard&#32;deviation&#32;for&#32;the&#32;search&#32;distribution.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00082"/>00082 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;0.3.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00083"/>00083 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;The&#32;population&#32;size&#32;for&#32;the&#32;evolutionary&#32;algorithm.&#32;Defaults&#32;to&#32;32.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00084"/>00084 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;The&#32;maximum&#32;number&#32;of&#32;allowable&#32;function&#32;evaluations</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00085"/>00085 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;before&#32;termination.&#32;Defaults&#32;to&#32;100000.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00086"/>00086 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;parallel&#32;workers&#32;to&#32;use&#32;for&#32;fitness&#32;evaluation.&#32;If&#32;not</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00087"/>00087 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specified,&#32;defaults&#32;to&#32;sequential&#32;execution.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00088"/>00088 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;The&#32;target&#32;fitness&#32;value&#32;that&#32;will&#32;terminate&#32;the&#32;algorithm</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00089"/>00089 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;reached.&#32;Defaults&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00090"/>00090 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate&#32;(Optional[Callable[[ArrayLike,&#32;float],&#32;bool]]):&#32;A&#32;custom&#32;termination&#32;function.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00091"/>00091 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;provided,&#32;it&#32;should&#32;return&#32;a&#32;boolean&#32;indicating&#32;whether&#32;optimization&#32;should&#32;stop.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00092"/>00092 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;A&#32;random&#32;number&#32;generator&#32;for&#32;reproducibility.&#32;Defaults&#32;to</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00093"/>00093 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`Generator(PCG64DXSM())`.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00094"/>00094 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runid&#32;(Optional[int]):&#32;An&#32;identifier&#32;for&#32;the&#32;optimization&#32;run,&#32;for&#32;tracking&#32;purposes.&#32;Default</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00095"/>00095 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;0.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00096"/>00096 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;(Optional[bool]):&#32;Flag&#32;indicating&#32;whether&#32;to&#32;perform&#32;fitness&#32;normalization.&#32;Defaults</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00097"/>00097 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;False.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00098"/>00098 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;options&#32;(Optional[Dict]):&#32;A&#32;dictionary&#32;containing&#32;additional&#32;configuration&#32;parameters&#32;for</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00099"/>00099 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimizer.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00100"/>00100 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00101"/>00101 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00102"/>00102 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult:&#32;A&#32;data&#32;structure&#32;containing&#32;the&#32;results&#32;of&#32;the&#32;optimization.&#32;Attributes&#32;include</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00103"/>00103 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimal&#32;solution&#32;found,&#32;its&#32;fitness&#32;value,&#32;the&#32;number&#32;of&#32;function&#32;evaluations&#32;and&#32;iterations,</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00104"/>00104 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;as&#32;well&#32;as&#32;termination&#32;status&#32;and&#32;success&#32;flag.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00105"/>00105 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00106"/>00106 
<anchor xml:id="_crfmnes_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;cr&#32;=&#32;CRFMNES(<emphasis role="keywordtype">None</emphasis>,&#32;bounds,&#32;x0,&#32;input_sigma,&#32;popsize,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations,&#32;stop_fitness,&#32;is_terminate,&#32;runid,&#32;normalize,&#32;options,&#32;rg,&#32;workers,&#32;fun)
<anchor xml:id="_crfmnes_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;cr.optimize()
<anchor xml:id="_crfmnes_8py_source_1l00111"/>00111 
<anchor xml:id="_crfmnes_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;OptimizeResult(x=cr.f.decode(cr.x_best),&#32;fun=cr.f_best,&#32;nfev=cr.no_of_evals,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nit=cr.g,&#32;status=cr.stop,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;success=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_crfmnes_8py_source_1l00115"/>00115 
<anchor xml:id="_crfmnes_8py_source_1l00116"/>00116 <emphasis role="keyword">class&#32;</emphasis>CRFMNES:
<anchor xml:id="_crfmnes_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00118"/>00118 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;CRFMNES&#32;is&#32;an&#32;implementation&#32;of&#32;the&#32;Covariance&#32;Rank-based&#32;Fast&#32;Mutation&#32;Evolution&#32;Strategy</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00119"/>00119 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;(CR-FM-NES),&#32;an&#32;optimization&#32;algorithm&#32;for&#32;solving&#32;problems&#32;with&#32;or&#32;without&#32;constraints.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00120"/>00120 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00121"/>00121 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;is&#32;designed&#32;for&#32;evolutionary&#32;optimization&#32;processes,&#32;providing&#32;features&#32;for&#32;handling</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00122"/>00122 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;constraints,&#32;managing&#32;population&#32;rankings,&#32;and&#32;utilizing&#32;various&#32;evolutionary&#32;strategies&#32;for</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00123"/>00123 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;adaptive&#32;parameter&#32;tuning.&#32;It&#32;internally&#32;manages&#32;individual&#32;solution&#32;vectors,&#32;constraints,</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00124"/>00124 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;population&#32;size,&#32;and&#32;custom&#32;fitness&#32;evaluation&#32;functions.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00125"/>00125 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00126"/>00126 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00127"/>00127 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;Number&#32;of&#32;dimensions&#32;in&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00128"/>00128 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sigma&#32;(float):&#32;Mutation&#32;strength&#32;for&#32;adaptive&#32;parameter&#32;control.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00129"/>00129 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;Number&#32;of&#32;individuals&#32;in&#32;the&#32;population.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00130"/>00130 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(int):&#32;Maximum&#32;number&#32;of&#32;function&#32;evaluations&#32;allowed&#32;before&#32;termination.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00131"/>00131 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;Target&#32;value&#32;for&#32;the&#32;optimization.&#32;Process&#32;terminates&#32;if&#32;reached.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00132"/>00132 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate&#32;(bool&#32;or&#32;None):&#32;Flags&#32;whether&#32;the&#32;optimization&#32;should&#32;terminate&#32;prematurely.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00133"/>00133 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Generator):&#32;Random&#32;number&#32;generator&#32;instance&#32;for&#32;reproducibility&#32;and&#32;randomness.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00134"/>00134 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runid&#32;(int):&#32;Unique&#32;identifier&#32;for&#32;distinguishing&#32;optimization&#32;runs.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00135"/>00135 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constraint&#32;(List[List[float]]):&#32;Bounds&#32;for&#32;variables.&#32;Used&#32;for&#32;constraint&#32;handling.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00136"/>00136 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v&#32;(np.ndarray):&#32;Evolution&#32;vector&#32;for&#32;controlling&#32;the&#32;search&#32;directions.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00137"/>00137 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;D&#32;(np.ndarray):&#32;Scaling&#32;factor&#32;for&#32;mutation&#32;parameters.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00138"/>00138 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;penalty_coef&#32;(float):&#32;Coefficient&#32;for&#32;penalizing&#32;constraint&#32;violation.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00139"/>00139 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use_constraint_violation&#32;(bool):&#32;Indicates&#32;if&#32;constraint&#32;violations&#32;should&#32;influence&#32;optimization.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00140"/>00140 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;w_rank_hat&#32;(np.ndarray):&#32;Rank-based&#32;weights&#32;before&#32;normalization.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00141"/>00141 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;w_rank&#32;(np.ndarray):&#32;Normalized&#32;rank&#32;weights&#32;used&#32;for&#32;recombination.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00142"/>00142 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mueff&#32;(float):&#32;Variance&#32;effective&#32;selection&#32;mass&#32;for&#32;mutation&#32;and&#32;update&#32;dynamics.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00143"/>00143 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cs&#32;(float):&#32;Cumulation&#32;step-size&#32;adaptation&#32;parameter.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00144"/>00144 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cc&#32;(float):&#32;Cumulation&#32;rank-one&#32;strategy&#32;parameter.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00145"/>00145 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c1_cma&#32;(float):&#32;Rank-one&#32;covariance&#32;matrix&#32;update&#32;learning&#32;rate.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00146"/>00146 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chiN&#32;(float):&#32;Expected&#32;length&#32;for&#32;normal&#32;distribution&#32;under&#32;CMA-ES&#32;geometry.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00147"/>00147 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc&#32;(np.ndarray):&#32;Evolution&#32;path&#32;for&#32;cumulative&#32;rank-one&#32;strategy&#32;updates.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00148"/>00148 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps&#32;(np.ndarray):&#32;Evolution&#32;path&#32;for&#32;cumulative&#32;step-size&#32;adaptation.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00149"/>00149 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h_inv&#32;(float):&#32;Inverse&#32;of&#32;an&#32;internal&#32;constant,&#32;utilized&#32;for&#32;certain&#32;computations.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00150"/>00150 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eta_m&#32;(float):&#32;Learning&#32;rate&#32;for&#32;model&#32;vector&#32;updates.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00151"/>00151 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eta_move_sigma&#32;(float):&#32;Learning&#32;rate&#32;for&#32;standard&#32;mutation&#32;updates.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00152"/>00152 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g&#32;(int):&#32;Current&#32;generation&#32;or&#32;iteration&#32;count&#32;of&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00153"/>00153 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;no_of_evals&#32;(int):&#32;Total&#32;number&#32;of&#32;function&#32;evaluations&#32;performed&#32;so&#32;far.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00154"/>00154 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iteration&#32;(int):&#32;Internal&#32;tracking&#32;of&#32;algorithm&#32;iterations.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00155"/>00155 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop&#32;(int):&#32;Indicates&#32;the&#32;status&#32;of&#32;termination&#32;(-1:&#32;error,&#32;0:&#32;not&#32;stopped,&#32;&gt;0:&#32;stopped).</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00156"/>00156 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idxp&#32;(np.ndarray):&#32;Indices&#32;for&#32;positive&#32;directions&#32;during&#32;symmetry&#32;computation.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00157"/>00157 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idxm&#32;(np.ndarray):&#32;Indices&#32;for&#32;negative&#32;directions&#32;during&#32;symmetry&#32;computation.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00158"/>00158 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;z&#32;(np.ndarray):&#32;Mutant&#32;vectors&#32;prior&#32;to&#32;rescaling,&#32;used&#32;in&#32;evolution&#32;processes.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00159"/>00159 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f_best&#32;(float):&#32;Best&#32;fitness&#32;value&#32;observed&#32;in&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00160"/>00160 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_best&#32;(np.ndarray):&#32;Solution&#32;vector&#32;corresponding&#32;to&#32;the&#32;best&#32;observed&#32;fitness.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00161"/>00161 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__init__(self,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;=&#32;None,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_crfmnes_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma:&#32;Optional[Union[float,&#32;ArrayLike,&#32;Callable]]&#32;=&#32;0.3,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;32,&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;100000,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate:&#32;Optional[bool]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runid:&#32;Optional[int]&#32;=&#32;0,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">False</emphasis>,
<anchor xml:id="_crfmnes_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;options:&#32;Optional[Dict]&#32;=&#32;{},&#32;
<anchor xml:id="_crfmnes_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;
<anchor xml:id="_crfmnes_8py_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_crfmnes_8py_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Optional[Callable[[ArrayLike],&#32;float]]&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;x:&#32;0):
<anchor xml:id="_crfmnes_8py_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00178"/>00178 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;class&#32;with&#32;parameters&#32;for&#32;optimization.&#32;This&#32;method&#32;allows&#32;for&#32;the&#32;configuration&#32;of&#32;various</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00179"/>00179 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;parameters,&#32;including&#32;the&#32;dimensional&#32;bounds,&#32;population&#32;size,&#32;sigma&#32;value,&#32;stopping&#32;criteria,</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00180"/>00180 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;many&#32;others.&#32;It&#32;ensures&#32;consistency&#32;across&#32;parameters,&#32;initializes&#32;the&#32;fitness&#32;function,&#32;sets&#32;up&#32;constraints,</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00181"/>00181 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;prepares&#32;internal&#32;attributes&#32;for&#32;optimization.&#32;The&#32;class&#32;is&#32;tailored&#32;for&#32;scenarios&#32;where&#32;optimization&#32;must</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00182"/>00182 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;conducted&#32;within&#32;specified&#32;bounds&#32;using&#32;a&#32;population-based&#32;approach.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00183"/>00183 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00184"/>00184 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00185"/>00185 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(Optional[int]):&#32;Dimensionality&#32;of&#32;the&#32;problem.&#32;If&#32;not&#32;specified,&#32;it&#32;is&#32;inferred&#32;from&#32;bounds&#32;or&#32;x0.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00186"/>00186 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;Bounds&#32;for&#32;the&#32;optimization&#32;problem.&#32;Each&#32;dimension&#32;can&#32;have&#32;distinct&#32;bounds.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00187"/>00187 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;for&#32;optimization.&#32;If&#32;not&#32;provided,&#32;derived&#32;using&#32;bounds&#32;and&#32;dimensions.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00188"/>00188 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma&#32;(Optional[Union[float,&#32;ArrayLike,&#32;Callable]]):&#32;Sigma&#32;parameter&#32;that&#32;controls&#32;the&#32;search&#32;spread.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00189"/>00189 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;0.3.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00190"/>00190 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Population&#32;size.&#32;Should&#32;be&#32;an&#32;even&#32;number.&#32;If&#32;odd,&#32;it&#32;will&#32;be&#32;automatically&#32;adjusted.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00191"/>00191 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;Maximum&#32;evaluations&#32;allowed&#32;for&#32;the&#32;optimization.&#32;Default&#32;is&#32;100,000.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00192"/>00192 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;Target&#32;fitness&#32;threshold&#32;for&#32;stopping&#32;optimization.&#32;Default&#32;is&#32;-infinity.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00193"/>00193 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate&#32;(Optional[bool]):&#32;Whether&#32;termination&#32;is&#32;allowed&#32;based&#32;on&#32;certain&#32;conditions.&#32;Default&#32;is&#32;None.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00194"/>00194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runid&#32;(Optional[int]):&#32;Run&#32;ID&#32;to&#32;differentiate&#32;optimization&#32;runs.&#32;Default&#32;is&#32;0.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00195"/>00195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;(Optional[bool]):&#32;Whether&#32;to&#32;normalize&#32;inputs.&#32;Default&#32;is&#32;False.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00196"/>00196 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;options&#32;(Optional[Dict]):&#32;Additional&#32;options&#32;for&#32;customization,&#32;such&#32;as&#32;constraints&#32;or&#32;penalties.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00197"/>00197 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;Random&#32;number&#32;generator&#32;for&#32;initializing&#32;population.&#32;Default&#32;uses&#32;PCG64DXSM.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00198"/>00198 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;Number&#32;of&#32;workers&#32;for&#32;parallel&#32;evaluations.&#32;Default&#32;is&#32;None,&#32;meaning&#32;serial&#32;execution.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00199"/>00199 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Optional[Callable[[ArrayLike],&#32;float]]):&#32;Optimization&#32;function&#32;to&#32;be&#32;evaluated.&#32;Default&#32;is&#32;a&#32;zero&#32;function.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00200"/>00200 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;popsize&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_crfmnes_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;=&#32;32&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;popsize&#32;%&#32;2&#32;==&#32;1:&#32;<emphasis role="comment">#&#32;requires&#32;even&#32;popsize</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;+=&#32;1
<anchor xml:id="_crfmnes_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;dim&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_crfmnes_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;x0&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:&#32;dim&#32;=&#32;len(x0)
<anchor xml:id="_crfmnes_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:&#32;
<anchor xml:id="_crfmnes_8py_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;bounds&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:&#32;dim&#32;=&#32;len(bounds.lb)
<anchor xml:id="_crfmnes_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower,&#32;upper,&#32;guess&#32;=&#32;_get_bounds(dim,&#32;bounds,&#32;x0,&#32;rg)&#32;
<anchor xml:id="_crfmnes_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.fun&#32;=&#32;serial(fun)&#32;<emphasis role="keywordflow">if</emphasis>&#32;(workers&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;workers&#32;&lt;=&#32;1)&#32;<emphasis role="keywordflow">else</emphasis>&#32;parallel(fun,&#32;workers)&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.f&#32;=&#32;_fitness(self.fun,&#32;lower,&#32;upper,&#32;normalize)&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;options&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_crfmnes_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;options&#32;=&#32;{}
<anchor xml:id="_crfmnes_8py_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;lower&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_crfmnes_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;options[<emphasis role="stringliteral">&apos;constraint&apos;</emphasis>]&#32;=&#32;[&#32;[lower[i],&#32;upper[i]]&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(dim)]&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.constraint&#32;=&#32;options.get(<emphasis role="stringliteral">&apos;constraint&apos;</emphasis>,&#32;[[-np.inf,&#32;np.inf]&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(dim)])
<anchor xml:id="_crfmnes_8py_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="stringliteral">&apos;seed&apos;</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;options.keys():
<anchor xml:id="_crfmnes_8py_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.random.seed(options[<emphasis role="stringliteral">&apos;seed&apos;</emphasis>])
<anchor xml:id="_crfmnes_8py_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sigma&#32;=&#32;input_sigma
<anchor xml:id="_crfmnes_8py_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;np.isscalar(sigma):
<anchor xml:id="_crfmnes_8py_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sigma&#32;=&#32;np.mean(sigma)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.m&#32;=&#32;np.array([self.f.encode(guess)]).T
<anchor xml:id="_crfmnes_8py_source_1l00223"/>00223 
<anchor xml:id="_crfmnes_8py_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.dim&#32;=&#32;dim
<anchor xml:id="_crfmnes_8py_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.sigma&#32;=&#32;sigma
<anchor xml:id="_crfmnes_8py_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.popsize&#32;=&#32;popsize
<anchor xml:id="_crfmnes_8py_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.max_evaluations&#32;=&#32;max_evaluations
<anchor xml:id="_crfmnes_8py_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.stop_fitness&#32;=&#32;stop_fitness
<anchor xml:id="_crfmnes_8py_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.is_terminate&#32;=&#32;is_terminate
<anchor xml:id="_crfmnes_8py_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.rg&#32;=&#32;rg
<anchor xml:id="_crfmnes_8py_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.runid&#32;=&#32;runid
<anchor xml:id="_crfmnes_8py_source_1l00233"/>00233 
<anchor xml:id="_crfmnes_8py_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.v&#32;=&#32;options.get(<emphasis role="stringliteral">&apos;v&apos;</emphasis>,&#32;self.rg.<link linkend="_evaluator_8h_1a231544ac51b3f9312c104a3b7a3c49a6">normal</link>(0,1,(dim,&#32;1))&#32;/&#32;np.sqrt(dim))
<anchor xml:id="_crfmnes_8py_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.D&#32;=&#32;np.ones([dim,&#32;1])
<anchor xml:id="_crfmnes_8py_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.penalty_coef&#32;=&#32;options.get(<emphasis role="stringliteral">&apos;penalty_coef&apos;</emphasis>,&#32;1e5)
<anchor xml:id="_crfmnes_8py_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.use_constraint_violation&#32;=&#32;options.get(<emphasis role="stringliteral">&apos;use_constraint_violation&apos;</emphasis>,&#32;<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_crfmnes_8py_source_1l00239"/>00239 
<anchor xml:id="_crfmnes_8py_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.w_rank_hat&#32;=&#32;(np.log(self.popsize&#32;/&#32;2&#32;+&#32;1)&#32;-&#32;np.log(np.arange(1,&#32;self.popsize&#32;+&#32;1))).reshape(self.popsize,&#32;1)
<anchor xml:id="_crfmnes_8py_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.w_rank_hat[np.where(self.w_rank_hat&#32;&lt;&#32;0)]&#32;=&#32;0
<anchor xml:id="_crfmnes_8py_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.w_rank&#32;=&#32;self.w_rank_hat&#32;/&#32;sum(self.w_rank_hat)&#32;-&#32;(1.&#32;/&#32;self.popsize)
<anchor xml:id="_crfmnes_8py_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.mueff&#32;=&#32;1&#32;/&#32;((self.w_rank&#32;+&#32;(1&#32;/&#32;self.popsize)).T&#32;@&#32;(self.w_rank&#32;+&#32;(1&#32;/&#32;self.popsize)))[0][0]
<anchor xml:id="_crfmnes_8py_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.cs&#32;=&#32;(self.mueff&#32;+&#32;2.)&#32;/&#32;(self.dim&#32;+&#32;self.mueff&#32;+&#32;5.)
<anchor xml:id="_crfmnes_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.cc&#32;=&#32;(4.&#32;+&#32;self.mueff&#32;/&#32;self.dim)&#32;/&#32;(self.dim&#32;+&#32;4.&#32;+&#32;2.&#32;*&#32;self.mueff&#32;/&#32;self.dim)
<anchor xml:id="_crfmnes_8py_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.c1_cma&#32;=&#32;2.&#32;/&#32;(math.pow(self.dim&#32;+&#32;1.3,&#32;2)&#32;+&#32;self.mueff)
<anchor xml:id="_crfmnes_8py_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;initialization</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.chiN&#32;=&#32;np.sqrt(self.dim)&#32;*&#32;(1.&#32;-&#32;1.&#32;/&#32;(4.&#32;*&#32;self.dim)&#32;+&#32;1.&#32;/&#32;(21.&#32;*&#32;self.dim&#32;*&#32;self.dim))
<anchor xml:id="_crfmnes_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.pc&#32;=&#32;np.zeros([self.dim,&#32;1])
<anchor xml:id="_crfmnes_8py_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.ps&#32;=&#32;np.zeros([self.dim,&#32;1])
<anchor xml:id="_crfmnes_8py_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;distance&#32;weight&#32;parameter</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.h_inv&#32;=&#32;get_h_inv(self.dim)
<anchor xml:id="_crfmnes_8py_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.alpha_dist&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;lambF:&#32;self.h_inv&#32;*&#32;min(1.,&#32;math.sqrt(self.popsize&#32;/&#32;self.dim))&#32;*&#32;math.sqrt(
<anchor xml:id="_crfmnes_8py_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lambF&#32;/&#32;self.popsize)
<anchor xml:id="_crfmnes_8py_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.w_dist_hat&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;z,&#32;lambF:&#32;exp(self.alpha_dist(lambF)&#32;*&#32;np.linalg.norm(z))
<anchor xml:id="_crfmnes_8py_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;learning&#32;rate</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.eta_m&#32;=&#32;1.0
<anchor xml:id="_crfmnes_8py_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.eta_move_sigma&#32;=&#32;1.
<anchor xml:id="_crfmnes_8py_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.eta_stag_sigma&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;lambF:&#32;math.tanh((0.024&#32;*&#32;lambF&#32;+&#32;0.7&#32;*&#32;self.dim&#32;+&#32;20.)&#32;/&#32;(self.dim&#32;+&#32;12.))
<anchor xml:id="_crfmnes_8py_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.eta_conv_sigma&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;lambF:&#32;2.&#32;*&#32;math.tanh((0.025&#32;*&#32;lambF&#32;+&#32;0.75&#32;*&#32;self.dim&#32;+&#32;10.)&#32;/&#32;(self.dim&#32;+&#32;4.))
<anchor xml:id="_crfmnes_8py_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.c1&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;lambF:&#32;self.c1_cma&#32;*&#32;(self.dim&#32;-&#32;5)&#32;/&#32;6&#32;*&#32;(lambF&#32;/&#32;self.popsize)
<anchor xml:id="_crfmnes_8py_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.eta_B&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;lambF:&#32;np.tanh((min(0.02&#32;*&#32;lambF,&#32;3&#32;*&#32;np.log(self.dim))&#32;+&#32;5)&#32;/&#32;(0.23&#32;*&#32;self.dim&#32;+&#32;25))
<anchor xml:id="_crfmnes_8py_source_1l00263"/>00263 
<anchor xml:id="_crfmnes_8py_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.g&#32;=&#32;0
<anchor xml:id="_crfmnes_8py_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.no_of_evals&#32;=&#32;0
<anchor xml:id="_crfmnes_8py_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.iteration&#32;=&#32;0
<anchor xml:id="_crfmnes_8py_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.stop&#32;=&#32;0
<anchor xml:id="_crfmnes_8py_source_1l00268"/>00268 
<anchor xml:id="_crfmnes_8py_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.idxp&#32;=&#32;np.arange(self.popsize&#32;/&#32;2,&#32;dtype=int)
<anchor xml:id="_crfmnes_8py_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.idxm&#32;=&#32;np.arange(self.popsize&#32;/&#32;2,&#32;self.popsize,&#32;dtype=int)
<anchor xml:id="_crfmnes_8py_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.z&#32;=&#32;np.zeros([self.dim,&#32;self.popsize])
<anchor xml:id="_crfmnes_8py_source_1l00272"/>00272 
<anchor xml:id="_crfmnes_8py_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.f_best&#32;=&#32;float(<emphasis role="stringliteral">&apos;inf&apos;</emphasis>)
<anchor xml:id="_crfmnes_8py_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.x_best&#32;=&#32;np.empty(self.dim)
<anchor xml:id="_crfmnes_8py_source_1l00275"/>00275 
<anchor xml:id="_crfmnes_8py_source_1l00276"/>00276 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__del__(self):
<anchor xml:id="_crfmnes_8py_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00278"/>00278 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles&#32;the&#32;cleanup&#32;process&#32;upon&#32;object&#32;deletion.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00279"/>00279 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00280"/>00280 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;ensures&#32;proper&#32;resource&#32;management&#32;by&#32;stopping&#32;the&#32;execution</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00281"/>00281 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;the&#32;`parallel`&#32;object,&#32;if&#32;applicable,&#32;when&#32;the&#32;instance&#32;is&#32;about&#32;to</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00282"/>00282 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;destroyed.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00283"/>00283 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00284"/>00284 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00285"/>00285 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AttributeError:&#32;If&#32;`self.fun`&#32;does&#32;not&#32;have&#32;a&#32;`stop`&#32;method&#32;and&#32;is&#32;an&#32;instance&#32;of&#32;`parallel`.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00286"/>00286 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;isinstance(self.fun,&#32;parallel):
<anchor xml:id="_crfmnes_8py_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.fun.stop()
<anchor xml:id="_crfmnes_8py_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00290"/>00290 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>calc_violations(self,&#32;x):
<anchor xml:id="_crfmnes_8py_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00292"/>00292 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calculates&#32;the&#32;constraint&#32;violations&#32;for&#32;a&#32;population.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00293"/>00293 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00294"/>00294 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;evaluates&#32;how&#32;much&#32;each&#32;solution&#32;in&#32;the&#32;population&#32;violates&#32;the&#32;given</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00295"/>00295 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constraints.&#32;Violations&#32;are&#32;penalized&#32;by&#32;a&#32;predefined&#32;penalty&#32;coefficient.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00296"/>00296 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00297"/>00297 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00298"/>00298 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;numpy.ndarray.&#32;A&#32;2D&#32;array&#32;representing&#32;the&#32;population.&#32;Each&#32;column&#32;represents</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00299"/>00299 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;single&#32;solution,&#32;and&#32;each&#32;row&#32;represents&#32;a&#32;variable&#32;in&#32;the&#32;solution.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00300"/>00300 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00301"/>00301 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00302"/>00302 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;A&#32;1D&#32;array&#32;containing&#32;the&#32;total&#32;calculated&#32;violations&#32;for&#32;each</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00303"/>00303 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solution&#32;in&#32;the&#32;population.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00304"/>00304 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;violations&#32;=&#32;np.zeros(self.popsize)
<anchor xml:id="_crfmnes_8py_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.popsize):
<anchor xml:id="_crfmnes_8py_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.dim):
<anchor xml:id="_crfmnes_8py_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;violations[i]&#32;+=&#32;(-&#32;min(0,&#32;x[j][i]&#32;-&#32;self.constraint[j][0])&#32;+&#32;max(0,&#32;x[j][i]&#32;-&#32;self.constraint[j][1]))&#32;*&#32;self.penalty_coef
<anchor xml:id="_crfmnes_8py_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;violations
<anchor xml:id="_crfmnes_8py_source_1l00310"/>00310 
<anchor xml:id="_crfmnes_8py_source_1l00311"/>00311 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>optimize(self)&#32;-&gt;&#32;int:
<anchor xml:id="_crfmnes_8py_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00313"/>00313 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Executes&#32;an&#32;optimization&#32;process&#32;by&#32;iteratively&#32;evaluating,&#32;decoding,&#32;and&#32;improving</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00314"/>00314 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions&#32;until&#32;termination&#32;criteria&#32;are&#32;met.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00315"/>00315 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00316"/>00316 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;utilizes&#32;a&#32;generation&#32;loop&#32;to&#32;perform&#32;the&#32;optimization.&#32;It&#32;stops&#32;either</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00317"/>00317 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;when&#32;a&#32;defined&#32;evaluation&#32;limit&#32;is&#32;reached,&#32;or&#32;due&#32;to&#32;an&#32;external&#32;stop&#32;signal,</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00318"/>00318 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;when&#32;execution&#32;encounters&#32;an&#32;unrecoverable&#32;exception.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00319"/>00319 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00320"/>00320 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00321"/>00321 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Exception:&#32;If&#32;an&#32;error&#32;occurs&#32;during&#32;the&#32;execution&#32;of&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00322"/>00322 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00323"/>00323 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00324"/>00324 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;status&#32;of&#32;the&#32;optimization&#32;process&#32;upon&#32;termination.&#32;A&#32;value&#32;of&#32;-1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00325"/>00325 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indicates&#32;an&#32;error&#32;during&#32;execution;&#32;other&#32;stop&#32;conditions&#32;may&#32;yield&#32;different</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00326"/>00326 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;results.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00327"/>00327 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;--------------------&#32;Generation&#32;Loop&#32;--------------------------------</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;<emphasis role="keyword">True</emphasis>:
<anchor xml:id="_crfmnes_8py_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.no_of_evals&#32;&gt;&#32;self.max_evaluations:
<anchor xml:id="_crfmnes_8py_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.stop&#32;!=&#32;0:
<anchor xml:id="_crfmnes_8py_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_crfmnes_8py_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;self.ask()
<anchor xml:id="_crfmnes_8py_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;self.f.values(self.f.decode(self.f.closestFeasible(x)))
<anchor xml:id="_crfmnes_8py_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.tell(y)
<anchor xml:id="_crfmnes_8py_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.stop&#32;!=&#32;0:
<anchor xml:id="_crfmnes_8py_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>&#32;
<anchor xml:id="_crfmnes_8py_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_crfmnes_8py_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.stop&#32;=&#32;-1
<anchor xml:id="_crfmnes_8py_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00343"/>00343 
<anchor xml:id="_crfmnes_8py_source_1l00344"/>00344 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>ask(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_crfmnes_8py_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00346"/>00346 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generate&#32;and&#32;return&#32;the&#32;next&#32;set&#32;of&#32;candidate&#32;solution&#32;vectors&#32;for&#32;optimization.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00347"/>00347 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;computes&#32;a&#32;population&#32;of&#32;new&#32;solution&#32;vectors&#32;and&#32;applies&#32;certain</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00348"/>00348 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transformations&#32;based&#32;on&#32;the&#32;algorithm&apos;s&#32;state&#32;variables.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00349"/>00349 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00350"/>00350 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00351"/>00351 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;2D&#32;array&#32;where&#32;each&#32;row&#32;represents&#32;a&#32;candidate&#32;solution&#32;vector.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00352"/>00352 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;d&#32;=&#32;self.dim
<anchor xml:id="_crfmnes_8py_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;=&#32;self.popsize
<anchor xml:id="_crfmnes_8py_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zhalf&#32;=&#32;self.rg.<link linkend="_evaluator_8h_1a231544ac51b3f9312c104a3b7a3c49a6">normal</link>(0,1,(d,&#32;int(popsize&#32;/&#32;2)))&#32;&#32;<emphasis role="comment">#&#32;dim&#32;x&#32;popsize/2</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.z[:,&#32;self.idxp]&#32;=&#32;zhalf
<anchor xml:id="_crfmnes_8py_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.z[:,&#32;self.idxm]&#32;=&#32;-zhalf
<anchor xml:id="_crfmnes_8py_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.normv&#32;=&#32;np.linalg.norm(self.v)
<anchor xml:id="_crfmnes_8py_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.normv2&#32;=&#32;self.normv&#32;**&#32;2
<anchor xml:id="_crfmnes_8py_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.vbar&#32;=&#32;self.v&#32;/&#32;self.normv
<anchor xml:id="_crfmnes_8py_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.y&#32;=&#32;self.z&#32;+&#32;((np.sqrt(1&#32;+&#32;self.normv2)&#32;-&#32;1)&#32;*&#32;(self.vbar&#32;@&#32;(self.vbar.T&#32;@&#32;self.z)))
<anchor xml:id="_crfmnes_8py_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.x&#32;=&#32;self.m&#32;+&#32;(self.sigma&#32;*&#32;self.y)&#32;*&#32;self.D
<anchor xml:id="_crfmnes_8py_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.x.T
<anchor xml:id="_crfmnes_8py_source_1l00364"/>00364 
<anchor xml:id="_crfmnes_8py_source_1l00365"/>00365 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>tell(self,&#32;evals_no_sort:&#32;np.ndarray)&#32;-&gt;&#32;int:
<anchor xml:id="_crfmnes_8py_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00367"/>00367 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Provides&#32;the&#32;functionality&#32;to&#32;update&#32;and&#32;optimize&#32;based&#32;on&#32;the&#32;given&#32;evaluations</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00368"/>00368 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;with&#32;sorting,&#32;constraints&#32;handling,&#32;and&#32;adaptive&#32;parameters&#32;for&#32;step&#32;size&#32;and</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00369"/>00369 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evolution&#32;paths.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00370"/>00370 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00371"/>00371 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00372"/>00372 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals_no_sort&#32;(np.ndarray):&#32;The&#32;evaluation&#32;scores&#32;for&#32;the&#32;current&#32;population</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00373"/>00373 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;before&#32;sorting.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00374"/>00374 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00375"/>00375 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00376"/>00376 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;stop&#32;condition&#32;value,&#32;indicating&#32;the&#32;termination&#32;status&#32;of&#32;the</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00377"/>00377 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00378"/>00378 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;violations&#32;=&#32;np.zeros(self.popsize)
<anchor xml:id="_crfmnes_8py_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.use_constraint_violation:
<anchor xml:id="_crfmnes_8py_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;violations&#32;=&#32;self.calc_violations(self.x)
<anchor xml:id="_crfmnes_8py_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sorted_indices&#32;=&#32;sort_indices_by(evals_no_sort&#32;+&#32;violations,&#32;self.z)
<anchor xml:id="_crfmnes_8py_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_crfmnes_8py_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sorted_indices&#32;=&#32;sort_indices_by(evals_no_sort,&#32;self.z)
<anchor xml:id="_crfmnes_8py_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_eval_id&#32;=&#32;sorted_indices[0]
<anchor xml:id="_crfmnes_8py_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f_best&#32;=&#32;evals_no_sort[best_eval_id]
<anchor xml:id="_crfmnes_8py_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_best&#32;=&#32;self.x[:,&#32;best_eval_id]
<anchor xml:id="_crfmnes_8py_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.z&#32;=&#32;self.z[:,&#32;sorted_indices]
<anchor xml:id="_crfmnes_8py_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;self.y[:,&#32;sorted_indices]
<anchor xml:id="_crfmnes_8py_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;self.x[:,&#32;sorted_indices]
<anchor xml:id="_crfmnes_8py_source_1l00391"/>00391 
<anchor xml:id="_crfmnes_8py_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.no_of_evals&#32;+=&#32;self.popsize
<anchor xml:id="_crfmnes_8py_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.g&#32;+=&#32;1
<anchor xml:id="_crfmnes_8py_source_1l00394"/>00394 &#32;
<anchor xml:id="_crfmnes_8py_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;f_best&#32;&lt;&#32;self.f_best:
<anchor xml:id="_crfmnes_8py_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.f_best&#32;=&#32;f_best
<anchor xml:id="_crfmnes_8py_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.x_best&#32;=&#32;x_best&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;print(self.no_of_evals,&#32;self.g,&#32;self.f_best)</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00399"/>00399 
<anchor xml:id="_crfmnes_8py_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;This&#32;operation&#32;assumes&#32;that&#32;if&#32;the&#32;solution&#32;is&#32;infeasible,&#32;infinity&#32;comes&#32;in&#32;as&#32;input.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lambF&#32;=&#32;np.sum(evals_no_sort&#32;&lt;&#32;np.finfo(float).max)
<anchor xml:id="_crfmnes_8py_source_1l00402"/>00402 
<anchor xml:id="_crfmnes_8py_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;evolution&#32;path&#32;p_sigma</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.ps&#32;=&#32;(1&#32;-&#32;self.cs)&#32;*&#32;self.ps&#32;+&#32;np.sqrt(self.cs&#32;*&#32;(2.&#32;-&#32;self.cs)&#32;*&#32;self.mueff)&#32;*&#32;(self.z&#32;@&#32;self.w_rank)
<anchor xml:id="_crfmnes_8py_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps_norm&#32;=&#32;np.linalg.norm(self.ps)
<anchor xml:id="_crfmnes_8py_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;distance&#32;weight</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f1&#32;=&#32;&#32;self.h_inv&#32;*&#32;min(1.,&#32;math.sqrt(self.popsize&#32;/&#32;self.dim))&#32;*&#32;math.sqrt(lambF&#32;/&#32;self.popsize)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;w_tmp&#32;=&#32;self.w_rank_hat&#32;*&#32;np.exp(np.linalg.norm(self.z,&#32;axis&#32;=&#32;0)&#32;*&#32;f1).reshape((self.popsize,1))
<anchor xml:id="_crfmnes_8py_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;weights_dist&#32;=&#32;w_tmp&#32;/&#32;sum(w_tmp)&#32;-&#32;1.&#32;/&#32;self.popsize
<anchor xml:id="_crfmnes_8py_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;switching&#32;weights&#32;and&#32;learning&#32;rate</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;weights&#32;=&#32;weights_dist&#32;<emphasis role="keywordflow">if</emphasis>&#32;ps_norm&#32;&gt;=&#32;self.chiN&#32;<emphasis role="keywordflow">else</emphasis>&#32;self.w_rank
<anchor xml:id="_crfmnes_8py_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eta_sigma&#32;=&#32;self.eta_move_sigma&#32;<emphasis role="keywordflow">if</emphasis>&#32;ps_norm&#32;&gt;=&#32;self.chiN&#32;<emphasis role="keywordflow">else</emphasis>&#32;self.eta_stag_sigma(
<anchor xml:id="_crfmnes_8py_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lambF)&#32;<emphasis role="keywordflow">if</emphasis>&#32;ps_norm&#32;&gt;=&#32;0.1&#32;*&#32;self.chiN&#32;<emphasis role="keywordflow">else</emphasis>&#32;self.eta_conv_sigma(lambF)
<anchor xml:id="_crfmnes_8py_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;update&#32;pc,&#32;m</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wxm&#32;=&#32;(x&#32;-&#32;self.m)&#32;@&#32;weights
<anchor xml:id="_crfmnes_8py_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.pc&#32;=&#32;(1.&#32;-&#32;self.cc)&#32;*&#32;self.pc&#32;+&#32;np.sqrt(self.cc&#32;*&#32;(2.&#32;-&#32;self.cc)&#32;*&#32;self.mueff)&#32;*&#32;wxm&#32;/&#32;self.sigma
<anchor xml:id="_crfmnes_8py_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.m&#32;+=&#32;self.eta_m&#32;*&#32;wxm
<anchor xml:id="_crfmnes_8py_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;calculate&#32;s,&#32;t</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;step1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normv4&#32;=&#32;self.normv2&#32;**&#32;2
<anchor xml:id="_crfmnes_8py_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exY&#32;=&#32;np.append(y,&#32;self.pc&#32;/&#32;self.D,&#32;axis=1)&#32;&#32;<emphasis role="comment">#&#32;dim&#32;x&#32;popsize+1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yy&#32;=&#32;exY&#32;*&#32;exY&#32;&#32;<emphasis role="comment">#&#32;dim&#32;x&#32;popsize+1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ip_yvbar&#32;=&#32;self.vbar.T&#32;@&#32;exY
<anchor xml:id="_crfmnes_8py_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yvbar&#32;=&#32;exY&#32;*&#32;self.vbar&#32;&#32;<emphasis role="comment">#&#32;dim&#32;x&#32;popsize+1.&#32;exYのそれぞれの列にvbarがかかる</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gammav&#32;=&#32;1.&#32;+&#32;self.normv2
<anchor xml:id="_crfmnes_8py_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vbarbar&#32;=&#32;self.vbar&#32;*&#32;self.vbar
<anchor xml:id="_crfmnes_8py_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alphavd&#32;=&#32;min(1,&#32;np.sqrt(normv4&#32;+&#32;(2&#32;*&#32;gammav&#32;-&#32;np.sqrt(gammav))&#32;/&#32;np.max(vbarbar))&#32;/&#32;(2&#32;+&#32;self.normv2))&#32;&#32;<emphasis role="comment">#&#32;scalar</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;exY&#32;*&#32;ip_yvbar&#32;-&#32;self.vbar&#32;*&#32;(ip_yvbar&#32;**&#32;2&#32;+&#32;gammav)&#32;/&#32;2&#32;&#32;<emphasis role="comment">#&#32;dim&#32;x&#32;popsize+1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b&#32;=&#32;-(1&#32;-&#32;alphavd&#32;**&#32;2)&#32;*&#32;normv4&#32;/&#32;gammav&#32;+&#32;2&#32;*&#32;alphavd&#32;**&#32;2
<anchor xml:id="_crfmnes_8py_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;H&#32;=&#32;np.ones([self.dim,&#32;1])&#32;*&#32;2&#32;-&#32;(b&#32;+&#32;2&#32;*&#32;alphavd&#32;**&#32;2)&#32;*&#32;vbarbar&#32;&#32;<emphasis role="comment">#&#32;dim&#32;x&#32;1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;invH&#32;=&#32;H&#32;**&#32;(-1)
<anchor xml:id="_crfmnes_8py_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_step1&#32;=&#32;yy&#32;-&#32;self.normv2&#32;/&#32;gammav&#32;*&#32;(yvbar&#32;*&#32;ip_yvbar)&#32;-&#32;np.ones([self.dim,&#32;self.popsize&#32;+&#32;1])&#32;&#32;<emphasis role="comment">#&#32;dim&#32;x&#32;popsize+1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ip_vbart&#32;=&#32;self.vbar.T&#32;@&#32;t&#32;&#32;<emphasis role="comment">#&#32;1&#32;x&#32;popsize+1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00435"/>00435 &#32;
<anchor xml:id="_crfmnes_8py_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_step2&#32;=&#32;s_step1&#32;-&#32;alphavd&#32;/&#32;gammav&#32;*&#32;((2&#32;+&#32;self.normv2)&#32;*&#32;(t&#32;*&#32;self.vbar)&#32;-&#32;self.normv2&#32;*&#32;vbarbar&#32;@&#32;ip_vbart)&#32;&#32;<emphasis role="comment">#&#32;dim&#32;x&#32;popsize+1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;invHvbarbar&#32;=&#32;invH&#32;*&#32;vbarbar
<anchor xml:id="_crfmnes_8py_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ip_s_step2invHvbarbar&#32;=&#32;invHvbarbar.T&#32;@&#32;s_step2&#32;&#32;<emphasis role="comment">#&#32;1&#32;x&#32;popsize+1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;div&#32;=&#32;1&#32;+&#32;b&#32;*&#32;vbarbar.T&#32;@&#32;invHvbarbar
<anchor xml:id="_crfmnes_8py_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;np.amin(abs(div))&#32;==&#32;0:
<anchor xml:id="_crfmnes_8py_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1
<anchor xml:id="_crfmnes_8py_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;(s_step2&#32;*&#32;invH)&#32;-&#32;b&#32;/&#32;div&#32;*&#32;invHvbarbar&#32;@&#32;ip_s_step2invHvbarbar&#32;&#32;<emphasis role="comment">#&#32;dim&#32;x&#32;popsize+1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ip_svbarbar&#32;=&#32;vbarbar.T&#32;@&#32;s&#32;&#32;<emphasis role="comment">#&#32;1&#32;x&#32;popsize+1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;t&#32;-&#32;alphavd&#32;*&#32;((2&#32;+&#32;self.normv2)&#32;*&#32;(s&#32;*&#32;self.vbar)&#32;-&#32;self.vbar&#32;@&#32;ip_svbarbar)&#32;&#32;<emphasis role="comment">#&#32;dim&#32;x&#32;popsize+1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;update&#32;v,&#32;D</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exw&#32;=&#32;np.append(self.eta_B(lambF)&#32;*&#32;weights,&#32;np.array([self.c1(lambF)]).reshape(1,&#32;1),
<anchor xml:id="_crfmnes_8py_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;axis=0)&#32;&#32;<emphasis role="comment">#&#32;popsize+1&#32;x&#32;1</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.v&#32;=&#32;self.v&#32;+&#32;(t&#32;@&#32;exw)&#32;/&#32;self.normv
<anchor xml:id="_crfmnes_8py_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.D&#32;=&#32;self.D&#32;+&#32;(s&#32;@&#32;exw)&#32;*&#32;self.D
<anchor xml:id="_crfmnes_8py_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;calculate&#32;detA</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;np.amin(self.D)&#32;&lt;&#32;0:
<anchor xml:id="_crfmnes_8py_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1
<anchor xml:id="_crfmnes_8py_source_1l00455"/>00455 
<anchor xml:id="_crfmnes_8py_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nthrootdetA&#32;=&#32;exp(np.sum(np.log(self.D))&#32;/&#32;self.dim&#32;+&#32;np.log(1&#32;+&#32;(self.v.T&#32;@&#32;self.v)[0][0])&#32;/&#32;(2&#32;*&#32;self.dim))
<anchor xml:id="_crfmnes_8py_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.D&#32;=&#32;self.D&#32;/&#32;nthrootdetA
<anchor xml:id="_crfmnes_8py_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;update&#32;sigma</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G_s&#32;=&#32;np.sum((self.z&#32;*&#32;self.z&#32;-&#32;np.ones([self.dim,&#32;self.popsize]))&#32;@&#32;weights)&#32;/&#32;self.dim
<anchor xml:id="_crfmnes_8py_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.sigma&#32;=&#32;self.sigma&#32;*&#32;exp(eta_sigma&#32;/&#32;2&#32;*&#32;G_s)
<anchor xml:id="_crfmnes_8py_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.stop
<anchor xml:id="_crfmnes_8py_source_1l00464"/>00464 
<anchor xml:id="_crfmnes_8py_source_1l00465"/>00465 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>population(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_crfmnes_8py_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00467"/>00467 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;the&#32;current&#32;population.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00468"/>00468 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00469"/>00469 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;the&#32;current&#32;state&#32;of&#32;the&#32;population&#32;as&#32;a&#32;NumPy&#32;array.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00470"/>00470 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00471"/>00471 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00472"/>00472 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;The&#32;current&#32;population&#32;as&#32;a&#32;NumPy&#32;array.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00473"/>00473 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.x
<anchor xml:id="_crfmnes_8py_source_1l00475"/>00475 
<anchor xml:id="_crfmnes_8py_source_1l00476"/>00476 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>result(self)&#32;-&gt;&#32;OptimizeResult:
<anchor xml:id="_crfmnes_8py_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00478"/>00478 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;the&#32;optimization&#32;result&#32;as&#32;an&#32;instance&#32;of&#32;`OptimizeResult`.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00479"/>00479 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00480"/>00480 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;compiles&#32;the&#32;results&#32;of&#32;the&#32;optimization&#32;process&#32;into&#32;an</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00481"/>00481 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`OptimizeResult`&#32;object,&#32;providing&#32;the&#32;best&#32;solution&#32;found,&#32;its&#32;associated</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00482"/>00482 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;value,&#32;the&#32;number&#32;of&#32;function&#32;evaluations&#32;performed,&#32;the&#32;number&#32;of&#32;iterations,</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00483"/>00483 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;stopping&#32;status,&#32;and&#32;the&#32;success&#32;flag.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00484"/>00484 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00485"/>00485 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00486"/>00486 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult:&#32;The&#32;result&#32;of&#32;the&#32;optimization&#32;containing&#32;the&#32;following&#32;fields:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00487"/>00487 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;x:&#32;The&#32;best&#32;solution&#32;found&#32;(self.x_best).</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00488"/>00488 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;fun:&#32;The&#32;value&#32;of&#32;the&#32;function&#32;at&#32;the&#32;best&#32;solution&#32;(self.f_best).</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00489"/>00489 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;nfev:&#32;The&#32;total&#32;number&#32;of&#32;function&#32;evaluations&#32;(self.no_of_evals).</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00490"/>00490 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;nit:&#32;The&#32;number&#32;of&#32;iterations&#32;performed&#32;(self.g).</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00491"/>00491 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;status:&#32;The&#32;stopping&#32;status&#32;of&#32;the&#32;optimization&#32;(self.stop).</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00492"/>00492 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;success:&#32;A&#32;boolean&#32;indicating&#32;whether&#32;the&#32;optimization&#32;was&#32;successful.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00493"/>00493 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;OptimizeResult(x=self.x_best,&#32;fun=self.f_best,&#32;nfev=self.no_of_evals,
<anchor xml:id="_crfmnes_8py_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nit=self.g,&#32;status=self.stop,&#32;success=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_crfmnes_8py_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_crfmnes_8py_source_1l00497"/>00497 <emphasis role="keyword">def&#32;</emphasis>exp(a):
<anchor xml:id="_crfmnes_8py_source_1l00498"/>00498 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00499"/>00499 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Calculates&#32;the&#32;exponential&#32;of&#32;a&#32;given&#32;number,&#32;with&#32;a&#32;cap&#32;to&#32;avoid&#32;overflow.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00500"/>00500 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00501"/>00501 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;computes&#32;the&#32;exponential&#32;value&#32;using&#32;the&#32;`math.exp`&#32;function.&#32;It&#32;ensures</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00502"/>00502 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;that&#32;the&#32;input&#32;does&#32;not&#32;exceed&#32;100&#32;to&#32;prevent&#32;overflow.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00503"/>00503 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00504"/>00504 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00505"/>00505 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a:&#32;A&#32;float&#32;or&#32;integer&#32;representing&#32;the&#32;input&#32;value&#32;for&#32;which&#32;to&#32;calculate&#32;the&#32;exponential.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00506"/>00506 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00507"/>00507 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00508"/>00508 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;exponential&#32;value&#32;of&#32;the&#32;input&#32;`a`,&#32;respecting&#32;a&#32;maximum&#32;cap&#32;of&#32;100&#32;for&#32;the&#32;input.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00509"/>00509 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00510"/>00510 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;math.exp(min(100,&#32;a))&#32;<emphasis role="comment">#&#32;avoid&#32;overflow</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00511"/>00511 
<anchor xml:id="_crfmnes_8py_source_1l00512"/>00512 <emphasis role="keyword">def&#32;</emphasis>get_h_inv(dim):
<anchor xml:id="_crfmnes_8py_source_1l00513"/>00513 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00514"/>00514 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Computes&#32;the&#32;inverse&#32;of&#32;a&#32;specific&#32;mathematical&#32;function&#32;using&#32;the&#32;Newton-Raphson</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00515"/>00515 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;method.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00516"/>00516 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00517"/>00517 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;uses&#32;an&#32;iterative&#32;method&#32;to&#32;compute&#32;the&#32;value&#32;of&#32;h_inv&#32;such&#32;that</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00518"/>00518 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;a&#32;given&#32;mathematical&#32;equation&#32;is&#32;satisfied.&#32;The&#32;iteration&#32;stops&#32;when&#32;the</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00519"/>00519 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;function&apos;s&#32;value&#32;is&#32;sufficiently&#32;close&#32;to&#32;zero,&#32;adhering&#32;to&#32;a&#32;tolerance&#32;of&#32;`1e-10`.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00520"/>00520 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00521"/>00521 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00522"/>00522 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(float):&#32;A&#32;dimension&#32;parameter&#32;that&#32;affects&#32;the&#32;behavior&#32;of&#32;the&#32;function.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00523"/>00523 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00524"/>00524 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00525"/>00525 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;calculated&#32;value&#32;of&#32;h_inv&#32;that&#32;satisfies&#32;the&#32;given&#32;equation.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00526"/>00526 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00527"/>00527 &#32;&#32;&#32;&#32;f&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;a,&#32;b:&#32;((1.&#32;+&#32;a&#32;*&#32;a)&#32;*&#32;exp(a&#32;*&#32;a&#32;/&#32;2.)&#32;/&#32;0.24)&#32;-&#32;10.&#32;-&#32;dim
<anchor xml:id="_crfmnes_8py_source_1l00528"/>00528 &#32;&#32;&#32;&#32;f_prime&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;a:&#32;(1.&#32;/&#32;0.24)&#32;*&#32;a&#32;*&#32;exp(a&#32;*&#32;a&#32;/&#32;2.)&#32;*&#32;(3.&#32;+&#32;a&#32;*&#32;a)
<anchor xml:id="_crfmnes_8py_source_1l00529"/>00529 &#32;&#32;&#32;&#32;h_inv&#32;=&#32;1.0
<anchor xml:id="_crfmnes_8py_source_1l00530"/>00530 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;abs(f(h_inv,&#32;dim))&#32;&gt;&#32;1e-10:
<anchor xml:id="_crfmnes_8py_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h_inv&#32;=&#32;h_inv&#32;-&#32;0.5&#32;*&#32;(f(h_inv,&#32;dim)&#32;/&#32;f_prime(h_inv))
<anchor xml:id="_crfmnes_8py_source_1l00532"/>00532 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;h_inv
<anchor xml:id="_crfmnes_8py_source_1l00533"/>00533 
<anchor xml:id="_crfmnes_8py_source_1l00534"/>00534 <emphasis role="keyword">def&#32;</emphasis>sort_indices_by(evals,&#32;z):
<anchor xml:id="_crfmnes_8py_source_1l00535"/>00535 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00536"/>00536 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Sorts&#32;indices&#32;based&#32;on&#32;evaluated&#32;values,&#32;`evals`,&#32;while&#32;prioritizing&#32;feasible</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00537"/>00537 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;over&#32;infeasible&#32;solutions.&#32;Infeasible&#32;solutions&#32;are&#32;further&#32;sorted&#32;by&#32;their</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00538"/>00538 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Euclidean&#32;distance.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00539"/>00539 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00540"/>00540 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00541"/>00541 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals:&#32;List&#32;or&#32;array&#32;of&#32;values&#32;(e.g.,&#32;objective&#32;function&#32;evaluations)</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00542"/>00542 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;with&#32;INFEASIBLE&#32;denoting&#32;infeasibility.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00543"/>00543 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;z:&#32;2D&#32;array-like&#32;object,&#32;typically&#32;representing&#32;decision&#32;variables&#32;or</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00544"/>00544 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;characteristics&#32;of&#32;solutions.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00545"/>00545 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00546"/>00546 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00547"/>00547 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;Array&#32;of&#32;indices&#32;sorted&#32;based&#32;on&#32;feasibility&#32;and</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00548"/>00548 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;additional&#32;criteria&#32;for&#32;infeasible&#32;solutions.</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00549"/>00549 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_crfmnes_8py_source_1l00550"/>00550 &#32;&#32;&#32;&#32;lam&#32;=&#32;len(evals)
<anchor xml:id="_crfmnes_8py_source_1l00551"/>00551 &#32;&#32;&#32;&#32;evals&#32;=&#32;np.array(evals)
<anchor xml:id="_crfmnes_8py_source_1l00552"/>00552 &#32;&#32;&#32;&#32;sorted_indices&#32;=&#32;np.argsort(evals)
<anchor xml:id="_crfmnes_8py_source_1l00553"/>00553 &#32;&#32;&#32;&#32;sorted_evals&#32;=&#32;evals[sorted_indices]
<anchor xml:id="_crfmnes_8py_source_1l00554"/>00554 &#32;&#32;&#32;&#32;no_of_feasible_solutions&#32;=&#32;np.where(sorted_evals&#32;!=&#32;INFEASIBLE)[0].size
<anchor xml:id="_crfmnes_8py_source_1l00555"/>00555 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;no_of_feasible_solutions&#32;!=&#32;lam:
<anchor xml:id="_crfmnes_8py_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;infeasible_z&#32;=&#32;z[:,&#32;np.where(evals&#32;==&#32;INFEASIBLE)[0]]
<anchor xml:id="_crfmnes_8py_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distances&#32;=&#32;np.sum(infeasible_z&#32;**&#32;2,&#32;axis=0)
<anchor xml:id="_crfmnes_8py_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;infeasible_indices&#32;=&#32;sorted_indices[no_of_feasible_solutions:]
<anchor xml:id="_crfmnes_8py_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indices_sorted_by_distance&#32;=&#32;np.argsort(distances)
<anchor xml:id="_crfmnes_8py_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sorted_indices[no_of_feasible_solutions:]&#32;=&#32;infeasible_indices[indices_sorted_by_distance]
<anchor xml:id="_crfmnes_8py_source_1l00561"/>00561 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sorted_indices
</programlisting></section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c" xml:lang="en-US">
<title>fcmaes.pgpecpp.PGPE_C Class Reference</title>
<indexterm><primary>fcmaes.pgpecpp.PGPE_C</primary></indexterm>
<para>

<para>Optimization class using a C++ CR-FM-NES implementation via <computeroutput>ctypes</computeroutput>. </para>
 
</para>
Collaboration diagram for fcmaes.pgpecpp.PGPE_C:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a966fbd9f17de3cc069973c3b9d01915c">__init__</link> (self, int <link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2">dim</link>, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.1, Optional[int] <link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a65ed94e32ef0d14d2e63d6db3df4ef34">popsize</link>=32, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=True, Optional[int] lr_decay_steps=1000, Optional[bool] use_ranking=False, Optional[float] center_learning_rate=0.15, Optional[float] stdev_learning_rate=0.1, Optional[float] stdev_max_change=0.2, Optional[float] b1=0.9, Optional[float] b2=0.999, Optional[float] eps=1e-8, Optional[float] decay_coef=1.0)</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a255b3fc3e61ebee7f65b20d63c6ba3d4">__del__</link> (self)</para>

<para>Handles the destruction of the <link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c">PGPE_C</link> object to manage resources effectively. </para>
</listitem>
            <listitem><para>np.array <link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe">ask</link> (self)</para>

<para>Generates and returns a population of samples based on the current state of the algorithm. </para>
</listitem>
            <listitem><para>int <link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a3d030c90af2ea816f60372c4f0bb98d5">tell</link> (self, np.ndarray ys)</para>

<para>Executes the PGPE (Policy Gradient with Parameter-based Exploration) algorithm by interfacing with native code through ctypes. </para>
</listitem>
            <listitem><para>np.array <link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c">population</link> (self)</para>

<para>Retrieves the population from a population PGPE algorithm, processes it, and returns it as a NumPy array. </para>
</listitem>
            <listitem><para>OptimizeResult <link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e">result</link> (self)</para>

<para>Fetches the optimization result. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a9ffbedaabec9d62b8bd10edab6324c33">ptr</link></para>

<para>Pointer to the C++ PGPE object. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a65ed94e32ef0d14d2e63d6db3df4ef34">popsize</link> = popsize</para>

<para>Population size used for evolutionary optimization. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2">dim</link> = dim</para>

<para>Dimensionality of the problem&apos;s search space. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Optimization class using a C++ CR-FM-NES implementation via <computeroutput>ctypes</computeroutput>. </para>



<para>Minimizes a scalar objective function of one or more variables using a population-based evolutionary strategy. This class allows interaction with the underlying C++ implementation to run optimization tasks with high performance and flexibility. </para>
<para>
Definition at line <link linkend="_pgpecpp_8py_source_1l00180">180</link> of file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a966fbd9f17de3cc069973c3b9d01915c"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>fcmaes.pgpecpp.PGPE_C</secondary></indexterm>
<indexterm><primary>fcmaes.pgpecpp.PGPE_C</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>fcmaes.pgpecpp.PGPE_C.__init__ ( self, int dim, Optional[Bounds]  bounds = <computeroutput>None</computeroutput>
, Optional[ArrayLike]  x0 = <computeroutput>None</computeroutput>
, Optional[Union[float, ArrayLike, Callable]]  input_sigma = <computeroutput>0.1</computeroutput>
, Optional[int]  popsize = <computeroutput>32</computeroutput>
, Optional[Generator]  rg = <computeroutput>Generator(PCG64DXSM())</computeroutput>
, Optional[int]  runid = <computeroutput>0</computeroutput>
, Optional[bool]  normalize = <computeroutput>True</computeroutput>
, Optional[int]  lr_decay_steps = <computeroutput>1000</computeroutput>
, Optional[bool]  use_ranking = <computeroutput>False</computeroutput>
, Optional[float]  center_learning_rate = <computeroutput>0.15</computeroutput>
, Optional[float]  stdev_learning_rate = <computeroutput>0.1</computeroutput>
, Optional[float]  stdev_max_change = <computeroutput>0.2</computeroutput>
, Optional[float]  b1 = <computeroutput>0.9</computeroutput>
, Optional[float]  b2 = <computeroutput>0.999</computeroutput>
, Optional[float]  eps = <computeroutput>1e-8</computeroutput>
, Optional[float]  decay_coef = <computeroutput>1.0</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_pgpecpp_8py_source_1l00234">234</link> of file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a255b3fc3e61ebee7f65b20d63c6ba3d4"/><section>
    <title>__del__()</title>
<indexterm><primary>__del__</primary><secondary>fcmaes.pgpecpp.PGPE_C</secondary></indexterm>
<indexterm><primary>fcmaes.pgpecpp.PGPE_C</primary><secondary>__del__</secondary></indexterm>
<para><computeroutput>fcmaes.pgpecpp.PGPE_C.__del__ ( self)</computeroutput></para><para>

<para>Handles the destruction of the <link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c">PGPE_C</link> object to manage resources effectively. </para>
</para>

<para><literallayout><computeroutput>   This method is invoked automatically when the instance is about to be destroyed,
   allowing for proper cleanup of associated resources.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>None</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_pgpecpp_8py_source_1l00290">290</link> of file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe"/><section>
    <title>ask()</title>
<indexterm><primary>ask</primary><secondary>fcmaes.pgpecpp.PGPE_C</secondary></indexterm>
<indexterm><primary>fcmaes.pgpecpp.PGPE_C</primary><secondary>ask</secondary></indexterm>
<para><computeroutput> np.array fcmaes.pgpecpp.PGPE_C.ask ( self)</computeroutput></para><para>

<para>Generates and returns a population of samples based on the current state of the algorithm. </para>
</para>

<para><literallayout><computeroutput>   This method interacts with the C library function `askPGPE_C` to generate a new set of samples
   for the population. The returned samples are organized into a 2D NumPy array.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>np A 2D array where each row corresponds to a sample in the population.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry>
<para>If an error occurs during the population generation process with specific details printed to the console. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_pgpecpp_8py_source_1l00306">306</link> of file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c"/><section>
    <title>population()</title>
<indexterm><primary>population</primary><secondary>fcmaes.pgpecpp.PGPE_C</secondary></indexterm>
<indexterm><primary>fcmaes.pgpecpp.PGPE_C</primary><secondary>population</secondary></indexterm>
<para><computeroutput> np.array fcmaes.pgpecpp.PGPE_C.population ( self)</computeroutput></para><para>

<para>Retrieves the population from a population PGPE algorithm, processes it, and returns it as a NumPy array. </para>
</para>

<para>This method interacts with external C code for handling population data and converts the resulting data into a structured array.</para>

<para><formalpara><title>Returns</title>

<para></para>

<para>np A NumPy array containing the processed population data, where each entry corresponds to a subset of individuals in the population as defined by the <computeroutput>popsize</computeroutput> and <computeroutput>dim</computeroutput> attributes.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry>
<para>If an error occurs during the execution of the underlying population retrieval process or data processing. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_pgpecpp_8py_source_1l00357">357</link> of file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e"/><section>
    <title>result()</title>
<indexterm><primary>result</primary><secondary>fcmaes.pgpecpp.PGPE_C</secondary></indexterm>
<indexterm><primary>fcmaes.pgpecpp.PGPE_C</primary><secondary>result</secondary></indexterm>
<para><computeroutput> OptimizeResult fcmaes.pgpecpp.PGPE_C.result ( self)</computeroutput></para><para>

<para>Fetches the optimization result. </para>
</para>

<para><literallayout><computeroutput>   The method retrieves the solution obtained from the optimization procedure
   using a C-based backend. The result includes the optimized parameters,
   objective function value at the solution, the number of function
   evaluations, the number of iterations, and the exit status of the optimizer.

   In case of any exception during the retrieval process, a default result
   indicating failure is returned.
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>OptimizeResult An object containing the optimization result. It includes the following fields:<itemizedlist>
<listitem>
<para>x: ndarray of the optimized parameters.</para>
</listitem><listitem>
<para>fun: float value of the objective function at the solution.</para>
</listitem><listitem>
<para>nfev: int count of function evaluations.</para>
</listitem><listitem>
<para>nit: int count of iterations performed.</para>
</listitem><listitem>
<para>status: int exit status of the optimization.</para>
</listitem><listitem>
<para>success: bool indicating the success (True) or failure (False) of the optimization. </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_pgpecpp_8py_source_1l00393">393</link> of file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a3d030c90af2ea816f60372c4f0bb98d5"/><section>
    <title>tell()</title>
<indexterm><primary>tell</primary><secondary>fcmaes.pgpecpp.PGPE_C</secondary></indexterm>
<indexterm><primary>fcmaes.pgpecpp.PGPE_C</primary><secondary>tell</secondary></indexterm>
<para><computeroutput> int fcmaes.pgpecpp.PGPE_C.tell ( self, np.ndarray ys)</computeroutput></para><para>

<para>Executes the PGPE (Policy Gradient with Parameter-based Exploration) algorithm by interfacing with native code through ctypes. </para>
</para>

<para>The method passes the given numpy array to the underlying PGPE implementation.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ys</entry><entry>
<para>A 1D numpy array containing the parameters to be used by the PGPE algorithm.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>int The result returned by the PGPE native implementation. Returns -1 in case of an error. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_pgpecpp_8py_source_1l00333">333</link> of file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2"/><section>
    <title>dim</title>
<indexterm><primary>dim</primary><secondary>fcmaes.pgpecpp.PGPE_C</secondary></indexterm>
<indexterm><primary>fcmaes.pgpecpp.PGPE_C</primary><secondary>dim</secondary></indexterm>
<para><computeroutput>fcmaes.pgpecpp.PGPE_C.dim = dim</computeroutput></para><para>

<para>Dimensionality of the problem&apos;s search space. </para>
</para>

<para>Initializes an instance of the class with parameters for a PGPE (Policy Gradients with Parameter-based Exploration) optimization algorithm.</para>

<para>This constructor sets various hyperparameters and configuration options for running the algorithm. These include the problem dimension, bounds, initial guess, population size, learning rates, and other factors that control the optimization process.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>dim</entry><entry>
<para>Dimensionality of the optimization problem. </para>
</entry>
                            </row>
                            <row>
<entry>bounds</entry><entry>
<para>Input bounds defining the feasible region. </para>
</entry>
                            </row>
                            <row>
<entry>x0</entry><entry>
<para>Initial guess for the algorithm. input_sigma (Optional[Union[float, ArrayLike, Callable]]): Initial standard deviation for exploration, either as a scalar or array or function returning a value. </para>
</entry>
                            </row>
                            <row>
<entry>popsize</entry><entry>
<para>Size of the population. Ensures even number if not </para>
</entry>
                            </row>
                            <row>
<entry>already.</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>rg</entry><entry>
<para>Random number generator to control randomization in the algorithm. Defaults to a PCG64DXSM generator. </para>
</entry>
                            </row>
                            <row>
<entry>runid</entry><entry>
<para>Unique identifier for the optimization run. </para>
</entry>
                            </row>
                            <row>
<entry>normalize</entry><entry>
<para>Whether to normalize the input bounds. </para>
</entry>
                            </row>
                            <row>
<entry>lr_decay_steps</entry><entry>
<para>Number of iterations over which the learning rate decays. </para>
</entry>
                            </row>
                            <row>
<entry>use_ranking</entry><entry>
<para>If True, enables ranking-based updates. </para>
</entry>
                            </row>
                            <row>
<entry>center_learning_rate</entry><entry>
<para>Learning rate for the mean or center of the distribution. </para>
</entry>
                            </row>
                            <row>
<entry>stdev_learning_rate</entry><entry>
<para>Learning rate for the standard deviation of the search distribution. </para>
</entry>
                            </row>
                            <row>
<entry>stdev_max_change</entry><entry>
<para>Maximum allowable change for standard deviation in an iteration. </para>
</entry>
                            </row>
                            <row>
<entry>b1</entry><entry>
<para>Exponential decay rate for first moment estimates in adaptive learning. </para>
</entry>
                            </row>
                            <row>
<entry>b2</entry><entry>
<para>Exponential decay rate for second moment estimates in adaptive learning. </para>
</entry>
                            </row>
                            <row>
<entry>eps</entry><entry>
<para>Small constant to prevent division by zero in adaptive learning. </para>
</entry>
                            </row>
                            <row>
<entry>decay_coef</entry><entry>
<para>Coefficient controlling overall decay in learning adjustments.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry>
<para>Propagates exceptions encountered during the initialization of the algorithm backend. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_pgpecpp_8py_source_1l00276">276</link> of file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a65ed94e32ef0d14d2e63d6db3df4ef34"/><section>
    <title>popsize</title>
<indexterm><primary>popsize</primary><secondary>fcmaes.pgpecpp.PGPE_C</secondary></indexterm>
<indexterm><primary>fcmaes.pgpecpp.PGPE_C</primary><secondary>popsize</secondary></indexterm>
<para><computeroutput>fcmaes.pgpecpp.PGPE_C.popsize = popsize</computeroutput></para><para>

<para>Population size used for evolutionary optimization. </para>
</para>
<para>
Definition at line <link linkend="_pgpecpp_8py_source_1l00275">275</link> of file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a9ffbedaabec9d62b8bd10edab6324c33"/><section>
    <title>ptr</title>
<indexterm><primary>ptr</primary><secondary>fcmaes.pgpecpp.PGPE_C</secondary></indexterm>
<indexterm><primary>fcmaes.pgpecpp.PGPE_C</primary><secondary>ptr</secondary></indexterm>
<para><computeroutput>fcmaes.pgpecpp.PGPE_C.ptr</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;&#32;<link linkend="_pgpe_8cpp_1a15e7e7ada6ad4ab26263681ac00ac55b">initPGPE_C</link>(runid,&#32;dim,&#32;array_type(*guess),
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array_type(*lower),&#32;array_type(*upper),
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array_type(*input_sigma),&#32;popsize,&#32;int(rg.uniform(0,&#32;2**32&#32;-&#32;1)),
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lr_decay_steps,&#32;use_ranking,&#32;center_learning_rate,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stdev_learning_rate,&#32;stdev_max_change,&#32;b1,&#32;b2,&#32;eps,&#32;decay_coef,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize)
</programlisting><para>

<para>Pointer to the C++ PGPE object. </para>
</para>
<para>
Definition at line <link linkend="_pgpecpp_8py_source_1l00269">269</link> of file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
fcmaes/<link linkend="_pgpecpp_8py">pgpecpp.py</link></section>
</section>

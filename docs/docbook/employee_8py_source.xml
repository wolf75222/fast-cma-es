<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_employee_8py_source" xml:lang="en-US">
<title>employee.py</title>
<indexterm><primary>examples/employee.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_employee_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1employee">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_employee_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_employee_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_employee_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_employee_8py_source_1l00005"/>00005 
<anchor xml:id="_employee_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;See&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Employee.adoc&#32;for&#32;a&#32;detailed&#32;description.</emphasis>
<anchor xml:id="_employee_8py_source_1l00007"/>00007 
<anchor xml:id="_employee_8py_source_1l00008"/>00008 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.2</emphasis>
<anchor xml:id="_employee_8py_source_1l00009"/>00009 
<anchor xml:id="_employee_8py_source_1l00010"/>00010 <emphasis role="keyword">import</emphasis>&#32;json
<anchor xml:id="_employee_8py_source_1l00011"/>00011 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_employee_8py_source_1l00012"/>00012 <emphasis role="keyword">from</emphasis>&#32;dateutil.parser&#32;<emphasis role="keyword">import</emphasis>&#32;parse
<anchor xml:id="_employee_8py_source_1l00013"/>00013 <emphasis role="keyword">from</emphasis>&#32;numba&#32;<emphasis role="keyword">import</emphasis>&#32;njit
<anchor xml:id="_employee_8py_source_1l00014"/>00014 <emphasis role="keyword">import</emphasis>&#32;numba
<anchor xml:id="_employee_8py_source_1l00015"/>00015 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Bite_cpp,&#32;De_cpp,&#32;Crfmnes_cpp,&#32;wrapper
<anchor xml:id="_employee_8py_source_1l00016"/>00016 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;retry,&#32;moretry,&#32;modecpp,&#32;mode
<anchor xml:id="_employee_8py_source_1l00017"/>00017 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00018"/>00018 
<anchor xml:id="_employee_8py_source_1l00019"/>00019 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_employee_8py_source_1l00020"/>00020 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_employee_8py_source_1l00021"/>00021 
<anchor xml:id="_employee_8py_source_1l00022"/>00022 logger.remove()
<anchor xml:id="_employee_8py_source_1l00023"/><link linkend="_namespaceexamples_1_1employee_1a10d2b2d544bd7c073189648ed6db74ef">00023</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_employee_8py_source_1l00024"/>00024 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_employee_8py_source_1l00025"/>00025 
<anchor xml:id="_employee_8py_source_1l00026"/><link linkend="_namespaceexamples_1_1employee_1a0a58622a7a7c4f9fcfbbf879b94854b2">00026</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1employee_1a0a58622a7a7c4f9fcfbbf879b94854b2">shift_indices</link>(shifts):
<anchor xml:id="_employee_8py_source_1l00027"/>00027 &#32;&#32;&#32;&#32;shift_to_index&#32;=&#32;{}
<anchor xml:id="_employee_8py_source_1l00028"/>00028 &#32;&#32;&#32;&#32;days&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00029"/>00029 &#32;&#32;&#32;&#32;locations&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00030"/>00030 &#32;&#32;&#32;&#32;skills&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00031"/>00031 &#32;&#32;&#32;&#32;sec_start&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00032"/>00032 &#32;&#32;&#32;&#32;sec_end&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(shifts)):
<anchor xml:id="_employee_8py_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shift_to_index[str(shifts[i])]&#32;=&#32;i
<anchor xml:id="_employee_8py_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;day&#32;=&#32;shifts[i][<emphasis role="stringliteral">&apos;start&apos;</emphasis>].split(<emphasis role="stringliteral">&apos;T&apos;</emphasis>)[0]
<anchor xml:id="_employee_8py_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dt_start&#32;=&#32;parse(shifts[i][<emphasis role="stringliteral">&apos;start&apos;</emphasis>])
<anchor xml:id="_employee_8py_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dt_end&#32;=&#32;parse(shifts[i][<emphasis role="stringliteral">&apos;end&apos;</emphasis>])
<anchor xml:id="_employee_8py_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sec_start.append(dt_start.timestamp())
<anchor xml:id="_employee_8py_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sec_end.append(dt_end.timestamp())
<anchor xml:id="_employee_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;location&#32;=&#32;shifts[i][<emphasis role="stringliteral">&apos;location&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;required_skill&#32;=&#32;shifts[i][<emphasis role="stringliteral">&apos;required_skill&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;days.append(day)
<anchor xml:id="_employee_8py_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;locations.append(location)
<anchor xml:id="_employee_8py_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skills.append(required_skill)
<anchor xml:id="_employee_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;shift_to_index,&#32;days,&#32;locations,&#32;skills,&#32;\
<anchor xml:id="_employee_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.array(sec_start),&#32;np.array(sec_end)
<anchor xml:id="_employee_8py_source_1l00047"/>00047 
<anchor xml:id="_employee_8py_source_1l00048"/><link linkend="_namespaceexamples_1_1employee_1a93df84459b2fb28c6471daa74c139d9b">00048</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1employee_1a93df84459b2fb28c6471daa74c139d9b">employee_indices</link>(employees):
<anchor xml:id="_employee_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;empl_to_index&#32;=&#32;{}
<anchor xml:id="_employee_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;names&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;skill_sets&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(employees)):
<anchor xml:id="_employee_8py_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;empl_to_index[str(employees[i])]&#32;=&#32;i
<anchor xml:id="_employee_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;employees[i][<emphasis role="stringliteral">&apos;name&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skill_set&#32;=&#32;employees[i][<emphasis role="stringliteral">&apos;skill_set&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.append(name)
<anchor xml:id="_employee_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skill_sets.append(skill_set)
<anchor xml:id="_employee_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;empl_to_index,&#32;names,&#32;skill_sets
<anchor xml:id="_employee_8py_source_1l00059"/>00059 
<anchor xml:id="_employee_8py_source_1l00060"/><link linkend="_namespaceexamples_1_1employee_1a617d9fe08d9e0a14c2db07e579faa09e">00060</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1employee_1a617d9fe08d9e0a14c2db07e579faa09e">avail_indices</link>(avails):
<anchor xml:id="_employee_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;avails_to_index&#32;=&#32;{}
<anchor xml:id="_employee_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;names&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;types&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;days&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(avails)):
<anchor xml:id="_employee_8py_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avails_to_index[str(avails[i])]&#32;=&#32;i
<anchor xml:id="_employee_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;avails[i][<emphasis role="stringliteral">&apos;employee&apos;</emphasis>][<emphasis role="stringliteral">&apos;name&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type&#32;=&#32;avails[i][<emphasis role="stringliteral">&apos;availability_type&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;day&#32;=&#32;avails[i][<emphasis role="stringliteral">&apos;date&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.append(name)
<anchor xml:id="_employee_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;types.append(type)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;days.append(day)
<anchor xml:id="_employee_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;avails_to_index,&#32;names,&#32;types,&#32;days
<anchor xml:id="_employee_8py_source_1l00074"/>00074 
<anchor xml:id="_employee_8py_source_1l00075"/><link linkend="_namespaceexamples_1_1employee_1ab18f283155c98ce2de7c475df39a864d">00075</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1employee_1ab18f283155c98ce2de7c475df39a864d">index_map</link>(strs):
<anchor xml:id="_employee_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;to_index&#32;=&#32;{}
<anchor xml:id="_employee_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;ids&#32;=&#32;[]
<anchor xml:id="_employee_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;j&#32;=&#32;0
<anchor xml:id="_employee_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;s&#32;<emphasis role="keywordflow">in</emphasis>&#32;strs:
<anchor xml:id="_employee_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;s&#32;<emphasis role="keywordflow">in</emphasis>&#32;to_index:
<anchor xml:id="_employee_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to_index[s]&#32;=&#32;j
<anchor xml:id="_employee_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;+=&#32;1
<anchor xml:id="_employee_8py_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ids.append(to_index[s])
<anchor xml:id="_employee_8py_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;to_index,&#32;np.array(ids)
<anchor xml:id="_employee_8py_source_1l00085"/>00085 
<anchor xml:id="_employee_8py_source_1l00086"/><link linkend="_namespaceexamples_1_1employee_1a5394b6007fdbe17085a5f12ef7d55a2f">00086</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1employee_1a5394b6007fdbe17085a5f12ef7d55a2f">index_multi_map</link>(lists):
<anchor xml:id="_employee_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;to_index&#32;=&#32;{}
<anchor xml:id="_employee_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;max_len&#32;=&#32;max([len(l)&#32;<emphasis role="keywordflow">for</emphasis>&#32;l&#32;<emphasis role="keywordflow">in</emphasis>&#32;lists])&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;ids&#32;=&#32;np.full((len(lists),&#32;max_len),&#32;-1,&#32;dtype=int)
<anchor xml:id="_employee_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;k&#32;=&#32;0
<anchor xml:id="_employee_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(lists)):
<anchor xml:id="_employee_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l&#32;=&#32;lists[i]
<anchor xml:id="_employee_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(l)):
<anchor xml:id="_employee_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;l[j]
<anchor xml:id="_employee_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;s&#32;<emphasis role="keywordflow">in</emphasis>&#32;to_index:
<anchor xml:id="_employee_8py_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to_index[s]&#32;=&#32;k
<anchor xml:id="_employee_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k&#32;+=&#32;1
<anchor xml:id="_employee_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ids[i,j]&#32;=&#32;to_index[s]
<anchor xml:id="_employee_8py_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;to_index,&#32;np.array(ids)
<anchor xml:id="_employee_8py_source_1l00100"/>00100 
<anchor xml:id="_employee_8py_source_1l00101"/><link linkend="_namespaceexamples_1_1employee_1ae77fa958075499ad932d76e084aa27cc">00101</link> DESIRED&#32;=&#32;0
<anchor xml:id="_employee_8py_source_1l00102"/><link linkend="_namespaceexamples_1_1employee_1a10088c3a190eb6596fda3cde6e1d150d">00102</link> UNDESIRED&#32;=&#32;1
<anchor xml:id="_employee_8py_source_1l00103"/><link linkend="_namespaceexamples_1_1employee_1a045770e413dc0d779a16616b2368c57a">00103</link> UNAVAILABLE&#32;=&#32;2
<anchor xml:id="_employee_8py_source_1l00104"/><link linkend="_namespaceexamples_1_1employee_1a7c41f8641df0e47ff0443b7fda29f9bc">00104</link> avail_type_map&#32;=&#32;{<emphasis role="stringliteral">&apos;DESIRED&apos;</emphasis>:DESIRED,&#32;<emphasis role="stringliteral">&apos;UNDESIRED&apos;</emphasis>:UNDESIRED,&#32;<emphasis role="stringliteral">&apos;UNAVAILABLE&apos;</emphasis>:UNAVAILABLE}
<anchor xml:id="_employee_8py_source_1l00105"/>00105 
<anchor xml:id="_employee_8py_source_1l00106"/>00106 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>
<anchor xml:id="_employee_8py_source_1l00107"/><link linkend="_namespaceexamples_1_1employee_1aa8d6cedc8d0c67de9584d0c0118ad058">00107</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1employee_1aa8d6cedc8d0c67de9584d0c0118ad058">fitness_</link>(employees_at_shift,&#32;day_ids,&#32;required_skill_ids,&#32;skill_set_ids,&#32;
<anchor xml:id="_employee_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avail_names_ids,&#32;avail_days_ids,&#32;avail_type_ids,&#32;sec_start,&#32;sec_end):
<anchor xml:id="_employee_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;score&#32;=&#32;0
<anchor xml:id="_employee_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;num_employees&#32;=&#32;len(skill_set_ids)
<anchor xml:id="_employee_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;employee_last_day&#32;=&#32;np.full(num_employees,&#32;-1,&#32;dtype=numba.int32)
<anchor xml:id="_employee_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;employee_last_end&#32;=&#32;np.full(num_employees,&#32;-1,&#32;dtype=numba.int32)
<anchor xml:id="_employee_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;employee_num_shifts&#32;=&#32;np.zeros(num_employees,&#32;dtype=numba.int32)
<anchor xml:id="_employee_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;shift&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(employees_at_shift)):
<anchor xml:id="_employee_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;day&#32;=&#32;day_ids[shift]
<anchor xml:id="_employee_8py_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee&#32;=&#32;employees_at_shift[shift]
<anchor xml:id="_employee_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee_num_shifts[employee]&#32;+=&#32;1
<anchor xml:id="_employee_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;employee_last_day[employee]&#32;==&#32;day:
<anchor xml:id="_employee_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;score&#32;+=&#32;1000&#32;&#32;<emphasis role="comment">#&#32;employee&#32;should&#32;only&#32;work&#32;once&#32;a&#32;day</emphasis>
<anchor xml:id="_employee_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee_last_day[employee]&#32;=&#32;day
<anchor xml:id="_employee_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;sec_start[shift]&#32;-&#32;employee_last_end[employee]&#32;&lt;&#32;10*3600:
<anchor xml:id="_employee_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;score&#32;+=&#32;1000&#32;&#32;<emphasis role="comment">#&#32;employee&#32;should&#32;pause&#32;for&#32;10&#32;hours&#32;(and&#32;shifts&#32;should&#32;not&#32;overlap)</emphasis>
<anchor xml:id="_employee_8py_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee_last_end[employee]&#32;=&#32;sec_end[shift]
<anchor xml:id="_employee_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;required_skill&#32;=&#32;required_skill_ids[shift]
<anchor xml:id="_employee_8py_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skill_set&#32;=&#32;skill_set_ids[employee]
<anchor xml:id="_employee_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;required_skill&#32;<emphasis role="keywordflow">in</emphasis>&#32;skill_set:&#32;
<anchor xml:id="_employee_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;score&#32;+=&#32;1000&#32;<emphasis role="comment">#&#32;employee&#32;has&#32;wrong&#32;skill&#32;set</emphasis>
<anchor xml:id="_employee_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avail_ids&#32;=&#32;np.where(avail_names_ids&#32;==&#32;employee)
<anchor xml:id="_employee_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;avail_id&#32;<emphasis role="keywordflow">in</emphasis>&#32;avail_ids[0]:
<anchor xml:id="_employee_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;avail_day&#32;=&#32;avail_days_ids[avail_id]
<anchor xml:id="_employee_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;day&#32;==&#32;avail_day:
<anchor xml:id="_employee_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type&#32;=&#32;avail_type_ids[avail_id]
<anchor xml:id="_employee_8py_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;type&#32;==&#32;UNDESIRED:&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;score&#32;+=&#32;100&#32;<emphasis role="comment">#&#32;employee&#32;does&#32;not&#32;want&#32;to&#32;work&#32;this&#32;day</emphasis>
<anchor xml:id="_employee_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;type&#32;==&#32;UNAVAILABLE:
<anchor xml:id="_employee_8py_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;score&#32;+=&#32;1000&#32;<emphasis role="comment">#&#32;employee&#32;is&#32;unavailable</emphasis>
<anchor xml:id="_employee_8py_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;type&#32;==&#32;DESIRED:
<anchor xml:id="_employee_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;score&#32;-=&#32;100&#32;<emphasis role="comment">#&#32;employee&#32;works&#32;at&#32;desired&#32;day</emphasis>
<anchor xml:id="_employee_8py_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;score,&#32;employee_num_shifts
<anchor xml:id="_employee_8py_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00141"/><link linkend="_classexamples_1_1employee_1_1problem">00141</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1employee_1_1problem">problem</link>():
<anchor xml:id="_employee_8py_source_1l00142"/>00142 &#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00143"/><link linkend="_classexamples_1_1employee_1_1problem_1a033ab2b283e0100bf5a86f4dc8d1cdee">00143</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1employee_1_1problem_1a033ab2b283e0100bf5a86f4dc8d1cdee">__init__</link>(self,&#32;json_file):
<anchor xml:id="_employee_8py_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;open(json_file)&#32;<emphasis role="keyword">as</emphasis>&#32;json_file:
<anchor xml:id="_employee_8py_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sched&#32;=&#32;json.load(json_file)&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00147"/><link linkend="_classexamples_1_1employee_1_1problem_1ab63104468a52403ee813ce6ff6745374">00147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ab63104468a52403ee813ce6ff6745374">shifts</link>&#32;=&#32;sched[<emphasis role="stringliteral">&apos;shift_list&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00148"/><link linkend="_classexamples_1_1employee_1_1problem_1a4899b9bc494d478a71fbeb28f040ceba">00148</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af730ca54e6310f3f3cc8322deb6cf6c6">shift_to_index</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a4899b9bc494d478a71fbeb28f040ceba">days</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a03eca8445435b63a090a54e4b3659057">locations</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1aab1b2159c2e6513b5861764ae21556dd">required_skills</link>,&#32;\
<anchor xml:id="_employee_8py_source_1l00149"/><link linkend="_classexamples_1_1employee_1_1problem_1a82e6d3c21f10189d1b44d8847f6a1c60">00149</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a7cbf0b7dd7d7286687a799331c6dd51e">sec_start</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a82e6d3c21f10189d1b44d8847f6a1c60">sec_end</link>&#32;=&#32;<link linkend="_namespaceexamples_1_1employee_1a0a58622a7a7c4f9fcfbbf879b94854b2">shift_indices</link>(self.<link linkend="_classexamples_1_1employee_1_1problem_1ab63104468a52403ee813ce6ff6745374">shifts</link>)
<anchor xml:id="_employee_8py_source_1l00150"/><link linkend="_classexamples_1_1employee_1_1problem_1af93f1f9f6296f980a3b2fdeb681eadb2">00150</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af50494fb419a3c824b2dea5f97538891">day_to_index</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af93f1f9f6296f980a3b2fdeb681eadb2">day_ids</link>&#32;=&#32;<link linkend="_namespaceexamples_1_1employee_1ab18f283155c98ce2de7c475df39a864d">index_map</link>(self.<link linkend="_classexamples_1_1employee_1_1problem_1a4899b9bc494d478a71fbeb28f040ceba">days</link>)
<anchor xml:id="_employee_8py_source_1l00151"/><link linkend="_classexamples_1_1employee_1_1problem_1a791bc4ac8d62196dab60d3277b146f7c">00151</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ac13841291b0064789b8d36a3bfb275e8">location_to_index</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a791bc4ac8d62196dab60d3277b146f7c">location_ids</link>&#32;=&#32;<link linkend="_namespaceexamples_1_1employee_1ab18f283155c98ce2de7c475df39a864d">index_map</link>(self.<link linkend="_classexamples_1_1employee_1_1problem_1a03eca8445435b63a090a54e4b3659057">locations</link>)
<anchor xml:id="_employee_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00153"/><link linkend="_classexamples_1_1employee_1_1problem_1a00dc45ea9a2513fa5f1cbb6867e5d677">00153</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a00dc45ea9a2513fa5f1cbb6867e5d677">employees</link>&#32;=&#32;sched[<emphasis role="stringliteral">&apos;employee_list&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00154"/><link linkend="_classexamples_1_1employee_1_1problem_1ad7650edfaf32cc655316a9fa8f2c5691">00154</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ad7650edfaf32cc655316a9fa8f2c5691">employee_to_index</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1aac5d784e20b57d4542dad5f98ead0925">names</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af535f89234509bd801f6c978aa50c9f3">skill_sets</link>&#32;=&#32;<link linkend="_namespaceexamples_1_1employee_1a93df84459b2fb28c6471daa74c139d9b">employee_indices</link>(self.<link linkend="_classexamples_1_1employee_1_1problem_1a00dc45ea9a2513fa5f1cbb6867e5d677">employees</link>)
<anchor xml:id="_employee_8py_source_1l00155"/><link linkend="_classexamples_1_1employee_1_1problem_1ac408d43691b03a30620fe529e726da1e">00155</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ac5f026f711fad91d2eb81fec35eccc68">name_to_index</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ac408d43691b03a30620fe529e726da1e">name_ids</link>&#32;=&#32;<link linkend="_namespaceexamples_1_1employee_1ab18f283155c98ce2de7c475df39a864d">index_map</link>(self.<link linkend="_classexamples_1_1employee_1_1problem_1aac5d784e20b57d4542dad5f98ead0925">names</link>)
<anchor xml:id="_employee_8py_source_1l00156"/><link linkend="_classexamples_1_1employee_1_1problem_1a5d11cc597eed0c3ec8d17ff1709b4348">00156</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a24f12742b39ffe059a54abcb153d8099">skill_to_index</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a5d11cc597eed0c3ec8d17ff1709b4348">skill_set_ids</link>&#32;=&#32;<link linkend="_namespaceexamples_1_1employee_1a5394b6007fdbe17085a5f12ef7d55a2f">index_multi_map</link>(self.<link linkend="_classexamples_1_1employee_1_1problem_1af535f89234509bd801f6c978aa50c9f3">skill_sets</link>)
<anchor xml:id="_employee_8py_source_1l00157"/><link linkend="_classexamples_1_1employee_1_1problem_1ac36deeee6c750e0eda3a912b28ed04e8">00157</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ac36deeee6c750e0eda3a912b28ed04e8">required_skill_ids</link>&#32;=&#32;np.array(np.fromiter((self.<link linkend="_classexamples_1_1employee_1_1problem_1a24f12742b39ffe059a54abcb153d8099">skill_to_index</link>[s]&#32;<emphasis role="keywordflow">for</emphasis>&#32;s&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1aab1b2159c2e6513b5861764ae21556dd">required_skills</link>),&#32;dtype=int))
<anchor xml:id="_employee_8py_source_1l00158"/>00158 
<anchor xml:id="_employee_8py_source_1l00159"/><link linkend="_classexamples_1_1employee_1_1problem_1a17c3a286e29019b8fdf8fda0ef405dfd">00159</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a17c3a286e29019b8fdf8fda0ef405dfd">avails</link>&#32;=&#32;sched[<emphasis role="stringliteral">&apos;availability_list&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00160"/><link linkend="_classexamples_1_1employee_1_1problem_1a54478a860a92917ca51c7ae454bf3ff6">00160</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1aea543c5ede2a6e57fa57ba473b67fa98">avail_to_index</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1affd959b97305da24e073789749d4b800">avail_names</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ad467a80771739159fdf447ef57bbc517">avail_types</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a54478a860a92917ca51c7ae454bf3ff6">avail_days</link>&#32;=&#32;<link linkend="_namespaceexamples_1_1employee_1a617d9fe08d9e0a14c2db07e579faa09e">avail_indices</link>(self.<link linkend="_classexamples_1_1employee_1_1problem_1a17c3a286e29019b8fdf8fda0ef405dfd">avails</link>)
<anchor xml:id="_employee_8py_source_1l00161"/><link linkend="_classexamples_1_1employee_1_1problem_1a41c8d2a1c3c701b94c44ab11da40b132">00161</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a41c8d2a1c3c701b94c44ab11da40b132">avail_name_ids</link>&#32;=&#32;np.array(np.fromiter((self.<link linkend="_classexamples_1_1employee_1_1problem_1ac5f026f711fad91d2eb81fec35eccc68">name_to_index</link>[n]&#32;<emphasis role="keywordflow">for</emphasis>&#32;n&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1affd959b97305da24e073789749d4b800">avail_names</link>),&#32;dtype=int))
<anchor xml:id="_employee_8py_source_1l00162"/><link linkend="_classexamples_1_1employee_1_1problem_1a1e9a8352ff2314fa6195be5a4402e4b6">00162</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a1e9a8352ff2314fa6195be5a4402e4b6">avail_day_ids</link>&#32;=&#32;np.array(np.fromiter((self.<link linkend="_classexamples_1_1employee_1_1problem_1af50494fb419a3c824b2dea5f97538891">day_to_index</link>[d]&#32;<emphasis role="keywordflow">for</emphasis>&#32;d&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a54478a860a92917ca51c7ae454bf3ff6">avail_days</link>),&#32;dtype=int))
<anchor xml:id="_employee_8py_source_1l00163"/><link linkend="_classexamples_1_1employee_1_1problem_1af337c3fbf86bdce8af2a6edfb41de607">00163</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af337c3fbf86bdce8af2a6edfb41de607">avail_type_ids</link>&#32;=&#32;np.array(np.fromiter((avail_type_map[t]&#32;<emphasis role="keywordflow">for</emphasis>&#32;t&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ad467a80771739159fdf447ef57bbc517">avail_types</link>),&#32;dtype=int))
<anchor xml:id="_employee_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;days&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a4899b9bc494d478a71fbeb28f040ceba">days</link>)
<anchor xml:id="_employee_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;day_ids&quot;</emphasis>,self.<link linkend="_classexamples_1_1employee_1_1problem_1af93f1f9f6296f980a3b2fdeb681eadb2">day_ids</link>)
<anchor xml:id="_employee_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;day_to_index&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af50494fb419a3c824b2dea5f97538891">day_to_index</link>)
<anchor xml:id="_employee_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;location_ids&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a791bc4ac8d62196dab60d3277b146f7c">location_ids</link>)
<anchor xml:id="_employee_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;required_skill_ids&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1aab1b2159c2e6513b5861764ae21556dd">required_skills</link>)
<anchor xml:id="_employee_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;required_skills_ids&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ac36deeee6c750e0eda3a912b28ed04e8">required_skill_ids</link>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;names&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1aac5d784e20b57d4542dad5f98ead0925">names</link>)
<anchor xml:id="_employee_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;name_ids&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ac408d43691b03a30620fe529e726da1e">name_ids</link>)
<anchor xml:id="_employee_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;skill_set_ids&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a5d11cc597eed0c3ec8d17ff1709b4348">skill_set_ids</link>)
<anchor xml:id="_employee_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;avail_name_ids&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a41c8d2a1c3c701b94c44ab11da40b132">avail_name_ids</link>)
<anchor xml:id="_employee_8py_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;avail_day_ids&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a1e9a8352ff2314fa6195be5a4402e4b6">avail_day_ids</link>)
<anchor xml:id="_employee_8py_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;avail_types&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ad467a80771739159fdf447ef57bbc517">avail_types</link>)
<anchor xml:id="_employee_8py_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;avail_type_ids&quot;</emphasis>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af337c3fbf86bdce8af2a6edfb41de607">avail_type_ids</link>)
<anchor xml:id="_employee_8py_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00179"/><link linkend="_classexamples_1_1employee_1_1problem_1a20d86685f62e59d9c53fe09a8678b8cd">00179</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a20d86685f62e59d9c53fe09a8678b8cd">dim</link>&#32;=&#32;len(self.<link linkend="_classexamples_1_1employee_1_1problem_1ab63104468a52403ee813ce6ff6745374">shifts</link>)
<anchor xml:id="_employee_8py_source_1l00180"/><link linkend="_classexamples_1_1employee_1_1problem_1a0f84e8b53814615766163e596a3425b5">00180</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a0f84e8b53814615766163e596a3425b5">bounds</link>&#32;=&#32;Bounds([0]*self.<link linkend="_classexamples_1_1employee_1_1problem_1a20d86685f62e59d9c53fe09a8678b8cd">dim</link>,&#32;[len(self.<link linkend="_classexamples_1_1employee_1_1problem_1a00dc45ea9a2513fa5f1cbb6867e5d677">employees</link>)-1E-9]*self.<link linkend="_classexamples_1_1employee_1_1problem_1a20d86685f62e59d9c53fe09a8678b8cd">dim</link>)&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00181"/>00181 
<anchor xml:id="_employee_8py_source_1l00182"/><link linkend="_classexamples_1_1employee_1_1problem_1a88fb1f528fee9cf2fe3979bda5bb43c5">00182</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1employee_1_1problem_1a88fb1f528fee9cf2fe3979bda5bb43c5">fitness</link>(self,&#32;x):
<anchor xml:id="_employee_8py_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;score,&#32;employee_num_shifts&#32;=&#32;<link linkend="_namespaceexamples_1_1employee_1aa8d6cedc8d0c67de9584d0c0118ad058">fitness_</link>(x.astype(int),&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af93f1f9f6296f980a3b2fdeb681eadb2">day_ids</link>,&#32;
<anchor xml:id="_employee_8py_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ac36deeee6c750e0eda3a912b28ed04e8">required_skill_ids</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a5d11cc597eed0c3ec8d17ff1709b4348">skill_set_ids</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a41c8d2a1c3c701b94c44ab11da40b132">avail_name_ids</link>,&#32;
<anchor xml:id="_employee_8py_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a1e9a8352ff2314fa6195be5a4402e4b6">avail_day_ids</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af337c3fbf86bdce8af2a6edfb41de607">avail_type_ids</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a7cbf0b7dd7d7286687a799331c6dd51e">sec_start</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a82e6d3c21f10189d1b44d8847f6a1c60">sec_end</link>)
<anchor xml:id="_employee_8py_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;score&#32;+&#32;10*np.std(employee_num_shifts)
<anchor xml:id="_employee_8py_source_1l00187"/>00187 
<anchor xml:id="_employee_8py_source_1l00188"/><link linkend="_classexamples_1_1employee_1_1problem_1a7e757b49faf9cee5a35c9ca99b3e28c3">00188</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1employee_1_1problem_1a7e757b49faf9cee5a35c9ca99b3e28c3">fitness_mo</link>(self,&#32;x):
<anchor xml:id="_employee_8py_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;score,&#32;employee_num_shifts&#32;=&#32;<link linkend="_namespaceexamples_1_1employee_1aa8d6cedc8d0c67de9584d0c0118ad058">fitness_</link>(x.astype(int),&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af93f1f9f6296f980a3b2fdeb681eadb2">day_ids</link>,&#32;
<anchor xml:id="_employee_8py_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ac36deeee6c750e0eda3a912b28ed04e8">required_skill_ids</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a5d11cc597eed0c3ec8d17ff1709b4348">skill_set_ids</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a41c8d2a1c3c701b94c44ab11da40b132">avail_name_ids</link>,&#32;
<anchor xml:id="_employee_8py_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a1e9a8352ff2314fa6195be5a4402e4b6">avail_day_ids</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af337c3fbf86bdce8af2a6edfb41de607">avail_type_ids</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a7cbf0b7dd7d7286687a799331c6dd51e">sec_start</link>,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a82e6d3c21f10189d1b44d8847f6a1c60">sec_end</link>)
<anchor xml:id="_employee_8py_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[score,&#32;np.std(employee_num_shifts)]
<anchor xml:id="_employee_8py_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#return&#32;[score,&#32;-min(employee_num_shifts)]</emphasis>
<anchor xml:id="_employee_8py_source_1l00194"/>00194 &#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00195"/><link linkend="_classexamples_1_1employee_1_1problem_1a7a2e3aedb09ebf076fb59d8505c76fe9">00195</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1employee_1_1problem_1a7a2e3aedb09ebf076fb59d8505c76fe9">show</link>(self,&#32;x):
<anchor xml:id="_employee_8py_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employees_at_shift&#32;=&#32;x.astype(int)
<anchor xml:id="_employee_8py_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(employees_at_shift)):
<anchor xml:id="_employee_8py_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;empl&#32;=&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a00dc45ea9a2513fa5f1cbb6867e5d677">employees</link>[employees_at_shift[i]]
<anchor xml:id="_employee_8py_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shift&#32;=&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ab63104468a52403ee813ce6ff6745374">shifts</link>[i]
<anchor xml:id="_employee_8py_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shift[<emphasis role="stringliteral">&apos;employee&apos;</emphasis>]&#32;=&#32;empl
<anchor xml:id="_employee_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(i,&#32;shift)&#32;
<anchor xml:id="_employee_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_employees&#32;=&#32;len(self.<link linkend="_classexamples_1_1employee_1_1problem_1a5d11cc597eed0c3ec8d17ff1709b4348">skill_set_ids</link>)
<anchor xml:id="_employee_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee_last_day&#32;=&#32;np.full(num_employees,&#32;-1,&#32;dtype=int)
<anchor xml:id="_employee_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee_last_end&#32;=&#32;np.full(num_employees,&#32;-1,&#32;dtype=int)
<anchor xml:id="_employee_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee_num_shifts&#32;=&#32;np.zeros(num_employees,&#32;dtype=int)
<anchor xml:id="_employee_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(employees_at_shift)):
<anchor xml:id="_employee_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shift&#32;=&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ab63104468a52403ee813ce6ff6745374">shifts</link>[i]
<anchor xml:id="_employee_8py_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;day&#32;=&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1af93f1f9f6296f980a3b2fdeb681eadb2">day_ids</link>[i]
<anchor xml:id="_employee_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee&#32;=&#32;employees_at_shift[i]
<anchor xml:id="_employee_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1aac5d784e20b57d4542dad5f98ead0925">names</link>[employee]
<anchor xml:id="_employee_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee_num_shifts[employee]&#32;+=&#32;1
<anchor xml:id="_employee_8py_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;employee_last_day[employee]&#32;==&#32;day:
<anchor xml:id="_employee_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;employee&quot;</emphasis>,&#32;name,&#32;<emphasis role="stringliteral">&quot;works&#32;twice&#32;a&#32;day&quot;</emphasis>,&#32;shift)
<anchor xml:id="_employee_8py_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee_last_day[employee]&#32;=&#32;day
<anchor xml:id="_employee_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a7cbf0b7dd7d7286687a799331c6dd51e">sec_start</link>[i]&#32;-&#32;employee_last_end[employee]&#32;&lt;&#32;10*3600:
<anchor xml:id="_employee_8py_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;employee&quot;</emphasis>,&#32;name,&#32;<emphasis role="stringliteral">&quot;employee&#32;should&#32;pause&#32;for&#32;10&#32;hours&#32;&quot;</emphasis>,&#32;shift)
<anchor xml:id="_employee_8py_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;employee_last_end[employee]&#32;=&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a82e6d3c21f10189d1b44d8847f6a1c60">sec_end</link>[i]
<anchor xml:id="_employee_8py_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;required_skill&#32;=&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ac36deeee6c750e0eda3a912b28ed04e8">required_skill_ids</link>[i]
<anchor xml:id="_employee_8py_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;skill_set&#32;=&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a5d11cc597eed0c3ec8d17ff1709b4348">skill_set_ids</link>[employee]
<anchor xml:id="_employee_8py_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;required_skill&#32;<emphasis role="keywordflow">in</emphasis>&#32;skill_set:&#32;
<anchor xml:id="_employee_8py_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;employee&quot;</emphasis>,&#32;name,&#32;<emphasis role="stringliteral">&quot;has&#32;wrong&#32;skill&#32;set&quot;</emphasis>,&#32;shift)
<anchor xml:id="_employee_8py_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;desired&#32;=&#32;0
<anchor xml:id="_employee_8py_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(employees_at_shift)):
<anchor xml:id="_employee_8py_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shift&#32;=&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1ab63104468a52403ee813ce6ff6745374">shifts</link>[i]
<anchor xml:id="_employee_8py_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;day&#32;=&#32;shift[<emphasis role="stringliteral">&apos;start&apos;</emphasis>].split(<emphasis role="stringliteral">&apos;T&apos;</emphasis>)[0]
<anchor xml:id="_employee_8py_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;empl&#32;=&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a00dc45ea9a2513fa5f1cbb6867e5d677">employees</link>[employees_at_shift[i]]
<anchor xml:id="_employee_8py_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;avail&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a17c3a286e29019b8fdf8fda0ef405dfd">avails</link>:
<anchor xml:id="_employee_8py_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aday&#32;=&#32;avail[<emphasis role="stringliteral">&apos;date&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;aday&#32;==&#32;day:
<anchor xml:id="_employee_8py_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aempl&#32;=&#32;avail[<emphasis role="stringliteral">&apos;employee&apos;</emphasis>]
<anchor xml:id="_employee_8py_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;aempl&#32;==&#32;empl:
<anchor xml:id="_employee_8py_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(empl,&#32;avail)
<anchor xml:id="_employee_8py_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;avail[<emphasis role="stringliteral">&apos;availability_type&apos;</emphasis>]&#32;==&#32;<emphasis role="stringliteral">&apos;DESIRED&apos;</emphasis>:
<anchor xml:id="_employee_8py_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;desired&#32;+=&#32;1
<anchor xml:id="_employee_8py_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;desired&#32;shift&#32;days&quot;</emphasis>,&#32;desired)
<anchor xml:id="_employee_8py_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;shifts&#32;per&#32;employee&quot;</emphasis>,&#32;list(employee_num_shifts))
<anchor xml:id="_employee_8py_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;min&#32;shifts&#32;per&#32;employee&quot;</emphasis>,&#32;min(employee_num_shifts))
<anchor xml:id="_employee_8py_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;mean&#32;shifts&#32;per&#32;employee&quot;</emphasis>,&#32;np.mean(employee_num_shifts))
<anchor xml:id="_employee_8py_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;std&#32;shifts&#32;per&#32;employee&quot;</emphasis>,&#32;np.std(employee_num_shifts))
<anchor xml:id="_employee_8py_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00241"/><link linkend="_classexamples_1_1employee_1_1problem_1a96c79aee6dab29a25fd28b0b383f1916">00241</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1employee_1_1problem_1a96c79aee6dab29a25fd28b0b383f1916">optimize</link>(self):
<anchor xml:id="_employee_8py_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a88fb1f528fee9cf2fe3979bda5bb43c5">fitness</link>(np.random.uniform(0,&#32;len(self.<link linkend="_classexamples_1_1employee_1_1problem_1a00dc45ea9a2513fa5f1cbb6867e5d677">employees</link>),&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a20d86685f62e59d9c53fe09a8678b8cd">dim</link>).astype(int))
<anchor xml:id="_employee_8py_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#res&#32;=&#32;retry.minimize_plot(&quot;schedule.bite.400k&quot;,&#32;Bite_cpp(400000),&#32;&#32;</emphasis>
<anchor xml:id="_employee_8py_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#res&#32;=&#32;retry.minimize_plot(&quot;schedule.de.400k&quot;,&#32;De_cpp(400000,&#32;popsize&#32;=&#32;512,&#32;ints&#32;=&#32;[True]*self.dim),&#32;</emphasis>
<anchor xml:id="_employee_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;retry.minimize_plot(<emphasis role="stringliteral">&quot;schedule.de.10000k&quot;</emphasis>,&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp">De_cpp</link>(10000000,&#32;popsize&#32;=&#32;10000,&#32;ints&#32;=&#32;[<emphasis role="keyword">True</emphasis>]*self.<link linkend="_classexamples_1_1employee_1_1problem_1a20d86685f62e59d9c53fe09a8678b8cd">dim</link>),&#32;
<anchor xml:id="_employee_8py_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfcmaes_1_1optimizer_1_1wrapper">wrapper</link>(self.<link linkend="_classexamples_1_1employee_1_1problem_1a88fb1f528fee9cf2fe3979bda5bb43c5">fitness</link>),&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a0f84e8b53814615766163e596a3425b5">bounds</link>,&#32;num_retries=32,&#32;plot_limit=10000)
<anchor xml:id="_employee_8py_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(self.<link linkend="_classexamples_1_1employee_1_1problem_1a7e757b49faf9cee5a35c9ca99b3e28c3">fitness_mo</link>(res.x))&#32;
<anchor xml:id="_employee_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a7a2e3aedb09ebf076fb59d8505c76fe9">show</link>(res.x)
<anchor xml:id="_employee_8py_source_1l00250"/>00250 
<anchor xml:id="_employee_8py_source_1l00251"/><link linkend="_classexamples_1_1employee_1_1problem_1a451356183bd266ec5feb44a1b9cf92ef">00251</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1employee_1_1problem_1a451356183bd266ec5feb44a1b9cf92ef">optimize_mo</link>(self):
<anchor xml:id="_employee_8py_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a7e757b49faf9cee5a35c9ca99b3e28c3">fitness_mo</link>(np.random.uniform(0,&#32;len(self.<link linkend="_classexamples_1_1employee_1_1problem_1a00dc45ea9a2513fa5f1cbb6867e5d677">employees</link>),&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a20d86685f62e59d9c53fe09a8678b8cd">dim</link>).astype(int))
<anchor xml:id="_employee_8py_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pname&#32;=&#32;<emphasis role="stringliteral">&quot;schedule_mo_600k.512&quot;</emphasis>&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs,&#32;ys&#32;=&#32;modecpp.retry(<link linkend="_classfcmaes_1_1mode_1_1wrapper">mode.wrapper</link>(self.<link linkend="_classexamples_1_1employee_1_1problem_1a7e757b49faf9cee5a35c9ca99b3e28c3">fitness_mo</link>,&#32;2),&#32;
<anchor xml:id="_employee_8py_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2,&#32;0,&#32;self.<link linkend="_classexamples_1_1employee_1_1problem_1a0f84e8b53814615766163e596a3425b5">bounds</link>,&#32;popsize&#32;=&#32;512,&#32;max_evaluations&#32;=&#32;600000,&#32;
<anchor xml:id="_employee_8py_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nsga_update=<emphasis role="keyword">True</emphasis>,&#32;num_retries&#32;=&#32;32,&#32;workers=32)
<anchor xml:id="_employee_8py_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;xs,&#32;ys&#32;=&#32;modecpp.retry(mode.wrapper(self.fitness_mo,&#32;2),&#32;</emphasis>
<anchor xml:id="_employee_8py_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2,&#32;0,&#32;self.bounds,&#32;popsize&#32;=&#32;4096,&#32;max_evaluations&#32;=&#32;20000000,&#32;</emphasis>
<anchor xml:id="_employee_8py_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;&#32;nsga_update=True,&#32;num_retries&#32;=&#32;32,&#32;workers=32)</emphasis>
<anchor xml:id="_employee_8py_source_1l00263"/>00263 
<anchor xml:id="_employee_8py_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.savez_compressed(pname,&#32;xs=xs,&#32;ys=ys)
<anchor xml:id="_employee_8py_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs,&#32;ys&#32;=&#32;moretry.pareto(xs,&#32;ys)
<anchor xml:id="_employee_8py_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;x,&#32;y&#32;<emphasis role="keywordflow">in</emphasis>&#32;zip(xs,&#32;ys):
<anchor xml:id="_employee_8py_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(str(list(y))&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;str([int(xi)&#32;<emphasis role="keywordflow">for</emphasis>&#32;xi&#32;<emphasis role="keywordflow">in</emphasis>&#32;x]))
<anchor xml:id="_employee_8py_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00269"/><link linkend="_namespaceexamples_1_1employee_1a9676a4206eb4d11331bf0f725a98d91d">00269</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1employee_1a9676a4206eb4d11331bf0f725a98d91d">show_example_solution</link>():
<anchor xml:id="_employee_8py_source_1l00270"/>00270 &#32;&#32;&#32;&#32;x&#32;=&#32;[3,&#32;10,&#32;14,&#32;12,&#32;2,&#32;5,&#32;1,&#32;11,&#32;9,&#32;0,&#32;7,&#32;15,&#32;14,&#32;11,&#32;6,&#32;10,&#32;13,&#32;9,&#32;8,&#32;3,&#32;10,&#32;13,&#32;12,&#32;4,&#32;7,&#32;0,&#32;15,&#32;4,&#32;2,&#32;1,&#32;5,&#32;6,&#32;11,&#32;13,&#32;7,&#32;15,&#32;10,&#32;4,&#32;3,&#32;14,&#32;11,&#32;13,&#32;2,&#32;1,&#32;0,&#32;2,&#32;9,&#32;7,&#32;4,&#32;1,&#32;13,&#32;10,&#32;8,&#32;12,&#32;15,&#32;9,&#32;3,&#32;11,&#32;4,&#32;10,&#32;5,&#32;13,&#32;0,&#32;5,&#32;13,&#32;14,&#32;11,&#32;6,&#32;12,&#32;3,&#32;10,&#32;4,&#32;8,&#32;5,&#32;1,&#32;14,&#32;4,&#32;12,&#32;2,&#32;7,&#32;0,&#32;3,&#32;8,&#32;9,&#32;7,&#32;4,&#32;15,&#32;6,&#32;14,&#32;10,&#32;6,&#32;5,&#32;15,&#32;8,&#32;10,&#32;11,&#32;3,&#32;12,&#32;1,&#32;0,&#32;8,&#32;9,&#32;2,&#32;13,&#32;6,&#32;5,&#32;7,&#32;12,&#32;6,&#32;4,&#32;11,&#32;9,&#32;14,&#32;1,&#32;2,&#32;8,&#32;15,&#32;12,&#32;1,&#32;3,&#32;11,&#32;15,&#32;5,&#32;2,&#32;6,&#32;8]&#32;
<anchor xml:id="_employee_8py_source_1l00271"/>00271 &#32;&#32;&#32;&#32;p.show(np.array(x))
<anchor xml:id="_employee_8py_source_1l00272"/>00272 &#32;&#32;&#32;&#32;print(list(x))
<anchor xml:id="_employee_8py_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_employee_8py_source_1l00274"/>00274 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_employee_8py_source_1l00275"/>00275 &#32;&#32;&#32;&#32;<emphasis role="comment">#p&#32;=&#32;problem(&apos;data/sched1.json&apos;)</emphasis>
<anchor xml:id="_employee_8py_source_1l00276"/><link linkend="_namespaceexamples_1_1employee_1a3f0037e0195b5b4153034bb0d67a95be">00276</link> &#32;&#32;&#32;&#32;p&#32;=&#32;<link linkend="_classexamples_1_1employee_1_1problem">problem</link>(<emphasis role="stringliteral">&apos;data/sched2.json&apos;</emphasis>)
<anchor xml:id="_employee_8py_source_1l00277"/>00277 &#32;&#32;&#32;&#32;p.optimize()
<anchor xml:id="_employee_8py_source_1l00278"/>00278 &#32;&#32;&#32;&#32;<emphasis role="comment">#p.optimize_mo()</emphasis>
<anchor xml:id="_employee_8py_source_1l00279"/>00279 &#32;&#32;&#32;&#32;<emphasis role="comment">#show_example_solution()</emphasis>
<anchor xml:id="_employee_8py_source_1l00280"/>00280 
<anchor xml:id="_employee_8py_source_1l00281"/>00281 &#32;&#32;&#32;&#32;
</programlisting></section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_house_8py_source" xml:lang="en-US">
<title>house.py</title>
<indexterm><primary>examples/house.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_house_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1house">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_house_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_house_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_house_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_house_8py_source_1l00005"/>00005 
<anchor xml:id="_house_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;adapted&#32;from&#32;https://www.kaggle.com/pablocastilla/predict-house-prices-with-xgboost-regression</emphasis>
<anchor xml:id="_house_8py_source_1l00007"/>00007 
<anchor xml:id="_house_8py_source_1l00008"/>00008 <emphasis role="comment">#&#32;See&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/HyperparameterOptimization.adoc&#32;for&#32;a&#32;detailed&#32;description.</emphasis>
<anchor xml:id="_house_8py_source_1l00009"/>00009 
<anchor xml:id="_house_8py_source_1l00010"/>00010 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.2</emphasis>
<anchor xml:id="_house_8py_source_1l00011"/>00011 
<anchor xml:id="_house_8py_source_1l00012"/>00012 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np&#32;<emphasis role="comment">#&#32;linear&#32;algebra</emphasis>
<anchor xml:id="_house_8py_source_1l00013"/>00013 <emphasis role="keyword">import</emphasis>&#32;pandas&#32;<emphasis role="keyword">as</emphasis>&#32;pd&#32;<emphasis role="comment">#&#32;data&#32;processing,&#32;CSV&#32;file&#32;I/O&#32;(e.g.&#32;pd.read_csv)</emphasis>
<anchor xml:id="_house_8py_source_1l00014"/>00014 <emphasis role="keyword">import</emphasis>&#32;xgboost
<anchor xml:id="_house_8py_source_1l00015"/>00015 
<anchor xml:id="_house_8py_source_1l00016"/>00016 <emphasis role="keyword">from</emphasis>&#32;sklearn.model_selection&#32;<emphasis role="keyword">import</emphasis>&#32;cross_val_score
<anchor xml:id="_house_8py_source_1l00017"/>00017 <emphasis role="keyword">from</emphasis>&#32;sklearn.model_selection&#32;<emphasis role="keyword">import</emphasis>&#32;GridSearchCV&#32;&#32;<emphasis role="comment">#Performing&#32;grid&#32;search</emphasis>
<anchor xml:id="_house_8py_source_1l00018"/>00018 <emphasis role="keyword">from</emphasis>&#32;collections&#32;<emphasis role="keyword">import</emphasis>&#32;OrderedDict
<anchor xml:id="_house_8py_source_1l00019"/>00019 
<anchor xml:id="_house_8py_source_1l00020"/>00020 <emphasis role="keyword">from</emphasis>&#32;xgboost&#32;<emphasis role="keyword">import</emphasis>&#32;XGBRegressor
<anchor xml:id="_house_8py_source_1l00021"/>00021 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;dtime
<anchor xml:id="_house_8py_source_1l00022"/>00022 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp
<anchor xml:id="_house_8py_source_1l00023"/>00023 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_house_8py_source_1l00024"/>00024 <emphasis role="keyword">import</emphasis>&#32;math,&#32;time
<anchor xml:id="_house_8py_source_1l00025"/>00025 
<anchor xml:id="_house_8py_source_1l00026"/>00026 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_house_8py_source_1l00027"/>00027 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_house_8py_source_1l00028"/>00028 
<anchor xml:id="_house_8py_source_1l00029"/>00029 logger.remove()
<anchor xml:id="_house_8py_source_1l00030"/><link linkend="_namespaceexamples_1_1house_1ab46c30f2c08d0d96db6520e8ca076d36">00030</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_house_8py_source_1l00031"/>00031 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_house_8py_source_1l00032"/>00032 
<anchor xml:id="_house_8py_source_1l00033"/>00033 <emphasis role="comment">#&#32;download&#32;data&#32;from&#32;https://www.kaggle.com/c/house-prices-advanced-regression-techniques/data</emphasis>
<anchor xml:id="_house_8py_source_1l00034"/><link linkend="_namespaceexamples_1_1house_1a3b0347fdd4de9dbe8215ffed52d37f4f">00034</link> train_dataset=pd.read_csv(<emphasis role="stringliteral">&apos;../input/train.csv&apos;</emphasis>,&#32;header=0)
<anchor xml:id="_house_8py_source_1l00035"/><link linkend="_namespaceexamples_1_1house_1aed975c759441882937098ef4c190ca0d">00035</link> test_dataset=pd.read_csv(<emphasis role="stringliteral">&apos;../input/test.csv&apos;</emphasis>,&#32;header=0)
<anchor xml:id="_house_8py_source_1l00036"/>00036 
<anchor xml:id="_house_8py_source_1l00037"/><link linkend="_namespaceexamples_1_1house_1a82b43265e599352aa67170fb0dc01976">00037</link> categorical_features=[<emphasis role="stringliteral">&apos;MSSubClass&apos;</emphasis>,<emphasis role="stringliteral">&apos;MSZoning&apos;</emphasis>,<emphasis role="stringliteral">&apos;Street&apos;</emphasis>,<emphasis role="stringliteral">&apos;Alley&apos;</emphasis>,<emphasis role="stringliteral">&apos;LotShape&apos;</emphasis>,<emphasis role="stringliteral">&apos;LandContour&apos;</emphasis>,<emphasis role="stringliteral">&apos;Utilities&apos;</emphasis>,
<anchor xml:id="_house_8py_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;LotConfig&apos;</emphasis>,<emphasis role="stringliteral">&apos;LandSlope&apos;</emphasis>,<emphasis role="stringliteral">&apos;Neighborhood&apos;</emphasis>,<emphasis role="stringliteral">&apos;Condition1&apos;</emphasis>,<emphasis role="stringliteral">&apos;Condition2&apos;</emphasis>,<emphasis role="stringliteral">&apos;BldgType&apos;</emphasis>,<emphasis role="stringliteral">&apos;HouseStyle&apos;</emphasis>,
<anchor xml:id="_house_8py_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;RoofStyle&apos;</emphasis>,<emphasis role="stringliteral">&apos;RoofMatl&apos;</emphasis>,<emphasis role="stringliteral">&apos;Exterior1st&apos;</emphasis>,<emphasis role="stringliteral">&apos;Exterior2nd&apos;</emphasis>,<emphasis role="stringliteral">&apos;MasVnrType&apos;</emphasis>,<emphasis role="stringliteral">&apos;ExterQual&apos;</emphasis>,<emphasis role="stringliteral">&apos;ExterCond&apos;</emphasis>,
<anchor xml:id="_house_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;Foundation&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtQual&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtCond&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtExposure&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtFinType1&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtFinType2&apos;</emphasis>,<emphasis role="stringliteral">&apos;Heating&apos;</emphasis>,
<anchor xml:id="_house_8py_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;HeatingQC&apos;</emphasis>,<emphasis role="stringliteral">&apos;CentralAir&apos;</emphasis>,<emphasis role="stringliteral">&apos;Electrical&apos;</emphasis>,<emphasis role="stringliteral">&apos;KitchenQual&apos;</emphasis>,<emphasis role="stringliteral">&apos;Functional&apos;</emphasis>,<emphasis role="stringliteral">&apos;FireplaceQu&apos;</emphasis>,
<anchor xml:id="_house_8py_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;GarageType&apos;</emphasis>,<emphasis role="stringliteral">&apos;GarageFinish&apos;</emphasis>,<emphasis role="stringliteral">&apos;GarageQual&apos;</emphasis>,<emphasis role="stringliteral">&apos;GarageCond&apos;</emphasis>,<emphasis role="stringliteral">&apos;PavedDrive&apos;</emphasis>,<emphasis role="stringliteral">&apos;PoolQC&apos;</emphasis>,<emphasis role="stringliteral">&apos;Fence&apos;</emphasis>,
<anchor xml:id="_house_8py_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;MiscFeature&apos;</emphasis>,<emphasis role="stringliteral">&apos;SaleType&apos;</emphasis>,<emphasis role="stringliteral">&apos;SaleCondition&apos;</emphasis>]
<anchor xml:id="_house_8py_source_1l00044"/><link linkend="_namespaceexamples_1_1house_1a4b968b58512b3493a1c28ddcb1b62a17">00044</link> every_column_except_y=&#32;[col&#32;<emphasis role="keywordflow">for</emphasis>&#32;col&#32;<emphasis role="keywordflow">in</emphasis>&#32;train_dataset.columns&#32;<emphasis role="keywordflow">if</emphasis>&#32;col&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;[<emphasis role="stringliteral">&apos;SalePrice&apos;</emphasis>,<emphasis role="stringliteral">&apos;Id&apos;</emphasis>]]
<anchor xml:id="_house_8py_source_1l00045"/>00045 train_dataset.describe()
<anchor xml:id="_house_8py_source_1l00046"/>00046 
<anchor xml:id="_house_8py_source_1l00047"/><link linkend="_namespaceexamples_1_1house_1a2edc9a3af1cf35065657d37aa6092d0b">00047</link> every_column_non_categorical=&#32;[col&#32;<emphasis role="keywordflow">for</emphasis>&#32;col&#32;<emphasis role="keywordflow">in</emphasis>&#32;train_dataset.columns&#32;<emphasis role="keywordflow">if</emphasis>&#32;col&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;categorical_features&#32;<emphasis role="keywordflow">and</emphasis>&#32;col&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;[<emphasis role="stringliteral">&apos;Id&apos;</emphasis>]&#32;]
<anchor xml:id="_house_8py_source_1l00048"/>00048 
<anchor xml:id="_house_8py_source_1l00049"/><link linkend="_namespaceexamples_1_1house_1ad86e27976b8a992dcc2d41b89bcc8db3">00049</link> numeric_feats&#32;=&#32;train_dataset[every_column_non_categorical].dtypes[train_dataset.dtypes&#32;!=&#32;<emphasis role="stringliteral">&quot;object&quot;</emphasis>].index
<anchor xml:id="_house_8py_source_1l00050"/>00050 
<anchor xml:id="_house_8py_source_1l00051"/>00051 train_dataset[numeric_feats]&#32;=&#32;np.log1p(train_dataset[numeric_feats])
<anchor xml:id="_house_8py_source_1l00052"/>00052 
<anchor xml:id="_house_8py_source_1l00053"/>00053 every_column_non_categorical=&#32;[col&#32;<emphasis role="keywordflow">for</emphasis>&#32;col&#32;<emphasis role="keywordflow">in</emphasis>&#32;test_dataset.columns&#32;<emphasis role="keywordflow">if</emphasis>&#32;col&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;categorical_features&#32;<emphasis role="keywordflow">and</emphasis>&#32;col&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;[<emphasis role="stringliteral">&apos;Id&apos;</emphasis>]&#32;]
<anchor xml:id="_house_8py_source_1l00054"/>00054 numeric_feats&#32;=&#32;test_dataset[every_column_non_categorical].dtypes[test_dataset.dtypes&#32;!=&#32;<emphasis role="stringliteral">&quot;object&quot;</emphasis>].index
<anchor xml:id="_house_8py_source_1l00055"/>00055 test_dataset[numeric_feats]&#32;=&#32;np.log1p(test_dataset[numeric_feats])
<anchor xml:id="_house_8py_source_1l00056"/>00056 
<anchor xml:id="_house_8py_source_1l00057"/><link linkend="_namespaceexamples_1_1house_1a550e21ac7059371e4394896cfe2a7ba6">00057</link> features_with_nan=[<emphasis role="stringliteral">&apos;Alley&apos;</emphasis>,<emphasis role="stringliteral">&apos;MasVnrType&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtQual&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtQual&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtCond&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtCond&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtExposure&apos;</emphasis>,
<anchor xml:id="_house_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;BsmtFinType1&apos;</emphasis>,<emphasis role="stringliteral">&apos;BsmtFinType2&apos;</emphasis>,<emphasis role="stringliteral">&apos;FireplaceQu&apos;</emphasis>,<emphasis role="stringliteral">&apos;GarageType&apos;</emphasis>,<emphasis role="stringliteral">&apos;GarageFinish&apos;</emphasis>]
<anchor xml:id="_house_8py_source_1l00059"/>00059 <emphasis role="comment">#function&#32;that&#32;creates&#32;a&#32;column&#32;for&#32;every&#32;value&#32;it&#32;might&#32;have</emphasis>
<anchor xml:id="_house_8py_source_1l00060"/><link linkend="_namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e">00060</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e">ConverNaNToNAString</link>(data,&#32;columnList):
<anchor xml:id="_house_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;columnList:&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data[x]&#32;=str(data[x])&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00064"/>00064 <link linkend="_namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e">ConverNaNToNAString</link>(train_dataset,&#32;features_with_nan)
<anchor xml:id="_house_8py_source_1l00065"/>00065 <link linkend="_namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e">ConverNaNToNAString</link>(test_dataset,&#32;features_with_nan)
<anchor xml:id="_house_8py_source_1l00066"/>00066 
<anchor xml:id="_house_8py_source_1l00067"/>00067 train_dataset&#32;=&#32;pd.get_dummies(train_dataset,columns&#32;=&#32;categorical_features)
<anchor xml:id="_house_8py_source_1l00068"/>00068 test_dataset&#32;=&#32;pd.get_dummies(test_dataset,columns&#32;=&#32;categorical_features)
<anchor xml:id="_house_8py_source_1l00069"/>00069 
<anchor xml:id="_house_8py_source_1l00070"/><link linkend="_namespaceexamples_1_1house_1a51b5d2e283cc1d846c6fe369fea06a1f">00070</link> model&#32;=&#32;xgboost.XGBRegressor(colsample_bytree=0.4,
<anchor xml:id="_house_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gamma=0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;learning_rate=0.07,
<anchor xml:id="_house_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_depth=3,
<anchor xml:id="_house_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_child_weight=1.5,
<anchor xml:id="_house_8py_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n_estimators=10000,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_alpha=0.75,
<anchor xml:id="_house_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_lambda=0.45,
<anchor xml:id="_house_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subsample=0.6,
<anchor xml:id="_house_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seed=42)&#32;
<anchor xml:id="_house_8py_source_1l00080"/>00080 
<anchor xml:id="_house_8py_source_1l00081"/>00081 every_column_except_y=&#32;[col&#32;<emphasis role="keywordflow">for</emphasis>&#32;col&#32;<emphasis role="keywordflow">in</emphasis>&#32;train_dataset.columns&#32;<emphasis role="keywordflow">if</emphasis>&#32;col&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;[<emphasis role="stringliteral">&apos;SalePrice&apos;</emphasis>,<emphasis role="stringliteral">&apos;Id&apos;</emphasis>]]
<anchor xml:id="_house_8py_source_1l00082"/>00082 model.fit(train_dataset[every_column_except_y],train_dataset[<emphasis role="stringliteral">&apos;SalePrice&apos;</emphasis>])
<anchor xml:id="_house_8py_source_1l00083"/>00083 
<anchor xml:id="_house_8py_source_1l00084"/><link linkend="_namespaceexamples_1_1house_1a992883b04b0f7d9481f373de9c5df398">00084</link> weighted_features&#32;=&#32;model.get_booster().get_score(importance_type=<emphasis role="stringliteral">&apos;weight&apos;</emphasis>).items()
<anchor xml:id="_house_8py_source_1l00085"/>00085 
<anchor xml:id="_house_8py_source_1l00086"/><link linkend="_namespaceexamples_1_1house_1a543dd25d1396426b86a8b84cc639ee16">00086</link> ordered_features&#32;=&#32;OrderedDict(sorted(weighted_features,&#32;key=<emphasis role="keyword">lambda</emphasis>&#32;t:&#32;t[1],&#32;reverse=<emphasis role="keyword">True</emphasis>))
<anchor xml:id="_house_8py_source_1l00087"/>00087 
<anchor xml:id="_house_8py_source_1l00088"/><link linkend="_namespaceexamples_1_1house_1a59913344df23ab873d6a5d0ae217e90e">00088</link> most_relevant_features=&#32;list(&#32;dict((k,&#32;v)&#32;<emphasis role="keywordflow">for</emphasis>&#32;k,&#32;v&#32;<emphasis role="keywordflow">in</emphasis>&#32;weighted_features&#32;<emphasis role="keywordflow">if</emphasis>&#32;v&#32;&gt;=&#32;10).keys())
<anchor xml:id="_house_8py_source_1l00089"/>00089 
<anchor xml:id="_house_8py_source_1l00090"/>00090 <emphasis role="comment">#removing&#32;outliers</emphasis>
<anchor xml:id="_house_8py_source_1l00091"/>00091 train_dataset&#32;=&#32;train_dataset[train_dataset.GrLivArea&#32;&lt;&#32;8.25]
<anchor xml:id="_house_8py_source_1l00092"/>00092 train_dataset&#32;=&#32;train_dataset[train_dataset.LotArea&#32;&lt;&#32;11.5]
<anchor xml:id="_house_8py_source_1l00093"/>00093 train_dataset&#32;=&#32;train_dataset[train_dataset.SalePrice&#32;&lt;&#32;13]
<anchor xml:id="_house_8py_source_1l00094"/>00094 train_dataset&#32;=&#32;train_dataset[train_dataset.SalePrice&#32;&gt;&#32;10.75]
<anchor xml:id="_house_8py_source_1l00095"/><link linkend="_namespaceexamples_1_1house_1a42ce97b3ca0226db9e4467e016d417cd">00095</link> train_dataset.drop(<emphasis role="stringliteral">&quot;Id&quot;</emphasis>,&#32;axis=1,&#32;inplace=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_house_8py_source_1l00096"/>00096 
<anchor xml:id="_house_8py_source_1l00097"/><link linkend="_namespaceexamples_1_1house_1a1377c74d53c1100c7bbce092002e8362">00097</link> train_x=train_dataset[most_relevant_features]
<anchor xml:id="_house_8py_source_1l00098"/><link linkend="_namespaceexamples_1_1house_1aed17691e77bd8195b440e7e6c576c0d0">00098</link> train_y=train_dataset[<emphasis role="stringliteral">&apos;SalePrice&apos;</emphasis>]
<anchor xml:id="_house_8py_source_1l00099"/>00099 
<anchor xml:id="_house_8py_source_1l00100"/><link linkend="_namespaceexamples_1_1house_1a3c03a0234a2c71ef181d8e85ee11739d">00100</link> grid_search&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_house_8py_source_1l00101"/><link linkend="_namespaceexamples_1_1house_1ae1e3ec63d02fac6de46655b3bd0c22b9">00101</link> hyperopt&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_house_8py_source_1l00102"/><link linkend="_namespaceexamples_1_1house_1a58f1ee9db2b6804b6d00c152ad40b802">00102</link> bayesian&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_house_8py_source_1l00103"/><link linkend="_namespaceexamples_1_1house_1a5a3829e9f7c9a57a045c0b48719b1b51">00103</link> evolutionary&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_house_8py_source_1l00104"/>00104 
<anchor xml:id="_house_8py_source_1l00105"/>00105 <emphasis role="comment">#&#32;grid&#32;search</emphasis>
<anchor xml:id="_house_8py_source_1l00106"/>00106 
<anchor xml:id="_house_8py_source_1l00107"/>00107 <emphasis role="keywordflow">if</emphasis>&#32;grid_search:
<anchor xml:id="_house_8py_source_1l00108"/><link linkend="_namespaceexamples_1_1house_1a5fc66d59169f22ab71835a11b5e9e932">00108</link> &#32;&#32;&#32;&#32;parameters_for_testing&#32;=&#32;{
<anchor xml:id="_house_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;colsample_bytree&apos;</emphasis>:[0.4,0.6,0.8],
<anchor xml:id="_house_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;gamma&apos;</emphasis>:[0,0.03,0.1,0.3],
<anchor xml:id="_house_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;min_child_weight&apos;</emphasis>:[1.5,6,10],
<anchor xml:id="_house_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;learning_rate&apos;</emphasis>:[0.1,0.07],
<anchor xml:id="_house_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;max_depth&apos;</emphasis>:[3,5],
<anchor xml:id="_house_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;n_estimators&apos;</emphasis>:[10000],
<anchor xml:id="_house_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;reg_alpha&apos;</emphasis>:[1e-5,&#32;1e-2,&#32;&#32;0.75],
<anchor xml:id="_house_8py_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;reg_lambda&apos;</emphasis>:[1e-5,&#32;1e-2,&#32;0.45],
<anchor xml:id="_house_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;subsample&apos;</emphasis>:[0.6,0.95]&#32;&#32;
<anchor xml:id="_house_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;}
<anchor xml:id="_house_8py_source_1l00119"/>00119 
<anchor xml:id="_house_8py_source_1l00120"/><link linkend="_namespaceexamples_1_1house_1a5e0260102b4af1ca5b85c5472d09b2e3">00120</link> &#32;&#32;&#32;&#32;xgb_model&#32;=&#32;xgboost.XGBRegressor(learning_rate&#32;=0.1,&#32;n_estimators=1000,&#32;max_depth=5,
<anchor xml:id="_house_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_child_weight=1,&#32;gamma=0,&#32;subsample=0.8,&#32;colsample_bytree=0.8,&#32;nthread=6,&#32;scale_pos_weight=1,&#32;seed=27)
<anchor xml:id="_house_8py_source_1l00122"/>00122 &#32;
<anchor xml:id="_house_8py_source_1l00123"/><link linkend="_namespaceexamples_1_1house_1a2732c74b853863a101cac2999de77e08">00123</link> &#32;&#32;&#32;&#32;gsearch&#32;=&#32;GridSearchCV(estimator&#32;=&#32;xgb_model,&#32;param_grid&#32;=&#32;parameters_for_testing,&#32;
<anchor xml:id="_house_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n_jobs=6,iid=<emphasis role="keyword">False</emphasis>,&#32;verbose=100,&#32;scoring=<emphasis role="stringliteral">&apos;neg_mean_squared_error&apos;</emphasis>)
<anchor xml:id="_house_8py_source_1l00125"/>00125 &#32;&#32;&#32;&#32;gsearch.fit(train_x,&#32;train_y)
<anchor xml:id="_house_8py_source_1l00126"/>00126 
<anchor xml:id="_house_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<emphasis role="comment">#visualize&#32;the&#32;best&#32;couple&#32;of&#32;parameters</emphasis>
<anchor xml:id="_house_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">print</emphasis>&#32;(gsearch.best_params_)&#32;
<anchor xml:id="_house_8py_source_1l00129"/>00129 
<anchor xml:id="_house_8py_source_1l00130"/>00130 
<anchor xml:id="_house_8py_source_1l00131"/>00131 <emphasis role="comment">#&#32;Optimization&#32;objective&#32;</emphasis>
<anchor xml:id="_house_8py_source_1l00132"/>00132 
<anchor xml:id="_house_8py_source_1l00133"/><link linkend="_namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad">00133</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad">cv_score</link>(X):
<anchor xml:id="_house_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;X&#32;=&#32;X[0]&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;score&#32;=&#32;cross_val_score(
<anchor xml:id="_house_8py_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XGBRegressor(colsample_bytree=X[0],
<anchor xml:id="_house_8py_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gamma=X[1],&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_child_weight=X[2],
<anchor xml:id="_house_8py_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;learning_rate=X[3],
<anchor xml:id="_house_8py_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_depth=int(X[4]),
<anchor xml:id="_house_8py_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n_estimators=10000,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_alpha=X[5],
<anchor xml:id="_house_8py_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_lambda=X[6],
<anchor xml:id="_house_8py_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subsample=X[7],&#32;
<anchor xml:id="_house_8py_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n_jobs=1&#32;<emphasis role="comment">#&#32;required&#32;for&#32;cmaes&#32;with&#32;multiple&#32;workers</emphasis>
<anchor xml:id="_house_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;),&#32;
<anchor xml:id="_house_8py_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;train_x,&#32;train_y,&#32;scoring=<emphasis role="stringliteral">&apos;neg_mean_squared_error&apos;</emphasis>).mean()
<anchor xml:id="_house_8py_source_1l00148"/>00148 
<anchor xml:id="_house_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array(score)
<anchor xml:id="_house_8py_source_1l00150"/>00150 
<anchor xml:id="_house_8py_source_1l00151"/><link linkend="_namespaceexamples_1_1house_1a8b9298c0123a93afcd0f36a42ac72230">00151</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1house_1a8b9298c0123a93afcd0f36a42ac72230">obj_f</link>(X):
<anchor xml:id="_house_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-<link linkend="_namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad">cv_score</link>([X])
<anchor xml:id="_house_8py_source_1l00153"/>00153 
<anchor xml:id="_house_8py_source_1l00154"/><link linkend="_classexamples_1_1house_1_1cv__problem">00154</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1house_1_1cv__problem">cv_problem</link>(object):
<anchor xml:id="_house_8py_source_1l00155"/>00155 
<anchor xml:id="_house_8py_source_1l00156"/><link linkend="_classexamples_1_1house_1_1cv__problem_1a5ab4547383841ff00ffb34758ea90f0a">00156</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1house_1_1cv__problem_1a5ab4547383841ff00ffb34758ea90f0a">__init__</link>(self,&#32;pfun,&#32;bounds):
<anchor xml:id="_house_8py_source_1l00157"/><link linkend="_classexamples_1_1house_1_1cv__problem_1a18240369becd1f47b5d8d2818cd7773b">00157</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1a18240369becd1f47b5d8d2818cd7773b">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;cv_score&quot;</emphasis>
<anchor xml:id="_house_8py_source_1l00158"/><link linkend="_classexamples_1_1house_1_1cv__problem_1a47e86edf09df1a3ee84d89fa89c18ac1">00158</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1a47e86edf09df1a3ee84d89fa89c18ac1">dim</link>&#32;=&#32;len(bounds.lb)
<anchor xml:id="_house_8py_source_1l00159"/><link linkend="_classexamples_1_1house_1_1cv__problem_1ac51707e91a75854aa1f4dbcb99aa5e0c">00159</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1ac51707e91a75854aa1f4dbcb99aa5e0c">pfun</link>&#32;=&#32;pfun
<anchor xml:id="_house_8py_source_1l00160"/><link linkend="_classexamples_1_1house_1_1cv__problem_1a705b53208512700d7536b7caf171997b">00160</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1a705b53208512700d7536b7caf171997b">bounds</link>&#32;=&#32;bounds
<anchor xml:id="_house_8py_source_1l00161"/><link linkend="_classexamples_1_1house_1_1cv__problem_1ac5def97ca99e841fe6910fe0eccfba60">00161</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1ac5def97ca99e841fe6910fe0eccfba60">evals</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)&#32;
<anchor xml:id="_house_8py_source_1l00162"/><link linkend="_classexamples_1_1house_1_1cv__problem_1a57e1a06abf880f4f02944fa746deea27">00162</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1a57e1a06abf880f4f02944fa746deea27">best_y</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;np.inf)&#32;
<anchor xml:id="_house_8py_source_1l00163"/><link linkend="_classexamples_1_1house_1_1cv__problem_1a2544581b4a19c5a1108142982c0f8e20">00163</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1a2544581b4a19c5a1108142982c0f8e20">t0</link>&#32;=&#32;time.perf_counter()
<anchor xml:id="_house_8py_source_1l00164"/>00164 
<anchor xml:id="_house_8py_source_1l00165"/><link linkend="_classexamples_1_1house_1_1cv__problem_1a10c3ff3227c149ee1be4501cb49caa23">00165</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1house_1_1cv__problem_1a10c3ff3227c149ee1be4501cb49caa23">fun</link>(self,&#32;x):
<anchor xml:id="_house_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1ac5def97ca99e841fe6910fe0eccfba60">evals</link>.value&#32;+=&#32;1
<anchor xml:id="_house_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1ac51707e91a75854aa1f4dbcb99aa5e0c">pfun</link>(x)
<anchor xml:id="_house_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1a57e1a06abf880f4f02944fa746deea27">best_y</link>.value:
<anchor xml:id="_house_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1house_1_1cv__problem_1a57e1a06abf880f4f02944fa746deea27">best_y</link>.value&#32;=&#32;y
<anchor xml:id="_house_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(str(dtime(self.<link linkend="_classexamples_1_1house_1_1cv__problem_1a2544581b4a19c5a1108142982c0f8e20">t0</link>))&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;&#32;+&#32;
<anchor xml:id="_house_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str(self.<link linkend="_classexamples_1_1house_1_1cv__problem_1ac5def97ca99e841fe6910fe0eccfba60">evals</link>.value)&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;
<anchor xml:id="_house_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str(self.<link linkend="_classexamples_1_1house_1_1cv__problem_1a57e1a06abf880f4f02944fa746deea27">best_y</link>.value)&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;
<anchor xml:id="_house_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str(list(x)))
<anchor xml:id="_house_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y
<anchor xml:id="_house_8py_source_1l00175"/>00175 
<anchor xml:id="_house_8py_source_1l00176"/>00176 <emphasis role="comment">#&#32;hyperopt&#32;TPE</emphasis>
<anchor xml:id="_house_8py_source_1l00177"/>00177 
<anchor xml:id="_house_8py_source_1l00178"/>00178 <emphasis role="keywordflow">if</emphasis>&#32;hyperopt:
<anchor xml:id="_house_8py_source_1l00179"/>00179 
<anchor xml:id="_house_8py_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;hyperopt&#32;<emphasis role="keyword">import</emphasis>&#32;fmin,&#32;hp,&#32;tpe,&#32;STATUS_OK
<anchor xml:id="_house_8py_source_1l00181"/>00181 &#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00182"/><link linkend="_namespaceexamples_1_1house_1acb427336872b6d7e0fc0371ddc53dac7">00182</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1house_1acb427336872b6d7e0fc0371ddc53dac7">obj_fmin</link>(X):
<anchor xml:id="_house_8py_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{<emphasis role="stringliteral">&apos;loss&apos;</emphasis>:&#32;-np.asscalar(<link linkend="_namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad">cv_score</link>([X])),&#32;<emphasis role="stringliteral">&apos;status&apos;</emphasis>:&#32;STATUS_OK&#32;}
<anchor xml:id="_house_8py_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00185"/><link linkend="_namespaceexamples_1_1house_1afba8daf815562b6f56fad5a1a4923cfe">00185</link> &#32;&#32;&#32;&#32;xgb_space&#32;=&#32;[
<anchor xml:id="_house_8py_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hp.quniform(<emphasis role="stringliteral">&apos;colsample_bytree&apos;</emphasis>,&#32;0.4,&#32;0.8,&#32;0.05),
<anchor xml:id="_house_8py_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hp.quniform(<emphasis role="stringliteral">&apos;gamma&apos;</emphasis>,&#32;0,&#32;0.3,&#32;0.05),
<anchor xml:id="_house_8py_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hp.quniform(<emphasis role="stringliteral">&apos;min_child_weight&apos;</emphasis>,&#32;1.5,&#32;10,&#32;0.5),
<anchor xml:id="_house_8py_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hp.quniform(<emphasis role="stringliteral">&apos;learning_rate&apos;</emphasis>,&#32;0.07,&#32;0.1,&#32;0.05),
<anchor xml:id="_house_8py_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hp.choice(<emphasis role="stringliteral">&apos;max_depth&apos;</emphasis>,&#32;[3,4,5]),
<anchor xml:id="_house_8py_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hp.uniform(<emphasis role="stringliteral">&apos;reg_alpha&apos;</emphasis>,&#32;1e-5,&#32;0.75),
<anchor xml:id="_house_8py_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hp.uniform(<emphasis role="stringliteral">&apos;reg_lambda&apos;</emphasis>,&#32;1e-5,&#32;0.45),
<anchor xml:id="_house_8py_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hp.uniform(<emphasis role="stringliteral">&apos;subsample&apos;</emphasis>,&#32;0.6,&#32;0.95)]
<anchor xml:id="_house_8py_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00195"/><link linkend="_namespaceexamples_1_1house_1a0ad73fccd0afeaa8550811d87106dd5a">00195</link> &#32;&#32;&#32;&#32;best&#32;=&#32;fmin(fn&#32;=&#32;obj_fmin,&#32;space&#32;=&#32;xgb_space,&#32;algo&#32;=&#32;tpe.suggest,&#32;
<anchor xml:id="_house_8py_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evals&#32;=&#32;2000,&#32;verbose=<emphasis role="keyword">False</emphasis>)
<anchor xml:id="_house_8py_source_1l00197"/>00197 
<anchor xml:id="_house_8py_source_1l00198"/>00198 
<anchor xml:id="_house_8py_source_1l00199"/>00199 <emphasis role="comment">#&#32;Bayesian&#32;optimization</emphasis>
<anchor xml:id="_house_8py_source_1l00200"/>00200 
<anchor xml:id="_house_8py_source_1l00201"/>00201 <emphasis role="keywordflow">if</emphasis>&#32;bayesian:
<anchor xml:id="_house_8py_source_1l00202"/>00202 
<anchor xml:id="_house_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;GPyOpt.methods&#32;<emphasis role="keyword">import</emphasis>&#32;BayesianOptimization
<anchor xml:id="_house_8py_source_1l00204"/>00204 
<anchor xml:id="_house_8py_source_1l00205"/><link linkend="_namespaceexamples_1_1house_1ab5772acae74caae3870e1ca71d7dc5e1">00205</link> &#32;&#32;&#32;&#32;bds&#32;=&#32;[&#32;{<emphasis role="stringliteral">&apos;name&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;colsample_bytree&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;type&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;continuous&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;domain&apos;</emphasis>:&#32;(0.4,&#32;0.8)},
<anchor xml:id="_house_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&apos;name&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;gamma&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;type&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;continuous&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;domain&apos;</emphasis>:&#32;(0,&#32;0.3)},
<anchor xml:id="_house_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&apos;name&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;min_child_weight&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;type&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;continuous&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;domain&apos;</emphasis>:&#32;(1.5,&#32;10)},
<anchor xml:id="_house_8py_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&apos;name&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;learning_rate&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;type&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;continuous&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;domain&apos;</emphasis>:&#32;(0.07,&#32;0.1)},
<anchor xml:id="_house_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&apos;name&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;max_depth&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;type&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;discrete&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;domain&apos;</emphasis>:&#32;(3,&#32;5)},
<anchor xml:id="_house_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&apos;name&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;reg_alpha&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;type&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;continuous&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;domain&apos;</emphasis>:&#32;(1e-5,&#32;0.75)},
<anchor xml:id="_house_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&apos;name&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;reg_lambda&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;type&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;continuous&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;domain&apos;</emphasis>:&#32;(1e-5,&#32;0.45)},
<anchor xml:id="_house_8py_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="stringliteral">&apos;name&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;subsample&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;type&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;continuous&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;domain&apos;</emphasis>:&#32;(0.6,&#32;0.95)}]
<anchor xml:id="_house_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00214"/><link linkend="_namespaceexamples_1_1house_1a263802c227189418de4d0c702eb18dce">00214</link> &#32;&#32;&#32;&#32;optimizer&#32;=&#32;BayesianOptimization(f=cv_score,&#32;
<anchor xml:id="_house_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domain=bds,
<anchor xml:id="_house_8py_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model_type=<emphasis role="stringliteral">&apos;GP&apos;</emphasis>,
<anchor xml:id="_house_8py_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquisition_type&#32;=<emphasis role="stringliteral">&apos;EI&apos;</emphasis>,
<anchor xml:id="_house_8py_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquisition_jitter&#32;=&#32;0.05,
<anchor xml:id="_house_8py_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exact_feval=<emphasis role="keyword">True</emphasis>,&#32;
<anchor xml:id="_house_8py_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maximize=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_house_8py_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00222"/><link linkend="_namespaceexamples_1_1house_1a8b99c5a7ab3c241da3ed644965f2a715">00222</link> &#32;&#32;&#32;&#32;optimizer.run_optimization(max_iter=20000)
<anchor xml:id="_house_8py_source_1l00223"/><link linkend="_namespaceexamples_1_1house_1a107282d610c5c3cd4e8bece6cafd4bd4">00223</link> &#32;&#32;&#32;&#32;y_bo&#32;=&#32;np.maximum.accumulate(-optimizer.Y).ravel()
<anchor xml:id="_house_8py_source_1l00224"/>00224 &#32;&#32;&#32;&#32;print(f<emphasis role="stringliteral">&apos;Bayesian&#32;optimization&#32;neg.&#32;MSE&#32;=&#32;{y_bo[-1]:.2f}&apos;</emphasis>)
<anchor xml:id="_house_8py_source_1l00225"/>00225 
<anchor xml:id="_house_8py_source_1l00226"/>00226 <emphasis role="comment">#&#32;standard&#32;evolutionary&#32;algorithms</emphasis>
<anchor xml:id="_house_8py_source_1l00227"/>00227 
<anchor xml:id="_house_8py_source_1l00228"/>00228 <emphasis role="keywordflow">if</emphasis>&#32;evolutionary&#32;<emphasis role="keywordflow">and</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_house_8py_source_1l00229"/>00229 &#32;&#32;&#32;&#32;mp.freeze_support()
<anchor xml:id="_house_8py_source_1l00230"/>00230 
<anchor xml:id="_house_8py_source_1l00231"/>00231 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds
<anchor xml:id="_house_8py_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;decpp,&#32;cmaescpp,&#32;bitecpp,&#32;de,&#32;cmaes
<anchor xml:id="_house_8py_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;cmaes&#32;
<anchor xml:id="_house_8py_source_1l00234"/>00234 &#32;&#32;&#32;&#32;<emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;de
<anchor xml:id="_house_8py_source_1l00235"/>00235 &#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00236"/><link linkend="_namespaceexamples_1_1house_1aa1edc9c4f08ab5e9479e35f328a6743b">00236</link> &#32;&#32;&#32;&#32;bounds&#32;=&#32;Bounds([0.4,&#32;0,&#32;1.5,&#32;0.07,&#32;3,&#32;1e-5,&#32;1e-5,&#32;0.6],&#32;[0.8,&#32;0.3,&#32;10,&#32;0.1,&#32;5.99,&#32;0.75,&#32;0.45,&#32;0.95])
<anchor xml:id="_house_8py_source_1l00237"/>00237 &#32;
<anchor xml:id="_house_8py_source_1l00238"/><link linkend="_namespaceexamples_1_1house_1a96d51c8d870c5843922de8007f346037">00238</link> &#32;&#32;&#32;&#32;problem&#32;=&#32;<link linkend="_classexamples_1_1house_1_1cv__problem">cv_problem</link>(obj_f,&#32;bounds)
<anchor xml:id="_house_8py_source_1l00239"/>00239 &#32;&#32;&#32;&#32;<emphasis role="comment">#ret&#32;=&#32;bitecpp.minimize(problem.fun,&#32;problem.bounds,&#32;max_evaluations&#32;=&#32;20000)</emphasis>
<anchor xml:id="_house_8py_source_1l00240"/>00240 &#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00241"/>00241 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;for&#32;cmaescpp,&#32;cmaes&#32;and&#32;de&#32;with&#32;multiple&#32;workers&#32;set&#32;n_jobs=1&#32;in&#32;XGBRegressor</emphasis>
<anchor xml:id="_house_8py_source_1l00242"/>00242 &#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00243"/>00243 &#32;&#32;&#32;&#32;<emphasis role="comment">#ret&#32;=&#32;cmaescpp.minimize(problem.fun,&#32;problem.bounds,&#32;popsize=32,&#32;max_evaluations&#32;=&#32;20000,&#32;workers=mp.cpu_count())</emphasis>
<anchor xml:id="_house_8py_source_1l00244"/>00244 &#32;&#32;&#32;&#32;<emphasis role="comment">#ret&#32;=&#32;decpp.minimize(problem.fun,&#32;problem.dim,&#32;problem.bounds,&#32;popsize=16,&#32;max_evaluations&#32;=&#32;20000)</emphasis>
<anchor xml:id="_house_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00246"/>00246 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;delayed&#32;state&#32;update</emphasis>
<anchor xml:id="_house_8py_source_1l00247"/><link linkend="_namespaceexamples_1_1house_1a1baee49f82585b83c248e153dbfeb95c">00247</link> &#32;&#32;&#32;&#32;ret&#32;=&#32;cmaes.minimize(problem.fun,&#32;problem.bounds,&#32;popsize=16,&#32;max_evaluations&#32;=&#32;20000,&#32;
<anchor xml:id="_house_8py_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers=mp.cpu_count(),&#32;delayed_update=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_house_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00250"/>00250 &#32;&#32;&#32;&#32;<emphasis role="comment">#ret&#32;=&#32;de.minimize(problem.fun,&#32;problem.dim,&#32;problem.bounds,&#32;popsize&#32;=&#32;16,&#32;max_evaluations&#32;=&#32;20000,&#32;workers=mp.cpu_count())</emphasis>
<anchor xml:id="_house_8py_source_1l00251"/>00251 
<anchor xml:id="_house_8py_source_1l00252"/>00252 
<anchor xml:id="_house_8py_source_1l00253"/>00253 &#32;&#32;&#32;&#32;
<anchor xml:id="_house_8py_source_1l00254"/>00254 
</programlisting></section>

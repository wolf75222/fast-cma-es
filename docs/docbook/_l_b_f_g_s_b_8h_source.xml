<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__l_b_f_g_s_b_8h_source" xml:lang="en-US">
<title>LBFGSB.h</title>
<indexterm><primary>_fcmaescpp/include/LBFGSB.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__l_b_f_g_s_b_8h_source_1l00001"/>00001 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2020&#32;Yixuan&#32;Qiu&#32;&lt;yixuan.qiu@cos.name&gt;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00002"/>00002 <emphasis role="comment">//&#32;Under&#32;MIT&#32;license</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00003"/>00003 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#ifndef&#32;LBFGSB_H</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#define&#32;LBFGSB_H</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00006"/>00006 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;stdexcept&gt;</emphasis>&#32;&#32;<emphasis role="comment">//&#32;std::invalid_argument</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;Eigen/Core&gt;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;LBFGSpp/Param.h&quot;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;LBFGSpp/BFGSMat.h&quot;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&quot;LBFGSpp/Cauchy.h&quot;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;LBFGSpp/SubspaceMin.h&quot;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;LBFGSpp/LineSearchMoreThuente.h&quot;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00015"/>00015 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00016"/>00016 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00017"/>00017 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_l_b_f_g_spp">LBFGSpp</link>&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00018"/>00018 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00019"/>00019 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00023"/>00023 <emphasis role="keyword">template</emphasis>&#32;&lt;&#32;<emphasis role="keyword">typename</emphasis>&#32;Scalar,
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">class</emphasis>&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>LineSearch&#32;=&#32;LineSearchMoreThuente&#32;&gt;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00025"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver">00025</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1af6f13d5faffe94686e9ba8710da1bb5a">LBFGSBSolver</link>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00026"/>00026 {
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00027"/>00027 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00028"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Eigen::Matrix&lt;Scalar,&#32;Eigen::Dynamic,&#32;1&gt;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00029"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1ab506657a5181cb3fd5b56ff975916f4e">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Eigen::Matrix&lt;Scalar,&#32;Eigen::Dynamic,&#32;Eigen::Dynamic&gt;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1ab506657a5181cb3fd5b56ff975916f4e">Matrix</link>;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00030"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1afc50f513af96f02c39cf1c608b011cec">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;Eigen::Map&lt;Vector&gt;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1afc50f513af96f02c39cf1c608b011cec">MapVec</link>;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00031"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a243e993b1c8009144cea153e7ac2d588">00031</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;std::vector&lt;int&gt;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a243e993b1c8009144cea153e7ac2d588">IndexSet</link>;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00032"/>00032 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00033"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">00033</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;LBFGSBParam&lt;Scalar&gt;&amp;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>;&#32;&#32;<emphasis role="comment">//&#32;Parameters&#32;to&#32;control&#32;the&#32;LBFGS&#32;algorithm</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00034"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1afe28f7248239eac6eac4e586da1b1447">00034</link> &#32;&#32;&#32;&#32;BFGSMat&lt;Scalar,&#32;true&gt;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1afe28f7248239eac6eac4e586da1b1447">m_bfgs</link>;&#32;&#32;&#32;<emphasis role="comment">//&#32;Approximation&#32;to&#32;the&#32;Hessian&#32;matrix</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00035"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a979a0d5a7dfc557ae62196681e15bc4a">00035</link> &#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a979a0d5a7dfc557ae62196681e15bc4a">m_fx</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;History&#32;of&#32;the&#32;objective&#32;function&#32;values</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00036"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1af5b2357022d48bf126b9e6a975940ab2">00036</link> &#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1af5b2357022d48bf126b9e6a975940ab2">m_xp</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Old&#32;x</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00037"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">00037</link> &#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>;&#32;&#32;&#32;<emphasis role="comment">//&#32;New&#32;gradient</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00038"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a120b8ed88219c8464616fe433c1cb492">00038</link> &#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a120b8ed88219c8464616fe433c1cb492">m_gradp</link>;&#32;&#32;<emphasis role="comment">//&#32;Old&#32;gradient</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00039"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a7070c707f445259e2df484ec540d5c75">00039</link> &#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a7070c707f445259e2df484ec540d5c75">m_drt</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Moving&#32;direction</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00040"/>00040 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reset&#32;internal&#32;variables</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;n:&#32;dimension&#32;of&#32;the&#32;vector&#32;to&#32;be&#32;optimized</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00043"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a2b265895288516adbacc3e25fabe2829">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a2b265895288516adbacc3e25fabe2829">reset</link>(<emphasis role="keywordtype">int</emphasis>&#32;n)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00044"/>00044 &#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.m;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1afe28f7248239eac6eac4e586da1b1447">m_bfgs</link>.reset(n,&#32;m);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1af5b2357022d48bf126b9e6a975940ab2">m_xp</link>.resize(n);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>.resize(n);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a120b8ed88219c8464616fe433c1cb492">m_gradp</link>.resize(n);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a7070c707f445259e2df484ec540d5c75">m_drt</link>.resize(n);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.past&#32;&gt;&#32;0)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a979a0d5a7dfc557ae62196681e15bc4a">m_fx</link>.resize(<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.past);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00053"/>00053 &#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00054"/>00054 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Project&#32;the&#32;vector&#32;x&#32;to&#32;the&#32;bound&#32;constraint&#32;set</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00056"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a88780c13f50eaaf437bcbbb54d7a7f3c">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a88780c13f50eaaf437bcbbb54d7a7f3c">force_bounds</link>(<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;x,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;lb,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;ub)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.noalias()&#32;=&#32;x.cwiseMax(lb).cwiseMin(ub);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00059"/>00059 &#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00060"/>00060 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Norm&#32;of&#32;the&#32;projected&#32;gradient</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;||P(x-g,&#32;l,&#32;u)&#32;-&#32;x||_inf</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00063"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a57692ffc3df2f5152f8ef27dfb4f9cac">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Scalar&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a57692ffc3df2f5152f8ef27dfb4f9cac">proj_grad_norm</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;x,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;g,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;lb,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;ub)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00064"/>00064 &#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((x&#32;-&#32;g).cwiseMax(lb).cwiseMin(ub)&#32;-&#32;x).cwiseAbs().maxCoeff();
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00066"/>00066 &#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00067"/>00067 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;maximum&#32;step&#32;size&#32;alpha&#32;such&#32;that&#32;x0&#32;+&#32;alpha&#32;*&#32;d&#32;stays&#32;within&#32;the&#32;bounds</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00069"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a788f97964a14b4b6db287f9e2646f2f6">00069</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;Scalar&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a788f97964a14b4b6db287f9e2646f2f6">max_step_size</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;x0,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;drt,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;lb,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;ub)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00070"/>00070 &#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;x0.size();
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scalar&#32;step&#32;=&#32;std::numeric_limits&lt;Scalar&gt;::infinity();
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00073"/>00073 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(drt[i]&#32;&gt;&#32;Scalar(0))
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;step&#32;=&#32;std::min(step,&#32;(ub[i]&#32;-&#32;x0[i])&#32;/&#32;drt[i]);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(drt[i]&#32;&lt;&#32;Scalar(0))&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;step&#32;=&#32;std::min(step,&#32;(lb[i]&#32;-&#32;x0[i])&#32;/&#32;drt[i]);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00083"/>00083 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;step;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00085"/>00085 &#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00086"/>00086 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00087"/>00087 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00094"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1af6f13d5faffe94686e9ba8710da1bb5a">00094</link> &#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1af6f13d5faffe94686e9ba8710da1bb5a">LBFGSBSolver</link>(<emphasis role="keyword">const</emphasis>&#32;LBFGSBParam&lt;Scalar&gt;&amp;&#32;param)&#32;:
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>(param)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00096"/>00096 &#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.check_param();
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00098"/>00098 &#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00099"/>00099 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Foo&gt;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00116"/><link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a420f4521286e2ac37a37f41b9f5767a9">00116</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a420f4521286e2ac37a37f41b9f5767a9">minimize</link>(Foo&amp;&#32;f,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;x,&#32;Scalar&amp;&#32;fx,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;lb,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&amp;&#32;ub)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00117"/>00117 &#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>std::abs;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00119"/>00119 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Dimension&#32;of&#32;the&#32;vector</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;x.size();
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(lb.size()&#32;!=&#32;n&#32;||&#32;ub.size()&#32;!=&#32;n)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::invalid_argument(<emphasis role="stringliteral">&quot;&apos;lb&apos;&#32;and&#32;&apos;ub&apos;&#32;must&#32;have&#32;the&#32;same&#32;size&#32;as&#32;&apos;x&apos;&quot;</emphasis>);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00124"/>00124 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;whether&#32;the&#32;initial&#32;vector&#32;is&#32;within&#32;the&#32;bounds</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;not,&#32;project&#32;to&#32;the&#32;feasible&#32;set</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a88780c13f50eaaf437bcbbb54d7a7f3c">force_bounds</link>(x,&#32;lb,&#32;ub);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00128"/>00128 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialization</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a2b265895288516adbacc3e25fabe2829">reset</link>(n);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00131"/>00131 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;length&#32;of&#32;lag&#32;for&#32;objective&#32;function&#32;value&#32;to&#32;test&#32;convergence</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;fpast&#32;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.past;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00134"/>00134 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Evaluate&#32;function&#32;and&#32;compute&#32;gradient</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fx&#32;=&#32;f(x,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scalar&#32;projgnorm&#32;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a57692ffc3df2f5152f8ef27dfb4f9cac">proj_grad_norm</link>(x,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>,&#32;lb,&#32;ub);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(fpast&#32;&gt;&#32;0)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a979a0d5a7dfc557ae62196681e15bc4a">m_fx</link>[0]&#32;=&#32;fx;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00140"/>00140 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;std::cout&#32;&lt;&lt;&#32;&quot;x0&#32;=&#32;&quot;&#32;&lt;&lt;&#32;x.transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;std::cout&#32;&lt;&lt;&#32;&quot;f(x0)&#32;=&#32;&quot;&#32;&lt;&lt;&#32;fx&#32;&lt;&lt;&#32;&quot;,&#32;||proj_grad||&#32;=&#32;&quot;&#32;&lt;&lt;&#32;projgnorm&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00143"/>00143 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Early&#32;exit&#32;if&#32;the&#32;initial&#32;x&#32;is&#32;already&#32;a&#32;minimizer</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(projgnorm&#32;&lt;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.epsilon&#32;||&#32;projgnorm&#32;&lt;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.epsilon_rel&#32;*&#32;x.norm())
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00149"/>00149 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;generalized&#32;Cauchy&#32;point</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&#32;xcp(n),&#32;vecc;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a243e993b1c8009144cea153e7ac2d588">IndexSet</link>&#32;newact_set,&#32;fv_set;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cauchy&lt;Scalar&gt;::get_cauchy_point(<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1afe28f7248239eac6eac4e586da1b1447">m_bfgs</link>,&#32;x,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>,&#32;lb,&#32;ub,&#32;xcp,&#32;vecc,&#32;newact_set,&#32;fv_set);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00154"/>00154 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Vector&#32;gcp(n);</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00156"/>00156 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scalar&#32;fcp&#32;=&#32;f(xcp,&#32;gcp);</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00157"/>00157 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scalar&#32;projgcpnorm&#32;=&#32;proj_grad_norm(xcp,&#32;gcp,&#32;lb,&#32;ub);</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00158"/>00158 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;xcp&#32;=&#32;&quot;&#32;&lt;&lt;&#32;xcp.transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00159"/>00159 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;f(xcp)&#32;=&#32;&quot;&#32;&lt;&lt;&#32;fcp&#32;&lt;&lt;&#32;&quot;,&#32;||proj_grad||&#32;=&#32;&quot;&#32;&lt;&lt;&#32;projgcpnorm&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl;&#32;*/</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00160"/>00160 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initial&#32;direction</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a7070c707f445259e2df484ec540d5c75">m_drt</link>.noalias()&#32;=&#32;xcp&#32;-&#32;x;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a7070c707f445259e2df484ec540d5c75">m_drt</link>.normalize();
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Tolerance&#32;for&#32;s&apos;y&#32;&gt;=&#32;eps&#32;*&#32;(y&apos;y)</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Scalar&#32;eps&#32;=&#32;std::numeric_limits&lt;Scalar&gt;::epsilon();
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;s&#32;and&#32;y&#32;vectors</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a68ac128001b807b5ae6a48d7fd15ba3d">Vector</link>&#32;vecs(n),&#32;vecy(n);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;iterations&#32;used</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k&#32;=&#32;1;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;&#32;;&#32;)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Save&#32;the&#32;curent&#32;x&#32;and&#32;gradient</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1af5b2357022d48bf126b9e6a975940ab2">m_xp</link>.noalias()&#32;=&#32;x;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a120b8ed88219c8464616fe433c1cb492">m_gradp</link>.noalias()&#32;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00175"/>00175 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Line&#32;search&#32;to&#32;update&#32;x,&#32;fx&#32;and&#32;gradient</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scalar&#32;step_max&#32;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a788f97964a14b4b6db287f9e2646f2f6">max_step_size</link>(x,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a7070c707f445259e2df484ec540d5c75">m_drt</link>,&#32;lb,&#32;ub);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;step_max&#32;=&#32;std::min(<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.max_step,&#32;step_max);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scalar&#32;step&#32;=&#32;Scalar(1);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;step&#32;=&#32;std::min(step,&#32;step_max);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LineSearch&lt;Scalar&gt;::LineSearch(f,&#32;fx,&#32;x,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>,&#32;step,&#32;step_max,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a7070c707f445259e2df484ec540d5c75">m_drt</link>,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1af5b2357022d48bf126b9e6a975940ab2">m_xp</link>,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00182"/>00182 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;New&#32;projected&#32;gradient&#32;norm</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;projgnorm&#32;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a57692ffc3df2f5152f8ef27dfb4f9cac">proj_grad_norm</link>(x,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>,&#32;lb,&#32;ub);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00185"/>00185 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;std::cout&#32;&lt;&lt;&#32;&quot;**&#32;Iteration&#32;&quot;&#32;&lt;&lt;&#32;k&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00187"/>00187 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;&#32;&#32;&#32;x&#32;=&#32;&quot;&#32;&lt;&lt;&#32;x.transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00188"/>00188 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;&#32;&#32;&#32;f(x)&#32;=&#32;&quot;&#32;&lt;&lt;&#32;fx&#32;&lt;&lt;&#32;&quot;,&#32;||proj_grad||&#32;=&#32;&quot;&#32;&lt;&lt;&#32;projgnorm&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl;&#32;*/</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00189"/>00189 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Convergence&#32;test&#32;--&#32;gradient</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(projgnorm&#32;&lt;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.epsilon&#32;||&#32;projgnorm&#32;&lt;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.epsilon_rel&#32;*&#32;x.norm())
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;k;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Convergence&#32;test&#32;--&#32;objective&#32;function&#32;value</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(fpast&#32;&gt;&#32;0)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Scalar&#32;fxd&#32;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a979a0d5a7dfc557ae62196681e15bc4a">m_fx</link>[k&#32;%&#32;fpast];
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(k&#32;&gt;=&#32;fpast&#32;&amp;&amp;&#32;abs(fxd&#32;-&#32;fx)&#32;&lt;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.delta&#32;*&#32;std::max(std::max(abs(fx),&#32;abs(fxd)),&#32;Scalar(1)))
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;k;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00201"/>00201 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a979a0d5a7dfc557ae62196681e15bc4a">m_fx</link>[k&#32;%&#32;fpast]&#32;=&#32;fx;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Maximum&#32;number&#32;of&#32;iterations</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.max_iterations&#32;!=&#32;0&#32;&amp;&amp;&#32;k&#32;&gt;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.max_iterations)
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;k;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00209"/>00209 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;s&#32;and&#32;y</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;s_{k+1}&#32;=&#32;x_{k+1}&#32;-&#32;x_k</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;y_{k+1}&#32;=&#32;g_{k+1}&#32;-&#32;g_k</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vecs.noalias()&#32;=&#32;x&#32;-&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1af5b2357022d48bf126b9e6a975940ab2">m_xp</link>;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vecy.noalias()&#32;=&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>&#32;-&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a120b8ed88219c8464616fe433c1cb492">m_gradp</link>;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(vecs.dot(vecy)&#32;&gt;&#32;eps&#32;*&#32;vecy.squaredNorm())
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1afe28f7248239eac6eac4e586da1b1447">m_bfgs</link>.add_correction(vecs,&#32;vecy);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00217"/>00217 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a88780c13f50eaaf437bcbbb54d7a7f3c">force_bounds</link>(x,&#32;lb,&#32;ub);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cauchy&lt;Scalar&gt;::get_cauchy_point(<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1afe28f7248239eac6eac4e586da1b1447">m_bfgs</link>,&#32;x,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>,&#32;lb,&#32;ub,&#32;xcp,&#32;vecc,&#32;newact_set,&#32;fv_set);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00220"/>00220 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*Vector&#32;gcp(n);</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00222"/>00222 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scalar&#32;fcp&#32;=&#32;f(xcp,&#32;gcp);</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00223"/>00223 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scalar&#32;projgcpnorm&#32;=&#32;proj_grad_norm(xcp,&#32;gcp,&#32;lb,&#32;ub);</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00224"/>00224 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;xcp&#32;=&#32;&quot;&#32;&lt;&lt;&#32;xcp.transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00225"/>00225 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;f(xcp)&#32;=&#32;&quot;&#32;&lt;&lt;&#32;fcp&#32;&lt;&lt;&#32;&quot;,&#32;||proj_grad||&#32;=&#32;&quot;&#32;&lt;&lt;&#32;projgcpnorm&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl;*/</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00226"/>00226 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SubspaceMin&lt;Scalar&gt;::subspace_minimize(<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1afe28f7248239eac6eac4e586da1b1447">m_bfgs</link>,&#32;x,&#32;xcp,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a478cfc0f18b184d805274234cceed32c">m_grad</link>,&#32;lb,&#32;ub,
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vecc,&#32;newact_set,&#32;fv_set,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1aa70044da7add6566b5cfd75e868ad85a">m_param</link>.max_submin,&#32;<link linkend="_class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver_1a7070c707f445259e2df484ec540d5c75">m_drt</link>);
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00229"/>00229 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*Vector&#32;gsm(n);</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00231"/>00231 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scalar&#32;fsm&#32;=&#32;f(x&#32;+&#32;m_drt,&#32;gsm);</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00232"/>00232 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scalar&#32;projgsmnorm&#32;=&#32;proj_grad_norm(x&#32;+&#32;m_drt,&#32;gsm,&#32;lb,&#32;ub);</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00233"/>00233 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;xsm&#32;=&#32;&quot;&#32;&lt;&lt;&#32;(x&#32;+&#32;m_drt).transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00234"/>00234 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;f(xsm)&#32;=&#32;&quot;&#32;&lt;&lt;&#32;fsm&#32;&lt;&lt;&#32;&quot;,&#32;||proj_grad||&#32;=&#32;&quot;&#32;&lt;&lt;&#32;projgsmnorm&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl;*/</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00235"/>00235 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k++;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00238"/>00238 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;k;
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00240"/>00240 &#32;&#32;&#32;&#32;}
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00241"/>00241 };
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00242"/>00242 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00243"/>00243 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00244"/>00244 }&#32;<emphasis role="comment">//&#32;namespace&#32;LBFGSpp</emphasis>
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00245"/>00245 
<anchor xml:id="__l_b_f_g_s_b_8h_source_1l00246"/>00246 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;LBFGSB_H</emphasis>
</programlisting></section>

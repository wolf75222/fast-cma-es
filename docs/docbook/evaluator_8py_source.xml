<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_evaluator_8py_source" xml:lang="en-US">
<title>evaluator.py</title>
<indexterm><primary>fcmaes/evaluator.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_evaluator_8py_source_1l00001"/><link linkend="_namespacefcmaes_1_1evaluator">00001</link> <emphasis role="comment">#&#32;-*-&#32;coding:&#32;utf-8&#32;-*-</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00002"/>00002 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00003"/>00003 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00004"/>00004 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00005"/>00005 <emphasis role="stringliteral">&#32;Fast&#32;CMA-ES&#32;-&#32;version&#32;1.6.11</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00006"/>00006 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00007"/>00007 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00008"/>00008 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Latitude</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00009"/>00009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00010"/>00010 <emphasis role="stringliteral">&#32;License:&#32;MIT</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00011"/>00011 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00012"/>00012 <emphasis role="stringliteral">&#32;File:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00013"/>00013 <emphasis role="stringliteral">&#32;&#32;-&#32;evaluator.py</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00014"/>00014 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00015"/>00015 <emphasis role="stringliteral">&#32;Description:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00016"/>00016 <emphasis role="stringliteral">&#32;&#32;-&#32;This&#32;module&#32;provides&#32;parallel&#32;objective&#32;function&#32;evaluation</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00017"/>00017 <emphasis role="stringliteral">&#32;&#32;and&#32;a&#32;serial&#32;objective&#32;function&#32;wrapper&#32;for&#32;cmaes.minimize.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00018"/>00018 <emphasis role="stringliteral">&#32;&#32;-&#32;The&#32;Evaluator&#32;class&#32;manages&#32;the&#32;parallel&#32;processes&#32;and&#32;pipes.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00019"/>00019 <emphasis role="stringliteral">&#32;&#32;-&#32;Parallel&#32;objective&#32;function&#32;evaluator.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00020"/>00020 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Uses&#32;pipes&#32;to&#32;avoid&#32;re-spawning&#32;new&#32;processes&#32;for&#32;each&#32;eval_parallel&#32;call.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00021"/>00021 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;objective&#32;function&#32;is&#32;distributed&#32;once&#32;to&#32;all&#32;processes&#32;and</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00022"/>00022 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;reused&#32;for&#32;all&#32;eval_parallel&#32;calls.&#32;Evaluator(fun)&#32;needs&#32;to&#32;be&#32;stopped&#32;after&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00023"/>00023 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;whole&#32;optimization&#32;is&#32;finished&#32;to&#32;avoid&#32;a&#32;resource&#32;leak.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00024"/>00024 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00025"/>00025 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00026"/>00026 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00027"/>00027 <emphasis role="stringliteral">&#32;Authors:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00028"/>00028 <emphasis role="stringliteral">&#32;&#32;-&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00029"/>00029 <emphasis role="stringliteral">&#32;&#32;-&#32;romain.despoullains@latitude.eu</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00030"/>00030 <emphasis role="stringliteral">&#32;&#32;-&#32;corentin.generet@latitude.eu</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00031"/>00031 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00032"/>00032 <emphasis role="stringliteral">&#32;References:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00033"/>00033 <emphasis role="stringliteral">&#32;&#32;-&#32;[1]&#32;https://github.com/dietmarwo/fast-cma-es</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00034"/>00034 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00035"/>00035 <emphasis role="stringliteral">&#32;Documentation:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00036"/>00036 <emphasis role="stringliteral">&#32;&#32;-</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00037"/>00037 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00038"/>00038 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00039"/>00039 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00040"/>00040 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00041"/>00041 
<anchor xml:id="_evaluator_8py_source_1l00042"/>00042 
<anchor xml:id="_evaluator_8py_source_1l00043"/>00043 
<anchor xml:id="_evaluator_8py_source_1l00044"/>00044 <emphasis role="keyword">from</emphasis>&#32;__future__&#32;<emphasis role="keyword">import</emphasis>&#32;annotations
<anchor xml:id="_evaluator_8py_source_1l00045"/>00045 
<anchor xml:id="_evaluator_8py_source_1l00046"/>00046 
<anchor xml:id="_evaluator_8py_source_1l00047"/>00047 
<anchor xml:id="_evaluator_8py_source_1l00048"/>00048 <emphasis role="keyword">from</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">import</emphasis>&#32;Process,&#32;Pipe
<anchor xml:id="_evaluator_8py_source_1l00049"/>00049 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp
<anchor xml:id="_evaluator_8py_source_1l00050"/>00050 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_evaluator_8py_source_1l00051"/>00051 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_evaluator_8py_source_1l00052"/>00052 <emphasis role="keyword">import</emphasis>&#32;sys,&#32;math,&#32;os&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00053"/>00053 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_evaluator_8py_source_1l00054"/>00054 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;Optional,&#32;Callable,&#32;Tuple
<anchor xml:id="_evaluator_8py_source_1l00055"/>00055 <emphasis role="keyword">from</emphasis>&#32;numpy.typing&#32;<emphasis role="keyword">import</emphasis>&#32;ArrayLike
<anchor xml:id="_evaluator_8py_source_1l00056"/>00056 
<anchor xml:id="_evaluator_8py_source_1l00057"/>00057 pipe_limit&#32;=&#32;64&#32;<emphasis role="comment">#&#32;higher&#32;values&#32;can&#32;cause&#32;issues</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00058"/>00058 
<anchor xml:id="_evaluator_8py_source_1l00059"/><link linkend="_namespacefcmaes_1_1evaluator_1a68d2ca2ef338645b599a081c8a9d47e8">00059</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1ab8a6f2f441a50ed78841e55af7af2f5f">is_log_level_active</link>(level):
<anchor xml:id="_evaluator_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00061"/>00061 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Determines&#32;if&#32;the&#32;specified&#32;log&#32;level&#32;is&#32;currently&#32;active.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00062"/>00062 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00063"/>00063 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;checks&#32;whether&#32;the&#32;provided&#32;logging&#32;level&#32;is&#32;active&#32;by&#32;iterating</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00064"/>00064 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;through&#32;the&#32;logger&#32;handlers&#32;and&#32;comparing&#32;their&#32;level&#32;settings.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00065"/>00065 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00066"/>00066 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00067"/>00067 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;level:&#32;The&#32;logging&#32;level&#32;to&#32;check.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00068"/>00068 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00069"/>00069 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00070"/>00070 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;True&#32;if&#32;the&#32;specified&#32;logging&#32;level&#32;is&#32;active,&#32;otherwise&#32;False.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00071"/>00071 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:&#32;<emphasis role="comment">#&#32;nasty&#32;but&#32;currently&#32;there&#32;is&#32;no&#32;other&#32;way</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00073"/><link linkend="_namespacefcmaes_1_1evaluator_1ab8a6f2f441a50ed78841e55af7af2f5f">00073</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;handler&#32;<emphasis role="keywordflow">in</emphasis>&#32;logger._core.handlers.values():
<anchor xml:id="_evaluator_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;handler._levelno&#32;&lt;=&#32;logger.level(level).no:
<anchor xml:id="_evaluator_8py_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">pass</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00079"/>00079 
<anchor xml:id="_evaluator_8py_source_1l00080"/>00080 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1ab8164b41a79c6e2e9836dbcc301d3369">is_debug_active</link>():
<anchor xml:id="_evaluator_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00082"/>00082 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Determines&#32;if&#32;the&#32;debug&#32;log&#32;level&#32;is&#32;currently&#32;active.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00083"/>00083 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00084"/>00084 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;checks&#32;whether&#32;the&#32;&quot;DEBUG&quot;&#32;log&#32;level&#32;is&#32;active&#32;by&#32;invoking</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00085"/>00085 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;`is_log_level_active`&#32;function&#32;with&#32;the&#32;&quot;DEBUG&quot;&#32;string&#32;as&#32;an&#32;argument.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00086"/>00086 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;It&#32;is&#32;useful&#32;for&#32;determining&#32;if&#32;debug-level&#32;logging&#32;is&#32;enabled&#32;in&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00087"/>00087 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;application.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00088"/>00088 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00089"/>00089 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00090"/>00090 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;True&#32;if&#32;the&#32;&quot;DEBUG&quot;&#32;log&#32;level&#32;is&#32;active,&#32;False&#32;otherwise.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00091"/>00091 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacefcmaes_1_1evaluator_1ab8a6f2f441a50ed78841e55af7af2f5f">is_log_level_active</link>(<emphasis role="stringliteral">&quot;DEBUG&quot;</emphasis>)
<anchor xml:id="_evaluator_8py_source_1l00093"/><link linkend="_namespacefcmaes_1_1evaluator_1ab8164b41a79c6e2e9836dbcc301d3369">00093</link> 
<anchor xml:id="_evaluator_8py_source_1l00094"/>00094 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1a629b44d3fbb8de96604cf0cedb48452e">is_trace_active</link>():
<anchor xml:id="_evaluator_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00096"/>00096 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Checks&#32;if&#32;the&#32;TRACE&#32;log&#32;level&#32;is&#32;currently&#32;active.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00097"/>00097 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00098"/>00098 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;determines&#32;whether&#32;the&#32;TRACE&#32;level&#32;of&#32;logging&#32;is&#32;enabled,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00099"/>00099 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;typically&#32;indicating&#32;if&#32;detailed&#32;debug&#32;information&#32;should&#32;be&#32;logged.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00100"/>00100 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00101"/>00101 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00102"/>00102 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;True&#32;if&#32;the&#32;TRACE&#32;log&#32;level&#32;is&#32;active,&#32;False&#32;otherwise.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00103"/>00103 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacefcmaes_1_1evaluator_1ab8a6f2f441a50ed78841e55af7af2f5f">is_log_level_active</link>(<emphasis role="stringliteral">&quot;TRACE&quot;</emphasis>)
<anchor xml:id="_evaluator_8py_source_1l00105"/><link linkend="_namespacefcmaes_1_1evaluator_1a629b44d3fbb8de96604cf0cedb48452e">00105</link> 
<anchor xml:id="_evaluator_8py_source_1l00106"/>00106 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1a3f1de81bb9ebb3f1026990d51627f5e3">eval_parallel</link>(xs:&#32;ArrayLike,&#32;
<anchor xml:id="_evaluator_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator:&#32;Evaluator):
<anchor xml:id="_evaluator_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00109"/>00109 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Evaluates&#32;a&#32;set&#32;of&#32;inputs&#32;in&#32;parallel&#32;using&#32;a&#32;provided&#32;evaluator&#32;function.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00110"/>00110 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00111"/>00111 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;processes&#32;a&#32;sequence&#32;of&#32;elements&#32;in&#32;chunks,&#32;using&#32;a&#32;custom</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00112"/>00112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;evaluator.&#32;It&#32;supports&#32;efficiently&#32;evaluating&#32;large&#32;data&#32;by&#32;dividing&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00113"/>00113 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;inputs&#32;into&#32;smaller&#32;segments&#32;and&#32;processing&#32;them&#32;iteratively&#32;in&#32;a&#32;pipeline.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00114"/>00114 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00115"/>00115 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00116"/>00116 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;(ArrayLike):&#32;Array-like&#32;collection&#32;of&#32;inputs&#32;to&#32;be&#32;evaluated.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00117"/>00117 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator&#32;(Evaluator):&#32;An&#32;evaluator&#32;callable&#32;or&#32;function&#32;responsible</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00118"/>00118 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;computing&#32;the&#32;results&#32;of&#32;the&#32;inputs&#32;provided.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00119"/>00119 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00120"/>00120 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00121"/>00121 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;Array&#32;containing&#32;the&#32;evaluation&#32;results&#32;corresponding&#32;to&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00122"/>00122 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input&#32;elements.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00123"/>00123 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00124"/><link linkend="_namespacefcmaes_1_1evaluator_1a3f1de81bb9ebb3f1026990d51627f5e3">00124</link> &#32;&#32;&#32;&#32;popsize&#32;=&#32;len(xs)
<anchor xml:id="_evaluator_8py_source_1l00125"/>00125 &#32;&#32;&#32;&#32;ys&#32;=&#32;np.empty(popsize)
<anchor xml:id="_evaluator_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;i0&#32;=&#32;0
<anchor xml:id="_evaluator_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;i1&#32;=&#32;min(popsize,&#32;pipe_limit)
<anchor xml:id="_evaluator_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;<emphasis role="keyword">True</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacefcmaes_1_1evaluator_1afe255aa77cf706556cd5740a6d9dc120">_eval_parallel_segment</link>(xs,&#32;ys,&#32;i0,&#32;i1,&#32;evaluator)
<anchor xml:id="_evaluator_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i1&#32;&gt;=&#32;popsize:
<anchor xml:id="_evaluator_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_evaluator_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i0&#32;+=&#32;pipe_limit
<anchor xml:id="_evaluator_8py_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i1&#32;=&#32;min(popsize,&#32;i1&#32;+&#32;pipe_limit)
<anchor xml:id="_evaluator_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ys
<anchor xml:id="_evaluator_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00136"/>00136 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1a7fd3b71184ba68c9fc886a0da91030a1">eval_parallel_mo</link>(xs:&#32;ArrayLike,&#32;
<anchor xml:id="_evaluator_8py_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator:&#32;Evaluator,&#32;
<anchor xml:id="_evaluator_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;int):
<anchor xml:id="_evaluator_8py_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00140"/>00140 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Evaluates&#32;a&#32;population&#32;of&#32;solutions&#32;in&#32;parallel&#32;for&#32;a&#32;multi-objective&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00141"/>00141 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00142"/>00142 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;takes&#32;a&#32;population&#32;of&#32;solutions&#32;and&#32;evaluates&#32;them&#32;in&#32;parallel&#32;to&#32;compute</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00143"/>00143 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;objective&#32;values.&#32;It&#32;is&#32;designed&#32;to&#32;handle&#32;large&#32;populations&#32;by&#32;dividing&#32;them&#32;into</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00144"/>00144 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;segments&#32;and&#32;processing&#32;each&#32;segment&#32;iteratively.&#32;The&#32;computed&#32;objective&#32;values&#32;are</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00145"/>00145 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;returned&#32;in&#32;a&#32;2-dimensional&#32;array.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00146"/>00146 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00147"/>00147 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00148"/>00148 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;(ArrayLike):&#32;The&#32;input&#32;population&#32;of&#32;solutions&#32;to&#32;evaluate.&#32;Each&#32;solution&#32;should</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00149"/>00149 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;represented&#32;as&#32;an&#32;array-like&#32;structure.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00150"/>00150 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator&#32;(Evaluator):&#32;The&#32;evaluator&#32;object&#32;that&#32;computes&#32;objective&#32;values&#32;for</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00151"/>00151 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;given&#32;solutions.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00152"/>00152 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;The&#32;number&#32;of&#32;objectives&#32;being&#32;evaluated.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00153"/>00153 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00154"/>00154 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00155"/>00155 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;2-dimensional&#32;array&#32;where&#32;each&#32;row&#32;corresponds&#32;to&#32;the&#32;computed</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00156"/>00156 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objective&#32;values&#32;of&#32;a&#32;solution&#32;in&#32;the&#32;input&#32;population.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00157"/><link linkend="_namespacefcmaes_1_1evaluator_1a7fd3b71184ba68c9fc886a0da91030a1">00157</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00158"/>00158 &#32;&#32;&#32;&#32;popsize&#32;=&#32;len(xs)
<anchor xml:id="_evaluator_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;ys&#32;=&#32;np.empty((popsize,nobj))
<anchor xml:id="_evaluator_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;i0&#32;=&#32;0
<anchor xml:id="_evaluator_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;i1&#32;=&#32;min(popsize,&#32;pipe_limit)
<anchor xml:id="_evaluator_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;<emphasis role="keyword">True</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacefcmaes_1_1evaluator_1afe255aa77cf706556cd5740a6d9dc120">_eval_parallel_segment</link>(xs,&#32;ys,&#32;i0,&#32;i1,&#32;evaluator)
<anchor xml:id="_evaluator_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i1&#32;&gt;=&#32;popsize:
<anchor xml:id="_evaluator_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_evaluator_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i0&#32;+=&#32;pipe_limit
<anchor xml:id="_evaluator_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i1&#32;=&#32;min(popsize,&#32;i1&#32;+&#32;pipe_limit)
<anchor xml:id="_evaluator_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ys
<anchor xml:id="_evaluator_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00170"/>00170 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator">Evaluator</link>(object):
<anchor xml:id="_evaluator_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00172"/>00172 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Evaluator&#32;class&#32;to&#32;manage&#32;the&#32;parallel&#32;evaluation&#32;of&#32;a&#32;function&#32;across&#32;multiple&#32;workers.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00173"/>00173 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00174"/>00174 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;Evaluator&#32;class&#32;facilitates&#32;the&#32;distribution&#32;and&#32;parallel&#32;execution&#32;of&#32;a&#32;specified</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00175"/>00175 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;objective&#32;function&#32;using&#32;worker&#32;processes.&#32;It&#32;enables&#32;efficient&#32;evaluation&#32;of&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00176"/>00176 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;function&#32;with&#32;shared&#32;resources&#32;such&#32;as&#32;pipes&#32;and&#32;mutex&#32;locks&#32;to&#32;ensure&#32;synchronization.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00177"/>00177 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Workers&#32;can&#32;be&#32;dynamically&#32;started&#32;based&#32;on&#32;the&#32;number&#32;of&#32;available&#32;CPUs.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00178"/>00178 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00179"/>00179 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00180"/>00180 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;Objective&#32;function&#32;to&#32;be&#32;evaluated&#32;by&#32;workers.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00181"/>00181 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pipe&#32;(Pipe):&#32;Interprocess&#32;communication&#32;pipe&#32;for&#32;sending&#32;and&#32;receiving&#32;data</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00182"/>00182 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;between&#32;workers.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00183"/><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator">00183</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read_mutex&#32;(Lock):&#32;Mutex&#32;lock&#32;to&#32;ensure&#32;safe&#32;reading&#32;from&#32;the&#32;pipe.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00184"/>00184 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;write_mutex&#32;(Lock):&#32;Mutex&#32;lock&#32;to&#32;ensure&#32;safe&#32;writing&#32;to&#32;the&#32;pipe.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00185"/>00185 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00186"/>00186 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1a50ed6d53a492bce3552b2fc991271542">__init__</link>(self,&#32;
<anchor xml:id="_evaluator_8py_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;<emphasis role="comment">#&#32;objective&#32;function</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;):
<anchor xml:id="_evaluator_8py_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00190"/>00190 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;instance&#32;of&#32;the&#32;class&#32;with&#32;the&#32;provided&#32;objective&#32;function,&#32;and</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00191"/>00191 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sets&#32;up&#32;the&#32;necessary&#32;communication&#32;and&#32;synchronization&#32;mechanisms.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00192"/>00192 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00193"/>00193 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00194"/>00194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;Objective&#32;function&#32;to&#32;be&#32;used&#32;by&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00195"/>00195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;instance.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00196"/>00196 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ae5b016e0ced992bbb7b07073a7df5a4c">fun</link>&#32;=&#32;fun&#32;
<anchor xml:id="_evaluator_8py_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1a4ca417b9deee1bddace8f316098da8f6">pipe</link>&#32;=&#32;Pipe()
<anchor xml:id="_evaluator_8py_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1a3e267f2596f3621d04264f076ab3abd0">read_mutex</link>&#32;=&#32;mp.Lock()&#32;
<anchor xml:id="_evaluator_8py_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ae4b2cf3ee6030d54b34a94a0a7365c03">write_mutex</link>&#32;=&#32;mp.Lock()&#32;
<anchor xml:id="_evaluator_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ac97052cab67773de915ff7f6b91dcbf2">start</link>(self,&#32;workers:&#32;Optional[int]&#32;=&#32;mp.cpu_count()):
<anchor xml:id="_evaluator_8py_source_1l00203"/><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1a50ed6d53a492bce3552b2fc991271542">00203</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00204"/>00204 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Starts&#32;the&#32;multiprocessing&#32;environment&#32;with&#32;a&#32;specified&#32;number&#32;of&#32;workers&#32;and</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00205"/>00205 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initializes&#32;the&#32;processes&#32;required&#32;to&#32;execute&#32;the&#32;given&#32;function.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00206"/><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ae5b016e0ced992bbb7b07073a7df5a4c">00206</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00207"/><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1a4ca417b9deee1bddace8f316098da8f6">00207</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00208"/><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1a3e267f2596f3621d04264f076ab3abd0">00208</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;worker&#32;processes&#32;to&#32;spawn.&#32;If&#32;not</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00209"/><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ae4b2cf3ee6030d54b34a94a0a7365c03">00209</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specified,&#32;defaults&#32;to&#32;the&#32;system&apos;s&#32;CPU&#32;count.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00210"/>00210 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ae804d4d3f546dd5277b8592560a820db">workers</link>&#32;=&#32;workers
<anchor xml:id="_evaluator_8py_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1aca2cb8b8564a09c258b3b74472868860">proc</link>=[Process(target=_evaluate,&#32;args=(self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ae5b016e0ced992bbb7b07073a7df5a4c">fun</link>,&#32;
<anchor xml:id="_evaluator_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1a4ca417b9deee1bddace8f316098da8f6">pipe</link>,&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1a3e267f2596f3621d04264f076ab3abd0">read_mutex</link>,&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ae4b2cf3ee6030d54b34a94a0a7365c03">write_mutex</link>))&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(workers)]
<anchor xml:id="_evaluator_8py_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[p.start()&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1aca2cb8b8564a09c258b3b74472868860">proc</link>]
<anchor xml:id="_evaluator_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1aa63fc8612c3f2849065ce8c7d00ef8f5">stop</link>(self):&#32;<emphasis role="comment">#&#32;shutdown&#32;all&#32;workers&#32;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00218"/>00218 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stops&#32;all&#32;workers&#32;and&#32;frees&#32;resources&#32;properly.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00219"/><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ac97052cab67773de915ff7f6b91dcbf2">00219</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00220"/><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ae804d4d3f546dd5277b8592560a820db">00220</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;ensures&#32;a&#32;graceful&#32;shutdown&#32;of&#32;all&#32;initiated&#32;workers&#32;by&#32;notifying</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00221"/><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1aca2cb8b8564a09c258b3b74472868860">00221</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;them&#32;through&#32;the&#32;pipe&#32;and&#32;waiting&#32;for&#32;their&#32;termination.&#32;Once&#32;all&#32;workers&#32;have</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00222"/>00222 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;been&#32;joined,&#32;it&#32;also&#32;closes&#32;all&#32;communication&#32;pipes.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00223"/>00223 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00224"/>00224 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00225"/>00225 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OSError:&#32;Raised&#32;if&#32;there&#32;are&#32;issues&#32;while&#32;closing&#32;any&#32;of&#32;the&#32;pipes.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00226"/>00226 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00227"/>00227 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1ae804d4d3f546dd5277b8592560a820db">workers</link>):
<anchor xml:id="_evaluator_8py_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1a4ca417b9deee1bddace8f316098da8f6">pipe</link>[0].send(<emphasis role="keywordtype">None</emphasis>)
<anchor xml:id="_evaluator_8py_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[p.join()&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1aca2cb8b8564a09c258b3b74472868860">proc</link>]&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1a4ca417b9deee1bddace8f316098da8f6">pipe</link>:
<anchor xml:id="_evaluator_8py_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p.close()
<anchor xml:id="_evaluator_8py_source_1l00233"/>00233 
<anchor xml:id="_evaluator_8py_source_1l00234"/>00234 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1afe255aa77cf706556cd5740a6d9dc120">_eval_parallel_segment</link>(xs,&#32;ys,&#32;i0,&#32;i1,&#32;evaluator):
<anchor xml:id="_evaluator_8py_source_1l00235"/>00235 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00236"/><link linkend="_classfcmaes_1_1evaluator_1_1_evaluator_1aa63fc8612c3f2849065ce8c7d00ef8f5">00236</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Evaluates&#32;a&#32;segment&#32;of&#32;data&#32;in&#32;parallel&#32;by&#32;sending&#32;and&#32;receiving&#32;data&#32;through&#32;a&#32;pipe.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00237"/>00237 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00238"/>00238 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;processes&#32;a&#32;segment&#32;of&#32;input&#32;data&#32;specified&#32;by&#32;the&#32;indices&#32;i0&#32;and&#32;i1</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00239"/>00239 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;using&#32;the&#32;evaluator&apos;s&#32;pipeline.&#32;It&#32;sends&#32;values&#32;from&#32;the&#32;input&#32;`xs`&#32;to&#32;the&#32;evaluator,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00240"/>00240 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;receives&#32;processed&#32;results&#32;to&#32;update&#32;the&#32;output&#32;`ys`.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00241"/>00241 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00242"/>00242 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00243"/>00243 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs:&#32;A&#32;sequence&#32;of&#32;input&#32;data&#32;to&#32;be&#32;evaluated.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00244"/>00244 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys:&#32;A&#32;sequence&#32;to&#32;store&#32;the&#32;results&#32;after&#32;evaluation.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00245"/>00245 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i0:&#32;The&#32;starting&#32;index&#32;of&#32;the&#32;segment&#32;to&#32;be&#32;processed&#32;(inclusive).</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00246"/>00246 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i1:&#32;The&#32;ending&#32;index&#32;of&#32;the&#32;segment&#32;to&#32;be&#32;processed&#32;(exclusive).</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00247"/>00247 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator:&#32;An&#32;object&#32;with&#32;a&#32;communication&#32;pipe&#32;for&#32;parallel&#32;processing.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00248"/>00248 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00249"/>00249 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00250"/>00250 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;updated&#32;`ys`&#32;sequence&#32;containing&#32;the&#32;evaluated&#32;results.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00251"/>00251 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00252"/>00252 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(i0,&#32;i1):
<anchor xml:id="_evaluator_8py_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator.pipe[0].send((i,&#32;xs[i]))
<anchor xml:id="_evaluator_8py_source_1l00254"/>00254 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(i0,&#32;i1):&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i,&#32;y&#32;=&#32;evaluator.pipe[0].recv()
<anchor xml:id="_evaluator_8py_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys[i]&#32;=&#32;y
<anchor xml:id="_evaluator_8py_source_1l00257"/>00257 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ys
<anchor xml:id="_evaluator_8py_source_1l00258"/>00258 
<anchor xml:id="_evaluator_8py_source_1l00259"/>00259 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1ad73ccd9d36e41634dfd83907b1fa2872">_evaluate</link>(fun,&#32;pipe,&#32;read_mutex,&#32;write_mutex):&#32;<emphasis role="comment">#&#32;worker</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00260"/>00260 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00261"/>00261 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Execute&#32;a&#32;given&#32;function&#32;on&#32;inputs&#32;received&#32;from&#32;a&#32;communication&#32;pipe&#32;in&#32;a</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00262"/><link linkend="_namespacefcmaes_1_1evaluator_1afe255aa77cf706556cd5740a6d9dc120">00262</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;thread-safe&#32;manner&#32;and&#32;send&#32;results&#32;back&#32;through&#32;the&#32;pipe.&#32;Handles&#32;potential</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00263"/>00263 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;exceptions&#32;during&#32;function&#32;execution&#32;and&#32;ensures&#32;proper&#32;synchronization</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00264"/>00264 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;using&#32;the&#32;provided&#32;mutex&#32;locks.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00265"/>00265 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00266"/>00266 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00267"/>00267 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable):&#32;Function&#32;to&#32;be&#32;executed&#32;on&#32;input&#32;data&#32;received&#32;from&#32;the&#32;pipe.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00268"/>00268 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pipe&#32;(Tuple[Connection,&#32;Connection]):&#32;A&#32;pair&#32;of&#32;connection&#32;objects&#32;for&#32;inter-process</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00269"/>00269 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;communication,&#32;used&#32;for&#32;receiving&#32;inputs&#32;and&#32;sending&#32;results.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00270"/>00270 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read_mutex&#32;(Lock):&#32;A&#32;threading&#32;lock&#32;ensuring&#32;safe&#32;reading&#32;from&#32;the&#32;input&#32;pipe.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00271"/>00271 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;write_mutex&#32;(Lock):&#32;A&#32;threading&#32;lock&#32;ensuring&#32;safe&#32;writing&#32;to&#32;the&#32;output&#32;pipe.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00272"/>00272 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00273"/>00273 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;<emphasis role="keyword">True</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;read_mutex:
<anchor xml:id="_evaluator_8py_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg&#32;=&#32;pipe[1].recv()&#32;<emphasis role="comment">#&#32;Read&#32;from&#32;the&#32;input&#32;pipe</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;msg&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:&#32;
<anchor xml:id="_evaluator_8py_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>&#32;<emphasis role="comment">#&#32;shutdown&#32;worker</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i,&#32;x&#32;=&#32;msg
<anchor xml:id="_evaluator_8py_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;fun(x)
<anchor xml:id="_evaluator_8py_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_evaluator_8py_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;&#32;sys.float_info.max
<anchor xml:id="_evaluator_8py_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;write_mutex:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pipe[1].send((i,&#32;y))&#32;<emphasis role="comment">#&#32;Send&#32;result</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00285"/><link linkend="_namespacefcmaes_1_1evaluator_1ad73ccd9d36e41634dfd83907b1fa2872">00285</link> 
<anchor xml:id="_evaluator_8py_source_1l00286"/>00286 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1a4cbc79347af4303863c4d9b57a251e0d">_check_bounds</link>(bounds,&#32;guess,&#32;rg):
<anchor xml:id="_evaluator_8py_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00288"/>00288 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Checks&#32;and&#32;processes&#32;bounds,&#32;guesses,&#32;and&#32;random&#32;generator&#32;inputs&#32;for&#32;optimization.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00289"/>00289 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00290"/>00290 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;ensures&#32;that&#32;either&#32;bounds&#32;or&#32;guesses&#32;are&#32;properly&#32;defined,&#32;as&#32;they</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00291"/>00291 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;are&#32;necessary&#32;to&#32;perform&#32;any&#32;optimization&#32;task.&#32;If&#32;`bounds`&#32;is&#32;not&#32;provided,&#32;but</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00292"/>00292 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;`guess`&#32;is,&#32;it&#32;returns&#32;a&#32;processed&#32;version&#32;of&#32;the&#32;guess.&#32;If&#32;`bounds`&#32;is&#32;provided</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00293"/>00293 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;but&#32;`guess`&#32;is&#32;absent,&#32;it&#32;generates&#32;a&#32;random&#32;guess&#32;within&#32;the&#32;bounds&#32;using&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00294"/>00294 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;provided&#32;random&#32;generator.&#32;Ultimately,&#32;it&#32;arranges&#32;and&#32;returns&#32;bounds&#32;and&#32;guesses</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00295"/>00295 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;as&#32;numpy&#32;arrays.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00296"/>00296 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00297"/>00297 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00298"/>00298 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Object&#32;containing&#32;lower&#32;(`lb`)&#32;and&#32;upper&#32;(`ub`)&#32;bounds.&#32;Can&#32;be&#32;None</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00299"/>00299 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;guess&#32;is&#32;provided&#32;directly.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00300"/>00300 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Initial&#32;guess&#32;of&#32;the&#32;parameters.&#32;Can&#32;be&#32;None&#32;if&#32;bounds&#32;are&#32;provided.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00301"/>00301 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;A&#32;random&#32;number&#32;generator&#32;instance&#32;used&#32;to&#32;generate&#32;guesses&#32;when&#32;they</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00302"/>00302 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;are&#32;not&#32;explicitly&#32;provided.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00303"/>00303 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00304"/>00304 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00305"/>00305 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple&#32;containing:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00306"/>00306 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;Lower&#32;bounds&#32;array&#32;(numpy.ndarray)&#32;or&#32;None&#32;if&#32;bounds&#32;are&#32;not&#32;provided.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00307"/>00307 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;Upper&#32;bounds&#32;array&#32;(numpy.ndarray)&#32;or&#32;None&#32;if&#32;bounds&#32;are&#32;not&#32;provided.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00308"/>00308 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;Guess&#32;array&#32;(numpy.ndarray)&#32;processed&#32;from&#32;the&#32;provided&#32;inputs.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00309"/>00309 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00310"/>00310 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00311"/>00311 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueError:&#32;If&#32;both&#32;bounds&#32;and&#32;guess&#32;are&#32;None.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00312"/>00312 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00313"/>00313 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;bounds&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">and</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;ValueError(<emphasis role="stringliteral">&apos;either&#32;guess&#32;or&#32;bounds&#32;need&#32;to&#32;be&#32;defined&apos;</emphasis>)
<anchor xml:id="_evaluator_8py_source_1l00315"/>00315 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;bounds&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="keywordtype">None</emphasis>,&#32;np.asarray(guess)
<anchor xml:id="_evaluator_8py_source_1l00317"/>00317 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;rg.uniform(bounds.lb,&#32;bounds.ub)
<anchor xml:id="_evaluator_8py_source_1l00319"/>00319 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.asarray(bounds.lb),&#32;np.asarray(bounds.ub),&#32;np.asarray(guess)
<anchor xml:id="_evaluator_8py_source_1l00320"/>00320 
<anchor xml:id="_evaluator_8py_source_1l00321"/>00321 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1a8e9d001859be2ec90b8511ef634bfdda">_get_bounds</link>(dim,&#32;bounds,&#32;guess,&#32;rg):
<anchor xml:id="_evaluator_8py_source_1l00322"/>00322 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00323"/>00323 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Configures&#32;and&#32;validates&#32;bounds,&#32;initial&#32;guesses,&#32;and&#32;dimensionality&#32;for&#32;a&#32;process.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00324"/>00324 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00325"/>00325 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;processes&#32;and&#32;ensures&#32;the&#32;compatibility&#32;of&#32;dimensionality,&#32;bounds,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00326"/>00326 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;guesses&#32;for&#32;an&#32;optimization&#32;or&#32;computational&#32;routine.&#32;It&#32;also&#32;generates</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00327"/><link linkend="_namespacefcmaes_1_1evaluator_1a4cbc79347af4303863c4d9b57a251e0d">00327</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;default&#32;values&#32;where&#32;absent,&#32;ensuring&#32;all&#32;return&#32;values&#32;align&#32;with&#32;the&#32;given</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00328"/>00328 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;inputs.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00329"/>00329 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00330"/>00330 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00331"/>00331 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;Dimensionality&#32;of&#32;the&#32;problem.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00332"/>00332 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;lower&#32;and&#32;upper&#32;bounds&#32;for&#32;each&#32;dimension.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00333"/>00333 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[np.ndarray]):&#32;Initial&#32;guess&#32;for&#32;the&#32;optimization&#32;variable(s).</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00334"/>00334 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(np.random.Generator):&#32;Random&#32;number&#32;generator&#32;used&#32;for&#32;generating</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00335"/>00335 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uniformly&#32;distributed&#32;guesses&#32;if&#32;`guess`&#32;is&#32;not&#32;provided.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00336"/>00336 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00337"/>00337 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00338"/>00338 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[Optional[np.ndarray],&#32;Optional[np.ndarray],&#32;np.ndarray]:&#32;A&#32;tuple</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00339"/>00339 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containing&#32;the&#32;processed&#32;lower&#32;bounds,&#32;upper&#32;bounds,&#32;and&#32;initial&#32;guess.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00340"/>00340 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;(None,&#32;None,&#32;guess)&#32;when&#32;bounds&#32;is&#32;not&#32;specified.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00341"/>00341 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00342"/>00342 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;bounds&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;np.asarray(np.zeros(dim))
<anchor xml:id="_evaluator_8py_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="keywordtype">None</emphasis>,&#32;guess
<anchor xml:id="_evaluator_8py_source_1l00346"/>00346 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;rg.uniform(bounds.lb,&#32;bounds.ub)
<anchor xml:id="_evaluator_8py_source_1l00348"/>00348 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.asarray(bounds.lb),&#32;np.asarray(bounds.ub),&#32;np.asarray(guess)
<anchor xml:id="_evaluator_8py_source_1l00349"/>00349 
<anchor xml:id="_evaluator_8py_source_1l00350"/>00350 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1__fitness">_fitness</link>(object):
<anchor xml:id="_evaluator_8py_source_1l00351"/>00351 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00352"/>00352 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Represents&#32;a&#32;fitness&#32;evaluation&#32;system&#32;for&#32;optimization&#32;problems.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00353"/>00353 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00354"/>00354 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;encapsulates&#32;a&#32;fitness&#32;evaluation&#32;system&#32;that&#32;supports&#32;parallel&#32;evaluation,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00355"/>00355 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;manages&#32;scaling&#32;and&#32;normalization&#32;of&#32;input&#32;values&#32;based&#32;on&#32;given&#32;bounds,&#32;and</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00356"/>00356 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;provides&#32;encoding&#32;and&#32;decoding&#32;mechanisms&#32;for&#32;the&#32;input&#32;values.&#32;It&#32;tracks&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00357"/>00357 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;number&#32;of&#32;fitness&#32;evaluations&#32;performed&#32;and&#32;ensures&#32;that&#32;inputs&#32;conform&#32;to</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00358"/><link linkend="_namespacefcmaes_1_1evaluator_1a8e9d001859be2ec90b8511ef634bfdda">00358</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;specified&#32;feasible&#32;bounds.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00359"/>00359 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00360"/>00360 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00361"/>00361 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(callable):&#32;The&#32;fitness&#32;function&#32;used&#32;to&#32;evaluate&#32;fitness&#32;values.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00362"/>00362 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluation_counter&#32;(int):&#32;Counter&#32;tracking&#32;the&#32;number&#32;of&#32;fitness&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00363"/>00363 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower:&#32;The&#32;lower&#32;bound&#32;for&#32;input&#32;values.&#32;Can&#32;be&#32;`None`&#32;if&#32;no&#32;lower&#32;bound&#32;is&#32;defined.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00364"/>00364 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper:&#32;The&#32;upper&#32;bound&#32;for&#32;input&#32;values.&#32;Can&#32;be&#32;`None`&#32;if&#32;no&#32;upper&#32;bound&#32;is&#32;defined.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00365"/>00365 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;(bool):&#32;Indicates&#32;whether&#32;normalization&#32;of&#32;input&#32;values&#32;is&#32;applied.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00366"/>00366 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00368"/>00368 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__init__(self,&#32;fun,&#32;lower,&#32;upper,&#32;normalize&#32;=&#32;None):
<anchor xml:id="_evaluator_8py_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00370"/>00370 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;class&#32;with&#32;a&#32;given&#32;function,&#32;lower&#32;and&#32;upper&#32;bounds,&#32;and&#32;an</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00371"/>00371 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optional&#32;normalization&#32;flag.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00372"/>00372 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00373"/>00373 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00374"/>00374 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;A&#32;function&#32;object&#32;that&#32;defines&#32;the&#32;operation&#32;or&#32;behavior&#32;related&#32;to</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00375"/>00375 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;instance&#32;of&#32;the&#32;class.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00376"/>00376 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower:&#32;A&#32;numeric&#32;value&#32;or&#32;an&#32;iterable&#32;defining&#32;the&#32;lower&#32;bounds&#32;for&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00377"/>00377 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00378"/>00378 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper:&#32;A&#32;numeric&#32;value&#32;or&#32;an&#32;iterable&#32;defining&#32;the&#32;upper&#32;bounds&#32;for&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00379"/>00379 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00380"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness">00380</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize:&#32;Optional;&#32;A&#32;boolean&#32;flag&#32;indicating&#32;whether&#32;the&#32;function&apos;s</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00381"/>00381 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;behavior&#32;should&#32;be&#32;normalized.&#32;Defaults&#32;to&#32;False.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00382"/>00382 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1af7c0600358aeaeefc43be1935db00c49">fun</link>&#32;=&#32;fun
<anchor xml:id="_evaluator_8py_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a12e30e84b93a7ecd593b0358d92d8a0c">evaluation_counter</link>&#32;=&#32;0
<anchor xml:id="_evaluator_8py_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a87bb609b86427fcd5228e0ab0b175ca0">lower</link>&#32;=&#32;lower
<anchor xml:id="_evaluator_8py_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e">normalize</link>&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;(lower&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;normalize&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_evaluator_8py_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e">normalize</link>&#32;=&#32;normalize
<anchor xml:id="_evaluator_8py_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;lower&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1ab1b189d5d30d98b40ca9a05798b591f7">upper</link>&#32;=&#32;upper
<anchor xml:id="_evaluator_8py_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a81d7f4f260b083112c1c7c06c28f1fa8">scale</link>&#32;=&#32;0.5&#32;*&#32;(upper&#32;-&#32;lower)
<anchor xml:id="_evaluator_8py_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a96f3612f153e1efc5b985b8c9b104e11">typx</link>&#32;=&#32;0.5&#32;*&#32;(upper&#32;+&#32;lower)
<anchor xml:id="_evaluator_8py_source_1l00393"/>00393 
<anchor xml:id="_evaluator_8py_source_1l00394"/>00394 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1aa36396c7701eed3f5d8e84a14a111104">values</link>(self,&#32;Xs):&#32;<emphasis role="comment">#enables&#32;parallel&#32;evaluation</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00396"/>00396 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Evaluates&#32;the&#32;given&#32;input&#32;values&#32;through&#32;the&#32;provided&#32;function&#32;while</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00397"/>00397 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tracking&#32;the&#32;number&#32;of&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00398"/>00398 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00399"/>00399 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00400"/>00400 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Xs:&#32;Input&#32;values&#32;for&#32;which&#32;the&#32;function&#32;is&#32;evaluated.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00401"/>00401 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00402"/>00402 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00403"/>00403 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;An&#32;array&#32;containing&#32;the&#32;evaluated&#32;results.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00404"/>00404 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values&#32;=&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1af7c0600358aeaeefc43be1935db00c49">fun</link>(Xs)
<anchor xml:id="_evaluator_8py_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a12e30e84b93a7ecd593b0358d92d8a0c">evaluation_counter</link>&#32;+=&#32;len(Xs)
<anchor xml:id="_evaluator_8py_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array(values)
<anchor xml:id="_evaluator_8py_source_1l00408"/>00408 &#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00409"/>00409 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a763742cf075aeb82ff147ef85a40c7a0">closestFeasible</link>(self,&#32;X):
<anchor xml:id="_evaluator_8py_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00411"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1adff76348882223d9268c6768e5115ebe">00411</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Finds&#32;and&#32;returns&#32;the&#32;closest&#32;feasible&#32;value(s)&#32;within&#32;the&#32;specified&#32;boundaries.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00412"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1af7c0600358aeaeefc43be1935db00c49">00412</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00413"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a12e30e84b93a7ecd593b0358d92d8a0c">00413</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;lower&#32;and&#32;upper&#32;bounds&#32;are&#32;defined,&#32;the&#32;value(s)&#32;are&#32;clipped&#32;between&#32;those</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00414"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a87bb609b86427fcd5228e0ab0b175ca0">00414</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds.&#32;If&#32;normalization&#32;is&#32;enabled,&#32;the&#32;values&#32;are&#32;clipped&#32;between&#32;-1.0&#32;and</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00415"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e">00415</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.0.&#32;Otherwise,&#32;the&#32;original&#32;value(s)&#32;are&#32;returned.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00416"/>00416 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00417"/>00417 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00418"/>00418 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X:&#32;The&#32;value(s)&#32;to&#32;be&#32;adjusted&#32;to&#32;the&#32;closest&#32;feasible&#32;within&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00419"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1ab1b189d5d30d98b40ca9a05798b591f7">00419</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specified&#32;boundaries.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00420"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a81d7f4f260b083112c1c7c06c28f1fa8">00420</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00421"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a96f3612f153e1efc5b985b8c9b104e11">00421</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00422"/>00422 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;value(s)&#32;clipped&#32;to&#32;the&#32;closest&#32;feasible&#32;within&#32;the&#32;boundaries.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00423"/>00423 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a87bb609b86427fcd5228e0ab0b175ca0">lower</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;X&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e">normalize</link>:
<anchor xml:id="_evaluator_8py_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.clip(X,&#32;-1.0,&#32;1.0)
<anchor xml:id="_evaluator_8py_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.clip(X,&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a87bb609b86427fcd5228e0ab0b175ca0">lower</link>,&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1ab1b189d5d30d98b40ca9a05798b591f7">upper</link>)
<anchor xml:id="_evaluator_8py_source_1l00431"/>00431 
<anchor xml:id="_evaluator_8py_source_1l00432"/>00432 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a80ef3b0f3b67f83f4b72bce0f35b28b6">encode</link>(self,&#32;X):
<anchor xml:id="_evaluator_8py_source_1l00433"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1aa36396c7701eed3f5d8e84a14a111104">00433</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00434"/>00434 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Encodes&#32;the&#32;input&#32;data&#32;X&#32;by&#32;either&#32;normalizing&#32;it&#32;based&#32;on&#32;provided&#32;scaling</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00435"/>00435 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;factors&#32;or&#32;leaving&#32;it&#32;unchanged&#32;depending&#32;on&#32;the&#32;normalization&#32;setting.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00436"/>00436 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00437"/>00437 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00438"/>00438 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X:&#32;Input&#32;data&#32;to&#32;encode.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00439"/>00439 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00440"/>00440 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00441"/>00441 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;encoded&#32;data,&#32;normalized&#32;if&#32;the&#32;`normalize`&#32;attribute&#32;is&#32;set&#32;to&#32;True,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00442"/>00442 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;otherwise&#32;the&#32;original&#32;input.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00443"/>00443 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e">normalize</link>:
<anchor xml:id="_evaluator_8py_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(X&#32;-&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a96f3612f153e1efc5b985b8c9b104e11">typx</link>)&#32;/&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a81d7f4f260b083112c1c7c06c28f1fa8">scale</link>
<anchor xml:id="_evaluator_8py_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;X
<anchor xml:id="_evaluator_8py_source_1l00448"/>00448 &#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00449"/>00449 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a0461d372942bcc1d8a5a92bca09aace8">decode</link>(self,&#32;X):
<anchor xml:id="_evaluator_8py_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00451"/>00451 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Decodes&#32;the&#32;given&#32;input&#32;using&#32;an&#32;optional&#32;normalization&#32;method.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00452"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a763742cf075aeb82ff147ef85a40c7a0">00452</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00453"/>00453 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;normalization&#32;is&#32;enabled,&#32;it&#32;applies&#32;a&#32;transformation&#32;to&#32;the&#32;input&#32;based&#32;on&#32;the&#32;provided</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00454"/>00454 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;and&#32;typx&#32;values.&#32;Otherwise,&#32;it&#32;returns&#32;the&#32;input&#32;as&#32;is.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00455"/>00455 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00456"/>00456 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00457"/>00457 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X:&#32;Input&#32;data&#32;to&#32;decode.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00458"/>00458 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00459"/>00459 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00460"/>00460 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;decoded&#32;data.&#32;If&#32;normalization&#32;is&#32;enabled,&#32;it&#32;will&#32;be&#32;adjusted&#32;using&#32;the&#32;defined</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00461"/>00461 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scale&#32;and&#32;typx&#32;values.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00462"/>00462 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e">normalize</link>:
<anchor xml:id="_evaluator_8py_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(X&#32;*&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a81d7f4f260b083112c1c7c06c28f1fa8">scale</link>)&#32;+&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a96f3612f153e1efc5b985b8c9b104e11">typx</link>
<anchor xml:id="_evaluator_8py_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;X
<anchor xml:id="_evaluator_8py_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00468"/>00468 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1a91fda48468c86eb01e6ef3959d4087c8">serial</link>(fun):
<anchor xml:id="_evaluator_8py_source_1l00469"/>00469 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00470"/>00470 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Creates&#32;a&#32;function&#32;that&#32;applies&#32;a&#32;given&#32;function&#32;to&#32;each&#32;element&#32;in&#32;a&#32;list.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00471"/>00471 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00472"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a80ef3b0f3b67f83f4b72bce0f35b28b6">00472</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;decorator&#32;takes&#32;a&#32;function&#32;as&#32;input&#32;and&#32;returns&#32;a&#32;new&#32;function.&#32;The</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00473"/>00473 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;returned&#32;function,&#32;when&#32;called&#32;with&#32;a&#32;list&#32;of&#32;elements,&#32;applies&#32;the&#32;input</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00474"/>00474 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;function&#32;to&#32;each&#32;element&#32;in&#32;the&#32;list&#32;sequentially.&#32;If&#32;the&#32;input&#32;function&#32;fails</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00475"/>00475 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;for&#32;an&#32;element,&#32;the&#32;resulting&#32;behavior&#32;is&#32;handled&#32;by&#32;an&#32;internal&#32;mechanism.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00476"/>00476 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00477"/>00477 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00478"/>00478 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;The&#32;function&#32;to&#32;be&#32;applied&#32;to&#32;each&#32;element&#32;in&#32;a&#32;list.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00479"/>00479 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00480"/>00480 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00481"/>00481 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;new&#32;function&#32;that&#32;takes&#32;a&#32;list&#32;of&#32;elements&#32;and&#32;applies&#32;&apos;fun&apos;&#32;to&#32;each</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00482"/>00482 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element,&#32;returning&#32;a&#32;list&#32;of&#32;results.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00483"/>00483 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00484"/>00484 &#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00485"/>00485 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">lambda</emphasis>&#32;xs&#32;:&#32;[<link linkend="_namespacefcmaes_1_1evaluator_1a2070228090b71531c5734270831835f1">_tryfun</link>(fun,&#32;x)&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;xs]
<anchor xml:id="_evaluator_8py_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00487"/>00487 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1a208b8277669b6cfffba7bbafa42702fe">_func_serial</link>(fun,&#32;num,&#32;pid,&#32;xs,&#32;ys):
<anchor xml:id="_evaluator_8py_source_1l00488"/>00488 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00489"/>00489 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Applies&#32;a&#32;function&#32;to&#32;elements&#32;of&#32;a&#32;list&#32;in&#32;a&#32;serial&#32;manner&#32;based&#32;on&#32;a&#32;processing</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00490"/>00490 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;strategy&#32;using&#32;process&#32;ID&#32;and&#32;total&#32;number&#32;of&#32;processes.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00491"/><link linkend="_classfcmaes_1_1evaluator_1_1__fitness_1a0461d372942bcc1d8a5a92bca09aace8">00491</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00492"/>00492 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;modifies&#32;the&#32;`ys`&#32;list&#32;in&#32;place,&#32;applying&#32;the&#32;`fun`&#32;function</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00493"/>00493 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;elements&#32;in&#32;`xs`&#32;at&#32;specific&#32;indices&#32;determined&#32;by&#32;the&#32;process&#32;ID&#32;(`pid`)&#32;and</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00494"/>00494 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;total&#32;number&#32;of&#32;processes&#32;(`num`).&#32;It&#32;ensures&#32;elements&#32;are&#32;processed&#32;in&#32;a</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00495"/>00495 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;distributed&#32;order&#32;across&#32;processes.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00496"/>00496 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00497"/>00497 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00498"/>00498 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable&#32;function&#32;to&#32;apply&#32;to&#32;elements&#32;of&#32;the&#32;input&#32;list.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00499"/>00499 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num:&#32;int.&#32;Total&#32;number&#32;of&#32;processes.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00500"/>00500 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pid:&#32;int.&#32;Process&#32;ID,&#32;indicating&#32;the&#32;current&#32;process&#32;index&#32;starting&#32;at&#32;0.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00501"/>00501 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs:&#32;list.&#32;Input&#32;list&#32;of&#32;elements&#32;to&#32;process.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00502"/>00502 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys:&#32;list.&#32;Output&#32;list&#32;where&#32;results&#32;are&#32;stored&#32;at&#32;corresponding&#32;indices.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00503"/>00503 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00504"/>00504 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(pid,&#32;len(xs),&#32;num):
<anchor xml:id="_evaluator_8py_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys[i]&#32;=&#32;<link linkend="_namespacefcmaes_1_1evaluator_1a2070228090b71531c5734270831835f1">_tryfun</link>(fun,&#32;xs[i])
<anchor xml:id="_evaluator_8py_source_1l00506"/>00506 
<anchor xml:id="_evaluator_8py_source_1l00507"/>00507 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1evaluator_1a2070228090b71531c5734270831835f1">_tryfun</link>(fun,&#32;x):
<anchor xml:id="_evaluator_8py_source_1l00508"/>00508 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00509"/>00509 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attempts&#32;to&#32;evaluate&#32;the&#32;specified&#32;function&#32;with&#32;a&#32;given&#32;input&#32;and&#32;handle&#32;errors</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00510"/>00510 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;gracefully.&#32;If&#32;the&#32;result&#32;is&#32;a&#32;finite&#32;value,&#32;it&#32;is&#32;returned.&#32;Otherwise,&#32;or</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00511"/>00511 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;if&#32;the&#32;evaluation&#32;raises&#32;an&#32;exception,&#32;the&#32;maximum&#32;floating-point&#32;value&#32;is&#32;returned.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00512"/><link linkend="_namespacefcmaes_1_1evaluator_1a91fda48468c86eb01e6ef3959d4087c8">00512</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00513"/>00513 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00514"/>00514 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;A&#32;callable&#32;that&#32;represents&#32;the&#32;function&#32;to&#32;be&#32;evaluated.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00515"/>00515 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;The&#32;input&#32;value&#32;passed&#32;to&#32;the&#32;function&#32;for&#32;evaluation.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00516"/>00516 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00517"/>00517 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00518"/>00518 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;result&#32;of&#32;the&#32;function&#32;evaluation&#32;if&#32;it&#32;produces&#32;a&#32;finite&#32;value.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00519"/>00519 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Otherwise,&#32;returns&#32;the&#32;maximum&#32;floating-point&#32;value.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00520"/>00520 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00521"/>00521 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fit&#32;=&#32;fun(x)
<anchor xml:id="_evaluator_8py_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fit&#32;<emphasis role="keywordflow">if</emphasis>&#32;math.isfinite(fit)&#32;<emphasis role="keywordflow">else</emphasis>&#32;sys.float_info.max
<anchor xml:id="_evaluator_8py_source_1l00524"/>00524 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception:
<anchor xml:id="_evaluator_8py_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sys.float_info.max
<anchor xml:id="_evaluator_8py_source_1l00526"/>00526 &#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00527"/>00527 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1parallel">parallel</link>(object):
<anchor xml:id="_evaluator_8py_source_1l00528"/>00528 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00529"/>00529 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Executes&#32;functions&#32;in&#32;parallel&#32;using&#32;a&#32;multi-worker&#32;setup.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00530"/>00530 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00531"/>00531 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;facilitates&#32;the&#32;parallel&#32;execution&#32;of&#32;functions&#32;across&#32;multiple</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00532"/>00532 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;processes&#32;for&#32;improved&#32;performance&#32;and&#32;efficiency,&#32;particularly&#32;for</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00533"/>00533 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;computationally&#32;expensive&#32;or&#32;repetitive&#32;tasks.&#32;It&#32;leverages&#32;an&#32;evaluator</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00534"/><link linkend="_namespacefcmaes_1_1evaluator_1a208b8277669b6cfffba7bbafa42702fe">00534</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;manage&#32;function&#32;calls&#32;and&#32;starts&#32;job&#32;execution&#32;across&#32;specified&#32;workers.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00535"/>00535 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00536"/>00536 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00537"/>00537 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator&#32;(Evaluator):&#32;The&#32;evaluator&#32;instance&#32;responsible&#32;for&#32;managing</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00538"/>00538 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallel&#32;execution&#32;of&#32;function&#32;calls.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00539"/>00539 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00541"/>00541 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__init__(self,&#32;
<anchor xml:id="_evaluator_8py_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_evaluator_8py_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;mp.cpu_count()):
<anchor xml:id="_evaluator_8py_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00545"/>00545 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;a&#32;new&#32;instance&#32;of&#32;the&#32;class.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00546"/>00546 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00547"/>00547 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00548"/>00548 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;A&#32;callable&#32;function&#32;that&#32;accepts&#32;an&#32;argument&#32;of</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00549"/>00549 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type&#32;ArrayLike&#32;and&#32;returns&#32;a&#32;float.&#32;This&#32;function&#32;will&#32;be&#32;used&#32;as&#32;the&#32;evaluator.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00550"/>00550 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;worker&#32;processes&#32;to&#32;use.&#32;Defaults&#32;to&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00551"/>00551 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;number&#32;of&#32;CPUs&#32;available&#32;on&#32;the&#32;machine.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00552"/>00552 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00553"/><link linkend="_namespacefcmaes_1_1evaluator_1a2070228090b71531c5734270831835f1">00553</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.evaluator&#32;=&#32;<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator">Evaluator</link>(fun)
<anchor xml:id="_evaluator_8py_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.evaluator.start(workers)
<anchor xml:id="_evaluator_8py_source_1l00555"/>00555 &#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00556"/>00556 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__call__(self,&#32;xs:&#32;ArrayLike)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_evaluator_8py_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00558"/>00558 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Evaluates&#32;the&#32;input&#32;using&#32;the&#32;provided&#32;evaluator&#32;function&#32;in&#32;parallel&#32;and&#32;returns&#32;the&#32;result.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00559"/>00559 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00560"/>00560 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00561"/>00561 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;(ArrayLike):&#32;Input&#32;data&#32;to&#32;be&#32;evaluated.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00562"/>00562 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00563"/>00563 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00564"/>00564 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;The&#32;result&#32;of&#32;the&#32;evaluation.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00565"/>00565 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacefcmaes_1_1evaluator_1a3f1de81bb9ebb3f1026990d51627f5e3">eval_parallel</link>(xs,&#32;self.evaluator)
<anchor xml:id="_evaluator_8py_source_1l00567"/>00567 
<anchor xml:id="_evaluator_8py_source_1l00568"/>00568 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>stop(self):
<anchor xml:id="_evaluator_8py_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00570"/>00570 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stops&#32;the&#32;evaluation&#32;process.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00571"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel">00571</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00572"/>00572 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;halts&#32;the&#32;ongoing&#32;evaluation&#32;process&#32;managed&#32;by&#32;the&#32;evaluator</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00573"/>00573 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;prevent&#32;further&#32;execution&#32;or&#32;processing.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00574"/>00574 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00575"/>00575 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00576"/>00576 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RuntimeError:&#32;If&#32;the&#32;evaluation&#32;process&#32;cannot&#32;be&#32;stopped.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00577"/>00577 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1parallel_1a5f8d924594d093ffe94f441d62e79b6f">evaluator</link>.<link linkend="_classfcmaes_1_1evaluator_1_1parallel_1ace042713bbecd9278b68cbf54f12322f">stop</link>()
<anchor xml:id="_evaluator_8py_source_1l00579"/>00579 
<anchor xml:id="_evaluator_8py_source_1l00580"/>00580 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo">parallel_mo</link>(object):
<anchor xml:id="_evaluator_8py_source_1l00581"/>00581 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00582"/>00582 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Manages&#32;parallel&#32;multi-objective&#32;evaluations.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00583"/>00583 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00584"/>00584 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;handles&#32;the&#32;evaluation&#32;of&#32;multi-objective&#32;tasks&#32;in&#32;a&#32;parallelized</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00585"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel_1a9679b6f265113de94c38364e0124e3cb">00585</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;manner&#32;by&#32;utilizing&#32;multiple&#32;workers.&#32;It&#32;initializes&#32;with&#32;a&#32;given&#32;function</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00586"/>00586 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;be&#32;evaluated&#32;and&#32;starts&#32;the&#32;parallel&#32;evaluation&#32;process&#32;with&#32;the&#32;specified</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00587"/>00587 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;or&#32;default&#32;number&#32;of&#32;workers.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00588"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel_1a5f8d924594d093ffe94f441d62e79b6f">00588</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00589"/>00589 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00590"/>00590 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;Number&#32;of&#32;objectives&#32;to&#32;be&#32;evaluated.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00591"/>00591 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator&#32;(Evaluator):&#32;Instance&#32;of&#32;the&#32;Evaluator&#32;class&#32;used&#32;to&#32;perform</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00592"/>00592 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallel&#32;evaluations.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00593"/>00593 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00594"/>00594 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1parallel_1a9679b6f265113de94c38364e0124e3cb">__init__</link>(self,&#32;
<anchor xml:id="_evaluator_8py_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;ArrayLike],&#32;
<anchor xml:id="_evaluator_8py_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;int,&#32;
<anchor xml:id="_evaluator_8py_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;mp.cpu_count()):
<anchor xml:id="_evaluator_8py_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00599"/>00599 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;a&#32;class&#32;instance&#32;designed&#32;for&#32;handling&#32;function&#32;evaluation&#32;in&#32;a&#32;parallel</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00600"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel_1a63cfd5289e05dc71f2b53e24e268350f">00600</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;manner&#32;across&#32;multiple&#32;workers.&#32;The&#32;class&#32;takes&#32;a&#32;user-defined&#32;function,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00601"/>00601 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;number&#32;of&#32;objectives,&#32;and&#32;an&#32;optional&#32;number&#32;of&#32;workers&#32;to&#32;allocate</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00602"/>00602 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;parallel&#32;computation.&#32;It&#32;leverages&#32;an&#32;external&#32;evaluator&#32;to&#32;perform</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00603"/>00603 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;task&#32;efficiently.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00604"/>00604 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00605"/>00605 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00606"/>00606 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;ArrayLike]):&#32;A&#32;callable&#32;function&#32;that&#32;takes</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00607"/>00607 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;input&#32;array-like&#32;object&#32;and&#32;returns&#32;an&#32;array-like&#32;object&#32;as&#32;output.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00608"/>00608 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;The&#32;number&#32;of&#32;objectives&#32;for&#32;the&#32;function&#32;being&#32;evaluated.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00609"/>00609 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;workers&#32;to&#32;allocate&#32;for&#32;parallel</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00610"/>00610 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;execution.&#32;Defaults&#32;to&#32;the&#32;number&#32;of&#32;CPU&#32;cores&#32;in&#32;the&#32;system.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00611"/>00611 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00612"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel_1ace042713bbecd9278b68cbf54f12322f">00612</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.nobj&#32;=&#32;nobj
<anchor xml:id="_evaluator_8py_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1parallel_1a5f8d924594d093ffe94f441d62e79b6f">evaluator</link>&#32;=&#32;<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator">Evaluator</link>(fun)
<anchor xml:id="_evaluator_8py_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1parallel_1a5f8d924594d093ffe94f441d62e79b6f">evaluator</link>.start(workers)
<anchor xml:id="_evaluator_8py_source_1l00615"/>00615 &#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00616"/>00616 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1parallel_1a63cfd5289e05dc71f2b53e24e268350f">__call__</link>(self,&#32;xs:&#32;ArrayLike)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_evaluator_8py_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00618"/>00618 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Evaluates&#32;a&#32;set&#32;of&#32;inputs&#32;using&#32;a&#32;specified&#32;evaluator&#32;in&#32;a&#32;parallelized&#32;manner,&#32;producing&#32;a&#32;multi-objective</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00619"/>00619 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output&#32;array.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00620"/>00620 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00621"/>00621 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00622"/>00622 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;(ArrayLike):&#32;Input&#32;data&#32;to&#32;be&#32;evaluated,&#32;typically&#32;a&#32;collection&#32;of&#32;elements&#32;suitable&#32;for</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00623"/>00623 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;multi-objective&#32;evaluation.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00624"/>00624 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00625"/>00625 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00626"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo">00626</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;Computed&#32;multi-objective&#32;evaluation&#32;results&#32;in&#32;the&#32;form&#32;of&#32;an&#32;array.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00627"/>00627 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00628"/>00628 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacefcmaes_1_1evaluator_1a7fd3b71184ba68c9fc886a0da91030a1">eval_parallel_mo</link>(xs,&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1ae6b28a6671fa2734ab1b48e7b6b20b8b">evaluator</link>,&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1a9976a23db518884ec306a66c40c241a4">nobj</link>)
<anchor xml:id="_evaluator_8py_source_1l00630"/>00630 
<anchor xml:id="_evaluator_8py_source_1l00631"/>00631 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1ab85eef7c755dcc597fe05ff726ab848e">stop</link>(self):
<anchor xml:id="_evaluator_8py_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00633"/>00633 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stops&#32;the&#32;evaluator&#32;process.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00634"/>00634 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00635"/>00635 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;halts&#32;the&#32;execution&#32;of&#32;the&#32;evaluator&#32;process.&#32;It&#32;ensures&#32;that</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00636"/>00636 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;any&#32;continuous&#32;operations&#32;linked&#32;to&#32;the&#32;evaluator&#32;instance&#32;are&#32;terminated.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00637"/>00637 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00638"/>00638 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00639"/>00639 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Any&#32;exceptions&#32;raised&#32;by&#32;the&#32;`evaluator.stop()`&#32;method&#32;will&#32;propagate.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00640"/>00640 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1ae6b28a6671fa2734ab1b48e7b6b20b8b">evaluator</link>.<link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1ab85eef7c755dcc597fe05ff726ab848e">stop</link>()
<anchor xml:id="_evaluator_8py_source_1l00642"/>00642 
<anchor xml:id="_evaluator_8py_source_1l00643"/>00643 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1callback">callback</link>(object):
<anchor xml:id="_evaluator_8py_source_1l00644"/>00644 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Represents&#32;a&#32;callable&#32;object&#32;to&#32;evaluate&#32;a&#32;function&#32;with&#32;input&#32;processing.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00645"/>00645 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00646"/>00646 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;serves&#32;as&#32;a&#32;wrapper&#32;for&#32;a&#32;given&#32;function,&#32;enabling&#32;it&#32;to&#32;be</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00647"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1a30a69e897a8f91003afd40baa508d7fe">00647</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;called&#32;with&#32;processed&#32;inputs.&#32;It&#32;evaluates&#32;the&#32;function&#32;on&#32;a&#32;subset&#32;of</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00648"/>00648 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;inputs,&#32;applies&#32;type&#32;conversion,&#32;and&#32;ensures&#32;that&#32;non-finite&#32;results&#32;are</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00649"/>00649 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;replaced&#32;with&#32;a&#32;fallback&#32;maximum&#32;float&#32;value.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00650"/>00650 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00651"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1a9976a23db518884ec306a66c40c241a4">00651</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00652"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1ae6b28a6671fa2734ab1b48e7b6b20b8b">00652</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;function&#32;to&#32;be&#32;evaluated,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00653"/>00653 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;which&#32;takes&#32;an&#32;ArrayLike&#32;input&#32;and&#32;returns&#32;a&#32;float.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00654"/>00654 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00655"/>00655 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1a30a69e897a8f91003afd40baa508d7fe">__init__</link>(self,&#32;fun:&#32;Callable[[ArrayLike],&#32;float]):
<anchor xml:id="_evaluator_8py_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00657"/>00657 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;a&#32;callable&#32;function&#32;to&#32;be&#32;used.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00658"/>00658 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00659"/>00659 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00660"/>00660 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;A&#32;function&#32;that&#32;operates&#32;on&#32;an&#32;ArrayLike</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00661"/>00661 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;object&#32;and&#32;returns&#32;a&#32;float.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00662"/>00662 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.fun&#32;=&#32;fun
<anchor xml:id="_evaluator_8py_source_1l00664"/>00664 &#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00665"/>00665 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1a2e2dfb664e0d8c322934abcba87e59a4">__call__</link>(self,&#32;n:&#32;int,&#32;x:&#32;ArrayLike)&#32;-&gt;&#32;float:
<anchor xml:id="_evaluator_8py_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00667"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1a2e2dfb664e0d8c322934abcba87e59a4">00667</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Evaluates&#32;a&#32;function&#32;with&#32;input&#32;values&#32;derived&#32;from&#32;an&#32;array&#32;slice,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00668"/>00668 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returning&#32;a&#32;numerical&#32;result.&#32;If&#32;the&#32;result&#32;is&#32;not&#32;finite&#32;or&#32;an</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00669"/>00669 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error&#32;occurs&#32;during&#32;computation,&#32;it&#32;returns&#32;the&#32;maximum&#32;finite</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00670"/>00670 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float&#32;value.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00671"/>00671 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00672"/>00672 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00673"/>00673 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;(int):&#32;The&#32;number&#32;of&#32;elements&#32;to&#32;consider&#32;from&#32;the&#32;array&#32;`x`.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00674"/>00674 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;(ArrayLike):&#32;An&#32;array-like&#32;object&#32;containing&#32;input&#32;values.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00675"/>00675 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00676"/>00676 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00677"/>00677 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;computed&#32;result&#32;of&#32;the&#32;function&#32;or&#32;the&#32;maximum&#32;finite</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00678"/>00678 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float&#32;value&#32;in&#32;case&#32;of&#32;an&#32;error&#32;or&#32;non-finite&#32;result.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00679"/><link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo_1ab85eef7c755dcc597fe05ff726ab848e">00679</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00680"/>00680 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00681"/>00681 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Exception:&#32;Any&#32;exception&#32;encountered&#32;during&#32;the&#32;computation&#32;of&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00682"/>00682 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;will&#32;be&#32;caught,&#32;and&#32;the&#32;maximum&#32;float&#32;value&#32;will&#32;be&#32;returned</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00683"/>00683 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;instead.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00684"/>00684 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fit&#32;=&#32;self.fun(np.fromiter((x[i]&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n)),&#32;dtype=float))
<anchor xml:id="_evaluator_8py_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fit&#32;<emphasis role="keywordflow">if</emphasis>&#32;math.isfinite(fit)&#32;<emphasis role="keywordflow">else</emphasis>&#32;sys.float_info.max
<anchor xml:id="_evaluator_8py_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_evaluator_8py_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sys.float_info.max
<anchor xml:id="_evaluator_8py_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00691"/>00691 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1callback__so">callback_so</link>(object):
<anchor xml:id="_evaluator_8py_source_1l00692"/>00692 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00693"/><link linkend="_classfcmaes_1_1evaluator_1_1callback">00693</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Handles&#32;callback&#32;functionality&#32;for&#32;single-objective&#32;optimization&#32;purposes.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00694"/>00694 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00695"/>00695 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;facilitates&#32;communication&#32;between&#32;external&#32;and&#32;Python-based</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00696"/>00696 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;routines.&#32;It&#32;processes&#32;input&#32;vectors,&#32;evaluates&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00697"/>00697 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;objective&#32;function,&#32;handles&#32;memory&#32;using&#32;ctypes,&#32;and&#32;determines&#32;if&#32;a</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00698"/>00698 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;termination&#32;condition&#32;has&#32;been&#32;met.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00699"/>00699 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00700"/>00700 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00701"/><link linkend="_classfcmaes_1_1evaluator_1_1callback_1aef60897b34bf16817406ca5d76f96acd">00701</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;Objective&#32;function&#32;that&#32;takes&#32;an</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00702"/><link linkend="_classfcmaes_1_1evaluator_1_1callback_1af1faa34e6c01adde25dc4c8daadf66a9">00702</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input&#32;array&#32;and&#32;returns&#32;a&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00703"/>00703 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;Dimensionality&#32;of&#32;the&#32;input&#32;array&#32;passed&#32;to&#32;the&#32;objective</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00704"/>00704 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00705"/>00705 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;Number&#32;of&#32;objectives&#32;handled&#32;by&#32;the&#32;callback.&#32;Set&#32;to&#32;1&#32;for</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00706"/>00706 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;single-objective&#32;optimization.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00707"/>00707 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate&#32;(Optional[Callable[[ArrayLike,&#32;float],&#32;bool]]):&#32;Optional</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00708"/>00708 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;termination&#32;callback&#32;function.&#32;It&#32;evaluates&#32;the&#32;termination</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00709"/>00709 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;condition&#32;given&#32;the&#32;input&#32;array&#32;and&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00710"/>00710 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00711"/>00711 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1callback_1aef60897b34bf16817406ca5d76f96acd">__init__</link>(self,&#32;
<anchor xml:id="_evaluator_8py_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_evaluator_8py_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim:&#32;int,&#32;
<anchor xml:id="_evaluator_8py_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate:&#32;Optional[Callable[[ArrayLike,&#32;float],&#32;bool]]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_evaluator_8py_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00716"/>00716 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;instance&#32;with&#32;the&#32;provided&#32;objective&#32;function,&#32;dimensionality,&#32;and&#32;optional</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00717"/>00717 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;termination&#32;condition.&#32;The&#32;`fun`&#32;parameter&#32;defines&#32;the&#32;objective&#32;function&#32;to&#32;optimize,&#32;`dim`</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00718"/>00718 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specifies&#32;the&#32;number&#32;of&#32;dimensions&#32;for&#32;the&#32;optimization,&#32;and&#32;`is_terminate`&#32;is&#32;an&#32;optional</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00719"/>00719 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;callback&#32;to&#32;evaluate&#32;termination&#32;criteria.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00720"/>00720 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00721"/>00721 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00722"/>00722 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;optimize.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00723"/><link linkend="_classfcmaes_1_1evaluator_1_1callback_1a2725c10a3383f79e36a236de01c56c53">00723</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;The&#32;number&#32;of&#32;dimensions&#32;for&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00724"/>00724 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate&#32;(Optional[Callable[[ArrayLike,&#32;float],&#32;bool]]):&#32;Optional&#32;callback&#32;that</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00725"/>00725 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;determines&#32;if&#32;optimization&#32;should&#32;terminate&#32;based&#32;on&#32;the&#32;solution&#32;and&#32;its&#32;evaluation.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00726"/>00726 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback_1af1faa34e6c01adde25dc4c8daadf66a9">fun</link>&#32;=&#32;fun
<anchor xml:id="_evaluator_8py_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.dim&#32;=&#32;dim
<anchor xml:id="_evaluator_8py_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.nobj&#32;=&#32;1
<anchor xml:id="_evaluator_8py_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.is_terminate&#32;=&#32;is_terminate
<anchor xml:id="_evaluator_8py_source_1l00731"/>00731 &#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00732"/>00732 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1callback_1a2725c10a3383f79e36a236de01c56c53">__call__</link>(self,&#32;dim,&#32;x,&#32;y):
<anchor xml:id="_evaluator_8py_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00734"/>00734 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Invokes&#32;the&#32;callable&#32;object&#32;with&#32;given&#32;dimensions&#32;and&#32;inputs,&#32;processes&#32;the&#32;input</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00735"/>00735 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffers,&#32;computes&#32;the&#32;function&#32;output,&#32;and&#32;updates&#32;the&#32;output&#32;buffer.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00736"/>00736 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00737"/>00737 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;handles&#32;finite&#32;computations,&#32;manages&#32;buffer&#32;conversions,&#32;and&#32;determines</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00738"/>00738 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;whether&#32;a&#32;termination&#32;condition&#32;is&#32;met.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00739"/>00739 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00740"/>00740 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00741"/>00741 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim:&#32;The&#32;dimensional&#32;size&#32;of&#32;the&#32;input&#32;array.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00742"/>00742 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;A&#32;ctypes&#32;object&#32;representing&#32;the&#32;input&#32;buffer.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00743"/>00743 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y:&#32;A&#32;ctypes&#32;object&#32;representing&#32;the&#32;output&#32;buffer.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00744"/>00744 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00745"/>00745 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00746"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__so">00746</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;False&#32;if&#32;there&#32;is&#32;no&#32;termination&#32;condition,&#32;or&#32;the&#32;result&#32;of&#32;the&#32;termination</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00747"/>00747 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;condition&#32;check&#32;if&#32;it&#32;exists.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00748"/>00748 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00749"/>00749 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00750"/>00750 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Exception:&#32;Generic&#32;exception&#32;raised&#32;for&#32;any&#32;unexpected&#32;issues&#32;during&#32;execution.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00751"/>00751 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrTypeX&#32;=&#32;ct.c_double*(self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a556242f6333ce0f2316798f6171a061c">dim</link>)
<anchor xml:id="_evaluator_8py_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xaddr&#32;=&#32;ct.addressof(x.contents)
<anchor xml:id="_evaluator_8py_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xbuf&#32;=&#32;np.frombuffer(arrTypeX.from_address(xaddr))
<anchor xml:id="_evaluator_8py_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrTypeY&#32;=&#32;ct.c_double*(self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a527ef30b5556fea42a808c27c9ea22f6">nobj</link>)
<anchor xml:id="_evaluator_8py_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yaddr&#32;=&#32;ct.addressof(y.contents)&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ybuf&#32;=&#32;np.frombuffer(arrTypeY.from_address(yaddr))&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fit&#32;=&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a1df2acbb4dae1a64687b5b231a2d169a">fun</link>(xbuf)
<anchor xml:id="_evaluator_8py_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ybuf[0]&#32;=&#32;fit&#32;<emphasis role="keywordflow">if</emphasis>&#32;math.isfinite(fit)&#32;<emphasis role="keywordflow">else</emphasis>&#32;sys.float_info.max
<anchor xml:id="_evaluator_8py_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a9a0ab5f62f58416bd1a061cb7c4d9fbf">is_terminate</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a9a0ab5f62f58416bd1a061cb7c4d9fbf">is_terminate</link>(xbuf,&#32;ybuf)&#32;
<anchor xml:id="_evaluator_8py_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_evaluator_8py_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">print</emphasis>&#32;(ex)
<anchor xml:id="_evaluator_8py_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00765"/>00765 
<anchor xml:id="_evaluator_8py_source_1l00766"/>00766 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1callback__mo">callback_mo</link>(object):
<anchor xml:id="_evaluator_8py_source_1l00767"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a413b8a2e726f488f4c2f1f79fa523bb5">00767</link> &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00768"/>00768 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Callable&#32;object&#32;for&#32;multi-objective&#32;optimization.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00769"/>00769 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00770"/>00770 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;is&#32;designed&#32;to&#32;act&#32;as&#32;a&#32;callable&#32;callback&#32;for&#32;multi-objective</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00771"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a1df2acbb4dae1a64687b5b231a2d169a">00771</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;problems,&#32;allowing&#32;the&#32;evaluation&#32;of&#32;objective&#32;functions&#32;at</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00772"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a556242f6333ce0f2316798f6171a061c">00772</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;given&#32;points&#32;and&#32;the&#32;computation&#32;of&#32;related&#32;output&#32;values.&#32;It&#32;also&#32;supports</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00773"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a527ef30b5556fea42a808c27c9ea22f6">00773</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;an&#32;optional&#32;termination&#32;condition.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00774"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a9a0ab5f62f58416bd1a061cb7c4d9fbf">00774</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00775"/>00775 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00776"/>00776 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;ArrayLike]):&#32;The&#32;objective&#32;function&#32;to&#32;be&#32;called.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00777"/>00777 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;takes&#32;an&#32;input&#32;array-like&#32;structure&#32;and&#32;returns&#32;an&#32;array-like</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00778"/>00778 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;structure.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00779"/>00779 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;The&#32;dimensionality&#32;of&#32;the&#32;input&#32;space.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00780"/>00780 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;The&#32;number&#32;of&#32;objectives&#32;in&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00781"/>00781 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate&#32;(Optional[bool]):&#32;A&#32;callable&#32;to&#32;determine&#32;termination&#32;conditions.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00782"/>00782 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;provided,&#32;it&#32;should&#32;take&#32;two&#32;array-like&#32;arguments&#32;(inputs&#32;and&#32;outputs)</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00783"/>00783 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;return&#32;a&#32;boolean&#32;indicating&#32;whether&#32;the&#32;optimization&#32;should&#32;be</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00784"/>00784 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;terminated.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00785"/>00785 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00786"/>00786 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a413b8a2e726f488f4c2f1f79fa523bb5">__init__</link>(self,&#32;
<anchor xml:id="_evaluator_8py_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;ArrayLike],&#32;
<anchor xml:id="_evaluator_8py_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim:&#32;int,&#32;
<anchor xml:id="_evaluator_8py_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;int,&#32;
<anchor xml:id="_evaluator_8py_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate:&#32;Optional[bool]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_evaluator_8py_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00792"/>00792 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;class&#32;with&#32;the&#32;given&#32;function,&#32;dimension,&#32;number&#32;of&#32;objectives,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00793"/>00793 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;optional&#32;termination&#32;indicator.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00794"/>00794 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00795"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a91b3f73bc6c6999748aaf8bfb94cdd39">00795</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00796"/>00796 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;ArrayLike].&#32;A&#32;function&#32;that&#32;takes&#32;an</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00797"/>00797 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array-like&#32;input&#32;and&#32;returns&#32;an&#32;array-like&#32;output.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00798"/>00798 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim:&#32;int.&#32;The&#32;dimension&#32;of&#32;the&#32;input&#32;space.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00799"/>00799 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;int.&#32;The&#32;number&#32;of&#32;objectives.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00800"/>00800 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate:&#32;Optional[bool].&#32;A&#32;flag&#32;indicating&#32;whether&#32;termination</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00801"/>00801 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;should&#32;be&#32;enabled&#32;or&#32;not.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00802"/>00802 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a1df2acbb4dae1a64687b5b231a2d169a">fun</link>&#32;=&#32;fun
<anchor xml:id="_evaluator_8py_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a556242f6333ce0f2316798f6171a061c">dim</link>&#32;=&#32;dim
<anchor xml:id="_evaluator_8py_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a527ef30b5556fea42a808c27c9ea22f6">nobj</link>&#32;=&#32;nobj
<anchor xml:id="_evaluator_8py_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a9a0ab5f62f58416bd1a061cb7c4d9fbf">is_terminate</link>&#32;=&#32;is_terminate
<anchor xml:id="_evaluator_8py_source_1l00807"/>00807 &#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00808"/>00808 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1callback__so_1a91b3f73bc6c6999748aaf8bfb94cdd39">__call__</link>(self,&#32;dim:&#32;int,&#32;x,&#32;y):
<anchor xml:id="_evaluator_8py_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00810"/>00810 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Executes&#32;a&#32;callable&#32;object&#32;that&#32;processes&#32;given&#32;input,&#32;evaluates&#32;a&#32;function,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00811"/>00811 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;optionally&#32;checks&#32;a&#32;termination&#32;condition.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00812"/>00812 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00813"/>00813 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00814"/>00814 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;The&#32;dimensionality&#32;of&#32;the&#32;input&#32;data.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00815"/>00815 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;A&#32;ctypes&#32;pointer&#32;to&#32;a&#32;buffer&#32;containing&#32;input&#32;data.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00816"/>00816 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y:&#32;A&#32;ctypes&#32;pointer&#32;to&#32;a&#32;buffer&#32;where&#32;the&#32;output&#32;data&#32;will&#32;be&#32;stored.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00817"/>00817 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00818"/>00818 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00819"/>00819 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;False&#32;if&#32;the&#32;processing&#32;completes&#32;successfully&#32;without&#32;termination&#32;or</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00820"/>00820 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;the&#32;termination&#32;condition&#32;is&#32;not&#32;met.&#32;True&#32;if&#32;the&#32;termination</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00821"/>00821 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;condition&#32;is&#32;met.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00822"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__mo">00822</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00823"/>00823 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00824"/>00824 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Exception:&#32;If&#32;an&#32;error&#32;occurs&#32;during&#32;the&#32;execution&#32;process,&#32;details&#32;will</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00825"/>00825 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;printed,&#32;and&#32;False&#32;will&#32;be&#32;returned.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00826"/>00826 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrTypeX&#32;=&#32;ct.c_double*(dim)
<anchor xml:id="_evaluator_8py_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xaddr&#32;=&#32;ct.addressof(x.contents)
<anchor xml:id="_evaluator_8py_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xbuf&#32;=&#32;np.frombuffer(arrTypeX.from_address(xaddr))
<anchor xml:id="_evaluator_8py_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrTypeY&#32;=&#32;ct.c_double*(self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1a5b7f16a346ee7d2157d76a674ffeed46">nobj</link>)
<anchor xml:id="_evaluator_8py_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yaddr&#32;=&#32;ct.addressof(y.contents)&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ybuf&#32;=&#32;np.frombuffer(arrTypeY.from_address(yaddr))&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ybuf[:]&#32;=&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1a01e0e70f0c77c72a78f24eec3f26e97d">fun</link>(xbuf)[:]
<anchor xml:id="_evaluator_8py_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1ad53c6c57ed94dec476709e009b8b5c2d">is_terminate</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1ad53c6c57ed94dec476709e009b8b5c2d">is_terminate</link>(xbuf,&#32;ybuf)&#32;
<anchor xml:id="_evaluator_8py_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_evaluator_8py_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">print</emphasis>&#32;(ex)
<anchor xml:id="_evaluator_8py_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00839"/>00839 
<anchor xml:id="_evaluator_8py_source_1l00840"/>00840 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1callback__par">callback_par</link>(object):
<anchor xml:id="_evaluator_8py_source_1l00841"/>00841 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Wrapper&#32;class&#32;for&#32;callable&#32;objects&#32;with&#32;functionality&#32;to&#32;process</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00842"/>00842 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;populations&#32;of&#32;data&#32;using&#32;provided&#32;functions.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00843"/>00843 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00844"/>00844 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;provides&#32;a&#32;mechanism&#32;to&#32;evaluate&#32;a&#32;function&#32;or&#32;a&#32;parallelized</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00845"/>00845 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;function&#32;(`fun`&#32;or&#32;`parfun`)&#32;on&#32;a&#32;specified&#32;population&apos;s&#32;data.&#32;It</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00846"/>00846 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;accommodates&#32;use&#32;cases&#32;where&#32;either&#32;single&#32;or&#32;parallelized&#32;computation&#32;is</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00847"/>00847 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;required.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00848"/>00848 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00849"/>00849 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00850"/>00850 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;A&#32;function&#32;that&#32;processes&#32;a</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00851"/>00851 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;single&#32;element&#32;of&#32;a&#32;population&#32;and&#32;returns&#32;a&#32;float&#32;result.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00852"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1a6f9b17b3c9b0c0a187c27ff220d40dab">00852</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parfun&#32;(Callable[[ArrayLike],&#32;ArrayLike]):&#32;A&#32;parallelizable&#32;function</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00853"/>00853 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;processes&#32;multiple&#32;elements&#32;of&#32;a&#32;population&#32;and&#32;returns</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00854"/>00854 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;array&#32;of&#32;results.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00855"/>00855 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00856"/>00856 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1a6f9b17b3c9b0c0a187c27ff220d40dab">__init__</link>(self,&#32;
<anchor xml:id="_evaluator_8py_source_1l00857"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1a01e0e70f0c77c72a78f24eec3f26e97d">00857</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_evaluator_8py_source_1l00858"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1aabaf4b9748dafd3dc1baf4421036190e">00858</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parfun:&#32;Callable[[ArrayLike],&#32;ArrayLike]):
<anchor xml:id="_evaluator_8py_source_1l00859"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1a5b7f16a346ee7d2157d76a674ffeed46">00859</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00860"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1ad53c6c57ed94dec476709e009b8b5c2d">00860</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;object&#32;with&#32;the&#32;provided&#32;function&#32;and&#32;parameter&#32;function.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00861"/>00861 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00862"/>00862 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00863"/>00863 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;A&#32;callable&#32;function&#32;that&#32;takes&#32;an</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00864"/>00864 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ArrayLike&#32;input&#32;and&#32;returns&#32;a&#32;float.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00865"/>00865 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parfun&#32;(Callable[[ArrayLike],&#32;ArrayLike]):&#32;A&#32;callable&#32;parameter&#32;function</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00866"/>00866 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;takes&#32;an&#32;ArrayLike&#32;input&#32;and&#32;returns&#32;an&#32;ArrayLike&#32;output.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00867"/>00867 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1a01e0e70f0c77c72a78f24eec3f26e97d">fun</link>&#32;=&#32;fun
<anchor xml:id="_evaluator_8py_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.parfun&#32;=&#32;parfun
<anchor xml:id="_evaluator_8py_source_1l00870"/>00870 &#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00871"/>00871 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1a99eab2bafd1186fff0be59544a596443">__call__</link>(self,&#32;popsize,&#32;n,&#32;xs_,&#32;ys_):
<anchor xml:id="_evaluator_8py_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00873"/>00873 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calls&#32;the&#32;function&#32;or&#32;parallel&#32;function&#32;to&#32;evaluate&#32;the&#32;array&#32;of&#32;input&#32;values</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00874"/>00874 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;store&#32;the&#32;results.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00875"/>00875 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00876"/>00876 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;operates&#32;on&#32;the&#32;input&#32;arrays&#32;provided&#32;and&#32;evaluates&#32;them&#32;using&#32;the</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00877"/>00877 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;given&#32;function&#32;(`fun`)&#32;or&#32;a&#32;parallel&#32;function&#32;(`parfun`)&#32;if&#32;available.&#32;The</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00878"/>00878 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;results&#32;are&#32;then&#32;stored&#32;in&#32;the&#32;output&#32;array.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00879"/>00879 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00880"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1a99eab2bafd1186fff0be59544a596443">00880</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00881"/>00881 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;int</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00882"/>00882 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;population&#32;size;&#32;determines&#32;how&#32;many&#32;sets&#32;of&#32;inputs&#32;are&#32;processed.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00883"/>00883 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n:&#32;int</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00884"/>00884 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;length&#32;of&#32;each&#32;input&#32;array&#32;segment.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00885"/>00885 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs_:&#32;ctypes.POINTER(ctypes.c_double)</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00886"/>00886 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;pointer&#32;to&#32;the&#32;shared&#32;memory&#32;that&#32;contains&#32;the&#32;input&#32;numeric&#32;data.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00887"/>00887 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;points&#32;to&#32;an&#32;array&#32;of&#32;double-precision&#32;floating-point&#32;numbers.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00888"/>00888 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys_:&#32;ctypes.POINTER(ctypes.c_double)</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00889"/>00889 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;pointer&#32;to&#32;the&#32;shared&#32;memory&#32;where&#32;the&#32;evaluated&#32;results&#32;will</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00890"/>00890 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;stored.&#32;It&#32;points&#32;to&#32;an&#32;array&#32;of&#32;double-precision&#32;floating-point</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00891"/>00891 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numbers.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00892"/>00892 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_evaluator_8py_source_1l00893"/>00893 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00894"/>00894 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Exception:&#32;If&#32;the&#32;evaluation&#32;process&#32;of&#32;the&#32;inputs&#32;fails&#32;for&#32;any&#32;reason,</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00895"/>00895 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;will&#32;print&#32;the&#32;exception&#32;message&#32;to&#32;the&#32;standard&#32;output.</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00896"/>00896 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrType&#32;=&#32;ct.c_double*(popsize*n)
<anchor xml:id="_evaluator_8py_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addr&#32;=&#32;ct.addressof(xs_.contents)
<anchor xml:id="_evaluator_8py_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xall&#32;=&#32;np.frombuffer(arrType.from_address(addr))
<anchor xml:id="_evaluator_8py_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.parfun&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(popsize):
<anchor xml:id="_evaluator_8py_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys_[p]&#32;=&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__mo_1a01e0e70f0c77c72a78f24eec3f26e97d">fun</link>(xall[p*n&#32;:&#32;(p+1)*n])
<anchor xml:id="_evaluator_8py_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:&#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;[]
<anchor xml:id="_evaluator_8py_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(popsize):
<anchor xml:id="_evaluator_8py_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;xall[p*n&#32;:&#32;(p+1)*n]
<anchor xml:id="_evaluator_8py_source_1l00909"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__par">00909</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs.append(x)
<anchor xml:id="_evaluator_8py_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;self.<link linkend="_classfcmaes_1_1evaluator_1_1callback__par_1a92cf3387fbaf4bb63152a328f64cd748">parfun</link>(xs)
<anchor xml:id="_evaluator_8py_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(popsize):
<anchor xml:id="_evaluator_8py_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys_[p]&#32;=&#32;ys[p]
<anchor xml:id="_evaluator_8py_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_evaluator_8py_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">print</emphasis>&#32;(ex)
<anchor xml:id="_evaluator_8py_source_1l00915"/>00915 
<anchor xml:id="_evaluator_8py_source_1l00916"/>00916 basepath&#32;=&#32;os.path.dirname(os.path.abspath(__file__))
<anchor xml:id="_evaluator_8py_source_1l00917"/>00917 
<anchor xml:id="_evaluator_8py_source_1l00918"/>00918 <emphasis role="keywordflow">try</emphasis>:&#32;
<anchor xml:id="_evaluator_8py_source_1l00919"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__par_1a4fae3ecaebad817707bbdd38d1592aa4">00919</link> &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;sys.platform.startswith(<emphasis role="stringliteral">&apos;linux&apos;</emphasis>):
<anchor xml:id="_evaluator_8py_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;libcmalib&#32;=&#32;ct.cdll.LoadLibrary(basepath&#32;+&#32;<emphasis role="stringliteral">&apos;/lib/libacmalib.so&apos;</emphasis>)&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00921"/>00921 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;<emphasis role="stringliteral">&apos;mac&apos;</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;sys.platform&#32;<emphasis role="keywordflow">or</emphasis>&#32;<emphasis role="stringliteral">&apos;darwin&apos;</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;sys.platform:
<anchor xml:id="_evaluator_8py_source_1l00922"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__par_1ab00135869a09e7af34a5a3f27c639d25">00922</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;libcmalib&#32;=&#32;ct.cdll.LoadLibrary(basepath&#32;+&#32;<emphasis role="stringliteral">&apos;/lib/libacmalib.dylib&apos;</emphasis>)&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00923"/><link linkend="_classfcmaes_1_1evaluator_1_1callback__par_1a92cf3387fbaf4bb63152a328f64cd748">00923</link> &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_evaluator_8py_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.environ[<emphasis role="stringliteral">&apos;PATH&apos;</emphasis>]&#32;=&#32;(basepath&#32;+&#32;<emphasis role="stringliteral">&apos;/lib&apos;</emphasis>)&#32;+&#32;os.pathsep&#32;+&#32;os.environ[<emphasis role="stringliteral">&apos;PATH&apos;</emphasis>]
<anchor xml:id="_evaluator_8py_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;libcmalib&#32;=&#32;ct.cdll.LoadLibrary(basepath&#32;+&#32;<emphasis role="stringliteral">&apos;/lib/libacmalib.dll&apos;</emphasis>)
<anchor xml:id="_evaluator_8py_source_1l00926"/>00926 <emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_evaluator_8py_source_1l00927"/>00927 &#32;&#32;&#32;&#32;libcmalib&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_evaluator_8py_source_1l00928"/>00928 &#32;&#32;&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00929"/>00929 mo_call_back_type&#32;=&#32;ct.CFUNCTYPE(ct.c_bool,&#32;ct.c_int,&#32;ct.POINTER(ct.c_double),&#32;ct.POINTER(ct.c_double))
<anchor xml:id="_evaluator_8py_source_1l00930"/>00930 &#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00931"/>00931 call_back_type&#32;=&#32;ct.CFUNCTYPE(ct.c_double,&#32;ct.c_int,&#32;ct.POINTER(ct.c_double))&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00932"/>00932 
<anchor xml:id="_evaluator_8py_source_1l00933"/>00933 call_back_par&#32;=&#32;ct.CFUNCTYPE(<emphasis role="keywordtype">None</emphasis>,&#32;ct.c_int,&#32;ct.c_int,&#32;\
<anchor xml:id="_evaluator_8py_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ct.POINTER(ct.c_double),&#32;ct.POINTER(ct.c_double))&#32;&#32;
<anchor xml:id="_evaluator_8py_source_1l00935"/>00935 
</programlisting></section>

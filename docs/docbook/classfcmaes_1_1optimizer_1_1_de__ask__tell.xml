<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classfcmaes_1_1optimizer_1_1_de__ask__tell" xml:lang="en-US">
<title>fcmaes.optimizer.De_ask_tell Class Reference</title>
<indexterm><primary>fcmaes.optimizer.De_ask_tell</primary></indexterm>
<para>

<para>Differential Evolution optimizer for numerical optimization tasks. </para>
 
</para>
Inheritance diagram for fcmaes.optimizer.De_ask_tell:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_de__ask__tell__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for fcmaes.optimizer.De_ask_tell:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_de__ask__tell__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a438d0e4e3eb02efc66eb6a0e7d2728e1">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1ad7be76f5ffe7fc538f9d630e8ebf4137">popsize</link>=None, Optional[float] <link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1aa94dd4195cc987dcedf14f4c483c1b51">stop_fitness</link>=-np.inf, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1aaa99670844fc1389c8c2149247cdff1d">keep</link>=200, Optional[float] <link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a059ad704d037181b31185585a82c9941">f</link>=0.5, Optional[float] <link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a38c525587b6c8ee2d3776273ac3846ac">cr</link>=0.9)</para>

<para>Initializes the Differential Evolution (DE) optimizer with specified configuration options. </para>
</listitem>
            <listitem><para>Tuple[np.ndarray, float, int] <link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388">minimize</link> (self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</para>

<para>Minimizes a given objective function using a Differential Evolution (DE) algorithm. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[str] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>=&apos;&apos;)</para>

<para>Initializes the class with specific parameters including the maximum number of evaluations and the name. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link> (self, store=None)</para>

<para>Evaluates and returns the maximum number of evaluations based on the provided store or the object&apos;s default value. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link> (self, store=None)</para>

<para>Gets the count of runs from the provided store. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1ad7be76f5ffe7fc538f9d630e8ebf4137">popsize</link> = popsize</para>

<para>Number of individuals in the population, which. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1aa94dd4195cc987dcedf14f4c483c1b51">stop_fitness</link> = stop_fitness</para>

<para><link linkend="_class_fitness">Fitness</link> threshold for early stopping. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1aaa99670844fc1389c8c2149247cdff1d">keep</link> = keep</para>

<para>Number of top-performing individuals retained for. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a059ad704d037181b31185585a82c9941">f</link> = f</para>

<para>Differential weighting factor for mutation, controlling. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a38c525587b6c8ee2d3776273ac3846ac">cr</link> = cr</para>

<para>Crossover probability that determines the rate at which. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Attributes inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link> = max_evaluations</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link> = name</para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>

<para>Differential Evolution optimizer for numerical optimization tasks. </para>



<para>This class implements the Differential Evolution (DE) optimizer, which is a population-based, stochastic optimization technique suitable for solving complex continuous optimization problems. The optimizer uses operations like mutation, crossover, and selection to evolve a population of candidate solutions towards an optimal solution over a number of iterations.</para>

<para><literallayout><computeroutput>       components are exchanged between solutions.
</computeroutput></literallayout> </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02319">2319</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a438d0e4e3eb02efc66eb6a0e7d2728e1"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>fcmaes.optimizer.De_ask_tell</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.De_ask_tell</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.De_ask_tell.__init__ ( self, Optional[int]  max_evaluations = <computeroutput>50000</computeroutput>
, Optional[int]  popsize = <computeroutput>None</computeroutput>
, Optional[float]  stop_fitness = <computeroutput>-np.inf</computeroutput>
, Optional[int]  keep = <computeroutput>200</computeroutput>
, Optional[float]  f = <computeroutput>0.5</computeroutput>
, Optional[float]  cr = <computeroutput>0.9</computeroutput>
)</computeroutput></para><para>

<para>Initializes the Differential Evolution (DE) optimizer with specified configuration options. </para>
</para>

<para>The DE optimizer is part of evolutionary algorithms and works by iteratively improving a candidate solution with regard to a measure of quality (fitness). This initialization method allows setting the core parameters of the DE optimizer.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>max_evaluations</entry><entry>
<para>Maximum number of evaluations that the optimizer can perform before stopping. Default is 50000. </para>
</entry>
                            </row>
                            <row>
<entry>popsize</entry><entry>
<para>Number of individuals in the population. Determines the population size for optimization. Default is None (uses a default or dynamically calculated value). </para>
</entry>
                            </row>
                            <row>
<entry>stop_fitness</entry><entry>
<para><link linkend="_class_fitness">Fitness</link> value at which the optimizer will stop early if reached. Default is -np.inf (no early stopping based on fitness). </para>
</entry>
                            </row>
                            <row>
<entry>keep</entry><entry>
<para>Number of individuals or solutions to keep from one generation to the next within the optimization process. Default is 200. </para>
</entry>
                            </row>
                            <row>
<entry>f</entry><entry>
<para>Differential weighting factor, a scaling constant used to scale the difference between two individuals in the population. Default is 0.5. </para>
</entry>
                            </row>
                            <row>
<entry>cr</entry><entry>
<para>Crossover probability, the rate at which components are swapped between solutions during the recombination process. Default is 0.9. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02365">2365</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388"/><section>
    <title>minimize()</title>
<indexterm><primary>minimize</primary><secondary>fcmaes.optimizer.De_ask_tell</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.De_ask_tell</primary><secondary>minimize</secondary></indexterm>
<para><computeroutput> Tuple[np.ndarray, float, int] fcmaes.optimizer.De_ask_tell.minimize ( self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[float]  sdevs = <computeroutput>None</computeroutput>
, Optional[Generator]  rg = <computeroutput>Generator(PCG64DXSM())</computeroutput>
,  store = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Minimizes a given objective function using a Differential Evolution (DE) algorithm. </para>
</para>

<para><literallayout><computeroutput>   The algorithm works by iteratively evolving a population of potential solutions to
   optimize the given objective function within specified bounds. It supports features
   like random seeds, population size customization, and optional constraint handling.
   The `minimize` method evaluates the convergence of the algorithm based on specified
   maximum evaluations, and returns the best solution, its value, and the number of
   evaluations conducted.


       fun (Callable[[ArrayLike], float]): Objective function to minimize. This is a callable
           that takes an array-like input and returns a scalar output representing the
           function value.
</computeroutput></literallayout> 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>bounds</entry><entry>
<para>Boundary constraints for the search space. Specifies the lower and upper bounds for each dimension of the input array. </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>Initial guess for the solution. Optional and can be left as None, in which case the default initialization strategy is used. </para>
</entry>
                            </row>
                            <row>
<entry>sdevs</entry><entry>
<para>Placeholder parameter. This argument is ignored in the optimization </para>
</entry>
                            </row>
                            <row>
<entry>process.</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>rg</entry><entry>
<para>Random generator for stochastic operations. By default, it uses a PCG64DXSM generator instance. </para>
</entry>
                            </row>
                            <row>
<entry>store</entry><entry>
<para>Optional storage handler for tracking or persisting evaluation metrics during the optimization process. This parameter is passed to internal utility methods for handling storage requirements.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Tuple[np.ndarray, float, int]: A tuple containing three elements:<itemizedlist>
<listitem>
<para>np.ndarray: The best solution found by the optimizer (array with dimensions defined by the bounds).</para>
</listitem><listitem>
<para>float: The value of the objective function at the best solution.</para>
</listitem><listitem>
<para>int: The total number of function evaluations performed. </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02412">2412</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_de__ask__tell_add27360c14d87672fd1c81a406d8b388_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a38c525587b6c8ee2d3776273ac3846ac"/><section>
    <title>cr</title>
<indexterm><primary>cr</primary><secondary>fcmaes.optimizer.De_ask_tell</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.De_ask_tell</primary><secondary>cr</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.De_ask_tell.cr = cr</computeroutput></para><para>

<para>Crossover probability that determines the rate at which. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02377">2377</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1a059ad704d037181b31185585a82c9941"/><section>
    <title>f</title>
<indexterm><primary>f</primary><secondary>fcmaes.optimizer.De_ask_tell</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.De_ask_tell</primary><secondary>f</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.De_ask_tell.f = f</computeroutput></para><para>

<para>Differential weighting factor for mutation, controlling. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02376">2376</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1aaa99670844fc1389c8c2149247cdff1d"/><section>
    <title>keep</title>
<indexterm><primary>keep</primary><secondary>fcmaes.optimizer.De_ask_tell</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.De_ask_tell</primary><secondary>keep</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.De_ask_tell.keep = keep</computeroutput></para><para>

<para>Number of top-performing individuals retained for. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02375">2375</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1ad7be76f5ffe7fc538f9d630e8ebf4137"/><section>
    <title>popsize</title>
<indexterm><primary>popsize</primary><secondary>fcmaes.optimizer.De_ask_tell</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.De_ask_tell</primary><secondary>popsize</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.De_ask_tell.popsize = popsize</computeroutput></para><para>

<para>Number of individuals in the population, which. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02373">2373</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_de__ask__tell_1aa94dd4195cc987dcedf14f4c483c1b51"/><section>
    <title>stop_fitness</title>
<indexterm><primary>stop_fitness</primary><secondary>fcmaes.optimizer.De_ask_tell</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.De_ask_tell</primary><secondary>stop_fitness</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.De_ask_tell.stop_fitness = stop_fitness</computeroutput></para><para>

<para><link linkend="_class_fitness">Fitness</link> threshold for early stopping. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02374">2374</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
fcmaes/<link linkend="_optimizer_8py">optimizer.py</link></section>
</section>

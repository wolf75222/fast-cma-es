<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_vessel_8py_source" xml:lang="en-US">
<title>vessel.py</title>
<indexterm><primary>examples/vessel.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_vessel_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1vessel">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_vessel_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_vessel_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_vessel_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_vessel_8py_source_1l00005"/>00005 
<anchor xml:id="_vessel_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;A&#32;cylindrical&#32;vessel&#32;is&#32;capped&#32;at&#32;both&#32;ends&#32;by&#32;hemispherical&#32;heads.&#32;The&#32;objective&#32;is&#32;to</emphasis>
<anchor xml:id="_vessel_8py_source_1l00007"/>00007 <emphasis role="comment">#&#32;minimize&#32;the&#32;total&#32;weight,&#32;including&#32;the&#32;weight&#32;of&#32;material,&#32;forming&#32;and&#32;welding.&#32;There&#32;are&#32;four&#32;design&#32;variables:</emphasis>
<anchor xml:id="_vessel_8py_source_1l00008"/>00008 
<anchor xml:id="_vessel_8py_source_1l00009"/>00009 <emphasis role="comment">#&#32;-&#32;x1:&#32;thickness&#32;of&#32;the&#32;shell</emphasis>
<anchor xml:id="_vessel_8py_source_1l00010"/>00010 <emphasis role="comment">#&#32;-&#32;x2:&#32;thickness&#32;of&#32;the&#32;head</emphasis>
<anchor xml:id="_vessel_8py_source_1l00011"/>00011 <emphasis role="comment">#&#32;-&#32;x3:&#32;inner&#32;radius</emphasis>
<anchor xml:id="_vessel_8py_source_1l00012"/>00012 <emphasis role="comment">#&#32;-&#32;x4&#32;length&#32;of&#32;cylindrical&#32;section&#32;of&#32;the&#32;vessel,&#32;not&#32;including&#32;the&#32;head</emphasis>
<anchor xml:id="_vessel_8py_source_1l00013"/>00013 
<anchor xml:id="_vessel_8py_source_1l00014"/>00014 <emphasis role="comment">#&#32;x1&#32;and&#32;x2&#32;are&#32;integer&#32;multiples&#32;of&#32;0.0625&#32;inch,&#32;witch&#32;are</emphasis>
<anchor xml:id="_vessel_8py_source_1l00015"/>00015 <emphasis role="comment">#&#32;the&#32;available&#32;thickness&#32;of&#32;rolled&#32;steel&#32;plates,&#32;</emphasis>
<anchor xml:id="_vessel_8py_source_1l00016"/>00016 <emphasis role="comment">#&#32;and&#32;x3&#32;and&#32;x4&#32;are&#32;continuous.</emphasis>
<anchor xml:id="_vessel_8py_source_1l00017"/>00017 <emphasis role="comment">#&#32;x1&#32;and&#32;x2&#32;are&#32;made&#32;discrete&#32;by&#32;calling&#32;&apos;_feasible(x)&apos;&#32;in&#32;the&#32;objective&#32;function&#32;&apos;feasable_cost_penalty()</emphasis>
<anchor xml:id="_vessel_8py_source_1l00018"/>00018 <emphasis role="comment">#&#32;This&#32;works&#32;well&#32;with&#32;derivative&#32;free&#32;optimizers,&#32;but&#32;never&#32;do&#32;this&#32;with&#32;scipy.minimize.&#32;</emphasis>
<anchor xml:id="_vessel_8py_source_1l00019"/>00019 <emphasis role="comment">#&#32;Try&#32;&apos;test_minimize_SLSQP&apos;&#32;to&#32;see&#32;why.&#32;But&#32;this&#32;can&#32;be&#32;fixed&#32;by&#32;using&#32;&apos;cost_int_penalty&apos;&#32;as</emphasis>
<anchor xml:id="_vessel_8py_source_1l00020"/>00020 <emphasis role="comment">#&#32;objective&#32;function&#32;which&#32;adds&#32;a&#32;penalty&#32;for&#32;the&#32;&quot;multiples&#32;of&#32;0.0625&quot;&#32;violation.&#32;</emphasis>
<anchor xml:id="_vessel_8py_source_1l00021"/>00021 <emphasis role="comment">#&#32;With&#32;fcmaes&#32;retry&#32;usually&#32;you&#32;can&#32;just&#32;&quot;discretize&quot;&#32;arguments.&#32;</emphasis>
<anchor xml:id="_vessel_8py_source_1l00022"/>00022 
<anchor xml:id="_vessel_8py_source_1l00023"/>00023 <emphasis role="comment">#&#32;This&#32;example&#32;is&#32;taken&#32;from&#32;https://www.sciencedirect.com/science/article/abs/pii/S0096300306015098</emphasis>
<anchor xml:id="_vessel_8py_source_1l00024"/>00024 
<anchor xml:id="_vessel_8py_source_1l00025"/>00025 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.</emphasis>
<anchor xml:id="_vessel_8py_source_1l00026"/>00026 
<anchor xml:id="_vessel_8py_source_1l00027"/>00027 <emphasis role="keyword">import</emphasis>&#32;math
<anchor xml:id="_vessel_8py_source_1l00028"/>00028 <emphasis role="keyword">import</emphasis>&#32;time
<anchor xml:id="_vessel_8py_source_1l00029"/>00029 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_vessel_8py_source_1l00030"/>00030 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds,&#32;minimize
<anchor xml:id="_vessel_8py_source_1l00031"/>00031 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;retry,&#32;advretry
<anchor xml:id="_vessel_8py_source_1l00032"/>00032 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;dtime,&#32;random_x,&#32;logger
<anchor xml:id="_vessel_8py_source_1l00033"/>00033 
<anchor xml:id="_vessel_8py_source_1l00034"/>00034 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_vessel_8py_source_1l00035"/>00035 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_vessel_8py_source_1l00036"/>00036 
<anchor xml:id="_vessel_8py_source_1l00037"/>00037 logger.remove()
<anchor xml:id="_vessel_8py_source_1l00038"/><link linkend="_namespaceexamples_1_1vessel_1a0c4af533fa7c354d642eaf31de503db6">00038</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_vessel_8py_source_1l00039"/>00039 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_vessel_8py_source_1l00040"/>00040 
<anchor xml:id="_vessel_8py_source_1l00041"/><link linkend="_namespaceexamples_1_1vessel_1a3cd8872c36b8452b5186f2074bbccb0d">00041</link> fac&#32;=&#32;0.0625
<anchor xml:id="_vessel_8py_source_1l00042"/><link linkend="_namespaceexamples_1_1vessel_1aee86003cb6bbb331c8c6c5484c0f6d91">00042</link> bounds&#32;=&#32;Bounds([1.1,&#32;0.6,&#32;0,&#32;0],&#32;[240,&#32;240,&#32;240,&#32;240])&#32;<emphasis role="comment">#&#32;six&#32;inequalities</emphasis>
<anchor xml:id="_vessel_8py_source_1l00043"/>00043 <emphasis role="comment">#bounds&#32;=&#32;Bounds([0,&#32;0,&#32;0,&#32;0],&#32;[240,&#32;240,&#32;240,&#32;240])&#32;#&#32;four&#32;inequalities</emphasis>
<anchor xml:id="_vessel_8py_source_1l00044"/>00044 
<anchor xml:id="_vessel_8py_source_1l00045"/><link linkend="_namespaceexamples_1_1vessel_1a9b9b7d9b525b0e32dec4a679dd25fb79">00045</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1a9b9b7d9b525b0e32dec4a679dd25fb79">discrete</link>(x):
<anchor xml:id="_vessel_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;feasible_x&#32;=&#32;x&#32;-&#32;x&#32;%&#32;fac
<anchor xml:id="_vessel_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;feasible_x&#32;&lt;&#32;bounds.lb[0]:
<anchor xml:id="_vessel_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;feasible_x&#32;+=&#32;fac
<anchor xml:id="_vessel_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;feasible_x
<anchor xml:id="_vessel_8py_source_1l00050"/>00050 
<anchor xml:id="_vessel_8py_source_1l00051"/><link linkend="_namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca">00051</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca">_feasible</link>(x):
<anchor xml:id="_vessel_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;x&#32;=&#32;np.array(x)
<anchor xml:id="_vessel_8py_source_1l00053"/>00053 &#32;&#32;&#32;&#32;x[0]&#32;=&#32;<link linkend="_namespaceexamples_1_1vessel_1a9b9b7d9b525b0e32dec4a679dd25fb79">discrete</link>(x[0])
<anchor xml:id="_vessel_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;x[1]&#32;=&#32;<link linkend="_namespaceexamples_1_1vessel_1a9b9b7d9b525b0e32dec4a679dd25fb79">discrete</link>(x[1])
<anchor xml:id="_vessel_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.maximum(np.minimum(x,&#32;bounds.ub),&#32;bounds.lb)
<anchor xml:id="_vessel_8py_source_1l00056"/>00056 
<anchor xml:id="_vessel_8py_source_1l00057"/><link linkend="_namespaceexamples_1_1vessel_1acf59dad747a84939ba5b8e0da39d030b">00057</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1acf59dad747a84939ba5b8e0da39d030b">constraint_ineq</link>(x):
<anchor xml:id="_vessel_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[x[0]&#32;-&#32;0.0193*x[2],
<anchor xml:id="_vessel_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[1]&#32;-&#32;0.00954*x[2],
<anchor xml:id="_vessel_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;math.pi*x[2]**2&#32;*&#32;x[3]&#32;+&#32;(4/3)*math.pi*x[2]**3&#32;-&#32;1296000]
<anchor xml:id="_vessel_8py_source_1l00061"/>00061 
<anchor xml:id="_vessel_8py_source_1l00062"/><link linkend="_namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc">00062</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc">weight</link>(x):&#32;&#32;&#32;
<anchor xml:id="_vessel_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.6224*x[0]*x[2]*x[3]&#32;+&#32;1.7781*x[1]*x[2]**2&#32;\
<anchor xml:id="_vessel_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;3.1661&#32;*&#32;x[0]**2&#32;*&#32;x[3]&#32;+&#32;19.84*x[0]**2&#32;*&#32;x[2]
<anchor xml:id="_vessel_8py_source_1l00065"/>00065 
<anchor xml:id="_vessel_8py_source_1l00066"/><link linkend="_namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af">00066</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af">penalty</link>(x):
<anchor xml:id="_vessel_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-np.sum(np.minimum(<link linkend="_namespaceexamples_1_1vessel_1acf59dad747a84939ba5b8e0da39d030b">constraint_ineq</link>(x),&#32;0))
<anchor xml:id="_vessel_8py_source_1l00068"/>00068 
<anchor xml:id="_vessel_8py_source_1l00069"/><link linkend="_namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8">00069</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8">feasable_cost</link>(x):&#32;
<anchor xml:id="_vessel_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;x&#32;=&#32;<link linkend="_namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca">_feasible</link>(x)&#32;&#32;&#32;
<anchor xml:id="_vessel_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc">weight</link>(x)
<anchor xml:id="_vessel_8py_source_1l00072"/>00072 
<anchor xml:id="_vessel_8py_source_1l00073"/><link linkend="_namespaceexamples_1_1vessel_1a95a5805807fc62c2224ce037be72bee4">00073</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1a95a5805807fc62c2224ce037be72bee4">feasable_cost_penalty</link>(x):&#32;
<anchor xml:id="_vessel_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8">feasable_cost</link>(x)&#32;+&#32;100000*<link linkend="_namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af">penalty</link>(x)
<anchor xml:id="_vessel_8py_source_1l00075"/>00075 
<anchor xml:id="_vessel_8py_source_1l00076"/><link linkend="_namespaceexamples_1_1vessel_1abe6b8db835b58ffb639eac1a6de1172f">00076</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1abe6b8db835b58ffb639eac1a6de1172f">penalty_int</link>(x):
<anchor xml:id="_vessel_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;feasible_x&#32;=&#32;x&#32;-&#32;x&#32;%&#32;fac
<anchor xml:id="_vessel_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;x&#32;-&#32;feasible_x&#32;&lt;&#32;0.5&#32;*&#32;fac:
<anchor xml:id="_vessel_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x&#32;-&#32;feasible_x
<anchor xml:id="_vessel_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_vessel_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;feasible_x&#32;+&#32;fac&#32;-&#32;x
<anchor xml:id="_vessel_8py_source_1l00082"/>00082 
<anchor xml:id="_vessel_8py_source_1l00083"/><link linkend="_namespaceexamples_1_1vessel_1a1b1d80a77c03ba9019a2ab8f7820a471">00083</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1a1b1d80a77c03ba9019a2ab8f7820a471">penalty_int_all</link>(x):
<anchor xml:id="_vessel_8py_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceexamples_1_1vessel_1abe6b8db835b58ffb639eac1a6de1172f">penalty_int</link>(x[0])&#32;+&#32;<link linkend="_namespaceexamples_1_1vessel_1abe6b8db835b58ffb639eac1a6de1172f">penalty_int</link>(x[1])
<anchor xml:id="_vessel_8py_source_1l00085"/>00085 
<anchor xml:id="_vessel_8py_source_1l00086"/><link linkend="_namespaceexamples_1_1vessel_1afff096102e6cd9739381cfac25c0e450">00086</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1afff096102e6cd9739381cfac25c0e450">cost_int_penalty</link>(x):&#32;
<anchor xml:id="_vessel_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8">feasable_cost</link>(x)&#32;+&#32;100000*<link linkend="_namespaceexamples_1_1vessel_1a1b1d80a77c03ba9019a2ab8f7820a471">penalty_int_all</link>(x)
<anchor xml:id="_vessel_8py_source_1l00088"/>00088 
<anchor xml:id="_vessel_8py_source_1l00089"/><link linkend="_namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96">00089</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96">print_result</link>(ret,&#32;best,&#32;t0,&#32;i):
<anchor xml:id="_vessel_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;val&#32;=&#32;<link linkend="_namespaceexamples_1_1vessel_1a95a5805807fc62c2224ce037be72bee4">feasable_cost_penalty</link>(ret.x)&#32;
<anchor xml:id="_vessel_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;x&#32;=&#32;<link linkend="_namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca">_feasible</link>(ret.x)&#32;<emphasis role="comment">#&#32;make&#32;sure&#32;result&#32;is&#32;_feasible</emphasis>
<anchor xml:id="_vessel_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;val&#32;&lt;&#32;best:
<anchor xml:id="_vessel_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best&#32;=&#32;val
<anchor xml:id="_vessel_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;{0}:&#32;time&#32;=&#32;{1:.1f}&#32;best&#32;=&#32;{2:.8f}&#32;f(xmin)&#32;=&#32;{3:.5f}&#32;ineq&#32;=&#32;{4:.8f}&#32;x&#32;=&#32;{5:s}&quot;</emphasis>
<anchor xml:id="_vessel_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.<link linkend="_namespaceexamples_1_1vessel_1a0c4af533fa7c354d642eaf31de503db6">format</link>(i+1,&#32;dtime(t0),&#32;best,&#32;<link linkend="_namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc">weight</link>(x),&#32;<link linkend="_namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af">penalty</link>(x),&#32;str(x)))
<anchor xml:id="_vessel_8py_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;best
<anchor xml:id="_vessel_8py_source_1l00097"/>00097 
<anchor xml:id="_vessel_8py_source_1l00098"/><link linkend="_namespaceexamples_1_1vessel_1a876eb8e7aeeebb524d51f11ef3ecc488">00098</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1vessel_1a876eb8e7aeeebb524d51f11ef3ecc488">test_minimize_SLSQP</link>(fun,&#32;num):
<anchor xml:id="_vessel_8py_source_1l00099"/>00099 &#32;&#32;&#32;&#32;ineq_cons&#32;=&#32;{<emphasis role="stringliteral">&apos;type&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;ineq&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;fun&apos;</emphasis>&#32;:&#32;constraint_ineq}
<anchor xml:id="_vessel_8py_source_1l00100"/>00100 &#32;&#32;&#32;&#32;best&#32;=&#32;np.inf
<anchor xml:id="_vessel_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;t0&#32;=&#32;time.perf_counter();
<anchor xml:id="_vessel_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(num):
<anchor xml:id="_vessel_8py_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;=&#32;random_x(bounds.lb,&#32;bounds.ub)
<anchor xml:id="_vessel_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;minimize(fun,&#32;x0&#32;=&#32;guess,&#32;bounds&#32;=&#32;bounds,
<anchor xml:id="_vessel_8py_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;method=<emphasis role="stringliteral">&apos;SLSQP&apos;</emphasis>,&#32;constraints=[ineq_cons])
<anchor xml:id="_vessel_8py_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;ret.success:
<anchor xml:id="_vessel_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best&#32;=&#32;<link linkend="_namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96">print_result</link>(ret,&#32;best,&#32;t0,&#32;i)
<anchor xml:id="_vessel_8py_source_1l00108"/>00108 
<anchor xml:id="_vessel_8py_source_1l00109"/>00109 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_vessel_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;
<anchor xml:id="_vessel_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;try&#32;as&#32;alternative</emphasis>
<anchor xml:id="_vessel_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;test_minimize_SLSQP(feasable_cost,&#32;10000)</emphasis>
<anchor xml:id="_vessel_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;works&#32;much&#32;better</emphasis>
<anchor xml:id="_vessel_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;test_minimize_SLSQP(cost_int_penalty,&#32;10000)</emphasis>
<anchor xml:id="_vessel_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;
<anchor xml:id="_vessel_8py_source_1l00116"/><link linkend="_namespaceexamples_1_1vessel_1a75936765aaa289c75f230ba4fa2dbb4b">00116</link> &#32;&#32;&#32;&#32;t0&#32;=&#32;time.perf_counter();
<anchor xml:id="_vessel_8py_source_1l00117"/><link linkend="_namespaceexamples_1_1vessel_1a2720db2f81c03590516dd5482790f916">00117</link> &#32;&#32;&#32;&#32;ret&#32;=&#32;advretry.minimize(feasable_cost_penalty,&#32;bounds,&#32;num_retries=320)
<anchor xml:id="_vessel_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="comment">#ret&#32;=&#32;retry.minimize(feasable_cost_penalty,&#32;bounds,&#32;logger&#32;=&#32;logger(),&#32;num_retries=32)</emphasis>
<anchor xml:id="_vessel_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96">print_result</link>(ret,&#32;10000,&#32;t0,&#32;0)
</programlisting></section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_mode_8py_source" xml:lang="en-US">
<title>mode.py</title>
<indexterm><primary>fcmaes/mode.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_mode_8py_source_1l00001"/><link linkend="_namespacefcmaes_1_1mode">00001</link> <emphasis role="comment">#&#32;-*-&#32;coding:&#32;utf-8&#32;-*-</emphasis>
<anchor xml:id="_mode_8py_source_1l00002"/>00002 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00003"/>00003 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_mode_8py_source_1l00004"/>00004 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00005"/>00005 <emphasis role="stringliteral">&#32;Fast&#32;CMA-ES&#32;-&#32;version&#32;1.6.11</emphasis>
<anchor xml:id="_mode_8py_source_1l00006"/>00006 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00007"/>00007 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_mode_8py_source_1l00008"/>00008 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Latitude</emphasis>
<anchor xml:id="_mode_8py_source_1l00009"/>00009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00010"/>00010 <emphasis role="stringliteral">&#32;License:&#32;MIT</emphasis>
<anchor xml:id="_mode_8py_source_1l00011"/>00011 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00012"/>00012 <emphasis role="stringliteral">&#32;File:</emphasis>
<anchor xml:id="_mode_8py_source_1l00013"/>00013 <emphasis role="stringliteral">&#32;&#32;-&#32;mode.py</emphasis>
<anchor xml:id="_mode_8py_source_1l00014"/>00014 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00015"/>00015 <emphasis role="stringliteral">&#32;Description:</emphasis>
<anchor xml:id="_mode_8py_source_1l00016"/>00016 <emphasis role="stringliteral">&#32;&#32;-&#32;Numpy&#32;based&#32;implementation&#32;of&#32;multi&#32;objective</emphasis>
<anchor xml:id="_mode_8py_source_1l00017"/>00017 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Differential&#32;Evolution&#32;using&#32;either&#32;the&#32;DE/rand/1&#32;strategy</emphasis>
<anchor xml:id="_mode_8py_source_1l00018"/>00018 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;or&#32;a&#32;NSGA-II&#32;like&#32;population&#32;update&#32;(parameter&#32;&apos;nsga_update=True)&apos;.</emphasis>
<anchor xml:id="_mode_8py_source_1l00019"/>00019 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Then&#32;it&#32;works&#32;similar&#32;to&#32;NSGA-II.</emphasis>
<anchor xml:id="_mode_8py_source_1l00020"/>00020 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00021"/>00021 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Supports&#32;parallel&#32;fitness&#32;function&#32;evaluation.</emphasis>
<anchor xml:id="_mode_8py_source_1l00022"/>00022 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00023"/>00023 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Features&#32;enhanced&#32;multiple&#32;constraint&#32;ranking&#32;[2]</emphasis>
<anchor xml:id="_mode_8py_source_1l00024"/>00024 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;improving&#32;its&#32;performance&#32;in&#32;handling&#32;constraints&#32;for&#32;engineering&#32;design&#32;optimization.</emphasis>
<anchor xml:id="_mode_8py_source_1l00025"/>00025 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00026"/>00026 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Enables&#32;the&#32;comparison&#32;of&#32;DE&#32;and&#32;NSGA-II&#32;population&#32;update&#32;mechanism&#32;with&#32;everything&#32;else</emphasis>
<anchor xml:id="_mode_8py_source_1l00027"/>00027 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;kept&#32;completely&#32;identical.</emphasis>
<anchor xml:id="_mode_8py_source_1l00028"/>00028 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00029"/>00029 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Requires&#32;python&#32;3.5&#32;or&#32;higher.</emphasis>
<anchor xml:id="_mode_8py_source_1l00030"/>00030 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00031"/>00031 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Uses&#32;the&#32;following&#32;deviation&#32;from&#32;the&#32;standard&#32;DE&#32;algorithm:</emphasis>
<anchor xml:id="_mode_8py_source_1l00032"/>00032 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;a)&#32;oscillating&#32;CR/F&#32;parameters.</emphasis>
<anchor xml:id="_mode_8py_source_1l00033"/>00033 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00034"/>00034 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;You&#32;may&#32;keep&#32;parameters&#32;F&#32;and&#32;CR&#32;at&#32;their&#32;defaults&#32;since&#32;this&#32;implementation&#32;works&#32;well&#32;with&#32;the&#32;given&#32;settings&#32;for&#32;most&#32;problems,</emphasis>
<anchor xml:id="_mode_8py_source_1l00035"/>00035 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;since&#32;the&#32;algorithm&#32;oscillates&#32;between&#32;different&#32;F&#32;and&#32;CR&#32;settings.</emphasis>
<anchor xml:id="_mode_8py_source_1l00036"/>00036 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00037"/>00037 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;For&#32;expensive&#32;objective&#32;functions&#32;(e.g.&#32;machine&#32;learning&#32;parameter&#32;optimization)&#32;use&#32;the&#32;workers</emphasis>
<anchor xml:id="_mode_8py_source_1l00038"/>00038 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;parameter&#32;to&#32;parallelize&#32;objective&#32;function&#32;evaluation.&#32;The&#32;workers&#32;parameter&#32;is&#32;limited&#32;by&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l00039"/>00039 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;population&#32;size.</emphasis>
<anchor xml:id="_mode_8py_source_1l00040"/>00040 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00041"/>00041 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;ints&#32;parameter&#32;is&#32;a&#32;boolean&#32;array&#32;indicating&#32;which&#32;parameters&#32;are&#32;discrete&#32;integer&#32;values.&#32;This</emphasis>
<anchor xml:id="_mode_8py_source_1l00042"/>00042 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;parameter&#32;was&#32;introduced&#32;after&#32;observing&#32;non&#32;optimal&#32;DE-results&#32;for&#32;the&#32;ESP2&#32;benchmark&#32;problem:</emphasis>
<anchor xml:id="_mode_8py_source_1l00043"/>00043 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;[3]</emphasis>
<anchor xml:id="_mode_8py_source_1l00044"/>00044 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;If&#32;defined&#32;it&#32;causes&#32;a&#32;&quot;special&#32;treatment&quot;&#32;for&#32;discrete&#32;variables:&#32;They&#32;are&#32;rounded&#32;to&#32;the&#32;next&#32;integer&#32;value&#32;and</emphasis>
<anchor xml:id="_mode_8py_source_1l00045"/>00045 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;there&#32;is&#32;an&#32;additional&#32;mutation&#32;to&#32;avoid&#32;getting&#32;stuck&#32;at&#32;local&#32;minima.&#32;This&#32;behavior&#32;is&#32;specified&#32;by&#32;the&#32;internal</emphasis>
<anchor xml:id="_mode_8py_source_1l00046"/>00046 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;function&#32;_modifier&#32;which&#32;can&#32;be&#32;overwritten&#32;by&#32;providing&#32;the&#32;optional&#32;modifier&#32;argument.&#32;If&#32;modifier&#32;is&#32;defined,</emphasis>
<anchor xml:id="_mode_8py_source_1l00047"/>00047 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;ints&#32;is&#32;ignored.</emphasis>
<anchor xml:id="_mode_8py_source_1l00048"/>00048 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00049"/>00049 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;See&#32;[4]&#32;for&#32;a&#32;detailed&#32;description.</emphasis>
<anchor xml:id="_mode_8py_source_1l00050"/>00050 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00051"/>00051 <emphasis role="stringliteral">&#32;Authors:</emphasis>
<anchor xml:id="_mode_8py_source_1l00052"/>00052 <emphasis role="stringliteral">&#32;&#32;-&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_mode_8py_source_1l00053"/>00053 <emphasis role="stringliteral">&#32;&#32;-&#32;romain.despoullains@latitude.eu</emphasis>
<anchor xml:id="_mode_8py_source_1l00054"/>00054 <emphasis role="stringliteral">&#32;&#32;-&#32;corentin.generet@latitude.eu</emphasis>
<anchor xml:id="_mode_8py_source_1l00055"/>00055 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00056"/>00056 <emphasis role="stringliteral">&#32;References:</emphasis>
<anchor xml:id="_mode_8py_source_1l00057"/>00057 <emphasis role="stringliteral">&#32;&#32;-&#32;[1]&#32;https://github.com/dietmarwo/fast-cma-es</emphasis>
<anchor xml:id="_mode_8py_source_1l00058"/>00058 <emphasis role="stringliteral">&#32;&#32;-&#32;[2]&#32;https://www.jstage.jst.go.jp/article/tjpnsec/11/2/11_18/_article/-char/en/</emphasis>
<anchor xml:id="_mode_8py_source_1l00059"/>00059 <emphasis role="stringliteral">&#32;&#32;-&#32;[3]&#32;https://github.com/AlgTUDelft/ExpensiveOptimBenchmark/blob/master/expensiveoptimbenchmark/problems/DockerCFDBenchmark.py</emphasis>
<anchor xml:id="_mode_8py_source_1l00060"/>00060 <emphasis role="stringliteral">&#32;&#32;-&#32;[4]&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/MODE.adoc</emphasis>
<anchor xml:id="_mode_8py_source_1l00061"/>00061 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00062"/>00062 <emphasis role="stringliteral">&#32;Documentation:</emphasis>
<anchor xml:id="_mode_8py_source_1l00063"/>00063 <emphasis role="stringliteral">&#32;&#32;-</emphasis>
<anchor xml:id="_mode_8py_source_1l00064"/>00064 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00065"/>00065 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00066"/>00066 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_mode_8py_source_1l00067"/>00067 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00068"/>00068 <emphasis role="keyword">from</emphasis>&#32;__future__&#32;<emphasis role="keyword">import</emphasis>&#32;annotations
<anchor xml:id="_mode_8py_source_1l00069"/>00069 
<anchor xml:id="_mode_8py_source_1l00070"/>00070 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_mode_8py_source_1l00071"/>00071 <emphasis role="keyword">import</emphasis>&#32;os,&#32;sys,&#32;time
<anchor xml:id="_mode_8py_source_1l00072"/>00072 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_mode_8py_source_1l00073"/>00073 <emphasis role="keyword">from</emphasis>&#32;numpy.random&#32;<emphasis role="keyword">import</emphasis>&#32;Generator,&#32;PCG64DXSM
<anchor xml:id="_mode_8py_source_1l00074"/>00074 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds
<anchor xml:id="_mode_8py_source_1l00075"/>00075 
<anchor xml:id="_mode_8py_source_1l00076"/>00076 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1evaluator">fcmaes.evaluator</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Evaluator,&#32;parallel_mo
<anchor xml:id="_mode_8py_source_1l00077"/>00077 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;moretry
<anchor xml:id="_mode_8py_source_1l00078"/>00078 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp
<anchor xml:id="_mode_8py_source_1l00079"/>00079 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;dtime
<anchor xml:id="_mode_8py_source_1l00080"/>00080 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1retry">fcmaes.retry</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Shared2d
<anchor xml:id="_mode_8py_source_1l00081"/>00081 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_mode_8py_source_1l00082"/>00082 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;Optional,&#32;Callable,&#32;Tuple
<anchor xml:id="_mode_8py_source_1l00083"/>00083 <emphasis role="keyword">from</emphasis>&#32;numpy.typing&#32;<emphasis role="keyword">import</emphasis>&#32;ArrayLike
<anchor xml:id="_mode_8py_source_1l00084"/>00084 
<anchor xml:id="_mode_8py_source_1l00085"/>00085 os.environ[<emphasis role="stringliteral">&apos;MKL_DEBUG_CPU_TYPE&apos;</emphasis>]&#32;=&#32;<emphasis role="stringliteral">&apos;5&apos;</emphasis>
<anchor xml:id="_mode_8py_source_1l00086"/>00086 
<anchor xml:id="_mode_8py_source_1l00087"/>00087 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1a7e76a634ae4563d738ad007097e3c2b4">minimize</link>(mofun:&#32;Callable[[ArrayLike],&#32;ArrayLike],&#32;
<anchor xml:id="_mode_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;int,
<anchor xml:id="_mode_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncon:&#32;int,
<anchor xml:id="_mode_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,
<anchor xml:id="_mode_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;Optional[np.ndarray]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_mode_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;64,
<anchor xml:id="_mode_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;100000,
<anchor xml:id="_mode_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;1,
<anchor xml:id="_mode_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f:&#32;Optional[float]&#32;=&#32;0.5,
<anchor xml:id="_mode_8py_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr:&#32;Optional[float]&#32;=&#32;0.9,
<anchor xml:id="_mode_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_c:&#32;Optional[float]&#32;=&#32;0.5,
<anchor xml:id="_mode_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_c:&#32;Optional[float]&#32;=&#32;15.0,
<anchor xml:id="_mode_8py_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_m:&#32;Optional[float]&#32;=&#32;0.9,
<anchor xml:id="_mode_8py_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_m:&#32;Optional[float]&#32;=&#32;20.0,
<anchor xml:id="_mode_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nsga_update:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>,
<anchor xml:id="_mode_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pareto_update:&#32;Optional[int]&#32;=&#32;0,
<anchor xml:id="_mode_8py_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_mode_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifier:&#32;Callable&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_mode_8py_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_mutate:&#32;Optional[float]&#32;=&#32;0.1,
<anchor xml:id="_mode_8py_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_mutate:&#32;Optional[float]&#32;=&#32;0.5,
<anchor xml:id="_mode_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),
<anchor xml:id="_mode_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional[store]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;np.ndarray]:
<anchor xml:id="_mode_8py_source_1l00109"/>00109 
<anchor xml:id="_mode_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00111"/>00111 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;multi-objective&#32;function&#32;subject&#32;to&#32;constraints&#32;and&#32;bounds&#32;using&#32;evolutionary</emphasis>
<anchor xml:id="_mode_8py_source_1l00112"/>00112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;algorithms.&#32;The&#32;function&#32;supports&#32;parallel&#32;computation&#32;and&#32;allows&#32;various&#32;configurations</emphasis>
<anchor xml:id="_mode_8py_source_1l00113"/>00113 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;modify&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_mode_8py_source_1l00114"/>00114 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00115"/>00115 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00116"/>00116 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mofun&#32;(Callable[[ArrayLike],&#32;ArrayLike]):&#32;A&#32;callable&#32;representing&#32;the&#32;multi-objective</emphasis>
<anchor xml:id="_mode_8py_source_1l00117"/>00117 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;to&#32;minimize.&#32;It&#32;must&#32;take&#32;an&#32;array-like&#32;input&#32;and&#32;return&#32;an&#32;array-like</emphasis>
<anchor xml:id="_mode_8py_source_1l00118"/>00118 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output.</emphasis>
<anchor xml:id="_mode_8py_source_1l00119"/>00119 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;The&#32;number&#32;of&#32;objective&#32;functions.</emphasis>
<anchor xml:id="_mode_8py_source_1l00120"/>00120 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncon&#32;(int):&#32;The&#32;number&#32;of&#32;constraints.</emphasis>
<anchor xml:id="_mode_8py_source_1l00121"/>00121 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Bounds):&#32;The&#32;bounds&#32;for&#32;the&#32;decision&#32;variables.</emphasis>
<anchor xml:id="_mode_8py_source_1l00122"/>00122 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess&#32;(Optional[np.ndarray]):&#32;Initial&#32;guess&#32;for&#32;the&#32;population.&#32;If&#32;not&#32;provided,</emphasis>
<anchor xml:id="_mode_8py_source_1l00123"/>00123 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;random&#32;guess&#32;will&#32;be&#32;generated.</emphasis>
<anchor xml:id="_mode_8py_source_1l00124"/>00124 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;The&#32;size&#32;of&#32;the&#32;population&#32;for&#32;the&#32;evolutionary&#32;algorithm.</emphasis>
<anchor xml:id="_mode_8py_source_1l00125"/>00125 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;The&#32;maximum&#32;number&#32;of&#32;allowable&#32;function&#32;evaluations</emphasis>
<anchor xml:id="_mode_8py_source_1l00126"/>00126 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_mode_8py_source_1l00127"/>00127 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;workers&#32;to&#32;use&#32;for&#32;parallel&#32;computation.&#32;A</emphasis>
<anchor xml:id="_mode_8py_source_1l00128"/>00128 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;of&#32;1&#32;indicates&#32;serial&#32;computation.</emphasis>
<anchor xml:id="_mode_8py_source_1l00129"/>00129 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f&#32;(Optional[float]):&#32;Differential&#32;evolution&#32;scale&#32;factor.</emphasis>
<anchor xml:id="_mode_8py_source_1l00130"/>00130 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cr&#32;(Optional[float]):&#32;Differential&#32;evolution&#32;crossover&#32;probability.</emphasis>
<anchor xml:id="_mode_8py_source_1l00131"/>00131 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_c&#32;(Optional[float]):&#32;Crossover&#32;probability&#32;for&#32;simulated&#32;binary&#32;crossover&#32;(SBX).</emphasis>
<anchor xml:id="_mode_8py_source_1l00132"/>00132 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_c&#32;(Optional[float]):&#32;Distribution&#32;index&#32;for&#32;simulated&#32;binary&#32;crossover&#32;(SBX).</emphasis>
<anchor xml:id="_mode_8py_source_1l00133"/>00133 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_m&#32;(Optional[float]):&#32;Mutation&#32;probability&#32;for&#32;polynomial&#32;mutation.</emphasis>
<anchor xml:id="_mode_8py_source_1l00134"/><link linkend="_namespacefcmaes_1_1mode_1a7e76a634ae4563d738ad007097e3c2b4">00134</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_m&#32;(Optional[float]):&#32;Distribution&#32;index&#32;for&#32;polynomial&#32;mutation.</emphasis>
<anchor xml:id="_mode_8py_source_1l00135"/>00135 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nsga_update&#32;(Optional[bool]):&#32;Flag&#32;to&#32;enable&#32;or&#32;disable&#32;NSGA-II&#32;style&#32;updates.</emphasis>
<anchor xml:id="_mode_8py_source_1l00136"/>00136 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pareto_update&#32;(Optional[int]):&#32;The&#32;frequency&#32;of&#32;Pareto&#32;front&#32;updates.</emphasis>
<anchor xml:id="_mode_8py_source_1l00137"/>00137 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints&#32;(Optional[ArrayLike]):&#32;Specific&#32;indices&#32;of&#32;decision&#32;variables&#32;that&#32;are&#32;treated</emphasis>
<anchor xml:id="_mode_8py_source_1l00138"/>00138 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;as&#32;integers.</emphasis>
<anchor xml:id="_mode_8py_source_1l00139"/>00139 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifier&#32;(Callable):&#32;A&#32;callable&#32;that&#32;modifies&#32;the&#32;process&#32;of&#32;variable&#32;updates.&#32;This</emphasis>
<anchor xml:id="_mode_8py_source_1l00140"/>00140 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;can&#32;be&#32;used&#32;to&#32;apply&#32;additional&#32;constraints&#32;or&#32;actions&#32;during&#32;the&#32;optimization</emphasis>
<anchor xml:id="_mode_8py_source_1l00141"/>00141 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.</emphasis>
<anchor xml:id="_mode_8py_source_1l00142"/>00142 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_mutate&#32;(Optional[float]):&#32;Minimum&#32;mutation&#32;factor&#32;for&#32;decision&#32;variables.</emphasis>
<anchor xml:id="_mode_8py_source_1l00143"/>00143 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_mutate&#32;(Optional[float]):&#32;Maximum&#32;mutation&#32;factor&#32;for&#32;decision&#32;variables.</emphasis>
<anchor xml:id="_mode_8py_source_1l00144"/>00144 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;An&#32;instance&#32;of&#32;random&#32;number&#32;generator&#32;to&#32;ensure&#32;repeatability.</emphasis>
<anchor xml:id="_mode_8py_source_1l00145"/>00145 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(Optional[store]):&#32;An&#32;optional&#32;storage&#32;object&#32;to&#32;store&#32;results&#32;at&#32;the&#32;end&#32;of</emphasis>
<anchor xml:id="_mode_8py_source_1l00146"/>00146 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.</emphasis>
<anchor xml:id="_mode_8py_source_1l00147"/>00147 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00148"/>00148 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00149"/>00149 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;np.ndarray]:&#32;A&#32;tuple&#32;containing&#32;the&#32;optimal&#32;decision&#32;variables</emphasis>
<anchor xml:id="_mode_8py_source_1l00150"/>00150 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(x)&#32;and&#32;the&#32;corresponding&#32;objective&#32;function&#32;values&#32;(y).&#32;If&#32;optimization&#32;fails,</emphasis>
<anchor xml:id="_mode_8py_source_1l00151"/>00151 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returns&#32;(None,&#32;None).</emphasis>
<anchor xml:id="_mode_8py_source_1l00152"/>00152 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00153"/>00153 
<anchor xml:id="_mode_8py_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mode&#32;=&#32;<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e">MODE</link>(nobj,&#32;ncon,&#32;bounds,&#32;popsize,
<anchor xml:id="_mode_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f,&#32;cr,&#32;pro_c,&#32;dis_c,&#32;pro_m,&#32;dis_m,&#32;nsga_update,&#32;pareto_update,&#32;rg,&#32;ints,&#32;min_mutate,&#32;max_mutate,&#32;modifier)
<anchor xml:id="_mode_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mode.set_guess(guess,&#32;mofun,&#32;rg)
<anchor xml:id="_mode_8py_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;workers&#32;&lt;=&#32;1:
<anchor xml:id="_mode_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x,&#32;y,&#32;=&#32;mode.minimize_ser(mofun,&#32;max_evaluations)
<anchor xml:id="_mode_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x,&#32;y&#32;=&#32;mode.minimize_par(mofun,&#32;max_evaluations,&#32;workers)
<anchor xml:id="_mode_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;store&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.add_results(x,&#32;y)
<anchor xml:id="_mode_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x,&#32;y
<anchor xml:id="_mode_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_mode_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(str(ex))&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="keywordtype">None</emphasis>&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00168"/>00168 
<anchor xml:id="_mode_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00170"/>00170 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1store">store</link>():
<anchor xml:id="_mode_8py_source_1l00171"/>00171 
<anchor xml:id="_mode_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00173"/>00173 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Handles&#32;the&#32;management&#32;of&#32;shared&#32;data&#32;storage&#32;and&#32;processing&#32;for&#32;multi-objective&#32;optimization.</emphasis>
<anchor xml:id="_mode_8py_source_1l00174"/>00174 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00175"/>00175 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;facilitates&#32;the&#32;storage&#32;and&#32;processing&#32;of&#32;results&#32;for&#32;multi-objective&#32;optimization</emphasis>
<anchor xml:id="_mode_8py_source_1l00176"/>00176 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;problems&#32;using&#32;shared&#32;memory&#32;objects&#32;to&#32;support&#32;multiprocessing.&#32;It&#32;includes&#32;functionality&#32;for</emphasis>
<anchor xml:id="_mode_8py_source_1l00177"/>00177 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;adding&#32;new&#32;results,&#32;managing&#32;capacity,&#32;and&#32;extracting&#32;Pareto&#32;fronts.</emphasis>
<anchor xml:id="_mode_8py_source_1l00178"/>00178 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00179"/>00179 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_mode_8py_source_1l00180"/>00180 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;Dimensionality&#32;of&#32;the&#32;input&#32;data.</emphasis>
<anchor xml:id="_mode_8py_source_1l00181"/>00181 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;Number&#32;of&#32;objectives&#32;for&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_mode_8py_source_1l00182"/>00182 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;(int):&#32;Maximum&#32;capacity&#32;of&#32;the&#32;storage.</emphasis>
<anchor xml:id="_mode_8py_source_1l00183"/><link linkend="_classfcmaes_1_1mode_1_1store">00183</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00184"/>00184 &#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1store_1ab639a5b34f36a616f38edbd188469b99">__init__</link>(self,&#32;dim,&#32;nobj,&#32;capacity&#32;=&#32;mp.cpu_count()*512):
<anchor xml:id="_mode_8py_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00187"/>00187 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;instance&#32;of&#32;the&#32;class&#32;with&#32;provided&#32;dimensions&#32;and&#32;objects.</emphasis>
<anchor xml:id="_mode_8py_source_1l00188"/>00188 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00189"/>00189 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;constructor&#32;sets&#32;up&#32;shared&#32;memory&#32;buffers&#32;for&#32;storing&#32;data&#32;(`xs`&#32;and&#32;`ys`)</emphasis>
<anchor xml:id="_mode_8py_source_1l00190"/>00190 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;initializes&#32;synchronization&#32;mechanisms&#32;and&#32;counters&#32;to&#32;effectively&#32;handle</emphasis>
<anchor xml:id="_mode_8py_source_1l00191"/>00191 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;storage&#32;and&#32;retrieval.</emphasis>
<anchor xml:id="_mode_8py_source_1l00192"/>00192 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00193"/>00193 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00194"/>00194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim:&#32;Number&#32;of&#32;dimensions&#32;for&#32;each&#32;data&#32;point.</emphasis>
<anchor xml:id="_mode_8py_source_1l00195"/>00195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;Number&#32;of&#32;objectives&#32;for&#32;each&#32;data&#32;point.</emphasis>
<anchor xml:id="_mode_8py_source_1l00196"/>00196 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity:&#32;Total&#32;initial&#32;storage&#32;capacity.&#32;Defaults&#32;to&#32;the&#32;number&#32;of&#32;CPU</emphasis>
<anchor xml:id="_mode_8py_source_1l00197"/>00197 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cores&#32;multiplied&#32;by&#32;512.</emphasis>
<anchor xml:id="_mode_8py_source_1l00198"/>00198 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00199"/>00199 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_mode_8py_source_1l00200"/>00200 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;Number&#32;of&#32;dimensions&#32;for&#32;each&#32;data&#32;point.</emphasis>
<anchor xml:id="_mode_8py_source_1l00201"/>00201 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;Number&#32;of&#32;objectives&#32;for&#32;each&#32;data&#32;point.</emphasis>
<anchor xml:id="_mode_8py_source_1l00202"/>00202 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;(int):&#32;Total&#32;initial&#32;storage&#32;capacity.</emphasis>
<anchor xml:id="_mode_8py_source_1l00203"/>00203 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1abb90fc4232b181b4692c5418a37a5bd7">dim</link>&#32;=&#32;dim
<anchor xml:id="_mode_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1ad41dda52326d3c8dd58fa1ba06e4fe43">nobj</link>&#32;=&#32;nobj
<anchor xml:id="_mode_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a3e2c5ad682cc0020ea9ba7cd00a94a8f">capacity</link>&#32;=&#32;capacity
<anchor xml:id="_mode_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1ae24305a686c275864dc54f1afb29d8c1">add_mutex</link>&#32;=&#32;mp.Lock()&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a1a19c7046d247df093c393bf640049b4">xs</link>&#32;=&#32;<link linkend="_classfcmaes_1_1retry_1_1_shared2d">Shared2d</link>(np.empty((self.<link linkend="_classfcmaes_1_1mode_1_1store_1a3e2c5ad682cc0020ea9ba7cd00a94a8f">capacity</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1abb90fc4232b181b4692c5418a37a5bd7">dim</link>),&#32;dtype&#32;=&#32;np.float64))
<anchor xml:id="_mode_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1aebc7f2a3cbee661b34b92bc6948b7849">ys</link>&#32;=&#32;<link linkend="_classfcmaes_1_1retry_1_1_shared2d">Shared2d</link>(np.empty((self.<link linkend="_classfcmaes_1_1mode_1_1store_1a3e2c5ad682cc0020ea9ba7cd00a94a8f">capacity</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1ad41dda52326d3c8dd58fa1ba06e4fe43">nobj</link>),&#32;dtype&#32;=&#32;np.float64))&#32;
<anchor xml:id="_mode_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a34a1a949f5857ab3edfb6beb8fb8b563">create_views</link>()
<anchor xml:id="_mode_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)&#32;
<anchor xml:id="_mode_8py_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1ac4b4da5b1175f8134ee6555ceb37d183">num_added</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)&#32;
<anchor xml:id="_mode_8py_source_1l00213"/>00213 
<anchor xml:id="_mode_8py_source_1l00214"/>00214 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1store_1a34a1a949f5857ab3edfb6beb8fb8b563">create_views</link>(self):&#32;<emphasis role="comment">#&#32;needs&#32;to&#32;be&#32;called&#32;in&#32;the&#32;target&#32;process</emphasis>
<anchor xml:id="_mode_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00216"/><link linkend="_classfcmaes_1_1mode_1_1store_1ab639a5b34f36a616f38edbd188469b99">00216</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Creates&#32;views&#32;for&#32;the&#32;class&apos;s&#32;xs&#32;and&#32;ys&#32;attributes.</emphasis>
<anchor xml:id="_mode_8py_source_1l00217"/><link linkend="_classfcmaes_1_1mode_1_1store_1abb90fc4232b181b4692c5418a37a5bd7">00217</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00218"/><link linkend="_classfcmaes_1_1mode_1_1store_1ad41dda52326d3c8dd58fa1ba06e4fe43">00218</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;generates&#32;views&#32;for&#32;the&#32;xs&#32;and&#32;ys&#32;attributes,&#32;which&#32;should</emphasis>
<anchor xml:id="_mode_8py_source_1l00219"/><link linkend="_classfcmaes_1_1mode_1_1store_1a3e2c5ad682cc0020ea9ba7cd00a94a8f">00219</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;initialized&#32;prior&#32;to&#32;calling&#32;this&#32;function.&#32;It&#32;ensures&#32;the&#32;views&#32;are</emphasis>
<anchor xml:id="_mode_8py_source_1l00220"/><link linkend="_classfcmaes_1_1mode_1_1store_1ae24305a686c275864dc54f1afb29d8c1">00220</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;references&#32;to&#32;the&#32;existing&#32;data&#32;rather&#32;than&#32;independent&#32;copies.</emphasis>
<anchor xml:id="_mode_8py_source_1l00221"/><link linkend="_classfcmaes_1_1mode_1_1store_1a1a19c7046d247df093c393bf640049b4">00221</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00222"/><link linkend="_classfcmaes_1_1mode_1_1store_1aebc7f2a3cbee661b34b92bc6948b7849">00222</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00223"/>00223 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_mode_8py_source_1l00224"/><link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">00224</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00225"/><link linkend="_classfcmaes_1_1mode_1_1store_1ac4b4da5b1175f8134ee6555ceb37d183">00225</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00226"/>00226 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_mode_8py_source_1l00227"/>00227 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a96139a4d610eaf0d6814eba5f3dc6fc5">xs_view</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a1a19c7046d247df093c393bf640049b4">xs</link>.view()
<anchor xml:id="_mode_8py_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a270a1beccd7fe26e44d5d727fc484f0f">ys_view</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1aebc7f2a3cbee661b34b92bc6948b7849">ys</link>.view()
<anchor xml:id="_mode_8py_source_1l00230"/>00230 
<anchor xml:id="_mode_8py_source_1l00231"/>00231 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1store_1ac474104fcfc6ca9dce6a873a95af0204">get_xs</link>(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_mode_8py_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00233"/>00233 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;a&#32;view&#32;of&#32;the&#32;xs&#32;ndarray.</emphasis>
<anchor xml:id="_mode_8py_source_1l00234"/>00234 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00235"/>00235 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;provides&#32;a&#32;view&#32;of&#32;the&#32;internal&#32;numpy&#32;array&#32;`xs`,&#32;allowing</emphasis>
<anchor xml:id="_mode_8py_source_1l00236"/>00236 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;users&#32;to&#32;access&#32;the&#32;data&#32;without&#32;creating&#32;a&#32;copy.</emphasis>
<anchor xml:id="_mode_8py_source_1l00237"/>00237 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00238"/>00238 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00239"/>00239 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;view&#32;of&#32;the&#32;`xs`&#32;numpy&#32;array.</emphasis>
<anchor xml:id="_mode_8py_source_1l00240"/><link linkend="_classfcmaes_1_1mode_1_1store_1a34a1a949f5857ab3edfb6beb8fb8b563">00240</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00241"/><link linkend="_classfcmaes_1_1mode_1_1store_1a96139a4d610eaf0d6814eba5f3dc6fc5">00241</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a1a19c7046d247df093c393bf640049b4">xs</link>.view()
<anchor xml:id="_mode_8py_source_1l00242"/><link linkend="_classfcmaes_1_1mode_1_1store_1a270a1beccd7fe26e44d5d727fc484f0f">00242</link> 
<anchor xml:id="_mode_8py_source_1l00243"/>00243 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1store_1ae794481869c1d681838a181c6f1976fe">get_ys</link>(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_mode_8py_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00245"/>00245 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;a&#32;view&#32;of&#32;the&#32;`ys`&#32;attribute.</emphasis>
<anchor xml:id="_mode_8py_source_1l00246"/>00246 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00247"/>00247 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;provides&#32;a&#32;view&#32;of&#32;the&#32;`ys`&#32;NumPy&#32;array,&#32;allowing&#32;the&#32;caller&#32;to</emphasis>
<anchor xml:id="_mode_8py_source_1l00248"/>00248 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;access&#32;the&#32;same&#32;data&#32;without&#32;creating&#32;a&#32;copy.</emphasis>
<anchor xml:id="_mode_8py_source_1l00249"/>00249 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00250"/>00250 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00251"/>00251 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;view&#32;of&#32;the&#32;`ys`&#32;NumPy&#32;array.</emphasis>
<anchor xml:id="_mode_8py_source_1l00252"/>00252 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00253"/><link linkend="_classfcmaes_1_1mode_1_1store_1ac474104fcfc6ca9dce6a873a95af0204">00253</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1aebc7f2a3cbee661b34b92bc6948b7849">ys</link>.view()
<anchor xml:id="_mode_8py_source_1l00254"/>00254 
<anchor xml:id="_mode_8py_source_1l00255"/>00255 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1store_1a215371084a0bff8b1368d27a91495fb5">add_result</link>(self,&#32;x,&#32;y):
<anchor xml:id="_mode_8py_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00257"/>00257 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Adds&#32;a&#32;result&#32;to&#32;the&#32;storage,&#32;ensuring&#32;that&#32;the&#32;storage&#32;capacity&#32;is&#32;not&#32;exceeded.</emphasis>
<anchor xml:id="_mode_8py_source_1l00258"/>00258 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;the&#32;storage&#32;reaches&#32;its&#32;capacity,&#32;it&#32;performs&#32;truncation&#32;and&#32;stores&#32;the&#32;new&#32;values&#32;accordingly.</emphasis>
<anchor xml:id="_mode_8py_source_1l00259"/>00259 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00260"/>00260 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00261"/>00261 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;The&#32;input&#32;data&#32;point&#32;to&#32;be&#32;added.</emphasis>
<anchor xml:id="_mode_8py_source_1l00262"/>00262 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y:&#32;The&#32;corresponding&#32;result&#32;or&#32;label&#32;associated&#32;with&#32;`x`.</emphasis>
<anchor xml:id="_mode_8py_source_1l00263"/>00263 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1ae24305a686c275864dc54f1afb29d8c1">add_mutex</link>:
<anchor xml:id="_mode_8py_source_1l00265"/><link linkend="_classfcmaes_1_1mode_1_1store_1ae794481869c1d681838a181c6f1976fe">00265</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1ac4b4da5b1175f8134ee6555ceb37d183">num_added</link>.value&#32;+=&#32;1
<anchor xml:id="_mode_8py_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value&#32;&gt;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a3e2c5ad682cc0020ea9ba7cd00a94a8f">capacity</link>:&#32;
<anchor xml:id="_mode_8py_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a1f2b11c0242f454020e72bc15d12625d">get_front</link>(update=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_mode_8py_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value&#32;&gt;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a3e2c5ad682cc0020ea9ba7cd00a94a8f">capacity</link>:&#32;
<anchor xml:id="_mode_8py_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;int(self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value/2)
<anchor xml:id="_mode_8py_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a96139a4d610eaf0d6814eba5f3dc6fc5">xs_view</link>[:n]&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a96139a4d610eaf0d6814eba5f3dc6fc5">xs_view</link>[:2*n:2]&#32;
<anchor xml:id="_mode_8py_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a270a1beccd7fe26e44d5d727fc484f0f">ys_view</link>[:n]&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a270a1beccd7fe26e44d5d727fc484f0f">ys_view</link>[:2*n:2]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value&#32;=&#32;n
<anchor xml:id="_mode_8py_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a96139a4d610eaf0d6814eba5f3dc6fc5">xs_view</link>[i]&#32;=&#32;x
<anchor xml:id="_mode_8py_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a270a1beccd7fe26e44d5d727fc484f0f">ys_view</link>[i]&#32;=&#32;y[:self.<link linkend="_classfcmaes_1_1mode_1_1store_1ad41dda52326d3c8dd58fa1ba06e4fe43">nobj</link>]
<anchor xml:id="_mode_8py_source_1l00276"/><link linkend="_classfcmaes_1_1mode_1_1store_1a215371084a0bff8b1368d27a91495fb5">00276</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value&#32;=&#32;i&#32;+&#32;1
<anchor xml:id="_mode_8py_source_1l00277"/>00277 
<anchor xml:id="_mode_8py_source_1l00278"/>00278 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1store_1aac282e295578d049a156da83056e25fe">add_results</link>(self,&#32;xs,&#32;ys):
<anchor xml:id="_mode_8py_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00280"/>00280 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Adds&#32;the&#32;content&#32;of&#32;the&#32;provided&#32;`xs`&#32;and&#32;`ys`&#32;to&#32;the&#32;storage,&#32;while&#32;managing&#32;the&#32;storage</emphasis>
<anchor xml:id="_mode_8py_source_1l00281"/>00281 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;and&#32;ensuring&#32;proper&#32;synchronization.</emphasis>
<anchor xml:id="_mode_8py_source_1l00282"/>00282 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00283"/>00283 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;the&#32;storage&#32;exceeds&#32;90%&#32;of&#32;its&#32;capacity&#32;during&#32;the&#32;operation,&#32;the&#32;addition&#32;process&#32;will</emphasis>
<anchor xml:id="_mode_8py_source_1l00284"/>00284 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;terminate&#32;early&#32;to&#32;avoid&#32;overfilling.&#32;The&#32;addition&#32;process&#32;is&#32;thread-safe&#32;due&#32;to&#32;`add_mutex`.</emphasis>
<anchor xml:id="_mode_8py_source_1l00285"/>00285 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00286"/>00286 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00287"/>00287 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs:&#32;A&#32;sequence&#32;containing&#32;the&#32;elements&#32;to&#32;be&#32;added&#32;to&#32;the&#32;storage.</emphasis>
<anchor xml:id="_mode_8py_source_1l00288"/>00288 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys:&#32;A&#32;sequence&#32;of&#32;sequences,&#32;where&#32;each&#32;sub-sequence&#32;represents&#32;corresponding</emphasis>
<anchor xml:id="_mode_8py_source_1l00289"/>00289 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;entries&#32;to&#32;`xs`&#32;and&#32;is&#32;truncated&#32;to&#32;the&#32;first&#32;`nobj`&#32;elements&#32;during&#32;storage.</emphasis>
<anchor xml:id="_mode_8py_source_1l00290"/>00290 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1ae24305a686c275864dc54f1afb29d8c1">add_mutex</link>:
<anchor xml:id="_mode_8py_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1ac4b4da5b1175f8134ee6555ceb37d183">num_added</link>.value&#32;+=&#32;1
<anchor xml:id="_mode_8py_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value
<anchor xml:id="_mode_8py_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(xs)):
<anchor xml:id="_mode_8py_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a3e2c5ad682cc0020ea9ba7cd00a94a8f">capacity</link>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a96139a4d610eaf0d6814eba5f3dc6fc5">xs_view</link>[i]&#32;=&#32;xs[j]&#32;
<anchor xml:id="_mode_8py_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a270a1beccd7fe26e44d5d727fc484f0f">ys_view</link>[i]&#32;=&#32;ys[j][:self.<link linkend="_classfcmaes_1_1mode_1_1store_1ad41dda52326d3c8dd58fa1ba06e4fe43">nobj</link>]
<anchor xml:id="_mode_8py_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;1
<anchor xml:id="_mode_8py_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a1f2b11c0242f454020e72bc15d12625d">get_front</link>(update=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_mode_8py_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value
<anchor xml:id="_mode_8py_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;&gt;&#32;0.9*self.<link linkend="_classfcmaes_1_1mode_1_1store_1a3e2c5ad682cc0020ea9ba7cd00a94a8f">capacity</link>:&#32;<emphasis role="comment">#&#32;give&#32;up</emphasis>
<anchor xml:id="_mode_8py_source_1l00303"/><link linkend="_classfcmaes_1_1mode_1_1store_1aac282e295578d049a156da83056e25fe">00303</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="_mode_8py_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value&#32;=&#32;i
<anchor xml:id="_mode_8py_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1store_1a1f2b11c0242f454020e72bc15d12625d">get_front</link>(self,&#32;update=False):
<anchor xml:id="_mode_8py_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00308"/>00308 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;the&#32;Pareto&#32;front&#32;from&#32;stored&#32;values&#32;of&#32;`xs_view`&#32;and&#32;`ys_view`.&#32;Optionally,&#32;updates&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l00309"/>00309 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values&#32;in-place&#32;if&#32;`update`&#32;is&#32;set&#32;to&#32;True.</emphasis>
<anchor xml:id="_mode_8py_source_1l00310"/>00310 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00311"/>00311 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00312"/>00312 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update&#32;(bool):&#32;Determines&#32;whether&#32;the&#32;current&#32;views&#32;and&#32;stored&#32;count&#32;are&#32;updated&#32;with&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l00313"/>00313 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pareto&#32;front&#32;values.</emphasis>
<anchor xml:id="_mode_8py_source_1l00314"/>00314 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00315"/>00315 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00316"/>00316 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tuple:&#32;Contains&#32;two&#32;elements&#32;`(xf,&#32;yf)`&#32;where:</emphasis>
<anchor xml:id="_mode_8py_source_1l00317"/>00317 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`xf`&#32;-&#32;The&#32;x-coordinates&#32;of&#32;the&#32;Pareto&#32;front.</emphasis>
<anchor xml:id="_mode_8py_source_1l00318"/>00318 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`yf`&#32;-&#32;The&#32;y-coordinates&#32;of&#32;the&#32;Pareto&#32;front.</emphasis>
<anchor xml:id="_mode_8py_source_1l00319"/>00319 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stored&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value
<anchor xml:id="_mode_8py_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a96139a4d610eaf0d6814eba5f3dc6fc5">xs_view</link>[:stored]
<anchor xml:id="_mode_8py_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a270a1beccd7fe26e44d5d727fc484f0f">ys_view</link>[:stored]
<anchor xml:id="_mode_8py_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xf,&#32;yf&#32;=&#32;moretry.pareto(xs,&#32;ys)
<anchor xml:id="_mode_8py_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;update:
<anchor xml:id="_mode_8py_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;len(yf)
<anchor xml:id="_mode_8py_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a96139a4d610eaf0d6814eba5f3dc6fc5">xs_view</link>[:n]&#32;=&#32;xf&#32;
<anchor xml:id="_mode_8py_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a270a1beccd7fe26e44d5d727fc484f0f">ys_view</link>[:n]&#32;=&#32;yf&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value&#32;=&#32;n
<anchor xml:id="_mode_8py_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xf,&#32;yf
<anchor xml:id="_mode_8py_source_1l00330"/>00330 
<anchor xml:id="_mode_8py_source_1l00331"/>00331 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1store_1a1ffd4596004d9c4a84a094883dccdbfa">get_content</link>(self):
<anchor xml:id="_mode_8py_source_1l00332"/><link linkend="_classfcmaes_1_1mode_1_1store_1a1f2b11c0242f454020e72bc15d12625d">00332</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00333"/>00333 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;and&#32;returns&#32;the&#32;stored&#32;content.</emphasis>
<anchor xml:id="_mode_8py_source_1l00334"/>00334 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00335"/>00335 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;accesses&#32;the&#32;current&#32;amount&#32;of&#32;stored&#32;data&#32;and&#32;retrieves</emphasis>
<anchor xml:id="_mode_8py_source_1l00336"/>00336 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;corresponding&#32;portions&#32;of&#32;`xs_view`&#32;and&#32;`ys_view`&#32;based&#32;on</emphasis>
<anchor xml:id="_mode_8py_source_1l00337"/>00337 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;stored&#32;count.</emphasis>
<anchor xml:id="_mode_8py_source_1l00338"/>00338 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00339"/>00339 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00340"/>00340 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tuple:&#32;A&#32;tuple&#32;containing&#32;two&#32;arrays&#32;or&#32;lists.&#32;The&#32;first&#32;element</emphasis>
<anchor xml:id="_mode_8py_source_1l00341"/>00341 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;the&#32;portion&#32;of&#32;`xs_view`&#32;up&#32;to&#32;the&#32;stored&#32;count,&#32;and&#32;the&#32;second</emphasis>
<anchor xml:id="_mode_8py_source_1l00342"/>00342 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;element&#32;is&#32;the&#32;portion&#32;of&#32;`ys_view`&#32;up&#32;to&#32;the&#32;stored&#32;count.</emphasis>
<anchor xml:id="_mode_8py_source_1l00343"/>00343 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stored&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a55c223142d2113cb824124744d2926e8">num_stored</link>.value
<anchor xml:id="_mode_8py_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a96139a4d610eaf0d6814eba5f3dc6fc5">xs_view</link>[:stored],&#32;self.<link linkend="_classfcmaes_1_1mode_1_1store_1a270a1beccd7fe26e44d5d727fc484f0f">ys_view</link>[:stored]
<anchor xml:id="_mode_8py_source_1l00346"/>00346 
<anchor xml:id="_mode_8py_source_1l00347"/>00347 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e">MODE</link>(object):
<anchor xml:id="_mode_8py_source_1l00348"/>00348 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00349"/>00349 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Multi-Objective&#32;Differential&#32;Evolution&#32;(MODE)&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_mode_8py_source_1l00350"/>00350 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00351"/>00351 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;implements&#32;a&#32;multi-objective&#32;optimization&#32;algorithm&#32;based&#32;on</emphasis>
<anchor xml:id="_mode_8py_source_1l00352"/>00352 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;Differential&#32;Evolution&#32;(DE)&#32;framework.&#32;It&#32;is&#32;designed&#32;to&#32;handle</emphasis>
<anchor xml:id="_mode_8py_source_1l00353"/>00353 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;problems&#32;with&#32;both&#32;multiple&#32;objectives&#32;and&#32;constraints.&#32;The</emphasis>
<anchor xml:id="_mode_8py_source_1l00354"/>00354 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;algorithm&#32;aims&#32;to&#32;generate&#32;a&#32;set&#32;of&#32;Pareto-optimal&#32;solutions&#32;through</emphasis>
<anchor xml:id="_mode_8py_source_1l00355"/>00355 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;evolutionary&#32;strategies&#32;while&#32;supporting&#32;parallel&#32;and&#32;serial&#32;execution&#32;for</emphasis>
<anchor xml:id="_mode_8py_source_1l00356"/><link linkend="_classfcmaes_1_1mode_1_1store_1a1ffd4596004d9c4a84a094883dccdbfa">00356</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;fitness&#32;evaluations.</emphasis>
<anchor xml:id="_mode_8py_source_1l00357"/>00357 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00358"/>00358 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_mode_8py_source_1l00359"/>00359 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;Number&#32;of&#32;objectives&#32;to&#32;optimize.</emphasis>
<anchor xml:id="_mode_8py_source_1l00360"/>00360 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncon&#32;(int):&#32;Number&#32;of&#32;constraints.</emphasis>
<anchor xml:id="_mode_8py_source_1l00361"/>00361 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;Dimensionality&#32;of&#32;the&#32;search&#32;space,&#32;derived&#32;from&#32;the&#32;bounds.</emphasis>
<anchor xml:id="_mode_8py_source_1l00362"/>00362 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower&#32;(np.ndarray):&#32;Lower&#32;bounds&#32;for&#32;the&#32;search&#32;space&#32;dimensions.</emphasis>
<anchor xml:id="_mode_8py_source_1l00363"/>00363 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;(np.ndarray):&#32;Upper&#32;bounds&#32;for&#32;the&#32;search&#32;space&#32;dimensions.</emphasis>
<anchor xml:id="_mode_8py_source_1l00364"/>00364 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(int):&#32;Population&#32;size&#32;used&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_mode_8py_source_1l00365"/>00365 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(numpy.random.Generator):&#32;Random&#32;number&#32;generator&#32;for&#32;reproducibility.</emphasis>
<anchor xml:id="_mode_8py_source_1l00366"/>00366 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;F&#32;(float):&#32;Control&#32;parameter&#32;for&#32;differential&#32;weight&#32;in&#32;DE&#32;strategy.</emphasis>
<anchor xml:id="_mode_8py_source_1l00367"/>00367 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cr&#32;(float):&#32;Crossover&#32;probability&#32;for&#32;DE&#32;strategy.</emphasis>
<anchor xml:id="_mode_8py_source_1l00368"/>00368 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_c&#32;(float):&#32;Probability&#32;for&#32;simulated&#32;binary&#32;crossover&#32;(SBX).</emphasis>
<anchor xml:id="_mode_8py_source_1l00369"/>00369 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_c&#32;(float):&#32;Distribution&#32;index&#32;for&#32;SBX.</emphasis>
<anchor xml:id="_mode_8py_source_1l00370"/>00370 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_m&#32;(float):&#32;Probability&#32;for&#32;polynomial&#32;mutation.</emphasis>
<anchor xml:id="_mode_8py_source_1l00371"/>00371 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_m&#32;(float):&#32;Distribution&#32;index&#32;for&#32;polynomial&#32;mutation.</emphasis>
<anchor xml:id="_mode_8py_source_1l00372"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e">00372</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nsga_update&#32;(bool):&#32;Indicates&#32;whether&#32;NSGA-II&#32;update&#32;is&#32;enabled.</emphasis>
<anchor xml:id="_mode_8py_source_1l00373"/>00373 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pareto_update&#32;(int):&#32;Determines&#32;pareto&#32;update&#32;intensity;&#32;allows&#32;more&#32;elite&#32;selection&#32;if&#32;greater.</emphasis>
<anchor xml:id="_mode_8py_source_1l00374"/>00374 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_mutate&#32;(float):&#32;Minimum&#32;possible&#32;mutation&#32;factor.</emphasis>
<anchor xml:id="_mode_8py_source_1l00375"/>00375 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_mutate&#32;(float):&#32;Maximum&#32;possible&#32;mutation&#32;factor.</emphasis>
<anchor xml:id="_mode_8py_source_1l00376"/>00376 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifier&#32;(Callable):&#32;A&#32;function&#32;to&#32;modify&#32;variables,&#32;allowing&#32;for&#32;domain-specific&#32;constraints.</emphasis>
<anchor xml:id="_mode_8py_source_1l00377"/>00377 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00378"/>00378 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ad2876e7272901dcadf387a203a338648">__init__</link>(self,&#32;
<anchor xml:id="_mode_8py_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;int,
<anchor xml:id="_mode_8py_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncon:&#32;int,&#32;
<anchor xml:id="_mode_8py_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,
<anchor xml:id="_mode_8py_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;64,&#32;
<anchor xml:id="_mode_8py_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;F:&#32;Optional[float]&#32;=&#32;0.5,&#32;
<anchor xml:id="_mode_8py_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cr:&#32;Optional[float]&#32;=&#32;0.9,&#32;
<anchor xml:id="_mode_8py_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_c:&#32;Optional[float]&#32;=&#32;0.5,
<anchor xml:id="_mode_8py_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_c:&#32;Optional[float]&#32;=&#32;15.0,
<anchor xml:id="_mode_8py_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_m:&#32;Optional[float]&#32;=&#32;0.9,
<anchor xml:id="_mode_8py_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_m:&#32;Optional[float]&#32;=&#32;20.0,
<anchor xml:id="_mode_8py_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nsga_update:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>,
<anchor xml:id="_mode_8py_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pareto_update:&#32;Optional[int]&#32;=&#32;0,
<anchor xml:id="_mode_8py_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),
<anchor xml:id="_mode_8py_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_mode_8py_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_mutate:&#32;Optional[float]&#32;=&#32;0.1,
<anchor xml:id="_mode_8py_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_mutate:&#32;Optional[float]&#32;=&#32;0.5,&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifier:&#32;Callable&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_mode_8py_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00397"/>00397 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;class&#32;with&#32;the&#32;given&#32;parameters&#32;and&#32;sets&#32;up&#32;the&#32;necessary&#32;attributes</emphasis>
<anchor xml:id="_mode_8py_source_1l00398"/>00398 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;the&#32;optimization&#32;process.&#32;This&#32;constructor&#32;validates&#32;the&#32;input&#32;bounds,&#32;adjusts</emphasis>
<anchor xml:id="_mode_8py_source_1l00399"/>00399 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;population&#32;size&#32;for&#32;NSGA&#32;updates,&#32;and&#32;sets&#32;default&#32;values&#32;for&#32;various&#32;optimization</emphasis>
<anchor xml:id="_mode_8py_source_1l00400"/>00400 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;mutation&#32;parameters.</emphasis>
<anchor xml:id="_mode_8py_source_1l00401"/>00401 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00402"/>00402 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00403"/>00403 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;The&#32;number&#32;of&#32;objectives&#32;for&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_mode_8py_source_1l00404"/>00404 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncon&#32;(int):&#32;The&#32;number&#32;of&#32;constraints&#32;for&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_mode_8py_source_1l00405"/>00405 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Bounds):&#32;The&#32;lower&#32;and&#32;upper&#32;bounds&#32;for&#32;the&#32;decision&#32;variables.</emphasis>
<anchor xml:id="_mode_8py_source_1l00406"/>00406 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;The&#32;size&#32;of&#32;the&#32;population&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_mode_8py_source_1l00407"/>00407 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;64.&#32;Adjusted&#32;to&#32;be&#32;even&#32;if&#32;nsga_update&#32;is&#32;True.</emphasis>
<anchor xml:id="_mode_8py_source_1l00408"/>00408 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;F&#32;(Optional[float]):&#32;Mutation&#32;factor&#32;for&#32;DE-based&#32;updates.&#32;Default&#32;is&#32;0.5.</emphasis>
<anchor xml:id="_mode_8py_source_1l00409"/>00409 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cr&#32;(Optional[float]):&#32;Crossover&#32;probability&#32;for&#32;DE-based&#32;updates.&#32;Default&#32;is&#32;0.9.</emphasis>
<anchor xml:id="_mode_8py_source_1l00410"/>00410 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_c&#32;(Optional[float]):&#32;Crossover&#32;probability&#32;in&#32;SBX&#32;(Simulated&#32;Binary</emphasis>
<anchor xml:id="_mode_8py_source_1l00411"/>00411 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Crossover).&#32;Default&#32;is&#32;0.5.</emphasis>
<anchor xml:id="_mode_8py_source_1l00412"/>00412 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_c&#32;(Optional[float]):&#32;Distribution&#32;index&#32;for&#32;SBX.&#32;Default&#32;is&#32;15.0.</emphasis>
<anchor xml:id="_mode_8py_source_1l00413"/>00413 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_m&#32;(Optional[float]):&#32;Mutation&#32;probability.&#32;Default&#32;is&#32;0.9.</emphasis>
<anchor xml:id="_mode_8py_source_1l00414"/>00414 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_m&#32;(Optional[float]):&#32;Distribution&#32;index&#32;for&#32;mutation&#32;(polynomial).&#32;Default</emphasis>
<anchor xml:id="_mode_8py_source_1l00415"/>00415 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;20.0.</emphasis>
<anchor xml:id="_mode_8py_source_1l00416"/>00416 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nsga_update&#32;(Optional[bool]):&#32;Flag&#32;to&#32;enable&#32;NSGA&#32;(Non-dominated&#32;Sorting&#32;Genetic</emphasis>
<anchor xml:id="_mode_8py_source_1l00417"/>00417 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Algorithm)&#32;update.&#32;Default&#32;is&#32;True.</emphasis>
<anchor xml:id="_mode_8py_source_1l00418"/>00418 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pareto_update&#32;(Optional[int]):&#32;Criterion&#32;for&#32;updating&#32;Pareto&#32;front.&#32;Default&#32;is&#32;0.</emphasis>
<anchor xml:id="_mode_8py_source_1l00419"/>00419 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;Random&#32;number&#32;generator&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_mode_8py_source_1l00420"/>00420 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;Generator(PCG64DXSM()).</emphasis>
<anchor xml:id="_mode_8py_source_1l00421"/>00421 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints&#32;(Optional[ArrayLike]):&#32;Indices&#32;of&#32;integer&#32;decision&#32;variables.&#32;Used&#32;to</emphasis>
<anchor xml:id="_mode_8py_source_1l00422"/>00422 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;support&#32;mixed-integer&#32;optimization.&#32;Automatically&#32;disabled&#32;if&#32;nsga_update</emphasis>
<anchor xml:id="_mode_8py_source_1l00423"/>00423 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;True.</emphasis>
<anchor xml:id="_mode_8py_source_1l00424"/>00424 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_mutate&#32;(Optional[float]):&#32;Minimum&#32;mutation&#32;rate&#32;for&#32;the&#32;decision&#32;variables.</emphasis>
<anchor xml:id="_mode_8py_source_1l00425"/>00425 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;0.1.</emphasis>
<anchor xml:id="_mode_8py_source_1l00426"/>00426 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_mutate&#32;(Optional[float]):&#32;Maximum&#32;mutation&#32;rate&#32;for&#32;the&#32;decision&#32;variables.</emphasis>
<anchor xml:id="_mode_8py_source_1l00427"/>00427 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;0.5.</emphasis>
<anchor xml:id="_mode_8py_source_1l00428"/>00428 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifier&#32;(Callable):&#32;Function&#32;to&#32;modify&#32;integer&#32;decision&#32;variables.&#32;If&#32;not</emphasis>
<anchor xml:id="_mode_8py_source_1l00429"/>00429 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided,&#32;a&#32;default&#32;modifier&#32;is&#32;used&#32;when&#32;integer&#32;variables&#32;exist.</emphasis>
<anchor xml:id="_mode_8py_source_1l00430"/>00430 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ad8a88c6e8d55396b806493982cb1cdb5">nobj</link>&#32;=&#32;nobj
<anchor xml:id="_mode_8py_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a20adacf20c1411e271fe9be8f7504fa5">ncon</link>&#32;=&#32;ncon
<anchor xml:id="_mode_8py_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a5c09cc3172e92b1253fb3e742cf30366">dim</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a58a39c1931ba9e160e53a6a5bb597214">lower</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a49d3d6a1d92e1681a12bb5770a9f6c31">upper</link>&#32;=&#32;<link linkend="_namespacefcmaes_1_1mode_1a7437cac94470387e12001d7f424393af">_check_bounds</link>(bounds,&#32;<emphasis role="keywordtype">None</emphasis>)
<anchor xml:id="_mode_8py_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;popsize&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;=&#32;64
<anchor xml:id="_mode_8py_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;popsize&#32;%&#32;2&#32;==&#32;1&#32;<emphasis role="keywordflow">and</emphasis>&#32;nsga_update:&#32;<emphasis role="comment">#&#32;nsga&#32;update&#32;requires&#32;even&#32;popsize</emphasis>
<anchor xml:id="_mode_8py_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;+=&#32;1
<anchor xml:id="_mode_8py_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>&#32;=&#32;popsize
<anchor xml:id="_mode_8py_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>&#32;=&#32;rg
<anchor xml:id="_mode_8py_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa68beb9a07ba893546bb695759b619f0">F0</link>&#32;=&#32;F
<anchor xml:id="_mode_8py_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ac76f411eb1bbe4b5ae4b3f9925370096">Cr0</link>&#32;=&#32;Cr
<anchor xml:id="_mode_8py_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a81f79977661c7a4dc09bc7d4e6d891a1">pro_c</link>&#32;=&#32;pro_c
<anchor xml:id="_mode_8py_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ae93a68cfc0936c62f75b890c9a6b19d1">dis_c</link>&#32;=&#32;dis_c
<anchor xml:id="_mode_8py_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab1df5291083b159bf2671c038c3e38e1">pro_m</link>&#32;=&#32;pro_m
<anchor xml:id="_mode_8py_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a2fde79913ea108d6f5b55ef509109ba5">dis_m</link>&#32;=&#32;dis_m&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a57cf010ab62e26a06988d5f251c62b6e">nsga_update</link>&#32;=&#32;nsga_update
<anchor xml:id="_mode_8py_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ac5a6b39d9c5736bfb80c744742609f46">pareto_update</link>&#32;=&#32;pareto_update
<anchor xml:id="_mode_8py_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a3877c96890ef6ce77a0eb464c9efc9eb">stop</link>&#32;=&#32;0
<anchor xml:id="_mode_8py_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a2088eee51e00dd89edfdc48c882c99f0">iterations</link>&#32;=&#32;0
<anchor xml:id="_mode_8py_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76a2bef54f9de04b12fac1cecf6378b8">evals</link>&#32;=&#32;0
<anchor xml:id="_mode_8py_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ac4814f6a92ab2814c791c23e76d9e1b2">mutex</link>&#32;=&#32;mp.Lock()
<anchor xml:id="_mode_8py_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a6823b36a4bb5daadeef62ec78b7c2281">p</link>&#32;=&#32;0
<anchor xml:id="_mode_8py_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;nsga&#32;update&#32;doesn&apos;t&#32;support&#32;mixed&#32;integer</emphasis>
<anchor xml:id="_mode_8py_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1af3cea564c07f1d434bba95c39afc165c">ints</link>&#32;=&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ints&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;nsga_update)&#32;<emphasis role="keywordflow">else</emphasis>&#32;np.array(ints)
<anchor xml:id="_mode_8py_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a18459596315b3de8f34a62377c7b006c">min_mutate</link>&#32;=&#32;min_mutate
<anchor xml:id="_mode_8py_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a7151073081d8ed1d9309c9f44870d035">max_mutate</link>&#32;=&#32;max_mutate&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;use&#32;default&#32;variable&#32;modifier&#32;for&#32;int&#32;variables&#32;if&#32;modifier&#32;is&#32;None</emphasis>
<anchor xml:id="_mode_8py_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;modifier&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">and</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;ints&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a58a39c1931ba9e160e53a6a5bb597214">lower</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a58a39c1931ba9e160e53a6a5bb597214">lower</link>.astype(float)
<anchor xml:id="_mode_8py_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a49d3d6a1d92e1681a12bb5770a9f6c31">upper</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a49d3d6a1d92e1681a12bb5770a9f6c31">upper</link>.astype(float)
<anchor xml:id="_mode_8py_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a523b3fbb4e1cebe83a81574fce168104">modifier</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab6f842a65bbcbab7bc6821c25737d0aa">_modifier</link>
<anchor xml:id="_mode_8py_source_1l00462"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ad2876e7272901dcadf387a203a338648">00462</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a523b3fbb4e1cebe83a81574fce168104">modifier</link>&#32;=&#32;modifier
<anchor xml:id="_mode_8py_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a762479149abbac45c113a9baf627a7d0">_init</link>()
<anchor xml:id="_mode_8py_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00466"/>00466 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1af1ac6ae50db24a626f6649175bfecf96">set_guess</link>(self,&#32;guess,&#32;mofun,&#32;rg&#32;=&#32;None):
<anchor xml:id="_mode_8py_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00468"/>00468 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sets&#32;the&#32;initial&#32;guess&#32;values&#32;for&#32;an&#32;optimization&#32;or&#32;search&#32;algorithm.</emphasis>
<anchor xml:id="_mode_8py_source_1l00469"/>00469 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00470"/>00470 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;allows&#32;setting&#32;up&#32;initial&#32;guesses&#32;for&#32;the&#32;population&#32;values</emphasis>
<anchor xml:id="_mode_8py_source_1l00471"/>00471 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;their&#32;corresponding&#32;evaluations.&#32;Users&#32;can&#32;provide&#32;guesses&#32;as&#32;either</emphasis>
<anchor xml:id="_mode_8py_source_1l00472"/>00472 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;NumPy&#32;array&#32;of&#32;candidate&#32;solutions&#32;or&#32;a&#32;tuple&#32;containing&#32;candidate</emphasis>
<anchor xml:id="_mode_8py_source_1l00473"/>00473 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions&#32;and&#32;their&#32;objective&#32;function&#32;evaluations.&#32;Additionally,&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l00474"/>00474 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;provides&#32;flexibility&#32;in&#32;defining&#32;a&#32;random&#32;number&#32;generator&#32;for</emphasis>
<anchor xml:id="_mode_8py_source_1l00475"/>00475 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampling&#32;the&#32;guesses.</emphasis>
<anchor xml:id="_mode_8py_source_1l00476"/>00476 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00477"/>00477 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00478"/>00478 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess:&#32;A&#32;NumPy&#32;array&#32;containing&#32;candidate&#32;solution&#32;points,&#32;or&#32;a&#32;tuple</emphasis>
<anchor xml:id="_mode_8py_source_1l00479"/>00479 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(guess,&#32;ys),&#32;where&#32;`guess`&#32;is&#32;an&#32;array&#32;of&#32;candidate&#32;solutions,&#32;and</emphasis>
<anchor xml:id="_mode_8py_source_1l00480"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ad8a88c6e8d55396b806493982cb1cdb5">00480</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`ys`&#32;contains&#32;objective&#32;evaluations&#32;corresponding&#32;to&#32;these&#32;solutions.</emphasis>
<anchor xml:id="_mode_8py_source_1l00481"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a20adacf20c1411e271fe9be8f7504fa5">00481</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mofun:&#32;A&#32;callable&#32;that&#32;computes&#32;the&#32;objective&#32;value&#32;for&#32;a&#32;given&#32;candidate</emphasis>
<anchor xml:id="_mode_8py_source_1l00482"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a5c09cc3172e92b1253fb3e742cf30366">00482</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solution.&#32;This&#32;function&#32;is&#32;applied&#32;to&#32;`guess`&#32;if&#32;`guess`&#32;is&#32;a</emphasis>
<anchor xml:id="_mode_8py_source_1l00483"/>00483 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NumPy&#32;array.</emphasis>
<anchor xml:id="_mode_8py_source_1l00484"/>00484 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;An&#32;optional&#32;random&#32;number&#32;generator&#32;(`numpy.random.Generator`)</emphasis>
<anchor xml:id="_mode_8py_source_1l00485"/>00485 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;instance.&#32;If&#32;not&#32;specified,&#32;a&#32;default&#32;generator&#32;is&#32;created&#32;using</emphasis>
<anchor xml:id="_mode_8py_source_1l00486"/>00486 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PCG64DXSM.</emphasis>
<anchor xml:id="_mode_8py_source_1l00487"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">00487</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00488"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">00488</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00489"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa68beb9a07ba893546bb695759b619f0">00489</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00490"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ac76f411eb1bbe4b5ae4b3f9925370096">00490</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;isinstance(guess,&#32;np.ndarray):
<anchor xml:id="_mode_8py_source_1l00491"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a81f79977661c7a4dc09bc7d4e6d891a1">00491</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;np.array([mofun(x)&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;guess])
<anchor xml:id="_mode_8py_source_1l00492"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ae93a68cfc0936c62f75b890c9a6b19d1">00492</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l00493"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab1df5291083b159bf2671c038c3e38e1">00493</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;guess,&#32;ys&#32;=&#32;guess
<anchor xml:id="_mode_8py_source_1l00494"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a2fde79913ea108d6f5b55ef509109ba5">00494</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;rg&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00495"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a57cf010ab62e26a06988d5f251c62b6e">00495</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;=&#32;Generator(PCG64DXSM())
<anchor xml:id="_mode_8py_source_1l00496"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ac5a6b39d9c5736bfb80c744742609f46">00496</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;choice&#32;=&#32;rg.choice(len(ys),&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>,&#32;
<anchor xml:id="_mode_8py_source_1l00497"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a3877c96890ef6ce77a0eb464c9efc9eb">00497</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;replace&#32;=&#32;(len(ys)&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>))
<anchor xml:id="_mode_8py_source_1l00498"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a2088eee51e00dd89edfdc48c882c99f0">00498</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8b928c29cf646933a1821566ec18d73a">tell</link>(ys[choice],&#32;guess[choice])
<anchor xml:id="_mode_8py_source_1l00499"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76a2bef54f9de04b12fac1cecf6378b8">00499</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00500"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ac4814f6a92ab2814c791c23e76d9e1b2">00500</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a1893dc839f866ab4d22f7fd13489bf73">ask</link>(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_mode_8py_source_1l00501"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a6823b36a4bb5daadeef62ec78b7c2281">00501</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00502"/>00502 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generates&#32;the&#32;next&#32;batch&#32;of&#32;candidate&#32;solutions&#32;and&#32;updates&#32;internal&#32;population.</emphasis>
<anchor xml:id="_mode_8py_source_1l00503"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1af3cea564c07f1d434bba95c39afc165c">00503</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00504"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a18459596315b3de8f34a62377c7b006c">00504</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generates&#32;new&#32;solutions&#32;for&#32;the&#32;evolution&#32;strategy&#32;by&#32;iterating&#32;through&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l00505"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a7151073081d8ed1d9309c9f44870d035">00505</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;given&#32;population&#32;size,&#32;updating&#32;the&#32;extended&#32;population&#32;array&#32;with&#32;new&#32;values.</emphasis>
<anchor xml:id="_mode_8py_source_1l00506"/>00506 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;the&#32;array&#32;of&#32;newly&#32;generated&#32;solutions&#32;after&#32;the&#32;update.</emphasis>
<anchor xml:id="_mode_8py_source_1l00507"/>00507 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00508"/>00508 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00509"/>00509 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;The&#32;newly&#32;generated&#32;candidate&#32;solutions&#32;array.</emphasis>
<anchor xml:id="_mode_8py_source_1l00510"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a523b3fbb4e1cebe83a81574fce168104">00510</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>):
<anchor xml:id="_mode_8py_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[p&#32;+&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>]&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a4e75c17eaa625b8be5fa0ccb0d64bd05">_next_x</link>(p)
<anchor xml:id="_mode_8py_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>:]
<anchor xml:id="_mode_8py_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00515"/>00515 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8b928c29cf646933a1821566ec18d73a">tell</link>(self,&#32;ys:&#32;np.ndarray,&#32;xs:&#32;Optional[np.ndarray]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_mode_8py_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00517"/>00517 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Updates&#32;the&#32;internal&#32;population&#32;data&#32;with&#32;the&#32;given&#32;`ys`&#32;values,&#32;and&#32;optionally,</emphasis>
<anchor xml:id="_mode_8py_source_1l00518"/>00518 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;with&#32;the&#32;corresponding&#32;`xs`&#32;values,&#32;if&#32;provided.&#32;This&#32;method&#32;is&#32;used&#32;to&#32;record</emphasis>
<anchor xml:id="_mode_8py_source_1l00519"/>00519 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;evaluations&#32;for&#32;individuals&#32;in&#32;the&#32;population&#32;and&#32;subsequently&#32;triggers</emphasis>
<anchor xml:id="_mode_8py_source_1l00520"/>00520 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;population&#32;update.</emphasis>
<anchor xml:id="_mode_8py_source_1l00521"/>00521 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00522"/>00522 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00523"/>00523 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;(np.ndarray):&#32;Array&#32;containing&#32;the&#32;fitness&#32;values&#32;of&#32;the&#32;individuals&#32;to</emphasis>
<anchor xml:id="_mode_8py_source_1l00524"/>00524 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;updated&#32;in&#32;the&#32;population.</emphasis>
<anchor xml:id="_mode_8py_source_1l00525"/>00525 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;(Optional[np.ndarray],&#32;optional):&#32;Array&#32;containing&#32;the&#32;decision&#32;variables</emphasis>
<anchor xml:id="_mode_8py_source_1l00526"/>00526 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;individuals&#32;to&#32;be&#32;updated&#32;in&#32;the&#32;population.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_mode_8py_source_1l00527"/>00527 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;xs&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>):
<anchor xml:id="_mode_8py_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[p&#32;+&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>]&#32;=&#32;xs[p]
<anchor xml:id="_mode_8py_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>):
<anchor xml:id="_mode_8py_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0dc84c88e30325bfc4bec42ab07cdc51">y</link>[p&#32;+&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>]&#32;=&#32;ys[p]
<anchor xml:id="_mode_8py_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a29791dbcb2e070361529475630de2052">pop_update</link>()
<anchor xml:id="_mode_8py_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00535"/>00535 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a762479149abbac45c113a9baf627a7d0">_init</link>(self):
<anchor xml:id="_mode_8py_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00537"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1af1ac6ae50db24a626f6649175bfecf96">00537</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;population&#32;matrices,&#32;decision&#32;variables,&#32;and&#32;objective&#32;values</emphasis>
<anchor xml:id="_mode_8py_source_1l00538"/>00538 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;a&#32;multi-objective&#32;optimization&#32;problem.&#32;It&#32;also&#32;initializes&#32;auxiliary</emphasis>
<anchor xml:id="_mode_8py_source_1l00539"/>00539 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variables&#32;used&#32;in&#32;optimization&#32;algorithms.</emphasis>
<anchor xml:id="_mode_8py_source_1l00540"/>00540 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00541"/>00541 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_mode_8py_source_1l00542"/>00542 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;numpy.ndarray.&#32;A&#32;matrix&#32;containing&#32;decision&#32;variables&#32;for&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l00543"/>00543 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;population.&#32;The&#32;shape&#32;is&#32;`(2&#32;*&#32;popsize,&#32;dim)`.</emphasis>
<anchor xml:id="_mode_8py_source_1l00544"/>00544 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y:&#32;numpy.ndarray.&#32;A&#32;matrix&#32;for&#32;storing&#32;objective&#32;and&#32;constraint</emphasis>
<anchor xml:id="_mode_8py_source_1l00545"/>00545 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluations.&#32;The&#32;shape&#32;is&#32;`(2&#32;*&#32;popsize,&#32;nobj&#32;+&#32;ncon)`.</emphasis>
<anchor xml:id="_mode_8py_source_1l00546"/>00546 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vx:&#32;numpy.ndarray.&#32;A&#32;copy&#32;of&#32;the&#32;initial&#32;`x`&#32;matrix,&#32;used&#32;for</emphasis>
<anchor xml:id="_mode_8py_source_1l00547"/>00547 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intermediate&#32;calculations&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_mode_8py_source_1l00548"/>00548 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vp:&#32;int.&#32;An&#32;auxiliary&#32;variable&#32;initialized&#32;to&#32;0&#32;for&#32;optimization&#32;purposes.</emphasis>
<anchor xml:id="_mode_8py_source_1l00549"/>00549 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ycon:&#32;None&#32;or&#32;type(related&#32;attribute&#32;if&#32;any).&#32;A&#32;placeholder&#32;for&#32;constraint-related</emphasis>
<anchor xml:id="_mode_8py_source_1l00550"/>00550 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;computations,&#32;initialized&#32;as&#32;None.</emphasis>
<anchor xml:id="_mode_8py_source_1l00551"/>00551 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps:&#32;int.&#32;An&#32;auxiliary&#32;variable&#32;for&#32;numerical&#32;stability&#32;or&#32;algorithmic</emphasis>
<anchor xml:id="_mode_8py_source_1l00552"/>00552 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adjustments,&#32;initialized&#32;to&#32;0.</emphasis>
<anchor xml:id="_mode_8py_source_1l00553"/>00553 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>&#32;=&#32;np.empty((2*self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a5c09cc3172e92b1253fb3e742cf30366">dim</link>))
<anchor xml:id="_mode_8py_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0dc84c88e30325bfc4bec42ab07cdc51">y</link>&#32;=&#32;np.empty((2*self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ad8a88c6e8d55396b806493982cb1cdb5">nobj</link>&#32;+&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a20adacf20c1411e271fe9be8f7504fa5">ncon</link>))
<anchor xml:id="_mode_8py_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>):
<anchor xml:id="_mode_8py_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[i]&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8eb775858ef6da65ce5d71629503e622">_sample</link>()
<anchor xml:id="_mode_8py_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0dc84c88e30325bfc4bec42ab07cdc51">y</link>[i]&#32;=&#32;np.array([1E99]*(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ad8a88c6e8d55396b806493982cb1cdb5">nobj</link>&#32;+&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a20adacf20c1411e271fe9be8f7504fa5">ncon</link>))
<anchor xml:id="_mode_8py_source_1l00559"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a1893dc839f866ab4d22f7fd13489bf73">00559</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0386b1bcd3af523b5d82f8ba797c729d">vx</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>.copy()
<anchor xml:id="_mode_8py_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a84feff642eb583f7e1174057703a2c82">vp</link>&#32;=&#32;0
<anchor xml:id="_mode_8py_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8824bcdfb8fd5d5e3fc3af5beed5f699">ycon</link>&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_mode_8py_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a56041c14d6c40485bab6484b46b15cc5">eps</link>&#32;=&#32;0
<anchor xml:id="_mode_8py_source_1l00563"/>00563 
<anchor xml:id="_mode_8py_source_1l00564"/>00564 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a3b3a358c6fded3c638706495c88eff1a">minimize_ser</link>(self,&#32;
<anchor xml:id="_mode_8py_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;ArrayLike],&#32;
<anchor xml:id="_mode_8py_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;100000)&#32;-&gt;&#32;Tuple[np.ndarray,&#32;np.ndarray]:
<anchor xml:id="_mode_8py_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00568"/>00568 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;function&#32;using&#32;a&#32;custom&#32;optimization&#32;approach&#32;until&#32;the&#32;maximum&#32;number&#32;of&#32;evaluations</emphasis>
<anchor xml:id="_mode_8py_source_1l00569"/>00569 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;reached.&#32;The&#32;function&#32;utilizes&#32;a&#32;population-based&#32;strategy&#32;for&#32;optimization,&#32;where&#32;potential&#32;solutions</emphasis>
<anchor xml:id="_mode_8py_source_1l00570"/>00570 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;are&#32;evaluated,&#32;and&#32;the&#32;results&#32;are&#32;used&#32;to&#32;iteratively&#32;improve&#32;the&#32;population.</emphasis>
<anchor xml:id="_mode_8py_source_1l00571"/>00571 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00572"/>00572 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00573"/>00573 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable&#32;function&#32;to&#32;be&#32;minimized.&#32;It&#32;takes&#32;an&#32;array-like&#32;input&#32;and&#32;returns&#32;an&#32;array-like&#32;output.</emphasis>
<anchor xml:id="_mode_8py_source_1l00574"/>00574 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional&#32;maximum&#32;number&#32;of&#32;function&#32;evaluations&#32;to&#32;perform.&#32;Defaults&#32;to&#32;100000.</emphasis>
<anchor xml:id="_mode_8py_source_1l00575"/>00575 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00576"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8b928c29cf646933a1821566ec18d73a">00576</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00577"/>00577 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;tuple&#32;consisting&#32;of&#32;the&#32;final&#32;population&#32;of&#32;solutions&#32;(xs)&#32;and&#32;their&#32;corresponding&#32;evaluated</emphasis>
<anchor xml:id="_mode_8py_source_1l00578"/>00578 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;results&#32;(ys).</emphasis>
<anchor xml:id="_mode_8py_source_1l00579"/>00579 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;0
<anchor xml:id="_mode_8py_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;evals&#32;&lt;&#32;max_evaluations:
<anchor xml:id="_mode_8py_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a1893dc839f866ab4d22f7fd13489bf73">ask</link>()
<anchor xml:id="_mode_8py_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;np.array([fun(x)&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;xs])
<anchor xml:id="_mode_8py_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8b928c29cf646933a1821566ec18d73a">tell</link>(ys)
<anchor xml:id="_mode_8py_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;+=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>
<anchor xml:id="_mode_8py_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xs,&#32;ys
<anchor xml:id="_mode_8py_source_1l00587"/>00587 
<anchor xml:id="_mode_8py_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00589"/>00589 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a6f479d982825465b97c89e528351bf36">minimize_par</link>(self,&#32;
<anchor xml:id="_mode_8py_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;ArrayLike],&#32;
<anchor xml:id="_mode_8py_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;100000,&#32;
<anchor xml:id="_mode_8py_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;mp.cpu_count())&#32;-&gt;&#32;Tuple[np.ndarray,&#32;np.ndarray]:
<anchor xml:id="_mode_8py_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00594"/>00594 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Minimizes&#32;the&#32;given&#32;multi-objective&#32;function&#32;in&#32;parallel,&#32;using&#32;a&#32;specified&#32;number</emphasis>
<anchor xml:id="_mode_8py_source_1l00595"/>00595 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;workers&#32;and&#32;an&#32;evaluation&#32;limit.&#32;This&#32;method&#32;leverages&#32;a&#32;parallel&#32;computation</emphasis>
<anchor xml:id="_mode_8py_source_1l00596"/>00596 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;framework&#32;to&#32;evaluate&#32;the&#32;function&#32;across&#32;multiple&#32;populations&#32;simultaneously,</emphasis>
<anchor xml:id="_mode_8py_source_1l00597"/>00597 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;improving&#32;efficiency&#32;for&#32;computationally&#32;expensive&#32;optimization&#32;tasks.</emphasis>
<anchor xml:id="_mode_8py_source_1l00598"/>00598 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00599"/>00599 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00600"/>00600 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;ArrayLike]):&#32;A&#32;function&#32;to&#32;be&#32;minimized.&#32;It&#32;takes</emphasis>
<anchor xml:id="_mode_8py_source_1l00601"/>00601 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;array-like&#32;input&#32;and&#32;returns&#32;an&#32;array-like&#32;output.</emphasis>
<anchor xml:id="_mode_8py_source_1l00602"/>00602 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;The&#32;maximum&#32;number&#32;of&#32;function&#32;evaluations</emphasis>
<anchor xml:id="_mode_8py_source_1l00603"/>00603 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;perform.&#32;Defaults&#32;to&#32;100,000&#32;if&#32;not&#32;specified.</emphasis>
<anchor xml:id="_mode_8py_source_1l00604"/>00604 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;parallel&#32;workers&#32;to&#32;use&#32;for&#32;function</emphasis>
<anchor xml:id="_mode_8py_source_1l00605"/>00605 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluation.&#32;Defaults&#32;to&#32;the&#32;number&#32;of&#32;CPU&#32;cores&#32;available.</emphasis>
<anchor xml:id="_mode_8py_source_1l00606"/>00606 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00607"/>00607 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00608"/>00608 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;np.ndarray]:&#32;A&#32;tuple&#32;containing&#32;the&#32;final&#32;population&#32;of</emphasis>
<anchor xml:id="_mode_8py_source_1l00609"/>00609 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;candidate&#32;solutions&#32;(xs)&#32;and&#32;the&#32;corresponding&#32;function&#32;evaluations&#32;(ys).</emphasis>
<anchor xml:id="_mode_8py_source_1l00610"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a762479149abbac45c113a9baf627a7d0">00610</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00611"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">00611</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fit&#32;=&#32;<link linkend="_classfcmaes_1_1evaluator_1_1parallel__mo">parallel_mo</link>(fun,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ad8a88c6e8d55396b806493982cb1cdb5">nobj</link>&#32;+&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a20adacf20c1411e271fe9be8f7504fa5">ncon</link>,&#32;workers)
<anchor xml:id="_mode_8py_source_1l00612"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0dc84c88e30325bfc4bec42ab07cdc51">00612</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;=&#32;0
<anchor xml:id="_mode_8py_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;evals&#32;&lt;&#32;max_evaluations:
<anchor xml:id="_mode_8py_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a1893dc839f866ab4d22f7fd13489bf73">ask</link>()
<anchor xml:id="_mode_8py_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;fit(xs)
<anchor xml:id="_mode_8py_source_1l00616"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0386b1bcd3af523b5d82f8ba797c729d">00616</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8b928c29cf646933a1821566ec18d73a">tell</link>(ys)
<anchor xml:id="_mode_8py_source_1l00617"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a84feff642eb583f7e1174057703a2c82">00617</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;+=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>
<anchor xml:id="_mode_8py_source_1l00618"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8824bcdfb8fd5d5e3fc3af5beed5f699">00618</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fit.stop()
<anchor xml:id="_mode_8py_source_1l00619"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a56041c14d6c40485bab6484b46b15cc5">00619</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xs,&#32;ys
<anchor xml:id="_mode_8py_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00621"/>00621 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a29791dbcb2e070361529475630de2052">pop_update</link>(self):
<anchor xml:id="_mode_8py_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00623"/>00623 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Updates&#32;the&#32;population&#32;by&#32;performing&#32;non-dominated&#32;sorting,&#32;crowding&#32;distance&#32;sorting,</emphasis>
<anchor xml:id="_mode_8py_source_1l00624"/>00624 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;variation&#32;for&#32;optimization&#32;purposes.&#32;This&#32;function&#32;presorts&#32;objective&#32;values&#32;if</emphasis>
<anchor xml:id="_mode_8py_source_1l00625"/>00625 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;only&#32;one&#32;objective&#32;exists,&#32;reallocates&#32;population&#32;members&#32;based&#32;on&#32;domination&#32;level,</emphasis>
<anchor xml:id="_mode_8py_source_1l00626"/>00626 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;sorts&#32;for&#32;crowding&#32;when&#32;necessary.&#32;It&#32;also&#32;applies&#32;variation&#32;operators&#32;to&#32;update</emphasis>
<anchor xml:id="_mode_8py_source_1l00627"/>00627 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;population&#32;diversity.</emphasis>
<anchor xml:id="_mode_8py_source_1l00628"/>00628 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00629"/>00629 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_mode_8py_source_1l00630"/>00630 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueError:&#32;If&#32;the&#32;total&#32;population&#32;size&#32;exceeds&#32;the&#32;specified&#32;`popsize`.</emphasis>
<anchor xml:id="_mode_8py_source_1l00631"/>00631 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00632"/>00632 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00633"/>00633 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_mode_8py_source_1l00634"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a3b3a358c6fded3c638706495c88eff1a">00634</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00635"/>00635 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00636"/>00636 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_mode_8py_source_1l00637"/>00637 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y0&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0dc84c88e30325bfc4bec42ab07cdc51">y</link>
<anchor xml:id="_mode_8py_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>
<anchor xml:id="_mode_8py_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ad8a88c6e8d55396b806493982cb1cdb5">nobj</link>&#32;==&#32;1:
<anchor xml:id="_mode_8py_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yi&#32;=&#32;np.flip(np.argsort(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0dc84c88e30325bfc4bec42ab07cdc51">y</link>[:,0]))
<anchor xml:id="_mode_8py_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y0&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0dc84c88e30325bfc4bec42ab07cdc51">y</link>[yi]
<anchor xml:id="_mode_8py_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[yi]&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domination,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8824bcdfb8fd5d5e3fc3af5beed5f699">ycon</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a56041c14d6c40485bab6484b46b15cc5">eps</link>&#32;=&#32;<link linkend="_namespacefcmaes_1_1mode_1aee5b0cd4fba6d7edff0afe48a8bc636a">pareto_domination</link>(y0,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ad8a88c6e8d55396b806493982cb1cdb5">nobj</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a20adacf20c1411e271fe9be8f7504fa5">ncon</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8824bcdfb8fd5d5e3fc3af5beed5f699">ycon</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a56041c14d6c40485bab6484b46b15cc5">eps</link>)
<anchor xml:id="_mode_8py_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;[]
<anchor xml:id="_mode_8py_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;[]
<anchor xml:id="_mode_8py_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxdom&#32;=&#32;int(max(domination))
<anchor xml:id="_mode_8py_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;dom&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(maxdom,&#32;-1,&#32;-1):
<anchor xml:id="_mode_8py_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domlevel&#32;=&#32;[p&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(domination))&#32;<emphasis role="keywordflow">if</emphasis>&#32;domination[p]&#32;==&#32;dom]
<anchor xml:id="_mode_8py_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(domlevel)&#32;==&#32;0:
<anchor xml:id="_mode_8py_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_mode_8py_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(x)&#32;+&#32;len(domlevel)&#32;&lt;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>:
<anchor xml:id="_mode_8py_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;whole&#32;level&#32;fits</emphasis>
<anchor xml:id="_mode_8py_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;[*x,&#32;*x0[domlevel]]
<anchor xml:id="_mode_8py_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;[*y,&#32;*y0[domlevel]]
<anchor xml:id="_mode_8py_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:&#32;<emphasis role="comment">#&#32;sort&#32;for&#32;crowding</emphasis>
<anchor xml:id="_mode_8py_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nx&#32;=&#32;x0[domlevel]
<anchor xml:id="_mode_8py_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ny&#32;=&#32;y0[domlevel]&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si&#32;=&#32;[0]
<anchor xml:id="_mode_8py_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(ny)&#32;&gt;&#32;1:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cd&#32;=&#32;<link linkend="_namespacefcmaes_1_1mode_1a0f27ab476c153a96dba3568003ab075a">crowd_dist</link>(ny)
<anchor xml:id="_mode_8py_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si&#32;=&#32;np.flip(np.argsort(cd))
<anchor xml:id="_mode_8py_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;si:
<anchor xml:id="_mode_8py_source_1l00664"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a6f479d982825465b97c89e528351bf36">00664</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(x)&#32;&gt;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>:
<anchor xml:id="_mode_8py_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_mode_8py_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.append(nx[p])
<anchor xml:id="_mode_8py_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y.append(ny[p])
<anchor xml:id="_mode_8py_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>&#32;<emphasis role="comment">#&#32;we&#32;have&#32;filled&#32;popsize&#32;members&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_mode_8py_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[:self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>]&#32;=&#32;x[:self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>]
<anchor xml:id="_mode_8py_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0dc84c88e30325bfc4bec42ab07cdc51">y</link>[:self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>]&#32;=&#32;y[:self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>]
<anchor xml:id="_mode_8py_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a57cf010ab62e26a06988d5f251c62b6e">nsga_update</link>:
<anchor xml:id="_mode_8py_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0386b1bcd3af523b5d82f8ba797c729d">vx</link>&#32;=&#32;<link linkend="_namespacefcmaes_1_1mode_1afba15234474d356adb0ed83aa94f73a6">variation</link>(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[:self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>],&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a58a39c1931ba9e160e53a6a5bb597214">lower</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a49d3d6a1d92e1681a12bb5770a9f6c31">upper</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>,&#32;
<anchor xml:id="_mode_8py_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_c&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a81f79977661c7a4dc09bc7d4e6d891a1">pro_c</link>,&#32;dis_c&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ae93a68cfc0936c62f75b890c9a6b19d1">dis_c</link>,&#32;pro_m&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab1df5291083b159bf2671c038c3e38e1">pro_m</link>,&#32;dis_m&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a2fde79913ea108d6f5b55ef509109ba5">dis_m</link>)&#32;
<anchor xml:id="_mode_8py_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00675"/>00675 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a4e75c17eaa625b8be5fa0ccb0d64bd05">_next_x</link>(self,&#32;p):
<anchor xml:id="_mode_8py_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00677"/>00677 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Determines&#32;the&#32;next&#32;candidate&#32;solution&#32;vector&#32;based&#32;on&#32;the&#32;current&#32;population</emphasis>
<anchor xml:id="_mode_8py_source_1l00678"/>00678 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;DE&#32;(Differential&#32;Evolution)&#32;strategy,&#32;including&#32;NSGA-II&#32;or&#32;standard</emphasis>
<anchor xml:id="_mode_8py_source_1l00679"/>00679 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DE/pareto/1&#32;strategies.</emphasis>
<anchor xml:id="_mode_8py_source_1l00680"/>00680 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00681"/>00681 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;applies&#32;specific&#32;update&#32;strategies&#32;to&#32;generate&#32;a&#32;feasible&#32;vector</emphasis>
<anchor xml:id="_mode_8py_source_1l00682"/>00682 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;follows&#32;the&#32;optimization&#32;constraints&#32;and&#32;the&#32;mutation/crossover</emphasis>
<anchor xml:id="_mode_8py_source_1l00683"/>00683 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mechanism.&#32;Depending&#32;on&#32;the&#32;selected&#32;strategy,&#32;it&#32;either&#32;takes&#32;from&#32;an&#32;elite</emphasis>
<anchor xml:id="_mode_8py_source_1l00684"/>00684 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subset&#32;or&#32;uses&#32;various&#32;sampling&#32;methods&#32;from&#32;the&#32;entire&#32;population.</emphasis>
<anchor xml:id="_mode_8py_source_1l00685"/>00685 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Differentiation&#32;is&#32;performed&#32;using&#32;a&#32;weighted&#32;mutation&#32;process&#32;on&#32;other</emphasis>
<anchor xml:id="_mode_8py_source_1l00686"/>00686 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;population&#32;members.</emphasis>
<anchor xml:id="_mode_8py_source_1l00687"/>00687 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00688"/>00688 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00689"/>00689 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;(int):&#32;Index&#32;of&#32;the&#32;current&#32;individual&#32;in&#32;the&#32;population&#32;that&#32;is&#32;being</emphasis>
<anchor xml:id="_mode_8py_source_1l00690"/>00690 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processed.</emphasis>
<anchor xml:id="_mode_8py_source_1l00691"/>00691 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00692"/>00692 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00693"/>00693 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;A&#32;feasible&#32;vector&#32;based&#32;on&#32;the&#32;mutation&#32;and&#32;crossover</emphasis>
<anchor xml:id="_mode_8py_source_1l00694"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a29791dbcb2e070361529475630de2052">00694</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;operations,&#32;bounded&#32;within&#32;the&#32;defined&#32;lower&#32;and&#32;upper&#32;limits.</emphasis>
<anchor xml:id="_mode_8py_source_1l00695"/>00695 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a57cf010ab62e26a06988d5f251c62b6e">nsga_update</link>:&#32;<emphasis role="comment">#&#32;use&#32;NSGA-II&#32;update&#32;strategy.</emphasis>
<anchor xml:id="_mode_8py_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0386b1bcd3af523b5d82f8ba797c729d">vx</link>[self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a84feff642eb583f7e1174057703a2c82">vp</link>]
<anchor xml:id="_mode_8py_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a84feff642eb583f7e1174057703a2c82">vp</link>&#32;=&#32;(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a84feff642eb583f7e1174057703a2c82">vp</link>&#32;+&#32;1)&#32;%&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>&#32;<emphasis role="comment">#&#32;only&#32;use&#32;the&#32;elite</emphasis>
<anchor xml:id="_mode_8py_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x
<anchor xml:id="_mode_8py_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;use&#32;standard&#32;DE/pareto/1&#32;strategy.</emphasis>
<anchor xml:id="_mode_8py_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;p&#32;==&#32;0:&#32;<emphasis role="comment">#&#32;switch&#32;FR&#32;/&#32;CR&#32;every&#32;generation</emphasis>
<anchor xml:id="_mode_8py_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a2088eee51e00dd89edfdc48c882c99f0">iterations</link>&#32;+=&#32;1
<anchor xml:id="_mode_8py_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a6afc083457c056ab0bf0612e1b71b647">Cr</link>&#32;=&#32;0.5*self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ac76f411eb1bbe4b5ae4b3f9925370096">Cr0</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a2088eee51e00dd89edfdc48c882c99f0">iterations</link>&#32;%&#32;2&#32;==&#32;0&#32;<emphasis role="keywordflow">else</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ac76f411eb1bbe4b5ae4b3f9925370096">Cr0</link>
<anchor xml:id="_mode_8py_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1adf37ab4f0a77200880ad47b5387b9266">F</link>&#32;=&#32;0.5*self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa68beb9a07ba893546bb695759b619f0">F0</link>&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a2088eee51e00dd89edfdc48c882c99f0">iterations</link>&#32;%&#32;2&#32;==&#32;0&#32;<emphasis role="keywordflow">else</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa68beb9a07ba893546bb695759b619f0">F0</link>
<anchor xml:id="_mode_8py_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;<emphasis role="keyword">True</emphasis>:
<anchor xml:id="_mode_8py_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ac5a6b39d9c5736bfb80c744742609f46">pareto_update</link>&#32;&gt;&#32;0:&#32;<emphasis role="comment">#&#32;sample&#32;elite&#32;solutions</emphasis>
<anchor xml:id="_mode_8py_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r1,&#32;r2&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>.integers(0,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>,&#32;2)
<anchor xml:id="_mode_8py_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb&#32;=&#32;int(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>&#32;*&#32;(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>.random()&#32;**&#32;(1.0&#32;+&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ac5a6b39d9c5736bfb80c744742609f46">pareto_update</link>)))
<anchor xml:id="_mode_8py_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;sample&#32;from&#32;whole&#32;population</emphasis>
<anchor xml:id="_mode_8py_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r1,&#32;r2,&#32;rb&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>.integers(0,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6">popsize</link>,&#32;3)
<anchor xml:id="_mode_8py_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;r1&#32;!=&#32;p&#32;<emphasis role="keywordflow">and</emphasis>&#32;r1&#32;!=&#32;rb&#32;<emphasis role="keywordflow">and</emphasis>&#32;r1&#32;!=&#32;r2&#32;<emphasis role="keywordflow">and</emphasis>&#32;r2&#32;!=&#32;rb&#32;\
<anchor xml:id="_mode_8py_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">and</emphasis>&#32;r2&#32;!=&#32;p&#32;<emphasis role="keywordflow">and</emphasis>&#32;rb&#32;!=&#32;p:
<anchor xml:id="_mode_8py_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_mode_8py_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xp&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[p]
<anchor xml:id="_mode_8py_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xb&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[rb]
<anchor xml:id="_mode_8py_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x1&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[r1]
<anchor xml:id="_mode_8py_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x2&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa0b5e8c7849badf7439bb4cd3ab1bfea">x</link>[r2]
<anchor xml:id="_mode_8py_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa3f08e7e3d5e33149762ebf261b6c719">_feasible</link>(xb&#32;+&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1adf37ab4f0a77200880ad47b5387b9266">F</link>&#32;*&#32;(x1&#32;-&#32;x2))
<anchor xml:id="_mode_8py_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>.integers(0,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a5c09cc3172e92b1253fb3e742cf30366">dim</link>)
<anchor xml:id="_mode_8py_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tr&#32;=&#32;np.array(
<anchor xml:id="_mode_8py_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[i&#32;!=&#32;r&#32;<emphasis role="keywordflow">and</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>.random()&#32;&gt;&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a6afc083457c056ab0bf0612e1b71b647">Cr</link>&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a5c09cc3172e92b1253fb3e742cf30366">dim</link>)])&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[tr]&#32;=&#32;xp[tr]&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a523b3fbb4e1cebe83a81574fce168104">modifier</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a523b3fbb4e1cebe83a81574fce168104">modifier</link>(x)&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x.clip(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a58a39c1931ba9e160e53a6a5bb597214">lower</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a49d3d6a1d92e1681a12bb5770a9f6c31">upper</link>)
<anchor xml:id="_mode_8py_source_1l00727"/>00727 &#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00728"/>00728 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8eb775858ef6da65ce5d71629503e622">_sample</link>(self):
<anchor xml:id="_mode_8py_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00730"/>00730 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generates&#32;a&#32;sampled&#32;value&#32;based&#32;on&#32;specific&#32;distribution&#32;boundaries.</emphasis>
<anchor xml:id="_mode_8py_source_1l00731"/>00731 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00732"/>00732 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;the&#32;`upper`&#32;attribute&#32;is&#32;not&#32;defined,&#32;a&#32;normal&#32;distribution&#32;value&#32;is</emphasis>
<anchor xml:id="_mode_8py_source_1l00733"/>00733 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampled.&#32;Otherwise,&#32;a&#32;uniform&#32;distribution&#32;value&#32;is&#32;sampled&#32;between</emphasis>
<anchor xml:id="_mode_8py_source_1l00734"/>00734 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`lower`&#32;and&#32;`upper`&#32;attributes.</emphasis>
<anchor xml:id="_mode_8py_source_1l00735"/>00735 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00736"/>00736 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00737"/>00737 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;A&#32;sampled&#32;value&#32;from&#32;the&#32;appropriate&#32;distribution.</emphasis>
<anchor xml:id="_mode_8py_source_1l00738"/>00738 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a49d3d6a1d92e1681a12bb5770a9f6c31">upper</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>.<link linkend="_evaluator_8h_1a231544ac51b3f9312c104a3b7a3c49a6">normal</link>()
<anchor xml:id="_mode_8py_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>.<link linkend="_evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593">uniform</link>(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a58a39c1931ba9e160e53a6a5bb597214">lower</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a49d3d6a1d92e1681a12bb5770a9f6c31">upper</link>)
<anchor xml:id="_mode_8py_source_1l00743"/>00743 &#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00744"/>00744 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa3f08e7e3d5e33149762ebf261b6c719">_feasible</link>(self,&#32;x):
<anchor xml:id="_mode_8py_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00746"/>00746 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ensures&#32;that&#32;the&#32;input&#32;value&#32;x&#32;is&#32;constrained&#32;within&#32;the&#32;specified&#32;bounds,</emphasis>
<anchor xml:id="_mode_8py_source_1l00747"/>00747 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;bounds&#32;are&#32;defined.&#32;If&#32;an&#32;upper&#32;bound&#32;is&#32;not&#32;specified,&#32;the&#32;original</emphasis>
<anchor xml:id="_mode_8py_source_1l00748"/>00748 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;is&#32;returned.</emphasis>
<anchor xml:id="_mode_8py_source_1l00749"/>00749 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00750"/>00750 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00751"/>00751 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;The&#32;input&#32;value&#32;to&#32;be&#32;checked&#32;or&#32;clipped.</emphasis>
<anchor xml:id="_mode_8py_source_1l00752"/>00752 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00753"/>00753 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00754"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a4e75c17eaa625b8be5fa0ccb0d64bd05">00754</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;input&#32;value&#32;x,&#32;clipped&#32;between&#32;the&#32;lower&#32;and&#32;upper&#32;bounds&#32;if</emphasis>
<anchor xml:id="_mode_8py_source_1l00755"/>00755 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;are&#32;defined,&#32;or&#32;the&#32;original&#32;value&#32;if&#32;no&#32;bounds&#32;are&#32;present.</emphasis>
<anchor xml:id="_mode_8py_source_1l00756"/>00756 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a49d3d6a1d92e1681a12bb5770a9f6c31">upper</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x
<anchor xml:id="_mode_8py_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.clip(x,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a58a39c1931ba9e160e53a6a5bb597214">lower</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a49d3d6a1d92e1681a12bb5770a9f6c31">upper</link>)
<anchor xml:id="_mode_8py_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00762"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a6afc083457c056ab0bf0612e1b71b647">00762</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;default&#32;modifier&#32;for&#32;integer&#32;variables</emphasis>
<anchor xml:id="_mode_8py_source_1l00763"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1adf37ab4f0a77200880ad47b5387b9266">00763</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab6f842a65bbcbab7bc6821c25737d0aa">_modifier</link>(self,&#32;x):
<anchor xml:id="_mode_8py_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00765"/>00765 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Modifies&#32;the&#32;given&#32;input&#32;array&#32;by&#32;mutating&#32;certain&#32;integer&#32;variables&#32;based&#32;on</emphasis>
<anchor xml:id="_mode_8py_source_1l00766"/>00766 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;specified&#32;mutation&#32;probability.</emphasis>
<anchor xml:id="_mode_8py_source_1l00767"/>00767 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00768"/>00768 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00769"/>00769 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;(np.ndarray):&#32;The&#32;input&#32;array&#32;to&#32;be&#32;modified.</emphasis>
<anchor xml:id="_mode_8py_source_1l00770"/>00770 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00771"/>00771 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00772"/>00772 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;The&#32;modified&#32;array&#32;after&#32;applying&#32;integer&#32;mutations.</emphasis>
<anchor xml:id="_mode_8py_source_1l00773"/>00773 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_ints&#32;=&#32;x[self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1af3cea564c07f1d434bba95c39afc165c">ints</link>]
<anchor xml:id="_mode_8py_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n_ints&#32;=&#32;len(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1af3cea564c07f1d434bba95c39afc165c">ints</link>)
<anchor xml:id="_mode_8py_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lb&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a58a39c1931ba9e160e53a6a5bb597214">lower</link>[self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1af3cea564c07f1d434bba95c39afc165c">ints</link>]
<anchor xml:id="_mode_8py_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ub&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a49d3d6a1d92e1681a12bb5770a9f6c31">upper</link>[self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1af3cea564c07f1d434bba95c39afc165c">ints</link>]
<anchor xml:id="_mode_8py_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to_mutate&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>.<link linkend="_evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593">uniform</link>(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a18459596315b3de8f34a62377c7b006c">min_mutate</link>,&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a7151073081d8ed1d9309c9f44870d035">max_mutate</link>)
<anchor xml:id="_mode_8py_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;mututate&#32;some&#32;integer&#32;variables</emphasis>
<anchor xml:id="_mode_8py_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x_ints&#32;=&#32;np.array([x&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>.random()&#32;&gt;&#32;to_mutate/n_ints&#32;<emphasis role="keywordflow">else</emphasis>&#32;
<anchor xml:id="_mode_8py_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int(self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a76afedce7a0358acd6633c6b6c6241e1">rg</link>.<link linkend="_evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593">uniform</link>(lb[i],&#32;ub[i]))
<anchor xml:id="_mode_8py_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i,&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;enumerate(x_ints)])
<anchor xml:id="_mode_8py_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00784"/>00784 &#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00785"/>00785 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aefce54c9125b2799dd00564d8b32a654">_is_dominated</link>(self,&#32;y,&#32;p):
<anchor xml:id="_mode_8py_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00787"/>00787 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Determines&#32;whether&#32;a&#32;given&#32;solution&#32;vector&#32;is&#32;dominated&#32;by&#32;another&#32;solution</emphasis>
<anchor xml:id="_mode_8py_source_1l00788"/>00788 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&#32;in&#32;a&#32;multi-objective&#32;optimization&#32;context.</emphasis>
<anchor xml:id="_mode_8py_source_1l00789"/>00789 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00790"/>00790 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00791"/>00791 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y:&#32;A&#32;sequence&#32;representing&#32;the&#32;solution&#32;vector&#32;to&#32;be&#32;checked.</emphasis>
<anchor xml:id="_mode_8py_source_1l00792"/>00792 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p:&#32;An&#32;integer&#32;index&#32;identifying&#32;the&#32;row&#32;number&#32;of&#32;the&#32;comparison&#32;vector</emphasis>
<anchor xml:id="_mode_8py_source_1l00793"/>00793 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;multi-objective&#32;dataset.</emphasis>
<anchor xml:id="_mode_8py_source_1l00794"/>00794 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00795"/>00795 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00796"/>00796 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;True&#32;if&#32;the&#32;solution&#32;vector&#32;`y`&#32;is&#32;dominated&#32;by&#32;the&#32;vector&#32;located</emphasis>
<anchor xml:id="_mode_8py_source_1l00797"/>00797 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;at&#32;index&#32;`p`&#32;in&#32;the&#32;dataset,&#32;otherwise&#32;False.</emphasis>
<anchor xml:id="_mode_8py_source_1l00798"/>00798 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00799"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a8eb775858ef6da65ce5d71629503e622">00799</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.all(np.fromiter((y[i]&#32;&gt;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1a0dc84c88e30325bfc4bec42ab07cdc51">y</link>[p,&#32;i]&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(y))),&#32;dtype=bool))
<anchor xml:id="_mode_8py_source_1l00800"/>00800 
<anchor xml:id="_mode_8py_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00802"/>00802 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1a7437cac94470387e12001d7f424393af">_check_bounds</link>(bounds,&#32;dim):
<anchor xml:id="_mode_8py_source_1l00803"/>00803 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00804"/>00804 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Validates&#32;and&#32;processes&#32;the&#32;provided&#32;bounds&#32;and&#32;dimension&#32;information&#32;to&#32;ensure&#32;that</emphasis>
<anchor xml:id="_mode_8py_source_1l00805"/>00805 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;either&#32;valid&#32;bounds&#32;or&#32;dimension&#32;are&#32;available.&#32;Converts&#32;bounds&#32;to&#32;Numpy&#32;arrays&#32;if&#32;they</emphasis>
<anchor xml:id="_mode_8py_source_1l00806"/>00806 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;are&#32;provided,&#32;and&#32;determines&#32;the&#32;dimensionality&#32;based&#32;on&#32;the&#32;input.</emphasis>
<anchor xml:id="_mode_8py_source_1l00807"/>00807 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00808"/>00808 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00809"/>00809 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Object&#32;that&#32;defines&#32;lower&#32;and&#32;upper&#32;bounds.&#32;If&#32;provided,&#32;its&#32;&apos;lb&apos;&#32;and&#32;&apos;ub&apos;</emphasis>
<anchor xml:id="_mode_8py_source_1l00810"/>00810 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;attributes&#32;are&#32;processed.</emphasis>
<anchor xml:id="_mode_8py_source_1l00811"/>00811 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim:&#32;An&#32;integer&#32;representing&#32;the&#32;dimensionality&#32;of&#32;the&#32;data&#32;or&#32;the&#32;length&#32;of&#32;bounds.</emphasis>
<anchor xml:id="_mode_8py_source_1l00812"/>00812 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00813"/>00813 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00814"/>00814 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_mode_8py_source_1l00815"/>00815 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;int:&#32;The&#32;dimensionality&#32;derived&#32;from&#32;bounds&#32;or&#32;directly&#32;from&#32;the&#32;`dim`.</emphasis>
<anchor xml:id="_mode_8py_source_1l00816"/>00816 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;numpy.ndarray&#32;or&#32;None:&#32;Lower&#32;bounds&#32;as&#32;a&#32;NumPy&#32;array,&#32;or&#32;None&#32;if&#32;not&#32;provided.</emphasis>
<anchor xml:id="_mode_8py_source_1l00817"/>00817 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;numpy.ndarray&#32;or&#32;None:&#32;Upper&#32;bounds&#32;as&#32;a&#32;NumPy&#32;array,&#32;or&#32;None&#32;if&#32;not&#32;provided.</emphasis>
<anchor xml:id="_mode_8py_source_1l00818"/>00818 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00819"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aa3f08e7e3d5e33149762ebf261b6c719">00819</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_mode_8py_source_1l00820"/>00820 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueError:&#32;If&#32;both&#32;`dim`&#32;and&#32;`bounds`&#32;are&#32;None.</emphasis>
<anchor xml:id="_mode_8py_source_1l00821"/>00821 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00822"/>00822 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;bounds&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">and</emphasis>&#32;dim&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;ValueError(<emphasis role="stringliteral">&apos;either&#32;dim&#32;or&#32;bounds&#32;need&#32;to&#32;be&#32;defined&apos;</emphasis>)
<anchor xml:id="_mode_8py_source_1l00824"/>00824 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;bounds&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_mode_8py_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dim,&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_mode_8py_source_1l00826"/>00826 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len(bounds.ub),&#32;np.asarray(bounds.lb),&#32;np.asarray(bounds.ub)
<anchor xml:id="_mode_8py_source_1l00828"/>00828 
<anchor xml:id="_mode_8py_source_1l00829"/>00829 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1a4421a58b8727b0b72ab4aaff9f3494b3">_filter</link>(x,&#32;y):
<anchor xml:id="_mode_8py_source_1l00830"/>00830 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00831"/>00831 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Filters&#32;and&#32;sorts&#32;input&#32;arrays&#32;based&#32;on&#32;specific&#32;conditions.</emphasis>
<anchor xml:id="_mode_8py_source_1l00832"/>00832 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00833"/>00833 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;processes&#32;two&#32;input&#32;arrays&#32;`x`&#32;and&#32;`y`.&#32;It&#32;first&#32;determines&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l00834"/>00834 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;maximum&#32;value&#32;along&#32;the&#32;first&#32;axis&#32;of&#32;`y`,&#32;sorts&#32;both&#32;arrays&#32;based&#32;on&#32;this</emphasis>
<anchor xml:id="_mode_8py_source_1l00835"/>00835 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;criterion,&#32;and&#32;then&#32;applies&#32;additional&#32;filtering&#32;conditions&#32;on&#32;`y`&#32;to&#32;exclude</emphasis>
<anchor xml:id="_mode_8py_source_1l00836"/>00836 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;specific&#32;rows.</emphasis>
<anchor xml:id="_mode_8py_source_1l00837"/>00837 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00838"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1ab6f842a65bbcbab7bc6821c25737d0aa">00838</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00839"/>00839 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;The&#32;input&#32;array&#32;to&#32;be&#32;processed&#32;and&#32;filtered.</emphasis>
<anchor xml:id="_mode_8py_source_1l00840"/>00840 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y:&#32;A&#32;2D&#32;array&#32;whose&#32;maximum&#32;values&#32;along&#32;the&#32;first&#32;axis&#32;determine&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l00841"/>00841 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sorting&#32;order,&#32;and&#32;which&#32;is&#32;filtered&#32;according&#32;to&#32;additional</emphasis>
<anchor xml:id="_mode_8py_source_1l00842"/>00842 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;conditions.</emphasis>
<anchor xml:id="_mode_8py_source_1l00843"/>00843 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00844"/>00844 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00845"/>00845 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_mode_8py_source_1l00846"/>00846 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;filtered&#32;and&#32;sorted&#32;version&#32;of&#32;the&#32;input&#32;array&#32;`x`.</emphasis>
<anchor xml:id="_mode_8py_source_1l00847"/>00847 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;filtered&#32;and&#32;sorted&#32;version&#32;of&#32;the&#32;array&#32;`y`.</emphasis>
<anchor xml:id="_mode_8py_source_1l00848"/>00848 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00849"/>00849 &#32;&#32;&#32;&#32;ym&#32;=&#32;np.amax(y,axis=1)
<anchor xml:id="_mode_8py_source_1l00850"/>00850 &#32;&#32;&#32;&#32;sorted&#32;=&#32;np.argsort(ym)
<anchor xml:id="_mode_8py_source_1l00851"/>00851 &#32;&#32;&#32;&#32;x&#32;=&#32;x[sorted]
<anchor xml:id="_mode_8py_source_1l00852"/>00852 &#32;&#32;&#32;&#32;y&#32;=&#32;y[sorted]
<anchor xml:id="_mode_8py_source_1l00853"/>00853 &#32;&#32;&#32;&#32;y&#32;=&#32;np.array([yi&#32;<emphasis role="keywordflow">for</emphasis>&#32;yi&#32;<emphasis role="keywordflow">in</emphasis>&#32;y&#32;<emphasis role="keywordflow">if</emphasis>&#32;yi[0]&#32;&lt;&#32;1E99])
<anchor xml:id="_mode_8py_source_1l00854"/>00854 &#32;&#32;&#32;&#32;x&#32;=&#32;np.array(x[:len(y)])
<anchor xml:id="_mode_8py_source_1l00855"/>00855 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x,y
<anchor xml:id="_mode_8py_source_1l00856"/>00856 
<anchor xml:id="_mode_8py_source_1l00857"/>00857 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1a64da91b9fe11c4db2c528851fe65f4e4">objranks</link>(objs):
<anchor xml:id="_mode_8py_source_1l00858"/>00858 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00859"/>00859 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Computes&#32;the&#32;rank&#32;of&#32;objects&#32;based&#32;on&#32;their&#32;sum&#32;of&#32;ranks&#32;across&#32;all&#32;columns.</emphasis>
<anchor xml:id="_mode_8py_source_1l00860"/>00860 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00861"/>00861 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;calculates&#32;the&#32;rank&#32;of&#32;each&#32;object&#32;in&#32;each&#32;column,&#32;then&#32;sums&#32;these</emphasis>
<anchor xml:id="_mode_8py_source_1l00862"/>00862 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;ranks&#32;across&#32;the&#32;columns&#32;to&#32;produce&#32;a&#32;single&#32;rank&#32;value&#32;for&#32;each&#32;object.</emphasis>
<anchor xml:id="_mode_8py_source_1l00863"/>00863 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00864"/>00864 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00865"/><link linkend="_classfcmaes_1_1mode_1_1_m_o_d_e_1aefce54c9125b2799dd00564d8b32a654">00865</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objs&#32;(numpy.ndarray):&#32;A&#32;2-dimensional&#32;numpy&#32;array&#32;where&#32;each&#32;row&#32;represents</emphasis>
<anchor xml:id="_mode_8py_source_1l00866"/>00866 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;object,&#32;and&#32;each&#32;column&#32;represents&#32;a&#32;category&#32;or&#32;feature.</emphasis>
<anchor xml:id="_mode_8py_source_1l00867"/>00867 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00868"/>00868 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00869"/>00869 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;A&#32;1-dimensional&#32;numpy&#32;array&#32;containing&#32;the&#32;computed&#32;rank</emphasis>
<anchor xml:id="_mode_8py_source_1l00870"/>00870 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;each&#32;object&#32;based&#32;on&#32;the&#32;sum&#32;of&#32;its&#32;ranks&#32;across&#32;all&#32;columns.</emphasis>
<anchor xml:id="_mode_8py_source_1l00871"/>00871 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00872"/>00872 &#32;&#32;&#32;&#32;ci&#32;=&#32;objs.argsort(axis=0)
<anchor xml:id="_mode_8py_source_1l00873"/>00873 &#32;&#32;&#32;&#32;rank&#32;=&#32;np.empty_like(ci)
<anchor xml:id="_mode_8py_source_1l00874"/>00874 &#32;&#32;&#32;&#32;ar&#32;=&#32;np.arange(objs.shape[0])
<anchor xml:id="_mode_8py_source_1l00875"/>00875 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(objs.shape[1]):&#32;
<anchor xml:id="_mode_8py_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rank[ci[:,i],&#32;i]&#32;=&#32;ar&#32;
<anchor xml:id="_mode_8py_source_1l00877"/>00877 &#32;&#32;&#32;&#32;rank&#32;=&#32;np.sum(rank,&#32;axis=1)
<anchor xml:id="_mode_8py_source_1l00878"/>00878 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rank
<anchor xml:id="_mode_8py_source_1l00879"/>00879 
<anchor xml:id="_mode_8py_source_1l00880"/>00880 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1af072da864e0f91afc47942de9a8901a5">ranks</link>(cons,&#32;feasible,&#32;eps):
<anchor xml:id="_mode_8py_source_1l00881"/>00881 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00882"/>00882 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Computes&#32;the&#32;ranks&#32;of&#32;constraint&#32;values,&#32;adjusted&#32;by&#32;their&#32;feasibility&#32;and&#32;scaled&#32;by&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l00883"/>00883 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;fraction&#32;of&#32;violations&#32;for&#32;each&#32;constraint.</emphasis>
<anchor xml:id="_mode_8py_source_1l00884"/>00884 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00885"/>00885 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00886"/>00886 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cons&#32;(numpy.ndarray):&#32;A&#32;2D&#32;array&#32;of&#32;constraint&#32;values&#32;where&#32;rows&#32;represent&#32;different</emphasis>
<anchor xml:id="_mode_8py_source_1l00887"/>00887 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samples&#32;and&#32;columns&#32;represent&#32;different&#32;constraints.</emphasis>
<anchor xml:id="_mode_8py_source_1l00888"/>00888 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;feasible&#32;(numpy.ndarray):&#32;A&#32;1D&#32;boolean&#32;array&#32;indicating&#32;whether&#32;each&#32;row&#32;(sample)&#32;in</emphasis>
<anchor xml:id="_mode_8py_source_1l00889"/>00889 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`cons`&#32;is&#32;feasible&#32;(True)&#32;or&#32;not&#32;(False).</emphasis>
<anchor xml:id="_mode_8py_source_1l00890"/><link linkend="_namespacefcmaes_1_1mode_1a7437cac94470387e12001d7f424393af">00890</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps&#32;(float):&#32;A&#32;scalar&#32;threshold&#32;value&#32;used&#32;to&#32;determine&#32;the&#32;violation&#32;of&#32;constraints.</emphasis>
<anchor xml:id="_mode_8py_source_1l00891"/>00891 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00892"/>00892 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00893"/>00893 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;A&#32;1D&#32;array&#32;that&#32;contains&#32;the&#32;computed&#32;rank&#32;for&#32;each&#32;sample&#32;in&#32;`cons`.</emphasis>
<anchor xml:id="_mode_8py_source_1l00894"/>00894 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00895"/>00895 &#32;&#32;&#32;&#32;ci&#32;=&#32;cons.argsort(axis=0)
<anchor xml:id="_mode_8py_source_1l00896"/>00896 &#32;&#32;&#32;&#32;rank&#32;=&#32;np.empty_like(ci)
<anchor xml:id="_mode_8py_source_1l00897"/>00897 &#32;&#32;&#32;&#32;ar&#32;=&#32;np.arange(cons.shape[0])
<anchor xml:id="_mode_8py_source_1l00898"/>00898 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(cons.shape[1]):&#32;
<anchor xml:id="_mode_8py_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rank[ci[:,i],&#32;i]&#32;=&#32;ar
<anchor xml:id="_mode_8py_source_1l00900"/>00900 &#32;&#32;&#32;&#32;rank[feasible]&#32;=&#32;0
<anchor xml:id="_mode_8py_source_1l00901"/>00901 &#32;&#32;&#32;&#32;alpha&#32;=&#32;np.sum(np.greater(cons,&#32;eps),&#32;axis=1)&#32;/&#32;cons.shape[1]&#32;<emphasis role="comment">#&#32;violations</emphasis>
<anchor xml:id="_mode_8py_source_1l00902"/>00902 &#32;&#32;&#32;&#32;alpha&#32;=&#32;np.tile(alpha,&#32;(cons.shape[1],1)).T
<anchor xml:id="_mode_8py_source_1l00903"/>00903 &#32;&#32;&#32;&#32;rank&#32;=&#32;rank*alpha
<anchor xml:id="_mode_8py_source_1l00904"/>00904 &#32;&#32;&#32;&#32;rank&#32;=&#32;np.sum(rank,&#32;axis=1)
<anchor xml:id="_mode_8py_source_1l00905"/>00905 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rank
<anchor xml:id="_mode_8py_source_1l00906"/>00906 
<anchor xml:id="_mode_8py_source_1l00907"/>00907 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1aa9045b5ff7e2451881af650c926cc04c">get_valid</link>(xs,&#32;ys,&#32;nobj):
<anchor xml:id="_mode_8py_source_1l00908"/>00908 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00909"/>00909 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Filters&#32;the&#32;input&#32;data&#32;based&#32;on&#32;a&#32;validity&#32;condition&#32;and&#32;returns&#32;the&#32;valid&#32;elements.</emphasis>
<anchor xml:id="_mode_8py_source_1l00910"/>00910 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00911"/>00911 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00912"/>00912 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs:&#32;Array-like&#32;structure&#32;containing&#32;input&#32;data.</emphasis>
<anchor xml:id="_mode_8py_source_1l00913"/>00913 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys:&#32;Array-like&#32;structure,&#32;typically&#32;associated&#32;with&#32;`xs`,&#32;used&#32;for&#32;the&#32;validity&#32;check.</emphasis>
<anchor xml:id="_mode_8py_source_1l00914"/>00914 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;Integer&#32;specifying&#32;the&#32;number&#32;of&#32;columns&#32;to&#32;skip&#32;in&#32;`ys`&#32;for&#32;the&#32;validity&#32;check.</emphasis>
<anchor xml:id="_mode_8py_source_1l00915"/>00915 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00916"/>00916 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00917"/>00917 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple&#32;containing:</emphasis>
<anchor xml:id="_mode_8py_source_1l00918"/>00918 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;filtered&#32;elements&#32;of&#32;`xs`&#32;that&#32;satisfy&#32;the&#32;validity&#32;condition.</emphasis>
<anchor xml:id="_mode_8py_source_1l00919"/><link linkend="_namespacefcmaes_1_1mode_1a4421a58b8727b0b72ab4aaff9f3494b3">00919</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;filtered&#32;elements&#32;of&#32;`ys`&#32;that&#32;align&#32;with&#32;the&#32;valid&#32;`xs`.</emphasis>
<anchor xml:id="_mode_8py_source_1l00920"/>00920 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00921"/>00921 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00922"/>00922 &#32;&#32;&#32;&#32;valid&#32;=&#32;(ys.T[nobj:].T&#32;&lt;=&#32;0).all(axis=1)
<anchor xml:id="_mode_8py_source_1l00923"/>00923 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xs[valid],&#32;ys[valid]
<anchor xml:id="_mode_8py_source_1l00924"/>00924 
<anchor xml:id="_mode_8py_source_1l00925"/>00925 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1a4648393e4988cb88b634bc6969891383">pareto_sort</link>(x0,&#32;y0,&#32;nobj,&#32;ncon):
<anchor xml:id="_mode_8py_source_1l00926"/>00926 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00927"/>00927 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Sorts&#32;solutions&#32;based&#32;on&#32;Pareto&#32;dominance&#32;and&#32;crowding&#32;distance.</emphasis>
<anchor xml:id="_mode_8py_source_1l00928"/>00928 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00929"/>00929 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;sorts&#32;a&#32;given&#32;set&#32;of&#32;solutions&#32;into&#32;levels&#32;based&#32;on&#32;Pareto</emphasis>
<anchor xml:id="_mode_8py_source_1l00930"/>00930 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;dominance.&#32;Within&#32;each&#32;level,&#32;solutions&#32;are&#32;further&#32;sorted&#32;by&#32;crowding</emphasis>
<anchor xml:id="_mode_8py_source_1l00931"/>00931 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;distance&#32;to&#32;ensure&#32;diversity.&#32;The&#32;input&#32;arrays&#32;`x0`&#32;and&#32;`y0`&#32;are&#32;reordered</emphasis>
<anchor xml:id="_mode_8py_source_1l00932"/>00932 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;accordingly,&#32;and&#32;the&#32;resulting&#32;sorted&#32;arrays&#32;are&#32;returned.</emphasis>
<anchor xml:id="_mode_8py_source_1l00933"/>00933 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00934"/>00934 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00935"/>00935 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0:&#32;Array-like&#32;structure&#32;representing&#32;the&#32;original&#32;decision&#32;variables&#32;of</emphasis>
<anchor xml:id="_mode_8py_source_1l00936"/>00936 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;solutions.</emphasis>
<anchor xml:id="_mode_8py_source_1l00937"/>00937 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y0:&#32;Array-like&#32;structure&#32;representing&#32;the&#32;objectives&#32;of&#32;the&#32;solutions.</emphasis>
<anchor xml:id="_mode_8py_source_1l00938"/>00938 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;Integer&#32;specifying&#32;the&#32;number&#32;of&#32;objectives&#32;for&#32;each&#32;solution.</emphasis>
<anchor xml:id="_mode_8py_source_1l00939"/>00939 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncon:&#32;Integer&#32;specifying&#32;the&#32;number&#32;of&#32;constraints&#32;for&#32;each&#32;solution.</emphasis>
<anchor xml:id="_mode_8py_source_1l00940"/>00940 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00941"/>00941 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00942"/><link linkend="_namespacefcmaes_1_1mode_1a64da91b9fe11c4db2c528851fe65f4e4">00942</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple&#32;of&#32;two&#32;NumPy&#32;arrays:</emphasis>
<anchor xml:id="_mode_8py_source_1l00943"/>00943 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;reordered&#32;`x0`&#32;array&#32;based&#32;on&#32;Pareto&#32;dominance&#32;and&#32;crowding</emphasis>
<anchor xml:id="_mode_8py_source_1l00944"/>00944 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance.</emphasis>
<anchor xml:id="_mode_8py_source_1l00945"/>00945 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;The&#32;reordered&#32;`y0`&#32;array&#32;based&#32;on&#32;Pareto&#32;dominance&#32;and&#32;crowding</emphasis>
<anchor xml:id="_mode_8py_source_1l00946"/>00946 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance.</emphasis>
<anchor xml:id="_mode_8py_source_1l00947"/>00947 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00948"/>00948 &#32;&#32;&#32;&#32;domination,&#32;_,&#32;_&#32;=&#32;<link linkend="_namespacefcmaes_1_1mode_1aee5b0cd4fba6d7edff0afe48a8bc636a">pareto_domination</link>(y0,&#32;nobj,&#32;ncon)
<anchor xml:id="_mode_8py_source_1l00949"/>00949 &#32;&#32;&#32;&#32;x&#32;=&#32;[]
<anchor xml:id="_mode_8py_source_1l00950"/>00950 &#32;&#32;&#32;&#32;y&#32;=&#32;[]
<anchor xml:id="_mode_8py_source_1l00951"/>00951 &#32;&#32;&#32;&#32;maxdom&#32;=&#32;int(max(domination))
<anchor xml:id="_mode_8py_source_1l00952"/>00952 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;dom&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(maxdom,&#32;-1,&#32;-1):
<anchor xml:id="_mode_8py_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domlevel&#32;=&#32;[p&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(domination))&#32;<emphasis role="keywordflow">if</emphasis>&#32;domination[p]&#32;==&#32;dom]
<anchor xml:id="_mode_8py_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(domlevel)&#32;==&#32;0:
<anchor xml:id="_mode_8py_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_mode_8py_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nx&#32;=&#32;x0[domlevel]
<anchor xml:id="_mode_8py_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ny&#32;=&#32;y0[domlevel]&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si&#32;=&#32;[0]
<anchor xml:id="_mode_8py_source_1l00959"/>00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(ny)&#32;&gt;&#32;1:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cd&#32;=&#32;<link linkend="_namespacefcmaes_1_1mode_1a0f27ab476c153a96dba3568003ab075a">crowd_dist</link>(ny)
<anchor xml:id="_mode_8py_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si&#32;=&#32;np.flip(np.argsort(cd))
<anchor xml:id="_mode_8py_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;si:
<anchor xml:id="_mode_8py_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.append(nx[p])
<anchor xml:id="_mode_8py_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y.append(ny[p])&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l00965"/><link linkend="_namespacefcmaes_1_1mode_1af072da864e0f91afc47942de9a8901a5">00965</link> &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array(x),&#32;np.array(y)
<anchor xml:id="_mode_8py_source_1l00966"/>00966 
<anchor xml:id="_mode_8py_source_1l00967"/>00967 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1aee5b0cd4fba6d7edff0afe48a8bc636a">pareto_domination</link>(ys,&#32;nobj,&#32;ncon,&#32;last_ycon&#32;=&#32;None,&#32;last_eps&#32;=&#32;0):
<anchor xml:id="_mode_8py_source_1l00968"/>00968 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00969"/>00969 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Determines&#32;Pareto&#32;domination&#32;levels&#32;for&#32;a&#32;set&#32;of&#32;solutions&#32;considering&#32;objectives</emphasis>
<anchor xml:id="_mode_8py_source_1l00970"/>00970 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;constraint&#32;violations.&#32;Divides&#32;solutions&#32;into&#32;feasible&#32;and&#32;infeasible&#32;sets,</emphasis>
<anchor xml:id="_mode_8py_source_1l00971"/>00971 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;calculates&#32;their&#32;dominance&#32;levels&#32;based&#32;on&#32;objectives&#32;and&#32;constraints,&#32;and</emphasis>
<anchor xml:id="_mode_8py_source_1l00972"/>00972 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;returns&#32;the&#32;relevant&#32;rankings.</emphasis>
<anchor xml:id="_mode_8py_source_1l00973"/>00973 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00974"/>00974 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l00975"/>00975 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;(list&#32;or&#32;np.ndarray):&#32;A&#32;list&#32;or&#32;array&#32;of&#32;solutions&#32;where&#32;each&#32;solution</emphasis>
<anchor xml:id="_mode_8py_source_1l00976"/>00976 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contains&#32;concatenated&#32;values&#32;of&#32;objectives&#32;and&#32;constraints.</emphasis>
<anchor xml:id="_mode_8py_source_1l00977"/>00977 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;Number&#32;of&#32;objectives&#32;in&#32;each&#32;solution.</emphasis>
<anchor xml:id="_mode_8py_source_1l00978"/>00978 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncon&#32;(int):&#32;Number&#32;of&#32;constraints&#32;in&#32;each&#32;solution.</emphasis>
<anchor xml:id="_mode_8py_source_1l00979"/>00979 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;last_ycon&#32;(np.ndarray,&#32;optional):&#32;Array&#32;representing&#32;constraint&#32;violations&#32;used</emphasis>
<anchor xml:id="_mode_8py_source_1l00980"/>00980 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;previous&#32;iteration&#32;for&#32;adjusting&#32;tolerance&#32;to&#32;small&#32;violations.</emphasis>
<anchor xml:id="_mode_8py_source_1l00981"/>00981 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_mode_8py_source_1l00982"/>00982 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;last_eps&#32;(float,&#32;optional):&#32;Tolerance&#32;level&#32;for&#32;constraint&#32;violations&#32;in&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l00983"/>00983 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;last&#32;iteration.&#32;Defaults&#32;to&#32;0.</emphasis>
<anchor xml:id="_mode_8py_source_1l00984"/>00984 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00985"/>00985 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l00986"/>00986 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tuple:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_mode_8py_source_1l00987"/>00987 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;np.ndarray:&#32;Array&#32;of&#32;Pareto&#32;domination&#32;levels&#32;for&#32;all&#32;solutions.</emphasis>
<anchor xml:id="_mode_8py_source_1l00988"/>00988 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;np.ndarray:&#32;Array&#32;of&#32;adjusted&#32;constraint&#32;violations&#32;for&#32;each&#32;solution.</emphasis>
<anchor xml:id="_mode_8py_source_1l00989"/>00989 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;float:&#32;Adjusted&#32;tolerance&#32;for&#32;constraint&#32;violations.</emphasis>
<anchor xml:id="_mode_8py_source_1l00990"/>00990 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l00991"/>00991 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_mode_8py_source_1l00992"/><link linkend="_namespacefcmaes_1_1mode_1aa9045b5ff7e2451881af650c926cc04c">00992</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_mode_8py_source_1l00993"/>00993 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l00994"/>00994 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;ncon&#32;==&#32;0:
<anchor xml:id="_mode_8py_source_1l00995"/>00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacefcmaes_1_1mode_1a2570992dd7d42219e4b1381adff7a710">pareto_levels</link>(ys),&#32;<emphasis role="keywordtype">None</emphasis>,&#32;0
<anchor xml:id="_mode_8py_source_1l00996"/>00996 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l00997"/>00997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps&#32;=&#32;0&#32;<emphasis role="comment">#&#32;adjust&#32;tolerance&#32;to&#32;small&#32;constraint&#32;violations</emphasis>
<anchor xml:id="_mode_8py_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;last_ycon&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">and</emphasis>&#32;np.amax(last_ycon)&#32;&lt;&#32;1E90:
<anchor xml:id="_mode_8py_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps&#32;=&#32;0.5*(last_eps&#32;+&#32;0.5*np.mean(last_ycon,&#32;axis=0))
<anchor xml:id="_mode_8py_source_1l01000"/>01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;np.amax(eps)&#32;&lt;&#32;1E-8:&#32;<emphasis role="comment">#&#32;ignore&#32;small&#32;eps</emphasis>
<anchor xml:id="_mode_8py_source_1l01001"/>01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps&#32;=&#32;0
<anchor xml:id="_mode_8py_source_1l01002"/>01002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yobj&#32;=&#32;np.array([y[:nobj]&#32;<emphasis role="keywordflow">for</emphasis>&#32;y&#32;<emphasis role="keywordflow">in</emphasis>&#32;ys])
<anchor xml:id="_mode_8py_source_1l01004"/>01004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ycon&#32;=&#32;np.array([np.maximum(y[-ncon:],&#32;0)&#32;<emphasis role="keywordflow">for</emphasis>&#32;y&#32;<emphasis role="keywordflow">in</emphasis>&#32;ys])&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01005"/>01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popn&#32;=&#32;len(ys)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;feasible&#32;=&#32;np.less_equal(ycon,&#32;eps).all(axis=1)
<anchor xml:id="_mode_8py_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;csum&#32;=&#32;<link linkend="_namespacefcmaes_1_1mode_1af072da864e0f91afc47942de9a8901a5">ranks</link>(ycon,&#32;feasible,&#32;eps)
<anchor xml:id="_mode_8py_source_1l01009"/>01009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;sum(feasible)&#32;&gt;&#32;0:
<anchor xml:id="_mode_8py_source_1l01010"/>01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;csum&#32;+=&#32;<link linkend="_namespacefcmaes_1_1mode_1a64da91b9fe11c4db2c528851fe65f4e4">objranks</link>(yobj)
<anchor xml:id="_mode_8py_source_1l01011"/>01011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01012"/>01012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ci&#32;=&#32;np.argsort(csum)
<anchor xml:id="_mode_8py_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domination&#32;=&#32;np.zeros(popn)
<anchor xml:id="_mode_8py_source_1l01014"/>01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;first&#32;pareto&#32;front&#32;of&#32;feasible&#32;solutions</emphasis>
<anchor xml:id="_mode_8py_source_1l01015"/>01015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cy&#32;=&#32;np.fromiter((i&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;ci&#32;<emphasis role="keywordflow">if</emphasis>&#32;feasible[i]),&#32;dtype=int)
<anchor xml:id="_mode_8py_source_1l01016"/>01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(cy)&#32;&gt;&#32;0:
<anchor xml:id="_mode_8py_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ypar&#32;=&#32;<link linkend="_namespacefcmaes_1_1mode_1a2570992dd7d42219e4b1381adff7a710">pareto_levels</link>(yobj[cy])
<anchor xml:id="_mode_8py_source_1l01018"/><link linkend="_namespacefcmaes_1_1mode_1a4648393e4988cb88b634bc6969891383">01018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domination[cy]&#32;=&#32;ypar&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01019"/>01019 
<anchor xml:id="_mode_8py_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;then&#32;constraint&#32;violations&#32;&#32;&#32;</emphasis>
<anchor xml:id="_mode_8py_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ci&#32;=&#32;np.fromiter((i&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;ci&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;feasible[i]),&#32;dtype=int)&#32;
<anchor xml:id="_mode_8py_source_1l01022"/>01022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(ci)&#32;&gt;&#32;0:&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01023"/>01023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdom&#32;=&#32;np.arange(len(ci),&#32;0,&#32;-1)
<anchor xml:id="_mode_8py_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domination[ci]&#32;+=&#32;cdom
<anchor xml:id="_mode_8py_source_1l01025"/>01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(cy)&#32;&gt;&#32;0:&#32;<emphasis role="comment">#&#32;priorize&#32;feasible&#32;solutions</emphasis>
<anchor xml:id="_mode_8py_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domination[cy]&#32;+=&#32;len(ci)&#32;+&#32;1
<anchor xml:id="_mode_8py_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01028"/>01028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;domination,&#32;ycon,&#32;eps
<anchor xml:id="_mode_8py_source_1l01029"/>01029 &#32;
<anchor xml:id="_mode_8py_source_1l01030"/>01030 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1a2570992dd7d42219e4b1381adff7a710">pareto_levels</link>(ys):
<anchor xml:id="_mode_8py_source_1l01031"/>01031 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01032"/>01032 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Determines&#32;the&#32;Pareto&#32;levels&#32;of&#32;a&#32;given&#32;set&#32;of&#32;points.</emphasis>
<anchor xml:id="_mode_8py_source_1l01033"/>01033 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01034"/>01034 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;identifies&#32;the&#32;domination&#32;levels&#32;of&#32;a&#32;set&#32;of&#32;points,&#32;where&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l01035"/>01035 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;domination&#32;level&#32;of&#32;a&#32;point&#32;represents&#32;the&#32;number&#32;of&#32;other&#32;points&#32;dominating</emphasis>
<anchor xml:id="_mode_8py_source_1l01036"/>01036 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;it.&#32;Domination&#32;is&#32;determined&#32;based&#32;on&#32;whether&#32;one&#32;point&#32;strictly&#32;dominates</emphasis>
<anchor xml:id="_mode_8py_source_1l01037"/>01037 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;another&#32;in&#32;all&#32;dimensions.</emphasis>
<anchor xml:id="_mode_8py_source_1l01038"/>01038 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01039"/>01039 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l01040"/>01040 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;(numpy.ndarray):&#32;A&#32;2D&#32;array&#32;where&#32;each&#32;row&#32;represents&#32;a&#32;point&#32;in</emphasis>
<anchor xml:id="_mode_8py_source_1l01041"/>01041 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;multi-dimensional&#32;space,&#32;and&#32;domination&#32;is&#32;evaluated&#32;across</emphasis>
<anchor xml:id="_mode_8py_source_1l01042"/>01042 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dimensions.</emphasis>
<anchor xml:id="_mode_8py_source_1l01043"/>01043 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01044"/>01044 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l01045"/>01045 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;A&#32;1D&#32;array&#32;where&#32;each&#32;index&#32;corresponds&#32;to&#32;the&#32;domination</emphasis>
<anchor xml:id="_mode_8py_source_1l01046"/>01046 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;level&#32;of&#32;the&#32;respective&#32;point&#32;in&#32;the&#32;input&#32;array.</emphasis>
<anchor xml:id="_mode_8py_source_1l01047"/>01047 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01048"/>01048 &#32;&#32;&#32;&#32;popn&#32;=&#32;len(ys)
<anchor xml:id="_mode_8py_source_1l01049"/>01049 &#32;&#32;&#32;&#32;pareto&#32;=&#32;np.arange(popn)
<anchor xml:id="_mode_8py_source_1l01050"/>01050 &#32;&#32;&#32;&#32;index&#32;=&#32;0&#32;&#32;<emphasis role="comment">#&#32;Next&#32;index&#32;to&#32;search&#32;for</emphasis>
<anchor xml:id="_mode_8py_source_1l01051"/>01051 &#32;&#32;&#32;&#32;domination&#32;=&#32;np.zeros(popn)
<anchor xml:id="_mode_8py_source_1l01052"/>01052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;index&#32;&lt;&#32;len(ys):
<anchor xml:id="_mode_8py_source_1l01053"/>01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask&#32;=&#32;np.any(ys&#32;&lt;&#32;ys[index],&#32;axis=1)
<anchor xml:id="_mode_8py_source_1l01054"/>01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask[index]&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_mode_8py_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pareto&#32;=&#32;pareto[mask]&#32;&#32;<emphasis role="comment">#&#32;Remove&#32;dominated&#32;points</emphasis>
<anchor xml:id="_mode_8py_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domination[pareto]&#32;+=&#32;1
<anchor xml:id="_mode_8py_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;ys[mask]
<anchor xml:id="_mode_8py_source_1l01058"/>01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;=&#32;np.sum(mask[:index])+1
<anchor xml:id="_mode_8py_source_1l01059"/>01059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;domination
<anchor xml:id="_mode_8py_source_1l01060"/>01060 
<anchor xml:id="_mode_8py_source_1l01061"/>01061 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1a0f27ab476c153a96dba3568003ab075a">crowd_dist</link>(y):&#32;<emphasis role="comment">#&#32;crowd&#32;distance&#32;for&#32;1st&#32;objective</emphasis>
<anchor xml:id="_mode_8py_source_1l01062"/>01062 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01063"/>01063 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Calculates&#32;the&#32;crowding&#32;distance&#32;for&#32;the&#32;first&#32;objective&#32;in&#32;a&#32;multi-objective&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_mode_8py_source_1l01064"/><link linkend="_namespacefcmaes_1_1mode_1aee5b0cd4fba6d7edff0afe48a8bc636a">01064</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01065"/>01065 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;determines&#32;for&#32;each&#32;solution&#32;how&#32;dense&#32;the&#32;neighborhood&#32;is&#32;based&#32;on&#32;the&#32;distances</emphasis>
<anchor xml:id="_mode_8py_source_1l01066"/>01066 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;its&#32;nearest&#32;neighbors&#32;in&#32;the&#32;sorted&#32;objective&#32;space.&#32;It&#32;assigns&#32;a&#32;numerical&#32;value&#32;to&#32;each</emphasis>
<anchor xml:id="_mode_8py_source_1l01067"/>01067 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;solution&#32;reflecting&#32;this&#32;crowding&#32;distance.</emphasis>
<anchor xml:id="_mode_8py_source_1l01068"/>01068 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01069"/>01069 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l01070"/>01070 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;(List[List[float]]):&#32;A&#32;list&#32;of&#32;solutions,&#32;where&#32;each&#32;solution&#32;is&#32;represented&#32;as&#32;a&#32;list</emphasis>
<anchor xml:id="_mode_8py_source_1l01071"/>01071 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;objective&#32;values.&#32;This&#32;function&#32;specifically&#32;uses&#32;the&#32;first&#32;objective&#32;value&#32;for</emphasis>
<anchor xml:id="_mode_8py_source_1l01072"/>01072 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;crowding&#32;distance&#32;calculation.</emphasis>
<anchor xml:id="_mode_8py_source_1l01073"/>01073 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01074"/>01074 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l01075"/>01075 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;An&#32;array&#32;of&#32;crowding&#32;distances&#32;for&#32;each&#32;solution&#32;in&#32;the&#32;input.</emphasis>
<anchor xml:id="_mode_8py_source_1l01076"/>01076 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01077"/>01077 &#32;&#32;&#32;&#32;n&#32;=&#32;len(y)
<anchor xml:id="_mode_8py_source_1l01078"/>01078 &#32;&#32;&#32;&#32;y0&#32;=&#32;np.fromiter((yi[0]&#32;<emphasis role="keywordflow">for</emphasis>&#32;yi&#32;<emphasis role="keywordflow">in</emphasis>&#32;y),&#32;dtype=float)
<anchor xml:id="_mode_8py_source_1l01079"/>01079 &#32;&#32;&#32;&#32;si&#32;=&#32;np.argsort(y0)&#32;<emphasis role="comment">#&#32;sort&#32;1st&#32;objective</emphasis>
<anchor xml:id="_mode_8py_source_1l01080"/>01080 &#32;&#32;&#32;&#32;y0_s&#32;=&#32;y0[si]&#32;<emphasis role="comment">#&#32;sorted</emphasis>
<anchor xml:id="_mode_8py_source_1l01081"/>01081 &#32;&#32;&#32;&#32;d&#32;=&#32;y0_s[1:n]&#32;-&#32;y0_s[0:n-1]&#32;<emphasis role="comment">#&#32;neighbor&#32;distance</emphasis>
<anchor xml:id="_mode_8py_source_1l01082"/>01082 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;max(d)&#32;==&#32;0:
<anchor xml:id="_mode_8py_source_1l01083"/>01083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.zeros(n)
<anchor xml:id="_mode_8py_source_1l01084"/>01084 &#32;&#32;&#32;&#32;dsum&#32;=&#32;np.zeros(n)
<anchor xml:id="_mode_8py_source_1l01085"/>01085 &#32;&#32;&#32;&#32;dsum&#32;+=&#32;np.array(list(d)&#32;+&#32;[0])&#32;<emphasis role="comment">#&#32;distance&#32;to&#32;left</emphasis>
<anchor xml:id="_mode_8py_source_1l01086"/>01086 &#32;&#32;&#32;&#32;dsum&#32;+=&#32;np.array([0]&#32;+&#32;list(d))&#32;<emphasis role="comment">#&#32;distance&#32;to&#32;right</emphasis>
<anchor xml:id="_mode_8py_source_1l01087"/>01087 &#32;&#32;&#32;&#32;dsum[0]&#32;=&#32;1E99&#32;<emphasis role="comment">#&#32;keep&#32;borders</emphasis>
<anchor xml:id="_mode_8py_source_1l01088"/>01088 &#32;&#32;&#32;&#32;dsum[-1]&#32;=&#32;1E99
<anchor xml:id="_mode_8py_source_1l01089"/>01089 &#32;&#32;&#32;&#32;ds&#32;=&#32;np.empty(n)
<anchor xml:id="_mode_8py_source_1l01090"/>01090 &#32;&#32;&#32;&#32;ds[si]&#32;=&#32;dsum&#32;<emphasis role="comment">#&#32;inverse&#32;order</emphasis>
<anchor xml:id="_mode_8py_source_1l01091"/>01091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ds
<anchor xml:id="_mode_8py_source_1l01092"/>01092 
<anchor xml:id="_mode_8py_source_1l01093"/>01093 <emphasis role="comment">#&#32;derived&#32;from&#32;https://github.com/ChengHust/NSGA-II/blob/master/GLOBAL.py</emphasis>
<anchor xml:id="_mode_8py_source_1l01094"/>01094 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1afba15234474d356adb0ed83aa94f73a6">variation</link>(pop,&#32;lower,&#32;upper,&#32;rg,&#32;pro_c&#32;=&#32;1,&#32;dis_c&#32;=&#32;20,&#32;pro_m&#32;=&#32;1,&#32;dis_m&#32;=&#32;20):
<anchor xml:id="_mode_8py_source_1l01095"/>01095 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01096"/>01096 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Applies&#32;genetic&#32;variation&#32;operations,&#32;including&#32;simulated&#32;binary&#32;crossover&#32;(SBX)&#32;and&#32;polynomial</emphasis>
<anchor xml:id="_mode_8py_source_1l01097"/>01097 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;mutation,&#32;on&#32;a&#32;population&#32;to&#32;produce&#32;offspring.&#32;The&#32;method&#32;modifies&#32;the&#32;population&#32;based&#32;on&#32;crossover</emphasis>
<anchor xml:id="_mode_8py_source_1l01098"/>01098 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;mutation&#32;probabilities,&#32;as&#32;well&#32;as&#32;distribution&#32;control&#32;parameters.</emphasis>
<anchor xml:id="_mode_8py_source_1l01099"/>01099 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01100"/>01100 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l01101"/>01101 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pop:&#32;numpy.ndarray</emphasis>
<anchor xml:id="_mode_8py_source_1l01102"/>01102 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Input&#32;population&#32;array,&#32;where&#32;each&#32;row&#32;represents&#32;an&#32;individual&#32;and&#32;each&#32;column&#32;represents</emphasis>
<anchor xml:id="_mode_8py_source_1l01103"/>01103 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;design&#32;variable.</emphasis>
<anchor xml:id="_mode_8py_source_1l01104"/>01104 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower:&#32;numpy.ndarray</emphasis>
<anchor xml:id="_mode_8py_source_1l01105"/>01105 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Lower&#32;bounds&#32;for&#32;each&#32;design&#32;variable.</emphasis>
<anchor xml:id="_mode_8py_source_1l01106"/>01106 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper:&#32;numpy.ndarray</emphasis>
<anchor xml:id="_mode_8py_source_1l01107"/>01107 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Upper&#32;bounds&#32;for&#32;each&#32;design&#32;variable.</emphasis>
<anchor xml:id="_mode_8py_source_1l01108"/>01108 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;numpy.random.Generator</emphasis>
<anchor xml:id="_mode_8py_source_1l01109"/>01109 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Random&#32;number&#32;generator&#32;instance.</emphasis>
<anchor xml:id="_mode_8py_source_1l01110"/>01110 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_c:&#32;float,&#32;optional</emphasis>
<anchor xml:id="_mode_8py_source_1l01111"/>01111 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Probability&#32;of&#32;performing&#32;crossover,&#32;default&#32;is&#32;1.</emphasis>
<anchor xml:id="_mode_8py_source_1l01112"/>01112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_c:&#32;float,&#32;optional</emphasis>
<anchor xml:id="_mode_8py_source_1l01113"/>01113 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Distribution&#32;index&#32;for&#32;crossover,&#32;default&#32;is&#32;20.</emphasis>
<anchor xml:id="_mode_8py_source_1l01114"/>01114 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pro_m:&#32;float,&#32;optional</emphasis>
<anchor xml:id="_mode_8py_source_1l01115"/>01115 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Probability&#32;of&#32;performing&#32;mutation,&#32;default&#32;is&#32;1.</emphasis>
<anchor xml:id="_mode_8py_source_1l01116"/>01116 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dis_m:&#32;float,&#32;optional</emphasis>
<anchor xml:id="_mode_8py_source_1l01117"/>01117 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Distribution&#32;index&#32;for&#32;mutation,&#32;default&#32;is&#32;20.</emphasis>
<anchor xml:id="_mode_8py_source_1l01118"/><link linkend="_namespacefcmaes_1_1mode_1a2570992dd7d42219e4b1381adff7a710">01118</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01119"/>01119 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l01120"/>01120 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray</emphasis>
<anchor xml:id="_mode_8py_source_1l01121"/>01121 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Modified&#32;population&#32;(offspring)&#32;after&#32;applying&#32;crossover&#32;and&#32;mutation&#32;operations.</emphasis>
<anchor xml:id="_mode_8py_source_1l01122"/>01122 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01123"/>01123 &#32;&#32;&#32;&#32;dis_c&#32;*=&#32;0.5&#32;+&#32;0.5*rg.random()&#32;<emphasis role="comment">#&#32;vary&#32;spread&#32;factors&#32;randomly&#32;</emphasis>
<anchor xml:id="_mode_8py_source_1l01124"/>01124 &#32;&#32;&#32;&#32;dis_m&#32;*=&#32;0.5&#32;+&#32;0.5*rg.random()&#32;
<anchor xml:id="_mode_8py_source_1l01125"/>01125 &#32;&#32;&#32;&#32;pop&#32;=&#32;pop[:(len(pop)&#32;//&#32;2)&#32;*&#32;2][:]
<anchor xml:id="_mode_8py_source_1l01126"/>01126 &#32;&#32;&#32;&#32;(n,&#32;d)&#32;=&#32;np.shape(pop)
<anchor xml:id="_mode_8py_source_1l01127"/>01127 &#32;&#32;&#32;&#32;parent_1&#32;=&#32;pop[:n&#32;//&#32;2,&#32;:]
<anchor xml:id="_mode_8py_source_1l01128"/>01128 &#32;&#32;&#32;&#32;parent_2&#32;=&#32;pop[n&#32;//&#32;2:,&#32;:]
<anchor xml:id="_mode_8py_source_1l01129"/>01129 &#32;&#32;&#32;&#32;beta&#32;=&#32;np.zeros((n&#32;//&#32;2,&#32;d))
<anchor xml:id="_mode_8py_source_1l01130"/>01130 &#32;&#32;&#32;&#32;mu&#32;=&#32;rg.random((n&#32;//&#32;2,&#32;d))
<anchor xml:id="_mode_8py_source_1l01131"/>01131 &#32;&#32;&#32;&#32;beta[mu&#32;&lt;=&#32;0.5]&#32;=&#32;np.power(2&#32;*&#32;mu[mu&#32;&lt;=&#32;0.5],&#32;1&#32;/&#32;(dis_c&#32;+&#32;1))
<anchor xml:id="_mode_8py_source_1l01132"/>01132 &#32;&#32;&#32;&#32;beta[mu&#32;&gt;&#32;0.5]&#32;=&#32;np.power(2&#32;*&#32;mu[mu&#32;&gt;&#32;0.5],&#32;-1&#32;/&#32;(dis_c&#32;+&#32;1))
<anchor xml:id="_mode_8py_source_1l01133"/>01133 &#32;&#32;&#32;&#32;beta&#32;=&#32;beta&#32;*&#32;((-1)**&#32;rg.integers(2,&#32;size=(n&#32;//&#32;2,&#32;d)))
<anchor xml:id="_mode_8py_source_1l01134"/>01134 &#32;&#32;&#32;&#32;beta[rg.random((n&#32;//&#32;2,&#32;d))&#32;&lt;&#32;0.5]&#32;=&#32;1
<anchor xml:id="_mode_8py_source_1l01135"/>01135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;pro_c&#32;&lt;&#32;1.0:
<anchor xml:id="_mode_8py_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;beta[np.tile(rg.random((n&#32;//&#32;2,&#32;1))&#32;&gt;&#32;pro_c,&#32;(1,&#32;d))]&#32;=&#32;1
<anchor xml:id="_mode_8py_source_1l01137"/>01137 &#32;&#32;&#32;&#32;parent_mean&#32;=&#32;(parent_1&#32;+&#32;parent_2)&#32;*&#32;0.5
<anchor xml:id="_mode_8py_source_1l01138"/>01138 &#32;&#32;&#32;&#32;parent_diff&#32;=&#32;(parent_1&#32;-&#32;parent_2)&#32;*&#32;0.5
<anchor xml:id="_mode_8py_source_1l01139"/>01139 &#32;&#32;&#32;&#32;offspring&#32;=&#32;np.vstack((parent_mean&#32;+&#32;beta&#32;*&#32;parent_diff,&#32;parent_mean&#32;-&#32;beta&#32;*&#32;parent_diff))
<anchor xml:id="_mode_8py_source_1l01140"/>01140 &#32;&#32;&#32;&#32;site&#32;=&#32;rg.random((n,&#32;d))&#32;&lt;&#32;pro_m&#32;/&#32;d
<anchor xml:id="_mode_8py_source_1l01141"/>01141 &#32;&#32;&#32;&#32;mu&#32;=&#32;rg.random((n,&#32;d))
<anchor xml:id="_mode_8py_source_1l01142"/>01142 &#32;&#32;&#32;&#32;temp&#32;=&#32;site&#32;&amp;&#32;(mu&#32;&lt;=&#32;0.5)
<anchor xml:id="_mode_8py_source_1l01143"/>01143 &#32;&#32;&#32;&#32;lower,&#32;upper&#32;=&#32;np.tile(lower,&#32;(n,&#32;1)),&#32;np.tile(upper,&#32;(n,&#32;1))
<anchor xml:id="_mode_8py_source_1l01144"/>01144 &#32;&#32;&#32;&#32;norm&#32;=&#32;(offspring[temp]&#32;-&#32;lower[temp])&#32;/&#32;(upper[temp]&#32;-&#32;lower[temp])
<anchor xml:id="_mode_8py_source_1l01145"/>01145 &#32;&#32;&#32;&#32;offspring[temp]&#32;+=&#32;(upper[temp]&#32;-&#32;lower[temp])&#32;*&#32;\
<anchor xml:id="_mode_8py_source_1l01146"/>01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(np.power(2.&#32;*&#32;mu[temp]&#32;+&#32;(1.&#32;-&#32;2.&#32;*&#32;mu[temp])&#32;*&#32;np.power(1.&#32;-&#32;norm,&#32;dis_m&#32;+&#32;1.),
<anchor xml:id="_mode_8py_source_1l01147"/><link linkend="_namespacefcmaes_1_1mode_1a0f27ab476c153a96dba3568003ab075a">01147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.&#32;/&#32;(dis_m&#32;+&#32;1))&#32;-&#32;1.)
<anchor xml:id="_mode_8py_source_1l01148"/>01148 &#32;&#32;&#32;&#32;temp&#32;=&#32;site&#32;&amp;&#32;(mu&#32;&gt;&#32;0.5)
<anchor xml:id="_mode_8py_source_1l01149"/>01149 &#32;&#32;&#32;&#32;norm&#32;=&#32;(upper[temp]&#32;-&#32;offspring[temp])&#32;/&#32;(upper[temp]&#32;-&#32;lower[temp])
<anchor xml:id="_mode_8py_source_1l01150"/>01150 &#32;&#32;&#32;&#32;offspring[temp]&#32;+=&#32;(upper[temp]&#32;-&#32;lower[temp])&#32;*&#32;\
<anchor xml:id="_mode_8py_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(1.&#32;-&#32;np.power(
<anchor xml:id="_mode_8py_source_1l01152"/>01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2.&#32;*&#32;(1.&#32;-&#32;mu[temp])&#32;+&#32;2.&#32;*&#32;(mu[temp]&#32;-&#32;0.5)&#32;*&#32;np.power(1.&#32;-&#32;norm,&#32;dis_m&#32;+&#32;1.),
<anchor xml:id="_mode_8py_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.&#32;/&#32;(dis_m&#32;+&#32;1.)))
<anchor xml:id="_mode_8py_source_1l01154"/>01154 &#32;&#32;&#32;&#32;offspring&#32;=&#32;np.clip(offspring,&#32;lower,&#32;upper)
<anchor xml:id="_mode_8py_source_1l01155"/>01155 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;offspring
<anchor xml:id="_mode_8py_source_1l01156"/>01156 
<anchor xml:id="_mode_8py_source_1l01157"/>01157 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1ad8018519575a155be2d2f4659ce52b0b">feasible</link>(xs,&#32;ys,&#32;ncon,&#32;eps&#32;=&#32;1E-2):
<anchor xml:id="_mode_8py_source_1l01158"/>01158 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01159"/>01159 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Determines&#32;feasible&#32;solutions&#32;based&#32;on&#32;constraints&#32;and&#32;filters&#32;the&#32;input&#32;arrays</emphasis>
<anchor xml:id="_mode_8py_source_1l01160"/>01160 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;`xs`&#32;and&#32;`ys`&#32;accordingly.&#32;It&#32;evaluates&#32;constraint&#32;violations&#32;and&#32;ensures&#32;that</emphasis>
<anchor xml:id="_mode_8py_source_1l01161"/>01161 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;violations&#32;are&#32;below&#32;the&#32;threshold&#32;(`eps`)&#32;for&#32;feasibility.</emphasis>
<anchor xml:id="_mode_8py_source_1l01162"/>01162 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01163"/>01163 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l01164"/>01164 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;(np.ndarray):&#32;Input&#32;array&#32;of&#32;solutions.</emphasis>
<anchor xml:id="_mode_8py_source_1l01165"/>01165 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;(np.ndarray):&#32;Array&#32;of&#32;objective&#32;and&#32;constraint&#32;values&#32;corresponding</emphasis>
<anchor xml:id="_mode_8py_source_1l01166"/>01166 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;solutions&#32;in&#32;`xs`.</emphasis>
<anchor xml:id="_mode_8py_source_1l01167"/>01167 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncon&#32;(int):&#32;Number&#32;of&#32;constraints.&#32;Constraints&#32;are&#32;assumed&#32;to&#32;be&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l01168"/>01168 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;last&#32;`ncon`&#32;columns&#32;of&#32;the&#32;`ys`&#32;array.</emphasis>
<anchor xml:id="_mode_8py_source_1l01169"/>01169 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps&#32;(float,&#32;optional):&#32;Feasibility&#32;threshold.&#32;Defaults&#32;to&#32;1E-2.</emphasis>
<anchor xml:id="_mode_8py_source_1l01170"/>01170 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01171"/>01171 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l01172"/>01172 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;np.ndarray]:&#32;Filtered&#32;solutions&#32;(`xs`)&#32;and&#32;their</emphasis>
<anchor xml:id="_mode_8py_source_1l01173"/>01173 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;corresponding&#32;objective&#32;values&#32;(`ys`),&#32;with&#32;infeasible&#32;solutions&#32;removed.</emphasis>
<anchor xml:id="_mode_8py_source_1l01174"/>01174 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01175"/>01175 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;ncon&#32;&gt;&#32;0:&#32;<emphasis role="comment">#&#32;select&#32;feasible</emphasis>
<anchor xml:id="_mode_8py_source_1l01176"/>01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ycon&#32;=&#32;np.array([np.maximum(y[-ncon:],&#32;0)&#32;<emphasis role="keywordflow">for</emphasis>&#32;y&#32;<emphasis role="keywordflow">in</emphasis>&#32;ys])&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01177"/>01177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;con&#32;=&#32;np.sum(ycon,&#32;axis=1)
<anchor xml:id="_mode_8py_source_1l01178"/>01178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;=&#32;len(ys[0])&#32;-&#32;ncon
<anchor xml:id="_mode_8py_source_1l01179"/>01179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;feasible&#32;=&#32;np.fromiter((i&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(ys))&#32;<emphasis role="keywordflow">if</emphasis>&#32;con[i]&#32;&lt;&#32;eps),&#32;dtype=int)
<anchor xml:id="_mode_8py_source_1l01180"/>01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(feasible)&#32;&gt;&#32;0:
<anchor xml:id="_mode_8py_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs,&#32;ys&#32;=&#32;xs[feasible],&#32;np.array([y[:nobj]&#32;<emphasis role="keywordflow">for</emphasis>&#32;y&#32;<emphasis role="keywordflow">in</emphasis>&#32;ys[feasible]])
<anchor xml:id="_mode_8py_source_1l01182"/>01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l01183"/>01183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;no&#32;feasible&quot;</emphasis>)
<anchor xml:id="_mode_8py_source_1l01184"/>01184 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xs,&#32;ys
<anchor xml:id="_mode_8py_source_1l01185"/>01185 
<anchor xml:id="_mode_8py_source_1l01186"/>01186 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1afc694697801d4ac2a3e8956987220939">is_feasible</link>(y,&#32;nobj,&#32;eps&#32;=&#32;1E-2):
<anchor xml:id="_mode_8py_source_1l01187"/>01187 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01188"/>01188 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Determines&#32;if&#32;a&#32;given&#32;solution&#32;is&#32;feasible&#32;based&#32;on&#32;constraints&#32;and&#32;tolerance.</emphasis>
<anchor xml:id="_mode_8py_source_1l01189"/>01189 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01190"/>01190 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;evaluates&#32;feasibility&#32;by&#32;checking&#32;whether&#32;the&#32;sum&#32;of&#32;violated</emphasis>
<anchor xml:id="_mode_8py_source_1l01191"/>01191 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;constraints&#32;(if&#32;any)&#32;is&#32;less&#32;than&#32;the&#32;provided&#32;tolerance&#32;value.&#32;If&#32;there</emphasis>
<anchor xml:id="_mode_8py_source_1l01192"/>01192 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;are&#32;no&#32;constraints,&#32;the&#32;solution&#32;is&#32;automatically&#32;considered&#32;feasible.</emphasis>
<anchor xml:id="_mode_8py_source_1l01193"/><link linkend="_namespacefcmaes_1_1mode_1afba15234474d356adb0ed83aa94f73a6">01193</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01194"/>01194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l01195"/>01195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y:&#32;List&#32;or&#32;array-like&#32;containing&#32;values&#32;of&#32;both&#32;objectives&#32;and&#32;constraints.</emphasis>
<anchor xml:id="_mode_8py_source_1l01196"/>01196 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;Integer&#32;specifying&#32;the&#32;number&#32;of&#32;objectives&#32;in&#32;the&#32;array&#32;&apos;y&apos;.&#32;The</emphasis>
<anchor xml:id="_mode_8py_source_1l01197"/>01197 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rest&#32;are&#32;treated&#32;as&#32;constraints.</emphasis>
<anchor xml:id="_mode_8py_source_1l01198"/>01198 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps:&#32;Float&#32;representing&#32;the&#32;tolerance&#32;level&#32;for&#32;determining&#32;feasibility.</emphasis>
<anchor xml:id="_mode_8py_source_1l01199"/>01199 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;1E-2.</emphasis>
<anchor xml:id="_mode_8py_source_1l01200"/>01200 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01201"/>01201 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l01202"/>01202 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;True&#32;if&#32;the&#32;solution&#32;is&#32;feasible&#32;(i.e.,&#32;sum&#32;of&#32;violated&#32;constraints</emphasis>
<anchor xml:id="_mode_8py_source_1l01203"/>01203 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;below&#32;the&#32;specified&#32;tolerance),&#32;otherwise&#32;False.</emphasis>
<anchor xml:id="_mode_8py_source_1l01204"/>01204 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01205"/>01205 &#32;&#32;&#32;&#32;ncon&#32;=&#32;len(y)&#32;-&#32;nobj
<anchor xml:id="_mode_8py_source_1l01206"/>01206 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;ncon&#32;==&#32;0:
<anchor xml:id="_mode_8py_source_1l01207"/>01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_mode_8py_source_1l01208"/>01208 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_mode_8py_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;np.sum(np.maximum(y[-ncon:],&#32;0))
<anchor xml:id="_mode_8py_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c&#32;&lt;&#32;eps
<anchor xml:id="_mode_8py_source_1l01211"/>01211 
<anchor xml:id="_mode_8py_source_1l01212"/>01212 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1mode_1_1wrapper">wrapper</link>(object):
<anchor xml:id="_mode_8py_source_1l01213"/>01213 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01214"/>01214 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;A&#32;wrapper&#32;class&#32;to&#32;manage&#32;function&#32;calls&#32;with&#32;additional&#32;features&#32;such&#32;as&#32;tracking&#32;progress,</emphasis>
<anchor xml:id="_mode_8py_source_1l01215"/>01215 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;logging&#32;results,&#32;and&#32;storing&#32;or&#32;plotting&#32;outcomes.</emphasis>
<anchor xml:id="_mode_8py_source_1l01216"/>01216 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01217"/>01217 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;allows&#32;function&#32;evaluation&#32;with&#32;multiprocess&#32;support,&#32;tracks&#32;the&#32;number&#32;of</emphasis>
<anchor xml:id="_mode_8py_source_1l01218"/>01218 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;evaluations,&#32;records&#32;the&#32;best&#32;observed&#32;outcomes,&#32;logs&#32;key&#32;metrics&#32;at&#32;specified&#32;intervals,</emphasis>
<anchor xml:id="_mode_8py_source_1l01219"/>01219 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;interfaces&#32;with&#32;optional&#32;storage&#32;or&#32;plotting&#32;mechanisms.</emphasis>
<anchor xml:id="_mode_8py_source_1l01220"/>01220 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01221"/>01221 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_mode_8py_source_1l01222"/>01222 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;ArrayLike]):&#32;The&#32;function&#32;to&#32;be&#32;wrapped&#32;and&#32;called.</emphasis>
<anchor xml:id="_mode_8py_source_1l01223"/>01223 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;Number&#32;of&#32;objectives&#32;for&#32;the&#32;optimization&#32;or&#32;function&#32;evaluation.</emphasis>
<anchor xml:id="_mode_8py_source_1l01224"/>01224 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;(mp.RawValue):&#32;A&#32;shared&#32;counter&#32;tracking&#32;the&#32;number&#32;of&#32;function&#32;evaluations.</emphasis>
<anchor xml:id="_mode_8py_source_1l01225"/>01225 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t0&#32;(float):&#32;The&#32;time&#32;the&#32;wrapper&#32;instance&#32;was&#32;initialized,&#32;for&#32;logging&#32;purposes.</emphasis>
<anchor xml:id="_mode_8py_source_1l01226"/>01226 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_y&#32;(mp.RawArray):&#32;Array&#32;to&#32;store&#32;the&#32;best&#32;observed&#32;outcomes&#32;for&#32;each&#32;objective.</emphasis>
<anchor xml:id="_mode_8py_source_1l01227"/>01227 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(Optional[store]):&#32;Optional&#32;storage&#32;object&#32;to&#32;store&#32;function&#32;results.</emphasis>
<anchor xml:id="_mode_8py_source_1l01228"/>01228 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interval&#32;(Optional[int]):&#32;Specifies&#32;how&#32;often&#32;to&#32;log&#32;or&#32;perform&#32;certain&#32;actions,</emphasis>
<anchor xml:id="_mode_8py_source_1l01229"/>01229 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;terms&#32;of&#32;number&#32;of&#32;function&#32;evaluations.&#32;Default&#32;is&#32;100000.</emphasis>
<anchor xml:id="_mode_8py_source_1l01230"/>01230 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot&#32;(Optional[bool]):&#32;If&#32;True,&#32;enables&#32;plotting&#32;after&#32;storing&#32;results.&#32;Default&#32;is&#32;False.</emphasis>
<anchor xml:id="_mode_8py_source_1l01231"/>01231 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(Optional[str]):&#32;A&#32;name&#32;used&#32;for&#32;file&#32;save&#32;operations&#32;when&#32;the&#32;store&#32;is&#32;provided.</emphasis>
<anchor xml:id="_mode_8py_source_1l01232"/>01232 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lock&#32;(mp.Lock):&#32;A&#32;multiprocessing&#32;lock&#32;to&#32;manage&#32;access&#32;to&#32;shared&#32;resources&#32;safely.</emphasis>
<anchor xml:id="_mode_8py_source_1l01233"/>01233 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01234"/>01234 &#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01235"/>01235 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__init__(self,&#32;
<anchor xml:id="_mode_8py_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;ArrayLike],&#32;
<anchor xml:id="_mode_8py_source_1l01237"/>01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;int,&#32;
<anchor xml:id="_mode_8py_source_1l01238"/>01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;Optional[store]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_mode_8py_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interval:&#32;Optional[int]&#32;=&#32;100000,&#32;
<anchor xml:id="_mode_8py_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">False</emphasis>,&#32;
<anchor xml:id="_mode_8py_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name:&#32;Optional[str]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_mode_8py_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01243"/>01243 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;object&#32;for&#32;handling&#32;and&#32;tracking&#32;function&#32;evaluations,&#32;storing&#32;results,</emphasis>
<anchor xml:id="_mode_8py_source_1l01244"/>01244 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;optionally&#32;plotting&#32;performance&#32;data.</emphasis>
<anchor xml:id="_mode_8py_source_1l01245"/><link linkend="_namespacefcmaes_1_1mode_1ad8018519575a155be2d2f4659ce52b0b">01245</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01246"/>01246 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l01247"/>01247 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;ArrayLike]):&#32;The&#32;objective&#32;function&#32;to&#32;evaluate.</emphasis>
<anchor xml:id="_mode_8py_source_1l01248"/>01248 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;The&#32;number&#32;of&#32;objectives&#32;to&#32;optimize.</emphasis>
<anchor xml:id="_mode_8py_source_1l01249"/>01249 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(Optional[store]):&#32;The&#32;storage&#32;mechanism&#32;for&#32;results.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_mode_8py_source_1l01250"/>01250 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interval&#32;(Optional[int]):&#32;The&#32;interval&#32;at&#32;which&#32;logs&#32;or&#32;updates&#32;occur.</emphasis>
<anchor xml:id="_mode_8py_source_1l01251"/>01251 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;100000.</emphasis>
<anchor xml:id="_mode_8py_source_1l01252"/>01252 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot&#32;(Optional[bool]):&#32;Whether&#32;to&#32;enable&#32;plotting&#32;of&#32;performance&#32;data.</emphasis>
<anchor xml:id="_mode_8py_source_1l01253"/>01253 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;False.</emphasis>
<anchor xml:id="_mode_8py_source_1l01254"/>01254 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(Optional[str]):&#32;A&#32;custom&#32;name&#32;for&#32;the&#32;object.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_mode_8py_source_1l01255"/>01255 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01256"/>01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.fun&#32;=&#32;fun
<anchor xml:id="_mode_8py_source_1l01257"/>01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.nobj&#32;=&#32;nobj
<anchor xml:id="_mode_8py_source_1l01258"/>01258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.evals&#32;=&#32;mp.RawValue(ct.c_long,&#32;0)
<anchor xml:id="_mode_8py_source_1l01259"/>01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.t0&#32;=&#32;time.perf_counter()
<anchor xml:id="_mode_8py_source_1l01260"/>01260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.best_y&#32;=&#32;mp.RawArray(ct.c_double,&#32;nobj)&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01261"/>01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(nobj):
<anchor xml:id="_mode_8py_source_1l01262"/>01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.best_y[i]&#32;=&#32;sys.float_info.max
<anchor xml:id="_mode_8py_source_1l01263"/>01263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.store&#32;=&#32;store
<anchor xml:id="_mode_8py_source_1l01264"/>01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.interval&#32;=&#32;interval
<anchor xml:id="_mode_8py_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.plot&#32;=&#32;plot
<anchor xml:id="_mode_8py_source_1l01266"/>01266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.name&#32;=&#32;name
<anchor xml:id="_mode_8py_source_1l01267"/>01267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.lock&#32;=&#32;mp.Lock()
<anchor xml:id="_mode_8py_source_1l01268"/>01268 &#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01269"/>01269 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__call__(self,&#32;x:&#32;ArrayLike)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_mode_8py_source_1l01270"/>01270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01271"/>01271 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Executes&#32;the&#32;callable&#32;object&#32;with&#32;the&#32;input&#32;data,&#32;applies&#32;the&#32;function&#32;to&#32;evaluate&#32;the&#32;data,</emphasis>
<anchor xml:id="_mode_8py_source_1l01272"/>01272 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updates&#32;internal&#32;state&#32;related&#32;to&#32;evaluations&#32;and&#32;results,&#32;and&#32;performs&#32;logging,&#32;saving,</emphasis>
<anchor xml:id="_mode_8py_source_1l01273"/>01273 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;plotting&#32;based&#32;on&#32;specific&#32;conditions.</emphasis>
<anchor xml:id="_mode_8py_source_1l01274"/>01274 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01275"/><link linkend="_namespacefcmaes_1_1mode_1afc694697801d4ac2a3e8956987220939">01275</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l01276"/>01276 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;(ArrayLike):&#32;Input&#32;data&#32;to&#32;evaluate&#32;using&#32;the&#32;callable&#32;object&apos;s&#32;function.</emphasis>
<anchor xml:id="_mode_8py_source_1l01277"/>01277 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01278"/>01278 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l01279"/>01279 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;Evaluated&#32;output&#32;from&#32;the&#32;function&#32;if&#32;successful,&#32;otherwise&#32;None.</emphasis>
<anchor xml:id="_mode_8py_source_1l01280"/>01280 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01281"/>01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_mode_8py_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;self.fun(x)
<anchor xml:id="_mode_8py_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;self.lock:
<anchor xml:id="_mode_8py_source_1l01284"/>01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.evals.value&#32;+=&#32;1
<anchor xml:id="_mode_8py_source_1l01285"/>01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.store&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">and</emphasis>&#32;<link linkend="_namespacefcmaes_1_1mode_1afc694697801d4ac2a3e8956987220939">is_feasible</link>(y,&#32;self.nobj):
<anchor xml:id="_mode_8py_source_1l01286"/>01286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.store.create_views()
<anchor xml:id="_mode_8py_source_1l01287"/>01287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.store.add_result(x,&#32;y[:self.nobj])
<anchor xml:id="_mode_8py_source_1l01288"/>01288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;improve&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_mode_8py_source_1l01289"/>01289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.nobj):
<anchor xml:id="_mode_8py_source_1l01290"/>01290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y[i]&#32;&lt;&#32;self.best_y[i]:
<anchor xml:id="_mode_8py_source_1l01291"/>01291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;improve&#32;=&#32;<emphasis role="keyword">True</emphasis>&#32;
<anchor xml:id="_mode_8py_source_1l01292"/>01292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.best_y[i]&#32;=&#32;y[i]&#32;
<anchor xml:id="_mode_8py_source_1l01293"/>01293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#improve&#32;=&#32;improve#&#32;and&#32;self.evals.value&#32;&gt;&#32;10000</emphasis>
<anchor xml:id="_mode_8py_source_1l01294"/><link linkend="_classfcmaes_1_1mode_1_1wrapper">01294</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1wrapper_1a01e4931ca3f69d0c311b89206fdb5a84">evals</link>.value&#32;%&#32;self.<link linkend="_classfcmaes_1_1mode_1_1wrapper_1a28f164ad5617369d31a073342b0e0566">interval</link>&#32;==&#32;0&#32;<emphasis role="keywordflow">or</emphasis>&#32;improve:
<anchor xml:id="_mode_8py_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constr&#32;=&#32;np.maximum(y[self.<link linkend="_classfcmaes_1_1mode_1_1wrapper_1ad2534786b7fbf2ce570b2d2503b85482">nobj</link>:],&#32;0)
<anchor xml:id="_mode_8py_source_1l01296"/>01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(&#32;
<anchor xml:id="_mode_8py_source_1l01297"/>01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f<emphasis role="stringliteral">&apos;{dtime(self.t0)}&#32;{self.evals.value}&#32;{self.evals.value/(1E-9&#32;+&#32;dtime(self.t0)):.1f}&#32;{self.best_y[:]}&#32;{list(constr)}&#32;{list(x)}&apos;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01298"/>01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_mode_8py_source_1l01299"/>01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1wrapper_1a8aa88c436b49a51817ef990ecf103852">store</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>)&#32;<emphasis role="keywordflow">and</emphasis>&#32;(<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1wrapper_1ab935f5beea9753e260fcc858ea43386e">name</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>):
<anchor xml:id="_mode_8py_source_1l01300"/>01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_mode_8py_source_1l01301"/>01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs,&#32;ys&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1wrapper_1a8aa88c436b49a51817ef990ecf103852">store</link>.get_front()
<anchor xml:id="_mode_8py_source_1l01302"/>01302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1wrapper_1a8aa88c436b49a51817ef990ecf103852">store</link>.num_stored.value
<anchor xml:id="_mode_8py_source_1l01303"/>01303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;self.<link linkend="_classfcmaes_1_1mode_1_1wrapper_1ab935f5beea9753e260fcc858ea43386e">name</link>&#32;+&#32;<emphasis role="stringliteral">&apos;_&apos;</emphasis>&#32;+&#32;str(num)
<anchor xml:id="_mode_8py_source_1l01304"/>01304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.savez_compressed(name,&#32;xs=xs,&#32;ys=ys)
<anchor xml:id="_mode_8py_source_1l01305"/>01305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1mode_1_1wrapper_1a3c81297fbc84256960ada5e615b044f6">plot</link>:
<anchor xml:id="_mode_8py_source_1l01306"/>01306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;moretry.plot(name,&#32;0,&#32;xs,&#32;ys,&#32;all=<emphasis role="keyword">False</emphasis>)
<anchor xml:id="_mode_8py_source_1l01307"/>01307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_mode_8py_source_1l01308"/>01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(str(ex))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01309"/>01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y
<anchor xml:id="_mode_8py_source_1l01310"/>01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_mode_8py_source_1l01311"/>01311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(str(ex))&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01312"/>01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;&#32;
<anchor xml:id="_mode_8py_source_1l01313"/>01313 &#32;
<anchor xml:id="_mode_8py_source_1l01314"/>01314 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1mode_1a0bc11f1e1783869a0b99b01ba75c80eb">minimize_plot</link>(name:&#32;str,&#32;
<anchor xml:id="_mode_8py_source_1l01315"/>01315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;ArrayLike],&#32;
<anchor xml:id="_mode_8py_source_1l01316"/>01316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj:&#32;int,
<anchor xml:id="_mode_8py_source_1l01317"/>01317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncon:&#32;int,&#32;
<anchor xml:id="_mode_8py_source_1l01318"/>01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,
<anchor xml:id="_mode_8py_source_1l01319"/>01319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;64,&#32;
<anchor xml:id="_mode_8py_source_1l01320"/>01320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;100000,&#32;
<anchor xml:id="_mode_8py_source_1l01321"/>01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nsga_update:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>,
<anchor xml:id="_mode_8py_source_1l01322"/>01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pareto_update:&#32;Optional[int]&#32;=&#32;0,
<anchor xml:id="_mode_8py_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_mode_8py_source_1l01324"/>01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;mp.cpu_count())&#32;-&gt;&#32;Tuple[np.ndarray,&#32;np.ndarray]:
<anchor xml:id="_mode_8py_source_1l01325"/>01325 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01326"/>01326 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;minimizes&#32;a&#32;multi-objective&#32;function&#32;using&#32;evolutionary&#32;algorithms</emphasis>
<anchor xml:id="_mode_8py_source_1l01327"/>01327 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;generates&#32;a&#32;plot&#32;showing&#32;the&#32;optimization&#32;results.&#32;The&#32;optimization&#32;data&#32;is</emphasis>
<anchor xml:id="_mode_8py_source_1l01328"/>01328 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;also&#32;saved&#32;to&#32;a&#32;compressed&#32;.npz&#32;file.</emphasis>
<anchor xml:id="_mode_8py_source_1l01329"/>01329 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01330"/>01330 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_mode_8py_source_1l01331"/>01331 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;Name&#32;identifier&#32;for&#32;the&#32;optimization&#32;process.&#32;It&#32;is&#32;used</emphasis>
<anchor xml:id="_mode_8py_source_1l01332"/>01332 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;name&#32;the&#32;resulting&#32;data&#32;and&#32;plots.</emphasis>
<anchor xml:id="_mode_8py_source_1l01333"/>01333 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;ArrayLike]):&#32;The&#32;objective&#32;function&#32;to&#32;be</emphasis>
<anchor xml:id="_mode_8py_source_1l01334"/>01334 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minimized.&#32;It&#32;should&#32;take&#32;an&#32;array-like&#32;input&#32;and&#32;return&#32;an&#32;array-like</emphasis>
<anchor xml:id="_mode_8py_source_1l01335"/>01335 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output&#32;of&#32;the&#32;objectives.</emphasis>
<anchor xml:id="_mode_8py_source_1l01336"/>01336 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nobj&#32;(int):&#32;The&#32;number&#32;of&#32;objectives&#32;to&#32;be&#32;optimized.</emphasis>
<anchor xml:id="_mode_8py_source_1l01337"/>01337 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncon&#32;(int):&#32;The&#32;number&#32;of&#32;constraints&#32;for&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_mode_8py_source_1l01338"/>01338 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Bounds):&#32;Bounds&#32;object&#32;specifying&#32;the&#32;variable&#32;lower&#32;and</emphasis>
<anchor xml:id="_mode_8py_source_1l01339"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1acd6bb1258b7aae36e3f5f62696db4db4">01339</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;bounds&#32;for&#32;the&#32;problem.</emphasis>
<anchor xml:id="_mode_8py_source_1l01340"/>01340 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;The&#32;population&#32;size&#32;for&#32;the&#32;evolutionary</emphasis>
<anchor xml:id="_mode_8py_source_1l01341"/>01341 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm.&#32;Defaults&#32;to&#32;64.</emphasis>
<anchor xml:id="_mode_8py_source_1l01342"/>01342 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;The&#32;maximum&#32;number&#32;of&#32;function&#32;evaluations</emphasis>
<anchor xml:id="_mode_8py_source_1l01343"/>01343 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allowed.&#32;Defaults&#32;to&#32;100000.</emphasis>
<anchor xml:id="_mode_8py_source_1l01344"/>01344 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nsga_update&#32;(Optional[bool]):&#32;A&#32;boolean&#32;flag&#32;indicating&#32;whether&#32;to&#32;use</emphasis>
<anchor xml:id="_mode_8py_source_1l01345"/>01345 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NSGA-II-like&#32;updates&#32;for&#32;the&#32;optimization&#32;process.&#32;Defaults&#32;to&#32;True.</emphasis>
<anchor xml:id="_mode_8py_source_1l01346"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1a3a69785db0897b0c68286388b7916276">01346</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pareto_update&#32;(Optional[int]):&#32;An&#32;integer&#32;parameter&#32;specifying&#32;the&#32;update</emphasis>
<anchor xml:id="_mode_8py_source_1l01347"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1ad2534786b7fbf2ce570b2d2503b85482">01347</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strategy&#32;for&#32;Pareto&#32;optimization&#32;when&#32;nsga_update&#32;is&#32;False.&#32;Defaults&#32;to&#32;0.</emphasis>
<anchor xml:id="_mode_8py_source_1l01348"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1a01e4931ca3f69d0c311b89206fdb5a84">01348</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ints&#32;(Optional[ArrayLike]):&#32;An&#32;array-like&#32;object&#32;indicating&#32;which&#32;decision</emphasis>
<anchor xml:id="_mode_8py_source_1l01349"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1a69f5f58f4deac7c580121b3deeae8e02">01349</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variables&#32;are&#32;to&#32;be&#32;treated&#32;as&#32;integers.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_mode_8py_source_1l01350"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1ab4c73a985518883d0979e00ade17d3a3">01350</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;Number&#32;of&#32;worker&#32;processes&#32;to&#32;use&#32;for</emphasis>
<anchor xml:id="_mode_8py_source_1l01351"/>01351 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parallelization.&#32;Defaults&#32;to&#32;the&#32;number&#32;of&#32;available&#32;CPU&#32;cores.</emphasis>
<anchor xml:id="_mode_8py_source_1l01352"/>01352 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_mode_8py_source_1l01353"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1a8aa88c436b49a51817ef990ecf103852">01353</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_mode_8py_source_1l01354"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1a28f164ad5617369d31a073342b0e0566">01354</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[numpy.ndarray,&#32;numpy.ndarray]:</emphasis>
<anchor xml:id="_mode_8py_source_1l01355"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1a3c81297fbc84256960ada5e615b044f6">01355</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_mode_8py_source_1l01356"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1ab935f5beea9753e260fcc858ea43386e">01356</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;xs:&#32;A&#32;NumPy&#32;array&#32;representing&#32;the&#32;decision&#32;variable&#32;values&#32;of&#32;the</emphasis>
<anchor xml:id="_mode_8py_source_1l01357"/><link linkend="_classfcmaes_1_1mode_1_1wrapper_1abd5e47c70b9ebab11397eb565f1ac811">01357</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solutions.</emphasis>
<anchor xml:id="_mode_8py_source_1l01358"/>01358 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;ys:&#32;A&#32;NumPy&#32;array&#32;representing&#32;the&#32;objective&#32;values&#32;of&#32;the&#32;solutions.</emphasis>
<anchor xml:id="_mode_8py_source_1l01359"/>01359 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_mode_8py_source_1l01360"/>01360 &#32;&#32;&#32;&#32;name&#32;+=&#32;<emphasis role="stringliteral">&apos;_mode_&apos;</emphasis>&#32;+&#32;str(popsize)&#32;+&#32;<emphasis role="stringliteral">&apos;_&apos;</emphasis>&#32;+&#32;\
<anchor xml:id="_mode_8py_source_1l01361"/>01361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="stringliteral">&apos;nsga_update&apos;</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;nsga_update&#32;<emphasis role="keywordflow">else</emphasis>&#32;(<emphasis role="stringliteral">&apos;de_update_&apos;</emphasis>&#32;+&#32;str(pareto_update)))
<anchor xml:id="_mode_8py_source_1l01362"/>01362 &#32;&#32;&#32;&#32;logger.info(<emphasis role="stringliteral">&apos;optimize&#32;&apos;</emphasis>&#32;+&#32;name)&#32;
<anchor xml:id="_mode_8py_source_1l01363"/>01363 &#32;&#32;&#32;&#32;xs,&#32;ys&#32;=&#32;<link linkend="_namespacefcmaes_1_1mode_1a7e76a634ae4563d738ad007097e3c2b4">minimize</link>(fun,&#32;nobj,&#32;ncon,&#32;bounds,&#32;popsize&#32;=&#32;popsize,&#32;max_evaluations&#32;=&#32;max_evaluations,
<anchor xml:id="_mode_8py_source_1l01364"/>01364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nsga_update&#32;=&#32;nsga_update,&#32;pareto_update&#32;=&#32;pareto_update,&#32;workers=workers,&#32;ints=ints)
<anchor xml:id="_mode_8py_source_1l01365"/>01365 &#32;&#32;&#32;&#32;np.savez_compressed(name,&#32;xs=xs,&#32;ys=ys)
<anchor xml:id="_mode_8py_source_1l01366"/>01366 &#32;&#32;&#32;&#32;moretry.plot(name,&#32;ncon,&#32;xs,&#32;ys)
<anchor xml:id="_mode_8py_source_1l01367"/>01367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xs,&#32;ys
</programlisting></section>

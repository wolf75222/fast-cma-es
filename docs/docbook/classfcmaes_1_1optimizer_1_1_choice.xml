<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classfcmaes_1_1optimizer_1_1_choice" xml:lang="en-US">
<title>fcmaes.optimizer.Choice Class Reference</title>
<indexterm><primary>fcmaes.optimizer.Choice</primary></indexterm>
<para>

<para>A class representing a choice-based optimizer. </para>
 
</para>
Inheritance diagram for fcmaes.optimizer.Choice:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_choice__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for fcmaes.optimizer.Choice:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_choice__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_choice_1a5d640dae06a047492e728d0fc2bac409">__init__</link> (self, ArrayLike <link linkend="_classfcmaes_1_1optimizer_1_1_choice_1a63c504ba4d8b574728b84223f1c01158">optimizers</link>)</para>
</listitem>
            <listitem><para>Tuple[np.ndarray, float, int] <link linkend="_classfcmaes_1_1optimizer_1_1_choice_1acc04c696958e97fdd9c4f8ad51354530">minimize</link> (self, Callable[[ArrayLike], float] fun, Bounds bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike, Callable]] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</para>

<para>Minimizes a given function using one of the available optimizers chosen at random. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[str] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>=&apos;&apos;)</para>

<para>Initializes the class with specific parameters including the maximum number of evaluations and the name. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link> (self, store=None)</para>

<para>Evaluates and returns the maximum number of evaluations based on the provided store or the object&apos;s default value. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link> (self, store=None)</para>

<para>Gets the count of runs from the provided store. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_choice_1a63c504ba4d8b574728b84223f1c01158">optimizers</link> = optimizers</para>

<para>A list of optimizers to be used by the choice. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Attributes inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link> = max_evaluations</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link> = name</para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>

<para>A class representing a choice-based optimizer. </para>



<para>The <link linkend="_classfcmaes_1_1optimizer_1_1_choice">Choice</link> class allows selecting a random optimizer from a list of provided optimizers. It facilitates optimization by delegating the minimize function to one of the contained optimizers. The purpose of this class is to provide flexibility in switching between different optimization strategies dynamically.</para>

<para><literallayout><computeroutput>       determined from the first optimizer in the list.
</computeroutput></literallayout> </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l00426">426</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_choice_1a5d640dae06a047492e728d0fc2bac409"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>fcmaes.optimizer.Choice</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Choice</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Choice.__init__ ( self, ArrayLike optimizers)</computeroutput></para><para>
Definition at line <link linkend="_optimizer_8py_source_1l00455">455</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_choice_1acc04c696958e97fdd9c4f8ad51354530"/><section>
    <title>minimize()</title>
<indexterm><primary>minimize</primary><secondary>fcmaes.optimizer.Choice</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Choice</primary><secondary>minimize</secondary></indexterm>
<para><computeroutput> Tuple[np.ndarray, float, int] fcmaes.optimizer.Choice.minimize ( self, Callable[[ArrayLike], float] fun, Bounds bounds, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[Union[float, ArrayLike, Callable]]  sdevs = <computeroutput>None</computeroutput>
, Optional[Generator]  rg = <computeroutput>Generator(PCG64DXSM())</computeroutput>
,  store = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Minimizes a given function using one of the available optimizers chosen at random. </para>
</para>

<para><literallayout><computeroutput>   This method selects an optimizer from the available pool of optimizers randomnly,
   then uses the selected optimizer to minimize the given function. The function to
   be minimized, along with other parameters required for the optimization, are passed
   to the chosen optimizer. The result of the optimization, including the solution,
   minimum value, and number of iterations, is returned.


       fun (Callable[[ArrayLike], float]): The function to minimize. This should take
           a single argument, which is a set of parameter values, and return a scalar
           value representing the objective to minimize.
</computeroutput></literallayout> 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>bounds</entry><entry>
<para>The bounds for the optimization, specifying the feasible range for each parameter in the input space. </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>Initial guess for the optimization. Provides a starting point for the optimization process. If not provided, defaults to None. sdevs (Optional[Union[float, ArrayLike, Callable]]): Standard deviations or a function to generate them, influencing the exploration during the optimization process. If not provided, defaults to None. </para>
</entry>
                            </row>
                            <row>
<entry>rg</entry><entry>
<para>Random number generator instance for selecting a random optimizer and potentially generating random values for the optimization. Defaults to a <computeroutput>Generator</computeroutput> using <computeroutput>PCG64DXSM</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>store</entry><entry>
<para>Optional storage object for logging or saving optimization history. The structure and usage are dependent on the specific optimizers used.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Tuple[np.ndarray, float, int]: A tuple containing the optimization results:<itemizedlist>
<listitem>
<para>A NumPy array with the parameters corresponding to the solution.</para>
</listitem><listitem>
<para>A float denoting the minimum value of the objective function found.</para>
</listitem><listitem>
<para>An integer indicating the number of iterations used in the optimization. </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l00496">496</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_choice_1a63c504ba4d8b574728b84223f1c01158"/><section>
    <title>optimizers</title>
<indexterm><primary>optimizers</primary><secondary>fcmaes.optimizer.Choice</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Choice</primary><secondary>optimizers</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Choice.optimizers = optimizers</computeroutput></para><para>

<para>A list of optimizers to be used by the choice. </para>
</para>

<para>Combines multiple optimizers to operate as a single optimizer.</para>

<para>This class allows multiple optimization algorithms to be combined and treated as a unified optimizer. Each individual optimizer contributes to the effectiveness of the overall optimization process.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>optimizers</entry><entry>
<para>A collection of optimizer instances that will be combined into a unified optimizer.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Collection of optimizer instances. </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l00457">457</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
fcmaes/<link linkend="_optimizer_8py">optimizer.py</link></section>
</section>

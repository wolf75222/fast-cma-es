<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_pgpecpp_8py" xml:lang="en-US">
<title>fcmaes/pgpecpp.py File Reference</title>
<indexterm><primary>fcmaes/pgpecpp.py</primary></indexterm>
<para>

<para>============================================================================= </para>
 
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c">fcmaes.pgpecpp.PGPE_C</link></para>

<para>Optimization class using a C++ CR-FM-NES implementation via <computeroutput>ctypes</computeroutput>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacefcmaes">fcmaes</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacefcmaes_1_1pgpecpp">fcmaes.pgpecpp</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>OptimizeResult <link linkend="_namespacefcmaes_1_1pgpecpp_1ac26ca85a239168914a5e741b112af39f">fcmaes.pgpecpp.minimize</link> (Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.1, Optional[int] popsize=32, Optional[int] max_evaluations=100000, Optional[int] workers=None, Optional[float] stop_fitness=-np.inf, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=True, Optional[int] lr_decay_steps=1000, Optional[bool] use_ranking=True, Optional[float] center_learning_rate=0.15, Optional[float] stdev_learning_rate=0.1, Optional[float] stdev_max_change=0.2, Optional[float] b1=0.9, Optional[float] b2=0.999, Optional[float] eps=1e-8, Optional[float] decay_coef=1.0)</para>

<para>Optimize a given objective function by minimizing its value using the PGPE (Policy Gradient with Parameter-based Exploration) method. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacefcmaes_1_1pgpecpp_1af8da1cbe352bc1a796e5f15d878647f2">fcmaes.pgpecpp.optimizePGPE_C</link> = libcmalib.optimizePGPE_C</para>
</listitem>
            <listitem><para><link linkend="_namespacefcmaes_1_1pgpecpp_1af356a4b052dd645eb6858407c6c30cca">fcmaes.pgpecpp.argtypes</link></para>
</listitem>
            <listitem><para><link linkend="_namespacefcmaes_1_1pgpecpp_1aee73bd986018e30ab0fef7ab6f5d8b18">fcmaes.pgpecpp.initPGPE_C</link> = libcmalib.initPGPE_C</para>
</listitem>
            <listitem><para><link linkend="_namespacefcmaes_1_1pgpecpp_1a5c33aa0b6c6e1fb0369e7516eacb5649">fcmaes.pgpecpp.restype</link></para>
</listitem>
            <listitem><para><link linkend="_namespacefcmaes_1_1pgpecpp_1a03df7e468c547553701bf0f0dc702b4f">fcmaes.pgpecpp.destroyPGPE_C</link> = libcmalib.destroyPGPE_C</para>
</listitem>
            <listitem><para><link linkend="_namespacefcmaes_1_1pgpecpp_1a89e498c3d796b4113e670e638aa85163">fcmaes.pgpecpp.askPGPE_C</link> = libcmalib.askPGPE_C</para>
</listitem>
            <listitem><para><link linkend="_namespacefcmaes_1_1pgpecpp_1a83964137647622f1ea94a90106b7fc85">fcmaes.pgpecpp.tellPGPE_C</link> = libcmalib.tellPGPE_C</para>
</listitem>
            <listitem><para><link linkend="_namespacefcmaes_1_1pgpecpp_1a3c39b0fa9cb8f471f226bc6916bf3a71">fcmaes.pgpecpp.populationPGPE_C</link> = libcmalib.populationPGPE_C</para>
</listitem>
            <listitem><para><link linkend="_namespacefcmaes_1_1pgpecpp_1a550fd833f381cfb0e882cdccfe52ef2a">fcmaes.pgpecpp.resultPGPE_C</link> = libcmalib.resultPGPE_C</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>============================================================================= </para>

<para>Fast version 1.6.11</para>

<para>(c) 2025 – Dietmar Wolz (c) 2025 – Latitude</para>

<para>License MIT</para>

<para><itemizedlist>
<listitem>
<para><link linkend="_pgpecpp_8py">pgpecpp.py</link></para>
</listitem></itemizedlist>
</para>

<para><formalpara>
<title>Description</title>
<para><itemizedlist>
<listitem>
<para>Eigen based implementation of PGPE see [2] derived from [3].</para>
</listitem></itemizedlist>
</para>
</formalpara>
<formalpara><title>Author</title>

<para>:<itemizedlist>
<listitem>
<para>Dietmar Wolz <literallayout><computeroutput>-&#32;romain.despoullains<emphasis role="preprocessor">@latitude.eu</emphasis>
-&#32;corentin.generet<emphasis role="preprocessor">@latitude.eu</emphasis>
</computeroutput></literallayout></para>
</listitem></itemizedlist>
</para>
</formalpara>
<formalpara>
<title>References</title>
<para><itemizedlist>
<listitem>
<para>[1] <link xlink:href="https://github.com/dietmarwo/fast-cma-es">https://github.com/dietmarwo/fast-cma-es</link></para>
</listitem><listitem>
<para>[2] <link xlink:href="http://mediatum.ub.tum.de/doc/1099128/631352.pdf">http://mediatum.ub.tum.de/doc/1099128/631352.pdf</link></para>
</listitem><listitem>
<para>[3] <link xlink:href="https://github.com/google/evojax/blob/main/evojax/algo/pgpe.py">https://github.com/google/evojax/blob/main/evojax/algo/pgpe.py</link></para>
</listitem></itemizedlist>
</para>
</formalpara>
<formalpara>
<title>Documentation</title>
<para><itemizedlist>
<listitem>
<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
<para>
Definition in file <link linkend="_pgpecpp_8py_source">pgpecpp.py</link>.</para>
</section>
</section>

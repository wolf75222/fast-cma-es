<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_noisy__tsp_8py_source" xml:lang="en-US">
<title>noisy_tsp.py</title>
<indexterm><primary>examples/noisy_tsp.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_noisy__tsp_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1noisy__tsp">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00005"/>00005 
<anchor xml:id="_noisy__tsp_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;This&#32;example&#32;is&#32;inspired&#32;by&#32;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00007"/>00007 <emphasis role="comment">#&#32;https://github.com/AlgTUDelft/ExpensiveOptimBenchmark/blob/master/expensiveoptimbenchmark/problems/TSP.py[TSP.py]</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00008"/>00008 <emphasis role="comment">#&#32;but&#32;using&#32;numba&#32;to&#32;speed&#32;up&#32;the&#32;objective&#32;function.&#32;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00009"/>00009 
<anchor xml:id="_noisy__tsp_8py_source_1l00010"/>00010 <emphasis role="comment">#&#32;It&#32;implements&#32;a&#32;&quot;noisy&#32;Travelers&#32;Salesman&#32;Problem&quot;.&#32;Goal&#32;is&#32;to&#32;minimize&#32;the&#32;&quot;robust&quot;&#32;tour&#32;length,&#32;the&#32;maximal&#32;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00011"/>00011 <emphasis role="comment">#&#32;length&#32;for&#32;&quot;iter_num&quot;&#32;iterations&#32;using&#32;random&#32;noise:&#32;noise_factor*rnd(0,1)&#32;for&#32;each&#32;transfer.&#32;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00012"/>00012 
<anchor xml:id="_noisy__tsp_8py_source_1l00013"/>00013 <emphasis role="comment">#&#32;See&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/TSP.adoc&#32;for&#32;a&#32;detailed&#32;description.</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00014"/>00014 
<anchor xml:id="_noisy__tsp_8py_source_1l00015"/>00015 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.2</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00016"/>00016 
<anchor xml:id="_noisy__tsp_8py_source_1l00017"/>00017 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_noisy__tsp_8py_source_1l00018"/>00018 <emphasis role="keyword">import</emphasis>&#32;tsplib95
<anchor xml:id="_noisy__tsp_8py_source_1l00019"/>00019 <emphasis role="keyword">import</emphasis>&#32;networkx
<anchor xml:id="_noisy__tsp_8py_source_1l00020"/>00020 <emphasis role="keyword">from</emphasis>&#32;numba&#32;<emphasis role="keyword">import</emphasis>&#32;njit,&#32;numba
<anchor xml:id="_noisy__tsp_8py_source_1l00021"/>00021 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds
<anchor xml:id="_noisy__tsp_8py_source_1l00022"/>00022 <emphasis role="keyword">import</emphasis>&#32;time
<anchor xml:id="_noisy__tsp_8py_source_1l00023"/>00023 <emphasis role="keyword">import</emphasis>&#32;math
<anchor xml:id="_noisy__tsp_8py_source_1l00024"/>00024 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_noisy__tsp_8py_source_1l00025"/>00025 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00026"/>00026 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Bite_cpp,&#32;Cma_cpp,&#32;De_cpp,&#32;De_python,&#32;dtime
<anchor xml:id="_noisy__tsp_8py_source_1l00027"/>00027 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;retry,&#32;modecpp,&#32;de&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00028"/>00028 
<anchor xml:id="_noisy__tsp_8py_source_1l00029"/>00029 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00030"/>00030 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_noisy__tsp_8py_source_1l00031"/>00031 
<anchor xml:id="_noisy__tsp_8py_source_1l00032"/>00032 logger.remove()
<anchor xml:id="_noisy__tsp_8py_source_1l00033"/><link linkend="_namespaceexamples_1_1noisy__tsp_1a32bd4bbc6c3e7c205179670d3c261b66">00033</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_noisy__tsp_8py_source_1l00034"/>00034 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_noisy__tsp_8py_source_1l00035"/>00035 
<anchor xml:id="_noisy__tsp_8py_source_1l00036"/>00036 <emphasis role="comment">#&#32;do&#32;&apos;pip&#32;install&#32;tsplib95&apos;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00037"/>00037 
<anchor xml:id="_noisy__tsp_8py_source_1l00038"/>00038 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00039"/><link linkend="_namespaceexamples_1_1noisy__tsp_1a0ce68f212bcae03932d42fc95e0c9b5e">00039</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1noisy__tsp_1a0ce68f212bcae03932d42fc95e0c9b5e">evaluate_tsp</link>(x,&#32;W,&#32;d,&#32;noise_factor,&#32;iter_num):
<anchor xml:id="_noisy__tsp_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;robust_total_route_length&#32;=&#32;0
<anchor xml:id="_noisy__tsp_8py_source_1l00041"/>00041 &#32;&#32;&#32;&#32;order&#32;=&#32;np.argsort(x)&#32;+&#32;1&#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(iter_num):
<anchor xml:id="_noisy__tsp_8py_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total_route_length&#32;=&#32;0
<anchor xml:id="_noisy__tsp_8py_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total_route_length&#32;+=&#32;W[0,&#32;order[0]]&#32;+&#32;np.random.random()&#32;*&#32;noise_factor&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total_route_length&#32;+=&#32;W[order[d-1],&#32;0]&#32;+&#32;np.random.random()&#32;*&#32;noise_factor&#32;&#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(d-1):
<anchor xml:id="_noisy__tsp_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;total_route_length&#32;+=&#32;W[order[i],&#32;order[i+1]]&#32;+&#32;np.random.random()&#32;*&#32;noise_factor
<anchor xml:id="_noisy__tsp_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;robust_total_route_length&#32;=&#32;max(total_route_length,&#32;robust_total_route_length)
<anchor xml:id="_noisy__tsp_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;robust_total_route_length
<anchor xml:id="_noisy__tsp_8py_source_1l00050"/>00050 
<anchor xml:id="_noisy__tsp_8py_source_1l00051"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p">00051</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p">TSP</link>:
<anchor xml:id="_noisy__tsp_8py_source_1l00052"/>00052 
<anchor xml:id="_noisy__tsp_8py_source_1l00053"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ac6667519b59b578a877b76927beb4f5f">00053</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ac6667519b59b578a877b76927beb4f5f">__init__</link>(self,&#32;name,&#32;W,&#32;noise_factor,&#32;iter_num):
<anchor xml:id="_noisy__tsp_8py_source_1l00054"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a6e8212b6541f83c5fb8873d1b11160ad">00054</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a6e8212b6541f83c5fb8873d1b11160ad">name</link>&#32;=&#32;name
<anchor xml:id="_noisy__tsp_8py_source_1l00055"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a342ebcc277e8f695d3d0b74971608e16">00055</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a342ebcc277e8f695d3d0b74971608e16">d</link>&#32;=&#32;W.shape[0]&#32;-&#32;1
<anchor xml:id="_noisy__tsp_8py_source_1l00056"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ac77bb2ffbe421579fa7588619208349c">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ac77bb2ffbe421579fa7588619208349c">W</link>&#32;=&#32;W
<anchor xml:id="_noisy__tsp_8py_source_1l00057"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1aab15a8e683241dd5f30608552afa10de">00057</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1aab15a8e683241dd5f30608552afa10de">noise_factor</link>&#32;=&#32;noise_factor
<anchor xml:id="_noisy__tsp_8py_source_1l00058"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a0b625778fcb7aa5c2e945515f60d0696">00058</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a0b625778fcb7aa5c2e945515f60d0696">iter_num</link>&#32;=&#32;iter_num
<anchor xml:id="_noisy__tsp_8py_source_1l00059"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a12b4d225747619cbd6f5cb345b30eb4e">00059</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a12b4d225747619cbd6f5cb345b30eb4e">evals</link>&#32;=&#32;mp.RawValue(ct.c_long,&#32;0)&#32;&#32;<emphasis role="comment">#&#32;writable&#32;across&#32;python&#32;processes</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00060"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ae627032ef2a6509aee69ea8b04c64585">00060</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ae627032ef2a6509aee69ea8b04c64585">best_y</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;np.inf)&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00061"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a1614a3adc9935ebf5db3b81a2a161d62">00061</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a1614a3adc9935ebf5db3b81a2a161d62">t0</link>&#32;=&#32;time.perf_counter()
<anchor xml:id="_noisy__tsp_8py_source_1l00062"/>00062 
<anchor xml:id="_noisy__tsp_8py_source_1l00063"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a820f00764aca30493d15b5fbaab1f558">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a820f00764aca30493d15b5fbaab1f558">__call__</link>(self,&#32;x):&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;<link linkend="_namespaceexamples_1_1noisy__tsp_1a0ce68f212bcae03932d42fc95e0c9b5e">evaluate_tsp</link>(x,&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ac77bb2ffbe421579fa7588619208349c">W</link>,&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a342ebcc277e8f695d3d0b74971608e16">d</link>,&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1aab15a8e683241dd5f30608552afa10de">noise_factor</link>,&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a0b625778fcb7aa5c2e945515f60d0696">iter_num</link>)
<anchor xml:id="_noisy__tsp_8py_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a12b4d225747619cbd6f5cb345b30eb4e">evals</link>.value&#32;+=&#32;1
<anchor xml:id="_noisy__tsp_8py_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ae627032ef2a6509aee69ea8b04c64585">best_y</link>.value:
<anchor xml:id="_noisy__tsp_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ae627032ef2a6509aee69ea8b04c64585">best_y</link>.value&#32;=&#32;y&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(<emphasis role="stringliteral">&quot;evals&#32;=&#32;{0}:&#32;time&#32;=&#32;{1:.1f}&#32;y&#32;=&#32;{2:.5f}&#32;x=&#32;{3:s}&quot;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.<link linkend="_namespaceexamples_1_1noisy__tsp_1a32bd4bbc6c3e7c205179670d3c261b66">format</link>(self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a12b4d225747619cbd6f5cb345b30eb4e">evals</link>.value,&#32;dtime(self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a1614a3adc9935ebf5db3b81a2a161d62">t0</link>),&#32;y,&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;[&apos;</emphasis>&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>.join([f<emphasis role="stringliteral">&quot;{xi:.16f}&quot;</emphasis>&#32;<emphasis role="keywordflow">for</emphasis>&#32;xi&#32;<emphasis role="keywordflow">in</emphasis>&#32;x])&#32;+&#32;<emphasis role="stringliteral">&apos;]&apos;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;))
<anchor xml:id="_noisy__tsp_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y
<anchor xml:id="_noisy__tsp_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00074"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a18f9b6b35c64ab50fa3abdad4a12ef42">00074</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ae0e91e94ec6dd338a47022f9ac6fe368">mofun</link>(self,&#32;xs):
<anchor xml:id="_noisy__tsp_8py_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;self(xs)
<anchor xml:id="_noisy__tsp_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array([y])
<anchor xml:id="_noisy__tsp_8py_source_1l00077"/>00077 &#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00078"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ab921c0f958d351e1846745dfe2e6c438">00078</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ab921c0f958d351e1846745dfe2e6c438">bounds</link>(self):
<anchor xml:id="_noisy__tsp_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Bounds(np.zeros(self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a342ebcc277e8f695d3d0b74971608e16">d</link>),&#32;np.array([1]*self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a342ebcc277e8f695d3d0b74971608e16">d</link>))&#32;&#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00080"/>00080 &#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00081"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a2f0e74ea61f09f52a769556ba2cfd8b6">00081</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a2f0e74ea61f09f52a769556ba2cfd8b6">__str__</link>(self):
<anchor xml:id="_noisy__tsp_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;f<emphasis role="stringliteral">&quot;TSP(name={self.name},evals={self.evals},iter={self.iter_num})&quot;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00083"/>00083 
<anchor xml:id="_noisy__tsp_8py_source_1l00084"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a5849bb4c633a30f8c2929f486eda293a">00084</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a5849bb4c633a30f8c2929f486eda293a">optimize</link>(self):
<anchor xml:id="_noisy__tsp_8py_source_1l00085"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a37817a8e4866856cf13ce4f10b4163cd">00085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a37817a8e4866856cf13ce4f10b4163cd">bestY</link>&#32;=&#32;1E99
<anchor xml:id="_noisy__tsp_8py_source_1l00086"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a50e8129f4893cf0fb95a3068ccbf3111">00086</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a50e8129f4893cf0fb95a3068ccbf3111">bestX</link>&#32;=&#32;[]&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;retry.minimize(self,&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ab921c0f958d351e1846745dfe2e6c438">bounds</link>(),&#32;optimizer=<link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp">Bite_cpp</link>(50000,stall_criterion=3),&#32;num_retries=32)&#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#return&#32;retry.minimize(self,&#32;self.bounds(),&#32;optimizer=De_cpp(50000),&#32;num_retries=32)&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#return&#32;retry.minimize(self,&#32;self.bounds(),&#32;optimizer=Cma_cpp(50000),&#32;num_retries=320)&#32;&#32;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#return&#32;retry.minimize(self,&#32;self.bounds(),&#32;optimizer=De_python(50000),&#32;num_retries=32)&#32;&#32;&#32;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00091"/>00091 
<anchor xml:id="_noisy__tsp_8py_source_1l00092"/>00092 &#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00093"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1aa298d4659787619babc9c7c0bbb98b74">00093</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1aa298d4659787619babc9c7c0bbb98b74">optimize_mo</link>(self,&#32;nsga_update&#32;=&#32;True):
<anchor xml:id="_noisy__tsp_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a37817a8e4866856cf13ce4f10b4163cd">bestY</link>&#32;=&#32;1E99
<anchor xml:id="_noisy__tsp_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1a50e8129f4893cf0fb95a3068ccbf3111">bestX</link>&#32;=&#32;[]
<anchor xml:id="_noisy__tsp_8py_source_1l00096"/><link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ae0e91e94ec6dd338a47022f9ac6fe368">00096</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;modecpp.retry(self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ae0e91e94ec6dd338a47022f9ac6fe368">mofun</link>,&#32;1,&#32;0,&#32;self.<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p_1ab921c0f958d351e1846745dfe2e6c438">bounds</link>(),&#32;num_retries=320,&#32;popsize&#32;=&#32;48,&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;1000000,&#32;nsga_update&#32;=&#32;nsga_update,&#32;logger&#32;=&#32;logger())
<anchor xml:id="_noisy__tsp_8py_source_1l00098"/>00098 
<anchor xml:id="_noisy__tsp_8py_source_1l00099"/>00099 
<anchor xml:id="_noisy__tsp_8py_source_1l00100"/><link linkend="_namespaceexamples_1_1noisy__tsp_1a274a3b58edfc0cdd8981e59138bc1d5b">00100</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1noisy__tsp_1a274a3b58edfc0cdd8981e59138bc1d5b">load_tsplib</link>(path,&#32;noise_factor=1,&#32;iter_num=100):
<anchor xml:id="_noisy__tsp_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;instance&#32;=&#32;tsplib95.load(path)
<anchor xml:id="_noisy__tsp_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;W&#32;=&#32;networkx.to_numpy_matrix(instance.get_graph())
<anchor xml:id="_noisy__tsp_8py_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classexamples_1_1noisy__tsp_1_1_t_s_p">TSP</link>(instance.name,&#32;W,&#32;noise_factor,&#32;iter_num)
<anchor xml:id="_noisy__tsp_8py_source_1l00104"/>00104 
<anchor xml:id="_noisy__tsp_8py_source_1l00105"/>00105 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_noisy__tsp_8py_source_1l00106"/>00106 &#32;&#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;see&#32;http://comopt.ifi.uni-heidelberg.de/software/TSPLIB95/STSP.html&#32;for&#32;solutions&#32;&#32;&#32;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00108"/>00108 &#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00109"/><link linkend="_namespaceexamples_1_1noisy__tsp_1a8345b041db5eda8bdc039cee0b2f2a3b">00109</link> &#32;&#32;&#32;&#32;tsp&#32;=&#32;<link linkend="_namespaceexamples_1_1noisy__tsp_1a274a3b58edfc0cdd8981e59138bc1d5b">load_tsplib</link>(<emphasis role="stringliteral">&apos;data/tsp/br17.tsp&apos;</emphasis>).optimize()
<anchor xml:id="_noisy__tsp_8py_source_1l00110"/>00110 
<anchor xml:id="_noisy__tsp_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;see&#32;https://www.math.uwaterloo.ca/tsp/history/tspinfo/gr666_info.html&#32;</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;optimal&#32;solution&#32;without&#32;noise&#32;for&#32;gr666&#32;is&#32;294358.</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="comment">#tsp&#32;=&#32;load_tsplib(&apos;data/tsp/gr666.tsp&apos;).optimize()</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;
<anchor xml:id="_noisy__tsp_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<emphasis role="comment">#tsp&#32;=&#32;load_tsplib(&apos;data/tsp/berlin52.tsp&apos;).optimize_mo()</emphasis>
<anchor xml:id="_noisy__tsp_8py_source_1l00116"/>00116 
<anchor xml:id="_noisy__tsp_8py_source_1l00117"/>00117 
</programlisting></section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp" xml:lang="en-US">
<title>fcmaes.optimizer.Cma_cpp Class Reference</title>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary></indexterm>
<para>

<para>This class implements the CMA-ES optimization algorithm with customization options. </para>
 
</para>
Inheritance diagram for fcmaes.optimizer.Cma_cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_cma__cpp__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for fcmaes.optimizer.Cma_cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_cma__cpp__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a9d071c64c65735fdf51ec4f744397e29">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578">popsize</link>=31, Optional[ArrayLike] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c">guess</link>=None, Optional[float] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ae7c8ca1a9885411036279c8990bada8e">stop_fitness</link>=-np.inf, Optional[float] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120">sdevs</link>=None, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ada69629e32dd255e9ae77bdc81803f7e">workers</link>=None, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a30083184aacba7ca41b7a96e06ba164c">update_gap</link>=None, Optional[bool] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a7d425626d29af5e5e323d059572b9931">normalize</link>=True, Optional[bool] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ab75f2eed9cd3127b7174cc45f7ede81d">delayed_update</link>=True, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad8ae4d6852922d2037677886a6e47081">stop_hist</link>=-1)</para>

<para>Initializes the CMA-ES optimization algorithm with the specified parameters. </para>
</listitem>
            <listitem><para>Tuple[np.ndarray, float, int] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a">minimize</link> (self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c">guess</link>=None, Optional[Union[float, ArrayLike, Callable]] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120">sdevs</link>=0.1, rg=Generator(PCG64DXSM()), store=None)</para>

<para>Minimizes an objective function using the CMA-ES optimization algorithm. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[str] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>=&apos;&apos;)</para>

<para>Initializes the class with specific parameters including the maximum number of evaluations and the name. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link> (self, store=None)</para>

<para>Evaluates and returns the maximum number of evaluations based on the provided store or the object&apos;s default value. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link> (self, store=None)</para>

<para>Gets the count of runs from the provided store. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578">popsize</link> = popsize</para>

<para>The population size for the optimization process. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ae7c8ca1a9885411036279c8990bada8e">stop_fitness</link> = stop_fitness</para>

<para><link linkend="_class_fitness">Fitness</link> value threshold for stopping the optimization process early. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad8ae4d6852922d2037677886a6e47081">stop_hist</link> = stop_hist</para>

<para>Number of recent fitness values considered for convergence checks. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c">guess</link> = guess</para>

<para>Initial guess for the optimization variables. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120">sdevs</link> = sdevs</para>

<para>Initial standard deviations for the distribution used in CMA-ES. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a30083184aacba7ca41b7a96e06ba164c">update_gap</link> = update_gap</para>

<para>Interval (in terms of generations) between updates to the distribution. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ab75f2eed9cd3127b7174cc45f7ede81d">delayed_update</link> = delayed_update</para>

<para>Indicates whether updates to the distribution are delayed until. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a7d425626d29af5e5e323d059572b9931">normalize</link> = normalize</para>

<para>Specifies whether the input parameters should be normalized for the. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ada69629e32dd255e9ae77bdc81803f7e">workers</link> = workers</para>

<para>The number of workers used to parallelize computations and evaluations. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Attributes inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link> = max_evaluations</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link> = name</para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>

<para>This class implements the CMA-ES optimization algorithm with customization options. </para>



<para>The <link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp">Cma_cpp</link> class extends the functionality of a generic optimizer by introducing CMA-ES specific features. This includes options for population size, convergence criteria, standard deviations for mutations, and the ability to parallelize the optimization process. It is designed for optimizing objective functions with or without constraints. </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01297">1297</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a9d071c64c65735fdf51ec4f744397e29"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_cpp.__init__ ( self, Optional[int]  max_evaluations = <computeroutput>50000</computeroutput>
, Optional[int]  popsize = <computeroutput>31</computeroutput>
, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[float]  stop_fitness = <computeroutput>-np.inf</computeroutput>
, Optional[float]  sdevs = <computeroutput>None</computeroutput>
, Optional[int]  workers = <computeroutput>None</computeroutput>
, Optional[int]  update_gap = <computeroutput>None</computeroutput>
, Optional[bool]  normalize = <computeroutput>True</computeroutput>
, Optional[bool]  delayed_update = <computeroutput>True</computeroutput>
, Optional[int]  stop_hist = <computeroutput>-1</computeroutput>
)</computeroutput></para><para>

<para>Initializes the CMA-ES optimization algorithm with the specified parameters. </para>
</para>

<para>This method extends an existing optimizer by incorporating properties specific to CMA-ES. It allows fine-tuning of the optimization process through various parameters.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>max_evaluations</entry><entry>
<para>The maximum number of evaluations allowed for the optimizer. </para>
</entry>
                            </row>
                            <row>
<entry>popsize</entry><entry>
<para>The population size for the optimization process. </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>Initial guess for the optimization variables. </para>
</entry>
                            </row>
                            <row>
<entry>stop_fitness</entry><entry>
<para><link linkend="_class_fitness">Fitness</link> value threshold for stopping the optimization. </para>
</entry>
                            </row>
                            <row>
<entry>sdevs</entry><entry>
<para>Initial standard deviations for the distribution. </para>
</entry>
                            </row>
                            <row>
<entry>workers</entry><entry>
<para>The number of workers to parallelize computations. </para>
</entry>
                            </row>
                            <row>
<entry>update_gap</entry><entry>
<para>Interval (in terms of generations) between updates to the distribution. </para>
</entry>
                            </row>
                            <row>
<entry>normalize</entry><entry>
<para>Specifies whether the input parameters should be normalized. </para>
</entry>
                            </row>
                            <row>
<entry>delayed_update</entry><entry>
<para>Indicates whether updates to the distribution are delayed. </para>
</entry>
                            </row>
                            <row>
<entry>stop_hist</entry><entry>
<para>Number of recent fitness values to consider for convergence checks. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01347">1347</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a"/><section>
    <title>minimize()</title>
<indexterm><primary>minimize</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>minimize</secondary></indexterm>
<para><computeroutput> Tuple[np.ndarray, float, int] fcmaes.optimizer.Cma_cpp.minimize ( self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[Union[float, ArrayLike, Callable]]  sdevs = <computeroutput>0.1</computeroutput>
,  rg = <computeroutput>Generator(PCG64DXSM())</computeroutput>
,  store = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Minimizes an objective function using the CMA-ES optimization algorithm. </para>
</para>

<para><literallayout><computeroutput>   This method utilizes the CMA-ES (Covariance Matrix Adaptation Evolution Strategy) to
   find the minima of the given objective function within specified bounds. The algorithm
   supports customizable standard deviations for mutations, an optional random number generator,
   and the ability to store optimization progress.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fun</entry><entry>
<para>A callable objective function to minimize. It accepts an array-like object as input and returns a scalar value. </para>
</entry>
                            </row>
                            <row>
<entry>bounds</entry><entry>
<para>The bounds within which the optimization will be performed. This is optional and can be used to constrain the search space. </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>Initial guess for the optimization. If not provided, a default initial guess is used. </para>
</entry>
                            </row>
                            <row>
<entry>sdevs</entry><entry>
<para>Optional standard deviations for mutations. It can be provided as a float, an array-like object, or a callable. Default is 0.1. </para>
</entry>
                            </row>
                            <row>
<entry>rg</entry><entry>
<para>A random number generator instance. By default, it uses a generator from the PCG64DXSM </para>
</entry>
                            </row>
                            <row>
<entry>algorithm.</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>store</entry><entry>
<para>Optional. A store to save progress or retrieve optimization state.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Tuple[np.ndarray, float, int]:<itemizedlist>
<listitem>
<para>The first element is the array containing the optimal solution.</para>
</listitem><listitem>
<para>The second element is the corresponding minimum function value.</para>
</listitem><listitem>
<para>The third element is the number of function evaluations performed. </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01396">1396</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_cma__cpp_adf0a83599c8dbbdab6e4c0482e22443a_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ab75f2eed9cd3127b7174cc45f7ede81d"/><section>
    <title>delayed_update</title>
<indexterm><primary>delayed_update</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>delayed_update</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_cpp.delayed_update = delayed_update</computeroutput></para><para>

<para>Indicates whether updates to the distribution are delayed until. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01365">1365</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c"/><section>
    <title>guess</title>
<indexterm><primary>guess</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>guess</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_cpp.guess = guess</computeroutput></para><para>

<para>Initial guess for the optimization variables. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01362">1362</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a7d425626d29af5e5e323d059572b9931"/><section>
    <title>normalize</title>
<indexterm><primary>normalize</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>normalize</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_cpp.normalize = normalize</computeroutput></para><para>

<para>Specifies whether the input parameters should be normalized for the. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01366">1366</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578"/><section>
    <title>popsize</title>
<indexterm><primary>popsize</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>popsize</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_cpp.popsize = popsize</computeroutput></para><para>

<para>The population size for the optimization process. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01359">1359</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120"/><section>
    <title>sdevs</title>
<indexterm><primary>sdevs</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>sdevs</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_cpp.sdevs = sdevs</computeroutput></para><para>

<para>Initial standard deviations for the distribution used in CMA-ES. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01363">1363</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ae7c8ca1a9885411036279c8990bada8e"/><section>
    <title>stop_fitness</title>
<indexterm><primary>stop_fitness</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>stop_fitness</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_cpp.stop_fitness = stop_fitness</computeroutput></para><para>

<para><link linkend="_class_fitness">Fitness</link> value threshold for stopping the optimization process early. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01360">1360</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ad8ae4d6852922d2037677886a6e47081"/><section>
    <title>stop_hist</title>
<indexterm><primary>stop_hist</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>stop_hist</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_cpp.stop_hist = stop_hist</computeroutput></para><para>

<para>Number of recent fitness values considered for convergence checks. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01361">1361</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1a30083184aacba7ca41b7a96e06ba164c"/><section>
    <title>update_gap</title>
<indexterm><primary>update_gap</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>update_gap</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_cpp.update_gap = update_gap</computeroutput></para><para>

<para>Interval (in terms of generations) between updates to the distribution. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01364">1364</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__cpp_1ada69629e32dd255e9ae77bdc81803f7e"/><section>
    <title>workers</title>
<indexterm><primary>workers</primary><secondary>fcmaes.optimizer.Cma_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_cpp</primary><secondary>workers</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_cpp.workers = workers</computeroutput></para><para>

<para>The number of workers used to parallelize computations and evaluations. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01367">1367</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
fcmaes/<link linkend="_optimizer_8py">optimizer.py</link></section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespacequantumcomm" xml:lang="en-US">
<title>quantumcomm Namespace Reference</title>
<indexterm><primary>quantumcomm</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classquantumcomm_1_1constellation__udp">constellation_udp</link></para>

<para>A Pygmo compatible UDP (User Defined Problem) representing the constellation design problem for SpOC 2023. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacequantumcomm_1a7c43375b014085ada1580778d0deb20c">get_mothership_satellites</link> ()</para>

<para>Construct array of mothership orbital elements (the TLEs of actual Earth-orbiting satellites below are used as a proxy for plausible orbital dynamics around a habitable planet) </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1adeb3d6f34e9ce9bde81d145e0cb4b1c6">line_of_sight</link> (r1, r2)</para>

<para>Given two position vectors returns the distance of the line of sight to the origin. </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a32214ea35bfdc5ac32988510e98f5643">zenith_angle</link> (src, dst)</para>

<para>Computes the cosine of the zenith angle (theta_z) of the LOS between source and destination node. </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1af0f5b86687bc9356f53b8e0fcd826c2d">qkd_metric</link> (idx, src, dst, cos_theta_z, eta, eps_z, n_rovers)</para>

<para>Computes the edge weight according to QKD probabilities. </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a0b9a5d09cf8b8062250d0631d392b9e4">get_adjmatrix</link> (pos, ep_idx, eta, num_w1_sats, LOS, N, eps_z, n_rovers)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1ab6b2e04e125b00253e56eea291fb11a5">construct_rover_pos</link> (lambda0, phi0, n_rovers, jds, R_p, w_p)</para>

<para>Computes the position of the rovers at time t based on the initial latitude and longitude. </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1abfabcba615cdf83e8edf913c888034e0">combine_scores</link> (points)</para>

<para>Function for aggregating single solutions into one score using hypervolume indicator. </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1af16dec207874c04d4e67e42e8832d851">fitness</link> (x)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1ac0164d14577f24455b1c4cfd24a7a9fd">select_valid</link> (<link linkend="_namespacequantumcomm_1a009bae3131bf4f32ab41813e095bd545">xs</link>, <link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a8419b7d865cb04abb4a75ee8457a301c">read_solution</link> (fname)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a84c6558e0b765a6d0b545850d3821a76">mo_par</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a685f20cc5ab4536617a667be7981d7e3">mo_to_qd</link> (y)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a6b7a2382d55e8c0db17e1220d4cd7be3">qd_fun</link> (x)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a9179fbf0ec29e945c2af91b0202b0e99">get_arch</link> (qd_bounds, niche_num, samples_per_niche)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a7b02c8bc9af9b7e849783b5a8cbfc014">nd_par</link> (niche_num=10000)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1aeb3856600fe5caa9eff67e2ebb6f269a">so_par</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a1b51de779f54455f301b965bca17467c">pymoo_par</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a29b16ceed23f94c44a426cf51cb2670d">reduce</link> (<link linkend="_namespacequantumcomm_1a009bae3131bf4f32ab41813e095bd545">xs</link>, <link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>, num, <link linkend="_namespacequantumcomm_1ae07ba0a2eed2514d1829c083ea9828b4">evals</link>=50000, retries=mp.cpu_count())</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacequantumcomm_1a2c2d5e5c609de5aa6cd1d78008e5cf2a">stdout</link></para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1aa02045840efca4723c7830b9d2478fea">format</link></para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1aef9f62aff427fde17bcbda6c3139420e">level</link></para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1aea96ab455c15aa9c4d6284bb868ac44c">udp</link> = <link linkend="_classquantumcomm_1_1constellation__udp">constellation_udp</link>()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1ae6a7b0e3b3363799da193a937082152c">nobj</link> = 2</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1a57cb5c03dd7f2016c85077510ec50fd4">ncon</link> = 2</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1a38c14b3f964ffa67c7911f4e175f4784">dim</link> = 20</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1ab5b2a2b68abc9d15c1406cad0842982f">ref_point</link> = np.array([1.2, 1.4])</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a7bea33c966401d0a25705d8371e83147">ubs</link> = udp.get_bounds()</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1adaca5954b72a118a0abc3f3b1d9d56ac">bounds</link> = Bounds(<link linkend="_namespacequantumcomm_1a7bea33c966401d0a25705d8371e83147">ubs</link>[0], <link linkend="_namespacequantumcomm_1a7bea33c966401d0a25705d8371e83147">ubs</link>[1])</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a4ae96be5bf50bd2b7bdbf8077fcbf992">max_evals</link> = max_evals</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a10d52de9364caed740ad48fe34ecc151">manager</link> = Manager()</para>
</listitem>
            <listitem><para>list <link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link> = self.manager.list(ys)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a3e2a162310a02aff9e3e2129cfceaa2c">ys0</link> = list(<link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>)</para>
</listitem>
            <listitem><para>list <link linkend="_namespacequantumcomm_1a009bae3131bf4f32ab41813e095bd545">xs</link> = self.manager.list(xs)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a4df7798fa72740ab9b5adcadca862f58">min_ys</link> = np.amin(<link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>, axis=0)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1a5b2fa9d0041f90fcf0b912c6de25020a">count</link> = mp.RawValue(ct.c_int, 0)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a3a28fa8296e887be274b151c8429b985">mutex</link> = mp.Lock()</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1ae18efb9ddb56b08da17e0a6c224e48fa">n</link> = len(<link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1aad80073dce041cbb8ad4b99c5d39fc74">max_hv</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1ae07ba0a2eed2514d1829c083ea9828b4">evals</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a894d47aede87908d7383da852279e601">pid</link> = pid</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1acf793ce9680502af168bcaa54d2b161b">xs_out</link> = xs_out</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1acb604547ddffa821c69c8ccbec065d4e">ys_out</link> = ys_out</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespacequantumcomm_1abfabcba615cdf83e8edf913c888034e0"/><section>
    <title>combine_scores()</title>
<indexterm><primary>combine_scores</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>combine_scores</secondary></indexterm>
<para><computeroutput>quantumcomm.combine_scores ( points)</computeroutput></para><para>

<para>Function for aggregating single solutions into one score using hypervolume indicator. </para>
</para>
<para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00754">754</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1ab6b2e04e125b00253e56eea291fb11a5"/><section>
    <title>construct_rover_pos()</title>
<indexterm><primary>construct_rover_pos</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>construct_rover_pos</secondary></indexterm>
<para><computeroutput>quantumcomm.construct_rover_pos ( lambda0,  phi0,  n_rovers,  jds,  R_p,  w_p)</computeroutput></para><para>

<para>Computes the position of the rovers at time t based on the initial latitude and longitude. </para>
</para>

<para><literallayout><computeroutput>   lambda0 (float, N_r x 1): initial latitudes of the rovers
   phi0 (float, N_r x 1): initial longitudes of the rovers
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para>float, n_rovers x n_epochs x 3: rover x, y, z positions </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00198">198</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_ab6b2e04e125b00253e56eea291fb11a5_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1af16dec207874c04d4e67e42e8832d851"/><section>
    <title>fitness()</title>
<indexterm><primary>fitness</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>fitness</secondary></indexterm>
<para><computeroutput>quantumcomm.fitness ( x)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00791">791</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_af16dec207874c04d4e67e42e8832d851_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a0b9a5d09cf8b8062250d0631d392b9e4"/><section>
    <title>get_adjmatrix()</title>
<indexterm><primary>get_adjmatrix</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>get_adjmatrix</secondary></indexterm>
<para><computeroutput>quantumcomm.get_adjmatrix ( pos,  ep_idx,  eta,  num_w1_sats,  LOS,  N,  eps_z,  n_rovers)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00170">170</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a0b9a5d09cf8b8062250d0631d392b9e4_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a0b9a5d09cf8b8062250d0631d392b9e4_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a9179fbf0ec29e945c2af91b0202b0e99"/><section>
    <title>get_arch()</title>
<indexterm><primary>get_arch</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>get_arch</secondary></indexterm>
<para><computeroutput>quantumcomm.get_arch ( qd_bounds,  niche_num,  samples_per_niche)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00864">864</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a9179fbf0ec29e945c2af91b0202b0e99_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a9179fbf0ec29e945c2af91b0202b0e99_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a7c43375b014085ada1580778d0deb20c"/><section>
    <title>get_mothership_satellites()</title>
<indexterm><primary>get_mothership_satellites</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>get_mothership_satellites</secondary></indexterm>
<para><computeroutput>quantumcomm.get_mothership_satellites ( )</computeroutput></para><para>

<para>Construct array of mothership orbital elements (the TLEs of actual Earth-orbiting satellites below are used as a proxy for plausible orbital dynamics around a habitable planet) </para>
</para>
<para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00060">60</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a7c43375b014085ada1580778d0deb20c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1adeb3d6f34e9ce9bde81d145e0cb4b1c6"/><section>
    <title>line_of_sight()</title>
<indexterm><primary>line_of_sight</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>line_of_sight</secondary></indexterm>
<para><computeroutput>quantumcomm.line_of_sight ( r1,  r2)</computeroutput></para><para>

<para>Given two position vectors returns the distance of the line of sight to the origin. </para>
</para>

<para><literallayout><computeroutput>   r1 (numpy array): first point
   r2 (numpy array): second point
</computeroutput></literallayout> </para>
<para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00107">107</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_adeb3d6f34e9ce9bde81d145e0cb4b1c6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a84c6558e0b765a6d0b545850d3821a76"/><section>
    <title>mo_par()</title>
<indexterm><primary>mo_par</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>mo_par</secondary></indexterm>
<para><computeroutput>quantumcomm.mo_par ( )</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00819">819</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a84c6558e0b765a6d0b545850d3821a76_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a685f20cc5ab4536617a667be7981d7e3"/><section>
    <title>mo_to_qd()</title>
<indexterm><primary>mo_to_qd</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>mo_to_qd</secondary></indexterm>
<para><computeroutput>quantumcomm.mo_to_qd ( y)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00855">855</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a685f20cc5ab4536617a667be7981d7e3_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a7b02c8bc9af9b7e849783b5a8cbfc014"/><section>
    <title>nd_par()</title>
<indexterm><primary>nd_par</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>nd_par</secondary></indexterm>
<para><computeroutput>quantumcomm.nd_par ( niche_num = <computeroutput>10000</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00870">870</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a7b02c8bc9af9b7e849783b5a8cbfc014_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a1b51de779f54455f301b965bca17467c"/><section>
    <title>pymoo_par()</title>
<indexterm><primary>pymoo_par</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>pymoo_par</secondary></indexterm>
<para><computeroutput>quantumcomm.pymoo_par ( )</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00994">994</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a1b51de779f54455f301b965bca17467c_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a6b7a2382d55e8c0db17e1220d4cd7be3"/><section>
    <title>qd_fun()</title>
<indexterm><primary>qd_fun</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>qd_fun</secondary></indexterm>
<para><computeroutput>quantumcomm.qd_fun ( x)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00861">861</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a6b7a2382d55e8c0db17e1220d4cd7be3_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1af0f5b86687bc9356f53b8e0fcd826c2d"/><section>
    <title>qkd_metric()</title>
<indexterm><primary>qkd_metric</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>qkd_metric</secondary></indexterm>
<para><computeroutput>quantumcomm.qkd_metric ( idx,  src,  dst,  cos_theta_z,  eta,  eps_z,  n_rovers)</computeroutput></para><para>

<para>Computes the edge weight according to QKD probabilities. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>idx</entry><entry>
<para>index of node in the graph src (numpy array, 1x3): position of source node dst (numpy array, 1x3): position of destination node </para>
</entry>
                            </row>
                            <row>
<entry>cos_theta_z</entry><entry>
<para>cosine of the zenith angle of qkd link </para>
</entry>
                            </row>
                            <row>
<entry>eta</entry><entry>
<para>satellite quality indicator for corresponding constellation</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>float edge weight </para>

<para>float communications link distance between src and dst </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00151">151</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_af0f5b86687bc9356f53b8e0fcd826c2d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a8419b7d865cb04abb4a75ee8457a301c"/><section>
    <title>read_solution()</title>
<indexterm><primary>read_solution</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>read_solution</secondary></indexterm>
<para><computeroutput>quantumcomm.read_solution ( fname)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00804">804</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a8419b7d865cb04abb4a75ee8457a301c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a29b16ceed23f94c44a426cf51cb2670d"/><section>
    <title>reduce()</title>
<indexterm><primary>reduce</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>reduce</secondary></indexterm>
<para><computeroutput>quantumcomm.reduce ( xs,  ys,  num,  evals = <computeroutput>50000</computeroutput>
,  retries = <computeroutput>mp.cpu_count()</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l01110">1110</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a29b16ceed23f94c44a426cf51cb2670d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a29b16ceed23f94c44a426cf51cb2670d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1ac0164d14577f24455b1c4cfd24a7a9fd"/><section>
    <title>select_valid()</title>
<indexterm><primary>select_valid</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>select_valid</secondary></indexterm>
<para><computeroutput>quantumcomm.select_valid ( xs,  ys)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00795">795</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1aeb3856600fe5caa9eff67e2ebb6f269a"/><section>
    <title>so_par()</title>
<indexterm><primary>so_par</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>so_par</secondary></indexterm>
<para><computeroutput>quantumcomm.so_par ( )</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00894">894</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_aeb3856600fe5caa9eff67e2ebb6f269a_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a32214ea35bfdc5ac32988510e98f5643"/><section>
    <title>zenith_angle()</title>
<indexterm><primary>zenith_angle</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>zenith_angle</secondary></indexterm>
<para><computeroutput>quantumcomm.zenith_angle ( src,  dst)</computeroutput></para><para>

<para>Computes the cosine of the zenith angle (theta_z) of the LOS between source and destination node. </para>
</para>

<para><literallayout><computeroutput>   src (numpy array, N_r x 3): rover x, y, z positions
   dst (numpy array, N_s x 3): mothership x, y, z positions
</computeroutput></literallayout></para>

<para><formalpara><title>Returns</title>

<para></para>

<para>float cosine of the zenith angle </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00129">129</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespacequantumcomm_a32214ea35bfdc5ac32988510e98f5643_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_namespacequantumcomm_1adaca5954b72a118a0abc3f3b1d9d56ac"/><section>
    <title>bounds</title>
<indexterm><primary>bounds</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>bounds</secondary></indexterm>
<para><computeroutput>quantumcomm.bounds = Bounds(<link linkend="_namespacequantumcomm_1a7bea33c966401d0a25705d8371e83147">ubs</link>[0], <link linkend="_namespacequantumcomm_1a7bea33c966401d0a25705d8371e83147">ubs</link>[1])</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00789">789</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a5b2fa9d0041f90fcf0b912c6de25020a"/><section>
    <title>count</title>
<indexterm><primary>count</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>count</secondary></indexterm>
<para><computeroutput>int quantumcomm.count = mp.RawValue(ct.c_int, 0)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00924">924</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a38c14b3f964ffa67c7911f4e175f4784"/><section>
    <title>dim</title>
<indexterm><primary>dim</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>dim</secondary></indexterm>
<para><computeroutput>int quantumcomm.dim = 20</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00786">786</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1ae07ba0a2eed2514d1829c083ea9828b4"/><section>
    <title>evals</title>
<indexterm><primary>evals</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>evals</secondary></indexterm>
<para><computeroutput>int quantumcomm.evals = 0</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l01025">1025</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1aa02045840efca4723c7830b9d2478fea"/><section>
    <title>format</title>
<indexterm><primary>format</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>format</secondary></indexterm>
<para><computeroutput>quantumcomm.format</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00042">42</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1aef9f62aff427fde17bcbda6c3139420e"/><section>
    <title>level</title>
<indexterm><primary>level</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>level</secondary></indexterm>
<para><computeroutput>quantumcomm.level</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00042">42</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a10d52de9364caed740ad48fe34ecc151"/><section>
    <title>manager</title>
<indexterm><primary>manager</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>manager</secondary></indexterm>
<para><computeroutput>quantumcomm.manager = Manager()</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00919">919</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a4ae96be5bf50bd2b7bdbf8077fcbf992"/><section>
    <title>max_evals</title>
<indexterm><primary>max_evals</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>max_evals</secondary></indexterm>
<para><computeroutput>quantumcomm.max_evals = max_evals</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00918">918</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1aad80073dce041cbb8ad4b99c5d39fc74"/><section>
    <title>max_hv</title>
<indexterm><primary>max_hv</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>max_hv</secondary></indexterm>
<para><computeroutput>int quantumcomm.max_hv = 0</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l01021">1021</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a4df7798fa72740ab9b5adcadca862f58"/><section>
    <title>min_ys</title>
<indexterm><primary>min_ys</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>min_ys</secondary></indexterm>
<para><computeroutput>quantumcomm.min_ys = np.amin(<link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>, axis=0)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00923">923</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a3a28fa8296e887be274b151c8429b985"/><section>
    <title>mutex</title>
<indexterm><primary>mutex</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>mutex</secondary></indexterm>
<para><computeroutput>quantumcomm.mutex = mp.Lock()</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00925">925</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1ae18efb9ddb56b08da17e0a6c224e48fa"/><section>
    <title>n</title>
<indexterm><primary>n</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>n</secondary></indexterm>
<para><computeroutput>quantumcomm.n = len(<link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00926">926</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a57cb5c03dd7f2016c85077510ec50fd4"/><section>
    <title>ncon</title>
<indexterm><primary>ncon</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>ncon</secondary></indexterm>
<para><computeroutput>int quantumcomm.ncon = 2</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00785">785</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1ae6a7b0e3b3363799da193a937082152c"/><section>
    <title>nobj</title>
<indexterm><primary>nobj</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>nobj</secondary></indexterm>
<para><computeroutput>int quantumcomm.nobj = 2</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00784">784</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a894d47aede87908d7383da852279e601"/><section>
    <title>pid</title>
<indexterm><primary>pid</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>pid</secondary></indexterm>
<para><computeroutput>quantumcomm.pid = pid</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l01026">1026</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1ab5b2a2b68abc9d15c1406cad0842982f"/><section>
    <title>ref_point</title>
<indexterm><primary>ref_point</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>ref_point</secondary></indexterm>
<para><computeroutput>quantumcomm.ref_point = np.array([1.2, 1.4])</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00787">787</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a2c2d5e5c609de5aa6cd1d78008e5cf2a"/><section>
    <title>stdout</title>
<indexterm><primary>stdout</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>stdout</secondary></indexterm>
<para><computeroutput>quantumcomm.stdout</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00042">42</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a7bea33c966401d0a25705d8371e83147"/><section>
    <title>ubs</title>
<indexterm><primary>ubs</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>ubs</secondary></indexterm>
<para><computeroutput>quantumcomm.ubs = udp.get_bounds()</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00788">788</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1aea96ab455c15aa9c4d6284bb868ac44c"/><section>
    <title>udp</title>
<indexterm><primary>udp</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>udp</secondary></indexterm>
<para><computeroutput>quantumcomm.udp = <link linkend="_classquantumcomm_1_1constellation__udp">constellation_udp</link>()</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00783">783</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a009bae3131bf4f32ab41813e095bd545"/><section>
    <title>xs</title>
<indexterm><primary>xs</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>xs</secondary></indexterm>
<para><computeroutput>quantumcomm.xs = self.manager.list(xs)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00922">922</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1acf793ce9680502af168bcaa54d2b161b"/><section>
    <title>xs_out</title>
<indexterm><primary>xs_out</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>xs_out</secondary></indexterm>
<para><computeroutput>quantumcomm.xs_out = xs_out</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l01027">1027</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918"/><section>
    <title>ys</title>
<indexterm><primary>ys</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>ys</secondary></indexterm>
<para><computeroutput>quantumcomm.ys = self.manager.list(ys)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00920">920</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1a3e2a162310a02aff9e3e2129cfceaa2c"/><section>
    <title>ys0</title>
<indexterm><primary>ys0</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>ys0</secondary></indexterm>
<para><computeroutput>quantumcomm.ys0 = list(<link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>)</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l00921">921</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
<anchor xml:id="_namespacequantumcomm_1acb604547ddffa821c69c8ccbec065d4e"/><section>
    <title>ys_out</title>
<indexterm><primary>ys_out</primary><secondary>quantumcomm</secondary></indexterm>
<indexterm><primary>quantumcomm</primary><secondary>ys_out</secondary></indexterm>
<para><computeroutput>quantumcomm.ys_out = ys_out</computeroutput></para><para>
Definition at line <link linkend="_quantumcomm_8py_source_1l01028">1028</link> of file <link linkend="_quantumcomm_8py_source">quantumcomm.py</link>.</para>
</section>
</section>
</section>

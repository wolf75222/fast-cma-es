<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classdual__annealing_1_1_fitness" xml:lang="en-US">
<title>dual_annealing::Fitness Class Reference</title>
<indexterm><primary>dual_annealing::Fitness</primary></indexterm>
Collaboration diagram for dual_annealing::Fitness:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdual__annealing_1_1_fitness__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8">Fitness</link> (<link linkend="_namespacedual__annealing_1acc0e4feae757283b161380c003152d7c">callback_type</link> pfunc, <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> *lower_limit, <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> *upper_limit, long maxEvals_)</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5">getClosestFeasible</link> (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X) const</para>
</listitem>
            <listitem><para>double <link linkend="_classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5">eval</link> (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X)</para>
</listitem>
            <listitem><para>double <link linkend="_classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7">value</link> (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X)</para>
</listitem>
            <listitem><para>double <link linkend="_classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710">local_search</link> (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;x0, double currval, <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;res)</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdual__annealing_1_1_fitness_1a288c5b34db28ee5a3c0e0916f6936d27">encode</link> (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X) const</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8">decode</link> (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X) const</para>
</listitem>
            <listitem><para>int <link linkend="_classdual__annealing_1_1_fitness_1a9abe3257d970e7fec842dedfeb409f37">getEvaluations</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_classdual__annealing_1_1_fitness_1aa8838720841139fdfbac2c37a4dc0548">maxEvalReached</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d">lower</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdual__annealing_1_1_fitness_1aca95b5772925f77987ea96b12004b7b6">upper</link></para>
</listitem>
            <listitem><para>const double <link linkend="_classdual__annealing_1_1_fitness_1a6ca3b936412ade3edf4441e48f87a966">LS_MAXITER_RATIO</link> = 6</para>
</listitem>
            <listitem><para>const double <link linkend="_classdual__annealing_1_1_fitness_1a88756554a52354b1c976854944f5db4b">LS_MAXITER_MIN</link> = 100</para>
</listitem>
            <listitem><para>const double <link linkend="_classdual__annealing_1_1_fitness_1a6089fb532194afab1e05fac3e55c77c6">LS_MAXITER_MAX</link> = 1000</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacedual__annealing_1acc0e4feae757283b161380c003152d7c">callback_type</link> <link linkend="_classdual__annealing_1_1_fitness_1a420fcefb28b5a9ba16b80cabba1d017f">func</link></para>
</listitem>
            <listitem><para>long <link linkend="_classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42">evaluationCounter</link> = 0</para>
</listitem>
            <listitem><para>long <link linkend="_classdual__annealing_1_1_fitness_1a6fb1053a249b16799a038672c59e915c">maxEvals</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63">scale</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c">bestY</link> = DBL_MAX</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdual__annealing_1_1_fitness_1ab67b400f380bb926698cf02edd2f5ffa">bestX</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00072">72</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8"/><section>
    <title>Fitness()</title>
<indexterm><primary>Fitness</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>Fitness</secondary></indexterm>
<para><computeroutput>dual_annealing::Fitness::Fitness (<link linkend="_namespacedual__annealing_1acc0e4feae757283b161380c003152d7c">callback_type</link> pfunc, <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> * lower_limit, <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> * upper_limit, long maxEvals_)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00079">79</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8"/><section>
    <title>decode()</title>
<indexterm><primary>decode</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>decode</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> dual_annealing::Fitness::decode (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00143">143</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdual__annealing_1_1_fitness_ad5755fabd06c8e86de566687f40c55e8_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a288c5b34db28ee5a3c0e0916f6936d27"/><section>
    <title>encode()</title>
<indexterm><primary>encode</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>encode</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> dual_annealing::Fitness::encode (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00136">136</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdual__annealing_1_1_fitness_a288c5b34db28ee5a3c0e0916f6936d27_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5"/><section>
    <title>eval()</title>
<indexterm><primary>eval</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>eval</secondary></indexterm>
<para><computeroutput>double dual_annealing::Fitness::eval (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00096">96</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdual__annealing_1_1_fitness_a459c83b85fbfc02a5811a0f98d2ac7b5_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5"/><section>
    <title>getClosestFeasible()</title>
<indexterm><primary>getClosestFeasible</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>getClosestFeasible</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> dual_annealing::Fitness::getClosestFeasible (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00089">89</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdual__annealing_1_1_fitness_a95a989c077c91a342b18f61125c2bea5_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a9abe3257d970e7fec842dedfeb409f37"/><section>
    <title>getEvaluations()</title>
<indexterm><primary>getEvaluations</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>getEvaluations</secondary></indexterm>
<para><computeroutput>int dual_annealing::Fitness::getEvaluations ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00150">150</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdual__annealing_1_1_fitness_a9abe3257d970e7fec842dedfeb409f37_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710"/><section>
    <title>local_search()</title>
<indexterm><primary>local_search</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>local_search</secondary></indexterm>
<para><computeroutput>double dual_annealing::Fitness::local_search (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; x0, double currval, <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; res)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00120">120</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdual__annealing_1_1_fitness_a0e4b28444de4d6951dfb416e8e7a8710_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1aa8838720841139fdfbac2c37a4dc0548"/><section>
    <title>maxEvalReached()</title>
<indexterm><primary>maxEvalReached</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>maxEvalReached</secondary></indexterm>
<para><computeroutput>bool dual_annealing::Fitness::maxEvalReached ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00154">154</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7"/><section>
    <title>value()</title>
<indexterm><primary>value</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>value</secondary></indexterm>
<para><computeroutput>double dual_annealing::Fitness::value (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00103">103</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdual__annealing_1_1_fitness_a02a57480e20f23ac3d1b9eab91f408f7_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdual__annealing_1_1_fitness_a02a57480e20f23ac3d1b9eab91f408f7_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classdual__annealing_1_1_fitness_1ab67b400f380bb926698cf02edd2f5ffa"/><section>
    <title>bestX</title>
<indexterm><primary>bestX</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>bestX</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> dual_annealing::Fitness::bestX<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00164">164</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c"/><section>
    <title>bestY</title>
<indexterm><primary>bestY</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>bestY</secondary></indexterm>
<para><computeroutput>double dual_annealing::Fitness::bestY = DBL_MAX<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00163">163</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42"/><section>
    <title>evaluationCounter</title>
<indexterm><primary>evaluationCounter</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>evaluationCounter</secondary></indexterm>
<para><computeroutput>long dual_annealing::Fitness::evaluationCounter = 0<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00160">160</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a420fcefb28b5a9ba16b80cabba1d017f"/><section>
    <title>func</title>
<indexterm><primary>func</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>func</secondary></indexterm>
<para><computeroutput><link linkend="_namespacedual__annealing_1acc0e4feae757283b161380c003152d7c">callback_type</link> dual_annealing::Fitness::func<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00159">159</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d"/><section>
    <title>lower</title>
<indexterm><primary>lower</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>lower</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> dual_annealing::Fitness::lower</computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00076">76</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a6089fb532194afab1e05fac3e55c77c6"/><section>
    <title>LS_MAXITER_MAX</title>
<indexterm><primary>LS_MAXITER_MAX</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>LS_MAXITER_MAX</secondary></indexterm>
<para><computeroutput>const double dual_annealing::Fitness::LS_MAXITER_MAX = 1000</computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00118">118</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a88756554a52354b1c976854944f5db4b"/><section>
    <title>LS_MAXITER_MIN</title>
<indexterm><primary>LS_MAXITER_MIN</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>LS_MAXITER_MIN</secondary></indexterm>
<para><computeroutput>const double dual_annealing::Fitness::LS_MAXITER_MIN = 100</computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00117">117</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a6ca3b936412ade3edf4441e48f87a966"/><section>
    <title>LS_MAXITER_RATIO</title>
<indexterm><primary>LS_MAXITER_RATIO</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>LS_MAXITER_RATIO</secondary></indexterm>
<para><computeroutput>const double dual_annealing::Fitness::LS_MAXITER_RATIO = 6</computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00116">116</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a6fb1053a249b16799a038672c59e915c"/><section>
    <title>maxEvals</title>
<indexterm><primary>maxEvals</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>maxEvals</secondary></indexterm>
<para><computeroutput>long dual_annealing::Fitness::maxEvals<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00161">161</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63"/><section>
    <title>scale</title>
<indexterm><primary>scale</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>scale</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> dual_annealing::Fitness::scale<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00162">162</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdual__annealing_1_1_fitness_1aca95b5772925f77987ea96b12004b7b6"/><section>
    <title>upper</title>
<indexterm><primary>upper</primary><secondary>dual_annealing::Fitness</secondary></indexterm>
<indexterm><primary>dual_annealing::Fitness</primary><secondary>upper</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> dual_annealing::Fitness::upper</computeroutput></para><para>
Definition at line <link linkend="_daoptimizer_8cpp_source_1l00077">77</link> of file <link linkend="_daoptimizer_8cpp_source">daoptimizer.cpp</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
_fcmaescpp/<link linkend="_daoptimizer_8cpp">daoptimizer.cpp</link></section>
</section>

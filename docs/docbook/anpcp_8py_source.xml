<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_anpcp_8py_source" xml:lang="en-US">
<title>anpcp.py</title>
<indexterm><primary>examples/anpcp/anpcp.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_anpcp_8py_source_1l00001"/><link linkend="_namespaceanpcp">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00005"/>00005 <emphasis role="comment">#&#32;See&#32;https://github.com/netotz/alpha-neighbor-p-center-problem/blob/main/README.md</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;See&#32;https://www.researchgate.net/publication/257196448_Optimal_algorithms_for_the_a-neighbor_p-center_problem</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00007"/>00007 <emphasis role="comment">#</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00008"/>00008 <emphasis role="comment">#&#32;This&#32;implements&#32;the&#32;original&#32;variant&#32;of&#32;the&#32;problem&#32;using&#32;continuous&#32;optimization&#32;and</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00009"/>00009 <emphasis role="comment">#&#32;a&#32;variant&#32;(commented&#32;out)&#32;where&#32;instead&#32;of&#32;the&#32;alpha-best&#32;we&#32;use&#32;the&#32;sum&#32;of&#32;the&#32;best&#32;alpha&#32;distances.</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00010"/>00010 <emphasis role="comment">#&#32;Users&#32;and&#32;facilities&#32;are&#32;taken&#32;from&#32;TSP/JSON&#32;files.&#32;</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00011"/>00011 <emphasis role="comment">#&#32;See&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Service.adoc&#32;for&#32;a&#32;detailed&#32;description.&#32;</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00012"/>00012 
<anchor xml:id="_anpcp_8py_source_1l00013"/>00013 <emphasis role="keyword">import</emphasis>&#32;json,&#32;sys
<anchor xml:id="_anpcp_8py_source_1l00014"/>00014 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_anpcp_8py_source_1l00015"/>00015 <emphasis role="keyword">from</emphasis>&#32;numba&#32;<emphasis role="keyword">import</emphasis>&#32;njit
<anchor xml:id="_anpcp_8py_source_1l00016"/>00016 <emphasis role="keyword">import</emphasis>&#32;numba
<anchor xml:id="_anpcp_8py_source_1l00017"/>00017 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Bite_cpp,&#32;wrapper,&#32;logger
<anchor xml:id="_anpcp_8py_source_1l00018"/>00018 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;retry
<anchor xml:id="_anpcp_8py_source_1l00019"/>00019 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00020"/>00020 
<anchor xml:id="_anpcp_8py_source_1l00021"/>00021 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_anpcp_8py_source_1l00022"/>00022 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_anpcp_8py_source_1l00023"/>00023 
<anchor xml:id="_anpcp_8py_source_1l00024"/>00024 logger.remove()
<anchor xml:id="_anpcp_8py_source_1l00025"/><link linkend="_namespaceanpcp_1a60d184d80ec29d14dabb704da3b15e34">00025</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_anpcp_8py_source_1l00026"/>00026 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_anpcp_8py_source_1l00027"/>00027 
<anchor xml:id="_anpcp_8py_source_1l00028"/>00028 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_anpcp_8py_source_1l00029"/><link linkend="_namespaceanpcp_1a1633c5905b3d9dfa0816c7193e554322">00029</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceanpcp_1a1633c5905b3d9dfa0816c7193e554322">next_free_</link>(used,&#32;p):
<anchor xml:id="_anpcp_8py_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;used[p]:
<anchor xml:id="_anpcp_8py_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;(p&#32;+&#32;1)&#32;%&#32;used.size
<anchor xml:id="_anpcp_8py_source_1l00032"/>00032 &#32;&#32;&#32;&#32;used[p]&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p
<anchor xml:id="_anpcp_8py_source_1l00034"/>00034 
<anchor xml:id="_anpcp_8py_source_1l00035"/>00035 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_anpcp_8py_source_1l00036"/><link linkend="_namespaceanpcp_1ad1c73ca9e8ad8f9a6b51cf5738b5ddf9">00036</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceanpcp_1ad1c73ca9e8ad8f9a6b51cf5738b5ddf9">selection_</link>(s,&#32;n):
<anchor xml:id="_anpcp_8py_source_1l00037"/>00037 &#32;&#32;&#32;&#32;disjoined_s&#32;=&#32;np.zeros(s.size,&#32;dtype=numba.int32)
<anchor xml:id="_anpcp_8py_source_1l00038"/>00038 &#32;&#32;&#32;&#32;used&#32;=&#32;np.zeros(n,&#32;dtype=numba.boolean)
<anchor xml:id="_anpcp_8py_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(s.size):
<anchor xml:id="_anpcp_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disjoined_s[i]&#32;=&#32;<link linkend="_namespaceanpcp_1a1633c5905b3d9dfa0816c7193e554322">next_free_</link>(used,&#32;s[i])
<anchor xml:id="_anpcp_8py_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;disjoined_s
<anchor xml:id="_anpcp_8py_source_1l00042"/>00042 
<anchor xml:id="_anpcp_8py_source_1l00043"/>00043 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00044"/><link linkend="_namespaceanpcp_1a4db012d42b40fde3133917da7bae5a1b">00044</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceanpcp_1a4db012d42b40fde3133917da7bae5a1b">calc_distance_</link>(users,&#32;facilities):
<anchor xml:id="_anpcp_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;distance&#32;=&#32;np.zeros((len(users),&#32;len(facilities)),&#32;dtype=numba.int32)
<anchor xml:id="_anpcp_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(users)):
<anchor xml:id="_anpcp_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(facilities)):&#32;<emphasis role="comment">#&#32;round&#32;to&#32;next&#32;int</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx&#32;=&#32;users[i,0]&#32;-&#32;facilities[j,0]
<anchor xml:id="_anpcp_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy&#32;=&#32;users[i,1]&#32;-&#32;facilities[j,1]
<anchor xml:id="_anpcp_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distance[i,j]&#32;=&#32;int(round(np.sqrt(dx*dx&#32;+&#32;dy*dy),&#32;0))
<anchor xml:id="_anpcp_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;distance&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00052"/>00052 
<anchor xml:id="_anpcp_8py_source_1l00053"/>00053 <emphasis role="preprocessor">@njit(fastmath=True)</emphasis>&#32;
<anchor xml:id="_anpcp_8py_source_1l00054"/><link linkend="_namespaceanpcp_1af7f3f87b0283565d269d0f86ddcc0a55">00054</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceanpcp_1af7f3f87b0283565d269d0f86ddcc0a55">fitness_</link>(selection,&#32;distance,&#32;alpha):
<anchor xml:id="_anpcp_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;selected&#32;=&#32;distance[:,selection]&#32;
<anchor xml:id="_anpcp_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;partitioned&#32;=&#32;np.partition(selected,&#32;alpha)&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;max([max(d[:alpha])&#32;<emphasis role="keywordflow">for</emphasis>&#32;d&#32;<emphasis role="keywordflow">in</emphasis>&#32;partitioned])
<anchor xml:id="_anpcp_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;variant&#32;where&#32;instead&#32;of&#32;the&#32;alpha-best&#32;we&#32;use&#32;the&#32;sum&#32;of&#32;the&#32;best&#32;alpha&#32;distances</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;return&#32;max([np.sum(d[:alpha])&#32;for&#32;d&#32;in&#32;partitioned])&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00060"/>00060 
<anchor xml:id="_anpcp_8py_source_1l00061"/><link linkend="_classanpcp_1_1_a_n_p_c_p">00061</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classanpcp_1_1_a_n_p_c_p">ANPCP</link>():
<anchor xml:id="_anpcp_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00063"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1aeebe77132f494b774eba4273ad3be49e">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcp_1_1_a_n_p_c_p_1aeebe77132f494b774eba4273ad3be49e">__init__</link>(self,&#32;p,&#32;alpha):
<anchor xml:id="_anpcp_8py_source_1l00064"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1a57104cbb130606227a207d9591ad2f37">00064</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a57104cbb130606227a207d9591ad2f37">p</link>&#32;=&#32;p
<anchor xml:id="_anpcp_8py_source_1l00065"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1ac63cb4563071220aaa37c5d13abc07c4">00065</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1ac63cb4563071220aaa37c5d13abc07c4">alpha</link>&#32;=&#32;alpha
<anchor xml:id="_anpcp_8py_source_1l00066"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9">00066</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9">dim</link>&#32;=&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a57104cbb130606227a207d9591ad2f37">p</link>
<anchor xml:id="_anpcp_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00068"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1a9c595cb6e1239841522bd6317d374aee">00068</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcp_1_1_a_n_p_c_p_1a9c595cb6e1239841522bd6317d374aee">init_json</link>(self,&#32;json_file):&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;open(json_file)&#32;<emphasis role="keyword">as</emphasis>&#32;json_file:
<anchor xml:id="_anpcp_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anpcp&#32;=&#32;json.load(json_file)&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00071"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022">facilities</link>&#32;=&#32;anpcp[<emphasis role="stringliteral">&apos;facilities&apos;</emphasis>]
<anchor xml:id="_anpcp_8py_source_1l00072"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913">00072</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913">users</link>&#32;=&#32;anpcp[<emphasis role="stringliteral">&apos;users&apos;</emphasis>]
<anchor xml:id="_anpcp_8py_source_1l00073"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1af7aa4956b4756967dcad6dd9090c8dc7">00073</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1af7aa4956b4756967dcad6dd9090c8dc7">distance</link>&#32;=&#32;np.array(anpcp[<emphasis role="stringliteral">&apos;distances&apos;</emphasis>],&#32;dtype&#32;=&#32;int)
<anchor xml:id="_anpcp_8py_source_1l00074"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78">00074</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78">fnum</link>&#32;=&#32;len(self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022">facilities</link>)
<anchor xml:id="_anpcp_8py_source_1l00075"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1ae394c2bbfe5ed510784d96994ab1099c">00075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1ae394c2bbfe5ed510784d96994ab1099c">unum</link>&#32;=&#32;len(self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913">users</link>)
<anchor xml:id="_anpcp_8py_source_1l00076"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1a379e8b5b8533d857a0fe348aade6d67a">00076</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a379e8b5b8533d857a0fe348aade6d67a">bounds</link>&#32;=&#32;Bounds([0]*self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9">dim</link>,&#32;[self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78">fnum</link>-1E-9]*self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9">dim</link>)&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00077"/>00077 &#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00078"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a">00078</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a">init_tsp</link>(self,&#32;tsp_file):&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;open(tsp_file)&#32;<emphasis role="keyword">as</emphasis>&#32;csvfile:
<anchor xml:id="_anpcp_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lines&#32;=&#32;csvfile.readlines()
<anchor xml:id="_anpcp_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;users&#32;=&#32;[]
<anchor xml:id="_anpcp_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;facilities&#32;=&#32;[]&#32;
<anchor xml:id="_anpcp_8py_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;line&#32;<emphasis role="keywordflow">in</emphasis>&#32;lines:
<anchor xml:id="_anpcp_8py_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row&#32;=&#32;line.split()
<anchor xml:id="_anpcp_8py_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(row)&#32;!=&#32;4&#32;<emphasis role="keywordflow">or</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;row[0][0].isdigit():
<anchor xml:id="_anpcp_8py_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coords&#32;=&#32;np.array([float(row[1]),&#32;float(row[2])])
<anchor xml:id="_anpcp_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;row[3]&#32;==&#32;<emphasis role="stringliteral">&apos;1&apos;</emphasis>:
<anchor xml:id="_anpcp_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;facilities.append(coords)
<anchor xml:id="_anpcp_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_anpcp_8py_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;users.append(coords)
<anchor xml:id="_anpcp_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913">users</link>&#32;=&#32;np.array(users)
<anchor xml:id="_anpcp_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022">facilities</link>&#32;=&#32;np.array(facilities)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1ae394c2bbfe5ed510784d96994ab1099c">unum</link>&#32;=&#32;len(self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913">users</link>)
<anchor xml:id="_anpcp_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78">fnum</link>&#32;=&#32;len(self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022">facilities</link>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1af7aa4956b4756967dcad6dd9090c8dc7">distance</link>&#32;=&#32;<link linkend="_namespaceanpcp_1a4db012d42b40fde3133917da7bae5a1b">calc_distance_</link>(self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913">users</link>,&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022">facilities</link>)
<anchor xml:id="_anpcp_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a379e8b5b8533d857a0fe348aade6d67a">bounds</link>&#32;=&#32;Bounds([0]*self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9">dim</link>,&#32;[self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78">fnum</link>-1E-9]*self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9">dim</link>)&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00099"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1a27cdaec6181e9866758aaf02adcd2943">00099</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcp_1_1_a_n_p_c_p_1a27cdaec6181e9866758aaf02adcd2943">random_x</link>(self,&#32;seed&#32;=&#32;123):
<anchor xml:id="_anpcp_8py_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rng&#32;=&#32;np.random.default_rng(seed)
<anchor xml:id="_anpcp_8py_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rng.integers(0,&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78">fnum</link>,&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9">dim</link>)
<anchor xml:id="_anpcp_8py_source_1l00102"/>00102 
<anchor xml:id="_anpcp_8py_source_1l00103"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1a98d874863228ee290ddd16d9063cc2b2">00103</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcp_1_1_a_n_p_c_p_1a98d874863228ee290ddd16d9063cc2b2">get_selection</link>(self,&#32;x):
<anchor xml:id="_anpcp_8py_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceanpcp_1ad1c73ca9e8ad8f9a6b51cf5738b5ddf9">selection_</link>(x.astype(int),&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78">fnum</link>)
<anchor xml:id="_anpcp_8py_source_1l00105"/>00105 
<anchor xml:id="_anpcp_8py_source_1l00106"/><link linkend="_classanpcp_1_1_a_n_p_c_p_1a36e56d4bbe8efd193c8f57419b2eeb87">00106</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classanpcp_1_1_a_n_p_c_p_1a36e56d4bbe8efd193c8f57419b2eeb87">fitness</link>(self,&#32;x):
<anchor xml:id="_anpcp_8py_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selection&#32;=&#32;<link linkend="_namespaceanpcp_1ad1c73ca9e8ad8f9a6b51cf5738b5ddf9">selection_</link>(x.astype(int),&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78">fnum</link>)
<anchor xml:id="_anpcp_8py_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespaceanpcp_1af7f3f87b0283565d269d0f86ddcc0a55">fitness_</link>(selection,&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1af7aa4956b4756967dcad6dd9090c8dc7">distance</link>,&#32;self.<link linkend="_classanpcp_1_1_a_n_p_c_p_1ac63cb4563071220aaa37c5d13abc07c4">alpha</link>)
<anchor xml:id="_anpcp_8py_source_1l00109"/>00109 &#32;&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00110"/><link linkend="_namespaceanpcp_1a5aca052fb7d52bf72b7d2533d4d3e17e">00110</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceanpcp_1a5aca052fb7d52bf72b7d2533d4d3e17e">optimize</link>(anpcp,&#32;opt,&#32;num_retries&#32;=&#32;32):
<anchor xml:id="_anpcp_8py_source_1l00111"/>00111 &#32;&#32;&#32;&#32;ret&#32;=&#32;retry.minimize(<link linkend="_classfcmaes_1_1optimizer_1_1wrapper">wrapper</link>(anpcp.fitness),&#32;
<anchor xml:id="_anpcp_8py_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anpcp.bounds,&#32;num_retries&#32;=&#32;num_retries,&#32;
<anchor xml:id="_anpcp_8py_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer=opt)
<anchor xml:id="_anpcp_8py_source_1l00114"/>00114 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;selection&#32;=&#32;&quot;</emphasis>,&#32;anpcp.get_selection(ret.x))
<anchor xml:id="_anpcp_8py_source_1l00115"/>00115 &#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;value&#32;=&#32;&quot;</emphasis>,&#32;ret.fun)
<anchor xml:id="_anpcp_8py_source_1l00116"/>00116 
<anchor xml:id="_anpcp_8py_source_1l00117"/>00117 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_anpcp_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_anpcp_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;anpcp&#32;=&#32;ANPCP(6,&#32;2)&#32;#&#32;p&#32;=&#32;6,&#32;alpha&#32;=&#32;2&#32;&#32;&#32;</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;anpcp.init_tsp(&apos;data/att48_36_12_4.anpcp.tsp&apos;)</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;anpcp&#32;=&#32;ANPCP(12,&#32;2)&#32;#&#32;p&#32;=&#32;12,&#32;alpha&#32;=&#32;2</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;anpcp.init_tsp(&apos;data/rat783_588_195_4.anpcp.tsp&apos;)&#32;&#32;&#32;</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00123"/><link linkend="_namespaceanpcp_1a3d4fcfcfe8fbbb5aae7993b6bbeb6312">00123</link> &#32;&#32;&#32;&#32;anpcp&#32;=&#32;<link linkend="_classanpcp_1_1_a_n_p_c_p">ANPCP</link>(12,&#32;2)&#32;<emphasis role="comment">#&#32;p&#32;=&#32;12,&#32;alpha&#32;=&#32;2</emphasis>
<anchor xml:id="_anpcp_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;anpcp.init_tsp(<emphasis role="stringliteral">&apos;data/rl1323_993_330_4.anpcp.tsp&apos;</emphasis>)
<anchor xml:id="_anpcp_8py_source_1l00125"/><link linkend="_namespaceanpcp_1a37fca338ec24c25c87790d168e80cd38">00125</link> &#32;&#32;&#32;&#32;popsize&#32;=&#32;7&#32;+&#32;12*anpcp.dim
<anchor xml:id="_anpcp_8py_source_1l00126"/><link linkend="_namespaceanpcp_1af0b0b587e0ebbedb6364482103b76548">00126</link> &#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;300000
<anchor xml:id="_anpcp_8py_source_1l00127"/><link linkend="_namespaceanpcp_1a726f529bf80b17eeb6c009a2c4d0669b">00127</link> &#32;&#32;&#32;&#32;opt&#32;=&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp">Bite_cpp</link>(max_evaluations,&#32;popsize=popsize,&#32;M=8)
<anchor xml:id="_anpcp_8py_source_1l00128"/><link linkend="_namespaceanpcp_1a82746ac1bef745db3de2e55aed299998">00128</link> &#32;&#32;&#32;&#32;<link linkend="_namespaceanpcp_1a5aca052fb7d52bf72b7d2533d4d3e17e">optimize</link>(anpcp,&#32;opt,&#32;num_retries&#32;=&#32;32)
<anchor xml:id="_anpcp_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;
</programlisting></section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_retry_8py_source" xml:lang="en-US">
<title>retry.py</title>
<indexterm><primary>fcmaes/retry.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_retry_8py_source_1l00001"/><link linkend="_namespacefcmaes_1_1retry">00001</link> <emphasis role="comment">#&#32;-*-&#32;coding:&#32;utf-8&#32;-*-</emphasis>
<anchor xml:id="_retry_8py_source_1l00002"/>00002 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00003"/>00003 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_retry_8py_source_1l00004"/>00004 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00005"/>00005 <emphasis role="stringliteral">&#32;Fast&#32;CMA-ES&#32;-&#32;version&#32;1.6.11</emphasis>
<anchor xml:id="_retry_8py_source_1l00006"/>00006 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00007"/>00007 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_retry_8py_source_1l00008"/>00008 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Latitude</emphasis>
<anchor xml:id="_retry_8py_source_1l00009"/>00009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00010"/>00010 <emphasis role="stringliteral">&#32;License:&#32;MIT</emphasis>
<anchor xml:id="_retry_8py_source_1l00011"/>00011 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00012"/>00012 <emphasis role="stringliteral">&#32;File:</emphasis>
<anchor xml:id="_retry_8py_source_1l00013"/>00013 <emphasis role="stringliteral">&#32;&#32;-&#32;retry.py</emphasis>
<anchor xml:id="_retry_8py_source_1l00014"/>00014 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00015"/>00015 <emphasis role="stringliteral">&#32;Description:</emphasis>
<anchor xml:id="_retry_8py_source_1l00016"/>00016 <emphasis role="stringliteral">&#32;&#32;-&#32;This&#32;module&#32;implements&#32;a&#32;retry&#32;mechanism&#32;for&#32;optimization&#32;problems</emphasis>
<anchor xml:id="_retry_8py_source_1l00017"/>00017 <emphasis role="stringliteral">&#32;&#32;using&#32;parallel&#32;optimization.&#32;It&#32;allows&#32;multiple&#32;attempts&#32;to&#32;find&#32;a</emphasis>
<anchor xml:id="_retry_8py_source_1l00018"/>00018 <emphasis role="stringliteral">&#32;&#32;solution&#32;to&#32;a&#32;given&#32;optimization&#32;problem,&#32;leveraging&#32;different</emphasis>
<anchor xml:id="_retry_8py_source_1l00019"/>00019 <emphasis role="stringliteral">&#32;&#32;optimization&#32;strategies&#32;such&#32;as&#32;differential&#32;evolution&#32;and&#32;CMA-ES.</emphasis>
<anchor xml:id="_retry_8py_source_1l00020"/>00020 <emphasis role="stringliteral">&#32;&#32;-&#32;The&#32;retry&#32;mechanism&#32;is&#32;designed&#32;to&#32;handle&#32;large-scale&#32;optimization</emphasis>
<anchor xml:id="_retry_8py_source_1l00021"/>00021 <emphasis role="stringliteral">&#32;&#32;problems&#32;efficiently&#32;by&#32;distributing&#32;the&#32;workload&#32;across&#32;multiple</emphasis>
<anchor xml:id="_retry_8py_source_1l00022"/>00022 <emphasis role="stringliteral">&#32;&#32;processes.</emphasis>
<anchor xml:id="_retry_8py_source_1l00023"/>00023 <emphasis role="stringliteral">&#32;&#32;-&#32;The&#32;module&#32;provides&#32;a&#32;`minimize`&#32;function&#32;that&#32;accepts&#32;an&#32;objective</emphasis>
<anchor xml:id="_retry_8py_source_1l00024"/>00024 <emphasis role="stringliteral">&#32;&#32;function,&#32;bounds,&#32;and&#32;various&#32;parameters&#32;to&#32;control&#32;the&#32;optimization</emphasis>
<anchor xml:id="_retry_8py_source_1l00025"/>00025 <emphasis role="stringliteral">&#32;&#32;process.</emphasis>
<anchor xml:id="_retry_8py_source_1l00026"/>00026 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00027"/>00027 <emphasis role="stringliteral">&#32;Authors:</emphasis>
<anchor xml:id="_retry_8py_source_1l00028"/>00028 <emphasis role="stringliteral">&#32;&#32;-&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_retry_8py_source_1l00029"/>00029 <emphasis role="stringliteral">&#32;&#32;-&#32;romain.despoullains@latitude.eu</emphasis>
<anchor xml:id="_retry_8py_source_1l00030"/>00030 <emphasis role="stringliteral">&#32;&#32;-&#32;corentin.generet@latitude.eu</emphasis>
<anchor xml:id="_retry_8py_source_1l00031"/>00031 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00032"/>00032 <emphasis role="stringliteral">&#32;References:</emphasis>
<anchor xml:id="_retry_8py_source_1l00033"/>00033 <emphasis role="stringliteral">&#32;&#32;-&#32;[1]&#32;https://github.com/dietmarwo/fast-cma-es</emphasis>
<anchor xml:id="_retry_8py_source_1l00034"/>00034 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00035"/>00035 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00036"/>00036 <emphasis role="stringliteral">&#32;Documentation:</emphasis>
<anchor xml:id="_retry_8py_source_1l00037"/>00037 <emphasis role="stringliteral">&#32;&#32;-</emphasis>
<anchor xml:id="_retry_8py_source_1l00038"/>00038 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00039"/>00039 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_retry_8py_source_1l00040"/>00040 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00041"/>00041 <emphasis role="keyword">from</emphasis>&#32;__future__&#32;<emphasis role="keyword">import</emphasis>&#32;annotations
<anchor xml:id="_retry_8py_source_1l00042"/>00042 
<anchor xml:id="_retry_8py_source_1l00043"/>00043 <emphasis role="keyword">import</emphasis>&#32;time
<anchor xml:id="_retry_8py_source_1l00044"/>00044 <emphasis role="keyword">import</emphasis>&#32;math
<anchor xml:id="_retry_8py_source_1l00045"/>00045 <emphasis role="keyword">import</emphasis>&#32;os
<anchor xml:id="_retry_8py_source_1l00046"/>00046 <emphasis role="keyword">import</emphasis>&#32;sys
<anchor xml:id="_retry_8py_source_1l00047"/>00047 <emphasis role="keyword">import</emphasis>&#32;threadpoolctl
<anchor xml:id="_retry_8py_source_1l00048"/>00048 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_retry_8py_source_1l00049"/>00049 <emphasis role="keyword">from</emphasis>&#32;scipy&#32;<emphasis role="keyword">import</emphasis>&#32;interpolate
<anchor xml:id="_retry_8py_source_1l00050"/>00050 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_retry_8py_source_1l00051"/>00051 <emphasis role="keyword">from</emphasis>&#32;numpy.random&#32;<emphasis role="keyword">import</emphasis>&#32;Generator,&#32;PCG64DXSM,&#32;SeedSequence
<anchor xml:id="_retry_8py_source_1l00052"/>00052 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize._constraints&#32;<emphasis role="keyword">import</emphasis>&#32;new_bounds_to_old
<anchor xml:id="_retry_8py_source_1l00053"/>00053 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;OptimizeResult,&#32;Bounds
<anchor xml:id="_retry_8py_source_1l00054"/>00054 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp
<anchor xml:id="_retry_8py_source_1l00055"/>00055 <emphasis role="keyword">from</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">import</emphasis>&#32;Process
<anchor xml:id="_retry_8py_source_1l00056"/>00056 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;de_cma,&#32;dtime,&#32;Optimizer
<anchor xml:id="_retry_8py_source_1l00057"/>00057 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1evaluator">fcmaes.evaluator</link>&#32;<emphasis role="keyword">import</emphasis>&#32;is_debug_active,&#32;is_trace_active
<anchor xml:id="_retry_8py_source_1l00058"/>00058 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_retry_8py_source_1l00059"/>00059 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;Optional,&#32;Callable,&#32;List
<anchor xml:id="_retry_8py_source_1l00060"/>00060 <emphasis role="keyword">from</emphasis>&#32;numpy.typing&#32;<emphasis role="keyword">import</emphasis>&#32;ArrayLike
<anchor xml:id="_retry_8py_source_1l00061"/>00061 
<anchor xml:id="_retry_8py_source_1l00062"/>00062 os.environ[<emphasis role="stringliteral">&apos;MKL_DEBUG_CPU_TYPE&apos;</emphasis>]&#32;=&#32;<emphasis role="stringliteral">&apos;5&apos;</emphasis>
<anchor xml:id="_retry_8py_source_1l00063"/>00063 os.environ[<emphasis role="stringliteral">&apos;MKL_NUM_THREADS&apos;</emphasis>]&#32;=&#32;<emphasis role="stringliteral">&apos;1&apos;</emphasis>
<anchor xml:id="_retry_8py_source_1l00064"/>00064 os.environ[<emphasis role="stringliteral">&apos;OPENBLAS_NUM_THREADS&apos;</emphasis>]&#32;=&#32;<emphasis role="stringliteral">&apos;1&apos;</emphasis>
<anchor xml:id="_retry_8py_source_1l00065"/>00065 
<anchor xml:id="_retry_8py_source_1l00066"/>00066 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1retry_1ae5cef7db4d25eedc630e6e7b3fd077a7">minimize</link>(fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_retry_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,&#32;
<anchor xml:id="_retry_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit:&#32;Optional[float]&#32;=&#32;np.inf,
<anchor xml:id="_retry_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;Optional[int]&#32;=&#32;1024,
<anchor xml:id="_retry_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;mp.cpu_count(),
<anchor xml:id="_retry_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,&#32;
<anchor xml:id="_retry_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;50000,&#32;
<anchor xml:id="_retry_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity:&#32;Optional[int]&#32;=&#32;500,
<anchor xml:id="_retry_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_retry_8py_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer:&#32;Optional[Optimizer]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_retry_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num:&#32;Optional[int]&#32;=&#32;0,
<anchor xml:id="_retry_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;-&gt;&#32;OptimizeResult:
<anchor xml:id="_retry_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00079"/>00079 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;given&#32;objective&#32;function&#32;using&#32;the&#32;specified&#32;optimizer&#32;and&#32;stores&#32;the&#32;progress.</emphasis>
<anchor xml:id="_retry_8py_source_1l00080"/>00080 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00081"/>00081 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;attempts&#32;to&#32;find&#32;the&#32;minimum&#32;value&#32;of&#32;a&#32;given&#32;function&#32;within&#32;the&#32;bounds</emphasis>
<anchor xml:id="_retry_8py_source_1l00082"/>00082 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;provided.&#32;It&#32;incorporates&#32;retry&#32;logic&#32;to&#32;handle&#32;multiple&#32;optimization&#32;attempts&#32;in&#32;case</emphasis>
<anchor xml:id="_retry_8py_source_1l00083"/>00083 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;of&#32;failure&#32;or&#32;suboptimal&#32;results.&#32;The&#32;optimization&#32;process&#32;can&#32;also&#32;operate&#32;in&#32;a&#32;multiprocess</emphasis>
<anchor xml:id="_retry_8py_source_1l00084"/>00084 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;environment&#32;with&#32;a&#32;configurable&#32;number&#32;of&#32;workers.&#32;Additionally,&#32;progress&#32;data&#32;is&#32;stored</emphasis>
<anchor xml:id="_retry_8py_source_1l00085"/>00085 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;to&#32;analyze&#32;statistical&#32;results&#32;throughout&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_retry_8py_source_1l00086"/>00086 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00087"/>00087 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00088"/>00088 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;The&#32;objective&#32;function&#32;to&#32;minimize.&#32;The&#32;function&#32;must&#32;accept&#32;an&#32;array-like&#32;input</emphasis>
<anchor xml:id="_retry_8py_source_1l00089"/>00089 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;return&#32;a&#32;scalar&#32;float&#32;as&#32;the&#32;function&#32;value.</emphasis>
<anchor xml:id="_retry_8py_source_1l00090"/>00090 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds&#32;for&#32;the&#32;input&#32;variables&#32;of&#32;the&#32;objective&#32;function.&#32;Defines&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00091"/>00091 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acceptable&#32;search&#32;space&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_retry_8py_source_1l00092"/>00092 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit:&#32;Upper&#32;limit&#32;for&#32;the&#32;acceptable&#32;function&#32;value.&#32;Defaults&#32;to&#32;infinity.</emphasis>
<anchor xml:id="_retry_8py_source_1l00093"/>00093 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;After&#32;reaching&#32;this&#32;limit,&#32;retries&#32;are&#32;triggered&#32;if&#32;configured.</emphasis>
<anchor xml:id="_retry_8py_source_1l00094"/>00094 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;Number&#32;of&#32;times&#32;the&#32;optimization&#32;process&#32;should&#32;be&#32;retried&#32;upon&#32;failure</emphasis>
<anchor xml:id="_retry_8py_source_1l00095"/>00095 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;suboptimal&#32;results.&#32;Defaults&#32;to&#32;1024.</emphasis>
<anchor xml:id="_retry_8py_source_1l00096"/>00096 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;The&#32;number&#32;of&#32;parallel&#32;workers&#32;to&#32;use&#32;for&#32;optimization.&#32;Defaults&#32;to&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00097"/>00097 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;number&#32;of&#32;CPU&#32;cores&#32;available.</emphasis>
<anchor xml:id="_retry_8py_source_1l00098"/>00098 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Population&#32;size&#32;for&#32;the&#32;optimization&#32;process.&#32;Determines&#32;the&#32;number</emphasis>
<anchor xml:id="_retry_8py_source_1l00099"/>00099 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;potential&#32;solutions&#32;considered&#32;at&#32;each&#32;iteration.</emphasis>
<anchor xml:id="_retry_8py_source_1l00100"/>00100 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;allowed&#32;in&#32;the&#32;optimization</emphasis>
<anchor xml:id="_retry_8py_source_1l00101"/>00101 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;This&#32;is&#32;a&#32;hard&#32;limit&#32;on&#32;computational&#32;effort.</emphasis>
<anchor xml:id="_retry_8py_source_1l00102"/>00102 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity:&#32;The&#32;storage&#32;capacity&#32;for&#32;retaining&#32;past&#32;evaluation&#32;results&#32;or&#32;progress</emphasis>
<anchor xml:id="_retry_8py_source_1l00103"/>00103 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.&#32;Used&#32;for&#32;analyzing&#32;statistics&#32;or&#32;performance.</emphasis>
<anchor xml:id="_retry_8py_source_1l00104"/>00104 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;The&#32;target&#32;fitness&#32;value&#32;for&#32;stopping&#32;the&#32;optimization.&#32;When&#32;a&#32;result</emphasis>
<anchor xml:id="_retry_8py_source_1l00105"/>00105 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meets&#32;or&#32;exceeds&#32;this&#32;fitness&#32;value,&#32;the&#32;process&#32;terminates.&#32;Defaults&#32;to</emphasis>
<anchor xml:id="_retry_8py_source_1l00106"/><link linkend="_namespacefcmaes_1_1retry_1ae5cef7db4d25eedc630e6e7b3fd077a7">00106</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_retry_8py_source_1l00107"/>00107 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer:&#32;An&#32;optimization&#32;algorithm&#32;instance&#32;to&#32;drive&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_retry_8py_source_1l00108"/>00108 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;not&#32;provided,&#32;a&#32;default&#32;optimizer&#32;is&#32;created&#32;based&#32;on&#32;`de_cma`.</emphasis>
<anchor xml:id="_retry_8py_source_1l00109"/>00109 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num:&#32;The&#32;statistical&#32;metric&#32;number&#32;to&#32;associate&#32;with&#32;the&#32;optimization</emphasis>
<anchor xml:id="_retry_8py_source_1l00110"/>00110 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.&#32;Used&#32;for&#32;tracking&#32;or&#32;analyzing&#32;statistical&#32;trends.</emphasis>
<anchor xml:id="_retry_8py_source_1l00111"/>00111 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00112"/>00112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00113"/>00113 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult:&#32;The&#32;result&#32;of&#32;the&#32;optimization&#32;process,&#32;including&#32;details&#32;about</emphasis>
<anchor xml:id="_retry_8py_source_1l00114"/>00114 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimal&#32;solution,&#32;number&#32;of&#32;function&#32;evaluations,&#32;and&#32;success&#32;status.</emphasis>
<anchor xml:id="_retry_8py_source_1l00115"/>00115 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00116"/>00116 
<anchor xml:id="_retry_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;optimizer&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_retry_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer&#32;=&#32;de_cma(max_evaluations,&#32;popsize,&#32;stop_fitness)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;store&#32;=&#32;<link linkend="_classfcmaes_1_1retry_1_1_store">Store</link>(fun,&#32;bounds,&#32;capacity&#32;=&#32;capacity,&#32;statistic_num&#32;=&#32;statistic_num)
<anchor xml:id="_retry_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;retry(store,&#32;optimizer.minimize,&#32;num_retries,&#32;value_limit,&#32;workers,&#32;stop_fitness)
<anchor xml:id="_retry_8py_source_1l00121"/>00121 
<anchor xml:id="_retry_8py_source_1l00122"/>00122 <emphasis role="keyword">def&#32;</emphasis>retry(store:&#32;Store,&#32;
<anchor xml:id="_retry_8py_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize:&#32;Callable,&#32;
<anchor xml:id="_retry_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;int,&#32;
<anchor xml:id="_retry_8py_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit:&#32;Optional[float]&#32;=&#32;np.inf,&#32;
<anchor xml:id="_retry_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;mp.cpu_count(),&#32;
<anchor xml:id="_retry_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf)&#32;-&gt;&#32;OptimizeResult:
<anchor xml:id="_retry_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00129"/>00129 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Retries&#32;optimization&#32;multiple&#32;times&#32;using&#32;the&#32;specified&#32;number&#32;of&#32;worker&#32;processes.&#32;Each&#32;worker</emphasis>
<anchor xml:id="_retry_8py_source_1l00130"/>00130 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;conducts&#32;optimization&#32;in&#32;parallel&#32;and&#32;contributes&#32;to&#32;the&#32;shared&#32;results&#32;store.&#32;After&#32;all&#32;workers</emphasis>
<anchor xml:id="_retry_8py_source_1l00131"/>00131 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;complete&#32;their&#32;tasks,&#32;the&#32;stored&#32;results&#32;are&#32;sorted,&#32;persisted,&#32;and&#32;the&#32;best&#32;result&#32;is&#32;returned.</emphasis>
<anchor xml:id="_retry_8py_source_1l00132"/>00132 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00133"/>00133 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00134"/>00134 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(Store):&#32;A&#32;shared&#32;result&#32;store&#32;object&#32;that&#32;collects&#32;optimization&#32;results&#32;from&#32;all&#32;workers.</emphasis>
<anchor xml:id="_retry_8py_source_1l00135"/>00135 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize&#32;(Callable):&#32;A&#32;callable&#32;function&#32;that&#32;performs&#32;the&#32;optimization&#32;for&#32;a&#32;single&#32;run.</emphasis>
<anchor xml:id="_retry_8py_source_1l00136"/>00136 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries&#32;(int):&#32;The&#32;number&#32;of&#32;retries/iterations&#32;each&#32;worker&#32;should&#32;perform.</emphasis>
<anchor xml:id="_retry_8py_source_1l00137"/>00137 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;(Optional[float]):&#32;The&#32;upper&#32;limit&#32;for&#32;objective&#32;values&#32;to&#32;consider&#32;valid.&#32;Defaults</emphasis>
<anchor xml:id="_retry_8py_source_1l00138"/>00138 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;positive&#32;infinity.</emphasis>
<anchor xml:id="_retry_8py_source_1l00139"/>00139 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;worker&#32;processes&#32;to&#32;spawn&#32;for&#32;parallel&#32;optimization.</emphasis>
<anchor xml:id="_retry_8py_source_1l00140"/>00140 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;the&#32;number&#32;of&#32;CPU&#32;cores&#32;available.</emphasis>
<anchor xml:id="_retry_8py_source_1l00141"/>00141 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;The&#32;fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization&#32;can&#32;early&#32;stop.</emphasis>
<anchor xml:id="_retry_8py_source_1l00142"/>00142 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_retry_8py_source_1l00143"/>00143 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00144"/><link linkend="_namespacefcmaes_1_1retry_1a2a07e0a25785c0590b0426a946de6009">00144</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00145"/>00145 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult:&#32;An&#32;object&#32;containing&#32;the&#32;best&#32;solution&#32;found,&#32;its&#32;objective&#32;value,&#32;number&#32;of</emphasis>
<anchor xml:id="_retry_8py_source_1l00146"/>00146 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;evaluations,&#32;and&#32;a&#32;success&#32;status.</emphasis>
<anchor xml:id="_retry_8py_source_1l00147"/>00147 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00148"/>00148 &#32;&#32;&#32;&#32;sg&#32;=&#32;SeedSequence()
<anchor xml:id="_retry_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;rgs&#32;=&#32;[Generator(PCG64DXSM(s))&#32;<emphasis role="keywordflow">for</emphasis>&#32;s&#32;<emphasis role="keywordflow">in</emphasis>&#32;sg.spawn(workers)]
<anchor xml:id="_retry_8py_source_1l00150"/>00150 &#32;&#32;&#32;&#32;proc=[Process(target=_retry_loop,
<anchor xml:id="_retry_8py_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;args=(pid,&#32;rgs,&#32;store,&#32;optimize,&#32;num_retries,&#32;value_limit,&#32;stop_fitness))&#32;<emphasis role="keywordflow">for</emphasis>&#32;pid&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(workers)]
<anchor xml:id="_retry_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;[p.start()&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;proc]
<anchor xml:id="_retry_8py_source_1l00153"/>00153 &#32;&#32;&#32;&#32;[p.join()&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;proc]
<anchor xml:id="_retry_8py_source_1l00154"/>00154 &#32;&#32;&#32;&#32;store.sort()
<anchor xml:id="_retry_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;store.dump()
<anchor xml:id="_retry_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;OptimizeResult(x=store.get_x_best(),&#32;fun=store.get_y_best(),&#32;
<anchor xml:id="_retry_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nfev=store.get_count_evals(),&#32;success=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_retry_8py_source_1l00158"/>00158 
<anchor xml:id="_retry_8py_source_1l00159"/>00159 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1retry_1aa3fad9513845a768be702efc7bdd594a">minimize_plot</link>(name:&#32;str,&#32;
<anchor xml:id="_retry_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer:&#32;Optimizer,&#32;
<anchor xml:id="_retry_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_retry_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,&#32;
<anchor xml:id="_retry_8py_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit:&#32;Optional[float]&#32;=&#32;np.inf,&#32;
<anchor xml:id="_retry_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot_limit:&#32;Optional[float]&#32;=&#32;np.inf,&#32;
<anchor xml:id="_retry_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;Optional[int]&#32;=&#32;1024,&#32;
<anchor xml:id="_retry_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;mp.cpu_count(),&#32;
<anchor xml:id="_retry_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_retry_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num:&#32;Optional[int]&#32;=&#32;5000)&#32;-&gt;&#32;OptimizeResult:
<anchor xml:id="_retry_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00170"/>00170 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Minimizes&#32;an&#32;optimization&#32;problem&#32;and&#32;plots&#32;the&#32;improvement&#32;process&#32;while&#32;storing&#32;results.</emphasis>
<anchor xml:id="_retry_8py_source_1l00171"/>00171 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00172"/>00172 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00173"/>00173 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name:&#32;A&#32;string&#32;serving&#32;as&#32;the&#32;descriptive&#32;name&#32;or&#32;title&#32;for&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_retry_8py_source_1l00174"/>00174 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer:&#32;An&#32;instance&#32;of&#32;the&#32;Optimizer&#32;class&#32;used&#32;for&#32;carrying&#32;out&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_retry_8py_source_1l00175"/>00175 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;A&#32;callable&#32;that&#32;represents&#32;the&#32;objective&#32;function&#32;to&#32;minimize,&#32;which&#32;takes</emphasis>
<anchor xml:id="_retry_8py_source_1l00176"/>00176 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;array-like&#32;input&#32;and&#32;returns&#32;a&#32;float&#32;value.</emphasis>
<anchor xml:id="_retry_8py_source_1l00177"/>00177 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;An&#32;instance&#32;of&#32;the&#32;Bounds&#32;class&#32;specifying&#32;the&#32;valid&#32;range&#32;for&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_retry_8py_source_1l00178"/>00178 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit:&#32;Optional&#32;float&#32;indicating&#32;the&#32;upper&#32;limit&#32;for&#32;significant&#32;improvements.</emphasis>
<anchor xml:id="_retry_8py_source_1l00179"/>00179 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;positive&#32;infinity.</emphasis>
<anchor xml:id="_retry_8py_source_1l00180"/>00180 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot_limit:&#32;Optional&#32;float&#32;representing&#32;the&#32;limit&#32;for&#32;including&#32;improvements&#32;in&#32;the&#32;plot.</emphasis>
<anchor xml:id="_retry_8py_source_1l00181"/>00181 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;positive&#32;infinity.</emphasis>
<anchor xml:id="_retry_8py_source_1l00182"/>00182 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;Optional&#32;integer&#32;specifying&#32;the&#32;maximum&#32;number&#32;of&#32;retries&#32;for&#32;the&#32;optimization</emphasis>
<anchor xml:id="_retry_8py_source_1l00183"/>00183 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;Defaults&#32;to&#32;1024.</emphasis>
<anchor xml:id="_retry_8py_source_1l00184"/>00184 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional&#32;integer&#32;indicating&#32;the&#32;number&#32;of&#32;multiprocessing&#32;workers&#32;to&#32;run</emphasis>
<anchor xml:id="_retry_8py_source_1l00185"/>00185 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimization.&#32;Defaults&#32;to&#32;the&#32;number&#32;of&#32;available&#32;CPU&#32;cores.</emphasis>
<anchor xml:id="_retry_8py_source_1l00186"/>00186 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional&#32;float&#32;defining&#32;the&#32;fitness&#32;value&#32;at&#32;which&#32;to&#32;stop&#32;the&#32;optimization</emphasis>
<anchor xml:id="_retry_8py_source_1l00187"/>00187 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;early&#32;if&#32;achieved.&#32;Defaults&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_retry_8py_source_1l00188"/><link linkend="_namespacefcmaes_1_1retry_1aa3fad9513845a768be702efc7bdd594a">00188</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num:&#32;Optional&#32;integer&#32;indicating&#32;the&#32;number&#32;of&#32;most&#32;recent&#32;statistics</emphasis>
<anchor xml:id="_retry_8py_source_1l00189"/>00189 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;retain&#32;in&#32;memory.&#32;Defaults&#32;to&#32;5000.</emphasis>
<anchor xml:id="_retry_8py_source_1l00190"/>00190 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00191"/>00191 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00192"/>00192 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult:&#32;The&#32;result&#32;object&#32;generated&#32;by&#32;the&#32;optimizer&#32;containing&#32;information</emphasis>
<anchor xml:id="_retry_8py_source_1l00193"/>00193 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;on&#32;the&#32;solution,&#32;including&#32;the&#32;best&#32;parameters&#32;found&#32;and&#32;associated</emphasis>
<anchor xml:id="_retry_8py_source_1l00194"/>00194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_retry_8py_source_1l00195"/>00195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00196"/>00196 &#32;&#32;&#32;&#32;time0&#32;=&#32;time.perf_counter()&#32;<emphasis role="comment">#&#32;optimization&#32;start&#32;time</emphasis>
<anchor xml:id="_retry_8py_source_1l00197"/>00197 &#32;&#32;&#32;&#32;name&#32;+=&#32;<emphasis role="stringliteral">&apos;_&apos;</emphasis>&#32;+&#32;optimizer.name
<anchor xml:id="_retry_8py_source_1l00198"/>00198 &#32;&#32;&#32;&#32;logger.info(<emphasis role="stringliteral">&apos;optimize&#32;&apos;</emphasis>&#32;+&#32;name)&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00199"/>00199 &#32;&#32;&#32;&#32;store&#32;=&#32;<link linkend="_classfcmaes_1_1retry_1_1_store">Store</link>(fun,&#32;bounds,&#32;capacity&#32;=&#32;500,&#32;statistic_num&#32;=&#32;statistic_num)
<anchor xml:id="_retry_8py_source_1l00200"/>00200 &#32;&#32;&#32;&#32;ret&#32;=&#32;retry(store,&#32;optimizer.minimize,&#32;num_retries,&#32;value_limit,&#32;workers,&#32;stop_fitness)
<anchor xml:id="_retry_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;impr&#32;=&#32;store.get_improvements()
<anchor xml:id="_retry_8py_source_1l00202"/>00202 &#32;&#32;&#32;&#32;np.savez_compressed(name,&#32;ys=impr)
<anchor xml:id="_retry_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(10):
<anchor xml:id="_retry_8py_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filtered&#32;=&#32;np.array([imp&#32;<emphasis role="keywordflow">for</emphasis>&#32;imp&#32;<emphasis role="keywordflow">in</emphasis>&#32;impr&#32;<emphasis role="keywordflow">if</emphasis>&#32;imp[1]&#32;&lt;&#32;plot_limit])
<anchor xml:id="_retry_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(filtered)&#32;&gt;&#32;0:&#32;
<anchor xml:id="_retry_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;impr&#32;=&#32;filtered
<anchor xml:id="_retry_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_retry_8py_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_retry_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot_limit&#32;*=&#32;3
<anchor xml:id="_retry_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;logger.info(name&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;time&#32;&apos;</emphasis>&#32;+&#32;str(dtime(time0)))&#32;
<anchor xml:id="_retry_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<link linkend="_namespacefcmaes_1_1retry_1a52b831afcdd723de9f72a3430e75afe8">plot</link>(impr,&#32;<emphasis role="stringliteral">&apos;progress_ret.&apos;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&apos;.png&apos;</emphasis>,&#32;label&#32;=&#32;name,&#32;
<anchor xml:id="_retry_8py_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xlabel&#32;=&#32;<emphasis role="stringliteral">&apos;time&#32;in&#32;sec&apos;</emphasis>,&#32;ylabel&#32;=&#32;<emphasis role="stringliteral">r&apos;$f$&apos;</emphasis>)
<anchor xml:id="_retry_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret
<anchor xml:id="_retry_8py_source_1l00214"/>00214 
<anchor xml:id="_retry_8py_source_1l00215"/>00215 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1retry_1a52b831afcdd723de9f72a3430e75afe8">plot</link>(front:&#32;ArrayLike,&#32;fname:&#32;str,&#32;interp:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>,&#32;
<anchor xml:id="_retry_8py_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;label:&#32;Optional[str]&#32;=&#32;<emphasis role="stringliteral">r&apos;$\chi$&apos;</emphasis>,&#32;
<anchor xml:id="_retry_8py_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xlabel:&#32;Optional[str]&#32;=&#32;<emphasis role="stringliteral">r&apos;$f_1$&apos;</emphasis>,&#32;ylabel:Optional[str]&#32;=&#32;<emphasis role="stringliteral">r&apos;$f_2$&apos;</emphasis>,&#32;
<anchor xml:id="_retry_8py_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlabel:&#32;Optional[str]&#32;=&#32;<emphasis role="stringliteral">r&apos;$f_3$&apos;</emphasis>,&#32;plot3d:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">False</emphasis>,&#32;
<anchor xml:id="_retry_8py_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s&#32;=&#32;1,&#32;dpi=300):
<anchor xml:id="_retry_8py_source_1l00220"/>00220 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00221"/>00221 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Plots&#32;a&#32;given&#32;front&#32;using&#32;either&#32;2D&#32;or&#32;3D&#32;visualization,&#32;with&#32;options&#32;for</emphasis>
<anchor xml:id="_retry_8py_source_1l00222"/>00222 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;interpolation&#32;and&#32;customization&#32;of&#32;the&#32;appearance&#32;and&#32;labels.&#32;If&#32;the&#32;input</emphasis>
<anchor xml:id="_retry_8py_source_1l00223"/>00223 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;front&#32;has&#32;one&#32;or&#32;more&#32;objectives,&#32;it&#32;chooses&#32;the&#32;appropriate&#32;plotting</emphasis>
<anchor xml:id="_retry_8py_source_1l00224"/>00224 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;method&#32;based&#32;on&#32;dimensionality,&#32;adds&#32;interpolated&#32;lines&#32;if&#32;specified,&#32;and</emphasis>
<anchor xml:id="_retry_8py_source_1l00225"/>00225 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;saves&#32;the&#32;resulting&#32;figure&#32;to&#32;a&#32;file.</emphasis>
<anchor xml:id="_retry_8py_source_1l00226"/>00226 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00227"/>00227 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00228"/>00228 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;front:&#32;Array-like&#32;structure&#32;representing&#32;the&#32;input&#32;data&#32;points.&#32;Each</emphasis>
<anchor xml:id="_retry_8py_source_1l00229"/>00229 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;row&#32;corresponds&#32;to&#32;a&#32;point,&#32;and&#32;each&#32;column&#32;represents&#32;a&#32;dimension</emphasis>
<anchor xml:id="_retry_8py_source_1l00230"/>00230 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(objective&#32;value).</emphasis>
<anchor xml:id="_retry_8py_source_1l00231"/>00231 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fname:&#32;str.&#32;Path&#32;and&#32;name&#32;of&#32;the&#32;file&#32;where&#32;the&#32;plot&#32;will&#32;be&#32;saved.</emphasis>
<anchor xml:id="_retry_8py_source_1l00232"/>00232 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interp:&#32;Optional[bool].&#32;Enables&#32;interpolation&#32;to&#32;smooth&#32;the&#32;2D&#32;plot</emphasis>
<anchor xml:id="_retry_8py_source_1l00233"/>00233 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lines.&#32;Default&#32;is&#32;True.</emphasis>
<anchor xml:id="_retry_8py_source_1l00234"/>00234 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;label:&#32;Optional[str].&#32;Label&#32;for&#32;the&#32;data&#32;points&#32;on&#32;the&#32;plot.&#32;Default&#32;is</emphasis>
<anchor xml:id="_retry_8py_source_1l00235"/>00235 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&apos;$\chi$&apos;.</emphasis>
<anchor xml:id="_retry_8py_source_1l00236"/>00236 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xlabel:&#32;Optional[str].&#32;Label&#32;for&#32;the&#32;x-axis.&#32;Default&#32;is&#32;r&apos;$f_1$&apos;.</emphasis>
<anchor xml:id="_retry_8py_source_1l00237"/>00237 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ylabel:&#32;Optional[str].&#32;Label&#32;for&#32;the&#32;y-axis.&#32;Default&#32;is&#32;r&apos;$f_2$&apos;.</emphasis>
<anchor xml:id="_retry_8py_source_1l00238"/>00238 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlabel:&#32;Optional[str].&#32;Label&#32;for&#32;the&#32;z-axis.&#32;Used&#32;only&#32;for&#32;3D&#32;plots.</emphasis>
<anchor xml:id="_retry_8py_source_1l00239"/>00239 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;r&apos;$f_3$&apos;.</emphasis>
<anchor xml:id="_retry_8py_source_1l00240"/>00240 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot3d:&#32;Optional[bool].&#32;If&#32;True&#32;and&#32;the&#32;front&#32;has&#32;3&#32;dimensions,&#32;generates</emphasis>
<anchor xml:id="_retry_8py_source_1l00241"/>00241 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;3D&#32;scatter&#32;plot.&#32;Default&#32;is&#32;False.</emphasis>
<anchor xml:id="_retry_8py_source_1l00242"/><link linkend="_namespacefcmaes_1_1retry_1a52b831afcdd723de9f72a3430e75afe8">00242</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s:&#32;Plot&#32;marker&#32;size&#32;for&#32;scatter&#32;points.&#32;Default&#32;is&#32;1.</emphasis>
<anchor xml:id="_retry_8py_source_1l00243"/>00243 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dpi:&#32;Resolution&#32;of&#32;the&#32;saved&#32;plot&#32;in&#32;dots&#32;per&#32;inch.&#32;Default&#32;is&#32;300.</emphasis>
<anchor xml:id="_retry_8py_source_1l00244"/>00244 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(front[0])&#32;==&#32;3&#32;<emphasis role="keywordflow">and</emphasis>&#32;plot3d:
<anchor xml:id="_retry_8py_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacefcmaes_1_1retry_1a754240fc233254e554ddcc58503d84a3">plot3</link>(front,&#32;fname,&#32;label,&#32;xlabel,&#32;ylabel,&#32;zlabel)
<anchor xml:id="_retry_8py_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="_retry_8py_source_1l00248"/>00248 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(front[0])&#32;&gt;=&#32;3:
<anchor xml:id="_retry_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(1,&#32;len(front[0])):
<anchor xml:id="_retry_8py_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacefcmaes_1_1retry_1a52b831afcdd723de9f72a3430e75afe8">plot</link>(front.T[np.array([0,i])].T,&#32;str(i)&#32;+&#32;<emphasis role="stringliteral">&apos;_&apos;</emphasis>&#32;+&#32;fname,&#32;
<anchor xml:id="_retry_8py_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interp=interp,&#32;ylabel&#32;=&#32;<emphasis role="stringliteral">r&apos;$f_{0}$&apos;</emphasis>.format(i+1))&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(front[0])&#32;==&#32;1:
<anchor xml:id="_retry_8py_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;np.array(list(zip(range(100),&#32;[front[0][0]]*100)))
<anchor xml:id="_retry_8py_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacefcmaes_1_1retry_1a52b831afcdd723de9f72a3430e75afe8">plot</link>(ys,&#32;str(1)&#32;+&#32;<emphasis role="stringliteral">&apos;_&apos;</emphasis>&#32;+&#32;fname,&#32;
<anchor xml:id="_retry_8py_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interp=interp,&#32;xlabel&#32;=&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>,&#32;ylabel&#32;=&#32;<emphasis role="stringliteral">r&apos;$f_{0}$&apos;</emphasis>.format(1))&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<emphasis role="keyword">import</emphasis>&#32;matplotlib.pyplot&#32;<emphasis role="keyword">as</emphasis>&#32;pl
<anchor xml:id="_retry_8py_source_1l00259"/>00259 &#32;&#32;&#32;&#32;fig,&#32;ax&#32;=&#32;pl.subplots(1,&#32;1)
<anchor xml:id="_retry_8py_source_1l00260"/>00260 &#32;&#32;&#32;&#32;x&#32;=&#32;front[:,&#32;0];&#32;y&#32;=&#32;front[:,&#32;1]
<anchor xml:id="_retry_8py_source_1l00261"/>00261 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;interp&#32;<emphasis role="keywordflow">and</emphasis>&#32;len(x)&#32;&gt;&#32;2:
<anchor xml:id="_retry_8py_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xa&#32;=&#32;np.argsort(x)
<anchor xml:id="_retry_8py_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;x[xa];&#32;ys&#32;=&#32;y[xa]
<anchor xml:id="_retry_8py_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;[];&#32;y&#32;=&#32;[]
<anchor xml:id="_retry_8py_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(xs)):&#32;<emphasis role="comment">#&#32;filter&#32;equal&#32;x&#32;values</emphasis>
<anchor xml:id="_retry_8py_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;==&#32;0&#32;<emphasis role="keywordflow">or</emphasis>&#32;xs[i]&#32;&gt;&#32;xs[i-1]&#32;+&#32;1E-5:
<anchor xml:id="_retry_8py_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.append(xs[i]);&#32;y.append(ys[i])
<anchor xml:id="_retry_8py_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tck&#32;=&#32;interpolate.InterpolatedUnivariateSpline(x,y,k=1)
<anchor xml:id="_retry_8py_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;np.linspace(min(x),max(x),1000)
<anchor xml:id="_retry_8py_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;[tck(xi)&#32;<emphasis role="keywordflow">for</emphasis>&#32;xi&#32;<emphasis role="keywordflow">in</emphasis>&#32;x]
<anchor xml:id="_retry_8py_source_1l00271"/>00271 &#32;&#32;&#32;&#32;ax.scatter(x,&#32;y,&#32;label=label,&#32;s=s)
<anchor xml:id="_retry_8py_source_1l00272"/>00272 &#32;&#32;&#32;&#32;ax.grid()
<anchor xml:id="_retry_8py_source_1l00273"/>00273 &#32;&#32;&#32;&#32;ax.set_xlabel(xlabel)
<anchor xml:id="_retry_8py_source_1l00274"/>00274 &#32;&#32;&#32;&#32;ax.set_ylabel(ylabel)
<anchor xml:id="_retry_8py_source_1l00275"/>00275 &#32;&#32;&#32;&#32;ax.legend()
<anchor xml:id="_retry_8py_source_1l00276"/>00276 &#32;&#32;&#32;&#32;fig.savefig(fname,&#32;dpi=dpi)
<anchor xml:id="_retry_8py_source_1l00277"/>00277 &#32;&#32;&#32;&#32;pl.close(<emphasis role="stringliteral">&apos;all&apos;</emphasis>)
<anchor xml:id="_retry_8py_source_1l00278"/>00278 
<anchor xml:id="_retry_8py_source_1l00279"/>00279 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1retry_1a754240fc233254e554ddcc58503d84a3">plot3</link>(front:&#32;ArrayLike,&#32;fname:&#32;str,&#32;label:&#32;Optional[str]&#32;=<emphasis role="stringliteral">r&apos;$\chi$&apos;</emphasis>,&#32;
<anchor xml:id="_retry_8py_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xlabel:&#32;Optional[str]&#32;=&#32;<emphasis role="stringliteral">r&apos;$f_1$&apos;</emphasis>,&#32;ylabel:&#32;Optional[str]&#32;=&#32;<emphasis role="stringliteral">r&apos;$f_2$&apos;</emphasis>,&#32;
<anchor xml:id="_retry_8py_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlabel:&#32;Optional[str]&#32;=&#32;<emphasis role="stringliteral">r&apos;$f_3$&apos;</emphasis>):
<anchor xml:id="_retry_8py_source_1l00282"/>00282 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00283"/>00283 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Creates&#32;and&#32;saves&#32;a&#32;3D&#32;scatter&#32;plot&#32;from&#32;given&#32;data.</emphasis>
<anchor xml:id="_retry_8py_source_1l00284"/>00284 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00285"/>00285 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;generates&#32;a&#32;3D&#32;scatter&#32;plot&#32;with&#32;labeled&#32;axes&#32;using&#32;the&#32;data</emphasis>
<anchor xml:id="_retry_8py_source_1l00286"/>00286 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;provided&#32;in&#32;a&#32;2D&#32;array-like&#32;object.&#32;The&#32;plot&#32;is&#32;saved&#32;to&#32;the&#32;specified&#32;file</emphasis>
<anchor xml:id="_retry_8py_source_1l00287"/>00287 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;with&#32;high&#32;resolution.&#32;The&#32;labels&#32;for&#32;each&#32;axis&#32;and&#32;the&#32;plot&#32;can&#32;be&#32;customized.</emphasis>
<anchor xml:id="_retry_8py_source_1l00288"/>00288 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00289"/>00289 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00290"/>00290 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;front&#32;(ArrayLike):&#32;A&#32;2D&#32;array-like&#32;object&#32;containing&#32;the&#32;data&#32;points&#32;to</emphasis>
<anchor xml:id="_retry_8py_source_1l00291"/>00291 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot.&#32;It&#32;should&#32;have&#32;exactly&#32;three&#32;columns&#32;corresponding&#32;to&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00292"/>00292 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x,&#32;y,&#32;and&#32;z&#32;coordinates.</emphasis>
<anchor xml:id="_retry_8py_source_1l00293"/>00293 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fname&#32;(str):&#32;The&#32;file&#32;name&#32;where&#32;the&#32;generated&#32;plot&#32;should&#32;be&#32;saved.</emphasis>
<anchor xml:id="_retry_8py_source_1l00294"/>00294 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;label&#32;(Optional[str]):&#32;The&#32;label&#32;for&#32;the&#32;scatter&#32;plot.&#32;Defaults&#32;to&#32;r&apos;$\chi$&apos;.</emphasis>
<anchor xml:id="_retry_8py_source_1l00295"/>00295 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xlabel&#32;(Optional[str]):&#32;The&#32;label&#32;for&#32;the&#32;x-axis.&#32;Defaults&#32;to&#32;r&apos;$f_1$&apos;.</emphasis>
<anchor xml:id="_retry_8py_source_1l00296"/>00296 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ylabel&#32;(Optional[str]):&#32;The&#32;label&#32;for&#32;the&#32;y-axis.&#32;Defaults&#32;to&#32;r&apos;$f_2$&apos;.</emphasis>
<anchor xml:id="_retry_8py_source_1l00297"/>00297 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zlabel&#32;(Optional[str]):&#32;The&#32;label&#32;for&#32;the&#32;z-axis.&#32;Defaults&#32;to&#32;r&apos;$f_3$&apos;.</emphasis>
<anchor xml:id="_retry_8py_source_1l00298"/><link linkend="_namespacefcmaes_1_1retry_1a754240fc233254e554ddcc58503d84a3">00298</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00299"/>00299 &#32;&#32;&#32;&#32;<emphasis role="keyword">import</emphasis>&#32;matplotlib.pyplot&#32;<emphasis role="keyword">as</emphasis>&#32;pl
<anchor xml:id="_retry_8py_source_1l00300"/>00300 &#32;&#32;&#32;&#32;fig&#32;=&#32;pl.figure()
<anchor xml:id="_retry_8py_source_1l00301"/>00301 &#32;&#32;&#32;&#32;ax&#32;=&#32;fig.add_subplot(projection=<emphasis role="stringliteral">&apos;3d&apos;</emphasis>)
<anchor xml:id="_retry_8py_source_1l00302"/>00302 &#32;&#32;&#32;&#32;x&#32;=&#32;front[:,&#32;0];&#32;y&#32;=&#32;front[:,&#32;1];&#32;z&#32;=&#32;front[:,&#32;2]
<anchor xml:id="_retry_8py_source_1l00303"/>00303 &#32;&#32;&#32;&#32;ax.scatter(x,&#32;y,&#32;z,&#32;label=label,&#32;s=1)
<anchor xml:id="_retry_8py_source_1l00304"/>00304 &#32;&#32;&#32;&#32;ax.grid()
<anchor xml:id="_retry_8py_source_1l00305"/>00305 &#32;&#32;&#32;&#32;ax.set_xlabel(xlabel)
<anchor xml:id="_retry_8py_source_1l00306"/>00306 &#32;&#32;&#32;&#32;ax.set_ylabel(ylabel)
<anchor xml:id="_retry_8py_source_1l00307"/>00307 &#32;&#32;&#32;&#32;ax.set_zlabel(zlabel)
<anchor xml:id="_retry_8py_source_1l00308"/>00308 &#32;&#32;&#32;&#32;ax.legend()
<anchor xml:id="_retry_8py_source_1l00309"/>00309 &#32;&#32;&#32;&#32;<emphasis role="comment">#pl.show()</emphasis>
<anchor xml:id="_retry_8py_source_1l00310"/>00310 &#32;&#32;&#32;&#32;fig.savefig(fname,&#32;dpi=300)
<anchor xml:id="_retry_8py_source_1l00311"/>00311 &#32;&#32;&#32;&#32;pl.close(<emphasis role="stringliteral">&apos;all&apos;</emphasis>)
<anchor xml:id="_retry_8py_source_1l00312"/>00312 
<anchor xml:id="_retry_8py_source_1l00313"/>00313 
<anchor xml:id="_retry_8py_source_1l00314"/>00314 dtype_map&#32;=&#32;{
<anchor xml:id="_retry_8py_source_1l00315"/>00315 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;int32&apos;</emphasis>:&#32;ct.c_int32,
<anchor xml:id="_retry_8py_source_1l00316"/><link linkend="_namespacefcmaes_1_1retry_1a59360006c21e3c4b3c0cd45bd65a5f25">00316</link> &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;int64&apos;</emphasis>:&#32;ct.c_int64,
<anchor xml:id="_retry_8py_source_1l00317"/>00317 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;float32&apos;</emphasis>:&#32;ct.c_float,
<anchor xml:id="_retry_8py_source_1l00318"/>00318 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;float64&apos;</emphasis>:&#32;ct.c_double,
<anchor xml:id="_retry_8py_source_1l00319"/>00319 }
<anchor xml:id="_retry_8py_source_1l00320"/>00320 &#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00321"/>00321 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_shared2d">Shared2d</link>():
<anchor xml:id="_retry_8py_source_1l00322"/>00322 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;A&#32;2D&#32;shared&#32;memory&#32;array&#32;wrapper.</emphasis>
<anchor xml:id="_retry_8py_source_1l00323"/>00323 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00324"/>00324 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;allows&#32;sharing&#32;of&#32;a&#32;2D&#32;NumPy&#32;array&#32;between&#32;processes&#32;using</emphasis>
<anchor xml:id="_retry_8py_source_1l00325"/>00325 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;shared&#32;memory.&#32;It&#32;provides&#32;methods&#32;to&#32;set&#32;and&#32;retrieve&#32;the&#32;data,&#32;as&#32;well</emphasis>
<anchor xml:id="_retry_8py_source_1l00326"/>00326 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;as&#32;to&#32;update&#32;specific&#32;rows&#32;of&#32;the&#32;array.</emphasis>
<anchor xml:id="_retry_8py_source_1l00327"/>00327 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00328"/>00328 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_retry_8py_source_1l00329"/>00329 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rows&#32;(int):&#32;Number&#32;of&#32;rows&#32;in&#32;the&#32;2D&#32;array.</emphasis>
<anchor xml:id="_retry_8py_source_1l00330"/>00330 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cols&#32;(int):&#32;Number&#32;of&#32;columns&#32;in&#32;the&#32;2D&#32;array.</emphasis>
<anchor xml:id="_retry_8py_source_1l00331"/><link linkend="_classfcmaes_1_1retry_1_1_shared2d">00331</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dtype:&#32;Data&#32;type&#32;of&#32;the&#32;elements&#32;in&#32;the&#32;2D&#32;array.</emphasis>
<anchor xml:id="_retry_8py_source_1l00332"/>00332 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00333"/>00333 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a0d1c9d735b97086605baf64547e9a92d">__init__</link>(self,&#32;xs):
<anchor xml:id="_retry_8py_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00335"/>00335 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;instance&#32;with&#32;given&#32;data,&#32;extracting&#32;shape&#32;and&#32;data&#32;type,&#32;and&#32;setting&#32;up&#32;a&#32;shared&#32;memory&#32;array.</emphasis>
<anchor xml:id="_retry_8py_source_1l00336"/>00336 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00337"/>00337 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00338"/>00338 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs:&#32;numpy.ndarray</emphasis>
<anchor xml:id="_retry_8py_source_1l00339"/>00339 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;input&#32;array&#32;used&#32;to&#32;initialize&#32;the&#32;instance.</emphasis>
<anchor xml:id="_retry_8py_source_1l00340"/>00340 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00341"/>00341 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a57ba9eed93c6e87be18f57516cd8bfc0">rows</link>,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a3e421506a60c206e6c1ebec288294a2f">cols</link>&#32;=&#32;xs.shape
<anchor xml:id="_retry_8py_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a2a200e99ea9271c4a48476903aa31a25">dtype</link>&#32;=&#32;xs.dtype
<anchor xml:id="_retry_8py_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1aa9c58dfba6f7887648069920eef16ade">ra</link>&#32;=&#32;mp.RawArray(dtype_map[str(xs.dtype)],&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a57ba9eed93c6e87be18f57516cd8bfc0">rows</link>*self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a3e421506a60c206e6c1ebec288294a2f">cols</link>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1ad2452a4e2d5797f2fd2b7e86caea1843">set</link>(xs)
<anchor xml:id="_retry_8py_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00347"/>00347 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a8f215e97145f12a7b2dc9b322652e8e5">set_i</link>(self,&#32;i,&#32;x):
<anchor xml:id="_retry_8py_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00349"/><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a0d1c9d735b97086605baf64547e9a92d">00349</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Updates&#32;a&#32;specific&#32;row&#32;in&#32;the&#32;object&apos;s&#32;view&#32;with&#32;new&#32;data.</emphasis>
<anchor xml:id="_retry_8py_source_1l00350"/><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a3e421506a60c206e6c1ebec288294a2f">00350</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00351"/><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a2a200e99ea9271c4a48476903aa31a25">00351</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;modifies&#32;the&#32;specified&#32;row&#32;of&#32;the&#32;object&apos;s&#32;view&#32;by&#32;replacing&#32;it</emphasis>
<anchor xml:id="_retry_8py_source_1l00352"/><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1aa9c58dfba6f7887648069920eef16ade">00352</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;with&#32;the&#32;provided&#32;data.</emphasis>
<anchor xml:id="_retry_8py_source_1l00353"/>00353 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00354"/>00354 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00355"/>00355 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;(int):&#32;Index&#32;of&#32;the&#32;row&#32;to&#32;update&#32;within&#32;the&#32;view.</emphasis>
<anchor xml:id="_retry_8py_source_1l00356"/>00356 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;New&#32;data&#32;to&#32;replace&#32;the&#32;current&#32;row&#32;content.&#32;The&#32;type&#32;should&#32;match</emphasis>
<anchor xml:id="_retry_8py_source_1l00357"/>00357 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;requirements&#32;of&#32;the&#32;view.</emphasis>
<anchor xml:id="_retry_8py_source_1l00358"/>00358 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a7c6d7c872ffb38a8a3ede6267c3abd28">view</link>()[i,&#32;:]&#32;=&#32;x
<anchor xml:id="_retry_8py_source_1l00360"/>00360 &#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00361"/>00361 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a7c6d7c872ffb38a8a3ede6267c3abd28">view</link>(self):
<anchor xml:id="_retry_8py_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00363"/>00363 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Converts&#32;the&#32;binary&#32;data&#32;buffer&#32;to&#32;a&#32;NumPy&#32;array&#32;and&#32;reshapes&#32;it&#32;according&#32;to</emphasis>
<anchor xml:id="_retry_8py_source_1l00364"/>00364 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;specified&#32;rows&#32;and&#32;columns.</emphasis>
<anchor xml:id="_retry_8py_source_1l00365"/>00365 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00366"/><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a8f215e97145f12a7b2dc9b322652e8e5">00366</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00367"/>00367 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;A&#32;reshaped&#32;NumPy&#32;array&#32;created&#32;from&#32;the&#32;binary&#32;buffer.</emphasis>
<anchor xml:id="_retry_8py_source_1l00368"/>00368 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.frombuffer(self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1aa9c58dfba6f7887648069920eef16ade">ra</link>,&#32;dtype=self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a2a200e99ea9271c4a48476903aa31a25">dtype</link>).reshape((self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a57ba9eed93c6e87be18f57516cd8bfc0">rows</link>,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a3e421506a60c206e6c1ebec288294a2f">cols</link>))
<anchor xml:id="_retry_8py_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00371"/>00371 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1ad2452a4e2d5797f2fd2b7e86caea1843">set</link>(self,&#32;xs):
<anchor xml:id="_retry_8py_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00373"/>00373 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sets&#32;the&#32;values&#32;of&#32;the&#32;object&#32;by&#32;copying&#32;the&#32;given&#32;array&#32;to&#32;its&#32;data&#32;view.</emphasis>
<anchor xml:id="_retry_8py_source_1l00374"/>00374 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00375"/>00375 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00376"/><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a7c6d7c872ffb38a8a3ede6267c3abd28">00376</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs:&#32;The&#32;array-like&#32;object&#32;whose&#32;values&#32;are&#32;to&#32;be&#32;copied.</emphasis>
<anchor xml:id="_retry_8py_source_1l00377"/>00377 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00378"/>00378 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.copyto(self.<link linkend="_classfcmaes_1_1retry_1_1_shared2d_1a7c6d7c872ffb38a8a3ede6267c3abd28">view</link>(),&#32;xs)
<anchor xml:id="_retry_8py_source_1l00380"/>00380 &#32;
<anchor xml:id="_retry_8py_source_1l00381"/>00381 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store">Store</link>(object):
<anchor xml:id="_retry_8py_source_1l00382"/>00382 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00383"/>00383 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Manages&#32;and&#32;tracks&#32;the&#32;optimization&#32;process&#32;by&#32;storing&#32;evaluation&#32;results,&#32;maintaining&#32;statistics,</emphasis>
<anchor xml:id="_retry_8py_source_1l00384"/>00384 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;providing&#32;utility&#32;functions&#32;for&#32;analyzing&#32;improvements.</emphasis>
<anchor xml:id="_retry_8py_source_1l00385"/>00385 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00386"/><link linkend="_classfcmaes_1_1retry_1_1_shared2d_1ad2452a4e2d5797f2fd2b7e86caea1843">00386</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;class&#32;is&#32;designed&#32;for&#32;optimization&#32;tasks,&#32;allowing&#32;the&#32;storage&#32;of&#32;evaluated&#32;points,</emphasis>
<anchor xml:id="_retry_8py_source_1l00387"/>00387 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;their&#32;objective&#32;function&#32;values,&#32;and&#32;statistical&#32;tracking&#32;of&#32;improvements.&#32;It&#32;supports</emphasis>
<anchor xml:id="_retry_8py_source_1l00388"/>00388 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;multi-processed&#32;environments&#32;using&#32;shared&#32;memory&#32;for&#32;data&#32;storage.</emphasis>
<anchor xml:id="_retry_8py_source_1l00389"/>00389 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00390"/>00390 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_retry_8py_source_1l00391"/>00391 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;fitness&#32;function&#32;to&#32;be&#32;optimized.</emphasis>
<anchor xml:id="_retry_8py_source_1l00392"/>00392 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower&#32;(ArrayLike):&#32;The&#32;lower&#32;bounds&#32;of&#32;the&#32;objective&#32;function&#32;arguments.</emphasis>
<anchor xml:id="_retry_8py_source_1l00393"/>00393 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;(ArrayLike):&#32;The&#32;upper&#32;bounds&#32;of&#32;the&#32;objective&#32;function&#32;arguments.</emphasis>
<anchor xml:id="_retry_8py_source_1l00394"/>00394 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;(int):&#32;Maximum&#32;capacity&#32;of&#32;the&#32;evaluation&#32;store.</emphasis>
<anchor xml:id="_retry_8py_source_1l00395"/>00395 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check_interval&#32;(int):&#32;Number&#32;of&#32;iterations&#32;after&#32;which&#32;the&#32;evaluation&#32;memory&#32;is&#32;sorted.</emphasis>
<anchor xml:id="_retry_8py_source_1l00396"/>00396 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;Dimensionality&#32;of&#32;the&#32;problem&#32;space.</emphasis>
<anchor xml:id="_retry_8py_source_1l00397"/>00397 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;(Shared2d):&#32;Shared&#32;2D&#32;array&#32;for&#32;storing&#32;the&#32;evaluated&#32;points&#32;in&#32;the&#32;search&#32;space.</emphasis>
<anchor xml:id="_retry_8py_source_1l00398"/>00398 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;(multiprocessing.RawArray):&#32;Shared&#32;array&#32;for&#32;storing&#32;the&#32;corresponding&#32;function&#32;values.</emphasis>
<anchor xml:id="_retry_8py_source_1l00399"/>00399 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count_evals&#32;(multiprocessing.RawValue):&#32;Counter&#32;for&#32;the&#32;total&#32;number&#32;of&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_retry_8py_source_1l00400"/><link linkend="_classfcmaes_1_1retry_1_1_store">00400</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count_runs&#32;(multiprocessing.RawValue):&#32;Counter&#32;for&#32;the&#32;number&#32;of&#32;optimization&#32;runs.</emphasis>
<anchor xml:id="_retry_8py_source_1l00401"/>00401 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_stored&#32;(multiprocessing.RawValue):&#32;Counter&#32;for&#32;the&#32;number&#32;of&#32;currently&#32;stored&#32;evaluations.</emphasis>
<anchor xml:id="_retry_8py_source_1l00402"/>00402 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count_stat_runs&#32;(multiprocessing.RawValue):&#32;Counter&#32;for&#32;the&#32;number&#32;of&#32;recorded&#32;statistics.</emphasis>
<anchor xml:id="_retry_8py_source_1l00403"/>00403 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t0&#32;(float):&#32;Reference&#32;time&#32;for&#32;tracking&#32;durations.</emphasis>
<anchor xml:id="_retry_8py_source_1l00404"/>00404 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mean&#32;(multiprocessing.RawValue):&#32;Running&#32;mean&#32;of&#32;function&#32;values&#32;in&#32;the&#32;store.</emphasis>
<anchor xml:id="_retry_8py_source_1l00405"/>00405 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;qmean&#32;(multiprocessing.RawValue):&#32;Running&#32;squared&#32;mean&#32;difference&#32;for&#32;standard&#32;deviation&#32;calculation.</emphasis>
<anchor xml:id="_retry_8py_source_1l00406"/>00406 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_y&#32;(multiprocessing.RawValue):&#32;Best&#32;objective&#32;function&#32;value&#32;found&#32;so&#32;far.</emphasis>
<anchor xml:id="_retry_8py_source_1l00407"/>00407 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_x&#32;(multiprocessing.RawArray):&#32;Coordinates&#32;of&#32;the&#32;point&#32;corresponding&#32;to&#32;the&#32;best&#32;objective&#32;function&#32;value.</emphasis>
<anchor xml:id="_retry_8py_source_1l00408"/>00408 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num&#32;(int):&#32;Number&#32;of&#32;statistics&#32;points&#32;to&#32;record.</emphasis>
<anchor xml:id="_retry_8py_source_1l00409"/>00409 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time&#32;(multiprocessing.RawArray):&#32;Array&#32;for&#32;storing&#32;timestamps&#32;of&#32;improvements.</emphasis>
<anchor xml:id="_retry_8py_source_1l00410"/>00410 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;(multiprocessing.RawArray):&#32;Array&#32;for&#32;storing&#32;values&#32;of&#32;improvements.</emphasis>
<anchor xml:id="_retry_8py_source_1l00411"/>00411 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si&#32;(multiprocessing.RawValue):&#32;Index&#32;for&#32;the&#32;next&#32;statistic&#32;to&#32;record.</emphasis>
<anchor xml:id="_retry_8py_source_1l00412"/>00412 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sevals&#32;(multiprocessing.RawValue):&#32;Counter&#32;for&#32;total&#32;evaluations&#32;stored&#32;for&#32;statistics.</emphasis>
<anchor xml:id="_retry_8py_source_1l00413"/>00413 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bval&#32;(multiprocessing.RawValue):&#32;Current&#32;best&#32;value&#32;stored&#32;for&#32;statistics&#32;tracking.</emphasis>
<anchor xml:id="_retry_8py_source_1l00414"/>00414 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00416"/>00416 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a12ccf40a561e8b6528ca7eb962ae021a">__init__</link>(self,&#32;
<anchor xml:id="_retry_8py_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;<emphasis role="comment">#&#32;fitness&#32;function</emphasis>
<anchor xml:id="_retry_8py_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,&#32;<emphasis role="comment">#&#32;bounds&#32;of&#32;the&#32;objective&#32;function&#32;arguments</emphasis>
<anchor xml:id="_retry_8py_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check_interval:&#32;Optional[int]&#32;=&#32;10,&#32;<emphasis role="comment">#&#32;sort&#32;evaluation&#32;memory&#32;after&#32;check_interval&#32;iterations</emphasis>
<anchor xml:id="_retry_8py_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity:&#32;Optional[int]&#32;=&#32;500,&#32;<emphasis role="comment">#&#32;capacity&#32;of&#32;the&#32;evaluation&#32;store</emphasis>
<anchor xml:id="_retry_8py_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num:&#32;Optional[int]&#32;=&#32;0
<anchor xml:id="_retry_8py_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;):
<anchor xml:id="_retry_8py_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00424"/>00424 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;instance&#32;to&#32;manage&#32;shared&#32;memory&#32;for&#32;evaluating&#32;fitness&#32;functions</emphasis>
<anchor xml:id="_retry_8py_source_1l00425"/>00425 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;with&#32;capabilities&#32;for&#32;storing&#32;results,&#32;maintaining&#32;statistics,&#32;and&#32;handling&#32;bounds</emphasis>
<anchor xml:id="_retry_8py_source_1l00426"/>00426 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;a&#32;multiprocessing&#32;environment.</emphasis>
<anchor xml:id="_retry_8py_source_1l00427"/>00427 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00428"/>00428 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00429"/>00429 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;fitness&#32;function&#32;to&#32;evaluate.</emphasis>
<anchor xml:id="_retry_8py_source_1l00430"/>00430 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Bounds):&#32;The&#32;bounds&#32;of&#32;the&#32;objective&#32;function&#32;arguments.</emphasis>
<anchor xml:id="_retry_8py_source_1l00431"/>00431 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check_interval&#32;(Optional[int]):&#32;The&#32;interval&#32;(in&#32;iterations)&#32;to&#32;sort&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00432"/>00432 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluation&#32;memory.&#32;Default&#32;is&#32;10.</emphasis>
<anchor xml:id="_retry_8py_source_1l00433"/>00433 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;(Optional[int]):&#32;The&#32;maximum&#32;capacity&#32;of&#32;the&#32;evaluation&#32;store.</emphasis>
<anchor xml:id="_retry_8py_source_1l00434"/>00434 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Default&#32;is&#32;500.</emphasis>
<anchor xml:id="_retry_8py_source_1l00435"/>00435 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;statistics&#32;to&#32;maintain.&#32;If&#32;greater</emphasis>
<anchor xml:id="_retry_8py_source_1l00436"/>00436 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;than&#32;0,&#32;statistics&#32;tracking&#32;is&#32;enabled.&#32;Default&#32;is&#32;0.</emphasis>
<anchor xml:id="_retry_8py_source_1l00437"/>00437 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a958dac450efef452d7a6a81864c9ab29">fun</link>&#32;=&#32;fun
<anchor xml:id="_retry_8py_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a74edea66527f530d09f39b00ab4e8216">lower</link>,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a4638dbc2eff8a0fb5209513ee112a6d4">upper</link>&#32;=&#32;<link linkend="_namespacefcmaes_1_1retry_1a35537fa2c742d879961164339775fd72">_convertBounds</link>(bounds)
<anchor xml:id="_retry_8py_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a2948a743df6a8be2bf2c274341a59997">capacity</link>&#32;=&#32;capacity
<anchor xml:id="_retry_8py_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1aa9efde59322cf2c93aad79a8e24d8d9b">check_interval</link>&#32;=&#32;check_interval
<anchor xml:id="_retry_8py_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a051fd56ed3ea2758d70a16e26888e2d6">dim</link>&#32;=&#32;len(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a74edea66527f530d09f39b00ab4e8216">lower</link>)
<anchor xml:id="_retry_8py_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a5e7a47140abfcb59a91b4559eba46d06">delta</link>&#32;=&#32;[]
<anchor xml:id="_retry_8py_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;k&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a051fd56ed3ea2758d70a16e26888e2d6">dim</link>):
<anchor xml:id="_retry_8py_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a5e7a47140abfcb59a91b4559eba46d06">delta</link>.append(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a4638dbc2eff8a0fb5209513ee112a6d4">upper</link>[k]&#32;-&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a74edea66527f530d09f39b00ab4e8216">lower</link>[k])
<anchor xml:id="_retry_8py_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#shared&#32;between&#32;processes</emphasis>
<anchor xml:id="_retry_8py_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a5c10a1d4fb385cbdc835ce1360c693d1">add_mutex</link>&#32;=&#32;mp.Lock()&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1afb813b3455fba516e72fa95f6a7261f7">xs</link>&#32;=&#32;<link linkend="_classfcmaes_1_1retry_1_1_shared2d">Shared2d</link>(np.empty((self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a2948a743df6a8be2bf2c274341a59997">capacity</link>,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a051fd56ed3ea2758d70a16e26888e2d6">dim</link>),&#32;dtype&#32;=&#32;np.float64))
<anchor xml:id="_retry_8py_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a65ac0375e6705dd9e67e253829efd92d">create_xs_view</link>()
<anchor xml:id="_retry_8py_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a9da0b3410bcb1d0eab643afe10343135">ys</link>&#32;=&#32;mp.RawArray(ct.c_double,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a2948a743df6a8be2bf2c274341a59997">capacity</link>)&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a3f6bde5da0736513834d69412b7c61dc">count_evals</link>&#32;=&#32;mp.RawValue(ct.c_long,&#32;0)&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a130c7f2aadec40eb41b24cb0d6dbc425">count_runs</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)&#32;
<anchor xml:id="_retry_8py_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">num_stored</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a2be02fdcd227c43fa17eafab835a9efe">count_stat_runs</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a4fc40ab16eeca0897e5ea7528dacbf26">t0</link>&#32;=&#32;time.perf_counter()
<anchor xml:id="_retry_8py_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a93bde352c1ab2614c9e975c2c042f9e1">mean</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;0)&#32;
<anchor xml:id="_retry_8py_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a3aba1d490d946a3765da95a30732b665">qmean</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;0)&#32;
<anchor xml:id="_retry_8py_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1abaa0621bb3e9f36e0a97ffe120d6653b">best_y</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;np.inf)&#32;
<anchor xml:id="_retry_8py_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a005e34c5baaa20b4169e5da2cc2eaffa">best_x</link>&#32;=&#32;mp.RawArray(ct.c_double,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a051fd56ed3ea2758d70a16e26888e2d6">dim</link>)
<anchor xml:id="_retry_8py_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a8a329ef518cc42000867ae5fa9b854d7">statistic_num</link>&#32;=&#32;statistic_num
<anchor xml:id="_retry_8py_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;statistics&#32;&#32;&#32;</emphasis>
<anchor xml:id="_retry_8py_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a8a329ef518cc42000867ae5fa9b854d7">statistic_num</link>&#32;=&#32;statistic_num&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;statistic_num&#32;&gt;&#32;0:&#32;&#32;<emphasis role="comment">#&#32;enable&#32;statistics&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_retry_8py_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ab62e2aba40d2a934b1cf31bb8e142e27">time</link>&#32;=&#32;mp.RawArray(ct.c_double,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a8a329ef518cc42000867ae5fa9b854d7">statistic_num</link>)
<anchor xml:id="_retry_8py_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ab3305985c51cacaee432b2d93144794a">val</link>&#32;=&#32;mp.RawArray(ct.c_double,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a8a329ef518cc42000867ae5fa9b854d7">statistic_num</link>)
<anchor xml:id="_retry_8py_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1af8054c47224cbc0038d74502e002d2af">si</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)
<anchor xml:id="_retry_8py_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a4c779ed899eabfdc90daab6f0be1b1ec">sevals</link>&#32;=&#32;mp.RawValue(ct.c_long,&#32;0)
<anchor xml:id="_retry_8py_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac8aae6e25f5f6b3283fce0598a6aecad">bval</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;np.inf)
<anchor xml:id="_retry_8py_source_1l00470"/>00470 
<anchor xml:id="_retry_8py_source_1l00471"/>00471 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;register&#32;improvement&#32;-&#32;time&#32;and&#32;value</emphasis>
<anchor xml:id="_retry_8py_source_1l00472"/>00472 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c">wrapper</link>(self,&#32;x:&#32;ArrayLike):
<anchor xml:id="_retry_8py_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00474"/>00474 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Evaluates&#32;a&#32;given&#32;function&#32;with&#32;input&#32;data,&#32;tracks&#32;evaluation&#32;statistics,&#32;and&#32;updates&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00475"/>00475 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best&#32;observed&#32;value&#32;if&#32;applicable.</emphasis>
<anchor xml:id="_retry_8py_source_1l00476"/>00476 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00477"/>00477 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00478"/>00478 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;(ArrayLike):&#32;Input&#32;data&#32;for&#32;the&#32;function&#32;evaluation.</emphasis>
<anchor xml:id="_retry_8py_source_1l00479"/>00479 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00480"/>00480 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00481"/>00481 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;function&#32;output&#32;for&#32;the&#32;given&#32;input.</emphasis>
<anchor xml:id="_retry_8py_source_1l00482"/>00482 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a958dac450efef452d7a6a81864c9ab29">fun</link>(x)
<anchor xml:id="_retry_8py_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a4c779ed899eabfdc90daab6f0be1b1ec">sevals</link>.value&#32;+=&#32;1
<anchor xml:id="_retry_8py_source_1l00485"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a12ccf40a561e8b6528ca7eb962ae021a">00485</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac8aae6e25f5f6b3283fce0598a6aecad">bval</link>.value:
<anchor xml:id="_retry_8py_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac8aae6e25f5f6b3283fce0598a6aecad">bval</link>.value&#32;=&#32;y
<anchor xml:id="_retry_8py_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1af8054c47224cbc0038d74502e002d2af">si</link>.value
<anchor xml:id="_retry_8py_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;si&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a8a329ef518cc42000867ae5fa9b854d7">statistic_num</link>&#32;-&#32;1:
<anchor xml:id="_retry_8py_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1af8054c47224cbc0038d74502e002d2af">si</link>.value&#32;=&#32;si&#32;+&#32;1
<anchor xml:id="_retry_8py_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ab62e2aba40d2a934b1cf31bb8e142e27">time</link>[si]&#32;=&#32;dtime(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a4fc40ab16eeca0897e5ea7528dacbf26">t0</link>)
<anchor xml:id="_retry_8py_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ab3305985c51cacaee432b2d93144794a">val</link>[si]&#32;=&#32;y&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00492"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a958dac450efef452d7a6a81864c9ab29">00492</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.trace(
<anchor xml:id="_retry_8py_source_1l00493"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a74edea66527f530d09f39b00ab4e8216">00493</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f<emphasis role="stringliteral">&apos;{self.time[si]}&#32;{self.sevals.value}&#32;{self.sevals.value/(1E-9&#32;+&#32;self.time[si]):.1f}&#32;{y}&#32;{list(x)}&apos;</emphasis>
<anchor xml:id="_retry_8py_source_1l00494"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a2948a743df6a8be2bf2c274341a59997">00494</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_retry_8py_source_1l00495"/><link linkend="_classfcmaes_1_1retry_1_1_store_1aa9efde59322cf2c93aad79a8e24d8d9b">00495</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y
<anchor xml:id="_retry_8py_source_1l00496"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a051fd56ed3ea2758d70a16e26888e2d6">00496</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00497"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a5e7a47140abfcb59a91b4559eba46d06">00497</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a300771cb56317ceb78cb7cd4a79ce0ec">get_improvements</link>(self):
<anchor xml:id="_retry_8py_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00499"/>00499 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generates&#32;an&#32;array&#32;of&#32;improvements&#32;based&#32;on&#32;time&#32;and&#32;value&#32;up&#32;to&#32;a&#32;specific&#32;index.</emphasis>
<anchor xml:id="_retry_8py_source_1l00500"/>00500 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00501"/>00501 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;combines&#32;the&#32;time&#32;and&#32;value&#32;attributes&#32;into&#32;a&#32;NumPy&#32;array&#32;of&#32;tuples,</emphasis>
<anchor xml:id="_retry_8py_source_1l00502"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a5c10a1d4fb385cbdc835ce1360c693d1">00502</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containing&#32;the&#32;data&#32;up&#32;to&#32;the&#32;si&#32;attribute&apos;s&#32;value.&#32;The&#32;method&#32;assumes&#32;that&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00503"/><link linkend="_classfcmaes_1_1retry_1_1_store_1afb813b3455fba516e72fa95f6a7261f7">00503</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;attributes&#32;`time`&#32;and&#32;`val`&#32;are&#32;iterable&#32;and&#32;contain&#32;corresponding&#32;elements.&#32;The</emphasis>
<anchor xml:id="_retry_8py_source_1l00504"/>00504 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;method&#32;is&#32;useful&#32;for&#32;analyzing&#32;the&#32;progression&#32;or&#32;trend&#32;present&#32;within&#32;the&#32;provided</emphasis>
<anchor xml:id="_retry_8py_source_1l00505"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a9da0b3410bcb1d0eab643afe10343135">00505</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values.</emphasis>
<anchor xml:id="_retry_8py_source_1l00506"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a3f6bde5da0736513834d69412b7c61dc">00506</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00507"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a130c7f2aadec40eb41b24cb0d6dbc425">00507</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00508"/><link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">00508</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numpy.ndarray:&#32;A&#32;NumPy&#32;array&#32;of&#32;tuples&#32;where&#32;each&#32;tuple&#32;is&#32;composed&#32;of&#32;elements</emphasis>
<anchor xml:id="_retry_8py_source_1l00509"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a2be02fdcd227c43fa17eafab835a9efe">00509</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;time&#32;and&#32;val&#32;attributes&#32;up&#32;to&#32;the&#32;index&#32;indicated&#32;by&#32;si.</emphasis>
<anchor xml:id="_retry_8py_source_1l00510"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a4fc40ab16eeca0897e5ea7528dacbf26">00510</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00511"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a93bde352c1ab2614c9e975c2c042f9e1">00511</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_retry_8py_source_1l00512"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a3aba1d490d946a3765da95a30732b665">00512</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TypeError:&#32;If&#32;`time`&#32;or&#32;`val`&#32;attributes&#32;are&#32;not&#32;iterable&#32;or&#32;do&#32;not&#32;contain</emphasis>
<anchor xml:id="_retry_8py_source_1l00513"/><link linkend="_classfcmaes_1_1retry_1_1_store_1abaa0621bb3e9f36e0a97ffe120d6653b">00513</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;corresponding&#32;elements.</emphasis>
<anchor xml:id="_retry_8py_source_1l00514"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a005e34c5baaa20b4169e5da2cc2eaffa">00514</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueError:&#32;If&#32;`si.value`&#32;exceeds&#32;the&#32;lengths&#32;of&#32;`time`&#32;or&#32;`val`&#32;attributes.</emphasis>
<anchor xml:id="_retry_8py_source_1l00515"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a8a329ef518cc42000867ae5fa9b854d7">00515</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00516"/>00516 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array(list(zip(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ab62e2aba40d2a934b1cf31bb8e142e27">time</link>[:self.<link linkend="_classfcmaes_1_1retry_1_1_store_1af8054c47224cbc0038d74502e002d2af">si</link>.value],&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ab3305985c51cacaee432b2d93144794a">val</link>[:self.<link linkend="_classfcmaes_1_1retry_1_1_store_1af8054c47224cbc0038d74502e002d2af">si</link>.value])))
<anchor xml:id="_retry_8py_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00519"/><link linkend="_classfcmaes_1_1retry_1_1_store_1ab62e2aba40d2a934b1cf31bb8e142e27">00519</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;get&#32;num&#32;best&#32;values&#32;at&#32;evenly&#32;distributed&#32;times</emphasis>
<anchor xml:id="_retry_8py_source_1l00520"/><link linkend="_classfcmaes_1_1retry_1_1_store_1ab3305985c51cacaee432b2d93144794a">00520</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1abd99f307cd4d6cf478e8c8201ee15f59">get_statistics</link>(self,&#32;num:&#32;int)&#32;-&gt;&#32;List:
<anchor xml:id="_retry_8py_source_1l00521"/><link linkend="_classfcmaes_1_1retry_1_1_store_1af8054c47224cbc0038d74502e002d2af">00521</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00522"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a4c779ed899eabfdc90daab6f0be1b1ec">00522</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calculates&#32;statistics&#32;for&#32;the&#32;provided&#32;number&#32;of&#32;samples&#32;by&#32;segmenting</emphasis>
<anchor xml:id="_retry_8py_source_1l00523"/><link linkend="_classfcmaes_1_1retry_1_1_store_1ac8aae6e25f5f6b3283fce0598a6aecad">00523</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;mapping&#32;values&#32;based&#32;on&#32;time&#32;intervals.</emphasis>
<anchor xml:id="_retry_8py_source_1l00524"/>00524 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00525"/>00525 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;segments&#32;a&#32;range&#32;of&#32;time&#32;into&#32;equal&#32;intervals&#32;based&#32;on</emphasis>
<anchor xml:id="_retry_8py_source_1l00526"/>00526 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;given&#32;number&#32;of&#32;samples.&#32;It&#32;then&#32;maps&#32;each&#32;interval&#32;to&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00527"/>00527 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;corresponding&#32;value&#32;at&#32;the&#32;closest&#32;timestamp&#32;within&#32;that&#32;interval.</emphasis>
<anchor xml:id="_retry_8py_source_1l00528"/>00528 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00529"/>00529 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00530"/>00530 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;(int):&#32;The&#32;number&#32;of&#32;intervals&#32;or&#32;samples&#32;for&#32;which&#32;statistics</emphasis>
<anchor xml:id="_retry_8py_source_1l00531"/>00531 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;are&#32;calculated.</emphasis>
<anchor xml:id="_retry_8py_source_1l00532"/>00532 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00533"/>00533 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00534"/>00534 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List:&#32;A&#32;list&#32;of&#32;values&#32;corresponding&#32;to&#32;the&#32;calculated&#32;statistics</emphasis>
<anchor xml:id="_retry_8py_source_1l00535"/>00535 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;each&#32;interval.</emphasis>
<anchor xml:id="_retry_8py_source_1l00536"/><link linkend="_classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c">00536</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ts&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ab62e2aba40d2a934b1cf31bb8e142e27">time</link>[:self.<link linkend="_classfcmaes_1_1retry_1_1_store_1af8054c47224cbc0038d74502e002d2af">si</link>.value]
<anchor xml:id="_retry_8py_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ab3305985c51cacaee432b2d93144794a">val</link>[:self.<link linkend="_classfcmaes_1_1retry_1_1_store_1af8054c47224cbc0038d74502e002d2af">si</link>.value]
<anchor xml:id="_retry_8py_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mt&#32;=&#32;ts[-1]
<anchor xml:id="_retry_8py_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dt&#32;=&#32;0.9999999&#32;*&#32;mt&#32;/&#32;num
<anchor xml:id="_retry_8py_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;conv&#32;=&#32;[]
<anchor xml:id="_retry_8py_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ti&#32;=&#32;0
<anchor xml:id="_retry_8py_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;ys[0]
<anchor xml:id="_retry_8py_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(num):
<anchor xml:id="_retry_8py_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;ts[ti]&#32;&lt;&#32;(i+1)&#32;*&#32;dt:
<anchor xml:id="_retry_8py_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ti&#32;+=&#32;1
<anchor xml:id="_retry_8py_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;ys[ti]
<anchor xml:id="_retry_8py_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;conv.append(val)
<anchor xml:id="_retry_8py_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;conv
<anchor xml:id="_retry_8py_source_1l00550"/>00550 &#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00551"/>00551 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a2f184eeda8d0c62eed36c32161e9b5bb">eval_num</link>(self,&#32;max_evals:&#32;int)&#32;-&gt;&#32;int:
<anchor xml:id="_retry_8py_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00553"/>00553 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;the&#32;number&#32;of&#32;evaluations&#32;specified.</emphasis>
<anchor xml:id="_retry_8py_source_1l00554"/>00554 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00555"/>00555 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;accepts&#32;the&#32;maximum&#32;number&#32;of&#32;evaluations&#32;as&#32;an&#32;integer&#32;input</emphasis>
<anchor xml:id="_retry_8py_source_1l00556"/>00556 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;simply&#32;returns&#32;it&#32;unchanged.&#32;It&#32;is&#32;commonly&#32;used&#32;to&#32;track&#32;or&#32;specify</emphasis>
<anchor xml:id="_retry_8py_source_1l00557"/>00557 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;number&#32;of&#32;steps&#32;or&#32;iterations&#32;allowed&#32;in&#32;a&#32;process.</emphasis>
<anchor xml:id="_retry_8py_source_1l00558"/>00558 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00559"/>00559 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00560"/>00560 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evals&#32;(int):&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations&#32;to&#32;be&#32;returned.</emphasis>
<anchor xml:id="_retry_8py_source_1l00561"/>00561 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00562"/>00562 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00563"/>00563 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;provided&#32;maximum&#32;evaluations.</emphasis>
<anchor xml:id="_retry_8py_source_1l00564"/>00564 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;max_evals
<anchor xml:id="_retry_8py_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00567"/>00567 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a42807f223ababda1171ddc055df0bbd1">replace</link>(self,&#32;i:&#32;int,&#32;y:&#32;float,&#32;xs:&#32;ArrayLike):
<anchor xml:id="_retry_8py_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00569"/>00569 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Replaces&#32;the&#32;values&#32;at&#32;a&#32;specified&#32;index&#32;with&#32;new&#32;values.</emphasis>
<anchor xml:id="_retry_8py_source_1l00570"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a300771cb56317ceb78cb7cd4a79ce0ec">00570</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00571"/>00571 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;updates&#32;the&#32;y-value&#32;and&#32;x-values&#32;at&#32;the&#32;specified&#32;index&#32;by</emphasis>
<anchor xml:id="_retry_8py_source_1l00572"/>00572 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;calling&#32;internal&#32;methods.</emphasis>
<anchor xml:id="_retry_8py_source_1l00573"/>00573 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00574"/>00574 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00575"/>00575 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;(int):&#32;Index&#32;at&#32;which&#32;the&#32;replacement&#32;occurs.</emphasis>
<anchor xml:id="_retry_8py_source_1l00576"/>00576 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;(float):&#32;New&#32;y-value&#32;to&#32;set&#32;at&#32;the&#32;specified&#32;index.</emphasis>
<anchor xml:id="_retry_8py_source_1l00577"/>00577 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;(ArrayLike):&#32;New&#32;x-values&#32;to&#32;set&#32;at&#32;the&#32;specified&#32;index.</emphasis>
<anchor xml:id="_retry_8py_source_1l00578"/>00578 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.set_y(i,&#32;y)
<anchor xml:id="_retry_8py_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.set_x(i,&#32;xs)
<anchor xml:id="_retry_8py_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00582"/>00582 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1ac6ff35da8231cd4aedb488427841aa3b">sort</link>(self)&#32;-&gt;&#32;int:&#32;<emphasis role="comment">#&#32;sort&#32;all&#32;entries&#32;to&#32;make&#32;room&#32;for&#32;new&#32;ones,&#32;determine&#32;best&#32;and&#32;worst</emphasis>
<anchor xml:id="_retry_8py_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00584"/>00584 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sort&#32;entries&#32;to&#32;retain&#32;the&#32;best&#32;ones,&#32;thereby&#32;optimizing&#32;storage&#32;for&#32;new&#32;entries.</emphasis>
<anchor xml:id="_retry_8py_source_1l00585"/>00585 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00586"/>00586 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;sorts&#32;the&#32;stored&#32;entries&#32;based&#32;on&#32;their&#32;associated&#32;values,&#32;retains&#32;the&#32;top</emphasis>
<anchor xml:id="_retry_8py_source_1l00587"/>00587 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;90%&#32;(as&#32;determined&#32;by&#32;the&#32;capacity),&#32;and&#32;updates&#32;the&#32;internal&#32;data&#32;structures&#32;to&#32;reflect</emphasis>
<anchor xml:id="_retry_8py_source_1l00588"/>00588 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;new&#32;ordering&#32;and&#32;count&#32;of&#32;retained&#32;entries.&#32;It&#32;subsequently&#32;returns&#32;the&#32;updated</emphasis>
<anchor xml:id="_retry_8py_source_1l00589"/>00589 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;number&#32;of&#32;stored&#32;entries.</emphasis>
<anchor xml:id="_retry_8py_source_1l00590"/><link linkend="_classfcmaes_1_1retry_1_1_store_1abd99f307cd4d6cf478e8c8201ee15f59">00590</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00591"/>00591 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00592"/>00592 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;number&#32;of&#32;stored&#32;entries&#32;after&#32;sorting&#32;and&#32;truncating&#32;to&#32;the&#32;top&#32;90%.</emphasis>
<anchor xml:id="_retry_8py_source_1l00593"/>00593 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00594"/>00594 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ns&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">num_stored</link>.value
<anchor xml:id="_retry_8py_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;np.asarray(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a9da0b3410bcb1d0eab643afe10343135">ys</link>[:ns])
<anchor xml:id="_retry_8py_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yi&#32;=&#32;ys.argsort()
<anchor xml:id="_retry_8py_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numStored&#32;=&#32;min(ns,&#32;int(0.9*self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a2948a743df6a8be2bf2c274341a59997">capacity</link>))&#32;<emphasis role="comment">#&#32;keep&#32;90%&#32;best&#32;</emphasis>
<anchor xml:id="_retry_8py_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a35a4f6c361cb2a13c382b95fbbe8dc85">xs_view</link>[:numStored]&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a35a4f6c361cb2a13c382b95fbbe8dc85">xs_view</link>[yi][:numStored]
<anchor xml:id="_retry_8py_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a9da0b3410bcb1d0eab643afe10343135">ys</link>[:numStored]&#32;=&#32;ys[yi][:numStored]
<anchor xml:id="_retry_8py_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">num_stored</link>.value&#32;=&#32;numStored&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;numStored&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00604"/>00604 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508">add_result</link>(self,&#32;y:&#32;float,&#32;x:&#32;ArrayLike,&#32;evals:&#32;int,&#32;limit=np.inf):
<anchor xml:id="_retry_8py_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00606"/>00606 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Adds&#32;a&#32;result&#32;to&#32;the&#32;data&#32;structure,&#32;updating&#32;statistical&#32;values&#32;and&#32;recording&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00607"/>00607 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;given&#32;data&#32;point.&#32;It&#32;updates&#32;attributes&#32;like&#32;the&#32;best&#32;value&#32;(`best_y`)&#32;and&#32;associated</emphasis>
<anchor xml:id="_retry_8py_source_1l00608"/>00608 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point&#32;(`best_x`),&#32;checks&#32;storage&#32;capacity,&#32;and&#32;computes&#32;statistical&#32;measures.</emphasis>
<anchor xml:id="_retry_8py_source_1l00609"/>00609 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00610"/>00610 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00611"/>00611 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;(float):&#32;The&#32;new&#32;value&#32;to&#32;be&#32;added.</emphasis>
<anchor xml:id="_retry_8py_source_1l00612"/>00612 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;(ArrayLike):&#32;The&#32;associated&#32;data&#32;point&#32;corresponding&#32;to&#32;the&#32;value&#32;`y`.</emphasis>
<anchor xml:id="_retry_8py_source_1l00613"/>00613 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;(int):&#32;Number&#32;of&#32;evaluations&#32;associated&#32;with&#32;the&#32;newly&#32;added&#32;data.</emphasis>
<anchor xml:id="_retry_8py_source_1l00614"/>00614 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limit&#32;(float,&#32;optional):&#32;The&#32;maximum&#32;cap&#32;for&#32;`y`&#32;values&#32;to&#32;be&#32;considered.&#32;Default</emphasis>
<anchor xml:id="_retry_8py_source_1l00615"/>00615 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;`np.inf`.</emphasis>
<anchor xml:id="_retry_8py_source_1l00616"/>00616 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00617"/>00617 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_retry_8py_source_1l00618"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a2f184eeda8d0c62eed36c32161e9b5bb">00618</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueError:&#32;If&#32;the&#32;input&#32;data&#32;is&#32;inconsistent&#32;or&#32;violates&#32;preconditions&#32;of&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00619"/>00619 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;structure.&#32;(Error&#32;not&#32;directly&#32;visible&#32;in&#32;provided&#32;code)</emphasis>
<anchor xml:id="_retry_8py_source_1l00620"/>00620 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a5c10a1d4fb385cbdc835ce1360c693d1">add_mutex</link>:
<anchor xml:id="_retry_8py_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a440b834ab3066810ed77da1c5093fa49">incr_count_evals</link>(evals)
<anchor xml:id="_retry_8py_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;limit:&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a2be02fdcd227c43fa17eafab835a9efe">count_stat_runs</link>.value&#32;+=&#32;1
<anchor xml:id="_retry_8py_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1abaa0621bb3e9f36e0a97ffe120d6653b">best_y</link>.value:
<anchor xml:id="_retry_8py_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1abaa0621bb3e9f36e0a97ffe120d6653b">best_y</link>.value&#32;=&#32;y
<anchor xml:id="_retry_8py_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a005e34c5baaa20b4169e5da2cc2eaffa">best_x</link>[:]&#32;=&#32;x[:]
<anchor xml:id="_retry_8py_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a0049736307028e256c038d8a8c1723d2">dump</link>()
<anchor xml:id="_retry_8py_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">num_stored</link>.value&#32;&gt;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a2948a743df6a8be2bf2c274341a59997">capacity</link>-1:
<anchor xml:id="_retry_8py_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac6ff35da8231cd4aedb488427841aa3b">sort</link>()
<anchor xml:id="_retry_8py_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cnt&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a2be02fdcd227c43fa17eafab835a9efe">count_stat_runs</link>.value
<anchor xml:id="_retry_8py_source_1l00632"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a42807f223ababda1171ddc055df0bbd1">00632</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diff&#32;=&#32;min(1E20,&#32;y&#32;-&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a93bde352c1ab2614c9e975c2c042f9e1">mean</link>.value)&#32;<emphasis role="comment">#&#32;avoid&#32;overflow</emphasis>
<anchor xml:id="_retry_8py_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a3aba1d490d946a3765da95a30732b665">qmean</link>.value&#32;+=&#32;(cnt&#32;-&#32;1)/&#32;cnt&#32;*&#32;diff*diff&#32;;
<anchor xml:id="_retry_8py_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a93bde352c1ab2614c9e975c2c042f9e1">mean</link>.value&#32;+=&#32;diff&#32;/&#32;cnt
<anchor xml:id="_retry_8py_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ns&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">num_stored</link>.value
<anchor xml:id="_retry_8py_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">num_stored</link>.value&#32;=&#32;ns&#32;+&#32;1
<anchor xml:id="_retry_8py_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a35a4f6c361cb2a13c382b95fbbe8dc85">xs_view</link>[self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">num_stored</link>.value,&#32;:]&#32;=&#32;x
<anchor xml:id="_retry_8py_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a9da0b3410bcb1d0eab643afe10343135">ys</link>[self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">num_stored</link>.value]&#32;=&#32;y
<anchor xml:id="_retry_8py_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_debug_active():
<anchor xml:id="_retry_8py_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dt&#32;=&#32;dtime(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a4fc40ab16eeca0897e5ea7528dacbf26">t0</link>)&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;message&#32;=&#32;<emphasis role="stringliteral">&apos;{0}&#32;{1}&#32;{2}&#32;{3}&#32;{4:.6f}&#32;{5:.6f}&#32;{6:.2f}&#32;{7:.2f}&apos;</emphasis>.format(
<anchor xml:id="_retry_8py_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dt,&#32;int(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a3f6bde5da0736513834d69412b7c61dc">count_evals</link>.value&#32;/&#32;dt),&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a130c7f2aadec40eb41b24cb0d6dbc425">count_runs</link>.value,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a3f6bde5da0736513834d69412b7c61dc">count_evals</link>.value,&#32;\
<anchor xml:id="_retry_8py_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1abaa0621bb3e9f36e0a97ffe120d6653b">best_y</link>.value,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a26a39767ca9766302d42f84cd4dd25d6">get_y_mean</link>(),&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a7ad3659c8d9d66fe34e6e13ec6d9eb69">get_y_standard_dev</link>())
<anchor xml:id="_retry_8py_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.debug(message)
<anchor xml:id="_retry_8py_source_1l00645"/>00645 
<anchor xml:id="_retry_8py_source_1l00646"/>00646 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1ae078fd3c0dfc87aabde92b937cb2fa91">get_x_best</link>(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_retry_8py_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00648"/><link linkend="_classfcmaes_1_1retry_1_1_store_1ac6ff35da8231cd4aedb488427841aa3b">00648</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;a&#32;copy&#32;of&#32;the&#32;best_x&#32;attribute&#32;as&#32;a&#32;numpy&#32;array.</emphasis>
<anchor xml:id="_retry_8py_source_1l00649"/>00649 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00650"/>00650 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00651"/>00651 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;copy&#32;of&#32;the&#32;current&#32;best_x&#32;attribute,&#32;converted&#32;to&#32;a&#32;numpy&#32;array.</emphasis>
<anchor xml:id="_retry_8py_source_1l00652"/>00652 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a005e34c5baaa20b4169e5da2cc2eaffa">best_x</link>[:])
<anchor xml:id="_retry_8py_source_1l00654"/>00654 &#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00655"/>00655 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a65ac0375e6705dd9e67e253829efd92d">create_xs_view</link>(self):&#32;<emphasis role="comment">#&#32;needs&#32;to&#32;be&#32;called&#32;in&#32;the&#32;target&#32;process</emphasis>
<anchor xml:id="_retry_8py_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00657"/>00657 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Creates&#32;and&#32;initializes&#32;a&#32;view&#32;for&#32;the&#32;&apos;xs&apos;&#32;object.</emphasis>
<anchor xml:id="_retry_8py_source_1l00658"/>00658 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00659"/>00659 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;generates&#32;a&#32;view&#32;from&#32;the&#32;&apos;xs&apos;&#32;object&#32;and&#32;assigns&#32;it&#32;to&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00660"/>00660 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`xs_view`&#32;attribute.&#32;It&#32;is&#32;essential&#32;to&#32;call&#32;this&#32;method&#32;in&#32;the&#32;target</emphasis>
<anchor xml:id="_retry_8py_source_1l00661"/>00661 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process&#32;to&#32;properly&#32;initialize&#32;the&#32;`xs_view`.</emphasis>
<anchor xml:id="_retry_8py_source_1l00662"/>00662 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00663"/>00663 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_retry_8py_source_1l00664"/>00664 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AttributeError:&#32;If&#32;&apos;xs&apos;&#32;does&#32;not&#32;have&#32;a&#32;&apos;view()&apos;&#32;method&#32;or&#32;is&#32;not</emphasis>
<anchor xml:id="_retry_8py_source_1l00665"/>00665 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initialized.</emphasis>
<anchor xml:id="_retry_8py_source_1l00666"/>00666 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00667"/>00667 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a35a4f6c361cb2a13c382b95fbbe8dc85">xs_view</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1afb813b3455fba516e72fa95f6a7261f7">xs</link>.view()
<anchor xml:id="_retry_8py_source_1l00669"/>00669 &#32;
<anchor xml:id="_retry_8py_source_1l00670"/>00670 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1ae65b46bea16b6e50a3af24254cf4a2a8">get_xs</link>(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_retry_8py_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00672"/>00672 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;a&#32;view&#32;of&#32;the&#32;stored&#32;elements&#32;up&#32;to&#32;the&#32;count&#32;specified&#32;by&#32;`num_stored`.</emphasis>
<anchor xml:id="_retry_8py_source_1l00673"/>00673 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00674"/><link linkend="_classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508">00674</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;a&#32;NumPy&#32;array&#32;with&#32;the&#32;elements&#32;stored&#32;up&#32;to&#32;a&#32;set&#32;boundary,&#32;defined&#32;by</emphasis>
<anchor xml:id="_retry_8py_source_1l00675"/>00675 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`num_stored.value`.&#32;This&#32;method&#32;utilizes&#32;the&#32;array&apos;s&#32;view&#32;functionality&#32;for&#32;efficient</emphasis>
<anchor xml:id="_retry_8py_source_1l00676"/>00676 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;access&#32;without&#32;additional&#32;memory&#32;allocation.</emphasis>
<anchor xml:id="_retry_8py_source_1l00677"/>00677 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00678"/>00678 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00679"/>00679 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;NumPy&#32;array&#32;view&#32;with&#32;elements&#32;up&#32;to&#32;the&#32;specified&#32;count.</emphasis>
<anchor xml:id="_retry_8py_source_1l00680"/>00680 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1afb813b3455fba516e72fa95f6a7261f7">xs</link>.view()[:self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">num_stored</link>.value]
<anchor xml:id="_retry_8py_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00683"/>00683 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a8ef8c822668e6ddb6da277082513e323">get_y</link>(self,&#32;pid:&#32;int)&#32;-&gt;&#32;float:
<anchor xml:id="_retry_8py_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00685"/>00685 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;the&#32;y-coordinate&#32;value&#32;corresponding&#32;to&#32;a&#32;given&#32;particle&#32;ID.</emphasis>
<anchor xml:id="_retry_8py_source_1l00686"/>00686 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00687"/>00687 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00688"/>00688 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pid&#32;(int):&#32;The&#32;particle&#32;ID&#32;whose&#32;y-coordinate&#32;is&#32;to&#32;be&#32;retrieved.</emphasis>
<anchor xml:id="_retry_8py_source_1l00689"/>00689 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00690"/>00690 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00691"/>00691 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;y-coordinate&#32;value&#32;associated&#32;with&#32;the&#32;specified&#32;particle&#32;ID.</emphasis>
<anchor xml:id="_retry_8py_source_1l00692"/>00692 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a9da0b3410bcb1d0eab643afe10343135">ys</link>[pid]
<anchor xml:id="_retry_8py_source_1l00694"/>00694 
<anchor xml:id="_retry_8py_source_1l00695"/>00695 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a6f2490b0d579f6766b663fccd8c557b5">get_y_best</link>(self)&#32;-&gt;&#32;float:
<anchor xml:id="_retry_8py_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00697"/>00697 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;the&#32;best&#32;y-value.</emphasis>
<anchor xml:id="_retry_8py_source_1l00698"/>00698 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00699"/>00699 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;retrieves&#32;the&#32;best&#32;y-value&#32;currently&#32;stored&#32;in&#32;the&#32;`best_y`</emphasis>
<anchor xml:id="_retry_8py_source_1l00700"/>00700 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;attribute.&#32;The&#32;value&#32;is&#32;returned&#32;as&#32;a&#32;floating-point&#32;number.</emphasis>
<anchor xml:id="_retry_8py_source_1l00701"/>00701 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00702"/>00702 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00703"/>00703 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;best&#32;y-value&#32;stored&#32;in&#32;the&#32;`best_y`&#32;attribute.</emphasis>
<anchor xml:id="_retry_8py_source_1l00704"/>00704 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1abaa0621bb3e9f36e0a97ffe120d6653b">best_y</link>.value
<anchor xml:id="_retry_8py_source_1l00706"/><link linkend="_classfcmaes_1_1retry_1_1_store_1ae078fd3c0dfc87aabde92b937cb2fa91">00706</link> &#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00707"/>00707 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1af199095a120a26f0a77d0a263785d4f3">get_ys</link>(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_retry_8py_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00709"/>00709 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gets&#32;the&#32;stored&#32;y-values&#32;as&#32;a&#32;NumPy&#32;array.</emphasis>
<anchor xml:id="_retry_8py_source_1l00710"/>00710 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00711"/>00711 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;retrieves&#32;the&#32;stored&#32;y-values&#32;up&#32;to&#32;the&#32;current&#32;number&#32;of</emphasis>
<anchor xml:id="_retry_8py_source_1l00712"/>00712 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stored&#32;values&#32;and&#32;returns&#32;them&#32;as&#32;a&#32;NumPy&#32;array.</emphasis>
<anchor xml:id="_retry_8py_source_1l00713"/>00713 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00714"/>00714 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00715"/>00715 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;NumPy&#32;array&#32;containing&#32;the&#32;y-values.</emphasis>
<anchor xml:id="_retry_8py_source_1l00716"/>00716 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a9da0b3410bcb1d0eab643afe10343135">ys</link>[:self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac25eb94e6c607fe3119c19a9fda395fd">num_stored</link>.value])
<anchor xml:id="_retry_8py_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00719"/>00719 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a26a39767ca9766302d42f84cd4dd25d6">get_y_mean</link>(self)&#32;-&gt;&#32;float:
<anchor xml:id="_retry_8py_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00721"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a65ac0375e6705dd9e67e253829efd92d">00721</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calculates&#32;and&#32;returns&#32;the&#32;mean&#32;value&#32;along&#32;the&#32;Y-axis.</emphasis>
<anchor xml:id="_retry_8py_source_1l00722"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a35a4f6c361cb2a13c382b95fbbe8dc85">00722</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00723"/>00723 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;retrieves&#32;the&#32;precomputed&#32;mean&#32;value&#32;for&#32;the&#32;Y-axis</emphasis>
<anchor xml:id="_retry_8py_source_1l00724"/>00724 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;the&#32;`mean`&#32;attribute&#32;and&#32;returns&#32;it.</emphasis>
<anchor xml:id="_retry_8py_source_1l00725"/>00725 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00726"/>00726 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00727"/>00727 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;mean&#32;value&#32;along&#32;the&#32;Y-axis.</emphasis>
<anchor xml:id="_retry_8py_source_1l00728"/>00728 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a93bde352c1ab2614c9e975c2c042f9e1">mean</link>.value
<anchor xml:id="_retry_8py_source_1l00730"/>00730 
<anchor xml:id="_retry_8py_source_1l00731"/>00731 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a7ad3659c8d9d66fe34e6e13ec6d9eb69">get_y_standard_dev</link>(self)&#32;-&gt;&#32;float:
<anchor xml:id="_retry_8py_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00733"/>00733 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calculates&#32;the&#32;standard&#32;deviation&#32;based&#32;on&#32;the&#32;collected&#32;statistics.</emphasis>
<anchor xml:id="_retry_8py_source_1l00734"/><link linkend="_classfcmaes_1_1retry_1_1_store_1ae65b46bea16b6e50a3af24254cf4a2a8">00734</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00735"/>00735 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;calculates&#32;the&#32;standard&#32;deviation&#32;for&#32;the&#32;y-values&#32;from</emphasis>
<anchor xml:id="_retry_8py_source_1l00736"/>00736 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistical&#32;data.&#32;If&#32;no&#32;statistical&#32;runs&#32;have&#32;been&#32;recorded,&#32;it</emphasis>
<anchor xml:id="_retry_8py_source_1l00737"/>00737 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returns&#32;0&#32;to&#32;avoid&#32;division&#32;by&#32;zero.</emphasis>
<anchor xml:id="_retry_8py_source_1l00738"/>00738 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00739"/>00739 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00740"/>00740 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;standard&#32;deviation&#32;of&#32;the&#32;y-values&#32;from&#32;the&#32;statistical</emphasis>
<anchor xml:id="_retry_8py_source_1l00741"/>00741 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.&#32;Returns&#32;0&#32;if&#32;there&#32;are&#32;no&#32;recorded&#32;statistical&#32;runs.</emphasis>
<anchor xml:id="_retry_8py_source_1l00742"/>00742 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00743"/>00743 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_retry_8py_source_1l00744"/>00744 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_retry_8py_source_1l00745"/>00745 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00746"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a8ef8c822668e6ddb6da277082513e323">00746</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cnt&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a2be02fdcd227c43fa17eafab835a9efe">count_stat_runs</link>.value
<anchor xml:id="_retry_8py_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0&#32;<emphasis role="keywordflow">if</emphasis>&#32;cnt&#32;&lt;=&#32;0&#32;<emphasis role="keywordflow">else</emphasis>&#32;math.sqrt(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a3aba1d490d946a3765da95a30732b665">qmean</link>.value&#32;/&#32;cnt)
<anchor xml:id="_retry_8py_source_1l00748"/>00748 
<anchor xml:id="_retry_8py_source_1l00749"/>00749 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1ae2f03d71d58da349826b6d0249a66e61">get_count_evals</link>(self)&#32;-&gt;&#32;int:
<anchor xml:id="_retry_8py_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00751"/>00751 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;the&#32;current&#32;evaluation&#32;count&#32;value.</emphasis>
<anchor xml:id="_retry_8py_source_1l00752"/>00752 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00753"/>00753 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;returns&#32;the&#32;integer&#32;value&#32;of&#32;the&#32;current&#32;evaluation&#32;count,&#32;allowing</emphasis>
<anchor xml:id="_retry_8py_source_1l00754"/>00754 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;users&#32;to&#32;access&#32;the&#32;internal&#32;evaluation&#32;counter&apos;s&#32;value&#32;for&#32;further&#32;processing</emphasis>
<anchor xml:id="_retry_8py_source_1l00755"/>00755 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;inspection.</emphasis>
<anchor xml:id="_retry_8py_source_1l00756"/>00756 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00757"/>00757 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00758"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a6f2490b0d579f6766b663fccd8c557b5">00758</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;current&#32;count&#32;of&#32;evaluations.</emphasis>
<anchor xml:id="_retry_8py_source_1l00759"/>00759 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a3f6bde5da0736513834d69412b7c61dc">count_evals</link>.value
<anchor xml:id="_retry_8py_source_1l00761"/>00761 &#32;
<anchor xml:id="_retry_8py_source_1l00762"/>00762 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a1dcbf34a7eb52ea3463469e7e2eaa8bb">get_count_runs</link>(self)&#32;-&gt;&#32;int:
<anchor xml:id="_retry_8py_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00764"/>00764 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;the&#32;current&#32;value&#32;of&#32;`count_runs`,&#32;representing&#32;the&#32;count&#32;of&#32;runs.</emphasis>
<anchor xml:id="_retry_8py_source_1l00765"/>00765 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00766"/>00766 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00767"/>00767 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;current&#32;count&#32;of&#32;runs.</emphasis>
<anchor xml:id="_retry_8py_source_1l00768"/>00768 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a130c7f2aadec40eb41b24cb0d6dbc425">count_runs</link>.value
<anchor xml:id="_retry_8py_source_1l00770"/><link linkend="_classfcmaes_1_1retry_1_1_store_1af199095a120a26f0a77d0a263785d4f3">00770</link> 
<anchor xml:id="_retry_8py_source_1l00771"/>00771 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a45f5a4eb953f48b845388d985ccc8737">get_runs_compare_incr</link>(self,&#32;limit:&#32;float):
<anchor xml:id="_retry_8py_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00773"/>00773 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Compares&#32;the&#32;current&#32;run&#32;count&#32;with&#32;the&#32;specified&#32;limit&#32;and&#32;increments&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00774"/>00774 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count&#32;if&#32;it&#32;is&#32;below&#32;the&#32;given&#32;limit.</emphasis>
<anchor xml:id="_retry_8py_source_1l00775"/>00775 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00776"/>00776 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00777"/>00777 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limit&#32;(float):&#32;The&#32;maximum&#32;limit&#32;up&#32;to&#32;which&#32;the&#32;run&#32;count&#32;can&#32;be&#32;incremented.</emphasis>
<anchor xml:id="_retry_8py_source_1l00778"/>00778 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00779"/>00779 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00780"/>00780 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;True&#32;if&#32;the&#32;run&#32;count&#32;was&#32;incremented,&#32;False&#32;otherwise.</emphasis>
<anchor xml:id="_retry_8py_source_1l00781"/>00781 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00782"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a26a39767ca9766302d42f84cd4dd25d6">00782</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a5c10a1d4fb385cbdc835ce1360c693d1">add_mutex</link>:
<anchor xml:id="_retry_8py_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a130c7f2aadec40eb41b24cb0d6dbc425">count_runs</link>.value&#32;&lt;&#32;limit:
<anchor xml:id="_retry_8py_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a130c7f2aadec40eb41b24cb0d6dbc425">count_runs</link>.value&#32;+=&#32;1
<anchor xml:id="_retry_8py_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_retry_8py_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_retry_8py_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>&#32;
<anchor xml:id="_retry_8py_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00789"/>00789 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a440b834ab3066810ed77da1c5093fa49">incr_count_evals</link>(self,&#32;evals):
<anchor xml:id="_retry_8py_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00791"/>00791 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Increases&#32;the&#32;count&#32;of&#32;evaluations&#32;and&#32;performs&#32;sorting&#32;based&#32;on&#32;a&#32;condition.</emphasis>
<anchor xml:id="_retry_8py_source_1l00792"/>00792 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00793"/>00793 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;increments&#32;the&#32;evaluation&#32;counter&#32;(`count_evals`)&#32;by&#32;the&#32;specified</emphasis>
<anchor xml:id="_retry_8py_source_1l00794"/>00794 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;and&#32;performs&#32;a&#32;sort&#32;operation&#32;if&#32;the&#32;current&#32;number&#32;of&#32;runs&#32;(`count_runs`)</emphasis>
<anchor xml:id="_retry_8py_source_1l00795"/>00795 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;one&#32;less&#32;than&#32;a&#32;multiple&#32;of&#32;the&#32;check&#32;interval&#32;(`check_interval`).</emphasis>
<anchor xml:id="_retry_8py_source_1l00796"/>00796 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00797"/>00797 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00798"/>00798 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;(int):&#32;The&#32;number&#32;of&#32;evaluations&#32;to&#32;add&#32;to&#32;the&#32;current&#32;count.</emphasis>
<anchor xml:id="_retry_8py_source_1l00799"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a7ad3659c8d9d66fe34e6e13ec6d9eb69">00799</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a130c7f2aadec40eb41b24cb0d6dbc425">count_runs</link>.value&#32;%&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1aa9efde59322cf2c93aad79a8e24d8d9b">check_interval</link>&#32;==&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1aa9efde59322cf2c93aad79a8e24d8d9b">check_interval</link>-1:
<anchor xml:id="_retry_8py_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1ac6ff35da8231cd4aedb488427841aa3b">sort</link>()
<anchor xml:id="_retry_8py_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a3f6bde5da0736513834d69412b7c61dc">count_evals</link>.value&#32;+=&#32;evals
<anchor xml:id="_retry_8py_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00804"/>00804 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1retry_1_1_store_1a0049736307028e256c038d8a8c1723d2">dump</link>(self):
<anchor xml:id="_retry_8py_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00806"/>00806 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dumps&#32;debugging&#32;information&#32;if&#32;debugging&#32;is&#32;active.</emphasis>
<anchor xml:id="_retry_8py_source_1l00807"/>00807 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00808"/>00808 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;obtains&#32;and&#32;processes&#32;data&#32;related&#32;to&#32;evaluations,&#32;computed</emphasis>
<anchor xml:id="_retry_8py_source_1l00809"/>00809 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values&#32;(Ys),&#32;and&#32;other&#32;statistics,&#32;then&#32;logs&#32;a&#32;formatted&#32;message&#32;for</emphasis>
<anchor xml:id="_retry_8py_source_1l00810"/>00810 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debugging&#32;purposes.</emphasis>
<anchor xml:id="_retry_8py_source_1l00811"/>00811 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00812"/>00812 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00813"/><link linkend="_classfcmaes_1_1retry_1_1_store_1ae2f03d71d58da349826b6d0249a66e61">00813</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_retry_8py_source_1l00814"/>00814 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00815"/>00815 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_retry_8py_source_1l00816"/>00816 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_retry_8py_source_1l00817"/>00817 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;is_debug_active():
<anchor xml:id="_retry_8py_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="_retry_8py_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ys&#32;=&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1af199095a120a26f0a77d0a263785d4f3">get_ys</link>()
<anchor xml:id="_retry_8py_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals&#32;=&#32;[]
<anchor xml:id="_retry_8py_source_1l00822"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a1dcbf34a7eb52ea3463469e7e2eaa8bb">00822</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(min(20,&#32;len(Ys))):
<anchor xml:id="_retry_8py_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals.append(round(Ys[i],4))&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dt&#32;=&#32;dtime(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a4fc40ab16eeca0897e5ea7528dacbf26">t0</link>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;message&#32;=&#32;<emphasis role="stringliteral">&apos;{0}&#32;{1}&#32;{2}&#32;{3}&#32;{4:.6f}&#32;{5:.2f}&#32;{6:.2f}&#32;{7!s}&#32;{8!s}&apos;</emphasis>.format(
<anchor xml:id="_retry_8py_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dt,&#32;int(self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a3f6bde5da0736513834d69412b7c61dc">count_evals</link>.value&#32;/&#32;dt),&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a130c7f2aadec40eb41b24cb0d6dbc425">count_runs</link>.value,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a3f6bde5da0736513834d69412b7c61dc">count_evals</link>.value,&#32;\
<anchor xml:id="_retry_8py_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1abaa0621bb3e9f36e0a97ffe120d6653b">best_y</link>.value,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a26a39767ca9766302d42f84cd4dd25d6">get_y_mean</link>(),&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a7ad3659c8d9d66fe34e6e13ec6d9eb69">get_y_standard_dev</link>(),&#32;vals,&#32;self.<link linkend="_classfcmaes_1_1retry_1_1_store_1a005e34c5baaa20b4169e5da2cc2eaffa">best_x</link>[:])
<anchor xml:id="_retry_8py_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.debug(message)
<anchor xml:id="_retry_8py_source_1l00829"/>00829 
<anchor xml:id="_retry_8py_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00831"/>00831 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1retry_1a30908c77918cbc9dd9e43456662cda26">_retry_loop</link>(pid,&#32;rgs,&#32;store,&#32;optimize,&#32;num_retries,&#32;value_limit,&#32;stop_fitness&#32;=&#32;-np.inf):
<anchor xml:id="_retry_8py_source_1l00832"/>00832 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00833"/>00833 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Executes&#32;a&#32;retry&#32;loop&#32;for&#32;optimization,&#32;managing&#32;retries&#32;and&#32;applying&#32;constraints</emphasis>
<anchor xml:id="_retry_8py_source_1l00834"/>00834 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;based&#32;on&#32;fitness&#32;value&#32;and&#32;evaluation&#32;limits.</emphasis>
<anchor xml:id="_retry_8py_source_1l00835"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a45f5a4eb953f48b845388d985ccc8737">00835</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00836"/>00836 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00837"/>00837 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pid&#32;(int):&#32;Process&#32;ID&#32;or&#32;thread&#32;identifier&#32;for&#32;parallel&#32;processing.</emphasis>
<anchor xml:id="_retry_8py_source_1l00838"/>00838 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgs&#32;(list):&#32;List&#32;of&#32;random&#32;generators,&#32;corresponding&#32;to&#32;each&#32;process&#32;or&#32;thread.</emphasis>
<anchor xml:id="_retry_8py_source_1l00839"/>00839 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(object):&#32;A&#32;storage&#32;or&#32;result&#32;management&#32;object&#32;handling&#32;bounds,</emphasis>
<anchor xml:id="_retry_8py_source_1l00840"/>00840 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;results,&#32;statistics,&#32;and&#32;fitness&#32;evaluations.</emphasis>
<anchor xml:id="_retry_8py_source_1l00841"/>00841 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize&#32;(callable):&#32;Optimization&#32;function&#32;to&#32;be&#32;executed&#32;during&#32;the&#32;loop.</emphasis>
<anchor xml:id="_retry_8py_source_1l00842"/>00842 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries&#32;(int):&#32;Maximum&#32;number&#32;of&#32;retries&#32;allowed&#32;during&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_retry_8py_source_1l00843"/>00843 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;(float):&#32;Constraint&#32;limit&#32;for&#32;the&#32;solution&#32;value&#32;to&#32;validate&#32;results.</emphasis>
<anchor xml:id="_retry_8py_source_1l00844"/>00844 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float,&#32;optional):&#32;Fitness&#32;threshold&#32;that,&#32;once&#32;achieved,&#32;stops</emphasis>
<anchor xml:id="_retry_8py_source_1l00845"/>00845 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;further&#32;processing.&#32;Defaults&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_retry_8py_source_1l00846"/>00846 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00847"/>00847 &#32;&#32;&#32;&#32;store.create_xs_view()
<anchor xml:id="_retry_8py_source_1l00848"/>00848 &#32;&#32;&#32;&#32;fun&#32;=&#32;store.wrapper&#32;<emphasis role="keywordflow">if</emphasis>&#32;store.statistic_num&#32;&gt;&#32;0&#32;<emphasis role="keywordflow">else</emphasis>&#32;store.fun&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00849"/>00849 &#32;&#32;&#32;&#32;lower&#32;=&#32;store.lower
<anchor xml:id="_retry_8py_source_1l00850"/>00850 &#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;threadpoolctl.threadpool_limits(limits=1,&#32;user_api=<emphasis role="stringliteral">&quot;blas&quot;</emphasis>):
<anchor xml:id="_retry_8py_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;store.get_runs_compare_incr(num_retries)&#32;<emphasis role="keywordflow">and</emphasis>&#32;store.best_y.value&#32;&gt;&#32;stop_fitness:&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00853"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a440b834ab3066810ed77da1c5093fa49">00853</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;=&#32;rgs[pid]
<anchor xml:id="_retry_8py_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sol,&#32;y,&#32;evals&#32;=&#32;optimize(fun,&#32;Bounds(store.lower,&#32;store.upper),&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_retry_8py_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[rg.uniform(0.05,&#32;0.1)]*len(lower),&#32;rg,&#32;store)
<anchor xml:id="_retry_8py_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.add_result(y,&#32;sol,&#32;evals,&#32;value_limit)&#32;&#32;&#32;
<anchor xml:id="_retry_8py_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_retry_8py_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(str(ex))
<anchor xml:id="_retry_8py_source_1l00859"/>00859 
<anchor xml:id="_retry_8py_source_1l00860"/>00860 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1retry_1a35537fa2c742d879961164339775fd72">_convertBounds</link>(bounds):
<anchor xml:id="_retry_8py_source_1l00861"/>00861 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00862"/>00862 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Convert&#32;bounds&#32;to&#32;a&#32;pair&#32;of&#32;arrays&#32;representing&#32;lower&#32;and&#32;upper&#32;limits.</emphasis>
<anchor xml:id="_retry_8py_source_1l00863"/>00863 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00864"/>00864 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;processes&#32;the&#32;given&#32;`bounds`&#32;and&#32;converts&#32;them&#32;into&#32;two&#32;arrays</emphasis>
<anchor xml:id="_retry_8py_source_1l00865"/>00865 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;that&#32;represent&#32;the&#32;lower&#32;and&#32;upper&#32;bounds,&#32;respectively.&#32;The&#32;`bounds`&#32;argument</emphasis>
<anchor xml:id="_retry_8py_source_1l00866"/>00866 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;must&#32;either&#32;be&#32;an&#32;instance&#32;of&#32;the&#32;`Bounds`&#32;class&#32;or&#32;a&#32;sequence&#32;of&#32;real</emphasis>
<anchor xml:id="_retry_8py_source_1l00867"/>00867 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;valued&#32;(min,&#32;max)&#32;pairs&#32;for&#32;each&#32;variable.</emphasis>
<anchor xml:id="_retry_8py_source_1l00868"/>00868 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00869"/>00869 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_retry_8py_source_1l00870"/>00870 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueError:&#32;If&#32;`bounds`&#32;is&#32;None.</emphasis>
<anchor xml:id="_retry_8py_source_1l00871"/><link linkend="_classfcmaes_1_1retry_1_1_store_1a0049736307028e256c038d8a8c1723d2">00871</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueError:&#32;If&#32;`bounds`&#32;is&#32;not&#32;an&#32;instance&#32;of&#32;`Bounds`&#32;or&#32;a&#32;valid&#32;sequence</emphasis>
<anchor xml:id="_retry_8py_source_1l00872"/>00872 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;(min,&#32;max)&#32;pairs.</emphasis>
<anchor xml:id="_retry_8py_source_1l00873"/>00873 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueError:&#32;If&#32;size&#32;or&#32;values&#32;within&#32;the&#32;`bounds`&#32;are&#32;not&#32;finite&#32;real</emphasis>
<anchor xml:id="_retry_8py_source_1l00874"/>00874 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values.</emphasis>
<anchor xml:id="_retry_8py_source_1l00875"/>00875 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00876"/>00876 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_retry_8py_source_1l00877"/>00877 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;The&#32;bounds&#32;to&#32;process,&#32;either&#32;as&#32;an&#32;instance&#32;of&#32;the&#32;`Bounds`</emphasis>
<anchor xml:id="_retry_8py_source_1l00878"/>00878 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;class&#32;or&#32;a&#32;sequence&#32;of&#32;real&#32;valued&#32;(min,&#32;max)&#32;pairs&#32;for&#32;each&#32;variable.</emphasis>
<anchor xml:id="_retry_8py_source_1l00879"/>00879 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_retry_8py_source_1l00880"/>00880 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_retry_8py_source_1l00881"/>00881 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[np.ndarray,&#32;np.ndarray]:&#32;A&#32;tuple&#32;containing&#32;two&#32;arrays.&#32;The&#32;first</emphasis>
<anchor xml:id="_retry_8py_source_1l00882"/>00882 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;represents&#32;the&#32;lower&#32;limits,&#32;and&#32;the&#32;second&#32;represents&#32;the</emphasis>
<anchor xml:id="_retry_8py_source_1l00883"/>00883 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;limits.</emphasis>
<anchor xml:id="_retry_8py_source_1l00884"/>00884 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_retry_8py_source_1l00885"/>00885 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;bounds&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_retry_8py_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;ValueError(<emphasis role="stringliteral">&apos;bounds&#32;need&#32;to&#32;be&#32;defined&apos;</emphasis>)
<anchor xml:id="_retry_8py_source_1l00887"/>00887 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;isinstance(bounds,&#32;Bounds):
<anchor xml:id="_retry_8py_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limits&#32;=&#32;np.array(new_bounds_to_old(bounds.lb,
<anchor xml:id="_retry_8py_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds.ub,
<anchor xml:id="_retry_8py_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len(bounds.lb)),
<anchor xml:id="_retry_8py_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dtype=float).T
<anchor xml:id="_retry_8py_source_1l00892"/>00892 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_retry_8py_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limits&#32;=&#32;np.array(bounds,&#32;dtype=<emphasis role="stringliteral">&apos;float&apos;</emphasis>).T
<anchor xml:id="_retry_8py_source_1l00894"/>00894 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(np.size(limits,&#32;0)&#32;!=&#32;2&#32;<emphasis role="keywordflow">or</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>
<anchor xml:id="_retry_8py_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.all(np.isfinite(limits))):
<anchor xml:id="_retry_8py_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;ValueError(<emphasis role="stringliteral">&apos;bounds&#32;should&#32;be&#32;a&#32;sequence&#32;containing&#32;&apos;</emphasis>
<anchor xml:id="_retry_8py_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;real&#32;valued&#32;(min,&#32;max)&#32;pairs&#32;for&#32;each&#32;value&apos;</emphasis>
<anchor xml:id="_retry_8py_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&#32;in&#32;x&apos;</emphasis>)
<anchor xml:id="_retry_8py_source_1l00899"/>00899 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;limits[0],&#32;limits[1]
</programlisting></section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classdifferential__evolution_1_1_de_optimizer" xml:lang="en-US">
<title>differential_evolution::DeOptimizer Class Reference</title>
<indexterm><primary>differential_evolution::DeOptimizer</primary></indexterm>
Collaboration diagram for differential_evolution::DeOptimizer:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf">DeOptimizer</link> (long runid_, <link linkend="_class_fitness">Fitness</link> *fitfun_, int dim_, int seed_, int popsize_, int maxEvaluations_, double keep_, double stopfitness_, double F_, double CR_, double min_mutate_, double max_mutate_, bool *isInt_, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;guess_, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;inputSigma_, double minSigma_)</para>
</listitem>
            <listitem><para><link linkend="_classdifferential__evolution_1_1_de_optimizer_1a33d01cb4aa66ec253c8505a466298e4c">~DeOptimizer</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a922dfb6a6903d18311a87e2fe553c78b">rnd01</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1ad1842fb1469f6b2e9f341afbe3b26d69">rndInt</link> (int max)</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf">sample</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67">sample_i</link> (int i)</para>
</listitem>
            <listitem><para>void <link linkend="_classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905">update_mean</link> ()</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0">nextX</link> (int p, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;xp, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;xb)</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1aff18de19791b75f799d4aa5e9c60b5fa">next_improve</link> (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;xb, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;x, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;xi)</para>
</listitem>
            <listitem><para>void <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9">modify</link> (<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;x)</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6">ask</link> (int &amp;p)</para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce">tell</link> (double y, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;x, int p)</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a0dcd44cbcddd9e0dde1ccd2ea5fbf96d">askAll</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1aa1d0f0d9ddbb192cb30b470d8c3c1af0">tellAll</link> (<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;ys)</para>
</listitem>
            <listitem><para>void <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315">doOptimize</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360">do_optimize_delayed_update</link> (int workers)</para>
</listitem>
            <listitem><para>void <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583">init</link> ()</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1af3cb231427f53598ae45ba8c320b1231">getBestX</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a9588f30973550e4b1083fd67641dadbb">getBestValue</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1ab8e8cfb1d04f3cd8dd5c82978f425eb1">getIterations</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_fitness">Fitness</link> * <link linkend="_classdifferential__evolution_1_1_de_optimizer_1ab5aa75486c266ec520613a4e00c2ad52">getFitfun</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1aa3653941bc72f8c6e32688f1e09ba76b">getDim</link> ()</para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a4842f3a4aae6868fbe69fdc154032ca5">getPopulation</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a4cf73cd0c13cf54880eb91edb58db9a9">getStop</link> ()</para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a7c4a14f47ad8a07a84cad2132661b004">getPopsize</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>long <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a1b66dc0c337d6bab9b3235c7eeeb49af">runid</link></para>
</listitem>
            <listitem><para><link linkend="_class_fitness">Fitness</link> * <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463">fitfun</link></para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e">popsize</link></para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791">dim</link></para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a4c5093a5bde2ba68233dcaf789fe69f2">maxEvaluations</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a232a3e2545baae1701e76f0a2c6eeec8">keep</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a657515bc56ba9827a222186364996c13">stopfitness</link></para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1aa98729ab4bc1be4fa22a3a7340a1ea3f">iterations</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a9fa4859d97afa85e9c3f8452cc0d6b65">bestY</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a7576298bacac75697507e4f90fc59c33">bestX</link></para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1ac23f0d4e38b52955528bf2cbe349992f">bestI</link></para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a3ee567dd0543a9e7cbd7735746ac3f99">stop</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1ae0a4dcecee1e26d0e8e87b783e324fcd">F0</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a8b2f3c51406460c57cfa59bc406d8078">CR0</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a9f332b775ee1241daa8d431e21d415e4">F</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a5422a64ca391813662eeddb2c8cc02ab">CR</link></para>
</listitem>
            <listitem><para>pcg64 * <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a9f02b77e27171b51fefa32b5141ae248">rs</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a765bf8a43ae4db32b8de45ef4282b2a1">popX</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1aa20f437a2e42ae30421404788d2d3f09">popX0</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1abbc98f32e02cab03f4bc226fa732dcfa">askedX</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a5227e652d09cf3cf711eefba448a06f4">askedP</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a6a1b6520ac72b27ee3a574beb03800af">popY</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a0fbfaa180253cf0a90ca9130199f53bc">popIter</link></para>
</listitem>
            <listitem><para>queue&lt; <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &gt; <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a487e97cae40baef80b638c79338880af">improvesX</link></para>
</listitem>
            <listitem><para>queue&lt; int &gt; <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a58da822d0a571d1c5fc502f0de64dc7a">improvesP</link></para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a942e3699e1766ab34111b48281792ed2">pos</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a37f47b61da3d427b3c999546203eafc7">min_mutate</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a3dae73ea54686df165fc76d29be7aa58">max_mutate</link></para>
</listitem>
            <listitem><para>bool * <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a22b7150d5c13e282b696140e6c97af50">isInt</link></para>
</listitem>
            <listitem><para>bool <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a47d96cda10236c7e0cea6e50bec7d7dc">useNormal</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1ab770253e46d1dc717520ceddcf0c9a90">sigma</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a58ba93e54c9364339defb2c2cfe3ec4d">mean</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a10983927cb3fb32ef29b0e00d648cdc9">maxSigma</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1ac59ec7255ba605669b82e5f06acfe580">minSigma</link></para>
</listitem>
            <listitem><para>double <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a56b8f5ae70f5f635c9eb2981238f0e6b">minSigmaVal</link></para>
</listitem>
            <listitem><para><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> <link linkend="_classdifferential__evolution_1_1_de_optimizer_1ad74151d3e6bcde089f6bf162f4033b0d">meanHist</link></para>
</listitem>
            <listitem><para>int <link linkend="_classdifferential__evolution_1_1_de_optimizer_1a7a9d221e815553826c0f1cb6b1585148">meanHistIndex</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00046">46</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf"/><section>
    <title>DeOptimizer()</title>
<indexterm><primary>DeOptimizer</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>DeOptimizer</secondary></indexterm>
<para><computeroutput>differential_evolution::DeOptimizer::DeOptimizer (long runid_, <link linkend="_class_fitness">Fitness</link> * fitfun_, int dim_, int seed_, int popsize_, int maxEvaluations_, double keep_, double stopfitness_, double F_, double CR_, double min_mutate_, double max_mutate_, bool * isInt_, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; guess_, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; inputSigma_, double minSigma_)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00050">50</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a88f53bfd99efb252ac0e6d53b1457edf_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a33d01cb4aa66ec253c8505a466298e4c"/><section>
    <title>~DeOptimizer()</title>
<indexterm><primary>~DeOptimizer</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>~DeOptimizer</secondary></indexterm>
<para><computeroutput>differential_evolution::DeOptimizer::~DeOptimizer ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00093">93</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6"/><section>
    <title>ask()</title>
<indexterm><primary>ask</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>ask</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::ask (int &amp; p)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00178">178</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_af7935d4c0d376a000470f2b943aadbd6_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_af7935d4c0d376a000470f2b943aadbd6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a0dcd44cbcddd9e0dde1ccd2ea5fbf96d"/><section>
    <title>askAll()</title>
<indexterm><primary>askAll</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>askAll</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> differential_evolution::DeOptimizer::askAll ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00225">225</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a0dcd44cbcddd9e0dde1ccd2ea5fbf96d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360"/><section>
    <title>do_optimize_delayed_update()</title>
<indexterm><primary>do_optimize_delayed_update</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>do_optimize_delayed_update</secondary></indexterm>
<para><computeroutput>void differential_evolution::DeOptimizer::do_optimize_delayed_update (int workers)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00312">312</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a0af3433f0f60f99f8a9fbf9f10f36360_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315"/><section>
    <title>doOptimize()</title>
<indexterm><primary>doOptimize</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>doOptimize</secondary></indexterm>
<para><computeroutput>void differential_evolution::DeOptimizer::doOptimize ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00244">244</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a18f5c0a1c724443666e4827126716315_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a9588f30973550e4b1083fd67641dadbb"/><section>
    <title>getBestValue()</title>
<indexterm><primary>getBestValue</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>getBestValue</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::getBestValue ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00376">376</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1af3cb231427f53598ae45ba8c320b1231"/><section>
    <title>getBestX()</title>
<indexterm><primary>getBestX</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>getBestX</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::getBestX ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00372">372</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1aa3653941bc72f8c6e32688f1e09ba76b"/><section>
    <title>getDim()</title>
<indexterm><primary>getDim</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>getDim</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::getDim ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00388">388</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1ab5aa75486c266ec520613a4e00c2ad52"/><section>
    <title>getFitfun()</title>
<indexterm><primary>getFitfun</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>getFitfun</secondary></indexterm>
<para><computeroutput><link linkend="_class_fitness">Fitness</link> * differential_evolution::DeOptimizer::getFitfun ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00384">384</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1ab8e8cfb1d04f3cd8dd5c82978f425eb1"/><section>
    <title>getIterations()</title>
<indexterm><primary>getIterations</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>getIterations</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::getIterations ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00380">380</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a7c4a14f47ad8a07a84cad2132661b004"/><section>
    <title>getPopsize()</title>
<indexterm><primary>getPopsize</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>getPopsize</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::getPopsize ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00400">400</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a4842f3a4aae6868fbe69fdc154032ca5"/><section>
    <title>getPopulation()</title>
<indexterm><primary>getPopulation</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>getPopulation</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> differential_evolution::DeOptimizer::getPopulation ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00392">392</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a4cf73cd0c13cf54880eb91edb58db9a9"/><section>
    <title>getStop()</title>
<indexterm><primary>getStop</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>getStop</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::getStop ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00396">396</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583"/><section>
    <title>init()</title>
<indexterm><primary>init</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>init</secondary></indexterm>
<para><computeroutput>void differential_evolution::DeOptimizer::init ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00353">353</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a4a4034e862bdd75aead3dd069ec36583_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a4a4034e862bdd75aead3dd069ec36583_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9"/><section>
    <title>modify()</title>
<indexterm><primary>modify</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>modify</secondary></indexterm>
<para><computeroutput>void differential_evolution::DeOptimizer::modify (<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; x)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00163">163</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a9f8d2654bcad80c32d9358faa62cebd9_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a9f8d2654bcad80c32d9358faa62cebd9_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1aff18de19791b75f799d4aa5e9c60b5fa"/><section>
    <title>next_improve()</title>
<indexterm><primary>next_improve</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>next_improve</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::next_improve (const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; xb, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; x, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; xi)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00157">157</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_aff18de19791b75f799d4aa5e9c60b5fa_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_aff18de19791b75f799d4aa5e9c60b5fa_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0"/><section>
    <title>nextX()</title>
<indexterm><primary>nextX</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>nextX</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::nextX (int p, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; xp, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; xb)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00130">130</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a8babf7e82f12af63653d0d26df11e8b0_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a8babf7e82f12af63653d0d26df11e8b0_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a922dfb6a6903d18311a87e2fe553c78b"/><section>
    <title>rnd01()</title>
<indexterm><primary>rnd01</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>rnd01</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::rnd01 ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00097">97</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a922dfb6a6903d18311a87e2fe553c78b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1ad1842fb1469f6b2e9f341afbe3b26d69"/><section>
    <title>rndInt()</title>
<indexterm><primary>rndInt</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>rndInt</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::rndInt (int max)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00101">101</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_ad1842fb1469f6b2e9f341afbe3b26d69_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf"/><section>
    <title>sample()</title>
<indexterm><primary>sample</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>sample</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::sample ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00105">105</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a750fb2ff0c0981be30414916d8c872bf_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a750fb2ff0c0981be30414916d8c872bf_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67"/><section>
    <title>sample_i()</title>
<indexterm><primary>sample_i</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>sample_i</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::sample_i (int i)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00112">112</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a427ae953a5503dc4369da1bbb338fe67_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_a427ae953a5503dc4369da1bbb338fe67_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce"/><section>
    <title>tell()</title>
<indexterm><primary>tell</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>tell</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::tell (double y, const <link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; x, int p)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00194">194</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_accf9be34ac5d30b9a2df15dba24f4dce_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_accf9be34ac5d30b9a2df15dba24f4dce_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1aa1d0f0d9ddbb192cb30b470d8c3c1af0"/><section>
    <title>tellAll()</title>
<indexterm><primary>tellAll</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>tellAll</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::tellAll (<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; ys)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00236">236</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_aa1d0f0d9ddbb192cb30b470d8c3c1af0_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905"/><section>
    <title>update_mean()</title>
<indexterm><primary>update_mean</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>update_mean</secondary></indexterm>
<para><computeroutput>void differential_evolution::DeOptimizer::update_mean ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00119">119</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classdifferential__evolution_1_1_de_optimizer_ac2c05bd08ebf41841869016986381905_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a5227e652d09cf3cf711eefba448a06f4"/><section>
    <title>askedP</title>
<indexterm><primary>askedP</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>askedP</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link> differential_evolution::DeOptimizer::askedP<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00426">426</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1abbc98f32e02cab03f4bc226fa732dcfa"/><section>
    <title>askedX</title>
<indexterm><primary>askedX</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>askedX</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> differential_evolution::DeOptimizer::askedX<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00425">425</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1ac23f0d4e38b52955528bf2cbe349992f"/><section>
    <title>bestI</title>
<indexterm><primary>bestI</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>bestI</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::bestI<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00416">416</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a7576298bacac75697507e4f90fc59c33"/><section>
    <title>bestX</title>
<indexterm><primary>bestX</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>bestX</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::bestX<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00415">415</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a9fa4859d97afa85e9c3f8452cc0d6b65"/><section>
    <title>bestY</title>
<indexterm><primary>bestY</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>bestY</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::bestY<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00414">414</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a5422a64ca391813662eeddb2c8cc02ab"/><section>
    <title>CR</title>
<indexterm><primary>CR</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>CR</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::CR<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00421">421</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a8b2f3c51406460c57cfa59bc406d8078"/><section>
    <title>CR0</title>
<indexterm><primary>CR0</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>CR0</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::CR0<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00419">419</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791"/><section>
    <title>dim</title>
<indexterm><primary>dim</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>dim</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::dim<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00409">409</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a9f332b775ee1241daa8d431e21d415e4"/><section>
    <title>F</title>
<indexterm><primary>F</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>F</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::F<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00420">420</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1ae0a4dcecee1e26d0e8e87b783e324fcd"/><section>
    <title>F0</title>
<indexterm><primary>F0</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>F0</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::F0<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00418">418</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463"/><section>
    <title>fitfun</title>
<indexterm><primary>fitfun</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>fitfun</secondary></indexterm>
<para><computeroutput><link linkend="_class_fitness">Fitness</link>* differential_evolution::DeOptimizer::fitfun<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00407">407</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a58da822d0a571d1c5fc502f0de64dc7a"/><section>
    <title>improvesP</title>
<indexterm><primary>improvesP</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>improvesP</secondary></indexterm>
<para><computeroutput>queue&lt;int&gt; differential_evolution::DeOptimizer::improvesP<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00430">430</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a487e97cae40baef80b638c79338880af"/><section>
    <title>improvesX</title>
<indexterm><primary>improvesX</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>improvesX</secondary></indexterm>
<para><computeroutput>queue&lt;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&gt; differential_evolution::DeOptimizer::improvesX<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00429">429</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a22b7150d5c13e282b696140e6c97af50"/><section>
    <title>isInt</title>
<indexterm><primary>isInt</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>isInt</secondary></indexterm>
<para><computeroutput>bool* differential_evolution::DeOptimizer::isInt<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00434">434</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1aa98729ab4bc1be4fa22a3a7340a1ea3f"/><section>
    <title>iterations</title>
<indexterm><primary>iterations</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>iterations</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::iterations<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00413">413</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a232a3e2545baae1701e76f0a2c6eeec8"/><section>
    <title>keep</title>
<indexterm><primary>keep</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>keep</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::keep<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00411">411</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a3dae73ea54686df165fc76d29be7aa58"/><section>
    <title>max_mutate</title>
<indexterm><primary>max_mutate</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>max_mutate</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::max_mutate<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00433">433</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a4c5093a5bde2ba68233dcaf789fe69f2"/><section>
    <title>maxEvaluations</title>
<indexterm><primary>maxEvaluations</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>maxEvaluations</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::maxEvaluations<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00410">410</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a10983927cb3fb32ef29b0e00d648cdc9"/><section>
    <title>maxSigma</title>
<indexterm><primary>maxSigma</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>maxSigma</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::maxSigma<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00439">439</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a58ba93e54c9364339defb2c2cfe3ec4d"/><section>
    <title>mean</title>
<indexterm><primary>mean</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>mean</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::mean<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00438">438</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1ad74151d3e6bcde089f6bf162f4033b0d"/><section>
    <title>meanHist</title>
<indexterm><primary>meanHist</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>meanHist</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> differential_evolution::DeOptimizer::meanHist<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00442">442</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a7a9d221e815553826c0f1cb6b1585148"/><section>
    <title>meanHistIndex</title>
<indexterm><primary>meanHistIndex</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>meanHistIndex</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::meanHistIndex<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00443">443</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a37f47b61da3d427b3c999546203eafc7"/><section>
    <title>min_mutate</title>
<indexterm><primary>min_mutate</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>min_mutate</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::min_mutate<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00432">432</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1ac59ec7255ba605669b82e5f06acfe580"/><section>
    <title>minSigma</title>
<indexterm><primary>minSigma</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>minSigma</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::minSigma<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00440">440</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a56b8f5ae70f5f635c9eb2981238f0e6b"/><section>
    <title>minSigmaVal</title>
<indexterm><primary>minSigmaVal</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>minSigmaVal</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::minSigmaVal<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00441">441</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a0fbfaa180253cf0a90ca9130199f53bc"/><section>
    <title>popIter</title>
<indexterm><primary>popIter</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>popIter</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::popIter<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00428">428</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e"/><section>
    <title>popsize</title>
<indexterm><primary>popsize</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>popsize</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::popsize<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00408">408</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a765bf8a43ae4db32b8de45ef4282b2a1"/><section>
    <title>popX</title>
<indexterm><primary>popX</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>popX</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> differential_evolution::DeOptimizer::popX<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00423">423</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1aa20f437a2e42ae30421404788d2d3f09"/><section>
    <title>popX0</title>
<indexterm><primary>popX0</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>popX0</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link> differential_evolution::DeOptimizer::popX0<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00424">424</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a6a1b6520ac72b27ee3a574beb03800af"/><section>
    <title>popY</title>
<indexterm><primary>popY</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>popY</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::popY<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00427">427</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a942e3699e1766ab34111b48281792ed2"/><section>
    <title>pos</title>
<indexterm><primary>pos</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>pos</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::pos<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00431">431</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a9f02b77e27171b51fefa32b5141ae248"/><section>
    <title>rs</title>
<indexterm><primary>rs</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>rs</secondary></indexterm>
<para><computeroutput>pcg64* differential_evolution::DeOptimizer::rs<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00422">422</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a1b66dc0c337d6bab9b3235c7eeeb49af"/><section>
    <title>runid</title>
<indexterm><primary>runid</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>runid</secondary></indexterm>
<para><computeroutput>long differential_evolution::DeOptimizer::runid<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00406">406</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1ab770253e46d1dc717520ceddcf0c9a90"/><section>
    <title>sigma</title>
<indexterm><primary>sigma</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>sigma</secondary></indexterm>
<para><computeroutput><link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> differential_evolution::DeOptimizer::sigma<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00437">437</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a3ee567dd0543a9e7cbd7735746ac3f99"/><section>
    <title>stop</title>
<indexterm><primary>stop</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>stop</secondary></indexterm>
<para><computeroutput>int differential_evolution::DeOptimizer::stop<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00417">417</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a657515bc56ba9827a222186364996c13"/><section>
    <title>stopfitness</title>
<indexterm><primary>stopfitness</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>stopfitness</secondary></indexterm>
<para><computeroutput>double differential_evolution::DeOptimizer::stopfitness<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00412">412</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<anchor xml:id="_classdifferential__evolution_1_1_de_optimizer_1a47d96cda10236c7e0cea6e50bec7d7dc"/><section>
    <title>useNormal</title>
<indexterm><primary>useNormal</primary><secondary>differential_evolution::DeOptimizer</secondary></indexterm>
<indexterm><primary>differential_evolution::DeOptimizer</primary><secondary>useNormal</secondary></indexterm>
<para><computeroutput>bool differential_evolution::DeOptimizer::useNormal<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_deoptimizer_8cpp_source_1l00436">436</link> of file <link linkend="_deoptimizer_8cpp_source">deoptimizer.cpp</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
_fcmaescpp/<link linkend="_deoptimizer_8cpp">deoptimizer.cpp</link></section>
</section>

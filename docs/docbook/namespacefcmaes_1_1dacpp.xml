<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespacefcmaes_1_1dacpp" xml:lang="en-US">
<title>fcmaes.dacpp Namespace Reference</title>
<indexterm><primary>fcmaes.dacpp</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>OptimizeResult <link linkend="_namespacefcmaes_1_1dacpp_1aa5ad4244fa09713fa980fb5229adc4c1">minimize</link> (Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[int] max_evaluations=100000, Optional[bool] use_local_search=True, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0)</para>

<para>Minimizes a given function using Differential Annealing (DA) algorithm with optional local search. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacefcmaes_1_1dacpp_1a51548e77349fcaa0963fafeed727cc3c">optimizeDA_C</link> = libcmalib.optimizeDA_C</para>
</listitem>
            <listitem><para><link linkend="_namespacefcmaes_1_1dacpp_1a9d643e00b79952e37ee44d2b7bf23b19">argtypes</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespacefcmaes_1_1dacpp_1aa5ad4244fa09713fa980fb5229adc4c1"/><section>
    <title>minimize()</title>
<indexterm><primary>minimize</primary><secondary>fcmaes.dacpp</secondary></indexterm>
<indexterm><primary>fcmaes.dacpp</primary><secondary>minimize</secondary></indexterm>
<para><computeroutput> OptimizeResult fcmaes.dacpp.minimize (Callable[[ArrayLike], float] fun, Optional[Bounds]  bounds = <computeroutput>None</computeroutput>
, Optional[ArrayLike]  x0 = <computeroutput>None</computeroutput>
, Optional[int]  max_evaluations = <computeroutput>100000</computeroutput>
, Optional[bool]  use_local_search = <computeroutput>True</computeroutput>
, Optional[Generator]  rg = <computeroutput>Generator(PCG64DXSM())</computeroutput>
, Optional[int]  runid = <computeroutput>0</computeroutput>
)</computeroutput></para><para>

<para>Minimizes a given function using Differential Annealing (DA) algorithm with optional local search. </para>
</para>

<para>This function is a Python interface to an underlying C implementation.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fun</entry><entry>
<para>The objective function to be minimized. It should accept a 1-D array-like object as input and return a float. </para>
</entry>
                            </row>
                            <row>
<entry>bounds</entry><entry>
<para>Optional bounds for the variables as an instance of <computeroutput>scipy.optimize.Bounds</computeroutput>. This defines the lower and upper bounds of the search space. </para>
</entry>
                            </row>
                            <row>
<entry>x0</entry><entry>
<para>Optional initial guess for the solution as a 1-D array-like object. If not provided, it will be generated randomly within the bounds. </para>
</entry>
                            </row>
                            <row>
<entry>max_evaluations</entry><entry>
<para>Maximum number of function evaluations allowed. Default is 100000. </para>
</entry>
                            </row>
                            <row>
<entry>use_local_search</entry><entry>
<para>Whether to perform local search after the main optimization (True) or not (False). Default is True. </para>
</entry>
                            </row>
                            <row>
<entry>rg</entry><entry>
<para>Random number generator instance for reproducibility. Defaults to <computeroutput>numpy.random.Generator(PCG64DXSM())</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>runid</entry><entry>
<para>Optional identifier for the optimization run. Defaults to 0.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>

<para>OptimizeResult The optimization result represented as a <computeroutput>scipy.optimize.OptimizeResult</computeroutput> object. This object includes the found solution, function value at the solution, number of function evaluations (nfev), number of iterations (nit), the status of the optimization, and a success flag.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry>
<para>If an unexpected error occurs during the optimization process. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_dacpp_8py_source_1l00081">81</link> of file <link linkend="_dacpp_8py_source">dacpp.py</link>.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_namespacefcmaes_1_1dacpp_1a9d643e00b79952e37ee44d2b7bf23b19"/><section>
    <title>argtypes</title>
<indexterm><primary>argtypes</primary><secondary>fcmaes.dacpp</secondary></indexterm>
<indexterm><primary>fcmaes.dacpp</primary><secondary>argtypes</secondary></indexterm>
<para><computeroutput>fcmaes.dacpp.argtypes</computeroutput></para><para>
Definition at line <link linkend="_dacpp_8py_source_1l00115">115</link> of file <link linkend="_dacpp_8py_source">dacpp.py</link>.</para>
</section>
<anchor xml:id="_namespacefcmaes_1_1dacpp_1a51548e77349fcaa0963fafeed727cc3c"/><section>
    <title>optimizeDA_C</title>
<indexterm><primary>optimizeDA_C</primary><secondary>fcmaes.dacpp</secondary></indexterm>
<indexterm><primary>fcmaes.dacpp</primary><secondary>optimizeDA_C</secondary></indexterm>
<para><computeroutput>fcmaes.dacpp.optimizeDA_C = libcmalib.optimizeDA_C</computeroutput></para><para>
Definition at line <link linkend="_dacpp_8py_source_1l00114">114</link> of file <link linkend="_dacpp_8py_source">dacpp.py</link>.</para>
</section>
</section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_quantumcomm_8py" xml:lang="en-US">
<title>examples/esa2/quantumcomm.py File Reference</title>
<indexterm><primary>examples/esa2/quantumcomm.py</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classquantumcomm_1_1constellation__udp">quantumcomm.constellation_udp</link></para>

<para>A Pygmo compatible UDP (User Defined Problem) representing the constellation design problem for SpOC 2023. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacequantumcomm">quantumcomm</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacequantumcomm_1a7c43375b014085ada1580778d0deb20c">quantumcomm.get_mothership_satellites</link> ()</para>

<para>Construct array of mothership orbital elements (the TLEs of actual Earth-orbiting satellites below are used as a proxy for plausible orbital dynamics around a habitable planet) </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1adeb3d6f34e9ce9bde81d145e0cb4b1c6">quantumcomm.line_of_sight</link> (r1, r2)</para>

<para>Given two position vectors returns the distance of the line of sight to the origin. </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a32214ea35bfdc5ac32988510e98f5643">quantumcomm.zenith_angle</link> (src, dst)</para>

<para>Computes the cosine of the zenith angle (theta_z) of the LOS between source and destination node. </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1af0f5b86687bc9356f53b8e0fcd826c2d">quantumcomm.qkd_metric</link> (idx, src, dst, cos_theta_z, eta, eps_z, n_rovers)</para>

<para>Computes the edge weight according to QKD probabilities. </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a0b9a5d09cf8b8062250d0631d392b9e4">quantumcomm.get_adjmatrix</link> (pos, ep_idx, eta, num_w1_sats, LOS, N, eps_z, n_rovers)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1ab6b2e04e125b00253e56eea291fb11a5">quantumcomm.construct_rover_pos</link> (lambda0, phi0, n_rovers, jds, R_p, w_p)</para>

<para>Computes the position of the rovers at time t based on the initial latitude and longitude. </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1abfabcba615cdf83e8edf913c888034e0">quantumcomm.combine_scores</link> (points)</para>

<para>Function for aggregating single solutions into one score using hypervolume indicator. </para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1af16dec207874c04d4e67e42e8832d851">quantumcomm.fitness</link> (x)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1ac0164d14577f24455b1c4cfd24a7a9fd">quantumcomm.select_valid</link> (<link linkend="_namespacequantumcomm_1a009bae3131bf4f32ab41813e095bd545">xs</link>, <link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a8419b7d865cb04abb4a75ee8457a301c">quantumcomm.read_solution</link> (fname)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a84c6558e0b765a6d0b545850d3821a76">quantumcomm.mo_par</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a685f20cc5ab4536617a667be7981d7e3">quantumcomm.mo_to_qd</link> (y)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a6b7a2382d55e8c0db17e1220d4cd7be3">quantumcomm.qd_fun</link> (x)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a9179fbf0ec29e945c2af91b0202b0e99">quantumcomm.get_arch</link> (qd_bounds, niche_num, samples_per_niche)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a7b02c8bc9af9b7e849783b5a8cbfc014">quantumcomm.nd_par</link> (niche_num=10000)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1aeb3856600fe5caa9eff67e2ebb6f269a">quantumcomm.so_par</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a1b51de779f54455f301b965bca17467c">quantumcomm.pymoo_par</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a29b16ceed23f94c44a426cf51cb2670d">quantumcomm.reduce</link> (<link linkend="_namespacequantumcomm_1a009bae3131bf4f32ab41813e095bd545">xs</link>, <link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>, num, <link linkend="_namespacequantumcomm_1ae07ba0a2eed2514d1829c083ea9828b4">evals</link>=50000, retries=mp.cpu_count())</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacequantumcomm_1a2c2d5e5c609de5aa6cd1d78008e5cf2a">quantumcomm.stdout</link></para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1aa02045840efca4723c7830b9d2478fea">quantumcomm.format</link></para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1aef9f62aff427fde17bcbda6c3139420e">quantumcomm.level</link></para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1aea96ab455c15aa9c4d6284bb868ac44c">quantumcomm.udp</link> = <link linkend="_classquantumcomm_1_1constellation__udp">constellation_udp</link>()</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1ae6a7b0e3b3363799da193a937082152c">quantumcomm.nobj</link> = 2</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1a57cb5c03dd7f2016c85077510ec50fd4">quantumcomm.ncon</link> = 2</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1a38c14b3f964ffa67c7911f4e175f4784">quantumcomm.dim</link> = 20</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1ab5b2a2b68abc9d15c1406cad0842982f">quantumcomm.ref_point</link> = np.array([1.2, 1.4])</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a7bea33c966401d0a25705d8371e83147">quantumcomm.ubs</link> = udp.get_bounds()</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1adaca5954b72a118a0abc3f3b1d9d56ac">quantumcomm.bounds</link> = Bounds(<link linkend="_namespacequantumcomm_1a7bea33c966401d0a25705d8371e83147">ubs</link>[0], <link linkend="_namespacequantumcomm_1a7bea33c966401d0a25705d8371e83147">ubs</link>[1])</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a4ae96be5bf50bd2b7bdbf8077fcbf992">quantumcomm.max_evals</link> = max_evals</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a10d52de9364caed740ad48fe34ecc151">quantumcomm.manager</link> = Manager()</para>
</listitem>
            <listitem><para>list <link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">quantumcomm.ys</link> = self.manager.list(ys)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a3e2a162310a02aff9e3e2129cfceaa2c">quantumcomm.ys0</link> = list(<link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>)</para>
</listitem>
            <listitem><para>list <link linkend="_namespacequantumcomm_1a009bae3131bf4f32ab41813e095bd545">quantumcomm.xs</link> = self.manager.list(xs)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a4df7798fa72740ab9b5adcadca862f58">quantumcomm.min_ys</link> = np.amin(<link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>, axis=0)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1a5b2fa9d0041f90fcf0b912c6de25020a">quantumcomm.count</link> = mp.RawValue(ct.c_int, 0)</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a3a28fa8296e887be274b151c8429b985">quantumcomm.mutex</link> = mp.Lock()</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1ae18efb9ddb56b08da17e0a6c224e48fa">quantumcomm.n</link> = len(<link linkend="_namespacequantumcomm_1afa433f406099fb18e0906c1ca5fc7918">ys</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1aad80073dce041cbb8ad4b99c5d39fc74">quantumcomm.max_hv</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_namespacequantumcomm_1ae07ba0a2eed2514d1829c083ea9828b4">quantumcomm.evals</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1a894d47aede87908d7383da852279e601">quantumcomm.pid</link> = pid</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1acf793ce9680502af168bcaa54d2b161b">quantumcomm.xs_out</link> = xs_out</para>
</listitem>
            <listitem><para><link linkend="_namespacequantumcomm_1acb604547ddffa821c69c8ccbec065d4e">quantumcomm.ys_out</link> = ys_out</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>

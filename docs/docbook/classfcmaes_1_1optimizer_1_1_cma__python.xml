<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classfcmaes_1_1optimizer_1_1_cma__python" xml:lang="en-US">
<title>fcmaes.optimizer.Cma_python Class Reference</title>
<indexterm><primary>fcmaes.optimizer.Cma_python</primary></indexterm>
<para>

<para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python">Cma_python</link> optimizer class. </para>
 
</para>
Inheritance diagram for fcmaes.optimizer.Cma_python:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_cma__python__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for fcmaes.optimizer.Cma_python:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_cma__python__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a82643dd56a018e574b60be0a2dfae303">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371">popsize</link>=31, Optional[ArrayLike] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a">guess</link>=None, Optional[float] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f">stop_fitness</link>=-np.inf, Optional[float] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c">sdevs</link>=None, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca">workers</link>=None, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a22a6511d0a158b47ceb15c09119ce9f7">update_gap</link>=None, Optional[bool] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a3ba6830a8e6ee037faaa309c2e68dce0">normalize</link>=True)</para>

<para>Initializes the CMA-ES optimizer with its configuration parameters. </para>
</listitem>
            <listitem><para>Tuple[np.ndarray, float, int] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6">minimize</link> (self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a">guess</link>=None, Optional[Union[float, ArrayLike, Callable]] <link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c">sdevs</link>=0.1, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</para>

<para>Minimizes a provided objective function using the CMA-ES optimization algorithm. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[str] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>=&apos;&apos;)</para>

<para>Initializes the class with specific parameters including the maximum number of evaluations and the name. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link> (self, store=None)</para>

<para>Evaluates and returns the maximum number of evaluations based on the provided store or the object&apos;s default value. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link> (self, store=None)</para>

<para>Gets the count of runs from the provided store. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371">popsize</link> = popsize</para>

<para>Population size used by the optimization algorithm. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f">stop_fitness</link> = stop_fitness</para>

<para>Target fitness value. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a22a6511d0a158b47ceb15c09119ce9f7">update_gap</link> = update_gap</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a">guess</link> = guess</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c">sdevs</link> = sdevs</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a3ba6830a8e6ee037faaa309c2e68dce0">normalize</link> = normalize</para>

<para>Whether to normalize input data during the optimization. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca">workers</link> = workers</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Attributes inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link> = max_evaluations</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link> = name</para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>

<para><link linkend="_classfcmaes_1_1optimizer_1_1_cma__python">Cma_python</link> optimizer class. </para>



<para>This class implements the CMA-ES optimization algorithm with additional customizable parameters. It is designed to minimize objective functions within provided bounds and constraints.</para>

<para><literallayout><computeroutput>   workers (int or None): Number of workers for parallelized evaluations.
</computeroutput></literallayout> </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01177">1177</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__python_1a82643dd56a018e574b60be0a2dfae303"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>fcmaes.optimizer.Cma_python</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_python</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_python.__init__ ( self, Optional[int]  max_evaluations = <computeroutput>50000</computeroutput>
, Optional[int]  popsize = <computeroutput>31</computeroutput>
, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[float]  stop_fitness = <computeroutput>-np.inf</computeroutput>
, Optional[float]  sdevs = <computeroutput>None</computeroutput>
, Optional[int]  workers = <computeroutput>None</computeroutput>
, Optional[int]  update_gap = <computeroutput>None</computeroutput>
, Optional[bool]  normalize = <computeroutput>True</computeroutput>
)</computeroutput></para><para>

<para>Initializes the CMA-ES optimizer with its configuration parameters. </para>
</para>

<para><literallayout><computeroutput>   This method sets up the optimizer by initializing its key attributes based on the
   user-specified or default values. It inherits the generic optimizer functionality
   and extends it with CMA-ES-specific parameters.
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>max_evaluations</entry><entry>
<para>Optional maximum number of evaluations allowed (default 50000). </para>
</entry>
                            </row>
                            <row>
<entry>popsize</entry><entry>
<para>Optional population size for the CMA-ES algorithm (default 31). </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>Optional initial guess for the solution. </para>
</entry>
                            </row>
                            <row>
<entry>stop_fitness</entry><entry>
<para>Optional fitness value at which optimization stops (default -inf). </para>
</entry>
                            </row>
                            <row>
<entry>sdevs</entry><entry>
<para>Optional standard deviations for the distribution. </para>
</entry>
                            </row>
                            <row>
<entry>workers</entry><entry>
<para>Optional number of workers for parallel evaluations. </para>
</entry>
                            </row>
                            <row>
<entry>update_gap</entry><entry>
<para>Optional number of generations between updates. </para>
</entry>
                            </row>
                            <row>
<entry>normalize</entry><entry>
<para>Optional boolean to enable normalization of input parameters (default True). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01220">1220</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6"/><section>
    <title>minimize()</title>
<indexterm><primary>minimize</primary><secondary>fcmaes.optimizer.Cma_python</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_python</primary><secondary>minimize</secondary></indexterm>
<para><computeroutput> Tuple[np.ndarray, float, int] fcmaes.optimizer.Cma_python.minimize ( self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[Union[float, ArrayLike, Callable]]  sdevs = <computeroutput>0.1</computeroutput>
, Optional[Generator]  rg = <computeroutput>Generator(PCG64DXSM())</computeroutput>
,  store = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Minimizes a provided objective function using the CMA-ES optimization algorithm. </para>
</para>

<para><literallayout><computeroutput>   This method utilizes the Covariance Matrix Adaptation Evolution Strategy (CMA-ES)
   to perform function minimization. It supports optional parameters such as bounds,
   initial guesses, and standard deviations for sampling, among others. The method
   returns the optimal solution, the corresponding function value, and the number
   of function evaluations performed.


       fun (Callable[[ArrayLike], float]): The objective function to be minimized. It
           should take an input array and return a scalar function value.
</computeroutput></literallayout> 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>bounds</entry><entry>
<para>The bounds within which the solution is searched. Can be None for unbounded optimization. guess (Optional[ArrayLike], optional): The initial guess for the solution. If not provided, an internal guess will be used. sdevs (Optional[Union[float, ArrayLike, Callable]], optional): The standard deviations used for sampling around the guess. Defaults to 0.1. rg (Optional[Generator], optional): The random number generator for the optimization process. Defaults to Generator(PCG64DXSM()). </para>
</entry>
                            </row>
                            <row>
<entry>store</entry><entry>
<para>An optional object used for storing additional metadata or state during optimization.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Tuple[np.ndarray, float, int]: A tuple containing:<itemizedlist>
<listitem>
<para>The optimal solution as an array.</para>
</listitem><listitem>
<para>The minimum function value achieved.</para>
</listitem><listitem>
<para>The number of function evaluations performed. </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01267">1267</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_cma__python_a11b849f7e44223c9edba4c1247b7e9e6_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a"/><section>
    <title>guess</title>
<indexterm><primary>guess</primary><secondary>fcmaes.optimizer.Cma_python</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_python</primary><secondary>guess</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_python.guess = guess</computeroutput></para><para>
Definition at line <link linkend="_optimizer_8py_source_1l01233">1233</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__python_1a3ba6830a8e6ee037faaa309c2e68dce0"/><section>
    <title>normalize</title>
<indexterm><primary>normalize</primary><secondary>fcmaes.optimizer.Cma_python</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_python</primary><secondary>normalize</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_python.normalize = normalize</computeroutput></para><para>

<para>Whether to normalize input data during the optimization. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01235">1235</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371"/><section>
    <title>popsize</title>
<indexterm><primary>popsize</primary><secondary>fcmaes.optimizer.Cma_python</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_python</primary><secondary>popsize</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_python.popsize = popsize</computeroutput></para><para>

<para>Population size used by the optimization algorithm. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01230">1230</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c"/><section>
    <title>sdevs</title>
<indexterm><primary>sdevs</primary><secondary>fcmaes.optimizer.Cma_python</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_python</primary><secondary>sdevs</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_python.sdevs = sdevs</computeroutput></para><para>
Definition at line <link linkend="_optimizer_8py_source_1l01234">1234</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f"/><section>
    <title>stop_fitness</title>
<indexterm><primary>stop_fitness</primary><secondary>fcmaes.optimizer.Cma_python</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_python</primary><secondary>stop_fitness</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_python.stop_fitness = stop_fitness</computeroutput></para><para>

<para>Target fitness value. </para>
</para>

<para>If reached, the optimization </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l01231">1231</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__python_1a22a6511d0a158b47ceb15c09119ce9f7"/><section>
    <title>update_gap</title>
<indexterm><primary>update_gap</primary><secondary>fcmaes.optimizer.Cma_python</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_python</primary><secondary>update_gap</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_python.update_gap = update_gap</computeroutput></para><para>
Definition at line <link linkend="_optimizer_8py_source_1l01232">1232</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca"/><section>
    <title>workers</title>
<indexterm><primary>workers</primary><secondary>fcmaes.optimizer.Cma_python</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Cma_python</primary><secondary>workers</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Cma_python.workers = workers</computeroutput></para><para>
Definition at line <link linkend="_optimizer_8py_source_1l01236">1236</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
fcmaes/<link linkend="_optimizer_8py">optimizer.py</link></section>
</section>

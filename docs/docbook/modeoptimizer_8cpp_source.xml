<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_modeoptimizer_8cpp_source" xml:lang="en-US">
<title>modeoptimizer.cpp</title>
<indexterm><primary>_fcmaescpp/modeoptimizer.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_modeoptimizer_8cpp_source_1l00001"/>00001 <emphasis role="comment">//&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00002"/>00002 <emphasis role="comment">//</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00003"/>00003 <emphasis role="comment">//&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00004"/>00004 <emphasis role="comment">//&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00005"/>00005 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00006"/>00006 <emphasis role="comment">//&#32;Eigen&#32;based&#32;implementation&#32;of&#32;multi&#32;objective</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00007"/>00007 <emphasis role="comment">//&#32;Differential&#32;Evolution&#32;using&#32;the&#32;DE/all/1&#32;strategy.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00008"/>00008 <emphasis role="comment">//</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00009"/>00009 <emphasis role="comment">//&#32;Requires&#32;Eigen&#32;version&#32;&gt;=&#32;3.4&#32;because&#32;new&#32;slicing&#32;capabilities&#32;are&#32;used,&#32;see</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00010"/>00010 <emphasis role="comment">//&#32;https://eigen.tuxfamily.org/dox-devel/group__TutorialSlicingIndexing.html</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00011"/>00011 <emphasis role="comment">//&#32;requires&#32;https://github.com/bab2min/EigenRand&#32;for&#32;random&#32;number&#32;generation.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00012"/>00012 <emphasis role="comment">//</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00013"/>00013 <emphasis role="comment">//&#32;Can&#32;switch&#32;to&#32;NSGA-II&#32;like&#32;population&#32;update&#32;via&#32;parameter&#32;&apos;nsga_update&apos;.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00014"/>00014 <emphasis role="comment">//&#32;Then&#32;it&#32;works&#32;essentially&#32;like&#32;NSGA-II&#32;but&#32;instead&#32;of&#32;the&#32;tournament&#32;selection</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00015"/>00015 <emphasis role="comment">//&#32;the&#32;whole&#32;population&#32;is&#32;sorted&#32;and&#32;the&#32;best&#32;individuals&#32;survive.&#32;To&#32;do&#32;this</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00016"/>00016 <emphasis role="comment">//&#32;efficiently&#32;the&#32;crowd&#32;distance&#32;ordering&#32;is&#32;slightly&#32;inaccurate.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00017"/>00017 <emphasis role="comment">//</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00018"/>00018 <emphasis role="comment">//&#32;Supports&#32;parallel&#32;fitness&#32;function&#32;evaluation.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00019"/>00019 <emphasis role="comment">//</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00020"/>00020 <emphasis role="comment">//&#32;Features&#32;enhanced&#32;multiple&#32;constraint&#32;ranking&#32;(https://www.jstage.jst.go.jp/article/tjpnsec/11/2/11_18/_article/-char/en/)</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00021"/>00021 <emphasis role="comment">//&#32;improving&#32;its&#32;performance&#32;in&#32;handling&#32;constraints&#32;for&#32;engineering&#32;design&#32;optimization.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00022"/>00022 <emphasis role="comment">//</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00023"/>00023 <emphasis role="comment">//&#32;Enables&#32;the&#32;comparison&#32;of&#32;DE&#32;and&#32;NSGA-II&#32;population&#32;update&#32;mechanism&#32;with&#32;everything&#32;else</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00024"/>00024 <emphasis role="comment">//&#32;kept&#32;completely&#32;identical.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00025"/>00025 <emphasis role="comment">//</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00026"/>00026 <emphasis role="comment">//&#32;Uses&#32;the&#32;following&#32;deviation&#32;from&#32;the&#32;standard&#32;DE&#32;algorithm:</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00027"/>00027 <emphasis role="comment">//&#32;a)&#32;oscillating&#32;CR/F&#32;parameters.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00028"/>00028 <emphasis role="comment">//</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00029"/>00029 <emphasis role="comment">//&#32;You&#32;may&#32;keep&#32;parameters&#32;F&#32;and&#32;CR&#32;at&#32;their&#32;defaults&#32;since&#32;this&#32;implementation&#32;works&#32;well&#32;with&#32;the&#32;given&#32;settings&#32;for&#32;most&#32;problems,</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00030"/>00030 <emphasis role="comment">//&#32;since&#32;the&#32;algorithm&#32;oscillates&#32;between&#32;different&#32;F&#32;and&#32;CR&#32;settings.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00031"/>00031 <emphasis role="comment">//</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00032"/>00032 <emphasis role="comment">//&#32;For&#32;expensive&#32;objective&#32;functions&#32;(e.g.&#32;machine&#32;learning&#32;parameter&#32;optimization)&#32;use&#32;the&#32;workers</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00033"/>00033 <emphasis role="comment">//&#32;parameter&#32;to&#32;parallelize&#32;objective&#32;function&#32;evaluation.&#32;The&#32;workers&#32;parameter&#32;is&#32;limited&#32;by&#32;the</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00034"/>00034 <emphasis role="comment">//&#32;population&#32;size.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00035"/>00035 <emphasis role="comment">//</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00036"/>00036 <emphasis role="comment">//&#32;The&#32;ints&#32;parameter&#32;is&#32;a&#32;boolean&#32;array&#32;indicating&#32;which&#32;parameters&#32;are&#32;discrete&#32;integer&#32;values.&#32;This</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00037"/>00037 <emphasis role="comment">//&#32;parameter&#32;was&#32;introduced&#32;after&#32;observing&#32;non&#32;optimal&#32;DE-results&#32;for&#32;the&#32;ESP2&#32;benchmark&#32;problem:</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00038"/>00038 <emphasis role="comment">//&#32;https://github.com/AlgTUDelft/ExpensiveOptimBenchmark/blob/master/expensiveoptimbenchmark/problems/DockerCFDBenchmark.py</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00039"/>00039 <emphasis role="comment">//&#32;If&#32;defined&#32;it&#32;causes&#32;a&#32;&quot;special&#32;treatment&quot;&#32;for&#32;discrete&#32;variables:&#32;They&#32;are&#32;rounded&#32;to&#32;the&#32;next&#32;integer&#32;value&#32;and</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00040"/>00040 <emphasis role="comment">//&#32;there&#32;is&#32;an&#32;additional&#32;mutation&#32;to&#32;avoid&#32;getting&#32;stuck&#32;at&#32;local&#32;minima.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00041"/>00041 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;Eigen/Core&gt;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&lt;float.h&gt;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&lt;ctime&gt;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&lt;random&gt;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&lt;queue&gt;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&lt;tuple&gt;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_evaluator_8h">evaluator.h</link>&quot;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00051"/>00051 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00052"/><link linkend="_namespacemode__optimizer">00052</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacemode__optimizer">mode_optimizer</link>&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00053"/>00053 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00054"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer">00054</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a163da18af0bf36f7d599a5ab0b0915b6">MoDeOptimizer</link>&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00055"/>00055 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00056"/>00056 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_modeoptimizer_8cpp_source_1l00057"/>00057 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00058"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a163da18af0bf36f7d599a5ab0b0915b6">00058</link> &#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a163da18af0bf36f7d599a5ab0b0915b6">MoDeOptimizer</link>(<emphasis role="keywordtype">long</emphasis>&#32;runid_,&#32;<link linkend="_class_fitness">Fitness</link>&#32;*fitfun_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim_,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nobj_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ncon_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;seed_,&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize_,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;F_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;CR_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;pro_c_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;dis_c_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;pro_m_,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dis_m_,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;nsga_update_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;pareto_update_,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;min_mutate_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;max_mutate_,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;*isInt_)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;runid&#32;used&#32;to&#32;identify&#32;a&#32;specific&#32;run</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa80910f343eea5e7a618f3fe7b2caf25">runid</link>&#32;=&#32;runid_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fitness&#32;function&#32;to&#32;minimize</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82">fitfun</link>&#32;=&#32;fitfun_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;objective&#32;variables/problem&#32;dimension</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>&#32;=&#32;dim_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;objectives</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d">nobj</link>&#32;=&#32;nobj_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;constraints</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7">ncon</link>&#32;=&#32;ncon_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Population&#32;size</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>&#32;=&#32;popsize_&#32;&gt;&#32;0&#32;?&#32;popsize_&#32;:&#32;128;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DE&#32;population&#32;update&#32;parameters,&#32;ignored&#32;if&#32;nsga_update&#32;==&#32;true</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a21094b0a99aaed9a1e16ebde53afe8cc">F</link>&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa08b5b7d015ba33ad43f3a6fe11869f4">F0</link>&#32;=&#32;F_&#32;&gt;&#32;0&#32;?&#32;F_&#32;:&#32;0.5;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8e089b2926237332790e44bbb4cda41f">CR</link>&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2e19fae27d9ed4687096dd8426b4cbeb">CR0</link>&#32;=&#32;CR_&#32;&gt;&#32;0&#32;?&#32;CR_&#32;:&#32;0.9;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;iterations&#32;already&#32;performed.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b">iterations</link>&#32;=&#32;0;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;evaluations&#32;already&#32;performed.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a52b577c15bc193cdf3f61e0c270184e8">n_evals</link>&#32;=&#32;0;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;position&#32;of&#32;current&#32;x/y</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ac06b17efdd21d372c4487f50dbfaf11b">pos</link>&#32;=&#32;0;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;pcg64(seed_);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NSGA&#32;population&#32;update&#32;parameters,&#32;ignored&#32;if&#32;nsga_update&#32;==&#32;false</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;usually&#32;use&#32;pro_c&#32;=&#32;1.0,&#32;dis_c&#32;=&#32;20.0,&#32;pro_m&#32;=&#32;1.0,&#32;dis_m&#32;=&#32;20.0.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088">pro_c</link>&#32;=&#32;pro_c_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2629e1f2c634bf07a9606516515b6d3c">dis_c</link>&#32;=&#32;dis_c_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a48225933ba93cf9b72b6dd748672944f">pro_m</link>&#32;=&#32;pro_m_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1ae0187b26f0dce18fe523e9ad13ac6e">dis_m</link>&#32;=&#32;dis_m_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;true,&#32;use&#32;NSGA&#32;population&#32;update,&#32;if&#32;false,&#32;use&#32;DE&#32;population&#32;update</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;DE&#32;update&#32;to&#32;diversify&#32;your&#32;results.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f">nsga_update</link>&#32;=&#32;nsga_update_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DE&#32;population&#32;update&#32;parameter.&#32;Only&#32;applied&#32;if&#32;nsga_update&#32;=&#32;false.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Favor&#32;better&#32;solutions&#32;for&#32;sample&#32;generation.&#32;Default&#32;0&#32;-</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;use&#32;all&#32;population&#32;members&#32;with&#32;the&#32;same&#32;probability.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f">pareto_update</link>&#32;=&#32;pareto_update_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DE&#32;population&#32;update&#32;parameter&#32;used&#32;in&#32;connection&#32;with&#32;isInt.&#32;Determines</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;mutation&#32;rate&#32;for&#32;discrete&#32;parameters.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a6c98f5bff98f17a004b99fb3430f9e55">min_mutate</link>&#32;=&#32;min_mutate_&#32;&gt;&#32;0&#32;?&#32;min_mutate_&#32;:&#32;0.1;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a953467de91810e549f4bc0117ec73ad9">max_mutate</link>&#32;=&#32;max_mutate_&#32;&gt;&#32;0&#32;?&#32;max_mutate_&#32;:&#32;0.5;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Indicating&#32;which&#32;parameters&#32;are&#32;discrete&#32;integer&#32;values.&#32;If&#32;defined&#32;these&#32;parameters&#32;will&#32;be</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rounded&#32;to&#32;the&#32;next&#32;integer&#32;and&#32;some&#32;additional&#32;mutation&#32;of&#32;discrete&#32;parameters&#32;are&#32;performed.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5">isInt</link>&#32;=&#32;isInt_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a09b8202d4c500c4a51410eeb48e79103">stop</link>&#32;=&#32;0;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5e864a8ba16fb9f3ab38260f7cbfa773">init</link>();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;popX.leftCols(popsize)&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00110"/>00110 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00111"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa809e16cec26180884d0762dff1283ec">00111</link> &#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa809e16cec26180884d0762dff1283ec">~MoDeOptimizer</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00114"/>00114 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00115"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0455034273652829d554dd3858b4b6e1">00115</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0455034273652829d554dd3858b4b6e1">variation</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;&amp;x)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dis_c_&#32;=&#32;(0.5&#32;*&#32;<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>)&#32;+&#32;0.5)&#32;*&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2629e1f2c634bf07a9606516515b6d3c">dis_c</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dis_m_&#32;=&#32;(0.5&#32;*&#32;<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>)&#32;+&#32;0.5)&#32;*&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1ae0187b26f0dce18fe523e9ad13ac6e">dis_m</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n2&#32;=&#32;x.cols()&#32;/&#32;2;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;2&#32;*&#32;n2;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;parent1&#32;=&#32;x(Eigen::indexing::all,&#32;Eigen::seq(0,&#32;n2&#32;-&#32;1));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;parent2&#32;=&#32;x(Eigen::indexing::all,&#32;Eigen::seq(n2,&#32;n&#32;-&#32;1));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;beta&#32;=&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>,&#32;n2);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;to1;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088">pro_c</link>&#32;&lt;&#32;1.0)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to1&#32;=&#32;<link linkend="_evaluator_8h_1a28d3e754a2edfdf68753c5562acd87d0">uniformVec</link>(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>,&#32;*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;n2;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>;&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>)&#32;&gt;&#32;0.5&#32;||&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088">pro_c</link>&#32;&lt;&#32;1.0&#32;&amp;&amp;&#32;to1(i)&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088">pro_c</link>))
<anchor xml:id="_modeoptimizer_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;beta(i,&#32;p)&#32;=&#32;1.0;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;r&#32;=&#32;<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r&#32;&lt;=&#32;0.5)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;beta(i,&#32;p)&#32;=&#32;pow(2&#32;*&#32;r,&#32;1.0&#32;/&#32;(dis_c_&#32;+&#32;1.0));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;beta(i,&#32;p)&#32;=&#32;pow(2&#32;*&#32;r,&#32;-1.0&#32;/&#32;(dis_c_&#32;+&#32;1.0));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>)&#32;&gt;&#32;0.5)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;beta(i,&#32;p)&#32;=&#32;-beta(i,&#32;p);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;offspring1&#32;=&#32;((parent1&#32;+&#32;parent2)&#32;*&#32;0.5);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;offspring2&#32;=&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>(offspring1);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;delta&#32;=&#32;(beta.array()&#32;*&#32;(parent1&#32;-&#32;parent2).array()).matrix()&#32;*&#32;0.5;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offspring1&#32;+=&#32;delta;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offspring2&#32;-=&#32;delta;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;offspring&#32;=&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>,&#32;n);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offspring&#32;&lt;&lt;&#32;offspring1,&#32;offspring2;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;limit&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a48225933ba93cf9b72b6dd748672944f">pro_m</link>&#32;/&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;scale&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82">fitfun</link>-&gt;scale();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;n;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>;&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>)&#32;&lt;&#32;limit)&#32;{&#32;<emphasis role="comment">//&#32;site</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;mu&#32;=&#32;<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;norm&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82">fitfun</link>-&gt;norm_i(i,&#32;offspring(i,&#32;p));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mu&#32;&lt;=&#32;0.5)&#32;<emphasis role="comment">//&#32;temp</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offspring(i,&#32;p)&#32;+=&#32;scale(i)&#32;*
<anchor xml:id="_modeoptimizer_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(pow(2.&#32;*&#32;mu&#32;+&#32;(1.&#32;-&#32;2.&#32;*&#32;mu)&#32;*&#32;pow(1.&#32;-&#32;norm,&#32;dis_m_&#32;+&#32;1.),
<anchor xml:id="_modeoptimizer_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.&#32;/&#32;(dis_m_&#32;+&#32;1.))&#32;-&#32;1.);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offspring(i,&#32;p)&#32;+=&#32;scale(i)&#32;*
<anchor xml:id="_modeoptimizer_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(1.&#32;-&#32;pow(2.&#32;*&#32;(1.&#32;-&#32;mu)&#32;+&#32;2.&#32;*&#32;(mu&#32;-&#32;0.5)&#32;*&#32;pow(1.&#32;-&#32;norm,&#32;dis_m_&#32;+&#32;1.),
<anchor xml:id="_modeoptimizer_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1.&#32;/&#32;(dis_m_&#32;+&#32;1.)));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82">fitfun</link>-&gt;setClosestFeasible(offspring);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;offspring;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00170"/>00170 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00171"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae0edab6fb47d84a669d402f893ff4b6f">00171</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae0edab6fb47d84a669d402f893ff4b6f">nextX</link>(<emphasis role="keywordtype">int</emphasis>&#32;p)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;0)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b">iterations</link>++;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f">nsga_update</link>)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae6659d6638b70e97c73ef9dc81b1e0d2">vX</link>.col(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7">vp</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7">vp</link>&#32;=&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7">vp</link>&#32;+&#32;1)&#32;%&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;use&#32;DE&#32;update&#32;strategy.</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;0)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8e089b2926237332790e44bbb4cda41f">CR</link>&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b">iterations</link>&#32;%&#32;2&#32;==&#32;0&#32;?&#32;0.5&#32;*&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2e19fae27d9ed4687096dd8426b4cbeb">CR0</link>&#32;:&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2e19fae27d9ed4687096dd8426b4cbeb">CR0</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a21094b0a99aaed9a1e16ebde53afe8cc">F</link>&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b">iterations</link>&#32;%&#32;2&#32;==&#32;0&#32;?&#32;0.5&#32;*&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa08b5b7d015ba33ad43f3a6fe11869f4">F0</link>&#32;:&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa08b5b7d015ba33ad43f3a6fe11869f4">F0</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;xp&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.col(p);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;r1,&#32;r2,&#32;r3;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r1&#32;=&#32;<link linkend="_evaluator_8h_1a3f89a72cbd8f38570fbb77117bdc7cbb">randInt</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>,<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r2&#32;=&#32;<link linkend="_evaluator_8h_1a3f89a72cbd8f38570fbb77117bdc7cbb">randInt</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>,<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f">pareto_update</link>&#32;&gt;&#32;0)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sample&#32;elite&#32;solutions</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r3&#32;=&#32;(int)&#32;(pow(<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>),&#32;1.0&#32;+&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f">pareto_update</link>)&#32;*&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sample&#32;from&#32;whole&#32;population</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r3&#32;=&#32;<link linkend="_evaluator_8h_1a3f89a72cbd8f38570fbb77117bdc7cbb">randInt</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>,<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(r3&#32;==&#32;p&#32;||&#32;r3&#32;==&#32;r1&#32;||&#32;r3&#32;==&#32;r2&#32;||&#32;r2&#32;==&#32;p&#32;||&#32;r2&#32;==&#32;r1&#32;||&#32;r1&#32;==&#32;p);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x1&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.col(r1);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x2&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.col(r2);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x3&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.col(r3);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;x3&#32;+&#32;(x1&#32;-&#32;x2)&#32;*&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a21094b0a99aaed9a1e16ebde53afe8cc">F</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;r&#32;=&#32;<link linkend="_evaluator_8h_1a3f89a72cbd8f38570fbb77117bdc7cbb">randInt</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>,<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>;&#32;j++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;!=&#32;r&#32;&amp;&amp;&#32;<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>)&#32;&gt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8e089b2926237332790e44bbb4cda41f">CR</link>)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[j]&#32;=&#32;xp[j];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1af3c43901c39d8ee6f6ec5fb1d02f327e">modify</link>(x);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82">fitfun</link>-&gt;getClosestFeasible(x);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00209"/>00209 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00210"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1af3c43901c39d8ee6f6ec5fb1d02f327e">00210</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1af3c43901c39d8ee6f6ec5fb1d02f327e">modify</link>(<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;x)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5">isInt</link>&#32;==&#32;NULL)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;n_ints&#32;=&#32;0;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5">isInt</link>[i])
<anchor xml:id="_modeoptimizer_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n_ints++;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;to_mutate&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a6c98f5bff98f17a004b99fb3430f9e55">min_mutate</link>&#32;+&#32;<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>)&#32;*&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a953467de91810e549f4bc0117ec73ad9">max_mutate</link>&#32;-&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a6c98f5bff98f17a004b99fb3430f9e55">min_mutate</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>;&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5">isInt</link>[i])&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b">rand01</link>(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>)&#32;&lt;&#32;to_mutate&#32;/&#32;n_ints)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[i]&#32;=&#32;(int)<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82">fitfun</link>-&gt;sample_i(i,&#32;*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>);&#32;<emphasis role="comment">//&#32;resample</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00225"/>00225 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00226"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a6ef6cfaa4da734c923fcdbf8692875f5">00226</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a6ef6cfaa4da734c923fcdbf8692875f5">crowd_dist</link>(<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;&amp;y)&#32;{&#32;<emphasis role="comment">//&#32;crowd&#32;distance&#32;for&#32;1st&#32;objective</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;y.cols();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;y0&#32;=&#32;y.row(0);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;si&#32;=&#32;<link linkend="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c">sort_index</link>(y0);&#32;<emphasis role="comment">//&#32;sort&#32;1st&#32;objective</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;y0s&#32;=&#32;y0(si);&#32;<emphasis role="comment">//&#32;sorted&#32;y0</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;d(n&#32;-&#32;1);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n&#32;-&#32;1;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;d(i)&#32;=&#32;y0s[i&#32;+&#32;1]&#32;-&#32;y0s[i];&#32;<emphasis role="comment">//&#32;neighbor&#32;distance</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d.maxCoeff()&#32;==&#32;0)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link>(n);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;dsum&#32;=&#32;<link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link>(n);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&gt;&#32;0)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dsum(i)&#32;+=&#32;d(i&#32;-&#32;1);&#32;<emphasis role="comment">//&#32;distance&#32;to&#32;left</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;n&#32;-&#32;1)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dsum(i)&#32;+=&#32;d(i);&#32;<emphasis role="comment">//&#32;&#32;distance&#32;to&#32;right</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dsum(0)&#32;=&#32;DBL_MAX;&#32;<emphasis role="comment">//&#32;keep&#32;borders</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dsum(n&#32;-&#32;1)&#32;=&#32;DBL_MAX;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;ds(n);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ds(si)&#32;=&#32;dsum;&#32;&#32;<emphasis role="comment">//&#32;inverse&#32;order</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ds;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00249"/>00249 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00250"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1af5f89faff00f2714a594e1d60cd2d6e3">00250</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1af5f89faff00f2714a594e1d60cd2d6e3">is_dominated</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;&amp;y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;p)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;y.rows();&#32;j++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y(j)&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">popY</link>(j,&#32;p))
<anchor xml:id="_modeoptimizer_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00256"/>00256 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00257"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5e6806c59a545b96460af0bdbb3bfe27">00257</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5e6806c59a545b96460af0bdbb3bfe27">is_dominated</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;&amp;y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;y.rows();&#32;j++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y(j,&#32;i)&#32;&lt;&#32;y(j,&#32;index))
<anchor xml:id="_modeoptimizer_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00263"/>00263 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00264"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a10363d0716952c74500da8ca679dc95b">00264</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a10363d0716952c74500da8ca679dc95b">pareto_levels</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;&amp;y)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;y.cols();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a3762607fa33f7bb558fd7aae9690fc37">pareto</link>(n);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a3762607fa33f7bb558fd7aae9690fc37">pareto</link>(i)&#32;=&#32;i;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;domination&#32;=&#32;<link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link>(n);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mask[n];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask[i]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;&#32;index&#32;&lt;&#32;n;)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;!=&#32;index&#32;&amp;&amp;&#32;mask[i]&#32;&amp;&amp;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1af5f89faff00f2714a594e1d60cd2d6e3">is_dominated</link>(y,&#32;i,&#32;index))
<anchor xml:id="_modeoptimizer_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mask[i]&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mask[i])
<anchor xml:id="_modeoptimizer_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domination[i]&#32;+=&#32;1;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!mask[index]&#32;&amp;&amp;&#32;index&#32;&lt;&#32;n)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;&quot;ypar&#32;&quot;&#32;&lt;&lt;&#32;domination.transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;domination;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00289"/>00289 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00290"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1d4ce60e415e141efaef2728d9952933">00290</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1d4ce60e415e141efaef2728d9952933">objranks</link>(<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;objs)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_evaluator_8h_1abf39fef19e3ec51cce88f380c3370bff">imat</link>&#32;ci(objs.cols(),&#32;objs.rows());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;objs.rows();&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ci.col(i)&#32;=&#32;<link linkend="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c">sort_index</link>(objs.row(i).transpose());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;rank(objs.rows(),&#32;objs.cols());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;objs.rows();&#32;j++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;objs.cols();&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rank(j,&#32;ci(i,&#32;j))&#32;=&#32;i;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rank.colwise().sum();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00301"/>00301 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00302"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7d415b38158a793f2a2d666e921d838b">00302</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7d415b38158a793f2a2d666e921d838b">ranks</link>(<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;cons,&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;eps)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_evaluator_8h_1abf39fef19e3ec51cce88f380c3370bff">imat</link>&#32;ci(cons.cols(),&#32;cons.rows());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cons.rows();&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ci.col(i)&#32;=&#32;<link linkend="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c">sort_index</link>(cons.row(i).transpose());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;rank(cons.rows(),&#32;cons.cols());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;alpha&#32;=&#32;<link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link>(cons.cols());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;cons.rows();&#32;j++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cons.cols();&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ci_&#32;=&#32;ci(i,&#32;j);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cons(j,&#32;ci_)&#32;&lt;=&#32;eps[j])&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rank(j,&#32;ci_)&#32;=&#32;0;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rank(j,&#32;ci_)&#32;=&#32;i;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alpha[ci_]++;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;cons.rows();&#32;j++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;cons.cols();&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rank(j,&#32;i)&#32;*=&#32;alpha[i]&#32;/&#32;cons.rows();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rank.colwise().sum();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00325"/>00325 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00326"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a3762607fa33f7bb558fd7aae9690fc37">00326</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a3762607fa33f7bb558fd7aae9690fc37">pareto</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;&amp;ys)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7">ncon</link>&#32;==&#32;0)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a10363d0716952c74500da8ca679dc95b">pareto_levels</link>(ys);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00329"/>00329 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popn&#32;=&#32;ys.cols();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;yobj&#32;=&#32;ys(Eigen::seqN(0,&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d">nobj</link>),&#32;Eigen::indexing::all);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;ycon&#32;=&#32;ys(Eigen::indexing::lastN(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7">ncon</link>),&#32;Eigen::indexing::all).cwiseMax(0);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00333"/>00333 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;eps&#32;=&#32;<link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link>(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7">ncon</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b">iterations</link>&#32;&gt;&#32;1&#32;&amp;&amp;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5b2332ae4d4347e6c2fbe7c361a3f4ac">lastCon</link>.maxCoeff()&#32;&lt;&#32;1E90)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;eps_mean&#32;=&#32;0.5*(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a160a04578fb2ae6512edc6cb5cd642f3">lastEps</link>&#32;+&#32;0.5*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5b2332ae4d4347e6c2fbe7c361a3f4ac">lastCon</link>.rowwise().mean());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(eps_mean.maxCoeff()&#32;&gt;&#32;1E-8)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eps&#32;=&#32;eps_mean;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;&quot;eps&#32;=&#32;&quot;&#32;&lt;&lt;&#32;eps.transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5b2332ae4d4347e6c2fbe7c361a3f4ac">lastCon</link>&#32;=&#32;ycon;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a160a04578fb2ae6512edc6cb5cd642f3">lastEps</link>&#32;=&#32;eps;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00344"/>00344 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;feasible[ys.cols()];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasFeasable&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasInfeasable&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;popn;&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;feasible[i]&#32;=&#32;(ycon.col(i).array()&#32;&lt;=&#32;eps.array()).all();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(feasible[i])
<anchor xml:id="_modeoptimizer_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasFeasable&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasInfeasable&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;csum&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7d415b38158a793f2a2d666e921d838b">ranks</link>(ycon,&#32;eps);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hasFeasable)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;csum&#32;+=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1d4ce60e415e141efaef2728d9952933">objranks</link>(yobj);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00358"/>00358 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00359"/>00359 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;csum&#32;&quot;&#32;&lt;&lt;&#32;csum.transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00360"/>00360 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;ranks&#32;&quot;&#32;&lt;&lt;&#32;ranks(ycon).transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00361"/>00361 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;objranks&#32;&quot;&#32;&lt;&lt;&#32;objranks(yobj).transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00362"/>00362 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;ci&#32;=&#32;<link linkend="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c">sort_index</link>(csum);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;fiv;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;viv;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;ci.size();&#32;i++)&#32;<emphasis role="comment">//&#32;collect&#32;feasibles</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(feasible[ci[i]])
<anchor xml:id="_modeoptimizer_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fiv.push_back(ci[i]);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viv.push_back(ci[i]);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;domination&#32;=&#32;<link linkend="_evaluator_8h_1a909812174fa9829bc49f6e00edb00b90">zeros</link>(popn);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hasFeasable)&#32;{&#32;<emphasis role="comment">//&#32;compute&#32;pareto&#32;levels&#32;only&#32;for&#32;feasible</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;fi&#32;=&#32;Eigen::Map&lt;ivec,&#32;Eigen::Unaligned&gt;(fiv.data(),&#32;fiv.size());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;ypar&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a10363d0716952c74500da8ca679dc95b">pareto_levels</link>(yobj(Eigen::indexing::all,&#32;fi));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domination(fi)&#32;+=&#32;ypar;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;then&#32;constraint&#32;violations</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hasInfeasable)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;higher&#32;constraint&#32;violation&#32;level&#32;gets&#32;lower&#32;domination&#32;level&#32;assigned</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;viv.size();&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domination(viv[i])&#32;+=&#32;viv.size()&#32;-&#32;i;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;fiv.size();&#32;i++)&#32;<emphasis role="comment">//&#32;feasible&#32;first</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;domination(fiv[i])&#32;+=&#32;viv.size()&#32;+&#32;1;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;higher&#32;dominates&#32;lower</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;domination;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00387"/>00387 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00388"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aed65680ebd6f773bab2c475fbb527827">00388</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aed65680ebd6f773bab2c475fbb527827">random_int_vector</link>(<emphasis role="keywordtype">int</emphasis>&#32;size)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;v;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;size;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v.push_back(i);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::random_shuffle(v.begin(),&#32;v.end());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Eigen::Map&lt;ivec,&#32;Eigen::Unaligned&gt;(v.data(),
<anchor xml:id="_modeoptimizer_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v.size());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00396"/>00396 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00397"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8941e256d6ff3843da336b4473513363">00397</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8941e256d6ff3843da336b4473513363">pop_update</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;x0&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;y0&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">popY</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d">nobj</link>&#32;==&#32;1)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;yi&#32;=&#32;<link linkend="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c">sort_index</link>(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">popY</link>.row(0)).reverse();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>(Eigen::indexing::all,&#32;yi);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y0&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">popY</link>(Eigen::indexing::all,&#32;yi);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;domination&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a3762607fa33f7bb558fd7aae9690fc37">pareto</link>(y0);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;vec&gt;&#32;x;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;vec&gt;&#32;y;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxdom&#32;=&#32;(int)&#32;domination.maxCoeff();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;dom&#32;=&#32;maxdom;&#32;dom&#32;&gt;=&#32;0;&#32;dom--)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;level;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;domination.size();&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(domination(i)&#32;==&#32;dom)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;level.push_back(i);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(level.size()&#32;==&#32;0)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;domlevel&#32;=&#32;Eigen::Map&lt;ivec,&#32;Eigen::Unaligned&gt;(level.data(),
<anchor xml:id="_modeoptimizer_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;level.size());
<anchor xml:id="_modeoptimizer_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;domx&#32;=&#32;x0(Eigen::indexing::all,&#32;domlevel);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;domy&#32;=&#32;y0(Eigen::indexing::all,&#32;domlevel);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<emphasis role="keywordtype">int</emphasis>)&#32;(x.size()&#32;+&#32;domlevel.size())&#32;&lt;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;whole&#32;level&#32;fits</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;domy.cols();&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.push_back(domx.col(i));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y.push_back(domy.col(i));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(domy.cols()&#32;&gt;&#32;1)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;cd&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a6ef6cfaa4da734c923fcdbf8692875f5">crowd_dist</link>(domy);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d">ivec</link>&#32;si&#32;=&#32;<link linkend="_evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c">sort_index</link>(cd).reverse();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;si.size();&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((<emphasis role="keywordtype">int</emphasis>)&#32;x.size())&#32;&gt;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.push_back(domx.col(si(i)));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y.push_back(domy.col(si(i)));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.push_back(domx.col(0));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y.push_back(domy.col(0));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00439"/>00439 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;&quot;XXXXXXXX&#32;&quot;&#32;&lt;&lt;&#32;level.size()&#32;&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;domy.col(0)&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;<emphasis role="comment">//&#32;we&#32;have&#32;filled&#32;popsize&#32;members</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>;&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.col(i)&#32;=&#32;x[i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">popY</link>.col(i)&#32;=&#32;y[i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f">nsga_update</link>)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae6659d6638b70e97c73ef9dc81b1e0d2">vX</link>&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0455034273652829d554dd3858b4b6e1">variation</link>(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.leftCols(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>));
<anchor xml:id="_modeoptimizer_8cpp_source_1l00450"/>00450 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00452"/>00452 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00453"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5abdc69324e8a71cfdebde3f5692e2ca">00453</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5abdc69324e8a71cfdebde3f5692e2ca">ask</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae0edab6fb47d84a669d402f893ff4b6f">nextX</link>(p);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.col(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>&#32;+&#32;p)&#32;=&#32;x;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.rightCols(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00460"/>00460 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00461"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae75b13be3336c20b675886b7e0f0bb11">00461</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae75b13be3336c20b675886b7e0f0bb11">setX</link>(<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;xs)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;xs.col(p);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.col(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>&#32;+&#32;p)&#32;=&#32;x;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00467"/>00467 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00468"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1abe30b3010caaf8d4648b31adfa127fd2">00468</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1abe30b3010caaf8d4648b31adfa127fd2">tell</link>(<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;ys)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>;&#32;p++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">popY</link>.col(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>&#32;+&#32;p)&#32;=&#32;ys.col(p);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00471"/>00471 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;p&#32;&lt;&lt;&#32;&quot;&#32;x&#32;&quot;&#32;&lt;&lt;&#32;popX.col(popsize&#32;+&#32;p).transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00472"/>00472 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;p&#32;&lt;&lt;&#32;&quot;&#32;y&#32;&quot;&#32;&lt;&lt;&#32;ys.col(p).transpose()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8941e256d6ff3843da336b4473513363">pop_update</link>();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a09b8202d4c500c4a51410eeb48e79103">stop</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00475"/>00475 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00476"/>00476 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00477"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a9d11baa8f5e4d3e4f68fe678918eb09a">00477</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a9d11baa8f5e4d3e4f68fe678918eb09a">tell</link>(<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;ys,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;nsga_update_,&#32;<emphasis role="keywordtype">double</emphasis>&#32;pareto_update_)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f">nsga_update</link>&#32;=&#32;nsga_update_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f">pareto_update</link>&#32;=&#32;pareto_update_;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1abe30b3010caaf8d4648b31adfa127fd2">tell</link>(ys);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00482"/>00482 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00483"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ac0ac96eb437da4896667a45d11d37d17">00483</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ac0ac96eb437da4896667a45d11d37d17">getPopulation</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.leftCols(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00486"/>00486 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00487"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5e864a8ba16fb9f3ab38260f7cbfa773">00487</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5e864a8ba16fb9f3ab38260f7cbfa773">init</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>,&#32;2&#32;*&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">popY</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d">nobj</link>&#32;+&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7">ncon</link>,&#32;2&#32;*&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>.col(p)&#32;=&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82">fitfun</link>-&gt;sample(*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">popY</link>.col(p)&#32;=&#32;<link linkend="_evaluator_8h_1a493b3a74ec3481711548e4b506b009cd">constant</link>(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d">nobj</link>&#32;+&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7">ncon</link>,&#32;DBL_MAX);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2360670fdb71a5da25b70d0ba66ef6e4">next_size</link>&#32;=&#32;2&#32;*&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a60d056b89031e6b391d95b679b713f2b">vdone</link>&#32;=&#32;std::vector&lt;bool&gt;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2360670fdb71a5da25b70d0ba66ef6e4">next_size</link>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae6659d6638b70e97c73ef9dc81b1e0d2">vX</link>&#32;=&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7">vp</link>&#32;=&#32;0;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00498"/>00498 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00499"/>00499 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00500"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbc432704310adeeade48f55cc1ecb63">00500</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbc432704310adeeade48f55cc1ecb63">getX</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00502"/>00502 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00503"/>00503 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00504"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a52df4b6d8bd56e5aa89a775338ad4e2f">00504</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a52df4b6d8bd56e5aa89a775338ad4e2f">getY</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">popY</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00507"/>00507 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00508"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5a626ae2567fef61822eaa0cc6aaa6e4">00508</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5a626ae2567fef61822eaa0cc6aaa6e4">getIterations</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b">iterations</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00510"/>00510 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00511"/>00511 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00512"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a4022efa7d51865ed4d97931bf611e914">00512</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a4022efa7d51865ed4d97931bf611e914">getStop</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a09b8202d4c500c4a51410eeb48e79103">stop</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00514"/>00514 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00515"/>00515 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00516"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a51327e372807cc0ef7de27dae144fbe2">00516</link> &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a51327e372807cc0ef7de27dae144fbe2">getFitfun</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82">fitfun</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00518"/>00518 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00519"/>00519 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00520"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a9b3ff868b5d9f398ac048f02cdeddd7c">00520</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a9b3ff868b5d9f398ac048f02cdeddd7c">getDim</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00522"/>00522 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00523"/>00523 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00524"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a403d7134c1c92e24818df5a8d00c0cc3">00524</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a403d7134c1c92e24818df5a8d00c0cc3">getNobj</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d">nobj</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00526"/>00526 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00527"/>00527 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00528"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a9b4870b045748a2ad502f9788e4771be">00528</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a9b4870b045748a2ad502f9788e4771be">getNcon</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7">ncon</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00530"/>00530 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00531"/>00531 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00532"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1accd38c8a40e0b6a43c195941f7ce5c8b">00532</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1accd38c8a40e0b6a43c195941f7ce5c8b">getPopsize</link>()&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00534"/>00534 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00535"/>00535 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00536"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7983bac3697e7bc3f1972876b7dc6409">00536</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7983bac3697e7bc3f1972876b7dc6409">setPopsize</link>(<emphasis role="keywordtype">int</emphasis>&#32;size)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>&#32;=&#32;size;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5e864a8ba16fb9f3ab38260f7cbfa773">init</link>();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00539"/>00539 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00540"/>00540 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00541"/>00541 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_modeoptimizer_8cpp_source_1l00542"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa80910f343eea5e7a618f3fe7b2caf25">00542</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa80910f343eea5e7a618f3fe7b2caf25">runid</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00543"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82">00543</link> &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>&#32;*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82">fitfun</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00544"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">00544</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738">popsize</link>;&#32;<emphasis role="comment">//&#32;population&#32;size</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00545"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">00545</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3">dim</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00546"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d">00546</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d">nobj</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00547"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7">00547</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7">ncon</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00548"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1293cf70abda945e279153f492a7ac93">00548</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1293cf70abda945e279153f492a7ac93">keep</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00549"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8735c5c9b8d7403db83dacd167622428">00549</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8735c5c9b8d7403db83dacd167622428">stopfitness</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00550"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b">00550</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b">iterations</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00551"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a52b577c15bc193cdf3f61e0c270184e8">00551</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a52b577c15bc193cdf3f61e0c270184e8">n_evals</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00552"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a09b8202d4c500c4a51410eeb48e79103">00552</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a09b8202d4c500c4a51410eeb48e79103">stop</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00553"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa08b5b7d015ba33ad43f3a6fe11869f4">00553</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1aa08b5b7d015ba33ad43f3a6fe11869f4">F0</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00554"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2e19fae27d9ed4687096dd8426b4cbeb">00554</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2e19fae27d9ed4687096dd8426b4cbeb">CR0</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00555"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a21094b0a99aaed9a1e16ebde53afe8cc">00555</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a21094b0a99aaed9a1e16ebde53afe8cc">F</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00556"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8e089b2926237332790e44bbb4cda41f">00556</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8e089b2926237332790e44bbb4cda41f">CR</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00557"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088">00557</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088">pro_c</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00558"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2629e1f2c634bf07a9606516515b6d3c">00558</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2629e1f2c634bf07a9606516515b6d3c">dis_c</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00559"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a48225933ba93cf9b72b6dd748672944f">00559</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a48225933ba93cf9b72b6dd748672944f">pro_m</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00560"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1ae0187b26f0dce18fe523e9ad13ac6e">00560</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a1ae0187b26f0dce18fe523e9ad13ac6e">dis_m</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00561"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">00561</link> &#32;&#32;&#32;&#32;pcg64&#32;*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622">rs</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00562"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">00562</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5">popX</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00563"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">00563</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e">popY</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00564"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae6659d6638b70e97c73ef9dc81b1e0d2">00564</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ae6659d6638b70e97c73ef9dc81b1e0d2">vX</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00565"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7">00565</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7">vp</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00566"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5b2332ae4d4347e6c2fbe7c361a3f4ac">00566</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a5b2332ae4d4347e6c2fbe7c361a3f4ac">lastCon</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00567"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a160a04578fb2ae6512edc6cb5cd642f3">00567</link> &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a160a04578fb2ae6512edc6cb5cd642f3">lastEps</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00568"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2360670fdb71a5da25b70d0ba66ef6e4">00568</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a2360670fdb71a5da25b70d0ba66ef6e4">next_size</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00569"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a60d056b89031e6b391d95b679b713f2b">00569</link> &#32;&#32;&#32;&#32;std::vector&lt;bool&gt;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a60d056b89031e6b391d95b679b713f2b">vdone</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00570"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ac06b17efdd21d372c4487f50dbfaf11b">00570</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1ac06b17efdd21d372c4487f50dbfaf11b">pos</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00571"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f">00571</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f">nsga_update</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00572"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f">00572</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f">pareto_update</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00573"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a6c98f5bff98f17a004b99fb3430f9e55">00573</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a6c98f5bff98f17a004b99fb3430f9e55">min_mutate</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00574"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a953467de91810e549f4bc0117ec73ad9">00574</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1a953467de91810e549f4bc0117ec73ad9">max_mutate</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00575"/><link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5">00575</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;*<link linkend="_classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5">isInt</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00576"/>00576 };
<anchor xml:id="_modeoptimizer_8cpp_source_1l00577"/>00577 }
<anchor xml:id="_modeoptimizer_8cpp_source_1l00578"/>00578 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00579"/>00579 <emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespacemode__optimizer">mode_optimizer</link>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00580"/>00580 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00581"/>00581 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00582"/>00582 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00583"/><link linkend="_modeoptimizer_8cpp_1a53418a6215cc2512fc8379c813113f7f">00583</link> uintptr_t&#32;<link linkend="_modeoptimizer_8cpp_1a53418a6215cc2512fc8379c813113f7f">initMODE_C</link>(int64_t&#32;&#32;runid,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nobj,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ncon,&#32;<emphasis role="keywordtype">int</emphasis>&#32;seed,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*lower,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*upper,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;*ints,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize,&#32;<emphasis role="keywordtype">double</emphasis>&#32;F,&#32;<emphasis role="keywordtype">double</emphasis>&#32;CR,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;pro_c,&#32;<emphasis role="keywordtype">double</emphasis>&#32;dis_c,&#32;<emphasis role="keywordtype">double</emphasis>&#32;pro_m,&#32;<emphasis role="keywordtype">double</emphasis>&#32;dis_m,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;nsga_update,&#32;<emphasis role="keywordtype">double</emphasis>&#32;pareto_update,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;min_mutate,&#32;<emphasis role="keywordtype">double</emphasis>&#32;max_mutate)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00589"/>00589 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00590"/>00590 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;lower_limit(dim),&#32;upper_limit(dim);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00591"/>00591 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isInt[dim];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00592"/>00592 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useIsInt&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower_limit[i]&#32;=&#32;lower[i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper_limit[i]&#32;=&#32;upper[i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isInt[i]&#32;=&#32;ints[i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;useIsInt&#32;|=&#32;ints[i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00599"/>00599 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;fitfun&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_fitness">Fitness</link>(<link linkend="_evaluator_8h_1ad0943ebd623281f526e5aee2aa818895">noop_callback</link>,&#32;<link linkend="_evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e">noop_callback_par</link>,&#32;dim,&#32;nobj&#32;+&#32;ncon,&#32;lower_limit,&#32;upper_limit);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>*&#32;opt&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>(runid,&#32;fitfun,&#32;dim,&#32;nobj,&#32;ncon,&#32;seed,&#32;popsize,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;F,&#32;CR,&#32;pro_c,&#32;dis_c,&#32;pro_m,&#32;dis_m,&#32;nsga_update,
<anchor xml:id="_modeoptimizer_8cpp_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pareto_update,&#32;min_mutate,&#32;max_mutate,&#32;useIsInt&#32;?&#32;isInt&#32;:&#32;NULL);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uintptr_t)&#32;opt;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00604"/>00604 }
<anchor xml:id="_modeoptimizer_8cpp_source_1l00605"/>00605 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00606"/><link linkend="_modeoptimizer_8cpp_1a43f7e368f8a09a95d508319cb44fe371">00606</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_modeoptimizer_8cpp_1a43f7e368f8a09a95d508319cb44fe371">destroyMODE_C</link>(uintptr_t&#32;ptr)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>*&#32;opt&#32;=&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>*)ptr;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00608"/>00608 &#32;&#32;&#32;&#32;<link linkend="_class_fitness">Fitness</link>*&#32;fitfun&#32;=&#32;opt-&gt;getFitfun();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00609"/>00609 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;fitfun;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;opt;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00611"/>00611 }
<anchor xml:id="_modeoptimizer_8cpp_source_1l00612"/>00612 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00613"/><link linkend="_modeoptimizer_8cpp_1a8ff81adfda62d091c1382712f6978a38">00613</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_modeoptimizer_8cpp_1a8ff81adfda62d091c1382712f6978a38">askMODE_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;xs)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00614"/>00614 &#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>*)&#32;ptr;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00615"/>00615 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim&#32;=&#32;opt-&gt;getDim();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00617"/>00617 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;pop&#32;=&#32;opt-&gt;ask();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;pop.col(p);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs[p&#32;*&#32;dim&#32;+&#32;i]&#32;=&#32;x[i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00623"/>00623 }
<anchor xml:id="_modeoptimizer_8cpp_source_1l00624"/>00624 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00625"/><link linkend="_modeoptimizer_8cpp_1a58bdcf426555b30299f0c6d85d4f9a3f">00625</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_modeoptimizer_8cpp_1a58bdcf426555b30299f0c6d85d4f9a3f">tellMODE_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;ys)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00626"/>00626 &#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>*)&#32;ptr;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nobj&#32;=&#32;opt-&gt;getNobj()&#32;+&#32;opt-&gt;getNcon();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;vals(nobj,&#32;popsize);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;y(nobj);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nobj;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y[i]&#32;=&#32;ys[p&#32;*&#32;nobj&#32;+&#32;i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals.col(p)&#32;=&#32;y;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00635"/>00635 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;tell(vals);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00637"/>00637 }
<anchor xml:id="_modeoptimizer_8cpp_source_1l00638"/>00638 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00639"/><link linkend="_modeoptimizer_8cpp_1a20d02a7aeece1745e03dcf6b3f70b929">00639</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_modeoptimizer_8cpp_1a20d02a7aeece1745e03dcf6b3f70b929">setPopulationMODE_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;size,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;xs,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;ys)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>*)&#32;ptr;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(size&#32;!=&#32;popsize)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opt-&gt;setPopsize(size);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;=&#32;size;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nobj&#32;=&#32;opt-&gt;getNobj()&#32;+&#32;opt-&gt;getNcon();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dim&#32;=&#32;opt-&gt;getDim();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;pop(dim,&#32;popsize);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00649"/>00649 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x(dim);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dim;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[i]&#32;=&#32;xs[p&#32;*&#32;dim&#32;+&#32;i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pop.col(p)&#32;=&#32;x;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00655"/>00655 &#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;pop&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_modeoptimizer_8cpp_source_1l00656"/>00656 &#32;&#32;&#32;&#32;opt-&gt;setX(pop);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00657"/>00657 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;vals(nobj,&#32;popsize);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;y(nobj);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nobj;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y[i]&#32;=&#32;ys[p&#32;*&#32;nobj&#32;+&#32;i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals.col(p)&#32;=&#32;y;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00663"/>00663 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00664"/>00664 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;tell(vals);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00665"/>00665 }
<anchor xml:id="_modeoptimizer_8cpp_source_1l00666"/>00666 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00667"/><link linkend="_modeoptimizer_8cpp_1a697667505911e8ffd72c2e14ea1b177b">00667</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_modeoptimizer_8cpp_1a697667505911e8ffd72c2e14ea1b177b">tellMODE_switchC</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;ys,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;nsga_update,&#32;<emphasis role="keywordtype">double</emphasis>&#32;pareto_update)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00668"/>00668 &#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>*)&#32;ptr;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00669"/>00669 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00670"/>00670 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nobj&#32;=&#32;opt-&gt;getNobj()&#32;+&#32;opt-&gt;getNcon();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00671"/>00671 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;vals(nobj,&#32;popsize);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00672"/>00672 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;y(nobj);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nobj;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y[i]&#32;=&#32;ys[p&#32;*&#32;nobj&#32;+&#32;i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals.col(p)&#32;=&#32;y;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00677"/>00677 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00678"/>00678 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;tell(vals,&#32;nsga_update,&#32;pareto_update);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00679"/>00679 }
<anchor xml:id="_modeoptimizer_8cpp_source_1l00680"/>00680 
<anchor xml:id="_modeoptimizer_8cpp_source_1l00681"/><link linkend="_modeoptimizer_8cpp_1abbaf3a45fdaae9d07c37dee9b01875e9">00681</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_modeoptimizer_8cpp_1abbaf3a45fdaae9d07c37dee9b01875e9">populationMODE_C</link>(uintptr_t&#32;ptr,&#32;<emphasis role="keywordtype">double</emphasis>*&#32;xs)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00682"/>00682 &#32;&#32;&#32;&#32;<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>&#32;*opt&#32;=&#32;(<link linkend="_classmode__optimizer_1_1_mo_de_optimizer">MoDeOptimizer</link>*)&#32;ptr;
<anchor xml:id="_modeoptimizer_8cpp_source_1l00683"/>00683 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;opt-&gt;getDim();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00684"/>00684 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;popsize&#32;=&#32;opt-&gt;getPopsize();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc">mat</link>&#32;pop&#32;=&#32;opt-&gt;getPopulation();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;popsize;&#32;p++)&#32;{
<anchor xml:id="_modeoptimizer_8cpp_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link>&#32;x&#32;=&#32;pop.col(p);
<anchor xml:id="_modeoptimizer_8cpp_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="_modeoptimizer_8cpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs[p&#32;*&#32;n&#32;+&#32;i]&#32;=&#32;x[i];
<anchor xml:id="_modeoptimizer_8cpp_source_1l00690"/>00690 &#32;&#32;&#32;&#32;}
<anchor xml:id="_modeoptimizer_8cpp_source_1l00691"/>00691 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opt-&gt;getStop();
<anchor xml:id="_modeoptimizer_8cpp_source_1l00692"/>00692 }
<anchor xml:id="_modeoptimizer_8cpp_source_1l00693"/>00693 }
</programlisting></section>

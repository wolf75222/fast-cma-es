<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_advexamples_8py_source" xml:lang="en-US">
<title>advexamples.py</title>
<indexterm><primary>examples/advexamples.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_advexamples_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1advexamples">00001</link> <emphasis role="comment">#&#32;Copyright&#32;(c)&#32;Dietmar&#32;Wolz.</emphasis>
<anchor xml:id="_advexamples_8py_source_1l00002"/>00002 <emphasis role="comment">#</emphasis>
<anchor xml:id="_advexamples_8py_source_1l00003"/>00003 <emphasis role="comment">#&#32;This&#32;source&#32;code&#32;is&#32;licensed&#32;under&#32;the&#32;MIT&#32;license&#32;found&#32;in&#32;the</emphasis>
<anchor xml:id="_advexamples_8py_source_1l00004"/>00004 <emphasis role="comment">#&#32;LICENSE&#32;file&#32;in&#32;the&#32;root&#32;directory.</emphasis>
<anchor xml:id="_advexamples_8py_source_1l00005"/>00005 
<anchor xml:id="_advexamples_8py_source_1l00006"/>00006 <emphasis role="comment">#&#32;Examples&#32;for&#32;fcmaes&#32;coordinated&#32;retry&#32;from&#32;https://www.esa.int/gsp/ACT/projects/gtop/</emphasis>
<anchor xml:id="_advexamples_8py_source_1l00007"/>00007 <emphasis role="comment">#&#32;Used&#32;to&#32;generate&#32;the&#32;results&#32;in&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Results.adoc</emphasis>
<anchor xml:id="_advexamples_8py_source_1l00008"/>00008 
<anchor xml:id="_advexamples_8py_source_1l00009"/>00009 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.2</emphasis>
<anchor xml:id="_advexamples_8py_source_1l00010"/>00010 
<anchor xml:id="_advexamples_8py_source_1l00011"/>00011 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1astro">fcmaes.astro</link>&#32;<emphasis role="keyword">import</emphasis>&#32;MessFull,&#32;Messenger,&#32;Cassini2,&#32;Rosetta,&#32;Gtoc1,&#32;Cassini1,&#32;Tandem,&#32;Sagas,&#32;Cassini1minlp
<anchor xml:id="_advexamples_8py_source_1l00012"/>00012 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;de_cma,&#32;de_cma_py,&#32;da_cma,&#32;Cma_cpp,&#32;De_cpp,&#32;Da_cpp,&#32;Dual_annealing,&#32;Differential_evolution
<anchor xml:id="_advexamples_8py_source_1l00013"/>00013 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;advretry
<anchor xml:id="_advexamples_8py_source_1l00014"/>00014 
<anchor xml:id="_advexamples_8py_source_1l00015"/>00015 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_advexamples_8py_source_1l00016"/>00016 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_advexamples_8py_source_1l00017"/>00017 
<anchor xml:id="_advexamples_8py_source_1l00018"/>00018 logger.remove()
<anchor xml:id="_advexamples_8py_source_1l00019"/><link linkend="_namespaceexamples_1_1advexamples_1ae8c80a7376195db7691268fbb40e1f13">00019</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_advexamples_8py_source_1l00020"/>00020 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_advexamples_8py_source_1l00021"/>00021 
<anchor xml:id="_advexamples_8py_source_1l00022"/><link linkend="_namespaceexamples_1_1advexamples_1af104a8054f05417e1d6b18ee536e1ca3">00022</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1advexamples_1af104a8054f05417e1d6b18ee536e1ca3">messengerFullLoop</link>(opt,&#32;num&#32;=&#32;1,):&#32;&#32;&#32;&#32;
<anchor xml:id="_advexamples_8py_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(num):
<anchor xml:id="_advexamples_8py_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem&#32;=&#32;<link linkend="_classfcmaes_1_1astro_1_1_mess_full">MessFull</link>()
<anchor xml:id="_advexamples_8py_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(problem.name&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;opt.name)
<anchor xml:id="_advexamples_8py_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;str(i+1)&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;problem.name&#32;<emphasis role="keywordflow">if</emphasis>&#32;num&#32;&gt;&#32;1&#32;<emphasis role="keywordflow">else</emphasis>&#32;problem.name
<anchor xml:id="_advexamples_8py_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;advretry.minimize_plot(name,&#32;opt,&#32;problem.fun,&#32;
<anchor xml:id="_advexamples_8py_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem.bounds,&#32;12.0,&#32;12.0,&#32;50000)
<anchor xml:id="_advexamples_8py_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advexamples_8py_source_1l00030"/><link linkend="_namespaceexamples_1_1advexamples_1a06cd80bb729c861f36e45723b48ed013">00030</link> problems&#32;=&#32;[<link linkend="_classfcmaes_1_1astro_1_1_cassini1">Cassini1</link>(),&#32;<link linkend="_classfcmaes_1_1astro_1_1_cassini2">Cassini2</link>(),&#32;<link linkend="_classfcmaes_1_1astro_1_1_rosetta">Rosetta</link>(),&#32;<link linkend="_classfcmaes_1_1astro_1_1_tandem">Tandem</link>(5),&#32;<link linkend="_classfcmaes_1_1astro_1_1_messenger">Messenger</link>(),&#32;<link linkend="_classfcmaes_1_1astro_1_1_gtoc1">Gtoc1</link>(),&#32;<link linkend="_classfcmaes_1_1astro_1_1_mess_full">MessFull</link>(),&#32;<link linkend="_classfcmaes_1_1astro_1_1_sagas">Sagas</link>(),&#32;<link linkend="_classfcmaes_1_1astro_1_1_cassini1minlp">Cassini1minlp</link>()]
<anchor xml:id="_advexamples_8py_source_1l00031"/>00031 
<anchor xml:id="_advexamples_8py_source_1l00032"/><link linkend="_namespaceexamples_1_1advexamples_1afb9d784b8ee0668c4d9613b75f2b87a8">00032</link> min_evals&#32;=&#32;1500
<anchor xml:id="_advexamples_8py_source_1l00033"/>00033 
<anchor xml:id="_advexamples_8py_source_1l00034"/><link linkend="_namespaceexamples_1_1advexamples_1a356d2c98290d0378f8bf28fbdcc9a653">00034</link> algos&#32;=&#32;[&#32;de_cma(min_evals),&#32;da_cma(min_evals),&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_cma__cpp">Cma_cpp</link>(min_evals),&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_de__cpp">De_cpp</link>(min_evals),&#32;
<anchor xml:id="_advexamples_8py_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_da__cpp">Da_cpp</link>(min_evals),&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_dual__annealing">Dual_annealing</link>(min_evals),&#32;<link linkend="_classfcmaes_1_1optimizer_1_1_differential__evolution">Differential_evolution</link>(min_evals),&#32;de_cma_py(min_evals)]
<anchor xml:id="_advexamples_8py_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advexamples_8py_source_1l00037"/><link linkend="_namespaceexamples_1_1advexamples_1a2a20839039b9a15bbb1b28922a43fbc9">00037</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1advexamples_1a2a20839039b9a15bbb1b28922a43fbc9">test_all</link>(num_retries&#32;=&#32;1000,&#32;num&#32;=&#32;1):
<anchor xml:id="_advexamples_8py_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;problem&#32;<emphasis role="keywordflow">in</emphasis>&#32;problems:
<anchor xml:id="_advexamples_8py_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;algo&#32;<emphasis role="keywordflow">in</emphasis>&#32;algos:
<anchor xml:id="_advexamples_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1advexamples_1aebec6bee380e8587e7a76863116c6533">_test_optimizer</link>(algo,&#32;problem,&#32;num_retries,&#32;num,&#32;value_limit&#32;=&#32;1E99)&#32;
<anchor xml:id="_advexamples_8py_source_1l00041"/>00041 
<anchor xml:id="_advexamples_8py_source_1l00042"/><link linkend="_namespaceexamples_1_1advexamples_1aebec6bee380e8587e7a76863116c6533">00042</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1advexamples_1aebec6bee380e8587e7a76863116c6533">_test_optimizer</link>(opt,&#32;problem,&#32;num_retries&#32;=&#32;10000,&#32;num&#32;=&#32;1,&#32;value_limit&#32;=&#32;100.0):
<anchor xml:id="_advexamples_8py_source_1l00043"/>00043 &#32;&#32;&#32;&#32;logger.info(problem.name&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;opt.name)
<anchor xml:id="_advexamples_8py_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(num):
<anchor xml:id="_advexamples_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;str(i+1)&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;problem.name&#32;<emphasis role="keywordflow">if</emphasis>&#32;num&#32;&gt;&#32;1&#32;<emphasis role="keywordflow">else</emphasis>&#32;problem.name
<anchor xml:id="_advexamples_8py_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;advretry.minimize_plot(name,&#32;opt,&#32;problem.fun,&#32;
<anchor xml:id="_advexamples_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem.bounds,&#32;value_limit,&#32;10.0,&#32;num_retries)
<anchor xml:id="_advexamples_8py_source_1l00048"/>00048 
<anchor xml:id="_advexamples_8py_source_1l00049"/><link linkend="_namespaceexamples_1_1advexamples_1a84fbed51a59ef6d65f1ed69b8dc9f709">00049</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1advexamples_1a84fbed51a59ef6d65f1ed69b8dc9f709">main</link>():
<anchor xml:id="_advexamples_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1advexamples_1a2a20839039b9a15bbb1b28922a43fbc9">test_all</link>()
<anchor xml:id="_advexamples_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="comment">#messengerFullLoop(de_cma(min_evals))</emphasis>
<anchor xml:id="_advexamples_8py_source_1l00052"/>00052 
<anchor xml:id="_advexamples_8py_source_1l00053"/>00053 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_advexamples_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1advexamples_1a84fbed51a59ef6d65f1ed69b8dc9f709">main</link>()
<anchor xml:id="_advexamples_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;
</programlisting></section>

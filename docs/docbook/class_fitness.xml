<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_fitness" xml:lang="en-US">
<title>Fitness Class Reference</title>
<indexterm><primary>Fitness</primary></indexterm>
<para>
<computeroutput>#include &lt;evaluator.h&gt;</computeroutput>
</para>
Collaboration diagram for Fitness:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2">Fitness</link> (<link linkend="_evaluator_8h_1af419da391481d5e767cbe038009da309">callback_type</link> func, <link linkend="_evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc">callback_parallel</link> func_par_, int dim, int nobj, const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;lower, const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;upper)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_fitness_1a08a70acdfa7636ae3285e3576c9e3d11">terminate</link> ()</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1aad187f1bc51d22a4dbca1a2dc8633bc2">eval</link> (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X)</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1ad7d85700ac92bf7e332fcc3c4855e55c">eval</link> (const double *const p)</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1a2085e5ce1a0afa5949366f580d5ec5a4">getClosestFeasible</link> (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X) const</para>
</listitem>
            <listitem><para>double <link linkend="_class_fitness_1a1bc40ec5454b560389975e2a9ef8942e">getClosestFeasible_i</link> (int i, double x_i)</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1aba037e55263004819068b5076532b4bf">getClosestFeasibleNormed</link> (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_fitness_1a8f1605fc965e423d17c837cfba3dc4c6">setClosestFeasible</link> (<link linkend="_evaluator_8h_1af0f7533253586ad2aba962e9537d90bc">mat</link> &amp;X) const</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1ac9bd4bd8b140939a1fd9507160bc0b07">norm</link> (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X) const</para>
</listitem>
            <listitem><para>double <link linkend="_class_fitness_1a57913ab2b23ab85ae2eab0f0a3a27961">norm_i</link> (int i, double x) const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_fitness_1a5d1edacb197d16faf0d3b2c035ab2308">feasible</link> (int i, double x)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_fitness_1a171aed8b88b47ea516a37453cb958948">hasBounds</link> ()</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1a0bfcc395cf728a4b91e740f4197f927b">sample</link> (pcg64 &amp;rs)</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1ae05d628784c7ca1954d012f23e82abf5">sample</link> (pcg64 &amp;rs, <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;up, <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;lo)</para>
</listitem>
            <listitem><para>double <link linkend="_class_fitness_1a517d31dc4378bfb8d94db9ccedaf948b">sample_i</link> (int i, pcg64 &amp;rs)</para>
</listitem>
            <listitem><para>double <link linkend="_class_fitness_1a34d84883637889310f026e2aed3d1bf3">sample_i</link> (int i, pcg64 &amp;rs, <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;up, <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;lo)</para>
</listitem>
            <listitem><para>int <link linkend="_class_fitness_1aba60038eac4e0e15d995e57f4ba079e1">evaluations</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_fitness_1adc49c4f7f25822a081a412af0acb51c4">resetEvaluations</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_fitness_1a4ebdd48fa1e3dea8040c9c7bcf98aa17">incrEvaluations</link> ()</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1a13571dee4e75e03d9c421a42cae811b3">scale</link> ()</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1a28d387d040da4d881537965535892e8a">typx</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6">setNormalize</link> (bool normalize)</para>
</listitem>
            <listitem><para>void <link linkend="_class_fitness_1ac511c0bb7aaf678184edfca41d4e1a81">setTerminate</link> ()</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1ab56956f8f382ffe1b9de9d35d156a65e">encode</link> (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X) const</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1a7fdca1fda75e3976b91e1e9e0eb12057">decode</link> (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;X) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce">values</link> (const <link linkend="_evaluator_8h_1af0f7533253586ad2aba962e9537d90bc">mat</link> &amp;popX, <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp;ys)</para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1a233793c918d3978ec0e52ef8431102b6">violations</link> (const <link linkend="_evaluator_8h_1af0f7533253586ad2aba962e9537d90bc">mat</link> &amp;X, double penalty_coef)</para>
</listitem>
            <listitem><para>void <link linkend="_class_fitness_1a437e35b1a2557879b07e22de801a9855">getMinValues</link> (double *const p) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_fitness_1ab25d3d92db939b7e739f97ea73907a71">getMaxValues</link> (double *const p) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_evaluator_8h_1af419da391481d5e767cbe038009da309">callback_type</link> <link linkend="_class_fitness_1a4a7797a662230b7f29774339a5a32b73">_func</link></para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc">callback_parallel</link> <link linkend="_class_fitness_1aeb85d0ee0818d8c995c2e829dbc44c3a">_func_par</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_fitness_1a573c650b339da5518a559d444e28eae4">_dim</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_fitness_1af000c91778d06c45b09cd36c83d76d9f">_nobj</link></para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1abd64428a6046b128b3b142a2a030968f">_lower</link></para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee">_upper</link></para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302">_scale</link></para>
</listitem>
            <listitem><para><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> <link linkend="_class_fitness_1a576f73240084816d6a42e61d04290a2e">_typx</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_fitness_1ad522e44cbf9016953cd3ecaa5aaf657e">_normalize</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_fitness_1a14b92585c6089d0ee1dc7663c9868d5d">_terminate</link></para>
</listitem>
            <listitem><para>long <link linkend="_class_fitness_1a37d7bfa82125022b6c648f5976fd5275">_evaluationCounter</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_evaluator_8h_source_1l00191">191</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2"/><section>
    <title>Fitness()</title>
<indexterm><primary>Fitness</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>Fitness</secondary></indexterm>
<para><computeroutput>Fitness::Fitness (<link linkend="_evaluator_8h_1af419da391481d5e767cbe038009da309">callback_type</link> func, <link linkend="_evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc">callback_parallel</link> func_par_, int dim, int nobj, const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; lower, const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; upper)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00195">195</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_fitness_1a7fdca1fda75e3976b91e1e9e0eb12057"/><section>
    <title>decode()</title>
<indexterm><primary>decode</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>decode</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::decode (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00348">348</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_a7fdca1fda75e3976b91e1e9e0eb12057_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_fitness_1ab56956f8f382ffe1b9de9d35d156a65e"/><section>
    <title>encode()</title>
<indexterm><primary>encode</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>encode</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::encode (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00341">341</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_ab56956f8f382ffe1b9de9d35d156a65e_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_fitness_1ad7d85700ac92bf7e332fcc3c4855e55c"/><section>
    <title>eval()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>eval</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>eval</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::eval (const double *const p)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00228">228</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1aad187f1bc51d22a4dbca1a2dc8633bc2"/><section>
    <title>eval()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>eval</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>eval</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::eval (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00216">216</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1aba60038eac4e0e15d995e57f4ba079e1"/><section>
    <title>evaluations()</title>
<indexterm><primary>evaluations</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>evaluations</secondary></indexterm>
<para><computeroutput>int Fitness::evaluations ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00313">313</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_aba60038eac4e0e15d995e57f4ba079e1_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_fitness_1a5d1edacb197d16faf0d3b2c035ab2308"/><section>
    <title>feasible()</title>
<indexterm><primary>feasible</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>feasible</secondary></indexterm>
<para><computeroutput>bool Fitness::feasible (int i, double x)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00283">283</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a2085e5ce1a0afa5949366f580d5ec5a4"/><section>
    <title>getClosestFeasible()</title>
<indexterm><primary>getClosestFeasible</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>getClosestFeasible</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::getClosestFeasible (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00240">240</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_a2085e5ce1a0afa5949366f580d5ec5a4_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_fitness_1a1bc40ec5454b560389975e2a9ef8942e"/><section>
    <title>getClosestFeasible_i()</title>
<indexterm><primary>getClosestFeasible_i</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>getClosestFeasible_i</secondary></indexterm>
<para><computeroutput>double Fitness::getClosestFeasible_i (int i, double x_i)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00246">246</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1aba037e55263004819068b5076532b4bf"/><section>
    <title>getClosestFeasibleNormed()</title>
<indexterm><primary>getClosestFeasibleNormed</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>getClosestFeasibleNormed</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::getClosestFeasibleNormed (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00250">250</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1ab25d3d92db939b7e739f97ea73907a71"/><section>
    <title>getMaxValues()</title>
<indexterm><primary>getMaxValues</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>getMaxValues</secondary></indexterm>
<para><computeroutput>void Fitness::getMaxValues (double *const p) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00389">389</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a437e35b1a2557879b07e22de801a9855"/><section>
    <title>getMinValues()</title>
<indexterm><primary>getMinValues</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>getMinValues</secondary></indexterm>
<para><computeroutput>void Fitness::getMinValues (double *const p) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00384">384</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a171aed8b88b47ea516a37453cb958948"/><section>
    <title>hasBounds()</title>
<indexterm><primary>hasBounds</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>hasBounds</secondary></indexterm>
<para><computeroutput>bool Fitness::hasBounds ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00287">287</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a4ebdd48fa1e3dea8040c9c7bcf98aa17"/><section>
    <title>incrEvaluations()</title>
<indexterm><primary>incrEvaluations</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>incrEvaluations</secondary></indexterm>
<para><computeroutput>void Fitness::incrEvaluations ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00321">321</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1ac9bd4bd8b140939a1fd9507160bc0b07"/><section>
    <title>norm()</title>
<indexterm><primary>norm</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>norm</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::norm (const <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; X) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00271">271</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a57913ab2b23ab85ae2eab0f0a3a27961"/><section>
    <title>norm_i()</title>
<indexterm><primary>norm_i</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>norm_i</secondary></indexterm>
<para><computeroutput>double Fitness::norm_i (int i, double x) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00277">277</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1adc49c4f7f25822a081a412af0acb51c4"/><section>
    <title>resetEvaluations()</title>
<indexterm><primary>resetEvaluations</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>resetEvaluations</secondary></indexterm>
<para><computeroutput>void Fitness::resetEvaluations ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00317">317</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a0bfcc395cf728a4b91e740f4197f927b"/><section>
    <title>sample()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>sample</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>sample</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::sample (pcg64 &amp; rs)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00291">291</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_a0bfcc395cf728a4b91e740f4197f927b_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_fitness_1ae05d628784c7ca1954d012f23e82abf5"/><section>
    <title>sample()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>sample</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>sample</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::sample (pcg64 &amp; rs, <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; up, <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; lo)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00298">298</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_ae05d628784c7ca1954d012f23e82abf5_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_fitness_1a517d31dc4378bfb8d94db9ccedaf948b"/><section>
    <title>sample_i()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>sample_i</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>sample_i</secondary></indexterm>
<para><computeroutput>double Fitness::sample_i (int i, pcg64 &amp; rs)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00303">303</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a34d84883637889310f026e2aed3d1bf3"/><section>
    <title>sample_i()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>sample_i</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>sample_i</secondary></indexterm>
<para><computeroutput>double Fitness::sample_i (int i, pcg64 &amp; rs, <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; up, <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; lo)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00309">309</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a13571dee4e75e03d9c421a42cae811b3"/><section>
    <title>scale()</title>
<indexterm><primary>scale</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>scale</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::scale ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00325">325</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a8f1605fc965e423d17c837cfba3dc4c6"/><section>
    <title>setClosestFeasible()</title>
<indexterm><primary>setClosestFeasible</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>setClosestFeasible</secondary></indexterm>
<para><computeroutput>void Fitness::setClosestFeasible (<link linkend="_evaluator_8h_1af0f7533253586ad2aba962e9537d90bc">mat</link> &amp; X) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00260">260</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6"/><section>
    <title>setNormalize()</title>
<indexterm><primary>setNormalize</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>setNormalize</secondary></indexterm>
<para><computeroutput>void Fitness::setNormalize (bool normalize)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00333">333</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_a31beb7ecb5fa49ac03b43abe444ab9a6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_fitness_1ac511c0bb7aaf678184edfca41d4e1a81"/><section>
    <title>setTerminate()</title>
<indexterm><primary>setTerminate</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>setTerminate</secondary></indexterm>
<para><computeroutput>void Fitness::setTerminate ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00337">337</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a08a70acdfa7636ae3285e3576c9e3d11"/><section>
    <title>terminate()</title>
<indexterm><primary>terminate</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>terminate</secondary></indexterm>
<para><computeroutput>bool Fitness::terminate ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00212">212</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_a08a70acdfa7636ae3285e3576c9e3d11_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_fitness_1a28d387d040da4d881537965535892e8a"/><section>
    <title>typx()</title>
<indexterm><primary>typx</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>typx</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::typx ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00329">329</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce"/><section>
    <title>values()</title>
<indexterm><primary>values</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>values</secondary></indexterm>
<para><computeroutput>void Fitness::values (const <link linkend="_evaluator_8h_1af0f7533253586ad2aba962e9537d90bc">mat</link> &amp; popX, <link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> &amp; ys)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00355">355</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_a780edd5ddec4867c4d59c4cd3995f6ce_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_a780edd5ddec4867c4d59c4cd3995f6ce_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_fitness_1a233793c918d3978ec0e52ef8431102b6"/><section>
    <title>violations()</title>
<indexterm><primary>violations</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>violations</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::violations (const <link linkend="_evaluator_8h_1af0f7533253586ad2aba962e9537d90bc">mat</link> &amp; X, double penalty_coef)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00371">371</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_a233793c918d3978ec0e52ef8431102b6_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_fitness_a233793c918d3978ec0e52ef8431102b6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_fitness_1a573c650b339da5518a559d444e28eae4"/><section>
    <title>_dim</title>
<indexterm><primary>_dim</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_dim</secondary></indexterm>
<para><computeroutput>int Fitness::_dim<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00397">397</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a37d7bfa82125022b6c648f5976fd5275"/><section>
    <title>_evaluationCounter</title>
<indexterm><primary>_evaluationCounter</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_evaluationCounter</secondary></indexterm>
<para><computeroutput>long Fitness::_evaluationCounter<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00405">405</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a4a7797a662230b7f29774339a5a32b73"/><section>
    <title>_func</title>
<indexterm><primary>_func</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_func</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1af419da391481d5e767cbe038009da309">callback_type</link> Fitness::_func<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00395">395</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1aeb85d0ee0818d8c995c2e829dbc44c3a"/><section>
    <title>_func_par</title>
<indexterm><primary>_func_par</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_func_par</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc">callback_parallel</link> Fitness::_func_par<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00396">396</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1abd64428a6046b128b3b142a2a030968f"/><section>
    <title>_lower</title>
<indexterm><primary>_lower</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_lower</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::_lower<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00399">399</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1af000c91778d06c45b09cd36c83d76d9f"/><section>
    <title>_nobj</title>
<indexterm><primary>_nobj</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_nobj</secondary></indexterm>
<para><computeroutput>int Fitness::_nobj<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00398">398</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1ad522e44cbf9016953cd3ecaa5aaf657e"/><section>
    <title>_normalize</title>
<indexterm><primary>_normalize</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_normalize</secondary></indexterm>
<para><computeroutput>bool Fitness::_normalize<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00403">403</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302"/><section>
    <title>_scale</title>
<indexterm><primary>_scale</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_scale</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::_scale<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00401">401</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a14b92585c6089d0ee1dc7663c9868d5d"/><section>
    <title>_terminate</title>
<indexterm><primary>_terminate</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_terminate</secondary></indexterm>
<para><computeroutput>bool Fitness::_terminate<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00404">404</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1a576f73240084816d6a42e61d04290a2e"/><section>
    <title>_typx</title>
<indexterm><primary>_typx</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_typx</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::_typx<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00402">402</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<anchor xml:id="_class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee"/><section>
    <title>_upper</title>
<indexterm><primary>_upper</primary><secondary>Fitness</secondary></indexterm>
<indexterm><primary>Fitness</primary><secondary>_upper</secondary></indexterm>
<para><computeroutput><link linkend="_evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f">vec</link> Fitness::_upper<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evaluator_8h_source_1l00400">400</link> of file <link linkend="_evaluator_8h_source">evaluator.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
_fcmaescpp/include/<link linkend="_evaluator_8h">evaluator.h</link></section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_cmaes_8py_source" xml:lang="en-US">
<title>cmaes.py</title>
<indexterm><primary>fcmaes/cmaes.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_cmaes_8py_source_1l00001"/><link linkend="_namespacefcmaes_1_1cmaes">00001</link> <emphasis role="comment">#&#32;-*-&#32;coding:&#32;utf-8&#32;-*-</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00002"/>00002 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00003"/>00003 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00004"/>00004 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00005"/>00005 <emphasis role="stringliteral">&#32;Fast&#32;CMA-ES&#32;-&#32;version&#32;1.6.11</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00006"/>00006 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00007"/>00007 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00008"/>00008 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Latitude</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00009"/>00009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00010"/>00010 <emphasis role="stringliteral">&#32;License:&#32;MIT</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00011"/>00011 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00012"/>00012 <emphasis role="stringliteral">&#32;File:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00013"/>00013 <emphasis role="stringliteral">&#32;&#32;-&#32;cmaes.py</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00014"/>00014 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00015"/>00015 <emphasis role="stringliteral">&#32;Description:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00016"/>00016 <emphasis role="stringliteral">&#32;&#32;-&#32;This&#32;module&#32;implements&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy&#32;(CMA-ES)</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00017"/>00017 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;for&#32;optimization&#32;tasks.&#32;It&#32;provides&#32;a&#32;framework&#32;for&#32;minimizing&#32;scalar&#32;functions</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00018"/>00018 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;using&#32;evolutionary&#32;strategies,&#32;with&#32;support&#32;for&#32;parallel&#32;execution&#32;and&#32;adaptive</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00019"/>00019 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;stopping&#32;criteria.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00020"/>00020 <emphasis role="stringliteral">&#32;&#32;-&#32;The&#32;implementation&#32;is&#32;based&#32;on&#32;the&#32;original&#32;CMA-ES&#32;algorithm&#32;and&#32;has&#32;been&#32;optimized</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00021"/>00021 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;for&#32;performance&#32;using&#32;NumPy&#32;and&#32;SciPy&#32;libraries.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00022"/>00022 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00023"/>00023 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00024"/>00024 <emphasis role="stringliteral">&#32;Authors:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00025"/>00025 <emphasis role="stringliteral">&#32;&#32;-&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00026"/>00026 <emphasis role="stringliteral">&#32;&#32;-&#32;romain.despoullains@latitude.eu</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00027"/>00027 <emphasis role="stringliteral">&#32;&#32;-&#32;corentin.generet@latitude.eu</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00028"/>00028 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00029"/>00029 <emphasis role="stringliteral">&#32;References:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00030"/>00030 <emphasis role="stringliteral">&#32;&#32;-&#32;[1]&#32;https://github.com/dietmarwo/fast-cma-es</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00031"/>00031 <emphasis role="stringliteral">&#32;&#32;-&#32;[2]&#32;http://cma.gforge.inria.fr/cmaes.m</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00032"/>00032 <emphasis role="stringliteral">&#32;&#32;-&#32;[3]&#32;https://www.researchgate.net/publication/227050324_The_CMA_Evolution_Strategy_A_Comparing_Review</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00033"/>00033 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00034"/>00034 <emphasis role="stringliteral">&#32;Documentation:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00035"/>00035 <emphasis role="stringliteral">&#32;&#32;-</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00036"/>00036 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00037"/>00037 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00038"/>00038 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00039"/>00039 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00040"/>00040 
<anchor xml:id="_cmaes_8py_source_1l00041"/>00041 <emphasis role="keyword">import</emphasis>&#32;sys
<anchor xml:id="_cmaes_8py_source_1l00042"/>00042 <emphasis role="keyword">import</emphasis>&#32;os
<anchor xml:id="_cmaes_8py_source_1l00043"/>00043 <emphasis role="keyword">import</emphasis>&#32;math
<anchor xml:id="_cmaes_8py_source_1l00044"/>00044 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_cmaes_8py_source_1l00045"/>00045 <emphasis role="keyword">from</emphasis>&#32;time&#32;<emphasis role="keyword">import</emphasis>&#32;time
<anchor xml:id="_cmaes_8py_source_1l00046"/>00046 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_cmaes_8py_source_1l00047"/>00047 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp
<anchor xml:id="_cmaes_8py_source_1l00048"/>00048 <emphasis role="keyword">from</emphasis>&#32;scipy&#32;<emphasis role="keyword">import</emphasis>&#32;linalg
<anchor xml:id="_cmaes_8py_source_1l00049"/>00049 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;OptimizeResult,&#32;Bounds
<anchor xml:id="_cmaes_8py_source_1l00050"/>00050 <emphasis role="keyword">from</emphasis>&#32;numpy.random&#32;<emphasis role="keyword">import</emphasis>&#32;PCG64DXSM,&#32;Generator
<anchor xml:id="_cmaes_8py_source_1l00051"/>00051 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1evaluator">fcmaes.evaluator</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Evaluator,&#32;serial,&#32;_check_bounds,&#32;_fitness,&#32;is_debug_active
<anchor xml:id="_cmaes_8py_source_1l00052"/>00052 
<anchor xml:id="_cmaes_8py_source_1l00053"/>00053 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_cmaes_8py_source_1l00054"/>00054 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;Optional,&#32;Callable,&#32;Union
<anchor xml:id="_cmaes_8py_source_1l00055"/>00055 <emphasis role="keyword">from</emphasis>&#32;numpy.typing&#32;<emphasis role="keyword">import</emphasis>&#32;ArrayLike
<anchor xml:id="_cmaes_8py_source_1l00056"/>00056 
<anchor xml:id="_cmaes_8py_source_1l00057"/>00057 os.environ[<emphasis role="stringliteral">&apos;MKL_DEBUG_CPU_TYPE&apos;</emphasis>]&#32;=&#32;<emphasis role="stringliteral">&apos;5&apos;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00058"/>00058 
<anchor xml:id="_cmaes_8py_source_1l00059"/>00059 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1cmaes_1ab8082e1fc4bdc2b20f0c1628e2923abd">minimize</link>(fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_cmaes_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Optional[Bounds]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;
<anchor xml:id="_cmaes_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_cmaes_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma:&#32;Optional[Union[float,&#32;ArrayLike,&#32;Callable]]&#32;=&#32;0.3,
<anchor xml:id="_cmaes_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,
<anchor xml:id="_cmaes_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;&#32;=&#32;100000,
<anchor xml:id="_cmaes_8py_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_iterations:&#32;Optional[int]&#32;&#32;=&#32;100000,
<anchor xml:id="_cmaes_8py_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;&#32;=&#32;1,
<anchor xml:id="_cmaes_8py_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;accuracy:&#32;Optional[float]&#32;=&#32;1.0,
<anchor xml:id="_cmaes_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_cmaes_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate:&#32;Optional[Callable[[ArrayLike,&#32;float],&#32;bool]]&#32;&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_cmaes_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),
<anchor xml:id="_cmaes_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runid:&#32;Optional[int]&#32;=&#32;0,
<anchor xml:id="_cmaes_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>,
<anchor xml:id="_cmaes_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;OptimizeResult:
<anchor xml:id="_cmaes_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00075"/>00075 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Minimizes&#32;a&#32;scalar&#32;function&#32;using&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00076"/>00076 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Strategy&#32;(CMA-ES)&#32;algorithm.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00077"/>00077 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00078"/>00078 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;is&#32;designed&#32;to&#32;handle&#32;optimization&#32;tasks&#32;for&#32;non-linear,&#32;non-convex,</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00079"/>00079 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;possibly&#32;noisy&#32;objective&#32;functions.&#32;It&#32;supports&#32;parallel&#32;execution&#32;via&#32;workers,</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00080"/>00080 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;normalization&#32;of&#32;the&#32;input&#32;search&#32;space,&#32;and&#32;adaptive&#32;stopping&#32;criteria&#32;based&#32;on&#32;given</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00081"/>00081 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;conditions.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00082"/>00082 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00083"/>00083 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00084"/>00084 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;be&#32;minimized.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00085"/>00085 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;should&#32;take&#32;an&#32;input&#32;array&#32;and&#32;return&#32;a&#32;scalar&#32;value.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00086"/>00086 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;The&#32;lower&#32;and&#32;upper&#32;bounds&#32;for&#32;the&#32;search&#32;space.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00087"/>00087 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;None,&#32;the&#32;search&#32;space&#32;is&#32;considered&#32;unbounded.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00088"/>00088 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;(Optional[ArrayLike]):&#32;Initial&#32;solution&#32;guess.&#32;If&#32;None,&#32;an&#32;initial&#32;guess</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00089"/>00089 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;will&#32;be&#32;generated&#32;randomly.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00090"/>00090 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma&#32;(Optional[Union[float,&#32;ArrayLike,&#32;Callable]]):&#32;The&#32;initial</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00091"/>00091 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;standard&#32;deviation&#32;for&#32;the&#32;sampling.&#32;Can&#32;be&#32;float,&#32;array,&#32;or&#32;callable.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00092"/>00092 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;The&#32;population&#32;size&#32;for&#32;the&#32;CMA-ES&#32;algorithm.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00093"/>00093 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;31.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00094"/>00094 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;function&#32;evaluations</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00095"/>00095 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allowed.&#32;Defaults&#32;to&#32;100,000.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00096"/>00096 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_iterations&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;iterations&#32;allowed</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00097"/>00097 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;the&#32;algorithm.&#32;Defaults&#32;to&#32;100,000.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00098"/>00098 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;Number&#32;of&#32;parallel&#32;processes&#32;to&#32;be&#32;used.&#32;If&#32;set</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00099"/>00099 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;1&#32;or&#32;less,&#32;the&#32;algorithm&#32;will&#32;run&#32;in&#32;serial&#32;mode.&#32;Defaults&#32;to&#32;1.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00100"/>00100 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;accuracy&#32;(Optional[float]):&#32;The&#32;accuracy&#32;tolerance&#32;used&#32;to&#32;adjust&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00101"/>00101 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;stopping&#32;criteria.&#32;Defaults&#32;to&#32;1.0.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00102"/>00102 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;Objective&#32;function&#32;value&#32;at&#32;which&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00103"/>00103 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process&#32;is&#32;terminated&#32;if&#32;reached.&#32;Defaults&#32;to&#32;-infinity.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00104"/>00104 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate&#32;(Optional[Callable[[ArrayLike,&#32;float],&#32;bool]]):&#32;Custom</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00105"/>00105 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;termination&#32;condition&#32;provided&#32;as&#32;a&#32;callable.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00106"/>00106 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;The&#32;random&#32;number&#32;generator&#32;to&#32;be&#32;used.&#32;Defaults</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00107"/>00107 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;`Generator(PCG64DXSM())`.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00108"/><link linkend="_namespacefcmaes_1_1cmaes_1ab8082e1fc4bdc2b20f0c1628e2923abd">00108</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runid&#32;(Optional[int]):&#32;Identifier&#32;for&#32;the&#32;optimization&#32;run.&#32;Defaults&#32;to&#32;0.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00109"/>00109 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;(Optional[bool]):&#32;Indicates&#32;if&#32;the&#32;search&#32;space&#32;should&#32;be&#32;normalized.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00110"/>00110 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;True.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00111"/>00111 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap&#32;(Optional[int]):&#32;Interval&#32;for&#32;delayed&#32;updates&#32;in&#32;the&#32;algorithm.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00112"/>00112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;None,&#32;updates&#32;are&#32;not&#32;delayed.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00113"/>00113 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00114"/>00114 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00115"/>00115 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult:&#32;Object&#32;containing&#32;the&#32;results&#32;of&#32;the&#32;optimization.&#32;Includes</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00116"/>00116 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimized&#32;solution&#32;(`x`),&#32;the&#32;minimized&#32;function&#32;value&#32;(`fun`),</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00117"/>00117 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;number&#32;of&#32;function&#32;evaluations&#32;(`nfev`),&#32;number&#32;of&#32;iterations&#32;(`nit`),</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00118"/>00118 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm&#32;exit&#32;status&#32;(`status`),&#32;and&#32;success&#32;flag&#32;(`success`).</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00119"/>00119 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00120"/>00120 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00121"/>00121 &#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;workers&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;workers&#32;&lt;=&#32;1:
<anchor xml:id="_cmaes_8py_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;=&#32;serial(fun)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;cmaes&#32;=&#32;<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes">Cmaes</link>(bounds,&#32;x0,&#32;
<anchor xml:id="_cmaes_8py_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma,&#32;popsize,&#32;
<anchor xml:id="_cmaes_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations,&#32;max_iterations,&#32;
<anchor xml:id="_cmaes_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;accuracy,&#32;stop_fitness,&#32;
<anchor xml:id="_cmaes_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate,&#32;rg,&#32;np.random.randn,&#32;runid,&#32;normalize,&#32;
<anchor xml:id="_cmaes_8py_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap,&#32;fun)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;workers&#32;<emphasis role="keywordflow">and</emphasis>&#32;workers&#32;&gt;&#32;1:
<anchor xml:id="_cmaes_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x,&#32;val,&#32;evals,&#32;iterations,&#32;stop&#32;=&#32;cmaes.do_optimize_delayed_update(fun,&#32;workers=workers)
<anchor xml:id="_cmaes_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x,&#32;val,&#32;evals,&#32;iterations,&#32;stop&#32;=&#32;cmaes.doOptimize()
<anchor xml:id="_cmaes_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;OptimizeResult(x=x,&#32;fun=val,&#32;nfev=evals,&#32;nit=iterations,&#32;status=stop,&#32;
<anchor xml:id="_cmaes_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;success=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_cmaes_8py_source_1l00136"/>00136 
<anchor xml:id="_cmaes_8py_source_1l00137"/>00137 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes">Cmaes</link>(object):
<anchor xml:id="_cmaes_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00139"/>00139 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Optimization&#32;solver&#32;implementing&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;Evolution&#32;Strategy&#32;(CMA-ES).</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00140"/>00140 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00141"/>00141 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;CMA-ES&#32;algorithm&#32;is&#32;an&#32;evolutionary&#32;strategy&#32;for&#32;solving&#32;complex&#32;optimization&#32;problems.&#32;This</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00142"/>00142 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;class&#32;is&#32;used&#32;to&#32;configure&#32;and&#32;execute&#32;the&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00143"/>00143 &#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00144"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes">00144</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a081d9143661974676245efab12c318cb">__init__</link>(self,&#32;bounds:&#32;Optional[Bounds]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_cmaes_8py_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0:&#32;Optional[ArrayLike]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_cmaes_8py_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma:&#32;Optional[Union[float,&#32;ArrayLike,&#32;Callable]]&#32;=&#32;0.3,
<anchor xml:id="_cmaes_8py_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,
<anchor xml:id="_cmaes_8py_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations:&#32;Optional[int]&#32;=&#32;100000,
<anchor xml:id="_cmaes_8py_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_iterations:&#32;Optional[int]&#32;=&#32;100000,
<anchor xml:id="_cmaes_8py_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;accuracy:&#32;Optional[int]&#32;=&#32;1.0,
<anchor xml:id="_cmaes_8py_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_cmaes_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate:&#32;Optional[bool]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_cmaes_8py_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;Optional[Generator]&#32;=&#32;Generator(PCG64DXSM()),&#32;<emphasis role="comment">#&#32;used&#32;if&#32;x0&#32;is&#32;undefined</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;randn:&#32;Optional[Callable]&#32;=&#32;np.random.randn,&#32;<emphasis role="comment">#&#32;used&#32;for&#32;random&#32;offspring&#32;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runid:&#32;Optional[int]&#32;=&#32;0,
<anchor xml:id="_cmaes_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize:&#32;Optional[bool]&#32;=&#32;<emphasis role="keyword">True</emphasis>,
<anchor xml:id="_cmaes_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_cmaes_8py_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Optional[Callable[[ArrayLike],&#32;float]]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;):
<anchor xml:id="_cmaes_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00161"/>00161 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;the&#32;optimizer&#32;with&#32;user-defined&#32;or&#32;default&#32;parameters.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00162"/>00162 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00163"/>00163 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;constructor&#32;sets&#32;up&#32;the&#32;configuration&#32;for&#32;the&#32;optimization&#32;process.&#32;Users&#32;can&#32;customize&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00164"/>00164 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initial&#32;state,&#32;population&#32;size,&#32;termination&#32;criteria,&#32;and&#32;other&#32;critical&#32;parameters&#32;to&#32;tune&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00165"/>00165 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;algorithm&apos;s&#32;behavior.&#32;The&#32;initialization&#32;process&#32;also&#32;ensures&#32;that&#32;random&#32;generation&#32;settings&#32;are</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00166"/>00166 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appropriately&#32;defined&#32;or&#32;defaulted.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00167"/>00167 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00168"/>00168 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00169"/>00169 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Optional[Bounds]):&#32;Specifies&#32;the&#32;boundaries&#32;within&#32;which&#32;the&#32;optimization&#32;will&#32;occur.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00170"/>00170 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;(Optional[ArrayLike]):&#32;Initial&#32;guess&#32;or&#32;starting&#32;point&#32;for&#32;optimization.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00171"/>00171 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma&#32;(Optional[Union[float,&#32;ArrayLike,&#32;Callable]]):&#32;Initial&#32;standard&#32;deviation&#32;of&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00172"/>00172 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distribution&#32;used&#32;in&#32;the&#32;optimization&#32;process,&#32;with&#32;a&#32;default&#32;value&#32;of&#32;0.3.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00173"/>00173 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;Population&#32;size&#32;for&#32;the&#32;evolutionary&#32;algorithm;&#32;default&#32;is&#32;31.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00174"/>00174 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;function&#32;evaluations&#32;allowed&#32;during&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00175"/>00175 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process;&#32;default&#32;is&#32;100000.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00176"/>00176 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_iterations&#32;(Optional[int]):&#32;Maximum&#32;number&#32;of&#32;optimization&#32;iterations;&#32;default&#32;is&#32;100000.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00177"/>00177 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;accuracy&#32;(Optional[int]):&#32;Desired&#32;accuracy&#32;or&#32;precision&#32;level&#32;for&#32;the&#32;optimization&#32;process,&#32;with</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00178"/>00178 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;default&#32;value&#32;of&#32;1.0.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00179"/>00179 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;Fitness&#32;value&#32;at&#32;which&#32;the&#32;optimization&#32;terminates&#32;early.&#32;The</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00180"/>00180 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;is&#32;negative&#32;infinity&#32;(-np.inf),&#32;implying&#32;no&#32;fitness-based&#32;stopping&#32;criterion.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00181"/>00181 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_terminate&#32;(Optional[bool]):&#32;Flag&#32;indicating&#32;whether&#32;early&#32;termination&#32;criteria&#32;are&#32;defined.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00182"/>00182 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;(Optional[Generator]):&#32;A&#32;generator&#32;object&#32;for&#32;random&#32;number&#32;generation,&#32;used&#32;if&#32;x0&#32;is</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00183"/>00183 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;undefined;&#32;the&#32;default&#32;is&#32;Generator(PCG64DXSM()).</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00184"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a081d9143661974676245efab12c318cb">00184</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;randn&#32;(Optional[Callable]):&#32;Function&#32;for&#32;generating&#32;random&#32;offspring&#32;during&#32;the&#32;optimization</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00185"/>00185 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process;&#32;default&#32;is&#32;`np.random.randn`.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00186"/>00186 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runid&#32;(Optional[int]):&#32;Identifier&#32;for&#32;the&#32;optimization&#32;run,&#32;useful&#32;for&#32;tracking&#32;multiple&#32;runs;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00187"/>00187 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;is&#32;0.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00188"/>00188 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalize&#32;(Optional[bool]):&#32;Flag&#32;indicating&#32;whether&#32;inputs&#32;should&#32;be&#32;normalized&#32;during&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00189"/>00189 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process;&#32;default&#32;is&#32;True.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00190"/>00190 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_gap&#32;(Optional[int]):&#32;Frequency&#32;of&#32;updating&#32;certain&#32;parameters&#32;or&#32;values&#32;in&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00191"/>00191 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00192"/>00192 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Optional[Callable[[ArrayLike],&#32;float]]):&#32;Objective&#32;function&#32;to&#32;be&#32;minimized&#32;or&#32;maximized.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00193"/>00193 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;should&#32;accept&#32;an&#32;array-like&#32;input&#32;and&#32;return&#32;a&#32;float&#32;value&#32;representing</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00194"/>00194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;objective&#32;value.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00195"/>00195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00196"/>00196 
<anchor xml:id="_cmaes_8py_source_1l00197"/>00197 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;runid&#32;used&#32;in&#32;is_terminate&#32;callback&#32;to&#32;identify&#32;a&#32;specific&#32;run&#32;at&#32;different&#32;iteration</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aaf84ee8e2f184fa2e5b5b49f681fb5ed">runid</link>&#32;=&#32;runid
<anchor xml:id="_cmaes_8py_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;bounds&#32;and&#32;guess</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower,&#32;upper,&#32;guess&#32;=&#32;_check_bounds(bounds,&#32;x0,&#32;rg)&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>&#32;=&#32;<link linkend="_classfcmaes_1_1evaluator_1_1__fitness">_fitness</link>(fun,&#32;lower,&#32;upper,&#32;normalize)
<anchor xml:id="_cmaes_8py_source_1l00202"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aaf84ee8e2f184fa2e5b5b49f681fb5ed">00202</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;initial&#32;guess&#32;for&#32;the&#32;arguments&#32;of&#32;the&#32;fitness&#32;function</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ad60e13f5cfc1f2c51e12bc24507708e9">guess</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.encode(guess)
<anchor xml:id="_cmaes_8py_source_1l00204"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ad60e13f5cfc1f2c51e12bc24507708e9">00204</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;random&#32;generators&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00205"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">00205</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a472913cd6e65e99db64b742fc0b348f8">rg</link>&#32;=&#32;rg&#32;<emphasis role="comment">#&#32;used&#32;if&#32;x0&#32;is&#32;undefined</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abc49c506631c8deb58566ce95a1b3069">randn</link>&#32;=&#32;randn&#32;<emphasis role="comment">#&#32;used&#32;for&#32;random&#32;offspring&#32;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;accuracy&#32;=&#32;1.0&#32;is&#32;default,&#32;&gt;&#32;1.0&#32;reduces&#32;accuracy</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae977d12b9b7f088beb9df50d43936122">accuracy</link>&#32;=&#32;accuracy
<anchor xml:id="_cmaes_8py_source_1l00209"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a472913cd6e65e99db64b742fc0b348f8">00209</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;callback&#32;to&#32;check&#32;if&#32;to&#32;terminate</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00210"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abc49c506631c8deb58566ce95a1b3069">00210</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a53ccd69a742fb33d4a8c783cdcd2b51a">is_terminate</link>&#32;=&#32;is_terminate
<anchor xml:id="_cmaes_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Number&#32;of&#32;objective&#32;variables/problem&#32;dimension</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00212"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae977d12b9b7f088beb9df50d43936122">00212</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;=&#32;guess.size
<anchor xml:id="_cmaes_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;Population&#32;size,&#32;offspring&#32;number.&#32;The&#32;primary&#32;strategy&#32;parameter&#32;to&#32;play</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00214"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a53ccd69a742fb33d4a8c783cdcd2b51a">00214</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;with,&#32;which&#32;can&#32;be&#32;increased&#32;from&#32;its&#32;default&#32;value.&#32;Increasing&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;population&#32;size&#32;improves&#32;global&#32;search&#32;properties&#32;in&#32;exchange&#32;to&#32;speed.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00216"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">00216</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;Speed&#32;decreases,&#32;as&#32;a&#32;rule,&#32;at&#32;most&#32;linearly&#32;with&#32;increasing&#32;population</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;size.&#32;It&#32;is&#32;advisable&#32;to&#32;begin&#32;with&#32;the&#32;default&#32;small&#32;population&#32;size.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;popsize:
<anchor xml:id="_cmaes_8py_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">popsize</link>&#32;=&#32;popsize&#32;<emphasis role="comment">#population&#32;size</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_cmaes_8py_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">popsize</link>&#32;=&#32;4&#32;+&#32;int(3.&#32;*&#32;math.log(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>))
<anchor xml:id="_cmaes_8py_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;Individual&#32;sigma&#32;values&#32;-&#32;initial&#32;search&#32;volume.&#32;input_sigma&#32;determines</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00223"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">00223</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;the&#32;initial&#32;coordinate&#32;wise&#32;standard&#32;deviations&#32;for&#32;the&#32;search.&#32;Setting</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;SIGMA&#32;one&#32;third&#32;of&#32;the&#32;initial&#32;search&#32;region&#32;is&#32;appropriate.&#32;&#32;&#32;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;callable(input_sigma):
<anchor xml:id="_cmaes_8py_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input_sigma=<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abfb4fec954b64eec89f44d931515ed48">input_sigma</link>()
<anchor xml:id="_cmaes_8py_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;isinstance(input_sigma,&#32;list):
<anchor xml:id="_cmaes_8py_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a255bb1d29dc205cf8a37e794bb7fa209">insigma</link>&#32;=&#32;np.asarray(input_sigma)
<anchor xml:id="_cmaes_8py_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;np.isscalar(input_sigma):
<anchor xml:id="_cmaes_8py_source_1l00230"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abfb4fec954b64eec89f44d931515ed48">00230</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a255bb1d29dc205cf8a37e794bb7fa209">insigma</link>&#32;=&#32;np.full(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>,&#32;input_sigma)&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_cmaes_8py_source_1l00232"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a255bb1d29dc205cf8a37e794bb7fa209">00232</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a255bb1d29dc205cf8a37e794bb7fa209">insigma</link>&#32;=&#32;input_sigma
<anchor xml:id="_cmaes_8py_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Overall&#32;standard&#32;deviation&#32;-&#32;search&#32;volume.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>&#32;=&#32;max(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a255bb1d29dc205cf8a37e794bb7fa209">insigma</link>)
<anchor xml:id="_cmaes_8py_source_1l00235"/>00235 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;termination&#32;criteria</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00236"/>00236 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Maximal&#32;number&#32;of&#32;iterations&#32;allowed.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae9bf236b9972f1dbb22e45c0938591b3">max_evaluations</link>&#32;=&#32;max_evaluations
<anchor xml:id="_cmaes_8py_source_1l00238"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">00238</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa7a7a3eb4886eedbfa5e3b46c35adede">max_iterations</link>&#32;=&#32;max_iterations
<anchor xml:id="_cmaes_8py_source_1l00239"/>00239 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Limit&#32;for&#32;fitness&#32;value.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab77d778b85b64826f6a8e7c004387f35">stop_fitness</link>&#32;=&#32;stop_fitness
<anchor xml:id="_cmaes_8py_source_1l00241"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae9bf236b9972f1dbb22e45c0938591b3">00241</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Stop&#32;if&#32;x-changes&#32;larger&#32;stopTolUpX.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00242"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa7a7a3eb4886eedbfa5e3b46c35adede">00242</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afaa10b55e67589d51b3781645d801da2">stopTolUpX</link>&#32;=&#32;1e3&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>
<anchor xml:id="_cmaes_8py_source_1l00243"/>00243 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Stop&#32;if&#32;x-change&#32;smaller&#32;stopTolX.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00244"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab77d778b85b64826f6a8e7c004387f35">00244</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abebaeee4cae9bad0d9ea507610aad62a">stopTolX</link>&#32;=&#32;1e-11&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>&#32;*&#32;accuracy
<anchor xml:id="_cmaes_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Stop&#32;if&#32;fun-changes&#32;smaller&#32;stopTolFun.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00246"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afaa10b55e67589d51b3781645d801da2">00246</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87a139a9830d96524ee8cac362cc03a0">stopTolFun</link>&#32;=&#32;1e-12&#32;*&#32;accuracy
<anchor xml:id="_cmaes_8py_source_1l00247"/>00247 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Stop&#32;if&#32;back&#32;fun-changes&#32;smaller&#32;stopTolHistFun.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00248"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abebaeee4cae9bad0d9ea507610aad62a">00248</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aaa66313795089b51ff1f38a62e2664fd">stopTolHistFun</link>&#32;=&#32;1e-13&#32;*&#32;accuracy
<anchor xml:id="_cmaes_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;selection&#32;strategy&#32;parameters</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00250"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87a139a9830d96524ee8cac362cc03a0">00250</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Number&#32;of&#32;parents/points&#32;for&#32;recombination.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a3d8d08495e9ebae0cc1e8164f92bbda0">mu</link>&#32;=&#32;int(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">popsize</link>/2)
<anchor xml:id="_cmaes_8py_source_1l00252"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aaa66313795089b51ff1f38a62e2664fd">00252</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;timing&#32;/&#32;global&#32;best&#32;value&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_debug_active():
<anchor xml:id="_cmaes_8py_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7dc4517b21d000a43313255dd7f7b5ee">best_y</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;1E99)
<anchor xml:id="_cmaes_8py_source_1l00255"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a3d8d08495e9ebae0cc1e8164f92bbda0">00255</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a13f1cc130df08ee63adedf73d9bb0d45">n_evals</link>&#32;=&#32;mp.RawValue(ct.c_long,&#32;0)
<anchor xml:id="_cmaes_8py_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a83af54c38e948804ee8aceba231d25ab">time_0</link>&#32;=&#32;time()
<anchor xml:id="_cmaes_8py_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00258"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7dc4517b21d000a43313255dd7f7b5ee">00258</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Array&#32;for&#32;weighted&#32;recombination.&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00259"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a13f1cc130df08ee63adedf73d9bb0d45">00259</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">weights</link>&#32;=&#32;(np.log(np.arange(1,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a3d8d08495e9ebae0cc1e8164f92bbda0">mu</link>+1,&#32;1))&#32;*&#32;-1)&#32;+&#32;math.log(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a3d8d08495e9ebae0cc1e8164f92bbda0">mu</link>&#32;+&#32;0.5)
<anchor xml:id="_cmaes_8py_source_1l00260"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a83af54c38e948804ee8aceba231d25ab">00260</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sumw&#32;=&#32;np.sum(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">weights</link>)
<anchor xml:id="_cmaes_8py_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sumwq&#32;=&#32;np.einsum(<emphasis role="stringliteral">&apos;i,i-&gt;&apos;</emphasis>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">weights</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">weights</link>)
<anchor xml:id="_cmaes_8py_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">weights</link>&#32;*=&#32;1./sumw&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00263"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">00263</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Variance-effectiveness&#32;of&#32;sum&#32;w_i&#32;x_i.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00264"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a88afdde6c2904cd36c827facfb43e8a9">00264</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>&#32;=&#32;sumw&#32;*&#32;sumw&#32;/&#32;sumwq&#32;
<anchor xml:id="_cmaes_8py_source_1l00265"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2ca9e07a6a38eba18c3370262eb550fd">00265</link> 
<anchor xml:id="_cmaes_8py_source_1l00266"/>00266 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;dynamic&#32;strategy&#32;parameters&#32;and&#32;constants</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00267"/>00267 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Cumulation&#32;constant.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00268"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">00268</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a896dcfff9b45acea10fdf6f918ca8329">cc</link>&#32;=&#32;(4.&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)&#32;/&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;4.&#32;+&#32;2.&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)
<anchor xml:id="_cmaes_8py_source_1l00269"/>00269 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Cumulation&#32;constant&#32;for&#32;step-size.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a8c15e41b9f3e7d6eb11ff2112109cd52">cs</link>&#32;=&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>&#32;+&#32;2.)&#32;/&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>&#32;+&#32;3.)
<anchor xml:id="_cmaes_8py_source_1l00271"/>00271 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Damping&#32;for&#32;step-size.&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00272"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a896dcfff9b45acea10fdf6f918ca8329">00272</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa86568b2e35fa0abc9c44441370001b6">damps</link>&#32;=&#32;(1.&#32;+&#32;2.&#32;*&#32;max(0.,&#32;math.sqrt((self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>&#32;-&#32;1.)&#32;/&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;1.))&#32;-&#32;1.))&#32;*&#32;\
<anchor xml:id="_cmaes_8py_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max(0.3,&#32;1.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;/&#32;(1e-6&#32;+&#32;min(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa7a7a3eb4886eedbfa5e3b46c35adede">max_iterations</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae9bf236b9972f1dbb22e45c0938591b3">max_evaluations</link>/self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">popsize</link>)))&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a8c15e41b9f3e7d6eb11ff2112109cd52">cs</link>
<anchor xml:id="_cmaes_8py_source_1l00274"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a8c15e41b9f3e7d6eb11ff2112109cd52">00274</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Learning&#32;rate&#32;for&#32;rank-one&#32;update.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>&#32;=&#32;2.&#32;/&#32;((self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;1.3)&#32;*&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;1.3)&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>)
<anchor xml:id="_cmaes_8py_source_1l00276"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa86568b2e35fa0abc9c44441370001b6">00276</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Learning&#32;rate&#32;for&#32;rank-mu&#32;update&apos;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac4f76391f5b24411336fd43932b1f32d">ccovmu</link>&#32;=&#32;min(1.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>,&#32;2.&#32;*&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>&#32;-&#32;2.&#32;+&#32;1.&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>)&#32;\
<anchor xml:id="_cmaes_8py_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;((self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;2.)&#32;*&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;2.)&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>))
<anchor xml:id="_cmaes_8py_source_1l00279"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">00279</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Expectation&#32;of&#32;||N(0,I)||&#32;==&#32;norm(randn(N,1)).</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af748707b894a344fc39d3d933ddd6875">chiN</link>&#32;=&#32;math.sqrt(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)&#32;*&#32;(1.&#32;-&#32;1.&#32;/&#32;(4.&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)&#32;+&#32;1&#32;/&#32;(21.&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>))
<anchor xml:id="_cmaes_8py_source_1l00281"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac4f76391f5b24411336fd43932b1f32d">00281</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ad83a90d453bf38c57926596aab31f741">ccov1Sep</link>&#32;=&#32;min(1.,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>&#32;*&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;1.5)&#32;/&#32;3.)
<anchor xml:id="_cmaes_8py_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ad28c8205ed7b2094888c758757511eea">ccovmuSep</link>&#32;=&#32;min(1.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac4f76391f5b24411336fd43932b1f32d">ccovmu</link>&#32;*&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;1.5)&#32;/&#32;3.)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00283"/>00283 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;lazy&#32;covariance&#32;update&#32;gap</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00284"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af748707b894a344fc39d3d933ddd6875">00284</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abd695ddec4028c73504ddc1e56d9ddbb">lazy_update_gap</link>&#32;=&#32;1.&#32;/&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac4f76391f5b24411336fd43932b1f32d">ccovmu</link>&#32;+&#32;1e-23)&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;/&#32;10&#32;\
<anchor xml:id="_cmaes_8py_source_1l00285"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ad83a90d453bf38c57926596aab31f741">00285</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;update_gap&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">else</emphasis>&#32;update_gap
<anchor xml:id="_cmaes_8py_source_1l00286"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ad28c8205ed7b2094888c758757511eea">00286</link> 
<anchor xml:id="_cmaes_8py_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;CMA&#32;internal&#32;values&#32;-&#32;updated&#32;each&#32;generation</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00288"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abd695ddec4028c73504ddc1e56d9ddbb">00288</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Objective&#32;variables.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab23d2436d1c72f54ab99839058c1adf3">xmean</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ad60e13f5cfc1f2c51e12bc24507708e9">guess</link>
<anchor xml:id="_cmaes_8py_source_1l00290"/>00290 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Evolution&#32;path.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a72279ffee64f7ce0014f5a6f2a5dcbe2">pc</link>&#32;=&#32;np.zeros(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)
<anchor xml:id="_cmaes_8py_source_1l00292"/>00292 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Evolution&#32;path&#32;for&#32;sigma.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00293"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab23d2436d1c72f54ab99839058c1adf3">00293</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abf10f8059a83dd6d1d02c17f8c9317b0">ps</link>&#32;=&#32;np.zeros(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)
<anchor xml:id="_cmaes_8py_source_1l00294"/>00294 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Norm&#32;of&#32;ps,&#32;stored&#32;for&#32;efficiency.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00295"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a72279ffee64f7ce0014f5a6f2a5dcbe2">00295</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a6c0ece7221cef9045ab5c872974c78fc">normps</link>&#32;=&#32;math.sqrt(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abf10f8059a83dd6d1d02c17f8c9317b0">ps</link>&#32;@&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abf10f8059a83dd6d1d02c17f8c9317b0">ps</link>)
<anchor xml:id="_cmaes_8py_source_1l00296"/>00296 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Coordinate&#32;system.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00297"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abf10f8059a83dd6d1d02c17f8c9317b0">00297</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa02345ac78df378d92478bf7bb17362e">B</link>&#32;=&#32;np.eye(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00298"/>00298 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Diagonal&#32;of&#32;sqrt(D),&#32;stored&#32;for&#32;efficiency.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00299"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a6c0ece7221cef9045ab5c872974c78fc">00299</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a255bb1d29dc205cf8a37e794bb7fa209">insigma</link>&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>
<anchor xml:id="_cmaes_8py_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a02064e035283dd8a57de4869703c8977">diagC</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>
<anchor xml:id="_cmaes_8py_source_1l00301"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa02345ac78df378d92478bf7bb17362e">00301</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;B*D,&#32;stored&#32;for&#32;efficiency.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1addeb9c3f1881d703fcbdab203a81e8ba">BD</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa02345ac78df378d92478bf7bb17362e">B</link>&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>
<anchor xml:id="_cmaes_8py_source_1l00303"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">00303</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Covariance&#32;matrix.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00304"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a02064e035283dd8a57de4869703c8977">00304</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">C</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa02345ac78df378d92478bf7bb17362e">B</link>&#32;@&#32;(np.diag(np.ones(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>))&#32;@&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa02345ac78df378d92478bf7bb17362e">B</link>)
<anchor xml:id="_cmaes_8py_source_1l00305"/>00305 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Number&#32;of&#32;iterations&#32;already&#32;performed.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00306"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1addeb9c3f1881d703fcbdab203a81e8ba">00306</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;=&#32;0
<anchor xml:id="_cmaes_8py_source_1l00307"/>00307 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Size&#32;of&#32;history&#32;queue&#32;of&#32;best&#32;values.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00308"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">00308</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a91dd0137d82524d5c7f82d0992ca823c">historySize</link>&#32;=&#32;10&#32;+&#32;int(3.&#32;*&#32;10.&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;/&#32;popsize)&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00310"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">00310</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;=&#32;0
<anchor xml:id="_cmaes_8py_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afada885234491b531340c56405686608">last_update</link>&#32;=&#32;0
<anchor xml:id="_cmaes_8py_source_1l00312"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a91dd0137d82524d5c7f82d0992ca823c">00312</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;=&#32;0
<anchor xml:id="_cmaes_8py_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abe14f6b9326248e7d16f17edd05660c4">best_value</link>&#32;=&#32;sys.float_info.max
<anchor xml:id="_cmaes_8py_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a180e3a8a1099625f1d089209c93a6d85">best_x</link>&#32;=&#32;<emphasis role="keywordtype">None</emphasis>&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00315"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afada885234491b531340c56405686608">00315</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;History&#32;queue&#32;of&#32;best&#32;values.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00316"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">00316</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a37fe790f8441da81e8e25dd57ebe5e38">fitness_history</link>&#32;=&#32;np.full(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a91dd0137d82524d5c7f82d0992ca823c">historySize</link>,&#32;sys.float_info.max)
<anchor xml:id="_cmaes_8py_source_1l00317"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abe14f6b9326248e7d16f17edd05660c4">00317</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a37fe790f8441da81e8e25dd57ebe5e38">fitness_history</link>[0]&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abe14f6b9326248e7d16f17edd05660c4">best_value</link>&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00318"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a180e3a8a1099625f1d089209c93a6d85">00318</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00320"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a37fe790f8441da81e8e25dd57ebe5e38">00320</link> 
<anchor xml:id="_cmaes_8py_source_1l00321"/>00321 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a56c7e2c2ad921a3fc6263e5be6a873f8">ask</link>(self)&#32;-&gt;&#32;np.array:
<anchor xml:id="_cmaes_8py_source_1l00322"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">00322</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00323"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">00323</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generates&#32;a&#32;NumPy&#32;array&#32;by&#32;decoding&#32;elements&#32;in&#32;the&#32;current&#32;data&#32;structure.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00324"/>00324 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00325"/>00325 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;method&#32;processes&#32;elements&#32;stored&#32;in&#32;the&#32;internal&#32;structure,&#32;applies&#32;a&#32;decoding</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00326"/>00326 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mechanism&#32;via&#32;the&#32;fitfun&apos;s&#32;decode&#32;method,&#32;and&#32;produces&#32;an&#32;array&#32;containing&#32;the&#32;results.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00327"/>00327 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00328"/>00328 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00329"/>00329 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self:&#32;Instance&#32;of&#32;the&#32;class&#32;containing&#32;necessary&#32;properties&#32;and&#32;methods&#32;to&#32;execute</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00330"/>00330 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;decoding&#32;logic.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00331"/>00331 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00332"/>00332 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00333"/>00333 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.array:&#32;A&#32;NumPy&#32;array&#32;containing&#32;the&#32;decoded&#32;elements.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00334"/>00334 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00335"/>00335 
<anchor xml:id="_cmaes_8py_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aff1c6aff205dfd66b677b1237f3566e7">newArgs</link>()
<anchor xml:id="_cmaes_8py_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array([self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.decode(x)&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>])
<anchor xml:id="_cmaes_8py_source_1l00338"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a56c7e2c2ad921a3fc6263e5be6a873f8">00338</link> &#32;
<anchor xml:id="_cmaes_8py_source_1l00339"/>00339 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a398738e6fcf7fe101cce3257fb0d579d">tell</link>(self,&#32;
<anchor xml:id="_cmaes_8py_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys:&#32;np.ndarray,&#32;
<anchor xml:id="_cmaes_8py_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs:&#32;Optional[np.ndarray]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>)&#32;-&gt;&#32;int:
<anchor xml:id="_cmaes_8py_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00343"/>00343 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Processes&#32;the&#32;input&#32;function&#32;values&#32;and&#32;updates&#32;the&#32;internal&#32;state&#32;of&#32;the&#32;CMA-ES&#32;algorithm.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00344"/>00344 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00345"/>00345 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00346"/>00346 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;(np.ndarray):&#32;An&#32;array&#32;of&#32;objective&#32;function&#32;values&#32;corresponding&#32;to&#32;the&#32;solutions.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00347"/>00347 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;(Optional[np.ndarray]):&#32;An&#32;optional&#32;array&#32;of&#32;candidate&#32;solutions.&#32;If&#32;not&#32;provided,</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00348"/>00348 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;must&#32;have&#32;`arz`&#32;defined&#32;or&#32;`ask`&#32;must&#32;have&#32;been&#32;called&#32;prior.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00349"/>00349 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00350"/>00350 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00351"/>00351 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;stop&#32;condition&#32;value&#32;indicating&#32;the&#32;status&#32;of&#32;the&#32;CMA-ES&#32;run.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00352"/>00352 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00353"/>00353 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00354"/>00354 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueError:&#32;If&#32;`xs`&#32;is&#32;None&#32;and&#32;`arz`&#32;is&#32;not&#32;defined&#32;or&#32;`ask`&#32;has&#32;not&#32;been&#32;previously</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00355"/>00355 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;called.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00356"/>00356 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00357"/>00357 
<anchor xml:id="_cmaes_8py_source_1l00358"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a398738e6fcf7fe101cce3257fb0d579d">00358</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;xs&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_cmaes_8py_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_cmaes_8py_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;ValueError(<emphasis role="stringliteral">&apos;either&#32;call&#32;ask&#32;before&#32;or&#32;define&#32;xs&apos;</emphasis>)
<anchor xml:id="_cmaes_8py_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_cmaes_8py_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>&#32;=&#32;np.array([self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.encode(x)&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;xs])
<anchor xml:id="_cmaes_8py_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_cmaes_8py_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;=&#32;(linalg.inv(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1addeb9c3f1881d703fcbdab203a81e8ba">BD</link>)&#32;@&#32;\
<anchor xml:id="_cmaes_8py_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab23d2436d1c72f54ab99839058c1adf3">xmean</link>).transpose()&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>)).transpose()&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00366"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">00366</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception:
<anchor xml:id="_cmaes_8py_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:&#32;
<anchor xml:id="_cmaes_8py_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abc49c506631c8deb58566ce95a1b3069">randn</link>(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">popsize</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)
<anchor xml:id="_cmaes_8py_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>&#32;=&#32;np.asarray(ys)
<anchor xml:id="_cmaes_8py_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;+=&#32;1
<anchor xml:id="_cmaes_8py_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7dada2c399890feafb59c01d1f424ee5">updateCMA</link>()
<anchor xml:id="_cmaes_8py_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>
<anchor xml:id="_cmaes_8py_source_1l00374"/>00374 &#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00375"/>00375 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7d18b1bc7ca57941c7ca07bde288c8f5">population</link>(self)&#32;-&gt;&#32;np.array:
<anchor xml:id="_cmaes_8py_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00377"/>00377 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Decodes&#32;the&#32;given&#32;array&#32;of&#32;representations&#32;into&#32;their&#32;respective&#32;solutions.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00378"/>00378 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00379"/>00379 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;utilizes&#32;the&#32;decoding&#32;function&#32;defined&#32;by&#32;the&#32;`fitfun`&#32;attribute&#32;to</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00380"/>00380 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;convert&#32;the&#32;input&#32;array&#32;`arx`&#32;into&#32;a&#32;population&#32;of&#32;solutions.&#32;The&#32;returned&#32;value</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00381"/>00381 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;the&#32;decoded&#32;representation&#32;of&#32;the&#32;input&#32;data.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00382"/>00382 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00383"/>00383 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00384"/>00384 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.array:&#32;Decoded&#32;population&#32;solutions.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00385"/>00385 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.decode(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>)
<anchor xml:id="_cmaes_8py_source_1l00387"/>00387 
<anchor xml:id="_cmaes_8py_source_1l00388"/>00388 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a5c6955cf059c16dfea867a214b485501">result</link>(self)&#32;-&gt;&#32;OptimizeResult:
<anchor xml:id="_cmaes_8py_source_1l00389"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7d18b1bc7ca57941c7ca07bde288c8f5">00389</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00390"/>00390 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;the&#32;optimization&#32;result&#32;containing&#32;the&#32;details&#32;of&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00391"/>00391 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00392"/>00392 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;result&#32;is&#32;an&#32;instance&#32;of&#32;`OptimizeResult`,&#32;which&#32;summarizes&#32;the&#32;outcome</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00393"/>00393 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;the&#32;optimization,&#32;including&#32;the&#32;final&#32;optimum,&#32;function&#32;values,&#32;and</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00394"/>00394 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;additional&#32;side&#32;information.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00395"/>00395 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00396"/>00396 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00397"/>00397 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self:&#32;The&#32;instance&#32;of&#32;the&#32;class&#32;containing&#32;the&#32;optimization&#32;process&#32;data.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00398"/>00398 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00399"/>00399 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00400"/>00400 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult:&#32;A&#32;dataclass&#32;containing&#32;the&#32;following&#32;attributes:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00401"/>00401 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;x:&#32;The&#32;best&#32;solution&#32;found&#32;during&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00402"/>00402 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;fun:&#32;The&#32;value&#32;of&#32;the&#32;function&#32;at&#32;the&#32;best&#32;solution.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00403"/>00403 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;nfev:&#32;The&#32;number&#32;of&#32;function&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00404"/>00404 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;nit:&#32;The&#32;total&#32;number&#32;of&#32;iterations&#32;performed.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00405"/>00405 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;status:&#32;The&#32;status&#32;code&#32;indicating&#32;the&#32;stopping&#32;condition.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00406"/>00406 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;success:&#32;A&#32;boolean&#32;value&#32;indicating&#32;if&#32;the&#32;optimization&#32;was</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00407"/>00407 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;successful.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00408"/>00408 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00409"/>00409 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;OptimizeResult(x=self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a180e3a8a1099625f1d089209c93a6d85">best_x</link>,&#32;fun=self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abe14f6b9326248e7d16f17edd05660c4">best_value</link>,
<anchor xml:id="_cmaes_8py_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nfev=self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.evaluation_counter,&#32;
<anchor xml:id="_cmaes_8py_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nit=self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>,&#32;status=self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>,&#32;success=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_cmaes_8py_source_1l00413"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a5c6955cf059c16dfea867a214b485501">00413</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00414"/>00414 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab89a6f59ef9aafbe855a9547c80669f5">ask_one</link>(self)&#32;-&gt;&#32;np.array:
<anchor xml:id="_cmaes_8py_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00416"/>00416 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generates&#32;a&#32;single&#32;decoded&#32;solution&#32;vector&#32;based&#32;on&#32;the&#32;current&#32;distribution.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00417"/>00417 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00418"/>00418 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;utilizes&#32;the&#32;generated&#32;random&#32;numbers&#32;and&#32;transformation&#32;matrices&#32;to</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00419"/>00419 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;produce&#32;a&#32;candidate&#32;solution&#32;vector&#32;that&#32;adheres&#32;to&#32;feasibility&#32;constraints,&#32;while</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00420"/>00420 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;decoding&#32;it&#32;through&#32;the&#32;associated&#32;objective&#32;function.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00421"/>00421 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00422"/>00422 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00423"/>00423 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self:&#32;Instance&#32;of&#32;the&#32;class&#32;containing&#32;current&#32;state&#32;for&#32;generating&#32;a</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00424"/>00424 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;feasible&#32;and&#32;decoded&#32;solution&#32;vector.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00425"/>00425 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00426"/>00426 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00427"/>00427 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.array:&#32;A&#32;decoded&#32;feasible&#32;solution&#32;vector.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00428"/>00428 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arz&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abc49c506631c8deb58566ce95a1b3069">randn</link>(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)&#32;
<anchor xml:id="_cmaes_8py_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delta&#32;=&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1addeb9c3f1881d703fcbdab203a81e8ba">BD</link>&#32;@&#32;arz.transpose())&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>
<anchor xml:id="_cmaes_8py_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arx&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.closestFeasible(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab23d2436d1c72f54ab99839058c1adf3">xmean</link>&#32;+&#32;delta.transpose())&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00432"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab89a6f59ef9aafbe855a9547c80669f5">00432</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.decode(arx)
<anchor xml:id="_cmaes_8py_source_1l00433"/>00433 
<anchor xml:id="_cmaes_8py_source_1l00434"/>00434 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac7cbecf8b29fb1048bd4cc7ec900692c">tell_one</link>(self,
<anchor xml:id="_cmaes_8py_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y:&#32;float,&#32;
<anchor xml:id="_cmaes_8py_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;np.array)&#32;-&gt;&#32;int:
<anchor xml:id="_cmaes_8py_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00438"/>00438 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Processes&#32;the&#32;given&#32;fitness&#32;value&#32;and&#32;solution&#32;vector,&#32;performs&#32;updates</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00439"/>00439 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;internal&#32;data&#32;structures,&#32;and&#32;logs&#32;progress&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00440"/>00440 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00441"/>00441 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;evaluates&#32;and&#32;integrates&#32;a&#32;solution&#32;(x)&#32;and&#32;its&#32;corresponding</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00442"/>00442 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fitness&#32;value&#32;(y),&#32;updating&#32;the&#32;CMA-ES&#32;optimization&#32;state&#32;when&#32;the&#32;required</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00443"/>00443 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;population&#32;size&#32;is&#32;reached.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00444"/>00444 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00445"/>00445 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00446"/>00446 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y:&#32;A&#32;float&#32;representing&#32;the&#32;fitness&#32;value&#32;of&#32;the&#32;solution.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00447"/>00447 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x:&#32;A&#32;numpy&#32;array&#32;containing&#32;the&#32;solution.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00448"/>00448 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00449"/>00449 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00450"/>00450 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;An&#32;integer&#32;indicating&#32;whether&#32;the&#32;optimization&#32;process&#32;should&#32;stop.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00451"/>00451 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00452"/>00452 
<anchor xml:id="_cmaes_8py_source_1l00453"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac7cbecf8b29fb1048bd4cc7ec900692c">00453</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;type(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>)&#32;<emphasis role="keywordflow">is</emphasis>&#32;list:
<anchor xml:id="_cmaes_8py_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>&#32;=&#32;[]
<anchor xml:id="_cmaes_8py_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>&#32;=&#32;[]
<anchor xml:id="_cmaes_8py_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>.append(y)
<anchor xml:id="_cmaes_8py_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>.append(x)
<anchor xml:id="_cmaes_8py_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>)&#32;&gt;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">popsize</link>:
<anchor xml:id="_cmaes_8py_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>&#32;=&#32;np.asarray(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>)
<anchor xml:id="_cmaes_8py_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>&#32;=&#32;np.array([self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.encode(x)&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>])
<anchor xml:id="_cmaes_8py_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_cmaes_8py_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;=&#32;(linalg.inv(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1addeb9c3f1881d703fcbdab203a81e8ba">BD</link>)&#32;@&#32;\
<anchor xml:id="_cmaes_8py_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab23d2436d1c72f54ab99839058c1adf3">xmean</link>).transpose()&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>)).transpose()&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception:
<anchor xml:id="_cmaes_8py_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:&#32;
<anchor xml:id="_cmaes_8py_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abc49c506631c8deb58566ce95a1b3069">randn</link>(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">popsize</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)
<anchor xml:id="_cmaes_8py_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;+=&#32;1
<anchor xml:id="_cmaes_8py_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7dada2c399890feafb59c01d1f424ee5">updateCMA</link>()
<anchor xml:id="_cmaes_8py_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>&#32;=&#32;[]
<anchor xml:id="_cmaes_8py_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>&#32;=&#32;[]
<anchor xml:id="_cmaes_8py_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_debug_active():
<anchor xml:id="_cmaes_8py_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a13f1cc130df08ee63adedf73d9bb0d45">n_evals</link>.value&#32;+=&#32;1
<anchor xml:id="_cmaes_8py_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7dc4517b21d000a43313255dd7f7b5ee">best_y</link>.value&#32;<emphasis role="keywordflow">or</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a13f1cc130df08ee63adedf73d9bb0d45">n_evals</link>.value&#32;%&#32;1000&#32;==&#32;999:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7dc4517b21d000a43313255dd7f7b5ee">best_y</link>.value:&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7dc4517b21d000a43313255dd7f7b5ee">best_y</link>.value&#32;=&#32;y
<anchor xml:id="_cmaes_8py_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;time()&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a83af54c38e948804ee8aceba231d25ab">time_0</link>
<anchor xml:id="_cmaes_8py_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a13f1cc130df08ee63adedf73d9bb0d45">n_evals</link>.value
<anchor xml:id="_cmaes_8py_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;message&#32;=&#32;<emphasis role="stringliteral">&apos;&quot;c/t={0:.2f}&#32;c={1:d}&#32;t={2:.2f}&#32;y={3:.5f}&#32;yb={4:.5f}&#32;x={5!s}&apos;</emphasis>.format(
<anchor xml:id="_cmaes_8py_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c/t,&#32;c,&#32;t,&#32;y,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7dc4517b21d000a43313255dd7f7b5ee">best_y</link>.value,&#32;x)
<anchor xml:id="_cmaes_8py_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.debug(message)
<anchor xml:id="_cmaes_8py_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00484"/>00484 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aff1c6aff205dfd66b677b1237f3566e7">newArgs</link>(self):
<anchor xml:id="_cmaes_8py_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00486"/>00486 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Generates&#32;a&#32;new&#32;population&#32;of&#32;candidate&#32;solutions&#32;for&#32;optimization.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00487"/>00487 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00488"/>00488 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;method&#32;produces&#32;random&#32;offspring&#32;solutions&#32;based&#32;on&#32;the&#32;current&#32;mean&#32;and&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00489"/>00489 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;covariance&#32;matrix&#32;of&#32;the&#32;search&#32;distribution.&#32;These&#32;offspring&#32;are&#32;then&#32;adjusted</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00490"/>00490 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;ensure&#32;they&#32;are&#32;closest&#32;to&#32;feasible&#32;solutions&#32;within&#32;the&#32;search&#32;space.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00491"/>00491 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00492"/>00492 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00493"/>00493 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self:&#32;The&#32;instance&#32;of&#32;the&#32;class&#32;invoking&#32;this&#32;method.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00494"/>00494 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;generate&#32;random&#32;offspring</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abc49c506631c8deb58566ce95a1b3069">randn</link>(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">popsize</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delta&#32;=&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1addeb9c3f1881d703fcbdab203a81e8ba">BD</link>&#32;@&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>.transpose())&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>
<anchor xml:id="_cmaes_8py_source_1l00498"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aff1c6aff205dfd66b677b1237f3566e7">00498</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.closestFeasible(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab23d2436d1c72f54ab99839058c1adf3">xmean</link>&#32;+&#32;delta.transpose())&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00499"/>00499 &#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00500"/>00500 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae86966099ee875815394d69b087738f4">do_optimize_delayed_update</link>(self,&#32;fun,&#32;max_evals=None,&#32;workers=mp.cpu_count()):
<anchor xml:id="_cmaes_8py_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00502"/>00502 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Optimizes&#32;a&#32;given&#32;function&#32;asynchronously&#32;with&#32;delayed&#32;updates.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00503"/>00503 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00504"/>00504 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;performs&#32;optimization&#32;by&#32;evaluating&#32;the&#32;function&#32;in&#32;parallel.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00505"/>00505 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;uses&#32;a&#32;worker-based&#32;approach&#32;where&#32;several&#32;evaluations&#32;of&#32;`fun`&#32;are</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00506"/>00506 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;performed&#32;simultaneously&#32;to&#32;explore&#32;the&#32;parameter&#32;space.&#32;The&#32;results</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00507"/>00507 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;are&#32;processed&#32;iteratively&#32;to&#32;determine&#32;the&#32;best&#32;solution&#32;based&#32;on&#32;the&#32;given</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00508"/>00508 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;criteria.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00509"/>00509 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00510"/>00510 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00511"/>00511 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self:&#32;Represents&#32;the&#32;instance&#32;of&#32;the&#32;class&#32;in&#32;which&#32;this&#32;function&#32;is</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00512"/>00512 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defined.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00513"/>00513 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable&#32;optimization&#32;objective&#32;function&#32;to&#32;be&#32;minimized&#32;or&#32;maximized.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00514"/>00514 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evals:&#32;Optional;&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;to&#32;perform.&#32;If&#32;not</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00515"/>00515 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided,&#32;the&#32;default&#32;value&#32;of&#32;`self.max_evaluations`&#32;is&#32;used.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00516"/>00516 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional;&#32;The&#32;number&#32;of&#32;parallel&#32;workers&#32;to&#32;use&#32;for&#32;evaluating</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00517"/>00517 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;objective&#32;function.&#32;Defaults&#32;to&#32;the&#32;number&#32;of&#32;CPU&#32;cores.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00518"/>00518 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00519"/>00519 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00520"/>00520 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tuple:&#32;A&#32;tuple&#32;containing:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00521"/>00521 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;best_x:&#32;The&#32;best&#32;solution&#32;found&#32;for&#32;the&#32;input&#32;function.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00522"/>00522 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;best_value:&#32;The&#32;best&#32;function&#32;value&#32;found.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00523"/>00523 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;evals:&#32;The&#32;total&#32;number&#32;of&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00524"/>00524 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;iterations:&#32;The&#32;number&#32;of&#32;iterations&#32;completed&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00525"/>00525 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;stop:&#32;The&#32;stop&#32;condition&#32;or&#32;code&#32;signaling&#32;the&#32;termination&#32;reason.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00526"/>00526 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;max_evals&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_cmaes_8py_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae9bf236b9972f1dbb22e45c0938591b3">max_evaluations</link>&#32;=&#32;&#32;max_evals
<anchor xml:id="_cmaes_8py_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator&#32;=&#32;<link linkend="_classfcmaes_1_1evaluator_1_1_evaluator">Evaluator</link>(fun)
<anchor xml:id="_cmaes_8py_source_1l00530"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae86966099ee875815394d69b087738f4">00530</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator.start(workers)
<anchor xml:id="_cmaes_8py_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals_x&#32;=&#32;{}
<anchor xml:id="_cmaes_8py_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a94c7703c8ab62c0696018a9dec53e7ac">evals</link>&#32;=&#32;0;
<anchor xml:id="_cmaes_8py_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(workers):&#32;<emphasis role="comment">#&#32;fill&#32;queue</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab89a6f59ef9aafbe855a9547c80669f5">ask_one</link>()
<anchor xml:id="_cmaes_8py_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator.pipe[0].send((self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a94c7703c8ab62c0696018a9dec53e7ac">evals</link>,&#32;x))
<anchor xml:id="_cmaes_8py_source_1l00536"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a94c7703c8ab62c0696018a9dec53e7ac">00536</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals_x[self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a94c7703c8ab62c0696018a9dec53e7ac">evals</link>]&#32;=&#32;x&#32;<emphasis role="comment">#&#32;store&#32;x</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a94c7703c8ab62c0696018a9dec53e7ac">evals</link>&#32;+=&#32;1
<anchor xml:id="_cmaes_8py_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;<emphasis role="keyword">True</emphasis>:&#32;<emphasis role="comment">#&#32;read&#32;from&#32;pipe,&#32;tell&#32;es&#32;and&#32;create&#32;new&#32;x</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals,&#32;y&#32;=&#32;evaluator.pipe[0].recv()
<anchor xml:id="_cmaes_8py_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;evals_x[evals]&#32;<emphasis role="comment">#&#32;retrieve&#32;evaluated&#32;x</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;del&#32;evals_x[evals]
<anchor xml:id="_cmaes_8py_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac7cbecf8b29fb1048bd4cc7ec900692c">tell_one</link>(y,&#32;x)&#32;<emphasis role="comment">#&#32;tell&#32;evaluated&#32;x</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;stop&#32;!=&#32;0&#32;<emphasis role="keywordflow">or</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a94c7703c8ab62c0696018a9dec53e7ac">evals</link>&#32;&gt;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae9bf236b9972f1dbb22e45c0938591b3">max_evaluations</link>:
<anchor xml:id="_cmaes_8py_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>&#32;<emphasis role="comment">#&#32;shutdown&#32;worker&#32;if&#32;stop&#32;criteria&#32;met</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab89a6f59ef9aafbe855a9547c80669f5">ask_one</link>()&#32;<emphasis role="comment">#&#32;create&#32;new&#32;x</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator.pipe[0].send((self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a94c7703c8ab62c0696018a9dec53e7ac">evals</link>,&#32;x))&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals_x[self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a94c7703c8ab62c0696018a9dec53e7ac">evals</link>]&#32;=&#32;x&#32;&#32;<emphasis role="comment">#&#32;store&#32;x</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a94c7703c8ab62c0696018a9dec53e7ac">evals</link>&#32;+=&#32;1&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluator.stop()
<anchor xml:id="_cmaes_8py_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a180e3a8a1099625f1d089209c93a6d85">best_x</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abe14f6b9326248e7d16f17edd05660c4">best_value</link>,&#32;evals,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;
<anchor xml:id="_cmaes_8py_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00555"/>00555 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a974188898932b9c2ecacb33387c08fd8">doOptimize</link>(self):
<anchor xml:id="_cmaes_8py_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00557"/>00557 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Performs&#32;an&#32;optimization&#32;process&#32;within&#32;a&#32;generation&#32;loop&#32;until&#32;termination</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00558"/>00558 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;conditions&#32;are&#32;met.&#32;This&#32;method&#32;repeatedly&#32;generates&#32;candidate&#32;solutions,</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00559"/>00559 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluates&#32;them&#32;using&#32;the&#32;objective&#32;function,&#32;updates&#32;the&#32;optimization&#32;state,</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00560"/>00560 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;checks&#32;for&#32;stopping&#32;criteria.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00561"/>00561 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00562"/>00562 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00563"/>00563 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00564"/>00564 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00565"/>00565 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00566"/>00566 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tuple:&#32;A&#32;tuple&#32;containing&#32;the&#32;following&#32;elements:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00567"/>00567 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;best_x:&#32;The&#32;best&#32;solution&#32;found&#32;during&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00568"/>00568 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;best_value:&#32;The&#32;objective&#32;function&#32;value&#32;of&#32;the&#32;best&#32;solution.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00569"/>00569 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;fitfun.evaluation_counter:&#32;Total&#32;number&#32;of&#32;evaluations&#32;performed.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00570"/>00570 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;iterations:&#32;Total&#32;number&#32;of&#32;iterations&#32;executed.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00571"/>00571 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;stop:&#32;Stop&#32;flag&#32;indicating&#32;the&#32;reason&#32;for&#32;termination.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00572"/>00572 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;--------------------&#32;Generation&#32;Loop&#32;--------------------------------</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;<emphasis role="keyword">True</emphasis>:
<anchor xml:id="_cmaes_8py_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;&gt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa7a7a3eb4886eedbfa5e3b46c35adede">max_iterations</link>:
<anchor xml:id="_cmaes_8py_source_1l00576"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a974188898932b9c2ecacb33387c08fd8">00576</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;+=&#32;1
<anchor xml:id="_cmaes_8py_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.evaluation_counter&#32;&gt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae9bf236b9972f1dbb22e45c0938591b3">max_evaluations</link>:
<anchor xml:id="_cmaes_8py_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a56c7e2c2ad921a3fc6263e5be6a873f8">ask</link>()
<anchor xml:id="_cmaes_8py_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.values(xs)
<anchor xml:id="_cmaes_8py_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a398738e6fcf7fe101cce3257fb0d579d">tell</link>(ys,&#32;xs)
<anchor xml:id="_cmaes_8py_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;!=&#32;0:
<anchor xml:id="_cmaes_8py_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a180e3a8a1099625f1d089209c93a6d85">best_x</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abe14f6b9326248e7d16f17edd05660c4">best_value</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.evaluation_counter,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;
<anchor xml:id="_cmaes_8py_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00587"/>00587 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7dada2c399890feafb59c01d1f424ee5">updateCMA</link>(self):
<anchor xml:id="_cmaes_8py_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00589"/>00589 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Updates&#32;the&#32;evolutionary&#32;process&#32;using&#32;the&#32;Covariance&#32;Matrix&#32;Adaptation&#32;(CMA)</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00590"/>00590 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strategy.&#32;This&#32;method&#32;handles&#32;the&#32;main&#32;operational&#32;logic&#32;for&#32;adaptive&#32;step-size</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00591"/>00591 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;control,&#32;selection,&#32;recombination,&#32;fitness&#32;evaluation,&#32;constraint&#32;checking,&#32;and</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00592"/>00592 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diverse&#32;termination&#32;criteria&#32;during&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00593"/>00593 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00594"/>00594 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00595"/>00595 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self:&#32;Instance&#32;of&#32;the&#32;class&#32;to&#32;which&#32;this&#32;method&#32;belongs.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00596"/>00596 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00597"/>00597 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00598"/>00598 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;Returns&#32;-1&#32;if&#32;the&#32;fitness&#32;values&#32;contain&#32;NaN&#32;or&#32;infinite&#32;entries;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00599"/>00599 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;otherwise,&#32;returns&#32;nothing.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00600"/>00600 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Stop&#32;for&#32;Nan&#32;/&#32;infinite&#32;fitness&#32;values</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;np.isfinite(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>).sum()&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">popsize</link>:
<anchor xml:id="_cmaes_8py_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1
<anchor xml:id="_cmaes_8py_source_1l00604"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7dada2c399890feafb59c01d1f424ee5">00604</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Sort&#32;by&#32;fitness&#32;and&#32;compute&#32;weighted&#32;mean&#32;into&#32;xmean</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arindex&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>.argsort()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best_fitness&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>[arindex[0]]
<anchor xml:id="_cmaes_8py_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;worstFitness&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>[arindex[-1]]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abe14f6b9326248e7d16f17edd05660c4">best_value</link>&#32;&gt;&#32;best_fitness:
<anchor xml:id="_cmaes_8py_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abe14f6b9326248e7d16f17edd05660c4">best_value</link>&#32;=&#32;best_fitness
<anchor xml:id="_cmaes_8py_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a180e3a8a1099625f1d089209c93a6d85">best_x</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aab6158b518a6657e69010bb347c9d72f">fitfun</link>.decode(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>[arindex[0]])&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;best_fitness&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab77d778b85b64826f6a8e7c004387f35">stop_fitness</link>:
<anchor xml:id="_cmaes_8py_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;=&#32;1
<anchor xml:id="_cmaes_8py_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;
<anchor xml:id="_cmaes_8py_source_1l00614"/>00614 
<anchor xml:id="_cmaes_8py_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Calculate&#32;new&#32;xmean,&#32;this&#32;is&#32;selection&#32;and&#32;recombination</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xold&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab23d2436d1c72f54ab99839058c1adf3">xmean</link>&#32;<emphasis role="comment">#&#32;for&#32;speed&#32;up&#32;of&#32;Eq.&#32;(2)&#32;and&#32;(3)</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bestIndex&#32;=&#32;arindex[:self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a3d8d08495e9ebae0cc1e8164f92bbda0">mu</link>]&#32;
<anchor xml:id="_cmaes_8py_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bestArx&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a84f0007d9d933264673eb08e17e2bc8a">arx</link>[bestIndex]
<anchor xml:id="_cmaes_8py_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab23d2436d1c72f54ab99839058c1adf3">xmean</link>&#32;=&#32;np.transpose(bestArx)&#32;@&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">weights</link>
<anchor xml:id="_cmaes_8py_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bestArz&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>[bestIndex]
<anchor xml:id="_cmaes_8py_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zmean&#32;=&#32;np.transpose(bestArz)&#32;@&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">weights</link>
<anchor xml:id="_cmaes_8py_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hsig&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae3fd3fbe79efd9509bb8462382d63bdd">updateEvolutionPaths</link>(zmean,&#32;xold)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Adapt&#32;step&#32;size&#32;sigma&#32;-&#32;Eq.&#32;(5)</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>&#32;*=&#32;math.exp(min(1.0,&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a6c0ece7221cef9045ab5c872974c78fc">normps</link>&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af748707b894a344fc39d3d933ddd6875">chiN</link>&#32;-&#32;1.)&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a8c15e41b9f3e7d6eb11ff2112109cd52">cs</link>&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa86568b2e35fa0abc9c44441370001b6">damps</link>))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;&gt;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afada885234491b531340c56405686608">last_update</link>&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abd695ddec4028c73504ddc1e56d9ddbb">lazy_update_gap</link>:
<anchor xml:id="_cmaes_8py_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afada885234491b531340c56405686608">last_update</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>
<anchor xml:id="_cmaes_8py_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negccov&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afd8b8665d87f14c53cd60da16c932336">updateCovariance</link>(hsig,&#32;bestArx,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a219b889766de63a8dcca256df781a0e5">arz</link>,&#32;arindex,&#32;xold)
<anchor xml:id="_cmaes_8py_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae26e42639fa8cb28b64c1fe1bcd7109c">updateBD</link>(negccov)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;handle&#32;termination&#32;criteria</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sqrtDiagC&#32;=&#32;np.sqrt(np.abs(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a02064e035283dd8a57de4869703c8977">diagC</link>))
<anchor xml:id="_cmaes_8py_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcCol&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a72279ffee64f7ce0014f5a6f2a5dcbe2">pc</link>
<anchor xml:id="_cmaes_8py_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>):
<anchor xml:id="_cmaes_8py_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>&#32;*&#32;max(abs(pcCol[i]),&#32;sqrtDiagC[i])&#32;&gt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abebaeee4cae9bad0d9ea507610aad62a">stopTolX</link>:
<anchor xml:id="_cmaes_8py_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;==&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;-&#32;1:
<anchor xml:id="_cmaes_8py_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;=&#32;2
<anchor xml:id="_cmaes_8py_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;!=&#32;0:
<anchor xml:id="_cmaes_8py_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>):
<anchor xml:id="_cmaes_8py_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>&#32;*&#32;sqrtDiagC[i]&#32;&gt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afaa10b55e67589d51b3781645d801da2">stopTolUpX</link>:
<anchor xml:id="_cmaes_8py_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;=&#32;3
<anchor xml:id="_cmaes_8py_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;!=&#32;0:
<anchor xml:id="_cmaes_8py_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;
<anchor xml:id="_cmaes_8py_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;history_best&#32;=&#32;min(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a37fe790f8441da81e8e25dd57ebe5e38">fitness_history</link>)
<anchor xml:id="_cmaes_8py_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;history_worst&#32;=&#32;max(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a37fe790f8441da81e8e25dd57ebe5e38">fitness_history</link>)
<anchor xml:id="_cmaes_8py_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;&gt;&#32;2&#32;<emphasis role="keywordflow">and</emphasis>&#32;max(history_worst,&#32;worstFitness)&#32;-&#32;min(history_best,&#32;best_fitness)&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87a139a9830d96524ee8cac362cc03a0">stopTolFun</link>:
<anchor xml:id="_cmaes_8py_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;=&#32;4
<anchor xml:id="_cmaes_8py_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;
<anchor xml:id="_cmaes_8py_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;&gt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a37fe790f8441da81e8e25dd57ebe5e38">fitness_history</link>.size&#32;<emphasis role="keywordflow">and</emphasis>&#32;history_worst&#32;-&#32;history_best&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aaa66313795089b51ff1f38a62e2664fd">stopTolHistFun</link>:
<anchor xml:id="_cmaes_8py_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;=&#32;5
<anchor xml:id="_cmaes_8py_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;
<anchor xml:id="_cmaes_8py_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;condition&#32;number&#32;of&#32;the&#32;covariance&#32;matrix&#32;exceeds&#32;1e14</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;min(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>)&#32;!=&#32;0&#32;<emphasis role="keywordflow">and</emphasis>&#32;\
<anchor xml:id="_cmaes_8py_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>)&#32;/&#32;min(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>)&#32;&gt;&#32;1e7&#32;*&#32;1.0&#32;/&#32;math.sqrt(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae977d12b9b7f088beb9df50d43936122">accuracy</link>):
<anchor xml:id="_cmaes_8py_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;=&#32;6
<anchor xml:id="_cmaes_8py_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;
<anchor xml:id="_cmaes_8py_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;call&#32;callback</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a53ccd69a742fb33d4a8c783cdcd2b51a">is_terminate</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>)&#32;<emphasis role="keywordflow">and</emphasis>&#32;\
<anchor xml:id="_cmaes_8py_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a53ccd69a742fb33d4a8c783cdcd2b51a">is_terminate</link>(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aaf84ee8e2f184fa2e5b5b49f681fb5ed">runid</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>,&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abe14f6b9326248e7d16f17edd05660c4">best_value</link>):
<anchor xml:id="_cmaes_8py_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1acc278543fe1ef34927806184e59ad84c">stop</link>&#32;=&#32;7
<anchor xml:id="_cmaes_8py_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;
<anchor xml:id="_cmaes_8py_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Adjust&#32;step&#32;size&#32;in&#32;case&#32;of&#32;equal&#32;function&#32;values&#32;(flat&#32;fitness)</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abe14f6b9326248e7d16f17edd05660c4">best_value</link>&#32;==&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a777ec51b23b513f06524b1d0a73e47ef">fitness</link>[arindex[int(0.1&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df">popsize</link>&#32;/&#32;4.)]]:
<anchor xml:id="_cmaes_8py_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>&#32;*=&#32;math.exp(0.2&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a8c15e41b9f3e7d6eb11ff2112109cd52">cs</link>&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa86568b2e35fa0abc9c44441370001b6">damps</link>)
<anchor xml:id="_cmaes_8py_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;&gt;&#32;2&#32;<emphasis role="keywordflow">and</emphasis>&#32;max(history_worst,&#32;best_fitness)&#32;-&#32;min(history_best,&#32;best_fitness)&#32;==&#32;0:
<anchor xml:id="_cmaes_8py_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>&#32;*=&#32;math.exp(0.2&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a8c15e41b9f3e7d6eb11ff2112109cd52">cs</link>&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa86568b2e35fa0abc9c44441370001b6">damps</link>)
<anchor xml:id="_cmaes_8py_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;store&#32;best&#32;in&#32;history</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a37fe790f8441da81e8e25dd57ebe5e38">fitness_history</link>[1:]&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a37fe790f8441da81e8e25dd57ebe5e38">fitness_history</link>[:-1]
<anchor xml:id="_cmaes_8py_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a37fe790f8441da81e8e25dd57ebe5e38">fitness_history</link>[0]&#32;=&#32;best_fitness
<anchor xml:id="_cmaes_8py_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00673"/>00673 &#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00674"/>00674 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae3fd3fbe79efd9509bb8462382d63bdd">updateEvolutionPaths</link>(self,&#32;zmean,&#32;xold):
<anchor xml:id="_cmaes_8py_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00676"/>00676 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Updates&#32;the&#32;evolution&#32;paths&#32;required&#32;for&#32;generating&#32;new&#32;samples&#32;in</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00677"/>00677 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;covariance&#32;matrix&#32;adaptation&#32;evolution&#32;strategy&#32;(CMA-ES).&#32;This</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00678"/>00678 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;method&#32;modifies&#32;the&#32;evolution&#32;paths&#32;`ps`&#32;and&#32;`pc`&#32;based&#32;on&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00679"/>00679 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;weighted&#32;mean&#32;of&#32;new&#32;samples&#32;(`zmean`)&#32;and&#32;the&#32;previous&#32;solution</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00680"/>00680 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(`xold`).&#32;Additionally,&#32;it&#32;computes&#32;a&#32;flag&#32;(`hsig`)&#32;indicating</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00681"/>00681 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;whether&#32;the&#32;evolution&#32;path&#32;`ps`&#32;satisfies&#32;specific&#32;conditions,</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00682"/>00682 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;which&#32;is&#32;used&#32;to&#32;adapt&#32;the&#32;covariance&#32;matrix&#32;of&#32;the&#32;algorithm.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00683"/>00683 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00684"/>00684 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00685"/>00685 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zmean:&#32;Weighted&#32;mean&#32;of&#32;new&#32;samples&#32;in&#32;the&#32;search&#32;space.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00686"/>00686 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xold:&#32;Previous&#32;solution&#32;in&#32;the&#32;search&#32;space.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00687"/>00687 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00688"/>00688 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00689"/>00689 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;A&#32;flag&#32;indicating&#32;whether&#32;the&#32;evolution&#32;path&#32;`ps`&#32;satisfies</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00690"/>00690 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;computed&#32;conditions.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00691"/>00691 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00692"/>00692 
<anchor xml:id="_cmaes_8py_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abf10f8059a83dd6d1d02c17f8c9317b0">ps</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abf10f8059a83dd6d1d02c17f8c9317b0">ps</link>&#32;*&#32;(1.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a8c15e41b9f3e7d6eb11ff2112109cd52">cs</link>)&#32;+&#32;\
<anchor xml:id="_cmaes_8py_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa02345ac78df378d92478bf7bb17362e">B</link>&#32;@&#32;zmean)&#32;*&#32;math.sqrt(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a8c15e41b9f3e7d6eb11ff2112109cd52">cs</link>&#32;*&#32;(2.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a8c15e41b9f3e7d6eb11ff2112109cd52">cs</link>)&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>))
<anchor xml:id="_cmaes_8py_source_1l00695"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae3fd3fbe79efd9509bb8462382d63bdd">00695</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a6c0ece7221cef9045ab5c872974c78fc">normps</link>&#32;=&#32;math.sqrt(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abf10f8059a83dd6d1d02c17f8c9317b0">ps</link>&#32;@&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1abf10f8059a83dd6d1d02c17f8c9317b0">ps</link>)&#32;
<anchor xml:id="_cmaes_8py_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hsig&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a6c0ece7221cef9045ab5c872974c78fc">normps</link>&#32;/&#32;math.sqrt(1.&#32;-&#32;math.pow(1.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a8c15e41b9f3e7d6eb11ff2112109cd52">cs</link>,&#32;2.&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>))&#32;/&#32;\
<anchor xml:id="_cmaes_8py_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af748707b894a344fc39d3d933ddd6875">chiN</link>&#32;&lt;&#32;1.4&#32;+&#32;2.&#32;/&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;1.)
<anchor xml:id="_cmaes_8py_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a72279ffee64f7ce0014f5a6f2a5dcbe2">pc</link>&#32;*=&#32;1.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a896dcfff9b45acea10fdf6f918ca8329">cc</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;hsig:
<anchor xml:id="_cmaes_8py_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a72279ffee64f7ce0014f5a6f2a5dcbe2">pc</link>&#32;+=&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ab23d2436d1c72f54ab99839058c1adf3">xmean</link>&#32;-&#32;xold)&#32;*&#32;(math.sqrt(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a896dcfff9b45acea10fdf6f918ca8329">cc</link>&#32;*&#32;(2.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a896dcfff9b45acea10fdf6f918ca8329">cc</link>)&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>)&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>)
<anchor xml:id="_cmaes_8py_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hsig
<anchor xml:id="_cmaes_8py_source_1l00702"/>00702 &#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00703"/>00703 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afd8b8665d87f14c53cd60da16c932336">updateCovariance</link>(self,&#32;hsig,&#32;bestArx,&#32;arz,&#32;arindex,&#32;xold):
<anchor xml:id="_cmaes_8py_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Updates&#32;the&#32;covariance&#32;matrix&#32;and&#32;returns&#32;the&#32;negative&#32;covariance&#32;scaling&#32;factor.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00705"/>00705 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00706"/>00706 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;adjusts&#32;the&#32;covariance&#32;matrix&#32;based&#32;on&#32;the&#32;current&#32;best&#32;solution,&#32;the</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00707"/>00707 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;distribution&#32;of&#32;previous&#32;samples,&#32;and&#32;other&#32;adaptations.&#32;It&#32;incorporates&#32;mechanisms</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00708"/>00708 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;adaptively&#32;handle&#32;both&#32;positive&#32;and&#32;negative&#32;covariance&#32;contributions&#32;and&#32;ensures</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00709"/>00709 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;minimal&#32;residual&#32;variance&#32;is&#32;maintained&#32;for&#32;better&#32;exploration&#32;capabilities.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00710"/>00710 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00711"/>00711 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00712"/>00712 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self:&#32;Instance&#32;of&#32;the&#32;class&#32;calling&#32;this&#32;method.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00713"/>00713 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hsig&#32;(bool):&#32;Indicates&#32;the&#32;success&#32;of&#32;the&#32;covariance&#32;step&#32;size&#32;adaptation.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00714"/>00714 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bestArx&#32;(numpy.ndarray):&#32;Array&#32;containing&#32;the&#32;best&#32;solutions&#32;in&#32;the&#32;current&#32;iteration.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00715"/>00715 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arz&#32;(numpy.ndarray):&#32;Array&#32;of&#32;normalized&#32;random&#32;vectors&#32;representing&#32;candidate&#32;solutions.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00716"/>00716 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arindex&#32;(numpy.ndarray):&#32;Array&#32;containing&#32;sorted&#32;indices&#32;corresponding&#32;to&#32;ranked&#32;solutions.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00717"/>00717 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xold&#32;(numpy.ndarray):&#32;Centroid&#32;of&#32;the&#32;previous&#32;population.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00718"/>00718 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00719"/>00719 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00720"/>00720 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;negative&#32;covariance&#32;scaling&#32;factor&#32;(negccov),&#32;which&#32;indicates&#32;the&#32;adaptation</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00721"/>00721 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strength&#32;for&#32;negative&#32;covariance&#32;components.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00722"/>00722 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negccov&#32;=&#32;0.
<anchor xml:id="_cmaes_8py_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac4f76391f5b24411336fd43932b1f32d">ccovmu</link>&#32;&gt;&#32;0:
<anchor xml:id="_cmaes_8py_source_1l00726"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afd8b8665d87f14c53cd60da16c932336">00726</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arpos&#32;=&#32;(bestArx&#32;-&#32;xold)&#32;*&#32;(1.&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a0c1c9cf3e185d2a6d4e8d64db0a2f256">sigma</link>)&#32;<emphasis role="comment">#&#32;mu&#32;difference&#32;vectors</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc2d&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a72279ffee64f7ce0014f5a6f2a5dcbe2">pc</link>[:,&#32;np.newaxis]&#32;
<anchor xml:id="_cmaes_8py_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;roneu&#32;=&#32;(pc2d&#32;@&#32;np.transpose(pc2d))&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>
<anchor xml:id="_cmaes_8py_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;minor&#32;correction&#32;if&#32;hsig==false</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldFac&#32;=&#32;0&#32;<emphasis role="keywordflow">if</emphasis>&#32;hsig&#32;<emphasis role="keywordflow">else</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a896dcfff9b45acea10fdf6f918ca8329">cc</link>&#32;*&#32;(2.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a896dcfff9b45acea10fdf6f918ca8329">cc</link>)
<anchor xml:id="_cmaes_8py_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldFac&#32;+=&#32;1.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac4f76391f5b24411336fd43932b1f32d">ccovmu</link>
<anchor xml:id="_cmaes_8py_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Adapt&#32;covariance&#32;matrix&#32;C&#32;active&#32;CMA</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negccov&#32;=&#32;(1.&#32;-&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac4f76391f5b24411336fd43932b1f32d">ccovmu</link>)&#32;*&#32;0.25&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>&#32;\
<anchor xml:id="_cmaes_8py_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;(math.pow(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;+&#32;2.,&#32;1.5)&#32;+&#32;2.&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a87b45423cf6e89e57e4682ff318a5c88">mueff</link>)
<anchor xml:id="_cmaes_8py_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negminresidualvariance&#32;=&#32;0.66
<anchor xml:id="_cmaes_8py_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;keep&#32;at&#32;least&#32;0.66&#32;in&#32;all&#32;directions,&#32;small&#32;popsize&#32;are&#32;most&#32;critical</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negalphaold&#32;=&#32;0.5&#32;<emphasis role="comment">#&#32;where&#32;to&#32;make&#32;up&#32;for&#32;the&#32;variance&#32;loss,</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;prepare&#32;vectors,&#32;compute&#32;negative&#32;updating&#32;matrix&#32;Cneg</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arReverseIndex&#32;=&#32;arindex[::-1]
<anchor xml:id="_cmaes_8py_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arzneg&#32;=&#32;arz[arReverseIndex[:self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a3d8d08495e9ebae0cc1e8164f92bbda0">mu</link>]]
<anchor xml:id="_cmaes_8py_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arnorms&#32;=&#32;np.sqrt(np.einsum(<emphasis role="stringliteral">&apos;ij-&gt;i&apos;</emphasis>,&#32;arzneg&#32;*&#32;arzneg))
<anchor xml:id="_cmaes_8py_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idxnorms&#32;=&#32;arnorms.argsort()
<anchor xml:id="_cmaes_8py_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arnormsSorted&#32;=&#32;arnorms[idxnorms]
<anchor xml:id="_cmaes_8py_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idxReverse&#32;=&#32;idxnorms[::-1]
<anchor xml:id="_cmaes_8py_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arnormsReverse&#32;=&#32;arnorms[idxReverse]
<anchor xml:id="_cmaes_8py_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arnorms&#32;=&#32;arnormsReverse&#32;/&#32;arnormsSorted
<anchor xml:id="_cmaes_8py_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arnormsInv&#32;=&#32;np.empty(arnorms.size)
<anchor xml:id="_cmaes_8py_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arnormsInv[idxnorms]&#32;=&#32;arnorms
<anchor xml:id="_cmaes_8py_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;check&#32;and&#32;set&#32;learning&#32;rate&#32;negccov</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negcovMax&#32;=&#32;(1.&#32;-&#32;negminresidualvariance)&#32;/&#32;((arnormsInv*arnormsInv)&#32;@&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">weights</link>)
<anchor xml:id="_cmaes_8py_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;negccov&#32;&gt;&#32;negcovMax:
<anchor xml:id="_cmaes_8py_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negccov&#32;=&#32;negcovMax
<anchor xml:id="_cmaes_8py_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arzneg&#32;=&#32;np.transpose(arzneg)&#32;*&#32;arnormsInv
<anchor xml:id="_cmaes_8py_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;artmp&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1addeb9c3f1881d703fcbdab203a81e8ba">BD</link>&#32;@&#32;arzneg
<anchor xml:id="_cmaes_8py_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cneg&#32;=&#32;artmp&#32;@&#32;(np.diagflat(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">weights</link>)&#32;@&#32;np.transpose(artmp))
<anchor xml:id="_cmaes_8py_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldFac&#32;+=&#32;negalphaold&#32;*&#32;negccov
<anchor xml:id="_cmaes_8py_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;C&#32;=&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">C</link>&#32;*&#32;oldFac)&#32;+&#32;roneu&#32;+&#32;\
<anchor xml:id="_cmaes_8py_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.transpose(arpos&#32;*&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac4f76391f5b24411336fd43932b1f32d">ccovmu</link>&#32;+&#32;(1.&#32;-&#32;negalphaold)&#32;*&#32;negccov))&#32;@&#32;\
<anchor xml:id="_cmaes_8py_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.transpose(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1afa1dbc74053584467bcd74d4d7cbcf4c">weights</link>&#32;*&#32;np.transpose(arpos))
<anchor xml:id="_cmaes_8py_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">C</link>&#32;=&#32;C&#32;-&#32;Cneg*negccov
<anchor xml:id="_cmaes_8py_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;negccov
<anchor xml:id="_cmaes_8py_source_1l00762"/>00762 &#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00763"/>00763 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae26e42639fa8cb28b64c1fe1bcd7109c">updateBD</link>(self,&#32;negccov):
<anchor xml:id="_cmaes_8py_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00765"/>00765 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Updates&#32;the&#32;internal&#32;state&#32;of&#32;the&#32;covariance&#32;matrix&#32;and&#32;its&#32;derived&#32;attributes,&#32;such&#32;as&#32;eigenvalues,&#32;eigenvectors,</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00766"/>00766 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;transformations&#32;for&#32;sampling&#32;scaled&#32;isotropic&#32;Gaussian&#32;distributions.&#32;The&#32;method&#32;ensures&#32;numerical&#32;stability</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00767"/>00767 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;by&#32;handling&#32;edge&#32;cases&#32;like&#32;non-positive&#32;eigenvalues&#32;or&#32;large&#32;differences&#32;between&#32;eigenvalues.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00768"/>00768 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_cmaes_8py_source_1l00769"/>00769 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00770"/>00770 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self:&#32;Instance&#32;of&#32;the&#32;class.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00771"/>00771 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;negccov:&#32;The&#32;covariance&#32;matrix&#32;adjustment&#32;parameter&#32;used&#32;for&#32;updating.</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00772"/>00772 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00773"/>00773 &#32;
<anchor xml:id="_cmaes_8py_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac4f76391f5b24411336fd43932b1f32d">ccovmu</link>&#32;+&#32;negccov&#32;&gt;&#32;0&#32;<emphasis role="keywordflow">and</emphasis>&#32;\
<anchor xml:id="_cmaes_8py_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1af7581432fe2911ae409ec703de2cbc13">iterations</link>&#32;%&#32;(1.&#32;/&#32;(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a64138cc1569696378f425b77a1133c55">ccov1</link>&#32;+&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ac4f76391f5b24411336fd43932b1f32d">ccovmu</link>&#32;+&#32;negccov)&#32;/&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>&#32;/&#32;10.)&#32;&lt;&#32;1.:
<anchor xml:id="_cmaes_8py_source_1l00776"/><link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1ae26e42639fa8cb28b64c1fe1bcd7109c">00776</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;to&#32;achieve&#32;O(N^2)&#32;enforce&#32;symmetry&#32;to&#32;prevent&#32;complex&#32;numbers</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">C</link>&#32;=&#32;np.triu(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">C</link>,&#32;0)&#32;+&#32;np.transpose(np.triu(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">C</link>,&#32;1))
<anchor xml:id="_cmaes_8py_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;diagD&#32;defines&#32;the&#32;scaling</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eigen_values,&#32;eigen_vectors&#32;=&#32;linalg.eigh(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">C</link>)
<anchor xml:id="_cmaes_8py_source_1l00781"/>00781 
<anchor xml:id="_cmaes_8py_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idx&#32;=&#32;eigen_values.argsort()[::-1]&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>&#32;=&#32;eigen_values[idx]
<anchor xml:id="_cmaes_8py_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa02345ac78df378d92478bf7bb17362e">B</link>&#32;=&#32;eigen_vectors[:,idx]
<anchor xml:id="_cmaes_8py_source_1l00785"/>00785 
<anchor xml:id="_cmaes_8py_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Coordinate&#32;system</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;min(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>)&#32;&lt;=&#32;0:&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>&#32;=&#32;np.maximum(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>,&#32;0)
<anchor xml:id="_cmaes_8py_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tfac&#32;=&#32;max(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>)&#32;/&#32;1e14
<anchor xml:id="_cmaes_8py_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">C</link>&#32;+=&#32;np.eye(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)&#32;*&#32;tfac
<anchor xml:id="_cmaes_8py_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>&#32;+=&#32;np.ones(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)&#32;*&#32;tfac
<anchor xml:id="_cmaes_8py_source_1l00792"/>00792 
<anchor xml:id="_cmaes_8py_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;max(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>)&#32;&gt;&#32;1e14&#32;*&#32;min(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>):
<anchor xml:id="_cmaes_8py_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tfac&#32;=&#32;max(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>)&#32;/&#32;1e14&#32;-&#32;min(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>)
<anchor xml:id="_cmaes_8py_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">C</link>&#32;+=&#32;np.eye(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)&#32;*&#32;tfac
<anchor xml:id="_cmaes_8py_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>&#32;+=&#32;np.ones(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268">dim</link>)&#32;*&#32;tfac
<anchor xml:id="_cmaes_8py_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a02064e035283dd8a57de4869703c8977">diagC</link>&#32;=&#32;np.diag(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a69e5ed885bebdebca4855961f2a3c4cb">C</link>)
<anchor xml:id="_cmaes_8py_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>&#32;=&#32;np.sqrt(self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>)&#32;<emphasis role="comment">#&#32;diagD&#32;contains&#32;standard&#32;deviations&#32;now</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_cmaes_8py_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1addeb9c3f1881d703fcbdab203a81e8ba">BD</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1aa02345ac78df378d92478bf7bb17362e">B</link>&#32;*&#32;self.<link linkend="_classfcmaes_1_1cmaes_1_1_cmaes_1a7da80a6a1a85ca8df878d8d205b21d25">diagD</link>&#32;<emphasis role="comment">#&#32;O(n^2)</emphasis>
<anchor xml:id="_cmaes_8py_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
</programlisting></section>

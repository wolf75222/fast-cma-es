<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_subset__mo_8py_source" xml:lang="en-US">
<title>subset_mo.py</title>
<indexterm><primary>examples/subset_mo.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_subset__mo_8py_source_1l00001"/><link linkend="_namespaceexamples_1_1subset__mo">00001</link> <emphasis role="stringliteral">&quot;&quot;&quot;Find&#32;the&#32;optimal&#32;subset&#32;fulfilling&#32;any&#32;property.&#32;</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00002"/>00002 <emphasis role="stringliteral">Multi-objective&#32;variant&#32;of&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/examples/subset.py&#32;</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00003"/>00003 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00004"/>00004 <emphasis role="stringliteral">As&#32;example&#32;we&#32;use&#32;transactions&#32;where&#32;a&#32;subset&#32;is&#32;to&#32;be&#32;matched&#32;to&#32;a&#32;list&#32;of&#32;payments.&#32;</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00005"/>00005 <emphasis role="stringliteral">For&#32;transactions:&#32;[2,4,5,1,3]&#32;and&#32;payments:&#32;[4,&#32;4]&#32;the&#32;sum&#32;of&#32;payments&#32;is&#32;8.&#32;</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00006"/>00006 <emphasis role="stringliteral">Subsets&#32;of&#32;transactions&#32;that&#32;minimize&#32;the&#32;difference&#32;between&#32;payments&#32;and&#32;</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00007"/>00007 <emphasis role="stringliteral">transactions&#32;are&#32;for&#32;instance&#32;[5,3],&#32;or&#32;[4,3,1].&#32;As&#32;second&#32;objective&#32;we&#32;maximize</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00008"/>00008 <emphasis role="stringliteral">the&#32;minimal&#32;transaction&#32;in&#32;the&#32;chosen&#32;subset.&#32;</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00009"/>00009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00010"/>00010 <emphasis role="stringliteral">In&#32;general&#32;we&#32;have&#32;to&#32;define&#32;a&#32;mapping&#32;&apos;selection_value&apos;&#32;which&#32;maps&#32;a&#32;</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00011"/>00011 <emphasis role="stringliteral">specific&#32;selection/subset&#32;represented&#32;as&#32;boolean&#32;array&#32;to&#32;a&#32;list&#32;of&#32;values&#32;to&#32;be&#32;minimized.&#32;</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00012"/>00012 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00013"/>00013 <emphasis role="stringliteral">See&#32;https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Subset.adoc&#32;for&#32;a&#32;detailed&#32;description.</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00014"/>00014 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00015"/>00015 
<anchor xml:id="_subset__mo_8py_source_1l00016"/>00016 <emphasis role="comment">#&#32;Tested&#32;using&#32;https://docs.conda.io/en/main/miniconda.html&#32;on&#32;Linux&#32;Mint&#32;21.</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00017"/>00017 
<anchor xml:id="_subset__mo_8py_source_1l00018"/>00018 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_subset__mo_8py_source_1l00019"/>00019 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;Bounds&#32;
<anchor xml:id="_subset__mo_8py_source_1l00020"/>00020 <emphasis role="keyword">from</emphasis>&#32;fcmaes&#32;<emphasis role="keyword">import</emphasis>&#32;mode,&#32;modecpp
<anchor xml:id="_subset__mo_8py_source_1l00021"/>00021 
<anchor xml:id="_subset__mo_8py_source_1l00022"/>00022 <emphasis role="keyword">import</emphasis>&#32;sys&#32;
<anchor xml:id="_subset__mo_8py_source_1l00023"/>00023 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_subset__mo_8py_source_1l00024"/>00024 
<anchor xml:id="_subset__mo_8py_source_1l00025"/>00025 logger.remove()
<anchor xml:id="_subset__mo_8py_source_1l00026"/><link linkend="_namespaceexamples_1_1subset__mo_1a2972b528aabc88fc9dfc65048865dd14">00026</link> logger.add(sys.stdout,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_subset__mo_8py_source_1l00027"/>00027 logger.add(<emphasis role="stringliteral">&quot;log_{time}.txt&quot;</emphasis>,&#32;format=<emphasis role="stringliteral">&quot;{time:HH:mm:ss.SS}&#32;|&#32;{process}&#32;|&#32;{level}&#32;|&#32;{message}&quot;</emphasis>,&#32;level=<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>)
<anchor xml:id="_subset__mo_8py_source_1l00028"/>00028 
<anchor xml:id="_subset__mo_8py_source_1l00029"/>00029 <emphasis role="comment">#&#32;replace&#32;with&#32;your&#32;mapping&#32;selection&#32;-&gt;&#32;value</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00030"/><link linkend="_classexamples_1_1subset__mo_1_1transaction__value">00030</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1subset__mo_1_1transaction__value">transaction_value</link>():
<anchor xml:id="_subset__mo_8py_source_1l00031"/>00031 &#32;&#32;&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00032"/><link linkend="_classexamples_1_1subset__mo_1_1transaction__value_1a0629ed058f9acb077156579173b146a2">00032</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1subset__mo_1_1transaction__value_1a0629ed058f9acb077156579173b146a2">__init__</link>(self,&#32;transactions,&#32;payments):
<anchor xml:id="_subset__mo_8py_source_1l00033"/><link linkend="_classexamples_1_1subset__mo_1_1transaction__value_1adf5b10dccce7016316e509e1933e514b">00033</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1subset__mo_1_1transaction__value_1adf5b10dccce7016316e509e1933e514b">transactions</link>&#32;=&#32;transactions
<anchor xml:id="_subset__mo_8py_source_1l00034"/><link linkend="_classexamples_1_1subset__mo_1_1transaction__value_1aa047927fe66ec75b848f042a7ed80e8f">00034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1subset__mo_1_1transaction__value_1aa047927fe66ec75b848f042a7ed80e8f">sum_payments</link>&#32;=&#32;sum(payments)
<anchor xml:id="_subset__mo_8py_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00036"/><link linkend="_classexamples_1_1subset__mo_1_1transaction__value_1ae780ff1020881d523c5cb25a042a6a95">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1subset__mo_1_1transaction__value_1ae780ff1020881d523c5cb25a042a6a95">__call__</link>(self,&#32;selection):
<anchor xml:id="_subset__mo_8py_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trs&#32;=&#32;self.<link linkend="_classexamples_1_1subset__mo_1_1transaction__value_1adf5b10dccce7016316e509e1933e514b">transactions</link>[selection]
<anchor xml:id="_subset__mo_8py_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;abs(sum(trs)&#32;-&#32;self.<link linkend="_classexamples_1_1subset__mo_1_1transaction__value_1aa047927fe66ec75b848f042a7ed80e8f">sum_payments</link>),&#32;-min(trs)
<anchor xml:id="_subset__mo_8py_source_1l00039"/>00039 &#32;&#32;&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00040"/><link linkend="_classexamples_1_1subset__mo_1_1fitness">00040</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classexamples_1_1subset__mo_1_1fitness">fitness</link>():
<anchor xml:id="_subset__mo_8py_source_1l00041"/>00041 &#32;&#32;&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00042"/><link linkend="_classexamples_1_1subset__mo_1_1fitness_1addf85c72e39b140383beef6db0d10e35">00042</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1subset__mo_1_1fitness_1addf85c72e39b140383beef6db0d10e35">__init__</link>(self,&#32;selection_value,&#32;dim):
<anchor xml:id="_subset__mo_8py_source_1l00043"/><link linkend="_classexamples_1_1subset__mo_1_1fitness_1a20cac7f3c010185fc000534490ee76fe">00043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1subset__mo_1_1fitness_1a20cac7f3c010185fc000534490ee76fe">selection_value</link>&#32;=&#32;selection_value
<anchor xml:id="_subset__mo_8py_source_1l00044"/><link linkend="_classexamples_1_1subset__mo_1_1fitness_1a9e4515283b5c50dd58b6a4d92e903b1d">00044</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classexamples_1_1subset__mo_1_1fitness_1a9e4515283b5c50dd58b6a4d92e903b1d">bounds</link>&#32;=&#32;Bounds([0]*dim,&#32;[1.99999999]*dim)&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00046"/><link linkend="_classexamples_1_1subset__mo_1_1fitness_1ac15b20aced828260b7563061593ecbef">00046</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1subset__mo_1_1fitness_1ac15b20aced828260b7563061593ecbef">selected</link>(self,&#32;x):
<anchor xml:id="_subset__mo_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x.astype(int)
<anchor xml:id="_subset__mo_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;all&#32;decision&#32;variables&#32;are&#32;in&#32;the&#32;[0,2[&#32;interval&#32;and&#32;mapped&#32;to&#32;a&#32;boolean&#32;array.&#32;</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00050"/><link linkend="_classexamples_1_1subset__mo_1_1fitness_1a7d34771039eadc6134feabf67d3ac896">00050</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classexamples_1_1subset__mo_1_1fitness_1a7d34771039eadc6134feabf67d3ac896">__call__</link>(self,&#32;x):
<anchor xml:id="_subset__mo_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classexamples_1_1subset__mo_1_1fitness_1a20cac7f3c010185fc000534490ee76fe">selection_value</link>(x.astype(int).astype(bool))
<anchor xml:id="_subset__mo_8py_source_1l00052"/>00052 
<anchor xml:id="_subset__mo_8py_source_1l00053"/><link linkend="_namespaceexamples_1_1subset__mo_1acd79478d3e44c465555276e48e90e00d">00053</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceexamples_1_1subset__mo_1acd79478d3e44c465555276e48e90e00d">optimize</link>(fitness,&#32;num_retries&#32;=&#32;32):
<anchor xml:id="_subset__mo_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;nobj&#32;=&#32;2
<anchor xml:id="_subset__mo_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;ncon&#32;=&#32;0
<anchor xml:id="_subset__mo_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;xs,&#32;ys&#32;=&#32;modecpp.retry(<link linkend="_classfcmaes_1_1mode_1_1wrapper">mode.wrapper</link>(fitness,&#32;nobj),&#32;nobj,&#32;ncon,&#32;
<anchor xml:id="_subset__mo_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fit.bounds,&#32;num_retries=num_retries,&#32;popsize&#32;=&#32;500,&#32;
<anchor xml:id="_subset__mo_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evaluations&#32;=&#32;100000,&#32;nsga_update&#32;=&#32;<emphasis role="keyword">True</emphasis>,&#32;
<anchor xml:id="_subset__mo_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers=32)&#32;&#32;&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;show&#32;the&#32;best&#32;results</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(xs)):
<anchor xml:id="_subset__mo_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;ys[i][0]&#32;&gt;&#32;10:&#32;<emphasis role="keywordflow">break</emphasis>
<anchor xml:id="_subset__mo_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(i+1,&#32;<emphasis role="stringliteral">&quot;)&#32;Optimal&#32;Objective&#32;values:&#32;&quot;</emphasis>,&#32;ys[i])
<anchor xml:id="_subset__mo_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(fitness.selected(xs[i]))
<anchor xml:id="_subset__mo_8py_source_1l00065"/>00065 
<anchor xml:id="_subset__mo_8py_source_1l00066"/>00066 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
<anchor xml:id="_subset__mo_8py_source_1l00067"/><link linkend="_namespaceexamples_1_1subset__mo_1a8db6919f28ea9e53e34d0078663912c6">00067</link> &#32;&#32;&#32;&#32;seed&#32;=&#32;13
<anchor xml:id="_subset__mo_8py_source_1l00068"/><link linkend="_namespaceexamples_1_1subset__mo_1ac8b0005c086547bf40662538a07e39d5">00068</link> &#32;&#32;&#32;&#32;rng&#32;=&#32;np.random.default_rng(seed)&#32;&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00069"/><link linkend="_namespaceexamples_1_1subset__mo_1a98a290ade7b2602b35a204863e3809cb">00069</link> &#32;&#32;&#32;&#32;transactions=&#32;rng.integers(100,&#32;2500,&#32;1000)&#32;/&#32;100&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00070"/><link linkend="_namespaceexamples_1_1subset__mo_1a48b9015e470666f1c68c857558a5786d">00070</link> &#32;&#32;&#32;&#32;payments&#32;=&#32;rng.integers(10,&#32;50,&#32;100)&#32;&#32;&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00071"/><link linkend="_namespaceexamples_1_1subset__mo_1a583cca73f8f471685e8c55474c8a58cb">00071</link> &#32;&#32;&#32;&#32;selection_value&#32;=&#32;<link linkend="_classexamples_1_1subset__mo_1_1transaction__value">transaction_value</link>(transactions,&#32;payments)&#32;&#32;&#32;&#32;
<anchor xml:id="_subset__mo_8py_source_1l00072"/><link linkend="_namespaceexamples_1_1subset__mo_1ae9d549016de4bfb479dceaba4c841658">00072</link> &#32;&#32;&#32;&#32;fit&#32;=&#32;<link linkend="_classexamples_1_1subset__mo_1_1fitness">fitness</link>(selection_value,&#32;len(transactions))
<anchor xml:id="_subset__mo_8py_source_1l00073"/><link linkend="_namespaceexamples_1_1subset__mo_1ad29cc6f72976c25723a9cbf55e550153">00073</link> &#32;&#32;&#32;&#32;<link linkend="_namespaceexamples_1_1subset__mo_1acd79478d3e44c465555276e48e90e00d">optimize</link>(fit,&#32;num_retries=32)
</programlisting></section>

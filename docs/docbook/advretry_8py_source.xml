<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_advretry_8py_source" xml:lang="en-US">
<title>advretry.py</title>
<indexterm><primary>fcmaes/advretry.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_advretry_8py_source_1l00001"/><link linkend="_namespacefcmaes_1_1advretry">00001</link> <emphasis role="comment">#&#32;-*-&#32;coding:&#32;utf-8&#32;-*-</emphasis>
<anchor xml:id="_advretry_8py_source_1l00002"/>00002 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00003"/>00003 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_advretry_8py_source_1l00004"/>00004 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00005"/>00005 <emphasis role="stringliteral">&#32;Fast&#32;CMA-ES&#32;-&#32;version&#32;1.6.11</emphasis>
<anchor xml:id="_advretry_8py_source_1l00006"/>00006 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00007"/>00007 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_advretry_8py_source_1l00008"/>00008 <emphasis role="stringliteral">&#32;(c)&#32;2025&#32;–&#32;Latitude</emphasis>
<anchor xml:id="_advretry_8py_source_1l00009"/>00009 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00010"/>00010 <emphasis role="stringliteral">&#32;License:&#32;MIT</emphasis>
<anchor xml:id="_advretry_8py_source_1l00011"/>00011 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00012"/>00012 <emphasis role="stringliteral">&#32;File:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00013"/>00013 <emphasis role="stringliteral">&#32;&#32;-&#32;advretry.py</emphasis>
<anchor xml:id="_advretry_8py_source_1l00014"/>00014 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00015"/>00015 <emphasis role="stringliteral">&#32;Description:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00016"/>00016 <emphasis role="stringliteral">&#32;&#32;-&#32;This&#32;module&#32;implements&#32;an&#32;advanced&#32;retry&#32;mechanism&#32;for&#32;optimization&#32;tasks</emphasis>
<anchor xml:id="_advretry_8py_source_1l00017"/>00017 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;using&#32;the&#32;Fast&#32;CMA-ES&#32;algorithm.&#32;It&#32;provides&#32;functionality&#32;for&#32;parallel</emphasis>
<anchor xml:id="_advretry_8py_source_1l00018"/>00018 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;evaluations,&#32;statistical&#32;tracking,&#32;and&#32;result&#32;persistence.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00019"/>00019 <emphasis role="stringliteral">&#32;&#32;-&#32;The&#32;retry&#32;mechanism&#32;allows&#32;for&#32;multiple&#32;attempts&#32;to&#32;optimize&#32;a&#32;function</emphasis>
<anchor xml:id="_advretry_8py_source_1l00020"/>00020 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;while&#32;managing&#32;resources&#32;efficiently.&#32;It&#32;supports&#32;parallel&#32;processing&#32;and</emphasis>
<anchor xml:id="_advretry_8py_source_1l00021"/>00021 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;statistical&#32;analysis&#32;of&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00022"/>00022 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00023"/>00023 <emphasis role="stringliteral">&#32;Authors:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00024"/>00024 <emphasis role="stringliteral">&#32;&#32;-&#32;Dietmar&#32;Wolz</emphasis>
<anchor xml:id="_advretry_8py_source_1l00025"/>00025 <emphasis role="stringliteral">&#32;&#32;-&#32;romain.despoullains@latitude.eu</emphasis>
<anchor xml:id="_advretry_8py_source_1l00026"/>00026 <emphasis role="stringliteral">&#32;&#32;-&#32;corentin.generet@latitude.eu</emphasis>
<anchor xml:id="_advretry_8py_source_1l00027"/>00027 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00028"/>00028 <emphasis role="stringliteral">&#32;References:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00029"/>00029 <emphasis role="stringliteral">&#32;&#32;-&#32;[1]&#32;https://github.com/dietmarwo/fast-cma-es</emphasis>
<anchor xml:id="_advretry_8py_source_1l00030"/>00030 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00031"/>00031 <emphasis role="stringliteral">&#32;Documentation:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00032"/>00032 <emphasis role="stringliteral">&#32;&#32;-</emphasis>
<anchor xml:id="_advretry_8py_source_1l00033"/>00033 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00034"/>00034 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00035"/>00035 <emphasis role="stringliteral">=============================================================================</emphasis>
<anchor xml:id="_advretry_8py_source_1l00036"/>00036 <emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00037"/>00037 
<anchor xml:id="_advretry_8py_source_1l00038"/>00038 
<anchor xml:id="_advretry_8py_source_1l00039"/>00039 
<anchor xml:id="_advretry_8py_source_1l00040"/>00040 <emphasis role="keyword">from</emphasis>&#32;__future__&#32;<emphasis role="keyword">import</emphasis>&#32;annotations
<anchor xml:id="_advretry_8py_source_1l00041"/>00041 
<anchor xml:id="_advretry_8py_source_1l00042"/>00042 <emphasis role="keyword">import</emphasis>&#32;time
<anchor xml:id="_advretry_8py_source_1l00043"/>00043 <emphasis role="keyword">import</emphasis>&#32;os
<anchor xml:id="_advretry_8py_source_1l00044"/>00044 <emphasis role="keyword">import</emphasis>&#32;math
<anchor xml:id="_advretry_8py_source_1l00045"/>00045 <emphasis role="keyword">import</emphasis>&#32;threadpoolctl
<anchor xml:id="_advretry_8py_source_1l00046"/>00046 <emphasis role="keyword">import</emphasis>&#32;_pickle&#32;<emphasis role="keyword">as</emphasis>&#32;cPickle
<anchor xml:id="_advretry_8py_source_1l00047"/>00047 <emphasis role="keyword">import</emphasis>&#32;bz2
<anchor xml:id="_advretry_8py_source_1l00048"/>00048 <emphasis role="keyword">import</emphasis>&#32;ctypes&#32;<emphasis role="keyword">as</emphasis>&#32;ct
<anchor xml:id="_advretry_8py_source_1l00049"/>00049 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_advretry_8py_source_1l00050"/>00050 <emphasis role="keyword">from</emphasis>&#32;numpy.linalg&#32;<emphasis role="keyword">import</emphasis>&#32;norm
<anchor xml:id="_advretry_8py_source_1l00051"/>00051 <emphasis role="keyword">import</emphasis>&#32;random
<anchor xml:id="_advretry_8py_source_1l00052"/>00052 <emphasis role="keyword">import</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">as</emphasis>&#32;mp
<anchor xml:id="_advretry_8py_source_1l00053"/>00053 <emphasis role="keyword">from</emphasis>&#32;multiprocessing&#32;<emphasis role="keyword">import</emphasis>&#32;Process
<anchor xml:id="_advretry_8py_source_1l00054"/>00054 <emphasis role="keyword">from</emphasis>&#32;numpy.random&#32;<emphasis role="keyword">import</emphasis>&#32;Generator,&#32;PCG64DXSM,&#32;SeedSequence
<anchor xml:id="_advretry_8py_source_1l00055"/>00055 <emphasis role="keyword">from</emphasis>&#32;scipy.optimize&#32;<emphasis role="keyword">import</emphasis>&#32;OptimizeResult,&#32;Bounds
<anchor xml:id="_advretry_8py_source_1l00056"/>00056 <emphasis role="keyword">from</emphasis>&#32;loguru&#32;<emphasis role="keyword">import</emphasis>&#32;logger
<anchor xml:id="_advretry_8py_source_1l00057"/>00057 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1retry">fcmaes.retry</link>&#32;<emphasis role="keyword">import</emphasis>&#32;_convertBounds,&#32;plot,&#32;Shared2d
<anchor xml:id="_advretry_8py_source_1l00058"/>00058 <emphasis role="keyword">from</emphasis>&#32;<link linkend="_namespacefcmaes_1_1optimizer">fcmaes.optimizer</link>&#32;<emphasis role="keyword">import</emphasis>&#32;Optimizer,&#32;dtime,&#32;fitting,&#32;de_cma
<anchor xml:id="_advretry_8py_source_1l00059"/>00059 
<anchor xml:id="_advretry_8py_source_1l00060"/>00060 <emphasis role="keyword">from</emphasis>&#32;typing&#32;<emphasis role="keyword">import</emphasis>&#32;Optional,&#32;Callable,&#32;List,&#32;Tuple
<anchor xml:id="_advretry_8py_source_1l00061"/>00061 <emphasis role="keyword">from</emphasis>&#32;numpy.typing&#32;<emphasis role="keyword">import</emphasis>&#32;ArrayLike
<anchor xml:id="_advretry_8py_source_1l00062"/>00062 
<anchor xml:id="_advretry_8py_source_1l00063"/>00063 os.environ[<emphasis role="stringliteral">&apos;MKL_DEBUG_CPU_TYPE&apos;</emphasis>]&#32;=&#32;<emphasis role="stringliteral">&apos;5&apos;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00064"/>00064 os.environ[<emphasis role="stringliteral">&apos;MKL_NUM_THREADS&apos;</emphasis>]&#32;=&#32;<emphasis role="stringliteral">&apos;1&apos;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00065"/>00065 os.environ[<emphasis role="stringliteral">&apos;OPENBLAS_NUM_THREADS&apos;</emphasis>]&#32;=&#32;<emphasis role="stringliteral">&apos;1&apos;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00066"/>00066 
<anchor xml:id="_advretry_8py_source_1l00067"/>00067 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1advretry_1ac919a7d43929d78301af60b182a99f24">minimize</link>(fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_advretry_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,
<anchor xml:id="_advretry_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit:&#32;Optional[float]&#32;=&#32;np.inf,
<anchor xml:id="_advretry_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;Optional[int]&#32;=&#32;5000,
<anchor xml:id="_advretry_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;mp.cpu_count(),
<anchor xml:id="_advretry_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize:&#32;Optional[int]&#32;=&#32;31,
<anchor xml:id="_advretry_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_evaluations:&#32;Optional[int]&#32;=&#32;1500,
<anchor xml:id="_advretry_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_eval_fac:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_advretry_8py_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check_interval:&#32;Optional[int]&#32;=&#32;100,
<anchor xml:id="_advretry_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity:&#32;Optional[int]&#32;=&#32;500,
<anchor xml:id="_advretry_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,
<anchor xml:id="_advretry_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer:&#32;Optional[Optimizer]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_advretry_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num:&#32;Optional[int]&#32;=&#32;0,
<anchor xml:id="_advretry_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;datafile:&#32;Optional[str]&#32;&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_advretry_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;-&gt;&#32;OptimizeResult:
<anchor xml:id="_advretry_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00083"/>00083 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Minimizes&#32;an&#32;objective&#32;function&#32;using&#32;a&#32;specified&#32;optimizer&#32;with&#32;options&#32;for&#32;retrying</emphasis>
<anchor xml:id="_advretry_8py_source_1l00084"/>00084 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;parallel&#32;evaluations,&#32;storing&#32;intermediate&#32;and&#32;final&#32;results.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00085"/>00085 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00086"/>00086 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00087"/>00087 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;be&#32;minimized.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00088"/>00088 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;should&#32;accept&#32;a&#32;single&#32;argument&#32;as&#32;an&#32;array-like&#32;structure&#32;and&#32;return</emphasis>
<anchor xml:id="_advretry_8py_source_1l00089"/>00089 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;float&#32;value&#32;representing&#32;the&#32;function&#32;evaluation.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00090"/>00090 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Bounds):&#32;The&#32;bounds&#32;of&#32;the&#32;search&#32;space&#32;for&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00091"/>00091 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;(Optional[float]):&#32;The&#32;optional&#32;threshold&#32;for&#32;the&#32;objective&#32;function&#32;value.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00092"/>00092 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;exceeded,&#32;the&#32;optimization&#32;process&#32;will&#32;terminate.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00093"/>00093 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;retries&#32;allowed&#32;for&#32;optimization&#32;attempts.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00094"/>00094 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;workers&#32;available&#32;for&#32;parallel&#32;computation.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00095"/>00095 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;popsize&#32;(Optional[int]):&#32;The&#32;size&#32;of&#32;the&#32;population&#32;in&#32;the&#32;optimization&#32;algorithm.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00096"/>00096 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;min_evaluations&#32;(Optional[int]):&#32;The&#32;minimum&#32;number&#32;of&#32;function&#32;evaluations&#32;to&#32;perform</emphasis>
<anchor xml:id="_advretry_8py_source_1l00097"/>00097 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;before&#32;considering&#32;termination.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00098"/>00098 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_eval_fac&#32;(Optional[int]):&#32;The&#32;maximum&#32;number&#32;of&#32;evaluation&#32;factors&#32;allowed.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00099"/>00099 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check_interval&#32;(Optional[int]):&#32;The&#32;interval&#32;at&#32;which&#32;evaluations&#32;are&#32;checked&#32;during</emphasis>
<anchor xml:id="_advretry_8py_source_1l00100"/>00100 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retries.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00101"/>00101 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;(Optional[int]):&#32;The&#32;capacity&#32;of&#32;the&#32;storage&#32;to&#32;hold&#32;records&#32;and&#32;data</emphasis>
<anchor xml:id="_advretry_8py_source_1l00102"/>00102 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;optimization.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00103"/><link linkend="_namespacefcmaes_1_1advretry_1ac919a7d43929d78301af60b182a99f24">00103</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;The&#32;stopping&#32;criteria&#32;for&#32;fitness.&#32;Optimization&#32;halts</emphasis>
<anchor xml:id="_advretry_8py_source_1l00104"/>00104 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;this&#32;value&#32;is&#32;achieved&#32;or&#32;surpassed.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00105"/>00105 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer&#32;(Optional[Optimizer]):&#32;The&#32;optimization&#32;algorithm&#32;to&#32;be&#32;used.&#32;If&#32;None&#32;is</emphasis>
<anchor xml:id="_advretry_8py_source_1l00106"/>00106 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided,&#32;a&#32;default&#32;optimizer&#32;is&#32;created.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00107"/>00107 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;statistical&#32;records&#32;to&#32;maintain&#32;if&#32;required.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00108"/>00108 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;datafile&#32;(Optional[str]):&#32;The&#32;path&#32;to&#32;the&#32;file&#32;used&#32;to&#32;store&#32;or&#32;load&#32;intermediate</emphasis>
<anchor xml:id="_advretry_8py_source_1l00109"/>00109 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;data.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00110"/>00110 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00111"/>00111 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00112"/>00112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult:&#32;The&#32;result&#32;of&#32;the&#32;optimization&#32;process,&#32;which&#32;includes&#32;details&#32;like</emphasis>
<anchor xml:id="_advretry_8py_source_1l00113"/>00113 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;best-found&#32;solution,&#32;its&#32;fitness&#32;value,&#32;and&#32;related&#32;metadata&#32;about&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00114"/>00114 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00115"/>00115 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00116"/>00116 
<anchor xml:id="_advretry_8py_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;optimizer&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer&#32;=&#32;de_cma(min_evaluations,&#32;popsize,&#32;stop_fitness)&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;max_eval_fac&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_eval_fac&#32;=&#32;int(min(50,&#32;1&#32;+&#32;num_retries&#32;//&#32;check_interval))
<anchor xml:id="_advretry_8py_source_1l00121"/>00121 &#32;&#32;&#32;&#32;store&#32;=&#32;<link linkend="_classfcmaes_1_1advretry_1_1_store">Store</link>(fun,&#32;bounds,&#32;max_eval_fac,&#32;check_interval,&#32;capacity,&#32;num_retries,&#32;
<anchor xml:id="_advretry_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num,&#32;datafile)
<anchor xml:id="_advretry_8py_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;datafile&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.load(datafile)
<anchor xml:id="_advretry_8py_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">pass</emphasis>
<anchor xml:id="_advretry_8py_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;retry(store,&#32;optimizer.minimize,&#32;value_limit,&#32;workers,&#32;stop_fitness)
<anchor xml:id="_advretry_8py_source_1l00129"/>00129 
<anchor xml:id="_advretry_8py_source_1l00130"/>00130 <emphasis role="keyword">def&#32;</emphasis>retry(store:&#32;Store,&#32;
<anchor xml:id="_advretry_8py_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize:&#32;Callable,&#32;
<anchor xml:id="_advretry_8py_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit:Optional[float]&#32;=&#32;np.inf,&#32;
<anchor xml:id="_advretry_8py_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers=mp.cpu_count(),&#32;
<anchor xml:id="_advretry_8py_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;=&#32;-np.inf)&#32;-&gt;&#32;OptimizeResult:
<anchor xml:id="_advretry_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00136"/>00136 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Retries&#32;the&#32;optimization&#32;process&#32;using&#32;multiple&#32;worker&#32;processes&#32;and&#32;random</emphasis>
<anchor xml:id="_advretry_8py_source_1l00137"/>00137 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;number&#32;generators.&#32;This&#32;function&#32;parallelizes&#32;the&#32;optimization&#32;task,&#32;applies</emphasis>
<anchor xml:id="_advretry_8py_source_1l00138"/>00138 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;a&#32;stopping&#32;criterion&#32;based&#32;on&#32;the&#32;provided&#32;fitness&#32;value,&#32;and&#32;selects&#32;the&#32;best</emphasis>
<anchor xml:id="_advretry_8py_source_1l00139"/>00139 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;result&#32;from&#32;the&#32;optimization&#32;attempts.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00140"/>00140 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00141"/>00141 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00142"/>00142 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(Store):&#32;Stores&#32;results&#32;of&#32;optimization&#32;during&#32;the&#32;process.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00143"/>00143 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize&#32;(Callable):&#32;The&#32;optimization&#32;function&#32;to&#32;be&#32;applied.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00144"/>00144 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;(Optional[float]):&#32;The&#32;upper&#32;limit&#32;for&#32;the&#32;function&#32;value</emphasis>
<anchor xml:id="_advretry_8py_source_1l00145"/>00145 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;considered&#32;in&#32;optimization.&#32;Defaults&#32;to&#32;positive&#32;infinity&#32;(np.inf).</emphasis>
<anchor xml:id="_advretry_8py_source_1l00146"/>00146 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(int):&#32;The&#32;number&#32;of&#32;parallel&#32;workers&#32;to&#32;allocate&#32;for&#32;the&#32;process.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00147"/>00147 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;the&#32;total&#32;number&#32;of&#32;CPU&#32;cores&#32;available.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00148"/>00148 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;The&#32;stopping&#32;fitness&#32;criterion&#32;for&#32;the&#32;optimization</emphasis>
<anchor xml:id="_advretry_8py_source_1l00149"/>00149 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process.&#32;The&#32;optimization&#32;stops&#32;when&#32;this&#32;value&#32;is&#32;reached.&#32;Defaults</emphasis>
<anchor xml:id="_advretry_8py_source_1l00150"/>00150 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;negative&#32;infinity&#32;(-np.inf).</emphasis>
<anchor xml:id="_advretry_8py_source_1l00151"/>00151 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00152"/>00152 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00153"/>00153 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult:&#32;The&#32;result&#32;of&#32;the&#32;optimization&#32;process&#32;containing&#32;the&#32;best</emphasis>
<anchor xml:id="_advretry_8py_source_1l00154"/><link linkend="_namespacefcmaes_1_1advretry_1afa7f53840d446eae71b0a9d7a01077e4">00154</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;solution&#32;found&#32;(x),&#32;the&#32;fitness&#32;of&#32;this&#32;solution&#32;(fun),&#32;the&#32;number&#32;of</emphasis>
<anchor xml:id="_advretry_8py_source_1l00155"/>00155 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;evaluations&#32;(nfev),&#32;and&#32;a&#32;success&#32;flag&#32;(success).</emphasis>
<anchor xml:id="_advretry_8py_source_1l00156"/>00156 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;sg&#32;=&#32;SeedSequence()
<anchor xml:id="_advretry_8py_source_1l00158"/>00158 &#32;&#32;&#32;&#32;rgs&#32;=&#32;[Generator(PCG64DXSM(s))&#32;<emphasis role="keywordflow">for</emphasis>&#32;s&#32;<emphasis role="keywordflow">in</emphasis>&#32;sg.spawn(workers)]
<anchor xml:id="_advretry_8py_source_1l00159"/>00159 &#32;&#32;&#32;&#32;proc=[Process(target=_retry_loop,
<anchor xml:id="_advretry_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;args=(pid,&#32;rgs,&#32;store,&#32;optimize,&#32;value_limit,&#32;stop_fitness))&#32;<emphasis role="keywordflow">for</emphasis>&#32;pid&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(workers)]
<anchor xml:id="_advretry_8py_source_1l00161"/>00161 &#32;&#32;&#32;&#32;[p.start()&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;proc]
<anchor xml:id="_advretry_8py_source_1l00162"/>00162 &#32;&#32;&#32;&#32;[p.join()&#32;<emphasis role="keywordflow">for</emphasis>&#32;p&#32;<emphasis role="keywordflow">in</emphasis>&#32;proc]
<anchor xml:id="_advretry_8py_source_1l00163"/>00163 &#32;&#32;&#32;&#32;store.sort()
<anchor xml:id="_advretry_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;store.dump()
<anchor xml:id="_advretry_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;OptimizeResult(x=store.get_x_best(),&#32;fun=store.get_y_best(),&#32;
<anchor xml:id="_advretry_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nfev=store.get_count_evals(),&#32;success=<emphasis role="keyword">True</emphasis>)
<anchor xml:id="_advretry_8py_source_1l00167"/>00167 
<anchor xml:id="_advretry_8py_source_1l00168"/>00168 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1advretry_1a5e2cd1f8c09ad3861f3e9fec0c5d8ea0">minimize_plot</link>(name:&#32;str,&#32;
<anchor xml:id="_advretry_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer:&#32;Optimizer,&#32;
<anchor xml:id="_advretry_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;
<anchor xml:id="_advretry_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,&#32;
<anchor xml:id="_advretry_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit:&#32;Optional[float]&#32;=&#32;np.inf,&#32;
<anchor xml:id="_advretry_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot_limit:&#32;Optional[float]&#32;=&#32;np.inf,&#32;
<anchor xml:id="_advretry_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;Optional[int]&#32;=&#32;1024,&#32;
<anchor xml:id="_advretry_8py_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers:&#32;Optional[int]&#32;=&#32;mp.cpu_count(),&#32;
<anchor xml:id="_advretry_8py_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness:&#32;Optional[float]&#32;=&#32;-np.inf,&#32;
<anchor xml:id="_advretry_8py_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num:&#32;Optional[int]&#32;=&#32;5000)&#32;-&gt;&#32;OptimizeResult:
<anchor xml:id="_advretry_8py_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00179"/>00179 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Minimizes&#32;an&#32;objective&#32;function&#32;using&#32;a&#32;specified&#32;optimizer&#32;and&#32;plots&#32;the&#32;optimization</emphasis>
<anchor xml:id="_advretry_8py_source_1l00180"/>00180 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;progress.&#32;The&#32;function&#32;performs&#32;multiple&#32;retries,&#32;applies&#32;value&#32;and&#32;plot&#32;limits,</emphasis>
<anchor xml:id="_advretry_8py_source_1l00181"/>00181 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;saves&#32;the&#32;optimization&#32;improvements&#32;for&#32;further&#32;analysis.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00182"/>00182 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00183"/>00183 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00184"/>00184 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;The&#32;base&#32;name&#32;for&#32;the&#32;optimization&#32;run,&#32;used&#32;in&#32;logs&#32;and</emphasis>
<anchor xml:id="_advretry_8py_source_1l00185"/>00185 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output&#32;file&#32;names.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00186"/>00186 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimizer&#32;(Optimizer):&#32;The&#32;optimization&#32;algorithm&#32;instance&#32;to&#32;be&#32;used.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00187"/>00187 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;objective&#32;function&#32;to&#32;minimize.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00188"/>00188 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds&#32;(Bounds):&#32;Bounds&#32;for&#32;the&#32;input&#32;space&#32;of&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00189"/>00189 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;(Optional[float]):&#32;The&#32;threshold&#32;for&#32;the&#32;function&#32;value&#32;beyond</emphasis>
<anchor xml:id="_advretry_8py_source_1l00190"/>00190 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;which&#32;the&#32;results&#32;are&#32;not&#32;considered.&#32;Defaults&#32;to&#32;infinity.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00191"/>00191 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plot_limit&#32;(Optional[float]):&#32;The&#32;limit&#32;for&#32;the&#32;maximum&#32;function&#32;value&#32;to</emphasis>
<anchor xml:id="_advretry_8py_source_1l00192"/>00192 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;include&#32;in&#32;the&#32;plot.&#32;Defaults&#32;to&#32;infinity.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00193"/>00193 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;optimization&#32;retries&#32;allowed.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00194"/>00194 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Defaults&#32;to&#32;1024.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00195"/>00195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;workers&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;parallel&#32;workers&#32;to&#32;use&#32;during</emphasis>
<anchor xml:id="_advretry_8py_source_1l00196"/>00196 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization.&#32;Defaults&#32;to&#32;the&#32;number&#32;of&#32;CPU&#32;cores&#32;available.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00197"/>00197 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(Optional[float]):&#32;The&#32;fitness&#32;threshold&#32;to&#32;stop&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00198"/><link linkend="_namespacefcmaes_1_1advretry_1a5e2cd1f8c09ad3861f3e9fec0c5d8ea0">00198</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimization&#32;early&#32;if&#32;reached.&#32;Defaults&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00199"/>00199 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num&#32;(Optional[int]):&#32;The&#32;number&#32;of&#32;stored&#32;samples&#32;for&#32;statistical</emphasis>
<anchor xml:id="_advretry_8py_source_1l00200"/>00200 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;analysis&#32;during&#32;optimization.&#32;Defaults&#32;to&#32;5000.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00201"/>00201 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00202"/>00202 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00203"/>00203 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptimizeResult:&#32;The&#32;results&#32;of&#32;the&#32;optimization,&#32;which&#32;include&#32;details&#32;on</emphasis>
<anchor xml:id="_advretry_8py_source_1l00204"/>00204 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;best&#32;solution&#32;found,&#32;its&#32;fitness,&#32;and&#32;other&#32;metrics.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00205"/>00205 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00206"/>00206 &#32;&#32;&#32;&#32;time0&#32;=&#32;time.perf_counter()&#32;<emphasis role="comment">#&#32;optimization&#32;start&#32;time</emphasis>
<anchor xml:id="_advretry_8py_source_1l00207"/>00207 &#32;&#32;&#32;&#32;name&#32;+=&#32;<emphasis role="stringliteral">&apos;_&apos;</emphasis>&#32;+&#32;optimizer.name
<anchor xml:id="_advretry_8py_source_1l00208"/>00208 &#32;&#32;&#32;&#32;logger.info(<emphasis role="stringliteral">&apos;optimize&#32;&apos;</emphasis>&#32;+&#32;name)&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;store&#32;=&#32;<link linkend="_classfcmaes_1_1advretry_1_1_store">Store</link>(fun,&#32;bounds,&#32;capacity&#32;=&#32;500,&#32;statistic_num&#32;=&#32;statistic_num,&#32;
<anchor xml:id="_advretry_8py_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries=num_retries)
<anchor xml:id="_advretry_8py_source_1l00211"/>00211 &#32;&#32;&#32;&#32;ret&#32;=&#32;retry(store,&#32;optimizer.minimize,&#32;value_limit,&#32;workers,&#32;stop_fitness)
<anchor xml:id="_advretry_8py_source_1l00212"/>00212 &#32;&#32;&#32;&#32;impr&#32;=&#32;store.get_improvements()
<anchor xml:id="_advretry_8py_source_1l00213"/>00213 &#32;&#32;&#32;&#32;np.savez_compressed(name,&#32;ys=impr)
<anchor xml:id="_advretry_8py_source_1l00214"/>00214 &#32;&#32;&#32;&#32;filtered&#32;=&#32;np.array([imp&#32;<emphasis role="keywordflow">for</emphasis>&#32;imp&#32;<emphasis role="keywordflow">in</emphasis>&#32;impr&#32;<emphasis role="keywordflow">if</emphasis>&#32;imp[1]&#32;&lt;&#32;plot_limit])
<anchor xml:id="_advretry_8py_source_1l00215"/>00215 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(filtered)&#32;&gt;&#32;0:&#32;impr&#32;=&#32;filtered
<anchor xml:id="_advretry_8py_source_1l00216"/>00216 &#32;&#32;&#32;&#32;logger.info(name&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;time&#32;&apos;</emphasis>&#32;+&#32;str(dtime(time0)))&#32;
<anchor xml:id="_advretry_8py_source_1l00217"/>00217 &#32;&#32;&#32;&#32;plot(impr,&#32;<emphasis role="stringliteral">&apos;progress_aret.&apos;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&apos;.png&apos;</emphasis>,&#32;label&#32;=&#32;name,&#32;
<anchor xml:id="_advretry_8py_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xlabel&#32;=&#32;<emphasis role="stringliteral">&apos;time&#32;in&#32;sec&apos;</emphasis>,&#32;ylabel&#32;=&#32;<emphasis role="stringliteral">r&apos;$f$&apos;</emphasis>)
<anchor xml:id="_advretry_8py_source_1l00219"/>00219 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret
<anchor xml:id="_advretry_8py_source_1l00220"/>00220 &#32;
<anchor xml:id="_advretry_8py_source_1l00221"/>00221 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store">Store</link>(object):
<anchor xml:id="_advretry_8py_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00223"/>00223 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Manages&#32;the&#32;storing,&#32;evaluation,&#32;and&#32;tracking&#32;of&#32;data&#32;in&#32;an&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00224"/>00224 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00225"/>00225 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;class&#32;enables&#32;handling&#32;function&#32;evaluations&#32;and&#32;implements&#32;tools&#32;for&#32;statistics</emphasis>
<anchor xml:id="_advretry_8py_source_1l00226"/>00226 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;tracking,&#32;result&#32;persistence,&#32;and&#32;multiprocessing&#32;compatibility.&#32;It&#32;facilitates&#32;managing</emphasis>
<anchor xml:id="_advretry_8py_source_1l00227"/>00227 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;tasks&#32;with&#32;specific&#32;bounds,&#32;ensuring&#32;efficient&#32;computational&#32;resource&#32;usage</emphasis>
<anchor xml:id="_advretry_8py_source_1l00228"/>00228 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;tracking&#32;statistical&#32;progress&#32;over&#32;iterations.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00229"/>00229 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00230"/>00230 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Attributes:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00231"/>00231 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun&#32;(Callable[[ArrayLike],&#32;float]):&#32;The&#32;fitness&#32;function&#32;to&#32;be&#32;optimized.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00232"/>00232 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower&#32;(ArrayLike):&#32;The&#32;lower&#32;bounds&#32;for&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00233"/>00233 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;(ArrayLike):&#32;The&#32;upper&#32;bounds&#32;for&#32;the&#32;optimization&#32;problem.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00234"/><link linkend="_classfcmaes_1_1advretry_1_1_store">00234</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delta&#32;(ArrayLike):&#32;The&#32;difference&#32;between&#32;upper&#32;and&#32;lower&#32;bounds.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00235"/>00235 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;(int):&#32;Maximum&#32;storage&#32;capacity&#32;for&#32;evaluated&#32;results.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00236"/>00236 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries&#32;(int):&#32;Maximum&#32;number&#32;of&#32;retries&#32;during&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00237"/>00237 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eval_fac_incr&#32;(float):&#32;Increment&#32;factor&#32;for&#32;evaluation&#32;adjustments.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00238"/>00238 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_eval_fac&#32;(int):&#32;Maximum&#32;evaluation&#32;factor&#32;throughout&#32;the&#32;retries.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00239"/>00239 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check_interval&#32;(int):&#32;Interval&#32;for&#32;sorting&#32;the&#32;evaluation&#32;store.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00240"/>00240 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;(int):&#32;Dimension&#32;of&#32;the&#32;optimization&#32;problem&#32;based&#32;on&#32;bounds.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00241"/>00241 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t0&#32;(float):&#32;Timestamp&#32;indicating&#32;the&#32;start&#32;of&#32;evaluations&#32;(used&#32;for&#32;timing&#32;statistics).</emphasis>
<anchor xml:id="_advretry_8py_source_1l00242"/>00242 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num&#32;(int):&#32;Number&#32;of&#32;statistical&#32;points&#32;maintained&#32;for&#32;tracking.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00243"/>00243 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;datafile&#32;(Optional[str]):&#32;Path&#32;to&#32;file&#32;for&#32;saving&#32;and&#32;loading&#32;data.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00244"/>00244 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00246"/>00246 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a1dfb9b034380f6ca44583ab26014d0ba">__init__</link>(self,&#32;
<anchor xml:id="_advretry_8py_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;Callable[[ArrayLike],&#32;float],&#32;<emphasis role="comment">#&#32;fitness&#32;function</emphasis>
<anchor xml:id="_advretry_8py_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds,&#32;<emphasis role="comment">#&#32;bounds&#32;of&#32;the&#32;objective&#32;function&#32;arguments</emphasis>
<anchor xml:id="_advretry_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_eval_fac:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="comment">#&#32;maximal&#32;number&#32;of&#32;evaluations&#32;factor</emphasis>
<anchor xml:id="_advretry_8py_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check_interval:&#32;Optional[int]&#32;=&#32;100,&#32;<emphasis role="comment">#&#32;sort&#32;evaluation&#32;store&#32;after&#32;check_interval&#32;iterations</emphasis>
<anchor xml:id="_advretry_8py_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity:&#32;Optional[int]&#32;=&#32;500,&#32;<emphasis role="comment">#&#32;capacity&#32;of&#32;the&#32;evaluation&#32;store</emphasis>
<anchor xml:id="_advretry_8py_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;Optional[int]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_advretry_8py_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num:&#32;Optional[int]&#32;=&#32;0,
<anchor xml:id="_advretry_8py_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;datafile:&#32;Optional[str]&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_advretry_8py_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;):
<anchor xml:id="_advretry_8py_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00257"/>00257 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Initializes&#32;an&#32;instance&#32;of&#32;the&#32;class&#32;with&#32;parameters&#32;and&#32;attributes&#32;required&#32;for</emphasis>
<anchor xml:id="_advretry_8py_source_1l00258"/>00258 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;managing&#32;function&#32;optimization&#32;within&#32;specified&#32;bounds&#32;using&#32;shared&#32;multiprocessing</emphasis>
<anchor xml:id="_advretry_8py_source_1l00259"/>00259 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resources.&#32;Sets&#32;up&#32;the&#32;evaluation&#32;store,&#32;statistic&#32;tracking,&#32;and&#32;random&#32;generator.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00260"/>00260 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00261"/>00261 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00262"/>00262 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;A&#32;fitness&#32;function&#32;to&#32;be&#32;optimized.&#32;It&#32;takes&#32;an&#32;array-like&#32;input&#32;and&#32;returns</emphasis>
<anchor xml:id="_advretry_8py_source_1l00263"/>00263 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;float&#32;value.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00264"/>00264 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds:&#32;Bounds&#32;of&#32;the&#32;objective&#32;function&#32;arguments&#32;defined&#32;as&#32;an&#32;instance&#32;of&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00265"/>00265 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Bounds&#32;class.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00266"/>00266 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_eval_fac:&#32;Optional;&#32;Maximum&#32;number&#32;of&#32;evaluations&#32;factor.&#32;Defaults&#32;to&#32;None.&#32;If</emphasis>
<anchor xml:id="_advretry_8py_source_1l00267"/>00267 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None,&#32;it&#32;is&#32;calculated&#32;based&#32;on&#32;`num_retries`&#32;and&#32;`check_interval`.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00268"/>00268 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check_interval:&#32;Optional;&#32;Number&#32;of&#32;iterations&#32;after&#32;which&#32;the&#32;evaluation&#32;store&#32;is</emphasis>
<anchor xml:id="_advretry_8py_source_1l00269"/>00269 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sorted.&#32;Defaults&#32;to&#32;100.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00270"/>00270 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity:&#32;Optional;&#32;Capacity&#32;of&#32;the&#32;evaluation&#32;store.&#32;Defaults&#32;to&#32;500.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00271"/>00271 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries:&#32;Optional;&#32;Maximum&#32;number&#32;of&#32;retries&#32;allowed.&#32;If&#32;None,&#32;it&#32;is&#32;calculated</emphasis>
<anchor xml:id="_advretry_8py_source_1l00272"/>00272 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;based&#32;on&#32;`max_eval_fac`&#32;and&#32;`check_interval`.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00273"/>00273 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;statistic_num:&#32;Optional;&#32;Number&#32;of&#32;statistics&#32;points&#32;to&#32;be&#32;maintained&#32;for&#32;tracking.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00274"/>00274 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Set&#32;to&#32;0&#32;to&#32;disable&#32;statistics.&#32;Defaults&#32;to&#32;0.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00275"/>00275 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;datafile:&#32;Optional;&#32;Path&#32;to&#32;a&#32;file&#32;for&#32;saving/loading&#32;relevant&#32;data.&#32;Defaults&#32;to&#32;None.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00276"/>00276 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5">fun</link>&#32;=&#32;fun
<anchor xml:id="_advretry_8py_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678">lower</link>,&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a8d112bb91cc58f032a0bb929c236fd8e">upper</link>&#32;=&#32;_convertBounds(bounds)
<anchor xml:id="_advretry_8py_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ad2d1513e8146883a75bab3f55fb4be95">delta</link>&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a8d112bb91cc58f032a0bb929c236fd8e">upper</link>&#32;-&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678">lower</link>&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30">capacity</link>&#32;=&#32;capacity
<anchor xml:id="_advretry_8py_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;max_eval_fac&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;num_retries&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_eval_fac&#32;=&#32;50
<anchor xml:id="_advretry_8py_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_eval_fac&#32;=&#32;int(min(50,&#32;1&#32;+&#32;num_retries&#32;//&#32;check_interval))
<anchor xml:id="_advretry_8py_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;num_retries&#32;==&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_retries&#32;=&#32;max_eval_fac&#32;*&#32;check_interval
<anchor xml:id="_advretry_8py_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a4c08da826f59305eaa14d6bbdbaa6b1d">num_retries</link>&#32;=&#32;num_retries
<anchor xml:id="_advretry_8py_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;increment&#32;eval_fac&#32;so&#32;that&#32;max_eval_fac&#32;is&#32;reached&#32;at&#32;last&#32;retry</emphasis>
<anchor xml:id="_advretry_8py_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aebbd407d5af1334e38fbdc5a8ba36d3f">eval_fac_incr</link>&#32;=&#32;max_eval_fac&#32;/&#32;(num_retries/check_interval)
<anchor xml:id="_advretry_8py_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538">max_eval_fac</link>&#32;=&#32;max_eval_fac
<anchor xml:id="_advretry_8py_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae">check_interval</link>&#32;=&#32;check_interval&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00293"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a1dfb9b034380f6ca44583ab26014d0ba">00293</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9">dim</link>&#32;=&#32;len(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678">lower</link>)
<anchor xml:id="_advretry_8py_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3353add8a5c4d01dd02a8a56890c1036">t0</link>&#32;=&#32;time.perf_counter()
<anchor xml:id="_advretry_8py_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f">statistic_num</link>&#32;=&#32;statistic_num
<anchor xml:id="_advretry_8py_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a4a5af1d8a29594eff250c931f481d146">datafile</link>&#32;=&#32;datafile
<anchor xml:id="_advretry_8py_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8">rg</link>&#32;=&#32;random.Random()
<anchor xml:id="_advretry_8py_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#self.rg&#32;=&#32;Generator(PCG64DXSM()))</emphasis>
<anchor xml:id="_advretry_8py_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#self.rg&#32;=&#32;Generator(PCG64DXSM(random.randint(0,&#32;2**63&#32;-&#32;1)))</emphasis>
<anchor xml:id="_advretry_8py_source_1l00300"/>00300 &#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#shared&#32;between&#32;processes</emphasis>
<anchor xml:id="_advretry_8py_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce">add_mutex</link>&#32;=&#32;mp.Lock()&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00303"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5">00303</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a784de4dd2241f0d45a199379be53532d">check_mutex</link>&#32;=&#32;mp.Lock()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00304"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678">00304</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89">xs</link>&#32;=&#32;mp.RawArray(ct.c_double,&#32;capacity&#32;*&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9">dim</link>)
<anchor xml:id="_advretry_8py_source_1l00305"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1ad2d1513e8146883a75bab3f55fb4be95">00305</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100">ys</link>&#32;=&#32;mp.RawArray(ct.c_double,&#32;capacity)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00306"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30">00306</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c">eval_fac</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;1)
<anchor xml:id="_advretry_8py_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98">count_evals</link>&#32;=&#32;mp.RawValue(ct.c_long,&#32;0)&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f">count_runs</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)&#32;
<anchor xml:id="_advretry_8py_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a">best_y</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;np.inf)&#32;
<anchor xml:id="_advretry_8py_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1afefa9194fbf5ada1b23dcd45ed3e48f3">worst_y</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;np.inf)&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57">best_x</link>&#32;=&#32;mp.RawArray(ct.c_double,&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9">dim</link>)
<anchor xml:id="_advretry_8py_source_1l00313"/>00313 &#32;
<anchor xml:id="_advretry_8py_source_1l00314"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a4c08da826f59305eaa14d6bbdbaa6b1d">00314</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;statistic_num&#32;&gt;&#32;0:&#32;&#32;<emphasis role="comment">#&#32;enable&#32;statistics&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f">statistic_num</link>&#32;=&#32;statistic_num
<anchor xml:id="_advretry_8py_source_1l00316"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1aebbd407d5af1334e38fbdc5a8ba36d3f">00316</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d">time</link>&#32;=&#32;mp.RawArray(ct.c_double,&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f">statistic_num</link>)
<anchor xml:id="_advretry_8py_source_1l00317"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538">00317</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2">val</link>&#32;=&#32;mp.RawArray(ct.c_double,&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f">statistic_num</link>)
<anchor xml:id="_advretry_8py_source_1l00318"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae">00318</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4">si</link>&#32;=&#32;mp.RawValue(ct.c_int,&#32;0)
<anchor xml:id="_advretry_8py_source_1l00319"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9">00319</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ab1505fe94e716ee8645e7e694f69efbc">sevals</link>&#32;=&#32;mp.RawValue(ct.c_long,&#32;0)
<anchor xml:id="_advretry_8py_source_1l00320"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a3353add8a5c4d01dd02a8a56890c1036">00320</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a44fe2e19ed26797a80dd27ee7c1a6b50">bval</link>&#32;=&#32;mp.RawValue(ct.c_double,&#32;np.inf)
<anchor xml:id="_advretry_8py_source_1l00321"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f">00321</link> 
<anchor xml:id="_advretry_8py_source_1l00322"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a4a5af1d8a29594eff250c931f481d146">00322</link> &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;register&#32;improvement&#32;-&#32;time&#32;and&#32;value</emphasis>
<anchor xml:id="_advretry_8py_source_1l00323"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8">00323</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa">wrapper</link>(self,&#32;x:&#32;ArrayLike)&#32;-&gt;&#32;float:
<anchor xml:id="_advretry_8py_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00325"/>00325 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wrapper&#32;function&#32;to&#32;evaluate&#32;a&#32;given&#32;function,&#32;update&#32;statistics,&#32;and&#32;log&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00326"/>00326 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;results.&#32;It&#32;is&#32;typically&#32;used&#32;in&#32;optimization&#32;procedures&#32;to&#32;monitor&#32;evaluations</emphasis>
<anchor xml:id="_advretry_8py_source_1l00327"/>00327 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;track&#32;progress&#32;over&#32;iterations.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00328"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce">00328</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00329"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a784de4dd2241f0d45a199379be53532d">00329</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00330"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89">00330</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;(ArrayLike):&#32;The&#32;input&#32;array&#32;to&#32;evaluate&#32;the&#32;function.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00331"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100">00331</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00332"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c">00332</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00333"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98">00333</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;evaluated&#32;function&#32;output&#32;for&#32;the&#32;given&#32;input&#32;array.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00334"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f">00334</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00335"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">00335</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5">fun</link>(x)
<anchor xml:id="_advretry_8py_source_1l00336"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a">00336</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ab1505fe94e716ee8645e7e694f69efbc">sevals</link>.value&#32;+=&#32;1
<anchor xml:id="_advretry_8py_source_1l00337"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1afefa9194fbf5ada1b23dcd45ed3e48f3">00337</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a44fe2e19ed26797a80dd27ee7c1a6b50">bval</link>.value:
<anchor xml:id="_advretry_8py_source_1l00338"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57">00338</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a44fe2e19ed26797a80dd27ee7c1a6b50">bval</link>.value&#32;=&#32;y
<anchor xml:id="_advretry_8py_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;si&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4">si</link>.value
<anchor xml:id="_advretry_8py_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;si&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f">statistic_num</link>&#32;-&#32;1:
<anchor xml:id="_advretry_8py_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4">si</link>.value&#32;=&#32;si&#32;+&#32;1
<anchor xml:id="_advretry_8py_source_1l00342"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d">00342</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d">time</link>[si]&#32;=&#32;dtime(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3353add8a5c4d01dd02a8a56890c1036">t0</link>)
<anchor xml:id="_advretry_8py_source_1l00343"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2">00343</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2">val</link>[si]&#32;=&#32;y&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00344"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4">00344</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(str(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d">time</link>[si])&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;&#32;+&#32;
<anchor xml:id="_advretry_8py_source_1l00345"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1ab1505fe94e716ee8645e7e694f69efbc">00345</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ab1505fe94e716ee8645e7e694f69efbc">sevals</link>.value)&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;
<anchor xml:id="_advretry_8py_source_1l00346"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a44fe2e19ed26797a80dd27ee7c1a6b50">00346</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str(y)&#32;+&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;+&#32;
<anchor xml:id="_advretry_8py_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str(list(x)))
<anchor xml:id="_advretry_8py_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y
<anchor xml:id="_advretry_8py_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00350"/>00350 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;persist&#32;store</emphasis>
<anchor xml:id="_advretry_8py_source_1l00351"/>00351 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a19b9d6c0787fb06a2b00e595f487bf37">save</link>(self,&#32;name:&#32;str):
<anchor xml:id="_advretry_8py_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00353"/>00353 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Saves&#32;the&#32;current&#32;data&#32;of&#32;the&#32;instance&#32;to&#32;a&#32;compressed&#32;file&#32;using&#32;bz2&#32;and&#32;cPickle&#32;modules.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00354"/>00354 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00355"/>00355 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;method&#32;compresses&#32;and&#32;serializes&#32;the&#32;data&#32;obtained&#32;from&#32;`get_data`&#32;and&#32;saves</emphasis>
<anchor xml:id="_advretry_8py_source_1l00356"/>00356 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;to&#32;a&#32;file&#32;with&#32;the&#32;specified&#32;name&#32;appended&#32;by&#32;the&#32;&apos;.pbz2&apos;&#32;extension.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00357"/>00357 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00358"/>00358 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00359"/>00359 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;The&#32;desired&#32;name&#32;for&#32;the&#32;output&#32;file,&#32;excluding&#32;the&#32;extension.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00360"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa">00360</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;bz2.BZ2File(name&#32;+&#32;<emphasis role="stringliteral">&apos;.pbz2&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;w&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;f:
<anchor xml:id="_advretry_8py_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cPickle.dump(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7">get_data</link>(),&#32;f)
<anchor xml:id="_advretry_8py_source_1l00363"/>00363 
<anchor xml:id="_advretry_8py_source_1l00364"/>00364 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1adc9b28c43aee9110aef2fad53f30a077">load</link>(self,&#32;name:&#32;str):
<anchor xml:id="_advretry_8py_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;Loads&#32;and&#32;processes&#32;data&#32;from&#32;a&#32;compressed&#32;file.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00366"/>00366 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00367"/>00367 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;allows&#32;loading&#32;data&#32;from&#32;a&#32;file&#32;compressed&#32;with&#32;BZ2&#32;and&#32;serialized</emphasis>
<anchor xml:id="_advretry_8py_source_1l00368"/>00368 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;with&#32;cPickle.&#32;After&#32;loading,&#32;the&#32;data&#32;is&#32;processed&#32;or&#32;assigned&#32;using&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00369"/>00369 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`set_data`&#32;method&#32;of&#32;the&#32;instance.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00370"/>00370 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00371"/>00371 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00372"/>00372 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;(str):&#32;The&#32;name&#32;of&#32;the&#32;file&#32;(without&#32;extension)&#32;to&#32;load&#32;data&#32;from.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00373"/>00373 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;cPickle.load(bz2.BZ2File(name&#32;+&#32;<emphasis role="stringliteral">&apos;.pbz2&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;rb&apos;</emphasis>))
<anchor xml:id="_advretry_8py_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3">set_data</link>(data)
<anchor xml:id="_advretry_8py_source_1l00376"/>00376 &#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00377"/>00377 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7">get_data</link>(self)&#32;-&gt;&#32;List:
<anchor xml:id="_advretry_8py_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00379"/>00379 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;and&#32;aggregates&#32;data&#32;from&#32;various&#32;attributes&#32;and&#32;methods.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00380"/>00380 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00381"/>00381 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;gathers&#32;data&#32;by&#32;calling&#32;several&#32;other&#32;methods&#32;and&#32;accessing&#32;a&#32;specific</emphasis>
<anchor xml:id="_advretry_8py_source_1l00382"/>00382 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;attribute.&#32;It&#32;consolidates&#32;these&#32;pieces&#32;of&#32;data&#32;into&#32;a&#32;single&#32;list&#32;and&#32;returns&#32;it.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00383"/>00383 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00384"/>00384 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00385"/>00385 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List:&#32;A&#32;list&#32;containing&#32;data&#32;from&#32;`get_xs()`,&#32;`get_ys()`,&#32;`get_x_best()`,</emphasis>
<anchor xml:id="_advretry_8py_source_1l00386"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a19b9d6c0787fb06a2b00e595f487bf37">00386</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;`get_y_best()`&#32;methods,&#32;and&#32;the&#32;`num_stored.value`&#32;attribute.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00387"/>00387 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;[]
<anchor xml:id="_advretry_8py_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.append(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2">get_xs</link>())
<anchor xml:id="_advretry_8py_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.append(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77">get_ys</link>())
<anchor xml:id="_advretry_8py_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.append(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558">get_x_best</link>())
<anchor xml:id="_advretry_8py_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.append(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a">get_y_best</link>())
<anchor xml:id="_advretry_8py_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.append(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value)
<anchor xml:id="_advretry_8py_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data
<anchor xml:id="_advretry_8py_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00396"/>00396 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3">set_data</link>(self,&#32;data:&#32;ArrayLike):
<anchor xml:id="_advretry_8py_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00398"/>00398 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sets&#32;the&#32;data&#32;for&#32;an&#32;internal&#32;storage&#32;structure&#32;and&#32;processes&#32;it.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00399"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1adc9b28c43aee9110aef2fad53f30a077">00399</link> <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00400"/>00400 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00401"/>00401 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;(ArrayLike):&#32;A&#32;multi-dimensional&#32;array-like&#32;structure&#32;containing:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00402"/>00402 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;data[0]:&#32;The&#32;x-coordinates.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00403"/>00403 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;data[1]:&#32;The&#32;y-coordinates.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00404"/>00404 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;data[2]:&#32;A&#32;subset&#32;of&#32;best&#32;x-coordinates.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00405"/>00405 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;data[3]:&#32;The&#32;best&#32;y-coordinate.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00406"/>00406 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;data[4]:&#32;The&#32;total&#32;count&#32;of&#32;stored&#32;elements.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00407"/>00407 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00408"/>00408 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs&#32;=&#32;data[0]
<anchor xml:id="_advretry_8py_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;data[1]
<anchor xml:id="_advretry_8py_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(ys)):
<anchor xml:id="_advretry_8py_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9">replace</link>(i,&#32;ys[i],&#32;xs[i])
<anchor xml:id="_advretry_8py_source_1l00413"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7">00413</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57">best_x</link>[:]&#32;=&#32;data[2][:]
<anchor xml:id="_advretry_8py_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a">best_y</link>.value&#32;=&#32;data[3]
<anchor xml:id="_advretry_8py_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value&#32;=&#32;data[4]
<anchor xml:id="_advretry_8py_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4">sort</link>()
<anchor xml:id="_advretry_8py_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00418"/>00418 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1afda8cdd53cf9e0c3160f59bb623becba">get_improvements</link>(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_advretry_8py_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00420"/>00420 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calculates&#32;and&#32;returns&#32;an&#32;array&#32;of&#32;improvements&#32;based&#32;on&#32;stored&#32;time&#32;and&#32;value&#32;data.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00421"/>00421 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00422"/>00422 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;method&#32;processes&#32;the&#32;time&#32;and&#32;value&#32;attributes&#32;up&#32;to&#32;the&#32;index&#32;defined&#32;by&#32;`si.value`</emphasis>
<anchor xml:id="_advretry_8py_source_1l00423"/>00423 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;combines&#32;them&#32;into&#32;a&#32;structured&#32;NumPy&#32;array.&#32;It&#32;allows&#32;extracting&#32;the&#32;corresponding</emphasis>
<anchor xml:id="_advretry_8py_source_1l00424"/>00424 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values&#32;and&#32;improvements&#32;over&#32;the&#32;determined&#32;slice&#32;of&#32;the&#32;data.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00425"/>00425 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00426"/>00426 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00427"/>00427 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;NumPy&#32;array&#32;containing&#32;pairs&#32;of&#32;time&#32;and&#32;value&#32;up&#32;to&#32;`si.value`.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00428"/>00428 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array(list(zip(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d">time</link>[:self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4">si</link>.value],&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2">val</link>[:self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4">si</link>.value])))
<anchor xml:id="_advretry_8py_source_1l00430"/>00430 &#32;
<anchor xml:id="_advretry_8py_source_1l00431"/>00431 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;get&#32;num&#32;best&#32;values&#32;at&#32;evenly&#32;distributed&#32;times</emphasis>
<anchor xml:id="_advretry_8py_source_1l00432"/>00432 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a6ccfce173196171f999e4a3c4531f01f">get_statistics</link>(self,&#32;num:&#32;int)&#32;-&gt;&#32;List:
<anchor xml:id="_advretry_8py_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00434"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3">00434</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calculates&#32;and&#32;returns&#32;a&#32;list&#32;of&#32;statistics&#32;determined&#32;by&#32;evenly&#32;dividing&#32;the&#32;provided</emphasis>
<anchor xml:id="_advretry_8py_source_1l00435"/>00435 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time&#32;series&#32;data&#32;into&#32;a&#32;specified&#32;number&#32;of&#32;segments.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00436"/>00436 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00437"/>00437 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;processes&#32;time&#32;series&#32;and&#32;value&#32;arrays&#32;to&#32;calculate&#32;specific&#32;statistics</emphasis>
<anchor xml:id="_advretry_8py_source_1l00438"/>00438 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;based&#32;on&#32;the&#32;distribution&#32;of&#32;data&#32;over&#32;a&#32;fixed&#32;number&#32;of&#32;intervals.&#32;It&#32;uses&#32;the&#32;time</emphasis>
<anchor xml:id="_advretry_8py_source_1l00439"/>00439 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;to&#32;sample&#32;the&#32;values&#32;array&#32;at&#32;designated&#32;points,&#32;ensuring&#32;that&#32;the&#32;result&#32;represents</emphasis>
<anchor xml:id="_advretry_8py_source_1l00440"/>00440 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;distributed&#32;across&#32;the&#32;defined&#32;segments.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00441"/>00441 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00442"/>00442 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00443"/>00443 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num&#32;(int):&#32;The&#32;number&#32;of&#32;segments&#32;into&#32;which&#32;the&#32;time&#32;series&#32;data&#32;will&#32;be&#32;divided.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00444"/>00444 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00445"/>00445 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00446"/>00446 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List:&#32;A&#32;list&#32;containing&#32;the&#32;computed&#32;statistics&#32;based&#32;on&#32;the&#32;segmented&#32;intervals&#32;of</emphasis>
<anchor xml:id="_advretry_8py_source_1l00447"/>00447 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;time&#32;series&#32;data.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00448"/>00448 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00449"/>00449 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00450"/>00450 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IndexError:&#32;If&#32;the&#32;number&#32;of&#32;segments&#32;exceeds&#32;the&#32;number&#32;of&#32;available&#32;data&#32;points.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00451"/>00451 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ts&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d">time</link>[:self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4">si</link>.value]
<anchor xml:id="_advretry_8py_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vs&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2">val</link>[:self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4">si</link>.value]
<anchor xml:id="_advretry_8py_source_1l00454"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1afda8cdd53cf9e0c3160f59bb623becba">00454</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mt&#32;=&#32;ts[-1]
<anchor xml:id="_advretry_8py_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dt&#32;=&#32;0.9999999&#32;*&#32;mt&#32;/&#32;num
<anchor xml:id="_advretry_8py_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stats&#32;=&#32;[]
<anchor xml:id="_advretry_8py_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ti&#32;=&#32;0
<anchor xml:id="_advretry_8py_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;vs[0]
<anchor xml:id="_advretry_8py_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(num):
<anchor xml:id="_advretry_8py_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;ts[ti]&#32;&lt;&#32;(i+1)&#32;*&#32;dt:
<anchor xml:id="_advretry_8py_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ti&#32;+=&#32;1
<anchor xml:id="_advretry_8py_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;vs[ti]
<anchor xml:id="_advretry_8py_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stats.append(val)
<anchor xml:id="_advretry_8py_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stats
<anchor xml:id="_advretry_8py_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00466"/>00466 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1acb6d9b590c7c36a83fa8b764d6e15f7e">eval_num</link>(self,&#32;max_evals:&#32;int)&#32;-&gt;&#32;int:
<anchor xml:id="_advretry_8py_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00468"/>00468 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calculates&#32;the&#32;evaluation&#32;number&#32;based&#32;on&#32;a&#32;multiplier&#32;and&#32;maximum&#32;evaluations.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00469"/>00469 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00470"/>00470 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;computes&#32;the&#32;product&#32;of&#32;a&#32;multiplier&#32;(`eval_fac.value`)&#32;and&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00471"/>00471 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided&#32;maximum&#32;evaluations&#32;(`max_evals`).&#32;The&#32;result&#32;is&#32;cast&#32;to&#32;an&#32;integer</emphasis>
<anchor xml:id="_advretry_8py_source_1l00472"/>00472 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;returned.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00473"/>00473 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00474"/>00474 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00475"/>00475 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;max_evals&#32;(int):&#32;The&#32;maximum&#32;number&#32;of&#32;evaluations.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00476"/>00476 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00477"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a6ccfce173196171f999e4a3c4531f01f">00477</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00478"/>00478 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;calculated&#32;evaluation&#32;number.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00479"/>00479 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;int(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c">eval_fac</link>.value&#32;*&#32;max_evals)
<anchor xml:id="_advretry_8py_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00482"/>00482 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591">limits</link>(self)&#32;-&gt;&#32;Tuple[float,&#32;np.ndarray,&#32;np.ndarray,&#32;np.ndarray,&#32;np.ndarray]:
<anchor xml:id="_advretry_8py_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00484"/>00484 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;the&#32;limits&#32;and&#32;other&#32;related&#32;calculations&#32;used&#32;for&#32;determining&#32;bounds</emphasis>
<anchor xml:id="_advretry_8py_source_1l00485"/>00485 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;during&#32;operations&#32;like&#32;crossover&#32;and&#32;mutation.&#32;The&#32;function&#32;calculates&#32;adjusted</emphasis>
<anchor xml:id="_advretry_8py_source_1l00486"/>00486 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bounds,&#32;scaled&#32;deviations,&#32;and&#32;other&#32;factors&#32;based&#32;on&#32;the&#32;input&#32;variables,&#32;making</emphasis>
<anchor xml:id="_advretry_8py_source_1l00487"/>00487 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use&#32;of&#32;random&#32;factors&#32;and&#32;mutex&#32;locks&#32;for&#32;thread&#32;safety.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00488"/>00488 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00489"/>00489 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00490"/>00490 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_advretry_8py_source_1l00491"/>00491 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00492"/>00492 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00493"/>00493 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[float,&#32;numpy.ndarray,&#32;numpy.ndarray,&#32;numpy.ndarray,&#32;numpy.ndarray]:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00494"/>00494 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;tuple&#32;containing&#32;the&#32;following&#32;elements:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00495"/>00495 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;A&#32;float&#32;value&#32;representing&#32;the&#32;initial&#32;target&#32;point&#32;y0.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00496"/>00496 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;A&#32;NumPy&#32;array&#32;representing&#32;the&#32;point&#32;x1&#32;selected&#32;for&#32;crossover.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00497"/>00497 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;A&#32;NumPy&#32;array&#32;representing&#32;the&#32;calculated&#32;lower&#32;bounds&#32;for&#32;crossover.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00498"/>00498 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;A&#32;NumPy&#32;array&#32;representing&#32;the&#32;calculated&#32;upper&#32;bounds&#32;for&#32;crossover.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00499"/>00499 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;A&#32;NumPy&#32;array&#32;representing&#32;the&#32;scaled&#32;standard&#32;deviations&#32;for&#32;crossover.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00500"/>00500 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00501"/>00501 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00502"/>00502 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_advretry_8py_source_1l00503"/>00503 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diff_fac&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8">rg</link>.<link linkend="_evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593">uniform</link>(0.5,&#32;1.0)
<anchor xml:id="_advretry_8py_source_1l00505"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1acb6d9b590c7c36a83fa8b764d6e15f7e">00505</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lim_fac&#32;=&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8">rg</link>.<link linkend="_evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593">uniform</link>(2.0,&#32;4.0)&#32;*&#32;diff_fac
<anchor xml:id="_advretry_8py_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce">add_mutex</link>:
<anchor xml:id="_advretry_8py_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i,&#32;j&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a879e1014d958865e37c48d5d271c8dc6">crossover</link>()
<anchor xml:id="_advretry_8py_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;&lt;&#32;0:
<anchor xml:id="_advretry_8py_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;math.inf,&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="keywordtype">None</emphasis>,&#32;<emphasis role="keywordtype">None</emphasis>
<anchor xml:id="_advretry_8py_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x0&#32;=&#32;np.asarray(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b">get_x</link>(i))
<anchor xml:id="_advretry_8py_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x1&#32;=&#32;np.asarray(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b">get_x</link>(j))
<anchor xml:id="_advretry_8py_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y0&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f">get_y</link>(i)
<anchor xml:id="_advretry_8py_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deltax&#32;=&#32;np.abs(x1&#32;-&#32;x0)
<anchor xml:id="_advretry_8py_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delta_bound&#32;=&#32;np.maximum(0.0001,&#32;lim_fac&#32;*&#32;deltax)
<anchor xml:id="_advretry_8py_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lower&#32;=&#32;np.maximum(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678">lower</link>,&#32;x0&#32;-&#32;delta_bound)
<anchor xml:id="_advretry_8py_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upper&#32;=&#32;np.minimum(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a8d112bb91cc58f032a0bb929c236fd8e">upper</link>,&#32;x0&#32;+&#32;delta_bound)
<anchor xml:id="_advretry_8py_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdev&#32;=&#32;np.clip(diff_fac&#32;*&#32;deltax&#32;/&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ad2d1513e8146883a75bab3f55fb4be95">delta</link>,&#32;0.001,&#32;0.5)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y0,&#32;x1,&#32;lower,&#32;upper,&#32;sdev
<anchor xml:id="_advretry_8py_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00521"/>00521 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a00ab052ea8b184b7344875122481b623">distance</link>(self,&#32;xprev:&#32;np.ndarray,&#32;x:&#32;np.ndarray)&#32;-&gt;&#32;float:
<anchor xml:id="_advretry_8py_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00523"/>00523 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Calculates&#32;the&#32;normalized&#32;distance&#32;between&#32;two&#32;points&#32;in&#32;a&#32;Euclidean&#32;space.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00524"/>00524 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00525"/>00525 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;distance&#32;is&#32;normalized&#32;based&#32;on&#32;the&#32;difference&#32;between&#32;two&#32;points,&#32;scaled</emphasis>
<anchor xml:id="_advretry_8py_source_1l00526"/>00526 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;by&#32;a&#32;pre-defined&#32;parameter&#32;`delta`,&#32;and&#32;divided&#32;by&#32;the&#32;square&#32;root&#32;of&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00527"/>00527 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;number&#32;of&#32;dimensions&#32;(`dim`).</emphasis>
<anchor xml:id="_advretry_8py_source_1l00528"/>00528 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00529"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591">00529</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00530"/>00530 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xprev&#32;(np.ndarray):&#32;A&#32;numpy&#32;array&#32;representing&#32;the&#32;previous&#32;point.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00531"/>00531 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;(np.ndarray):&#32;A&#32;numpy&#32;array&#32;representing&#32;the&#32;current&#32;point.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00532"/>00532 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00533"/>00533 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00534"/>00534 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;normalized&#32;distance&#32;between&#32;`xprev`&#32;and&#32;`x`.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00535"/>00535 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;norm((x&#32;-&#32;xprev)&#32;/&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ad2d1513e8146883a75bab3f55fb4be95">delta</link>)&#32;/&#32;math.sqrt(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9">dim</link>)
<anchor xml:id="_advretry_8py_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00538"/>00538 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9">replace</link>(self,&#32;i:&#32;int,&#32;y:&#32;float,&#32;x:&#32;np.ndarray):
<anchor xml:id="_advretry_8py_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00540"/>00540 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Replaces&#32;the&#32;y&#32;and&#32;x&#32;values&#32;at&#32;a&#32;specified&#32;index.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00541"/>00541 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00542"/>00542 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;updates&#32;the&#32;y&#32;and&#32;x&#32;values&#32;in&#32;the&#32;object&apos;s&#32;internal&#32;data&#32;structure&#32;at&#32;the&#32;index</emphasis>
<anchor xml:id="_advretry_8py_source_1l00543"/>00543 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided&#32;by&#32;the&#32;user.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00544"/>00544 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00545"/>00545 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00546"/>00546 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;(int):&#32;Index&#32;at&#32;which&#32;to&#32;set&#32;the&#32;new&#32;y&#32;and&#32;x&#32;values.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00547"/>00547 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;(float):&#32;The&#32;new&#32;value&#32;for&#32;y&#32;to&#32;be&#32;set&#32;at&#32;the&#32;specified&#32;index.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00548"/>00548 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;(np.ndarray):&#32;The&#32;new&#32;value&#32;for&#32;x&#32;to&#32;be&#32;set&#32;at&#32;the&#32;specified&#32;index.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00549"/>00549 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a12d96e54629b449293d2aabf5542ddc1">set_y</link>(i,&#32;y)
<anchor xml:id="_advretry_8py_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a732636cd5ab3c40b878ef2e0274b1d1b">set_x</link>(i,&#32;x)
<anchor xml:id="_advretry_8py_source_1l00552"/>00552 &#32;
<anchor xml:id="_advretry_8py_source_1l00553"/>00553 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a879e1014d958865e37c48d5d271c8dc6">crossover</link>(self)&#32;-&gt;&#32;Tuple[int,int]:&#32;<emphasis role="comment">#&#32;Choose&#32;two&#32;good&#32;entries&#32;for&#32;recombination</emphasis>
<anchor xml:id="_advretry_8py_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00555"/>00555 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Selects&#32;two&#32;good&#32;entries&#32;for&#32;recombination&#32;based&#32;on&#32;a&#32;probabilistic&#32;threshold.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00556"/>00556 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00557"/>00557 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;attempts&#32;to&#32;choose&#32;two&#32;distinct&#32;indices&#32;from&#32;a&#32;pool&#32;based&#32;on&#32;a</emphasis>
<anchor xml:id="_advretry_8py_source_1l00558"/>00558 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;random&#32;limit&#32;derived&#32;from&#32;the&#32;current&#32;number&#32;of&#32;stored&#32;entries.&#32;The&#32;method</emphasis>
<anchor xml:id="_advretry_8py_source_1l00559"/>00559 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;performs&#32;several&#32;attempts&#32;to&#32;identify&#32;these&#32;indices&#32;under&#32;the&#32;defined&#32;constraints.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00560"/>00560 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;successful,&#32;it&#32;returns&#32;the&#32;selected&#32;indices;&#32;otherwise,&#32;it&#32;returns&#32;default</emphasis>
<anchor xml:id="_advretry_8py_source_1l00561"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a00ab052ea8b184b7344875122481b623">00561</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values&#32;indicating&#32;no&#32;valid&#32;selection.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00562"/>00562 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00563"/>00563 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00564"/>00564 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tuple[int,&#32;int]:&#32;A&#32;tuple&#32;containing&#32;two&#32;indices&#32;selected&#32;for&#32;recombination.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00565"/>00565 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;the&#32;selection&#32;fails,&#32;returns&#32;(-1,&#32;-1).</emphasis>
<anchor xml:id="_advretry_8py_source_1l00566"/>00566 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value
<anchor xml:id="_advretry_8py_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;n&#32;&lt;&#32;2:
<anchor xml:id="_advretry_8py_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1,&#32;-1
<anchor xml:id="_advretry_8py_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lim&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8">rg</link>.<link linkend="_evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593">uniform</link>(min(0.1*n,&#32;1),&#32;0.2*n)/n
<anchor xml:id="_advretry_8py_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;_&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(100):
<anchor xml:id="_advretry_8py_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i1&#32;=&#32;-1
<anchor xml:id="_advretry_8py_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i2&#32;=&#32;-1
<anchor xml:id="_advretry_8py_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;j&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(n):
<anchor xml:id="_advretry_8py_source_1l00575"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9">00575</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8">rg</link>.random()&#32;&lt;&#32;lim:
<anchor xml:id="_advretry_8py_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i1&#32;&lt;&#32;0:
<anchor xml:id="_advretry_8py_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i1&#32;=&#32;j
<anchor xml:id="_advretry_8py_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i2&#32;=&#32;j
<anchor xml:id="_advretry_8py_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i1,&#32;i2
<anchor xml:id="_advretry_8py_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1,&#32;-1
<anchor xml:id="_advretry_8py_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00583"/>00583 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4">sort</link>(self)&#32;-&gt;&#32;int:
<anchor xml:id="_advretry_8py_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00585"/>00585 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sorts&#32;and&#32;updates&#32;stored&#32;data&#32;based&#32;on&#32;the&#32;given&#32;criteria.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00586"/>00586 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00587"/>00587 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;method&#32;sorts&#32;the&#32;stored&#32;data&#32;`ys`&#32;in&#32;ascending&#32;order&#32;of&#32;their&#32;values.&#32;It&#32;ensures</emphasis>
<anchor xml:id="_advretry_8py_source_1l00588"/>00588 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diversity&#32;by&#32;selecting&#32;specific&#32;data&#32;points&#32;that&#32;meet&#32;the&#32;distance&#32;threshold&#32;from&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00589"/>00589 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;two&#32;most&#32;recently&#32;added&#32;elements.&#32;It&#32;then&#32;updates&#32;the&#32;stored&#32;data&#32;to&#32;retain&#32;only&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00590"/>00590 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;best&#32;90%&#32;of&#32;the&#32;sorted&#32;elements&#32;up&#32;to&#32;the&#32;storage&#32;capacity.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00591"/>00591 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00592"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a879e1014d958865e37c48d5d271c8dc6">00592</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00593"/>00593 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;updated&#32;number&#32;of&#32;stored&#32;elements.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00594"/>00594 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00595"/>00595 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Raises:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00596"/>00596 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ValueError:&#32;If&#32;the&#32;number&#32;of&#32;stored&#32;elements&#32;is&#32;less&#32;than&#32;2.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00597"/>00597 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ns&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value
<anchor xml:id="_advretry_8py_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;ns&#32;&lt;&#32;2:
<anchor xml:id="_advretry_8py_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="_advretry_8py_source_1l00601"/>00601 
<anchor xml:id="_advretry_8py_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys&#32;=&#32;np.asarray(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100">ys</link>[:ns])
<anchor xml:id="_advretry_8py_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yi&#32;=&#32;ys.argsort()
<anchor xml:id="_advretry_8py_source_1l00604"/>00604 
<anchor xml:id="_advretry_8py_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys2&#32;=&#32;[]
<anchor xml:id="_advretry_8py_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs2&#32;=&#32;[]
<anchor xml:id="_advretry_8py_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(ns):
<anchor xml:id="_advretry_8py_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;ys[yi[i]]
<anchor xml:id="_advretry_8py_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;np.asarray(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b">get_x</link>(yi[i]))&#32;&#32;<emphasis role="comment">#&#32;preserve&#32;diversity</emphasis>
<anchor xml:id="_advretry_8py_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;np.all([self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a00ab052ea8b184b7344875122481b623">distance</link>(xp,&#32;x)&#32;&gt;&#32;0.15&#32;<emphasis role="keywordflow">for</emphasis>&#32;xp&#32;<emphasis role="keywordflow">in</emphasis>&#32;xs2[-2:]]):&#32;
<anchor xml:id="_advretry_8py_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ys2.append(y)
<anchor xml:id="_advretry_8py_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs2.append(x)
<anchor xml:id="_advretry_8py_source_1l00613"/>00613 
<anchor xml:id="_advretry_8py_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ns&#32;=&#32;min(len(ys2),int(0.9*self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30">capacity</link>))&#32;<emphasis role="comment">#&#32;keep&#32;90%&#32;best&#32;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(ns):
<anchor xml:id="_advretry_8py_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9">replace</link>(i,&#32;ys2[i],&#32;xs2[i])
<anchor xml:id="_advretry_8py_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value&#32;=&#32;ns&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1afefa9194fbf5ada1b23dcd45ed3e48f3">worst_y</link>.value&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f">get_y</link>(ns-1)
<anchor xml:id="_advretry_8py_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ns
<anchor xml:id="_advretry_8py_source_1l00620"/>00620 
<anchor xml:id="_advretry_8py_source_1l00621"/>00621 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe">add_result</link>(self,&#32;y:&#32;float,&#32;x:&#32;np.ndarray,&#32;evals:&#32;int,&#32;limit:&#32;Optional[float]&#32;=&#32;np.inf):
<anchor xml:id="_advretry_8py_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00623"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4">00623</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Adds&#32;a&#32;result&#32;to&#32;the&#32;current&#32;optimization&#32;process,&#32;updating&#32;the&#32;best&#32;result&#32;if</emphasis>
<anchor xml:id="_advretry_8py_source_1l00624"/>00624 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;necessary&#32;and&#32;storing&#32;the&#32;new&#32;result&#32;in&#32;the&#32;internal&#32;data&#32;structure.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00625"/>00625 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00626"/>00626 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;is&#32;designed&#32;to&#32;handle&#32;updates&#32;in&#32;a&#32;thread-safe&#32;manner.&#32;It&#32;increments</emphasis>
<anchor xml:id="_advretry_8py_source_1l00627"/>00627 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;number&#32;of&#32;evaluations,&#32;checks&#32;if&#32;the&#32;new&#32;result&#32;is&#32;within&#32;the&#32;given&#32;limit,</emphasis>
<anchor xml:id="_advretry_8py_source_1l00628"/>00628 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;updates&#32;the&#32;best&#32;result&#32;as&#32;well&#32;as&#32;the&#32;storage&#32;if&#32;the&#32;criteria&#32;are&#32;met.&#32;If&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00629"/>00629 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;storage&#32;reaches&#32;its&#32;capacity,&#32;it&#32;triggers&#32;a&#32;sorting&#32;operation&#32;to&#32;maintain&#32;order.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00630"/>00630 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00631"/>00631 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00632"/>00632 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;(float):&#32;The&#32;result&#32;value&#32;to&#32;be&#32;added.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00633"/>00633 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;(np.ndarray):&#32;The&#32;array&#32;representing&#32;input&#32;parameters&#32;corresponding&#32;to&#32;the&#32;result.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00634"/>00634 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evals&#32;(int):&#32;The&#32;number&#32;of&#32;evaluations&#32;associated&#32;with&#32;this&#32;result.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00635"/>00635 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limit&#32;(Optional[float]):&#32;The&#32;threshold&#32;value.&#32;Results&#32;with&#32;a&#32;value&#32;greater&#32;than</emphasis>
<anchor xml:id="_advretry_8py_source_1l00636"/>00636 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;limit&#32;are&#32;ignored.&#32;Defaults&#32;to&#32;infinity.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00637"/>00637 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce">add_mutex</link>:
<anchor xml:id="_advretry_8py_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98">count_evals</link>.value&#32;+=&#32;evals
<anchor xml:id="_advretry_8py_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;limit:
<anchor xml:id="_advretry_8py_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;y&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a">best_y</link>.value:
<anchor xml:id="_advretry_8py_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a">best_y</link>.value&#32;=&#32;y
<anchor xml:id="_advretry_8py_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57">best_x</link>[:]&#32;=&#32;x[:]
<anchor xml:id="_advretry_8py_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da">dump</link>()
<anchor xml:id="_advretry_8py_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a4a5af1d8a29594eff250c931f481d146">datafile</link>&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a19b9d6c0787fb06a2b00e595f487bf37">save</link>(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a4a5af1d8a29594eff250c931f481d146">datafile</link>)
<anchor xml:id="_advretry_8py_source_1l00647"/>00647 
<anchor xml:id="_advretry_8py_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value&#32;&gt;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30">capacity</link>&#32;-&#32;1:
<anchor xml:id="_advretry_8py_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4">sort</link>()
<anchor xml:id="_advretry_8py_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ns&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value
<anchor xml:id="_advretry_8py_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9">replace</link>(ns,&#32;y,&#32;x)
<anchor xml:id="_advretry_8py_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value&#32;=&#32;ns&#32;+&#32;1
<anchor xml:id="_advretry_8py_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00654"/>00654 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558">get_x_best</link>(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_advretry_8py_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00656"/>00656 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;a&#32;copy&#32;of&#32;the&#32;best&#32;solutions&#32;stored&#32;in&#32;the&#32;internal&#32;state.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00657"/>00657 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00658"/>00658 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;retrieves&#32;the&#32;best&#32;solution(s)&#32;found,&#32;which&#32;are&#32;stored</emphasis>
<anchor xml:id="_advretry_8py_source_1l00659"/>00659 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;internally,&#32;and&#32;returns&#32;a&#32;copy&#32;of&#32;the&#32;data&#32;to&#32;avoid&#32;unintentional</emphasis>
<anchor xml:id="_advretry_8py_source_1l00660"/>00660 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifications&#32;to&#32;the&#32;original&#32;data.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00661"/>00661 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00662"/>00662 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00663"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe">00663</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;numpy&#32;array&#32;containing&#32;the&#32;best&#32;solution(s).</emphasis>
<anchor xml:id="_advretry_8py_source_1l00664"/>00664 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57">best_x</link>[:])
<anchor xml:id="_advretry_8py_source_1l00666"/>00666 
<anchor xml:id="_advretry_8py_source_1l00667"/>00667 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b">get_x</link>(self,&#32;pid)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_advretry_8py_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00669"/>00669 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;a&#32;segment&#32;of&#32;the&#32;`xs`&#32;array&#32;corresponding&#32;to&#32;the&#32;provided&#32;`pid`.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00670"/>00670 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00671"/>00671 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00672"/>00672 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pid&#32;(int):&#32;Index&#32;used&#32;to&#32;calculate&#32;the&#32;segment.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00673"/>00673 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00674"/>00674 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00675"/>00675 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;The&#32;segment&#32;of&#32;the&#32;`xs`&#32;array.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00676"/>00676 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89">xs</link>[pid*self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9">dim</link>:(pid+1)*self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9">dim</link>]
<anchor xml:id="_advretry_8py_source_1l00678"/>00678 
<anchor xml:id="_advretry_8py_source_1l00679"/>00679 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2">get_xs</link>(self)-&gt;&#32;np.ndarray:
<anchor xml:id="_advretry_8py_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00681"/>00681 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Builds&#32;and&#32;returns&#32;an&#32;array&#32;of&#32;x&#32;values&#32;stored&#32;in&#32;the&#32;object.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00682"/>00682 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00683"/>00683 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;iterates&#32;over&#32;the&#32;number&#32;of&#32;stored&#32;x&#32;values&#32;and&#32;retrieves&#32;each</emphasis>
<anchor xml:id="_advretry_8py_source_1l00684"/>00684 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;using&#32;the&#32;`get_x`&#32;method.&#32;The&#32;retrieved&#32;values&#32;are&#32;then&#32;compiled&#32;into</emphasis>
<anchor xml:id="_advretry_8py_source_1l00685"/>00685 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;NumPy&#32;array,&#32;which&#32;is&#32;returned.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00686"/>00686 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00687"/>00687 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00688"/>00688 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;NumPy&#32;array&#32;containing&#32;the&#32;retrieved&#32;x&#32;values.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00689"/>00689 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00690"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558">00690</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array([self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b">get_x</link>(i)&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value)])
<anchor xml:id="_advretry_8py_source_1l00691"/>00691 
<anchor xml:id="_advretry_8py_source_1l00692"/>00692 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f">get_y</link>(self,&#32;pid:&#32;int)&#32;-&gt;&#32;float:
<anchor xml:id="_advretry_8py_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00694"/>00694 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Fetches&#32;a&#32;value&#32;for&#32;a&#32;given&#32;ID&#32;from&#32;a&#32;dictionary&#32;of&#32;float&#32;values.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00695"/>00695 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00696"/>00696 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;retrieves&#32;a&#32;corresponding&#32;float&#32;value&#32;from&#32;the&#32;`ys`&#32;dictionary</emphasis>
<anchor xml:id="_advretry_8py_source_1l00697"/>00697 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;based&#32;on&#32;the&#32;provided&#32;integer&#32;ID.&#32;The&#32;dictionary&#32;`ys`&#32;maps&#32;integer&#32;IDs&#32;to</emphasis>
<anchor xml:id="_advretry_8py_source_1l00698"/>00698 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float&#32;values.&#32;The&#32;function&#32;returns&#32;the&#32;float&#32;value&#32;associated&#32;with&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00699"/>00699 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;supplied&#32;`pid`.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00700"/>00700 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00701"/>00701 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00702"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b">00702</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pid&#32;(int):&#32;The&#32;unique&#32;identifier&#32;used&#32;to&#32;fetch&#32;a&#32;value&#32;from&#32;the&#32;`ys`</emphasis>
<anchor xml:id="_advretry_8py_source_1l00703"/>00703 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dictionary.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00704"/>00704 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00705"/>00705 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00706"/>00706 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;value&#32;corresponding&#32;to&#32;the&#32;provided&#32;`pid`&#32;from&#32;the&#32;`ys`</emphasis>
<anchor xml:id="_advretry_8py_source_1l00707"/>00707 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dictionary.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00708"/>00708 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100">ys</link>[pid]
<anchor xml:id="_advretry_8py_source_1l00710"/>00710 
<anchor xml:id="_advretry_8py_source_1l00711"/>00711 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77">get_ys</link>(self)&#32;-&gt;&#32;np.ndarray:
<anchor xml:id="_advretry_8py_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00713"/>00713 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gets&#32;the&#32;stored&#32;y-values&#32;up&#32;to&#32;the&#32;specified&#32;count.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00714"/>00714 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00715"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2">00715</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;retrieves&#32;the&#32;portion&#32;of&#32;the&#32;y-values&#32;list&#32;that&#32;corresponds&#32;to</emphasis>
<anchor xml:id="_advretry_8py_source_1l00716"/>00716 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;count&#32;determined&#32;by&#32;`num_stored.value`.&#32;The&#32;result&#32;is&#32;returned&#32;as&#32;a</emphasis>
<anchor xml:id="_advretry_8py_source_1l00717"/>00717 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NumPy&#32;array.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00718"/>00718 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00719"/>00719 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00720"/>00720 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;np.ndarray:&#32;A&#32;NumPy&#32;array&#32;containing&#32;the&#32;stored&#32;y-values&#32;up&#32;to&#32;the&#32;specified&#32;count.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00721"/>00721 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;np.array(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100">ys</link>[:self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value])
<anchor xml:id="_advretry_8py_source_1l00723"/>00723 
<anchor xml:id="_advretry_8py_source_1l00724"/>00724 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a">get_y_best</link>(self)&#32;-&gt;&#32;float:
<anchor xml:id="_advretry_8py_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00726"/>00726 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns&#32;the&#32;best&#32;value&#32;of&#32;y&#32;stored&#32;in&#32;the&#32;`best_y`&#32;attribute.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00727"/>00727 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00728"/>00728 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;function&#32;accesses&#32;the&#32;`best_y`&#32;attribute&#32;and&#32;retrieves&#32;its&#32;value</emphasis>
<anchor xml:id="_advretry_8py_source_1l00729"/>00729 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;as&#32;a&#32;float.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00730"/>00730 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00731"/>00731 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00732"/>00732 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;float:&#32;The&#32;best&#32;value&#32;of&#32;y.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00733"/>00733 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00734"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f">00734</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a">best_y</link>.value
<anchor xml:id="_advretry_8py_source_1l00735"/>00735 
<anchor xml:id="_advretry_8py_source_1l00736"/>00736 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a0e6a826522ffacef8ab24249fc4127b4">get_count_evals</link>(self)&#32;-&gt;&#32;int:
<anchor xml:id="_advretry_8py_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00738"/>00738 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;the&#32;value&#32;of&#32;the&#32;evaluation&#32;count.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00739"/>00739 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00740"/>00740 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;accesses&#32;the&#32;`count_evals`&#32;attribute&#32;and&#32;returns&#32;its&#32;integer</emphasis>
<anchor xml:id="_advretry_8py_source_1l00741"/>00741 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value.&#32;It&#32;is&#32;primarily&#32;intended&#32;to&#32;report&#32;the&#32;current&#32;count&#32;of&#32;evaluations</emphasis>
<anchor xml:id="_advretry_8py_source_1l00742"/>00742 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stored&#32;in&#32;the&#32;`count_evals`&#32;attribute.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00743"/>00743 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00744"/>00744 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00745"/>00745 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;current&#32;evaluation&#32;count&#32;stored&#32;in&#32;`count_evals`.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00746"/>00746 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00747"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77">00747</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98">count_evals</link>.value
<anchor xml:id="_advretry_8py_source_1l00748"/>00748 &#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00749"/>00749 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61">get_count_runs</link>(self)&#32;-&gt;&#32;int:
<anchor xml:id="_advretry_8py_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00751"/>00751 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Retrieves&#32;the&#32;count&#32;of&#32;runs.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00752"/>00752 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00753"/>00753 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;returns&#32;the&#32;value&#32;of&#32;the&#32;`count_runs`&#32;attribute,&#32;representing</emphasis>
<anchor xml:id="_advretry_8py_source_1l00754"/>00754 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;total&#32;count&#32;of&#32;runs&#32;made.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00755"/>00755 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00756"/>00756 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00757"/>00757 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int:&#32;The&#32;value&#32;of&#32;the&#32;`count_runs`&#32;attribute.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00758"/>00758 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00759"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a">00759</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f">count_runs</link>.value
<anchor xml:id="_advretry_8py_source_1l00760"/>00760 
<anchor xml:id="_advretry_8py_source_1l00761"/>00761 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a732636cd5ab3c40b878ef2e0274b1d1b">set_x</link>(self,&#32;pid,&#32;xs):
<anchor xml:id="_advretry_8py_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00763"/>00763 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sets&#32;a&#32;subset&#32;of&#32;the&#32;`xs`&#32;list&#32;for&#32;a&#32;specific&#32;process&#32;ID.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00764"/>00764 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00765"/>00765 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;function&#32;updates&#32;a&#32;section&#32;of&#32;the&#32;`xs`&#32;attribute&#32;corresponding&#32;to&#32;a</emphasis>
<anchor xml:id="_advretry_8py_source_1l00766"/>00766 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;particular&#32;process&#32;ID&#32;(`pid`)&#32;based&#32;on&#32;the&#32;provided&#32;input&#32;values.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00767"/>00767 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00768"/>00768 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00769"/>00769 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pid:&#32;Process&#32;ID&#32;whose&#32;section&#32;in&#32;`xs`&#32;is&#32;to&#32;be&#32;updated.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00770"/>00770 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xs:&#32;List&#32;of&#32;values&#32;to&#32;update&#32;in&#32;the&#32;specific&#32;section&#32;of&#32;`xs`&#32;for&#32;the&#32;given</emphasis>
<anchor xml:id="_advretry_8py_source_1l00771"/>00771 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;process&#32;ID.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00772"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a0e6a826522ffacef8ab24249fc4127b4">00772</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89">xs</link>[pid*self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9">dim</link>:(pid+1)*self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9">dim</link>]&#32;=&#32;xs[:]
<anchor xml:id="_advretry_8py_source_1l00774"/>00774 
<anchor xml:id="_advretry_8py_source_1l00775"/>00775 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a12d96e54629b449293d2aabf5542ddc1">set_y</link>(self,&#32;pid,&#32;y):
<anchor xml:id="_advretry_8py_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00777"/>00777 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Sets&#32;the&#32;value&#32;of&#32;y&#32;for&#32;a&#32;given&#32;pid&#32;within&#32;the&#32;&apos;ys&apos;&#32;mapping.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00778"/>00778 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00779"/>00779 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Modifies&#32;the&#32;associated&#32;value&#32;of&#32;y&#32;in&#32;the&#32;dictionary&#32;&apos;ys&apos;&#32;for&#32;the</emphasis>
<anchor xml:id="_advretry_8py_source_1l00780"/>00780 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided&#32;process&#32;identifier&#32;(pid).&#32;This&#32;method&#32;stores&#32;or&#32;updates</emphasis>
<anchor xml:id="_advretry_8py_source_1l00781"/>00781 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;y&#32;value&#32;tied&#32;to&#32;a&#32;specific&#32;pid.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00782"/>00782 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00783"/>00783 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00784"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61">00784</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pid:&#32;Identifier&#32;for&#32;the&#32;process&#32;whose&#32;y&#32;value&#32;is&#32;being&#32;set.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00785"/>00785 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y:&#32;The&#32;value&#32;to&#32;associate&#32;with&#32;the&#32;given&#32;pid&#32;in&#32;the&#32;&apos;ys&apos;&#32;mapping.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00786"/>00786 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100">ys</link>[pid]&#32;=&#32;y
<anchor xml:id="_advretry_8py_source_1l00788"/>00788 
<anchor xml:id="_advretry_8py_source_1l00789"/>00789 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df">get_runs_compare_incr</link>(self,&#32;limit:&#32;float)&#32;-&gt;&#32;bool:
<anchor xml:id="_advretry_8py_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00791"/>00791 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Compares&#32;the&#32;current&#32;count&#32;of&#32;runs&#32;against&#32;a&#32;specified&#32;limit&#32;and&#32;increments&#32;internal</emphasis>
<anchor xml:id="_advretry_8py_source_1l00792"/>00792 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;counters&#32;accordingly&#32;if&#32;the&#32;limit&#32;is&#32;not&#32;exceeded.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00793"/>00793 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00794"/>00794 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00795"/>00795 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limit&#32;(float):&#32;The&#32;upper&#32;threshold&#32;to&#32;compare&#32;against&#32;the&#32;current&#32;count&#32;of&#32;runs.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00796"/>00796 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00797"/>00797 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00798"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a732636cd5ab3c40b878ef2e0274b1d1b">00798</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;True&#32;if&#32;the&#32;current&#32;count&#32;is&#32;less&#32;than&#32;the&#32;limit&#32;and&#32;the&#32;increment&#32;operation&#32;was</emphasis>
<anchor xml:id="_advretry_8py_source_1l00799"/>00799 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;performed.&#32;False&#32;otherwise.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00800"/>00800 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce">add_mutex</link>:
<anchor xml:id="_advretry_8py_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f">count_runs</link>.value&#32;&lt;&#32;limit:
<anchor xml:id="_advretry_8py_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f">count_runs</link>.value&#32;+=&#32;1
<anchor xml:id="_advretry_8py_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f">count_runs</link>.value&#32;%&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae">check_interval</link>&#32;==&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae">check_interval</link>-1:
<anchor xml:id="_advretry_8py_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c">eval_fac</link>.value&#32;&lt;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538">max_eval_fac</link>:
<anchor xml:id="_advretry_8py_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c">eval_fac</link>.value&#32;+=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aebbd407d5af1334e38fbdc5a8ba36d3f">eval_fac_incr</link>
<anchor xml:id="_advretry_8py_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4">sort</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_advretry_8py_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>&#32;
<anchor xml:id="_advretry_8py_source_1l00811"/>00811 
<anchor xml:id="_advretry_8py_source_1l00812"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a12d96e54629b449293d2aabf5542ddc1">00812</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da">dump</link>(self):
<anchor xml:id="_advretry_8py_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00814"/>00814 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Logs&#32;a&#32;summary&#32;of&#32;the&#32;execution&#32;metrics&#32;and&#32;current&#32;status.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00815"/>00815 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00816"/>00816 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;method&#32;collects&#32;relevant&#32;metrics&#32;about&#32;the&#32;execution&#32;process&#32;and&#32;generates&#32;a</emphasis>
<anchor xml:id="_advretry_8py_source_1l00817"/>00817 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formatted&#32;log&#32;message&#32;to&#32;provide&#32;insights&#32;into&#32;the&#32;current&#32;state.&#32;Metrics&#32;such&#32;as</emphasis>
<anchor xml:id="_advretry_8py_source_1l00818"/>00818 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evaluation&#32;counts,&#32;best&#32;and&#32;worst&#32;outcomes,&#32;and&#32;a&#32;snapshot&#32;of&#32;the&#32;best&#32;solutions&#32;are</emphasis>
<anchor xml:id="_advretry_8py_source_1l00819"/>00819 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;included&#32;in&#32;the&#32;message.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00820"/>00820 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00821"/>00821 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00822"/>00822 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_advretry_8py_source_1l00823"/>00823 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00824"/>00824 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00825"/>00825 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None</emphasis>
<anchor xml:id="_advretry_8py_source_1l00826"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df">00826</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ys&#32;=&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77">get_ys</link>()
<anchor xml:id="_advretry_8py_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals&#32;=&#32;[]
<anchor xml:id="_advretry_8py_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(min(20,&#32;len(Ys))):
<anchor xml:id="_advretry_8py_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals.append(round(Ys[i],2))&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dt&#32;=&#32;dtime(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a3353add8a5c4d01dd02a8a56890c1036">t0</link>)+.000001&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;message&#32;=&#32;<emphasis role="stringliteral">&apos;{0}&#32;{1}&#32;{2}&#32;{3}&#32;{4:.6f}&#32;{5:.2f}&#32;{6}&#32;{7}&#32;{8!s}&#32;{9!s}&apos;</emphasis>.format(
<anchor xml:id="_advretry_8py_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dt,&#32;int(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98">count_evals</link>.value&#32;/&#32;dt),&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f">count_runs</link>.value,&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98">count_evals</link>.value,&#32;
<anchor xml:id="_advretry_8py_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a">best_y</link>.value,&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1afefa9194fbf5ada1b23dcd45ed3e48f3">worst_y</link>.value,&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497">num_stored</link>.value,&#32;int(self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c">eval_fac</link>.value),&#32;
<anchor xml:id="_advretry_8py_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vals,&#32;self.<link linkend="_classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57">best_x</link>[:])
<anchor xml:id="_advretry_8py_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logger.info(message)
<anchor xml:id="_advretry_8py_source_1l00837"/>00837 &#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00838"/>00838 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1advretry_1a2e67b1339ce1e546807f7cba0a45d8c9">_retry_loop</link>(pid,&#32;rgs,&#32;store,&#32;optimize,&#32;value_limit,&#32;stop_fitness&#32;=&#32;-np.inf):
<anchor xml:id="_advretry_8py_source_1l00839"/>00839 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00840"/>00840 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Retries&#32;a&#32;loop&#32;for&#32;optimization&#32;until&#32;stopping&#32;criteria&#32;are&#32;met.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00841"/>00841 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00842"/>00842 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;performs&#32;optimization&#32;processes&#32;in&#32;a&#32;loop,&#32;sampling&#32;solutions&#32;and&#32;evaluating&#32;their</emphasis>
<anchor xml:id="_advretry_8py_source_1l00843"/>00843 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;fitness&#32;to&#32;improve&#32;a&#32;defined&#32;objective&#32;within&#32;bounds.&#32;It&#32;also&#32;incorporates&#32;handling&#32;parallel</emphasis>
<anchor xml:id="_advretry_8py_source_1l00844"/>00844 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;executions&#32;for&#32;optimization&#32;using&#32;private&#32;random&#32;generator&#32;and&#32;thread&#32;limits.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00845"/>00845 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00846"/>00846 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00847"/>00847 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pid&#32;(int):&#32;The&#32;process&#32;or&#32;thread&#32;identifier&#32;for&#32;parallel&#32;computation.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00848"/>00848 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgs&#32;(List[RandomState]):&#32;A&#32;list&#32;of&#32;random&#32;generator&#32;states&#32;that&#32;control&#32;the&#32;stochastic</emphasis>
<anchor xml:id="_advretry_8py_source_1l00849"/>00849 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;behavior&#32;of&#32;each&#32;process&#32;or&#32;thread.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00850"/>00850 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store&#32;(Store):&#32;The&#32;shared&#32;data&#32;store,&#32;containing&#32;optimization&#32;inherent&#32;details&#32;like&#32;lower</emphasis>
<anchor xml:id="_advretry_8py_source_1l00851"/>00851 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;upper&#32;bounds,&#32;number&#32;of&#32;retries,&#32;best&#32;fitness&#32;achieved,&#32;and&#32;statistical&#32;configurations.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00852"/><link linkend="_classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da">00852</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize&#32;(Callable):&#32;The&#32;optimization&#32;function&#32;responsible&#32;for&#32;processing&#32;sample&#32;solutions</emphasis>
<anchor xml:id="_advretry_8py_source_1l00853"/>00853 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;measuring&#32;fitness&#32;outcomes.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00854"/>00854 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value_limit&#32;(float):&#32;The&#32;maximum&#32;value&#32;allowed&#32;for&#32;a&#32;solution,&#32;restricting&#32;unacceptable</emphasis>
<anchor xml:id="_advretry_8py_source_1l00855"/>00855 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outliers&#32;in&#32;the&#32;results.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00856"/>00856 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop_fitness&#32;(float):&#32;The&#32;fitness&#32;threshold&#32;at&#32;which&#32;the&#32;optimization&#32;ceases&#32;if&#32;exceeded</emphasis>
<anchor xml:id="_advretry_8py_source_1l00857"/>00857 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;by&#32;best&#32;achieved&#32;fitness.&#32;Defaults&#32;to&#32;negative&#32;infinity.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00858"/>00858 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00859"/>00859 &#32;&#32;&#32;&#32;fun&#32;=&#32;store.wrapper&#32;<emphasis role="keywordflow">if</emphasis>&#32;store.statistic_num&#32;&gt;&#32;0&#32;<emphasis role="keywordflow">else</emphasis>&#32;store.fun
<anchor xml:id="_advretry_8py_source_1l00860"/>00860 &#32;&#32;&#32;&#32;<emphasis role="comment">#with&#32;threadpoolctl.threadpool_limits(limits=1,&#32;user_api=&quot;blas&quot;):</emphasis>
<anchor xml:id="_advretry_8py_source_1l00861"/>00861 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;store.get_runs_compare_incr(store.num_retries)&#32;<emphasis role="keywordflow">and</emphasis>&#32;store.best_y.value&#32;&gt;&#32;stop_fitness:
<anchor xml:id="_advretry_8py_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<link linkend="_namespacefcmaes_1_1advretry_1a6c3c42e1fa5ab01ff7ba59710578ebb5">_crossover</link>(fun,&#32;store,&#32;optimize,&#32;rgs[pid]):
<anchor xml:id="_advretry_8py_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_advretry_8py_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg&#32;=&#32;rgs[pid]
<anchor xml:id="_advretry_8py_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dim&#32;=&#32;len(store.lower)
<anchor xml:id="_advretry_8py_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sol,&#32;y,&#32;evals&#32;=&#32;optimize(fun,&#32;Bounds(store.lower,&#32;store.upper),&#32;<emphasis role="keywordtype">None</emphasis>,
<anchor xml:id="_advretry_8py_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[rg.uniform(0.05,&#32;0.1)]*dim,&#32;rg,&#32;store)
<anchor xml:id="_advretry_8py_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.add_result(y,&#32;sol,&#32;evals,&#32;value_limit)
<anchor xml:id="_advretry_8py_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;Exception&#32;<emphasis role="keyword">as</emphasis>&#32;ex:
<anchor xml:id="_advretry_8py_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
<anchor xml:id="_advretry_8py_source_1l00872"/>00872 &#32;
<anchor xml:id="_advretry_8py_source_1l00873"/>00873 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacefcmaes_1_1advretry_1a6c3c42e1fa5ab01ff7ba59710578ebb5">_crossover</link>(fun,&#32;store,&#32;optimize,&#32;rg):
<anchor xml:id="_advretry_8py_source_1l00874"/>00874 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00875"/>00875 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Performs&#32;a&#32;crossover&#32;operation&#32;to&#32;optimize&#32;a&#32;function.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00876"/>00876 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00877"/>00877 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;This&#32;function&#32;attempts&#32;to&#32;optimize&#32;a&#32;given&#32;function&#32;using&#32;an&#32;optimization</emphasis>
<anchor xml:id="_advretry_8py_source_1l00878"/>00878 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;strategy&#32;by&#32;utilizing&#32;the&#32;provided&#32;parameters&#32;and&#32;probabilistic&#32;logic&#32;to&#32;decide</emphasis>
<anchor xml:id="_advretry_8py_source_1l00879"/>00879 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;whether&#32;crossover&#32;should&#32;be&#32;performed.&#32;It&#32;uses&#32;the&#32;specified&#32;random&#32;generator</emphasis>
<anchor xml:id="_advretry_8py_source_1l00880"/>00880 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;optimization&#32;function,&#32;and&#32;updates&#32;the&#32;solution&#32;store&#32;upon&#32;successful</emphasis>
<anchor xml:id="_advretry_8py_source_1l00881"/>00881 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;optimization&#32;completion.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00882"/>00882 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00883"/>00883 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Args:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00884"/>00884 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun:&#32;The&#32;objective&#32;function&#32;to&#32;be&#32;optimized.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00885"/>00885 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store:&#32;An&#32;object&#32;that&#32;stores&#32;limits,&#32;results,&#32;and&#32;other&#32;related&#32;data.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00886"/><link linkend="_namespacefcmaes_1_1advretry_1a2e67b1339ce1e546807f7cba0a45d8c9">00886</link> <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimize:&#32;A&#32;callable&#32;function&#32;used&#32;to&#32;perform&#32;the&#32;optimization.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00887"/>00887 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rg:&#32;A&#32;random&#32;generator&#32;for&#32;probabilistic&#32;decisions&#32;and&#32;randomness&#32;during</emphasis>
<anchor xml:id="_advretry_8py_source_1l00888"/>00888 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;optimization&#32;process.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00889"/>00889 <emphasis role="stringliteral"></emphasis>
<anchor xml:id="_advretry_8py_source_1l00890"/>00890 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Returns:</emphasis>
<anchor xml:id="_advretry_8py_source_1l00891"/>00891 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bool:&#32;True&#32;if&#32;the&#32;optimization&#32;process&#32;completes&#32;successfully;&#32;False&#32;otherwise.</emphasis>
<anchor xml:id="_advretry_8py_source_1l00892"/>00892 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00893"/>00893 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;rg.uniform(0,1)&#32;&lt;&#32;0.5:
<anchor xml:id="_advretry_8py_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_advretry_8py_source_1l00895"/>00895 &#32;&#32;&#32;&#32;y0,&#32;guess,&#32;lower,&#32;upper,&#32;sdev&#32;=&#32;store.limits()
<anchor xml:id="_advretry_8py_source_1l00896"/>00896 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;guess&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_advretry_8py_source_1l00898"/>00898 &#32;&#32;&#32;&#32;guess&#32;=&#32;fitting(guess,&#32;lower,&#32;upper)&#32;<emphasis role="comment">#&#32;take&#32;X&#32;from&#32;lower</emphasis>
<anchor xml:id="_advretry_8py_source_1l00899"/>00899 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sol,&#32;y,&#32;evals&#32;=&#32;optimize(fun,&#32;Bounds(lower,&#32;upper),&#32;guess,&#32;sdev,&#32;rg,&#32;store)
<anchor xml:id="_advretry_8py_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.add_result(y,&#32;sol,&#32;evals,&#32;y0)&#32;<emphasis role="comment">#&#32;limit&#32;to&#32;y0&#32;&#32;</emphasis>
<anchor xml:id="_advretry_8py_source_1l00902"/>00902 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>:
<anchor xml:id="_advretry_8py_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">False</emphasis>&#32;&#32;&#32;
<anchor xml:id="_advretry_8py_source_1l00904"/>00904 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">True</emphasis>
</programlisting></section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classfcmaes_1_1optimizer_1_1_bite__cpp" xml:lang="en-US">
<title>fcmaes.optimizer.Bite_cpp Class Reference</title>
<indexterm><primary>fcmaes.optimizer.Bite_cpp</primary></indexterm>
Inheritance diagram for fcmaes.optimizer.Bite_cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_bite__cpp__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for fcmaes.optimizer.Bite_cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_bite__cpp__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ae9c52b6c377c3ac1a7b235db2f307d74">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[ArrayLike] <link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a900a36ee4e9e471f164fddc18f5af8ff">guess</link>=None, Optional[float] <link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ae2a0167e0a1282da6cbc91cef6528e03">stop_fitness</link>=-np.inf, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a862c3e5d3d277ef587b91c91e022b760">M</link>=None, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a3c2b1016ec0c7132bd1aaf249a0606e2">popsize</link>=None, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ad30512cc226b83fb569ad1a46aa1e208">stall_criterion</link>=None)</para>

<para>Initializes the optimization algorithm with parameters specific to the optimization process. </para>
</listitem>
            <listitem><para>Tuple[np.ndarray, float, int] <link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972">minimize</link> (self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] <link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a900a36ee4e9e471f164fddc18f5af8ff">guess</link>=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</para>

<para>Minimizes a scalar function of multiple variables using a given optimization algorithm. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1">__init__</link> (self, Optional[int] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link>=50000, Optional[str] <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link>=&apos;&apos;)</para>

<para>Initializes the class with specific parameters including the maximum number of evaluations and the name. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a">max_eval_num</link> (self, store=None)</para>

<para>Evaluates and returns the maximum number of evaluations based on the provided store or the object&apos;s default value. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821">get_count_runs</link> (self, store=None)</para>

<para>Gets the count of runs from the provided store. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a900a36ee4e9e471f164fddc18f5af8ff">guess</link> = guess</para>

<para>Initial guess for the optimization process. </para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ae2a0167e0a1282da6cbc91cef6528e03">stop_fitness</link> = stop_fitness</para>

<para>Target fitness value at which the optimization. </para>
</listitem>
            <listitem><para>int <link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a862c3e5d3d277ef587b91c91e022b760">M</link> = 1 if M is None else M</para>

<para>Optional parameter for algorithm-specific settings. </para>
</listitem>
            <listitem><para>int <link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a3c2b1016ec0c7132bd1aaf249a0606e2">popsize</link> = 0 if popsize is None else popsize</para>

<para>Population size used by the optimization algorithm. </para>
</listitem>
            <listitem><para>int <link linkend="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ad30512cc226b83fb569ad1a46aa1e208">stall_criterion</link> = 0 if stall_criterion is None else stall_criterion</para>

<para>Number of iterations over which lack of improvement. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Attributes inherited from <link linkend="_classfcmaes_1_1optimizer_1_1_optimizer">fcmaes.optimizer.Optimizer</link>        <itemizedlist>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6">max_evaluations</link> = max_evaluations</para>
</listitem>
            <listitem><para><link linkend="_classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708">name</link> = name</para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02617">2617</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ae9c52b6c377c3ac1a7b235db2f307d74"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>fcmaes.optimizer.Bite_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Bite_cpp</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Bite_cpp.__init__ ( self, Optional[int]  max_evaluations = <computeroutput>50000</computeroutput>
, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[float]  stop_fitness = <computeroutput>-np.inf</computeroutput>
, Optional[int]  M = <computeroutput>None</computeroutput>
, Optional[int]  popsize = <computeroutput>None</computeroutput>
, Optional[int]  stall_criterion = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Initializes the optimization algorithm with parameters specific to the optimization process. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>max_evaluations</entry><entry>
<para>Optional; Maximum number of evaluations allowed for the optimizer to perform. Default is 50000. </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>Optional; Initial guess for the optimization process. Default is None. </para>
</entry>
                            </row>
                            <row>
<entry>stop_fitness</entry><entry>
<para>Optional; <link linkend="_class_fitness">Fitness</link> value at which to stop the optimization. Default is negative infinity (-np.inf). </para>
</entry>
                            </row>
                            <row>
<entry>M</entry><entry>
<para>Optional; Parameter related to the optimization configuration. Default value is 1 if not provided. </para>
</entry>
                            </row>
                            <row>
<entry>popsize</entry><entry>
<para>Optional; Population size for the optimization process. Default value is 0 if not provided. </para>
</entry>
                            </row>
                            <row>
<entry>stall_criterion</entry><entry>
<para>Optional; Criterion related to the stall condition in optimization. Default value is 0 if not provided. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02653">2653</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972"/><section>
    <title>minimize()</title>
<indexterm><primary>minimize</primary><secondary>fcmaes.optimizer.Bite_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Bite_cpp</primary><secondary>minimize</secondary></indexterm>
<para><computeroutput> Tuple[np.ndarray, float, int] fcmaes.optimizer.Bite_cpp.minimize ( self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike]  guess = <computeroutput>None</computeroutput>
, Optional[float]  sdevs = <computeroutput>None</computeroutput>
,  rg = <computeroutput>Generator(PCG64DXSM())</computeroutput>
,  store = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Minimizes a scalar function of multiple variables using a given optimization algorithm. </para>
</para>

<para><literallayout><computeroutput>   This method applies an algorithm to minimize the objective function `fun` within the
   specified bounds. It optionally uses an initial guess for the solution, random generator
   for sampling, and allows storing intermediate results. The function is particularly
   designed to handle optimization tasks efficiently with various configuration options.


       fun (Callable[[ArrayLike], float]): Objective function to be minimized.
           It should accept an array-like input and return a float value.
</computeroutput></literallayout> 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>bounds</entry><entry>
<para>Bounds for the optimization variables. Specifies the range of the variables during optimization. </para>
</entry>
                            </row>
                            <row>
<entry>guess</entry><entry>
<para>Initial guess for the solution. If None, the default guess will be used. </para>
</entry>
                            </row>
                            <row>
<entry>sdevs</entry><entry>
<para>Ignored. Value provided to this parameter will have no effect. </para>
</entry>
                            </row>
                            <row>
<entry>rg</entry><entry>
<para>Random generator instance for sampling during the optimization process. Default is Generator(PCG64DXSM()). </para>
</entry>
                            </row>
                            <row>
<entry>store</entry><entry>
<para>Optional storage for storing intermediate results such as run history or diagnostics information.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Tuple[np.ndarray, float, int]: A tuple containing:<itemizedlist>
<listitem>
<para>The optimized solution as a NumPy array.</para>
</listitem><listitem>
<para>The value of the objective function at the optimized solution.</para>
</listitem><listitem>
<para>The total number of function evaluations performed. </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02695">2695</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classfcmaes_1_1optimizer_1_1_bite__cpp_abbc94878a7c8ceda2ea3b65361a3e972_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a900a36ee4e9e471f164fddc18f5af8ff"/><section>
    <title>guess</title>
<indexterm><primary>guess</primary><secondary>fcmaes.optimizer.Bite_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Bite_cpp</primary><secondary>guess</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Bite_cpp.guess = guess</computeroutput></para><para>

<para>Initial guess for the optimization process. </para>
</para>

<para>If None, </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02661">2661</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a862c3e5d3d277ef587b91c91e022b760"/><section>
    <title>M</title>
<indexterm><primary>M</primary><secondary>fcmaes.optimizer.Bite_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Bite_cpp</primary><secondary>M</secondary></indexterm>
<para><computeroutput>int fcmaes.optimizer.Bite_cpp.M = 1 if M is None else M</computeroutput></para><para>

<para>Optional parameter for algorithm-specific settings. </para>
</para>

<para>Defaults to 1 </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02663">2663</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_bite__cpp_1a3c2b1016ec0c7132bd1aaf249a0606e2"/><section>
    <title>popsize</title>
<indexterm><primary>popsize</primary><secondary>fcmaes.optimizer.Bite_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Bite_cpp</primary><secondary>popsize</secondary></indexterm>
<para><computeroutput>int fcmaes.optimizer.Bite_cpp.popsize = 0 if popsize is None else popsize</computeroutput></para><para>

<para>Population size used by the optimization algorithm. </para>
</para>

<para>Defaults </para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02664">2664</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ad30512cc226b83fb569ad1a46aa1e208"/><section>
    <title>stall_criterion</title>
<indexterm><primary>stall_criterion</primary><secondary>fcmaes.optimizer.Bite_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Bite_cpp</primary><secondary>stall_criterion</secondary></indexterm>
<para><computeroutput>int fcmaes.optimizer.Bite_cpp.stall_criterion = 0 if stall_criterion is None else stall_criterion</computeroutput></para><para>

<para>Number of iterations over which lack of improvement. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02665">2665</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<anchor xml:id="_classfcmaes_1_1optimizer_1_1_bite__cpp_1ae2a0167e0a1282da6cbc91cef6528e03"/><section>
    <title>stop_fitness</title>
<indexterm><primary>stop_fitness</primary><secondary>fcmaes.optimizer.Bite_cpp</secondary></indexterm>
<indexterm><primary>fcmaes.optimizer.Bite_cpp</primary><secondary>stop_fitness</secondary></indexterm>
<para><computeroutput>fcmaes.optimizer.Bite_cpp.stop_fitness = stop_fitness</computeroutput></para><para>

<para>Target fitness value at which the optimization. </para>
</para>
<para>
Definition at line <link linkend="_optimizer_8py_source_1l02662">2662</link> of file <link linkend="_optimizer_8py_source">optimizer.py</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
fcmaes/<link linkend="_optimizer_8py">optimizer.py</link></section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.13.2" doxygen_gitid="26342b775ea25e6fefb53220926b20702c56fcb3">
  <compound kind="file">
    <name>acmaesoptimizer.cpp</name>
    <path>_fcmaescpp/</path>
    <filename>acmaesoptimizer_8cpp.html</filename>
    <includes id="evaluator_8h" name="evaluator.h" local="yes" import="no" module="no" objc="no">evaluator.h</includes>
    <class kind="class">acmaes::AcmaesOptimizer</class>
    <namespace>acmaes</namespace>
    <member kind="function">
      <type>void</type>
      <name>optimizeACMA_C</name>
      <anchorfile>acmaesoptimizer_8cpp.html</anchorfile>
      <anchor>afc81c91b36bdd348c03d272ec53f027a</anchor>
      <arglist>(long runid, callback_type func, callback_parallel func_par, int dim, double *init, double *lower, double *upper, double *sigma, int maxEvals, double stopfitness, double stopTolHistFun, int mu, int popsize, double accuracy, long seed, bool normalize, bool use_delayed_update, int update_gap, int workers, double *res)</arglist>
    </member>
    <member kind="function">
      <type>uintptr_t</type>
      <name>initACMA_C</name>
      <anchorfile>acmaesoptimizer_8cpp.html</anchorfile>
      <anchor>ab128d45080b4023edb28550611997afe</anchor>
      <arglist>(long runid, int dim, double *init, double *lower, double *upper, double *sigma, int maxEvals, double stopfitness, double stopTolHistFun, int mu, int popsize, double accuracy, long seed, bool normalize, bool use_delayed_update, int update_gap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyACMA_C</name>
      <anchorfile>acmaesoptimizer_8cpp.html</anchorfile>
      <anchor>a7b2394fc01d8d5612733f943d54a8982</anchor>
      <arglist>(uintptr_t ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>askACMA_C</name>
      <anchorfile>acmaesoptimizer_8cpp.html</anchorfile>
      <anchor>afd9ea227572135d9dd02fe7ec9d489e4</anchor>
      <arglist>(uintptr_t ptr, double *xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tellACMA_C</name>
      <anchorfile>acmaesoptimizer_8cpp.html</anchorfile>
      <anchor>a2cb3fdf36ee5dee68f436f1efa6be820</anchor>
      <arglist>(uintptr_t ptr, double *ys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tellXACMA_C</name>
      <anchorfile>acmaesoptimizer_8cpp.html</anchorfile>
      <anchor>ac4c1234b83df26634971a6707db1809d</anchor>
      <arglist>(uintptr_t ptr, double *ys, double *xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>populationACMA_C</name>
      <anchorfile>acmaesoptimizer_8cpp.html</anchorfile>
      <anchor>a76a358e67b1d48a0f0f7813dd201efdf</anchor>
      <arglist>(uintptr_t ptr, double *xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>resultACMA_C</name>
      <anchorfile>acmaesoptimizer_8cpp.html</anchorfile>
      <anchor>abe96370a07bb4c8fff0bc6e13e105c29</anchor>
      <arglist>(uintptr_t ptr, double *res)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testACMA_C</name>
      <anchorfile>acmaesoptimizer_8cpp.html</anchorfile>
      <anchor>a679cc7980203dbcbbe97d11014fdb5bf</anchor>
      <arglist>(int n, double *res)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ascent.cpp</name>
    <path>_fcmaescpp/</path>
    <filename>ascent_8cpp.html</filename>
    <class kind="struct">PVThrust</class>
    <class kind="struct">Damp</class>
    <class kind="struct">F8</class>
    <class kind="struct">PVTwaste</class>
    <member kind="function">
      <type>double *</type>
      <name>integratePVthrust</name>
      <anchorfile>ascent_8cpp.html</anchorfile>
      <anchor>ad82324920dbdc173d7bc71c3e8ebf7c8</anchor>
      <arglist>(double *yd, double mu, double ux, double uy, double uz, double veff, double dt, double step)</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>integrateDamp_C</name>
      <anchorfile>ascent_8cpp.html</anchorfile>
      <anchor>a91f8ebf7f31b0db72464aede82c3a2bd</anchor>
      <arglist>(double *yd, double alpha, double dt, double step)</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>integrateF8_C</name>
      <anchorfile>ascent_8cpp.html</anchorfile>
      <anchor>a6bf1992b7bf98468c32c6b6f19185dbf</anchor>
      <arglist>(double *yd, double w, double dt, double step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wic2par</name>
      <anchorfile>ascent_8cpp.html</anchorfile>
      <anchor>a7029b8dc4f9351f6a28fbfc893a920a6</anchor>
      <arglist>(state_t rv, double *kep, double mu)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>integratePVTwaste_C</name>
      <anchorfile>ascent_8cpp.html</anchorfile>
      <anchor>a3ac859a2fc844d9b3218d8377ff8ddc3</anchor>
      <arglist>(double *rvt, double dt, double step, double cram, bool dopri)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integratePVTwasteN_C</name>
      <anchorfile>ascent_8cpp.html</anchorfile>
      <anchor>ae5ba225583cb2594ec1b3c02e0da17fb</anchor>
      <arglist>(double *rvt, double dtN, double step, double cram, int N, bool dopri, double *res)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>biteoptimizer.cpp</name>
    <path>_fcmaescpp/</path>
    <filename>biteoptimizer_8cpp.html</filename>
    <includes id="biteopt_8h" name="biteopt.h" local="yes" import="no" module="no" objc="no">biteopt.h</includes>
    <includes id="evaluator_8h" name="evaluator.h" local="yes" import="no" module="no" objc="no">evaluator.h</includes>
    <class kind="class">biteopt::BiteOptimizer</class>
    <namespace>biteopt</namespace>
    <member kind="function">
      <type>void</type>
      <name>optimizeBite_C</name>
      <anchorfile>biteoptimizer_8cpp.html</anchorfile>
      <anchor>a3a44f6d1b82c40e137d534553af547b1</anchor>
      <arglist>(long runid, callback_type func, int dim, int seed, double *init, double *lower, double *upper, int maxEvals, double stopfitness, int M, int popsize, int stall_iterations, double *res)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>crfmnes.cpp</name>
    <path>_fcmaescpp/</path>
    <filename>crfmnes_8cpp.html</filename>
    <includes id="evaluator_8h" name="evaluator.h" local="yes" import="no" module="no" objc="no">evaluator.h</includes>
    <class kind="class">crmfnes::CrfmnesOptimizer</class>
    <namespace>crmfnes</namespace>
    <member kind="function">
      <type>void</type>
      <name>optimizeCRFMNES_C</name>
      <anchorfile>crfmnes_8cpp.html</anchorfile>
      <anchor>a9081791c22cd931e965641b985273b52</anchor>
      <arglist>(int64_t runid, callback_parallel func_par, int dim, double *init, double *lower, double *upper, double sigma, int maxEvals, double stopfitness, int popsize, int64_t seed, double penalty_coef, bool use_constraint_violation, bool normalize, double *res)</arglist>
    </member>
    <member kind="function">
      <type>uintptr_t</type>
      <name>initCRFMNES_C</name>
      <anchorfile>crfmnes_8cpp.html</anchorfile>
      <anchor>a8ad70c1b6cadd1ed7b3bfa0d60d96911</anchor>
      <arglist>(int64_t runid, int dim, double *init, double *lower, double *upper, double sigma, int popsize, int64_t seed, double penalty_coef, bool use_constraint_violation, bool normalize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyCRFMNES_C</name>
      <anchorfile>crfmnes_8cpp.html</anchorfile>
      <anchor>a22d09131327c77abfd090eaa649faf5d</anchor>
      <arglist>(uintptr_t ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>askCRFMNES_C</name>
      <anchorfile>crfmnes_8cpp.html</anchorfile>
      <anchor>aa1796ba79109494532e2a57b9555b7e5</anchor>
      <arglist>(uintptr_t ptr, double *xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tellCRFMNES_C</name>
      <anchorfile>crfmnes_8cpp.html</anchorfile>
      <anchor>a39b04e71778a1006c8cc1bea2d082074</anchor>
      <arglist>(uintptr_t ptr, double *ys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>populationCRFMNES_C</name>
      <anchorfile>crfmnes_8cpp.html</anchorfile>
      <anchor>ae309750075a3655886dcf9647435b799</anchor>
      <arglist>(uintptr_t ptr, double *xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>resultCRFMNES_C</name>
      <anchorfile>crfmnes_8cpp.html</anchorfile>
      <anchor>aefaccee22121ee2d0f43d33fd5968c22</anchor>
      <arglist>(uintptr_t ptr, double *res)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>daoptimizer.cpp</name>
    <path>_fcmaescpp/</path>
    <filename>daoptimizer_8cpp.html</filename>
    <includes id="_l_b_f_g_s_b_8h" name="LBFGSB.h" local="no" import="no" module="no" objc="no">LBFGSB.h</includes>
    <class kind="class">dual_annealing::Fitness</class>
    <class kind="class">dual_annealing::LBFGSFunc</class>
    <class kind="class">dual_annealing::VisitingDistribution</class>
    <class kind="class">dual_annealing::nanexception</class>
    <class kind="class">dual_annealing::EnergyState</class>
    <class kind="class">dual_annealing::StrategyChain</class>
    <class kind="class">dual_annealing::sizeexception</class>
    <class kind="class">dual_annealing::DARunner</class>
    <namespace>dual_annealing</namespace>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, Eigen::Dynamic, 1 &gt;</type>
      <name>vec</name>
      <anchorfile>daoptimizer_8cpp.html</anchorfile>
      <anchor>aeb2fc0d8c764908dd0b77ed5ab437c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; int, Eigen::Dynamic, 1 &gt;</type>
      <name>ivec</name>
      <anchorfile>daoptimizer_8cpp.html</anchorfile>
      <anchor>aa45a218a6a9d424e78898121d21f082d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>mat</name>
      <anchorfile>daoptimizer_8cpp.html</anchorfile>
      <anchor>af0f7533253586ad2aba962e9537d90bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>optimizeDA_C</name>
      <anchorfile>daoptimizer_8cpp.html</anchorfile>
      <anchor>aa097a54ac07d35740d86c465d2477195</anchor>
      <arglist>(long runid, callback_type func, int dim, int seed, double *init, double *lower, double *upper, int maxEvals, bool use_local_search, double *res)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>deoptimizer.cpp</name>
    <path>_fcmaescpp/</path>
    <filename>deoptimizer_8cpp.html</filename>
    <includes id="evaluator_8h" name="evaluator.h" local="yes" import="no" module="no" objc="no">evaluator.h</includes>
    <class kind="class">differential_evolution::DeOptimizer</class>
    <namespace>differential_evolution</namespace>
    <member kind="function">
      <type>void</type>
      <name>optimizeDE_C</name>
      <anchorfile>deoptimizer_8cpp.html</anchorfile>
      <anchor>aa394124712525387121d6045a579b805</anchor>
      <arglist>(long runid, callback_type func, int dim, int seed, double *lower, double *upper, double *init, double *sigma, double minSigma, bool *ints, int maxEvals, double keep, double stopfitness, int popsize, double F, double CR, double min_mutate, double max_mutate, int workers, double *res)</arglist>
    </member>
    <member kind="function">
      <type>uintptr_t</type>
      <name>initDE_C</name>
      <anchorfile>deoptimizer_8cpp.html</anchorfile>
      <anchor>a8af4088f11fb8bc902b5a17f4b3c67f4</anchor>
      <arglist>(long runid, int dim, int seed, double *lower, double *upper, double *init, double *sigma, double minSigma, bool *ints, double keep, int popsize, double F, double CR, double min_mutate, double max_mutate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyDE_C</name>
      <anchorfile>deoptimizer_8cpp.html</anchorfile>
      <anchor>ab3fd3d1530a822a0b7a020d2b68a0406</anchor>
      <arglist>(uintptr_t ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>askDE_C</name>
      <anchorfile>deoptimizer_8cpp.html</anchorfile>
      <anchor>af3c55844c8d3850d96ddf517996fca30</anchor>
      <arglist>(uintptr_t ptr, double *xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tellDE_C</name>
      <anchorfile>deoptimizer_8cpp.html</anchorfile>
      <anchor>a913e842ff9af1d5b517e26a27696ab26</anchor>
      <arglist>(uintptr_t ptr, double *ys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>populationDE_C</name>
      <anchorfile>deoptimizer_8cpp.html</anchorfile>
      <anchor>af52980108e82b3df67f48b2efbda2755</anchor>
      <arglist>(uintptr_t ptr, double *xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>resultDE_C</name>
      <anchorfile>deoptimizer_8cpp.html</anchorfile>
      <anchor>a57cc84b1da95b58421bcd567fb01f67b</anchor>
      <arglist>(uintptr_t ptr, double *res)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>biteaux.h</name>
    <path>_fcmaescpp/include/</path>
    <filename>biteaux_8h.html</filename>
    <class kind="class">CBiteRnd</class>
    <class kind="class">CBiteSelBase</class>
    <class kind="class">CBiteSel</class>
    <class kind="class">CBitePop</class>
    <class kind="class">CBiteParPops</class>
    <class kind="class">CBiteOptInterface</class>
    <class kind="class">CBiteOptBase</class>
    <member kind="typedef">
      <type>uint32_t(*</type>
      <name>biteopt_rng</name>
      <anchorfile>biteaux_8h.html</anchorfile>
      <anchor>a4522f40aac41a9fcbd22f042fea916a5</anchor>
      <arglist>)(void *rng_data)</arglist>
    </member>
    <docanchor file="spheropt_8h.html" title="License">license</docanchor>
  </compound>
  <compound kind="file">
    <name>biteopt.h</name>
    <path>_fcmaescpp/include/</path>
    <filename>biteopt_8h.html</filename>
    <includes id="spheropt_8h" name="spheropt.h" local="yes" import="no" module="no" objc="no">spheropt.h</includes>
    <includes id="nmsopt_8h" name="nmsopt.h" local="yes" import="no" module="no" objc="no">nmsopt.h</includes>
    <class kind="class">CBiteOpt</class>
    <class kind="class">CBiteOpt::CParOpt</class>
    <class kind="class">CBiteOptDeep</class>
    <class kind="class">CBiteOptDeep::CBiteOptWrap</class>
    <class kind="class">CBiteOptMinimize</class>
    <member kind="define">
      <type>#define</type>
      <name>BITEOPT_VERSION</name>
      <anchorfile>biteopt_8h.html</anchorfile>
      <anchor>a4c9ff8e4010099151e3ac1397a2161d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double(*</type>
      <name>biteopt_func</name>
      <anchorfile>biteopt_8h.html</anchorfile>
      <anchor>a308db87d0932931afd67e135ae6c35a1</anchor>
      <arglist>)(int N, const double *x, void *func_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>biteopt_minimize</name>
      <anchorfile>biteopt_8h.html</anchorfile>
      <anchor>a80c74350b3bde46bf211afee2d02ddd5</anchor>
      <arglist>(const int N, biteopt_func f, void *data, const double *lb, const double *ub, double *x, double *minf, const int iter, const int M=1, const int attc=10, const int stopc=0, biteopt_rng rf=0, void *rdata=0, double *f_minp=0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>biteort.h</name>
    <path>_fcmaescpp/include/</path>
    <filename>biteort_8h.html</filename>
    <includes id="biteaux_8h" name="biteaux.h" local="yes" import="no" module="no" objc="no">biteaux.h</includes>
    <class kind="class">CBiteOrt</class>
  </compound>
  <compound kind="file">
    <name>deopt.h</name>
    <path>_fcmaescpp/include/</path>
    <filename>deopt_8h.html</filename>
    <includes id="biteaux_8h" name="biteaux.h" local="yes" import="no" module="no" objc="no">biteaux.h</includes>
    <class kind="class">CDEOpt</class>
  </compound>
  <compound kind="file">
    <name>evaluator.h</name>
    <path>_fcmaescpp/include/</path>
    <filename>evaluator_8h.html</filename>
    <class kind="class">blocking_queue</class>
    <class kind="struct">IndexVal</class>
    <class kind="class">Fitness</class>
    <class kind="struct">vec_id</class>
    <class kind="class">evaluator</class>
    <class kind="class">evaluator::evaluator_job</class>
    <member kind="define">
      <type>#define</type>
      <name>EIGEN_VECTORIZE_SSE2</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>ab911b458d875aed088497f4823d543ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::chrono::steady_clock</type>
      <name>Clock</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a19bfb27380067c74ae297dd7dad5fb37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, Eigen::Dynamic, 1 &gt;</type>
      <name>vec</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>aeb2fc0d8c764908dd0b77ed5ab437c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; int, Eigen::Dynamic, 1 &gt;</type>
      <name>ivec</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>aa45a218a6a9d424e78898121d21f082d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>mat</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>af0f7533253586ad2aba962e9537d90bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; int, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>imat</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>abf39fef19e3ec51cce88f380c3370bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>bool(*</type>
      <name>callback_type</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>af419da391481d5e767cbe038009da309</anchor>
      <arglist>)(int, const double *, double *)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>callback_parallel</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a1adc681c70e547867358d25d5cf7eedc</anchor>
      <arglist>)(int, int, double *, double *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>noop_callback</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>ad0943ebd623281f526e5aee2aa818895</anchor>
      <arglist>(int popsize, const double *x, double *y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>noop_callback_par</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>ac05c49788a31e5f7cb8efbe8ca3b548e</anchor>
      <arglist>(int popsize, int dim, double *x, double *y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::MatrixXd</type>
      <name>normal</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a231544ac51b3f9312c104a3b7a3c49a6</anchor>
      <arglist>(int dx, int dy, pcg64 &amp;rs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::MatrixXd</type>
      <name>normalVec</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a5b652df2286e1f0c4dae7d4dd841bb8f</anchor>
      <arglist>(int dim, pcg64 &amp;rs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::MatrixXd</type>
      <name>uniform</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>ad408c1ac0c479863b2d1291c483c5593</anchor>
      <arglist>(int dx, int dy, pcg64 &amp;rs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::MatrixXd</type>
      <name>uniformVec</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a28d3e754a2edfdf68753c5562acd87d0</anchor>
      <arglist>(int dim, pcg64 &amp;rs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>rand01</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a0007d50439e7d7122b6dd54d05c7c45b</anchor>
      <arglist>(pcg64 &amp;rs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>randInt</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a3f89a72cbd8f38570fbb77117bdc7cbb</anchor>
      <arglist>(pcg64 &amp;rs, int max)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>normreal</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>aa3d770d0f4bda035e2cc8c6f5c1b0aee</anchor>
      <arglist>(pcg64 &amp;rs, double mu, double sdev)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vec</type>
      <name>normalVec</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a26c726f0e49c18836df96a8489dc9147</anchor>
      <arglist>(const vec &amp;mean, const vec &amp;sdev, int dim, pcg64 &amp;rs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vec</type>
      <name>zeros</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a909812174fa9829bc49f6e00edb00b90</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static mat</type>
      <name>zeros</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>ae5c3f13d61f9d2fc9daf17f7c1c56c98</anchor>
      <arglist>(int n, int m)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vec</type>
      <name>constant</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a493b3a74ec3481711548e4b506b009cd</anchor>
      <arglist>(int n, double val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static mat</type>
      <name>constant</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>af16be3da823298a97b79f99d38769f75</anchor>
      <arglist>(int n, int m, double val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compareIndexVal</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a85426eb5cecc23caa06090d795034e5c</anchor>
      <arglist>(IndexVal i1, IndexVal i2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ivec</type>
      <name>sort_index</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a7689f88ea48c85c22d9b34208decd67c</anchor>
      <arglist>(const vec &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>index_min</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a5f25c709f7baaf3ad28d4523f16fa93e</anchor>
      <arglist>(vec &amp;v)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::uniform_real_distribution</type>
      <name>distr_01</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a287b4a368f58519084aafdb8b9ff2142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::normal_distribution</type>
      <name>gauss_01</name>
      <anchorfile>evaluator_8h.html</anchorfile>
      <anchor>a74490c9b525b6b9b79b11e2d0f2fc0be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LBFGS.h</name>
    <path>_fcmaescpp/include/</path>
    <filename>_l_b_f_g_s_8h.html</filename>
    <class kind="class">LBFGSpp::LBFGSSolver</class>
    <namespace>LBFGSpp</namespace>
  </compound>
  <compound kind="file">
    <name>LBFGSB.h</name>
    <path>_fcmaescpp/include/</path>
    <filename>_l_b_f_g_s_b_8h.html</filename>
    <class kind="class">LBFGSpp::LBFGSBSolver</class>
    <namespace>LBFGSpp</namespace>
  </compound>
  <compound kind="file">
    <name>nmsopt.h</name>
    <path>_fcmaescpp/include/</path>
    <filename>nmsopt_8h.html</filename>
    <includes id="biteaux_8h" name="biteaux.h" local="yes" import="no" module="no" objc="no">biteaux.h</includes>
    <class kind="class">CNMSeqOpt</class>
  </compound>
  <compound kind="file">
    <name>smaesopt.h</name>
    <path>_fcmaescpp/include/</path>
    <filename>smaesopt_8h.html</filename>
    <includes id="biteort_8h" name="biteort.h" local="yes" import="no" module="no" objc="no">biteort.h</includes>
    <class kind="class">CSMAESOpt</class>
  </compound>
  <compound kind="file">
    <name>spheropt.h</name>
    <path>_fcmaescpp/include/</path>
    <filename>spheropt_8h.html</filename>
    <includes id="biteaux_8h" name="biteaux.h" local="yes" import="no" module="no" objc="no">biteaux.h</includes>
    <class kind="class">CSpherOpt</class>
  </compound>
  <compound kind="file">
    <name>modeoptimizer.cpp</name>
    <path>_fcmaescpp/</path>
    <filename>modeoptimizer_8cpp.html</filename>
    <includes id="evaluator_8h" name="evaluator.h" local="yes" import="no" module="no" objc="no">evaluator.h</includes>
    <class kind="class">mode_optimizer::MoDeOptimizer</class>
    <namespace>mode_optimizer</namespace>
    <member kind="function">
      <type>uintptr_t</type>
      <name>initMODE_C</name>
      <anchorfile>modeoptimizer_8cpp.html</anchorfile>
      <anchor>a53418a6215cc2512fc8379c813113f7f</anchor>
      <arglist>(int64_t runid, int dim, int nobj, int ncon, int seed, double *lower, double *upper, bool *ints, int popsize, double F, double CR, double pro_c, double dis_c, double pro_m, double dis_m, bool nsga_update, double pareto_update, double min_mutate, double max_mutate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyMODE_C</name>
      <anchorfile>modeoptimizer_8cpp.html</anchorfile>
      <anchor>a43f7e368f8a09a95d508319cb44fe371</anchor>
      <arglist>(uintptr_t ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>askMODE_C</name>
      <anchorfile>modeoptimizer_8cpp.html</anchorfile>
      <anchor>a8ff81adfda62d091c1382712f6978a38</anchor>
      <arglist>(uintptr_t ptr, double *xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tellMODE_C</name>
      <anchorfile>modeoptimizer_8cpp.html</anchorfile>
      <anchor>a58bdcf426555b30299f0c6d85d4f9a3f</anchor>
      <arglist>(uintptr_t ptr, double *ys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setPopulationMODE_C</name>
      <anchorfile>modeoptimizer_8cpp.html</anchorfile>
      <anchor>a20d02a7aeece1745e03dcf6b3f70b929</anchor>
      <arglist>(uintptr_t ptr, int size, double *xs, double *ys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tellMODE_switchC</name>
      <anchorfile>modeoptimizer_8cpp.html</anchorfile>
      <anchor>a697667505911e8ffd72c2e14ea1b177b</anchor>
      <arglist>(uintptr_t ptr, double *ys, bool nsga_update, double pareto_update)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>populationMODE_C</name>
      <anchorfile>modeoptimizer_8cpp.html</anchorfile>
      <anchor>abbaf3a45fdaae9d07c37dee9b01875e9</anchor>
      <arglist>(uintptr_t ptr, double *xs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pgpe.cpp</name>
    <path>_fcmaescpp/</path>
    <filename>pgpe_8cpp.html</filename>
    <includes id="evaluator_8h" name="evaluator.h" local="yes" import="no" module="no" objc="no">evaluator.h</includes>
    <class kind="class">pgpe::ADAM</class>
    <class kind="class">pgpe::PGPEOptimizer</class>
    <namespace>pgpe</namespace>
    <member kind="function">
      <type>void</type>
      <name>optimizePGPE_C</name>
      <anchorfile>pgpe_8cpp.html</anchorfile>
      <anchor>a83f6d1c91509d2c28e236afbea4bd172</anchor>
      <arglist>(int64_t runid, callback_parallel func_par, int dim, double *init, double *lower, double *upper, double *sigma, int maxEvals, double stopfitness, int popsize, int64_t seed, int lr_decay_steps, bool use_ranking, double center_learning_rate, double stdev_learning_rate, double stdev_max_change, double b1, double b2, double eps, double decay_coef, bool normalize, double *res)</arglist>
    </member>
    <member kind="function">
      <type>uintptr_t</type>
      <name>initPGPE_C</name>
      <anchorfile>pgpe_8cpp.html</anchorfile>
      <anchor>a15e7e7ada6ad4ab26263681ac00ac55b</anchor>
      <arglist>(int64_t runid, int dim, double *init, double *lower, double *upper, double *sigma, int popsize, int64_t seed, int lr_decay_steps, bool use_ranking, double center_learning_rate, double stdev_learning_rate, double stdev_max_change, double b1, double b2, double eps, double decay_coef, bool normalize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyPGPE_C</name>
      <anchorfile>pgpe_8cpp.html</anchorfile>
      <anchor>a8909d326ed046a0387b7dd37e0c52619</anchor>
      <arglist>(uintptr_t ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>askPGPE_C</name>
      <anchorfile>pgpe_8cpp.html</anchorfile>
      <anchor>a5243162be40907ba17766c126035e413</anchor>
      <arglist>(uintptr_t ptr, double *xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tellPGPE_C</name>
      <anchorfile>pgpe_8cpp.html</anchorfile>
      <anchor>a20da2826016ed209c84182f30949d436</anchor>
      <arglist>(uintptr_t ptr, double *ys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>populationPGPE_C</name>
      <anchorfile>pgpe_8cpp.html</anchorfile>
      <anchor>a2143eeef8d1b83e3c6f1d7818cffaa40</anchor>
      <arglist>(uintptr_t ptr, double *xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>resultPGPE_C</name>
      <anchorfile>pgpe_8cpp.html</anchorfile>
      <anchor>abd7f5b28d4595d7f9102a532a9f8c367</anchor>
      <arglist>(uintptr_t ptr, double *res)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>advexamples.py</name>
    <path>examples/</path>
    <filename>advexamples_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::advexamples</namespace>
  </compound>
  <compound kind="file">
    <name>anpcp.py</name>
    <path>examples/anpcp/</path>
    <filename>anpcp_8py.html</filename>
    <class kind="class">anpcp::ANPCP</class>
    <namespace>anpcp</namespace>
  </compound>
  <compound kind="file">
    <name>anpcpc.py</name>
    <path>examples/anpcp/</path>
    <filename>anpcpc_8py.html</filename>
    <class kind="class">anpcpc::ANPCPC</class>
    <namespace>anpcpc</namespace>
  </compound>
  <compound kind="file">
    <name>arm.py</name>
    <path>examples/</path>
    <filename>arm_8py.html</filename>
    <class kind="class">examples::arm::fitness</class>
    <namespace>examples</namespace>
    <namespace>examples::arm</namespace>
  </compound>
  <compound kind="file">
    <name>benchmark_gtop.py</name>
    <path>examples/</path>
    <filename>benchmark__gtop_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::benchmark_gtop</namespace>
  </compound>
  <compound kind="file">
    <name>benchmark_gtop_pygmo.py</name>
    <path>examples/</path>
    <filename>benchmark__gtop__pygmo_8py.html</filename>
    <class kind="class">examples::benchmark_gtop_pygmo::pygmo_udp</class>
    <class kind="class">examples::benchmark_gtop_pygmo::Cma_pyg</class>
    <class kind="class">examples::benchmark_gtop_pygmo::De_pyg</class>
    <namespace>examples</namespace>
    <namespace>examples::benchmark_gtop_pygmo</namespace>
  </compound>
  <compound kind="file">
    <name>cassini2_minlp.py</name>
    <path>examples/</path>
    <filename>cassini2__minlp_8py.html</filename>
    <class kind="class">examples::cassini2_minlp::CassiniMulti</class>
    <namespace>examples</namespace>
    <namespace>examples::cassini2_minlp</namespace>
  </compound>
  <compound kind="file">
    <name>cassini_minlp.py</name>
    <path>examples/</path>
    <filename>cassini__minlp_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::cassini_minlp</namespace>
  </compound>
  <compound kind="file">
    <name>clustering.py</name>
    <path>examples/</path>
    <filename>clustering_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::clustering</namespace>
  </compound>
  <compound kind="file">
    <name>crypto.py</name>
    <path>examples/</path>
    <filename>crypto_8py.html</filename>
    <class kind="class">examples::crypto::fitness</class>
    <namespace>examples</namespace>
    <namespace>examples::crypto</namespace>
  </compound>
  <compound kind="file">
    <name>damp.py</name>
    <path>examples/</path>
    <filename>damp_8py.html</filename>
    <class kind="class">examples::damp::fitness</class>
    <namespace>examples</namespace>
    <namespace>examples::damp</namespace>
  </compound>
  <compound kind="file">
    <name>elitescass2.py</name>
    <path>examples/</path>
    <filename>elitescass2_8py.html</filename>
    <class kind="class">examples::elitescass2::Cassini2_me</class>
    <namespace>examples</namespace>
    <namespace>examples::elitescass2</namespace>
  </compound>
  <compound kind="file">
    <name>employee.py</name>
    <path>examples/</path>
    <filename>employee_8py.html</filename>
    <class kind="class">examples::employee::problem</class>
    <namespace>examples</namespace>
    <namespace>examples::employee</namespace>
  </compound>
  <compound kind="file">
    <name>quantumcomm.py</name>
    <path>examples/esa2/</path>
    <filename>quantumcomm_8py.html</filename>
    <class kind="class">quantumcomm::constellation_udp</class>
    <namespace>quantumcomm</namespace>
  </compound>
  <compound kind="file">
    <name>examples.py</name>
    <path>examples/</path>
    <filename>examples_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::examples</namespace>
  </compound>
  <compound kind="file">
    <name>f8.py</name>
    <path>examples/</path>
    <filename>f8_8py.html</filename>
    <class kind="class">examples::f8::f8_problem</class>
    <namespace>examples</namespace>
    <namespace>examples::f8</namespace>
  </compound>
  <compound kind="file">
    <name>edgecover.py</name>
    <path>examples/fb/</path>
    <filename>edgecover_8py.html</filename>
    <class kind="class">edgecover::graph</class>
    <class kind="class">edgecover::problem</class>
    <namespace>edgecover</namespace>
  </compound>
  <compound kind="file">
    <name>fbcover.py</name>
    <path>examples/fb/</path>
    <filename>fbcover_8py.html</filename>
    <class kind="class">fbcover::fb_graph</class>
    <class kind="class">fbcover::problem_fb</class>
    <namespace>fbcover</namespace>
  </compound>
  <compound kind="file">
    <name>filter.py</name>
    <path>examples/</path>
    <filename>filter_8py.html</filename>
    <class kind="class">examples::filter::filter</class>
    <namespace>examples</namespace>
    <namespace>examples::filter</namespace>
  </compound>
  <compound kind="file">
    <name>gear_train.py</name>
    <path>examples/</path>
    <filename>gear__train_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::gear_train</namespace>
  </compound>
  <compound kind="file">
    <name>gtoc12.py</name>
    <path>examples/gtoc12/</path>
    <filename>gtoc12_8py.html</filename>
    <class kind="class">gtoc12::Transfers</class>
    <namespace>gtoc12</namespace>
  </compound>
  <compound kind="file">
    <name>harvesting.py</name>
    <path>examples/</path>
    <filename>harvesting_8py.html</filename>
    <class kind="class">examples::harvesting::fitness</class>
    <namespace>examples</namespace>
    <namespace>examples::harvesting</namespace>
  </compound>
  <compound kind="file">
    <name>hbv.py</name>
    <path>examples/hbv/</path>
    <filename>hbv_8py.html</filename>
    <class kind="class">hbv::hbv</class>
    <namespace>hbv</namespace>
  </compound>
  <compound kind="file">
    <name>house.py</name>
    <path>examples/</path>
    <filename>house_8py.html</filename>
    <class kind="class">examples::house::cv_problem</class>
    <namespace>examples</namespace>
    <namespace>examples::house</namespace>
  </compound>
  <compound kind="file">
    <name>interferometry.py</name>
    <path>examples/</path>
    <filename>interferometry_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::interferometry</namespace>
  </compound>
  <compound kind="file">
    <name>interferometry_udp.py</name>
    <path>examples/</path>
    <filename>interferometry__udp_8py.html</filename>
    <class kind="class">examples::interferometry_udp::Interferometry</class>
    <namespace>examples</namespace>
    <namespace>examples::interferometry_udp</namespace>
  </compound>
  <compound kind="file">
    <name>jobshop.py</name>
    <path>examples/</path>
    <filename>jobshop_8py.html</filename>
    <class kind="class">examples::jobshop::fitness</class>
    <namespace>examples</namespace>
    <namespace>examples::jobshop</namespace>
  </compound>
  <compound kind="file">
    <name>kepler.py</name>
    <path>examples/kepler/</path>
    <filename>kepler_8py.html</filename>
    <class kind="class">examples::kepler::kepler::Kepler</class>
    <namespace>examples</namespace>
    <namespace>examples::kepler</namespace>
    <namespace>examples::kepler::kepler</namespace>
  </compound>
  <compound kind="file">
    <name>lambert.py</name>
    <path>examples/kepler/</path>
    <filename>lambert_8py.html</filename>
    <class kind="class">examples::kepler::lambert::lambert_problem_multirev</class>
    <class kind="class">examples::kepler::lambert::lambert_problem_multirev_ga</class>
    <class kind="class">examples::kepler::lambert::lambert_problem_stochastic</class>
    <namespace>examples</namespace>
    <namespace>examples::kepler</namespace>
    <namespace>examples::kepler::lambert</namespace>
  </compound>
  <compound kind="file">
    <name>resonance.py</name>
    <path>examples/kepler/</path>
    <filename>resonance_8py.html</filename>
    <class kind="class">examples::kepler::resonance::resonance</class>
    <namespace>examples</namespace>
    <namespace>examples::kepler</namespace>
    <namespace>examples::kepler::resonance</namespace>
  </compound>
  <compound kind="file">
    <name>rvt.py</name>
    <path>examples/kepler/</path>
    <filename>rvt_8py.html</filename>
    <class kind="class">examples::kepler::rvt::rvt</class>
    <namespace>examples</namespace>
    <namespace>examples::kepler</namespace>
    <namespace>examples::kepler::rvt</namespace>
  </compound>
  <compound kind="file">
    <name>predict.py</name>
    <path>examples/lichtman/</path>
    <filename>predict_8py.html</filename>
    <namespace>predict</namespace>
  </compound>
  <compound kind="file">
    <name>lotka.py</name>
    <path>examples/</path>
    <filename>lotka_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::lotka</namespace>
  </compound>
  <compound kind="file">
    <name>lrgv.py</name>
    <path>examples/lrgv/</path>
    <filename>lrgv_8py.html</filename>
    <class kind="class">lrgv::lrgv</class>
    <namespace>lrgv</namespace>
  </compound>
  <compound kind="file">
    <name>maxcut.py</name>
    <path>examples/</path>
    <filename>maxcut_8py.html</filename>
    <class kind="class">examples::maxcut::fcmaes_SPSA</class>
    <class kind="class">examples::maxcut::fcmaes_Optimizer</class>
    <namespace>examples</namespace>
    <namespace>examples::maxcut</namespace>
  </compound>
  <compound kind="file">
    <name>mmkp.py</name>
    <path>examples/mmkp/</path>
    <filename>mmkp_8py.html</filename>
    <class kind="class">mmkp::MMKP</class>
    <namespace>mmkp</namespace>
  </compound>
  <compound kind="file">
    <name>moexamples.py</name>
    <path>examples/</path>
    <filename>moexamples_8py.html</filename>
    <class kind="class">examples::moexamples::cassini1_mo</class>
    <class kind="class">examples::moexamples::cassini2_mo</class>
    <class kind="class">examples::moexamples::tandem_mo</class>
    <class kind="class">examples::moexamples::zdt1</class>
    <class kind="class">examples::moexamples::schaffer</class>
    <class kind="class">examples::moexamples::poloni</class>
    <class kind="class">examples::moexamples::fonseca</class>
    <namespace>examples</namespace>
    <namespace>examples::moexamples</namespace>
  </compound>
  <compound kind="file">
    <name>noisy_tsp.py</name>
    <path>examples/</path>
    <filename>noisy__tsp_8py.html</filename>
    <class kind="class">examples::noisy_tsp::TSP</class>
    <namespace>examples</namespace>
    <namespace>examples::noisy_tsp</namespace>
  </compound>
  <compound kind="file">
    <name>powerplant.py</name>
    <path>examples/</path>
    <filename>powerplant_8py.html</filename>
    <class kind="class">examples::powerplant::PowerPlant</class>
    <namespace>examples</namespace>
    <namespace>examples::powerplant</namespace>
  </compound>
  <compound kind="file">
    <name>prophet_opt.py</name>
    <path>examples/</path>
    <filename>prophet__opt_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::prophet_opt</namespace>
  </compound>
  <compound kind="file">
    <name>quant.py</name>
    <path>examples/</path>
    <filename>quant_8py.html</filename>
    <class kind="class">examples::quant::Fitness</class>
    <namespace>examples</namespace>
    <namespace>examples::quant</namespace>
  </compound>
  <compound kind="file">
    <name>reproblem.py</name>
    <path>examples/</path>
    <filename>reproblem_8py.html</filename>
    <class kind="class">examples::reproblem::re_problem</class>
    <namespace>examples</namespace>
    <namespace>examples::reproblem</namespace>
  </compound>
  <compound kind="file">
    <name>repython.py</name>
    <path>examples/</path>
    <filename>repython_8py.html</filename>
    <class kind="class">examples::repython::RE1</class>
    <class kind="class">examples::repython::RE2</class>
    <class kind="class">examples::repython::RE3</class>
    <class kind="class">examples::repython::RE4</class>
    <class kind="class">examples::repython::RE5</class>
    <class kind="class">examples::repython::RE6</class>
    <class kind="class">examples::repython::RE7</class>
    <class kind="class">examples::repython::RE1_pymoo</class>
    <class kind="class">examples::repython::RE4_pymoo</class>
    <class kind="class">examples::repython::RE5_pymoo</class>
    <class kind="class">examples::repython::RE6_pymoo</class>
    <namespace>examples</namespace>
    <namespace>examples::repython</namespace>
  </compound>
  <compound kind="file">
    <name>robot.py</name>
    <path>examples/</path>
    <filename>robot_8py.html</filename>
    <class kind="class">examples::robot::guiWorld</class>
    <class kind="class">examples::robot::b2WorldInterface</class>
    <class kind="class">examples::robot::end_effector</class>
    <class kind="class">examples::robot::PushReward</class>
    <namespace>examples</namespace>
    <namespace>examples::robot</namespace>
  </compound>
  <compound kind="file">
    <name>routing.py</name>
    <path>examples/</path>
    <filename>routing_8py.html</filename>
    <class kind="class">examples::routing::Routing</class>
    <namespace>examples</namespace>
    <namespace>examples::routing</namespace>
  </compound>
  <compound kind="file">
    <name>rover.py</name>
    <path>examples/</path>
    <filename>rover_8py.html</filename>
    <class kind="class">examples::rover::Trajectory</class>
    <class kind="class">examples::rover::PointBSpline</class>
    <class kind="class">examples::rover::RoverDomain</class>
    <class kind="class">examples::rover::AABoxes</class>
    <class kind="class">examples::rover::NegGeom</class>
    <class kind="class">examples::rover::UnionGeom</class>
    <class kind="class">examples::rover::ConstObstacleCost</class>
    <class kind="class">examples::rover::ConstCost</class>
    <class kind="class">examples::rover::AdditiveCosts</class>
    <class kind="class">examples::rover::GMCost</class>
    <class kind="class">examples::rover::NormalizedInputFn</class>
    <class kind="class">examples::rover::ConstantOffsetFn</class>
    <namespace>examples</namespace>
    <namespace>examples::rover</namespace>
  </compound>
  <compound kind="file">
    <name>scheduling.py</name>
    <path>examples/</path>
    <filename>scheduling_8py.html</filename>
    <class kind="class">examples::scheduling::fitness</class>
    <namespace>examples</namespace>
    <namespace>examples::scheduling</namespace>
  </compound>
  <compound kind="file">
    <name>siemens.py</name>
    <path>examples/</path>
    <filename>siemens_8py.html</filename>
    <class kind="class">examples::siemens::Machine</class>
    <class kind="class">examples::siemens::Buffer</class>
    <class kind="class">examples::siemens::Plant</class>
    <namespace>examples</namespace>
    <namespace>examples::siemens</namespace>
  </compound>
  <compound kind="file">
    <name>solo_mgar.py</name>
    <path>examples/</path>
    <filename>solo__mgar_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::solo_mgar</namespace>
  </compound>
  <compound kind="file">
    <name>solo_mgar_udp.py</name>
    <path>examples/</path>
    <filename>solo__mgar__udp_8py.html</filename>
    <class kind="class">examples::solo_mgar_udp::solo_mgar_udp</class>
    <namespace>examples</namespace>
    <namespace>examples::solo_mgar_udp</namespace>
  </compound>
  <compound kind="file">
    <name>spring.py</name>
    <path>examples/</path>
    <filename>spring_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::spring</namespace>
  </compound>
  <compound kind="file">
    <name>subset.py</name>
    <path>examples/</path>
    <filename>subset_8py.html</filename>
    <class kind="class">examples::subset::transaction_value</class>
    <class kind="class">examples::subset::fitness</class>
    <namespace>examples</namespace>
    <namespace>examples::subset</namespace>
  </compound>
  <compound kind="file">
    <name>subset_mo.py</name>
    <path>examples/</path>
    <filename>subset__mo_8py.html</filename>
    <class kind="class">examples::subset_mo::transaction_value</class>
    <class kind="class">examples::subset_mo::fitness</class>
    <namespace>examples</namespace>
    <namespace>examples::subset_mo</namespace>
  </compound>
  <compound kind="file">
    <name>tandem_minlp.py</name>
    <path>examples/</path>
    <filename>tandem__minlp_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::tandem_minlp</namespace>
  </compound>
  <compound kind="file">
    <name>tdesign.py</name>
    <path>examples/</path>
    <filename>tdesign_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::tdesign</namespace>
  </compound>
  <compound kind="file">
    <name>top_trumps.py</name>
    <path>examples/</path>
    <filename>top__trumps_8py.html</filename>
    <class kind="class">examples::top_trumps::tt_problem</class>
    <namespace>examples</namespace>
    <namespace>examples::top_trumps</namespace>
  </compound>
  <compound kind="file">
    <name>trappist_delivery.py</name>
    <path>examples/</path>
    <filename>trappist__delivery_8py.html</filename>
    <class kind="class">examples::trappist_delivery::trappist_schedule</class>
    <class kind="class">examples::trappist_delivery::fitness</class>
    <namespace>examples</namespace>
    <namespace>examples::trappist_delivery</namespace>
  </compound>
  <compound kind="file">
    <name>tutorial.py</name>
    <path>examples/</path>
    <filename>tutorial_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::tutorial</namespace>
  </compound>
  <compound kind="file">
    <name>vaccination.py</name>
    <path>examples/</path>
    <filename>vaccination_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::vaccination</namespace>
  </compound>
  <compound kind="file">
    <name>vessel.py</name>
    <path>examples/</path>
    <filename>vessel_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::vessel</namespace>
  </compound>
  <compound kind="file">
    <name>vilar.py</name>
    <path>examples/</path>
    <filename>vilar_8py.html</filename>
    <class kind="class">examples::vilar::VilarOscillator</class>
    <namespace>examples</namespace>
    <namespace>examples::vilar</namespace>
  </compound>
  <compound kind="file">
    <name>vrptw.py</name>
    <path>examples/vrptw/</path>
    <filename>vrptw_8py.html</filename>
    <class kind="class">vrptw::VRPTW</class>
    <namespace>vrptw</namespace>
  </compound>
  <compound kind="file">
    <name>yahpo.py</name>
    <path>examples/</path>
    <filename>yahpo_8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::yahpo</namespace>
  </compound>
  <compound kind="file">
    <name>__init__.py</name>
    <path>examples/</path>
    <filename>examples_2____init_____8py.html</filename>
    <namespace>examples</namespace>
  </compound>
  <compound kind="file">
    <name>__init__.py</name>
    <path>examples/kepler/</path>
    <filename>examples_2kepler_2____init_____8py.html</filename>
    <namespace>examples</namespace>
    <namespace>examples::kepler</namespace>
  </compound>
  <compound kind="file">
    <name>__init__.py</name>
    <path>fcmaes/</path>
    <filename>fcmaes_2____init_____8py.html</filename>
    <namespace>fcmaes</namespace>
  </compound>
  <compound kind="file">
    <name>advretry.py</name>
    <path>fcmaes/</path>
    <filename>advretry_8py.html</filename>
    <class kind="class">fcmaes::advretry::Store</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::advretry</namespace>
  </compound>
  <compound kind="file">
    <name>astro.py</name>
    <path>fcmaes/</path>
    <filename>astro_8py.html</filename>
    <class kind="class">fcmaes::astro::Astrofun</class>
    <class kind="class">fcmaes::astro::MessFull</class>
    <class kind="class">fcmaes::astro::Messenger</class>
    <class kind="class">fcmaes::astro::Gtoc1</class>
    <class kind="class">fcmaes::astro::Cassini1</class>
    <class kind="class">fcmaes::astro::Cassini2</class>
    <class kind="class">fcmaes::astro::Rosetta</class>
    <class kind="class">fcmaes::astro::Sagas</class>
    <class kind="class">fcmaes::astro::Tandem</class>
    <class kind="class">fcmaes::astro::Tandem_minlp</class>
    <class kind="class">fcmaes::astro::Cassini1multi</class>
    <class kind="class">fcmaes::astro::Cassini1minlp</class>
    <class kind="class">fcmaes::astro::python_fun</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::astro</namespace>
  </compound>
  <compound kind="file">
    <name>bitecpp.py</name>
    <path>fcmaes/</path>
    <filename>bitecpp_8py.html</filename>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::bitecpp</namespace>
  </compound>
  <compound kind="file">
    <name>cmaes.py</name>
    <path>fcmaes/</path>
    <filename>cmaes_8py.html</filename>
    <class kind="class">fcmaes::cmaes::Cmaes</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::cmaes</namespace>
  </compound>
  <compound kind="file">
    <name>cmaescpp.py</name>
    <path>fcmaes/</path>
    <filename>cmaescpp_8py.html</filename>
    <class kind="class">fcmaes::cmaescpp::ACMA_C</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::cmaescpp</namespace>
  </compound>
  <compound kind="file">
    <name>crfmnes.py</name>
    <path>fcmaes/</path>
    <filename>crfmnes_8py.html</filename>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::crfmnes</namespace>
  </compound>
  <compound kind="file">
    <name>crfmnescpp.py</name>
    <path>fcmaes/</path>
    <filename>crfmnescpp_8py.html</filename>
    <class kind="class">fcmaes::crfmnescpp::CRFMNES_C</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::crfmnescpp</namespace>
  </compound>
  <compound kind="file">
    <name>dacpp.py</name>
    <path>fcmaes/</path>
    <filename>dacpp_8py.html</filename>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::dacpp</namespace>
  </compound>
  <compound kind="file">
    <name>de.py</name>
    <path>fcmaes/</path>
    <filename>de_8py.html</filename>
    <class kind="class">fcmaes::de::DE</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::de</namespace>
  </compound>
  <compound kind="file">
    <name>decpp.py</name>
    <path>fcmaes/</path>
    <filename>decpp_8py.html</filename>
    <class kind="class">fcmaes::decpp::DE_C</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::decpp</namespace>
  </compound>
  <compound kind="file">
    <name>diversifier.py</name>
    <path>fcmaes/</path>
    <filename>diversifier_8py.html</filename>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::diversifier</namespace>
  </compound>
  <compound kind="file">
    <name>evaluator.py</name>
    <path>fcmaes/</path>
    <filename>evaluator_8py.html</filename>
    <class kind="class">fcmaes::evaluator::Evaluator</class>
    <class kind="class">fcmaes::evaluator::_fitness</class>
    <class kind="class">fcmaes::evaluator::parallel</class>
    <class kind="class">fcmaes::evaluator::parallel_mo</class>
    <class kind="class">fcmaes::evaluator::callback</class>
    <class kind="class">fcmaes::evaluator::callback_so</class>
    <class kind="class">fcmaes::evaluator::callback_mo</class>
    <class kind="class">fcmaes::evaluator::callback_par</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::evaluator</namespace>
  </compound>
  <compound kind="file">
    <name>journal.py</name>
    <path>fcmaes/</path>
    <filename>journal_8py.html</filename>
    <class kind="class">fcmaes::journal::Base_message</class>
    <class kind="class">fcmaes::journal::Study_start</class>
    <class kind="class">fcmaes::journal::Trial_start</class>
    <class kind="class">fcmaes::journal::Trial_param</class>
    <class kind="class">fcmaes::journal::Trial_value</class>
    <class kind="class">fcmaes::journal::Journal</class>
    <class kind="class">fcmaes::journal::journal_wrapper</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::journal</namespace>
  </compound>
  <compound kind="file">
    <name>mapelites.py</name>
    <path>fcmaes/</path>
    <filename>mapelites_8py.html</filename>
    <class kind="class">fcmaes::mapelites::Archive</class>
    <class kind="class">fcmaes::mapelites::wrapper</class>
    <class kind="class">fcmaes::mapelites::in_niche_filter</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::mapelites</namespace>
  </compound>
  <compound kind="file">
    <name>mode.py</name>
    <path>fcmaes/</path>
    <filename>mode_8py.html</filename>
    <class kind="class">fcmaes::mode::store</class>
    <class kind="class">fcmaes::mode::MODE</class>
    <class kind="class">fcmaes::mode::wrapper</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::mode</namespace>
  </compound>
  <compound kind="file">
    <name>modecpp.py</name>
    <path>fcmaes/</path>
    <filename>modecpp_8py.html</filename>
    <class kind="class">fcmaes::modecpp::MODE_C</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::modecpp</namespace>
  </compound>
  <compound kind="file">
    <name>moretry.py</name>
    <path>fcmaes/</path>
    <filename>moretry_8py.html</filename>
    <class kind="class">fcmaes::moretry::mo_wrapper</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::moretry</namespace>
  </compound>
  <compound kind="file">
    <name>multiretry.py</name>
    <path>fcmaes/</path>
    <filename>multiretry_8py.html</filename>
    <class kind="class">fcmaes::multiretry::problem_stats</class>
    <class kind="class">fcmaes::multiretry::multiretry</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::multiretry</namespace>
  </compound>
  <compound kind="file">
    <name>optimizer.py</name>
    <path>fcmaes/</path>
    <filename>optimizer_8py.html</filename>
    <class kind="class">fcmaes::optimizer::wrapper</class>
    <class kind="class">fcmaes::optimizer::Optimizer</class>
    <class kind="class">fcmaes::optimizer::Sequence</class>
    <class kind="class">fcmaes::optimizer::Choice</class>
    <class kind="class">fcmaes::optimizer::Crfmnes</class>
    <class kind="class">fcmaes::optimizer::Crfmnes_cpp</class>
    <class kind="class">fcmaes::optimizer::Pgpe_cpp</class>
    <class kind="class">fcmaes::optimizer::Cma_python</class>
    <class kind="class">fcmaes::optimizer::Cma_cpp</class>
    <class kind="class">fcmaes::optimizer::Cma_orig</class>
    <class kind="class">fcmaes::optimizer::Cma_lw</class>
    <class kind="class">fcmaes::optimizer::Cma_awm</class>
    <class kind="class">fcmaes::optimizer::Cma_sep</class>
    <class kind="class">fcmaes::optimizer::De_cpp</class>
    <class kind="class">fcmaes::optimizer::De_python</class>
    <class kind="class">fcmaes::optimizer::Cma_ask_tell</class>
    <class kind="class">fcmaes::optimizer::De_ask_tell</class>
    <class kind="class">fcmaes::optimizer::random_search</class>
    <class kind="class">fcmaes::optimizer::Da_cpp</class>
    <class kind="class">fcmaes::optimizer::Bite_cpp</class>
    <class kind="class">fcmaes::optimizer::Dual_annealing</class>
    <class kind="class">fcmaes::optimizer::Differential_evolution</class>
    <class kind="class">fcmaes::optimizer::CheckBounds</class>
    <class kind="class">fcmaes::optimizer::Basin_hopping</class>
    <class kind="class">fcmaes::optimizer::Minimize</class>
    <class kind="class">fcmaes::optimizer::Shgo</class>
    <class kind="class">fcmaes::optimizer::single_objective</class>
    <class kind="class">fcmaes::optimizer::NLopt</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>pgpecpp.py</name>
    <path>fcmaes/</path>
    <filename>pgpecpp_8py.html</filename>
    <class kind="class">fcmaes::pgpecpp::PGPE_C</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::pgpecpp</namespace>
  </compound>
  <compound kind="file">
    <name>pygmoretry.py</name>
    <path>fcmaes/</path>
    <filename>pygmoretry_8py.html</filename>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::pygmoretry</namespace>
  </compound>
  <compound kind="file">
    <name>retry.py</name>
    <path>fcmaes/</path>
    <filename>retry_8py.html</filename>
    <class kind="class">fcmaes::retry::Shared2d</class>
    <class kind="class">fcmaes::retry::Store</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::retry</namespace>
  </compound>
  <compound kind="file">
    <name>test_cma.py</name>
    <path>fcmaes/</path>
    <filename>test__cma_8py.html</filename>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::test_cma</namespace>
  </compound>
  <compound kind="file">
    <name>testfun.py</name>
    <path>fcmaes/</path>
    <filename>testfun_8py.html</filename>
    <class kind="class">fcmaes::testfun::Wrapper</class>
    <class kind="class">fcmaes::testfun::Rosen</class>
    <class kind="class">fcmaes::testfun::Elli</class>
    <class kind="class">fcmaes::testfun::Cigar</class>
    <class kind="class">fcmaes::testfun::Sphere</class>
    <class kind="class">fcmaes::testfun::Rastrigin</class>
    <class kind="class">fcmaes::testfun::Eggholder</class>
    <class kind="class">fcmaes::testfun::RastriginMean</class>
    <class kind="class">fcmaes::testfun::_testfun</class>
    <namespace>fcmaes</namespace>
    <namespace>fcmaes::testfun</namespace>
  </compound>
  <compound kind="class">
    <name>fcmaes::evaluator::_fitness</name>
    <filename>classfcmaes_1_1evaluator_1_1__fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>adff76348882223d9268c6768e5115ebe</anchor>
      <arglist>(self, fun, lower, upper, normalize=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>values</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>aa36396c7701eed3f5d8e84a14a111104</anchor>
      <arglist>(self, Xs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>closestFeasible</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>a763742cf075aeb82ff147ef85a40c7a0</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>encode</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>a80ef3b0f3b67f83f4b72bce0f35b28b6</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>decode</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>a0461d372942bcc1d8a5a92bca09aace8</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>af7c0600358aeaeefc43be1935db00c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>evaluation_counter</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>a12e30e84b93a7ecd593b0358d92d8a0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lower</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>a87bb609b86427fcd5228e0ab0b175ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>normalize</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>a332f053ac10729fa524170bb51362b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>upper</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>ab1b189d5d30d98b40ca9a05798b591f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>scale</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>a81d7f4f260b083112c1c7c06c28f1fa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>typx</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1__fitness.html</anchorfile>
      <anchor>a96f3612f153e1efc5b985b8c9b104e11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::testfun::_testfun</name>
    <filename>classfcmaes_1_1testfun_1_1__testfun.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1testfun_1_1__testfun.html</anchorfile>
      <anchor>ad0c92fbf3c99b9c97e09f54c7e89b98d</anchor>
      <arglist>(self, name, fun, lower, upper)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classfcmaes_1_1testfun_1_1__testfun.html</anchorfile>
      <anchor>ac5931d6aca99cc0486eedf5497e23865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1testfun_1_1__testfun.html</anchorfile>
      <anchor>a532e7ace39cc2314a98eab033e9b98d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classfcmaes_1_1testfun_1_1__testfun.html</anchorfile>
      <anchor>a7f4c8475b3ecf6bd9583ffd472824782</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>wrapper</name>
      <anchorfile>classfcmaes_1_1testfun_1_1__testfun.html</anchorfile>
      <anchor>a6b71269a55be7005a6e1af93c1eeeb0d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::AABoxes</name>
    <filename>classexamples_1_1rover_1_1_a_a_boxes.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_a_a_boxes.html</anchorfile>
      <anchor>ad695e0e2f2d7c6ca6ee43ecc855e8750</anchor>
      <arglist>(self, lows, highs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>contains</name>
      <anchorfile>classexamples_1_1rover_1_1_a_a_boxes.html</anchorfile>
      <anchor>a2012bc9418f0d3933f3ab1192d628030</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>l</name>
      <anchorfile>classexamples_1_1rover_1_1_a_a_boxes.html</anchorfile>
      <anchor>a5b70cbc46fc996f00fe537b5a176ecbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>h</name>
      <anchorfile>classexamples_1_1rover_1_1_a_a_boxes.html</anchorfile>
      <anchor>a59102d167090b13d2e63914a09916c3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::cmaescpp::ACMA_C</name>
    <filename>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</anchorfile>
      <anchor>a30b1141e99acc21b94e2366bad21dc78</anchor>
      <arglist>(self, dim, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.3, Optional[int] popsize=31, Optional[int] max_evaluations=100000, Optional[float] accuracy=1.0, Optional[float] stop_fitness=-np.inf, Optional[float] stop_hist=-1, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=True, Optional[bool] delayed_update=True, Optional[int] update_gap=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__del__</name>
      <anchorfile>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</anchorfile>
      <anchor>ae55112db9f934ddf1d3d01a09b812adb</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.array</type>
      <name>ask</name>
      <anchorfile>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</anchorfile>
      <anchor>ad7ca82faa65b471b66977e2f18676025</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell</name>
      <anchorfile>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</anchorfile>
      <anchor>a4677822852841d0e52baa48fa91cbcb8</anchor>
      <arglist>(self, np.ndarray ys, Optional[np.ndarray] xs=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tell_x_</name>
      <anchorfile>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</anchorfile>
      <anchor>a344851d94557ce52f99da907ee61590d</anchor>
      <arglist>(self, np.ndarray ys, np.ndarray xs)</arglist>
    </member>
    <member kind="function">
      <type>np.array</type>
      <name>population</name>
      <anchorfile>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</anchorfile>
      <anchor>a348ca090a0116efc16fce6a4bd180871</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>result</name>
      <anchorfile>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</anchorfile>
      <anchor>aaf2e40c524b9a8b328decb0b798bd695</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ptr</name>
      <anchorfile>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</anchorfile>
      <anchor>a8398ead8fd8f0556d524477a60a8c76c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</anchorfile>
      <anchor>a5eb8c3128844a551ffed31779aa12193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c.html</anchorfile>
      <anchor>ace85988c36f223610752fe5c5bbfbeef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>acmaes::AcmaesOptimizer</name>
    <filename>classacmaes_1_1_acmaes_optimizer.html</filename>
    <member kind="function">
      <type></type>
      <name>AcmaesOptimizer</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a1a141c42370061770c70d35a2e72e22f</anchor>
      <arglist>(long runid_, Fitness *fitfun_, int popsize_, int mu_, const vec &amp;guess_, const vec &amp;inputSigma_, int maxEvaluations_, double accuracy_, double stopfitness_, double stopTolHistFun_, int update_gap_, long seed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AcmaesOptimizer</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ad1c4b82ea7f71d9d61f45fc4978cc734</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateEvolutionPaths</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ae9f3415b9bcc43366193e7d4b0beda87</anchor>
      <arglist>(const vec &amp;zmean, const vec &amp;xold)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>updateCovariance</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a911e67d9e8445b3a8be575f184341b8e</anchor>
      <arglist>(bool hsig, const mat &amp;bestArx, const mat &amp;arz, const ivec &amp;arindex, const mat &amp;xold)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBD</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a6e1292651cf19abf87f9ece1aa9c92d7</anchor>
      <arglist>(double negccov)</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>ask_all</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ae6ef63f98f9b5b9034438301df2ca323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell_all</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ad73e4ffab0c5d511107d58491540de24</anchor>
      <arglist>(mat ys, mat xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell_all_asked</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>aaabb9e299b54d36fc3244bfc05184e27</anchor>
      <arglist>(mat ys, mat xs)</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>getPopulation</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a7e8a9548f7c49fb789b98f6570d5ea7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>ask</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a76117dfd997b8f098304f5d4f0fbf52e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ac1703b5f2c650cf8da235ea475e17d6f</anchor>
      <arglist>(double y, const vec &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateCMA</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a36c0bd51d20f3c63e8cadf76421fc5d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>doOptimize</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a6ffd7f760692210629187fea1b98007c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>do_optimize_delayed_update</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ab3af1e3acb2561d4b0be23b402b232a9</anchor>
      <arglist>(int workers)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>getBestX</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ae23d2ccb359090f4e5c2c162b7d6a4bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBestValue</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a0d762f718e82fecd480762662f480e1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIterations</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a60785f3698538af538a606d1eea6c908</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStop</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a1b182abe1e3428733780dc6fe0b669e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Fitness *</type>
      <name>getFitfun</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a8f2c15cc704f0ce15f6cc875522e2d5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDim</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ae9ccb84da924f3a0df38032ac09298a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPopsize</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a224ece6966b6635c9912673e06457697</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Fitness *</type>
      <name>getFitfunPar</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>aba0ace56e07ab7c89e6f380a168f88a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>mat</type>
      <name>popX</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a6d351621f77f58b69bdaedbd3f12c5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>runid</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a755e250be4d7f61b3d813a4f13a25282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Fitness *</type>
      <name>fitfun</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a94047d045c240637d027ceb4ef111a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>guess</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a73710e1f7b550eb765980f6d8205acd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>accuracy</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>af49bb3ec0e42ef7f4cbfe3934abc026a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>popsize</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>abc8fbb4d336cd6525618902f212e9071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>inputSigma</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>aa64448926972de66e258f3eae95993d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a29e0940b9fe073e2cf0879010ddd619a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>maxEvaluations</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a64b1dc96aadfd73ac75ac18f602a4be5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stopfitness</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a8257d791e3d09fefa27942e2842a02f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stopTolUpX</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>acd6aa48f968c88bbf105a05bc2b66112</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stopTolX</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a676d55f32118eeb0bdf0546721f9ae23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stopTolFun</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a14dd207015f4c247ca4a80c683a8b0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stopTolHistFun</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a93f72fbef497480928c9e7b04123e930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mu</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a9fba5c1ce916fdda28b4e9af75ef693f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>weights</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a535998e869d050bac252c34d8b570b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mueff</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a12077354f7b80409fe6506c29b4f9d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>sigma</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a9290a3cb7cec20b03d78ccc1b53a06dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>cc</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>adda41c9a7372cec6cbe9277c09117829</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>cs</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ab72d93c09c86ab626df76157673b5d57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>damps</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a42ca377b32c9aba2a082b73203c7dddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ccov1</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a8a406c0b2eac5e1e7c775e6951858172</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ccovmu</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ad5f6392eb25c1d4afeeab490c8d1556f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>chiN</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a6bff526b6be45c84a7196b26f9c10375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ccov1Sep</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ab663ec0cbe33131f3d5c9b5f30236b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ccovmuSep</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ac2566f3a92b546f094a7bb8ec5d87de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>lazy_update_gap</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a56b024cd6dc9dfcc03b282918f905d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>xmean</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a7824c6afa9a2633c7e24d71db2f52787</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>pc</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a3b2ec952c9c29e2c8fe353a7eb7b3a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>ps</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a941f1cfcd98230d2022fb506e62b96df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>normps</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>adffd8b681b2402481801e0cc34b9d6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>B</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a326b26c7190938716b46310b7985fb1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>BD</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a28b375f6c8c9333a8d11169a4b4bbf51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>diagD</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a822048c321fe48fe4615a8fcb92e31a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>C</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>aff3401adacb15732828daef99c6d7dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>diagC</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>af0d9962901e706966ac55076a9123de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>arz</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a29fdebcd5e9fe0daa7d3ab4b6b4eaf66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>arx</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a54b9d653087f054270a377aeafa63e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>fitness</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ae72ada0035312e1bb1edf6ad35204f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a2c9bbb5f803acf531a67986025d0e913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>last_update</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>ad2efb063f4c0954c1870313b98667bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>fitnessHistory</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a4f8eb45ad2bbe6ee494dc655173f2f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>historySize</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a51907ba6ceea0937ac45997d424ca5ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>bestValue</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a13682ca7e26ba1755a7a7b09d446ac8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>bestX</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>acfda423e0a6771582cf79f67f0e66954</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>stop</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a1529659459b814102415217b9ce822c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>told</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>afeb20b9c89d465d55e43c1da48beba53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pcg64 *</type>
      <name>rs</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a6484fd82e910d1481f21c2c85a267f56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>computeArz</name>
      <anchorfile>classacmaes_1_1_acmaes_optimizer.html</anchorfile>
      <anchor>a822ff0e80ba2c337ea65b4b361d7b332</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pgpe::ADAM</name>
    <filename>classpgpe_1_1_a_d_a_m.html</filename>
    <member kind="function">
      <type></type>
      <name>ADAM</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>adb338e468abbeabd2afd13d4d676b205</anchor>
      <arglist>(const vec &amp;x0, double b1_, double b2_, double eps_, double center_learning_rate_, double decay_coef_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>a6023c4206a0929ea3b8f907d09081af1</anchor>
      <arglist>(int i, const vec &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>step_size</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>a5163c2770a4139ef247533d7bbc5b6bd</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="variable">
      <type>vec</type>
      <name>x</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>a3b4e72135dc0972d32514ed425e5d99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec</type>
      <name>m</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>a243d6d68987be6644a9400244b703048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec</type>
      <name>v</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>a8fc34e0601078a82ef0eb39e34e8f51c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>ab1dabf7b11ff4ec09887c0b8302f0cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>b1</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>aee860b74521dcd15311ee6e54f2e8fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>b2</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>a97e4b262f9cfd583e804d2deedba2ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>eps</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>ad376ca8662b4f5b5de1311fff5bce942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>center_lr</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>a0527e5f61c8d4babb53e3f8f369e3ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>decay_coef</name>
      <anchorfile>classpgpe_1_1_a_d_a_m.html</anchorfile>
      <anchor>a3e4eaddab15e62725c5c6f11dec59b8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::AdditiveCosts</name>
    <filename>classexamples_1_1rover_1_1_additive_costs.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_additive_costs.html</anchorfile>
      <anchor>ad65a50860578a382e6f70a04471a5ae3</anchor>
      <arglist>(self, fns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1rover_1_1_additive_costs.html</anchorfile>
      <anchor>ad884197dcbacaed61fd3d430a80b698d</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fns</name>
      <anchorfile>classexamples_1_1rover_1_1_additive_costs.html</anchorfile>
      <anchor>a5e325bd66cf439a73d3d90616f266a42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>anpcp::ANPCP</name>
    <filename>classanpcp_1_1_a_n_p_c_p.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>aeebe77132f494b774eba4273ad3be49e</anchor>
      <arglist>(self, p, alpha)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>init_json</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>a9c595cb6e1239841522bd6317d374aee</anchor>
      <arglist>(self, json_file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>init_tsp</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>a168520639bb6a296a24f7f11226a233a</anchor>
      <arglist>(self, tsp_file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>random_x</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>a27cdaec6181e9866758aaf02adcd2943</anchor>
      <arglist>(self, seed=123)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_selection</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>a98d874863228ee290ddd16d9063cc2b2</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>a36e56d4bbe8efd193c8f57419b2eeb87</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>p</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>a57104cbb130606227a207d9591ad2f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>alpha</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>ac63cb4563071220aaa37c5d13abc07c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>ae8c1d88d0800b842d51da0b9f756d7d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>facilities</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>a47e51305ef2432d9307c4d637cc64022</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>users</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>a1cebe6ad05d38bba15a5e292faabe913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>distance</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>af7aa4956b4756967dcad6dd9090c8dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fnum</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>a635a7c63b9307c9d8459998899dafe78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>unum</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>ae394c2bbfe5ed510784d96994ab1099c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classanpcp_1_1_a_n_p_c_p.html</anchorfile>
      <anchor>a379e8b5b8533d857a0fe348aade6d67a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>anpcpc::ANPCPC</name>
    <filename>classanpcpc_1_1_a_n_p_c_p_c.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>aabecc1aef0611cd232b2ed831264bdd8</anchor>
      <arglist>(self, p, alpha)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>init_json</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>a46599d8abb6d8e679b83469e854e287c</anchor>
      <arglist>(self, json_file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>init_tsp</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>a80f22fbf486b618f3a7ecd63c61a4649</anchor>
      <arglist>(self, tsp_file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>random_x</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>ac4f58722e70806a92094828b839f084e</anchor>
      <arglist>(self, seed=123)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_facilities</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>a87fc9a0c27deed3382ad48e45e11b999</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>a1a9e91f15724d47e3ca531214abb18db</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>p</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>aef8e71bd3ee7596a9c020743c950f823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>alpha</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>a56b43f80f56c4fe551c9898e9a9d3243</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>aa104bc2fd75be43481e876db7cf03743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>users</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>a582ef32ec223eef096fffb6b01f35f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>facilities</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>a67f7c175f43adf6eb0cc5edbecb651f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>unum</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>a2aa59723704620f5b355784f07170ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>a305e5bb644df3f478d65806ed9dc1fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fnum</name>
      <anchorfile>classanpcpc_1_1_a_n_p_c_p_c.html</anchorfile>
      <anchor>a68074d4d23b40c4fe5a825c4747ea9c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::mapelites::Archive</name>
    <filename>classfcmaes_1_1mapelites_1_1_archive.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ae996ab317d60b697d3c339df9335a60f</anchor>
      <arglist>(self, int dim, Bounds qd_bounds, int capacity, Optional[str] name=&quot;&quot;, use_stats=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reset</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>adae25149d74e878d190a51a3075af9bc</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>init_niches</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ac93d7c0f2200637a996a7b2802ff2e4b</anchor>
      <arglist>(self, int samples_per_niche=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_occupied_data</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ad4060a6948b61fe981b124afc8c12ba4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>join</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a7374d1c9c1cc25dbe1e472f9a01360da</anchor>
      <arglist>(self, Archive archive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fname</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a57b4373d065065bf5d4dbc7cc312c092</anchor>
      <arglist>(self, name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>save</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>aedbfd9567b2d8da13a94da232465aa42</anchor>
      <arglist>(self, str name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>load</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a62da9c6f511c298d1ef06d6af7600196</anchor>
      <arglist>(self, str name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>index_of_niches</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ab4f4023cb427da5cbedcf919c4641bfa</anchor>
      <arglist>(self, ds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>in_niche_filter</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ac73f5b05c273a6238d1da2d70603b2af</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fit, int index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a82cd0403d58fbb41ef29c2cfb6ac74f7</anchor>
      <arglist>(self, int i, np.ndarray yd, np.ndarray x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>update_stats</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a9aaaf43220a388cc81d0750b7849dbdc</anchor>
      <arglist>(self, int i, np.ndarray x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_occupied</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a7d6497547e738f46792eed929c0eb09c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_count</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>af0512120043e652b080fc57f7f9bc34e</anchor>
      <arglist>(self, int i)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_counts</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>abfbc79753a308a9880da632d96b37d5c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_x_mean</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a240c31cf1f2a4a8f2fe6bef3ece80206</anchor>
      <arglist>(self, int i)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_x_stdev</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a12befeeecf65003f61a073520070a4d7</anchor>
      <arglist>(self, int i)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_x_min</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a864352039c770d3095a4c68c67c07cc6</anchor>
      <arglist>(self, int i)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_x_max</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ae14fb3f28ebc29cc2356048a91d8e072</anchor>
      <arglist>(self, int i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>create_views</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a3976d13396ea59523d79e16b7d96f448</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>encode_d</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a4c0b220309e8100c4a104b29b9ca4898</anchor>
      <arglist>(self, d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>decode_d</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ae916520d6c7090a4aebb511b782f003c</anchor>
      <arglist>(self, d)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_xs</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a052f1f8d58ffc784ec8ee16aca535a14</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_ds</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>af91d2fd25aee22c7bcc46b2c5cad0092</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_y</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ac9390a3bfd798bdb09d79476ed6c6584</anchor>
      <arglist>(self, int i)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_ys</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a91c9f1ac5485896833fc7b9859b85af1</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_qd_score</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a50c9e9bac3b339e4158614dad396bb18</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_y</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>afc25798d5b07a1addd68fc50cec1f3e5</anchor>
      <arglist>(self, int i, float y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_ys</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a06c36a088a4f1f50b63e7d0cdf1dcc40</anchor>
      <arglist>(self, ArrayLike ys)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_c</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ad3c852a54d31d2126b5f233e7d2fd7bb</anchor>
      <arglist>(self, int i)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_cs</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a9884e6696809729e69a167c91d245464</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_cs_decoded</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>abf4f2d32b118fa044a6eb99d9b508c1f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_c</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>acb89d9fdd7c875d487477a461c3585f7</anchor>
      <arglist>(self, int i, float c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_cs</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a7b98c28bd774c39099d0e41b1c38459d</anchor>
      <arglist>(self, ArrayLike cs)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_stat</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a4a9c0d92560064a154b7bbcf1d537480</anchor>
      <arglist>(self, int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_stats</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a97f1345584f4d25bd8a24af6cb7d7e4c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_stat</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a574aed6e61fc20fb94b479cb8fd5fc55</anchor>
      <arglist>(self, int i, int j, ArrayLike stat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_stats</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a0e469ed5be63b9dd87ea220095b620b8</anchor>
      <arglist>(self, ArrayLike stats)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>random_xs</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a5721ccf23e8de4509bc3a9e996e1861a</anchor>
      <arglist>(self, int best_n, int chunk_size, Generator rg)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>random_xs_one</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a691e8315e1b9c8d92b67520216c72cdf</anchor>
      <arglist>(self, int best_n, Generator rg)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>argsort</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>abf0a5f4c90fb9600c527281e0e6b37bf</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>dump</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a0bcd8007cc5cf709da8ccc42aa2c46eb</anchor>
      <arglist>(self, Optional[int] n=None)</arglist>
    </member>
    <member kind="function">
      <type>str</type>
      <name>info</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a4299111d24891cea4a03c19f28360923</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type>(p+1) *self.dim]</type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ab255103df42bedc30ec7132cfc618122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>(i+1) *self.qd_dim]</type>
      <name>qd_dim</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a7321ff2715dbc2d3258e2e880d48ef43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>qd_bounds</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>aaf23b4a84332dd3988c05887f896bdb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>desc_lb</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>acef7919c3b7f9798628857f25de27d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>desc_scale</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ae3f63fce62db86da46ee146bf27293c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>capacity</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a543edcd72de56099d1f83c9dcd79e082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a41d911980a52f7f5c409af9b3a258124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cs</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a2421ccea4dec3cbb9bef589d1a3209f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lock</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>abbcf8dde9401f4b34d4669a064e12373</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use_stats</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a1d6bb3c3d671d59cd6c48cc30574652d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xs</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a55043a25e987ca5ad6f1cfaf22c835a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ds</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a60f70e50d917a1db752b0a0124a8e756</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ys</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>acb4c09718b6457bb5bfbb7f3773f7178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>counts</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a17848162fe39d036fbc93aa58cc77b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>occupied</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ab1c9fa575d5a8225ba10e8a40fd0d59b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stats</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ada2a26ca8d9683a969403f104a759c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cvt_clustering</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>ab750559fbd8fab712d01cf489c8d8cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>centers</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>aa7d0f9677d34b82ef42b01e551011a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>index_of_niches</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a6b4ef0e37ad2c67546dfbab83913c402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xs_view</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>a6cbf2375b7948682ad57e3ef3d2f1dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ds_view</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>aba20d5a20cc178e6aa4f14538b54334f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>np.ndarray</type>
      <name>si</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1_archive.html</anchorfile>
      <anchor>aa1482261105e35a39ca342dd76b15a18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Astrofun</name>
    <filename>classfcmaes_1_1astro_1_1_astrofun.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_astrofun.html</anchorfile>
      <anchor>a32e7dcf292ed5d1c20a02ae5c52f846b</anchor>
      <arglist>(self, name, fun_c, lower, upper)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classfcmaes_1_1astro_1_1_astrofun.html</anchorfile>
      <anchor>ab2194f7eab95e34d0592b5f77143549a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun_c</name>
      <anchorfile>classfcmaes_1_1astro_1_1_astrofun.html</anchorfile>
      <anchor>a5ce1bafb6bcb8c199b249bda95cc1f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classfcmaes_1_1astro_1_1_astrofun.html</anchorfile>
      <anchor>a7304b3306a33a7e8b5dc8780a8b18e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1astro_1_1_astrofun.html</anchorfile>
      <anchor>a09c240962ab5a0efcdc4bd91487fae2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::robot::b2WorldInterface</name>
    <filename>classexamples_1_1robot_1_1b2_world_interface.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>a7092d6fe5d6e4a96ed9f28dbb8cec53d</anchor>
      <arglist>(self, do_gui=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>initialize_gui</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>a6a5b5a5e68fd32c55812e70e80ebead7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stop_gui</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>a0f7a068ef4e840459a91d93f107a667b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add_bodies</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>a34cf4ae4836ed555b32a1486642ce275</anchor>
      <arglist>(self, new_bodies)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>step</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>ab0ef17ea8a92dd7d0d28f2defc51540c</anchor>
      <arglist>(self, show_display=True, idx=0)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>world</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>ac80a9c52b51a2e8ac79bd1cc846d9fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>do_gui</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>a0297622078dd63ff335b12d8e2f01e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>TARGET_FPS</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>a3068c28bda902f1197a0ad8518ac6520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>TIME_STEP</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>a3088f5f6eaed3eb11b77536cf4986d54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>VEL_ITERS</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>afc4889322670a65a8e3ea069ecd9d40e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>POS_ITERS</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>a9924b1e1dbbc852bd2e11ecb10b136d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>bodies</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>a70a4c4e2f6a76b4b0cf12bc0a2393d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>gui_world</name>
      <anchorfile>classexamples_1_1robot_1_1b2_world_interface.html</anchorfile>
      <anchor>a1e9b1f3344f161776e40174c1e7ee75d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::journal::Base_message</name>
    <filename>classfcmaes_1_1journal_1_1_base__message.html</filename>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Basin_hopping</name>
    <filename>classfcmaes_1_1optimizer_1_1_basin__hopping.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_basin__hopping.html</anchorfile>
      <anchor>adc078d65d34197f8aef544ebe27fde81</anchor>
      <arglist>(self, max_evaluations=50000, store=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_basin__hopping.html</anchorfile>
      <anchor>ab665db39cdee947aae4959f7d2f7b13c</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Bite_cpp</name>
    <filename>classfcmaes_1_1optimizer_1_1_bite__cpp.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_bite__cpp.html</anchorfile>
      <anchor>ae9c52b6c377c3ac1a7b235db2f307d74</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[int] M=None, Optional[int] popsize=None, Optional[int] stall_criterion=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_bite__cpp.html</anchorfile>
      <anchor>abbc94878a7c8ceda2ea3b65361a3e972</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_bite__cpp.html</anchorfile>
      <anchor>a900a36ee4e9e471f164fddc18f5af8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_bite__cpp.html</anchorfile>
      <anchor>ae2a0167e0a1282da6cbc91cef6528e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>M</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_bite__cpp.html</anchorfile>
      <anchor>a862c3e5d3d277ef587b91c91e022b760</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_bite__cpp.html</anchorfile>
      <anchor>a3c2b1016ec0c7132bd1aaf249a0606e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stall_criterion</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_bite__cpp.html</anchorfile>
      <anchor>ad30512cc226b83fb569ad1a46aa1e208</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>biteopt::BiteOptimizer</name>
    <filename>classbiteopt_1_1_bite_optimizer.html</filename>
    <base>CBiteOptDeep</base>
    <member kind="function">
      <type></type>
      <name>BiteOptimizer</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>ac0abad8d3fbb5e91bba5c49b59a60e8b</anchor>
      <arglist>(long runid_, Fitness *fitfun_, int dim_, double *init_, int seed_, int M_, int popsize, int stallCriterion_, int maxEvaluations_, double stopfitness_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BiteOptimizer</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a5774713fad3253b58a5b79f52586e072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMinValues</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a11148136b4a3eebd78d235eda7e3dff4</anchor>
      <arglist>(double *const p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMaxValues</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a8d1716460571a9aef6f8206715a5a71c</anchor>
      <arglist>(double *const p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>optcost</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a0244d5e664ac99fd264ebe908023ce0c</anchor>
      <arglist>(const double *const p)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>getBestX</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a311b608ce3c0eea69d66615f22448279</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBestValue</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>aa117da98db6b95c17836e1c0acb37d88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIterations</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a5ebdeb53261b8a3d0366f7dee30995e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStop</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>aa080b647a6dc4297f6be40f55e443dfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doOptimize</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a7f48d5b15bac207bebbc9492708fb3fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>runid</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>aaf39fcde875f4ba2aabf9b881a46dab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Fitness *</type>
      <name>fitfun</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a0ee80e7c3878dae82aef5f9a532281ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>M</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a388a1a6fb08111aa79aba41ac358ef96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>stallCriterion</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a710877c371d6154d8718ffadc82c220e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a8e4b9fbc66dcb68d7afbfbdc9897c180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>maxEvaluations</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a202fcfa155957a158f3a3916753448a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stopfitness</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a8e2a405cc4f23f9f34e15236ac072721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a96feed5acebf4945e27d50cbcd8ef36f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>bestY</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>ae9c0069b5b67d537814be3f7f83c0293</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>stop</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a9fdbe319b90b1f86175cd924c9700302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>bestX</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a2eb7f354f8bc1aa1e4f5a001d3ecdc38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pcg64 *</type>
      <name>rs</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a6635331036d8d48e550a1a6716bacf33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CBiteRnd</type>
      <name>rnd</name>
      <anchorfile>classbiteopt_1_1_bite_optimizer.html</anchorfile>
      <anchor>a4b393b354bee73e0c41973074118a1e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>blocking_queue</name>
    <filename>classblocking__queue.html</filename>
    <templarg>typename T</templarg>
    <member kind="function">
      <type></type>
      <name>blocking_queue</name>
      <anchorfile>classblocking__queue.html</anchorfile>
      <anchor>aa80c0526fd4282dbd3a537e050f45757</anchor>
      <arglist>(size_t capacity)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classblocking__queue.html</anchorfile>
      <anchor>a33cda0a4f4daedc90e64d9761e826575</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put</name>
      <anchorfile>classblocking__queue.html</anchorfile>
      <anchor>a092ad63d2f69ac2d669a91c21fb2eb37</anchor>
      <arglist>(const T &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>take</name>
      <anchorfile>classblocking__queue.html</anchorfile>
      <anchor>af79de0306312960a6818b90ffbcee65a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>_capacity</name>
      <anchorfile>classblocking__queue.html</anchorfile>
      <anchor>a2c33ed2e7a23141fd39cce581856876c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::queue&lt; T &gt;</type>
      <name>_queue</name>
      <anchorfile>classblocking__queue.html</anchorfile>
      <anchor>a8f6f27d4596ce964f00897ebeeafa992</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>_mutex</name>
      <anchorfile>classblocking__queue.html</anchorfile>
      <anchor>a13f1090b20fcc4c35c45c89c16af5c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::condition_variable</type>
      <name>_not_full</name>
      <anchorfile>classblocking__queue.html</anchorfile>
      <anchor>a3b8b273812e1cc86624b5f6820c56dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::condition_variable</type>
      <name>_not_empty</name>
      <anchorfile>classblocking__queue.html</anchorfile>
      <anchor>a35fddf01ee4f71752ab9e8e1ad1a2938</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::siemens::Buffer</name>
    <filename>classexamples_1_1siemens_1_1_buffer.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1siemens_1_1_buffer.html</anchorfile>
      <anchor>ad5d9fe7d60827c588d86ec082f221c44</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add</name>
      <anchorfile>classexamples_1_1siemens_1_1_buffer.html</anchorfile>
      <anchor>ac98405bd5e1de4c3262bd63b49c07606</anchor>
      <arglist>(self, product)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>retrieve</name>
      <anchorfile>classexamples_1_1siemens_1_1_buffer.html</anchorfile>
      <anchor>a2910953a97c88e1eabb2fa7b661cdb3a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>can_retrieve</name>
      <anchorfile>classexamples_1_1siemens_1_1_buffer.html</anchorfile>
      <anchor>a04a779039517b202bf585be6d8dabe75</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>can_add</name>
      <anchorfile>classexamples_1_1siemens_1_1_buffer.html</anchorfile>
      <anchor>a41bb2f1bdb2a4d4d6cc8dd3d62c2c903</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__str__</name>
      <anchorfile>classexamples_1_1siemens_1_1_buffer.html</anchorfile>
      <anchor>a4cdfffb5cafd4889adde825f097d2e24</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>queue</name>
      <anchorfile>classexamples_1_1siemens_1_1_buffer.html</anchorfile>
      <anchor>a43ccc9c24696a49abfda7d0c5796021b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::evaluator::callback</name>
    <filename>classfcmaes_1_1evaluator_1_1callback.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback.html</anchorfile>
      <anchor>aef60897b34bf16817406ca5d76f96acd</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback.html</anchorfile>
      <anchor>a2725c10a3383f79e36a236de01c56c53</anchor>
      <arglist>(self, int n, ArrayLike x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback.html</anchorfile>
      <anchor>af1faa34e6c01adde25dc4c8daadf66a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::evaluator::callback_mo</name>
    <filename>classfcmaes_1_1evaluator_1_1callback__mo.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__mo.html</anchorfile>
      <anchor>a6f9b17b3c9b0c0a187c27ff220d40dab</anchor>
      <arglist>(self, Callable[[ArrayLike], ArrayLike] fun, int dim, int nobj, Optional[bool] is_terminate=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__mo.html</anchorfile>
      <anchor>a99eab2bafd1186fff0be59544a596443</anchor>
      <arglist>(self, int dim, x, y)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__mo.html</anchorfile>
      <anchor>a01e0e70f0c77c72a78f24eec3f26e97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__mo.html</anchorfile>
      <anchor>aabaf4b9748dafd3dc1baf4421036190e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nobj</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__mo.html</anchorfile>
      <anchor>a5b7f16a346ee7d2157d76a674ffeed46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>is_terminate</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__mo.html</anchorfile>
      <anchor>ad53c6c57ed94dec476709e009b8b5c2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::evaluator::callback_par</name>
    <filename>classfcmaes_1_1evaluator_1_1callback__par.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__par.html</anchorfile>
      <anchor>a4fae3ecaebad817707bbdd38d1592aa4</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Callable[[ArrayLike], ArrayLike] parfun)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__par.html</anchorfile>
      <anchor>a2cc5592287f3feddcda3e51dcf38054b</anchor>
      <arglist>(self, popsize, n, xs_, ys_)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__par.html</anchorfile>
      <anchor>ab00135869a09e7af34a5a3f27c639d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>parfun</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__par.html</anchorfile>
      <anchor>a92cf3387fbaf4bb63152a328f64cd748</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::evaluator::callback_so</name>
    <filename>classfcmaes_1_1evaluator_1_1callback__so.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__so.html</anchorfile>
      <anchor>a413b8a2e726f488f4c2f1f79fa523bb5</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, int dim, Optional[Callable[[ArrayLike, float], bool]] is_terminate=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__so.html</anchorfile>
      <anchor>a91b3f73bc6c6999748aaf8bfb94cdd39</anchor>
      <arglist>(self, dim, x, y)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__so.html</anchorfile>
      <anchor>a1df2acbb4dae1a64687b5b231a2d169a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__so.html</anchorfile>
      <anchor>a556242f6333ce0f2316798f6171a061c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nobj</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__so.html</anchorfile>
      <anchor>a527ef30b5556fea42a808c27c9ea22f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>is_terminate</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1callback__so.html</anchorfile>
      <anchor>a9a0ab5f62f58416bd1a061cb7c4d9fbf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Cassini1</name>
    <filename>classfcmaes_1_1astro_1_1_cassini1.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1.html</anchorfile>
      <anchor>ac279d6a982d7e67f0ca5af0b8b48f4d1</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::moexamples::cassini1_mo</name>
    <filename>classexamples_1_1moexamples_1_1cassini1__mo.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini1__mo.html</anchorfile>
      <anchor>a48594e2a63cc5e90b2829c7da972f21a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini1__mo.html</anchorfile>
      <anchor>adbd0b49e9aab0124da2dfa38b30c60d8</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>base</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini1__mo.html</anchorfile>
      <anchor>a62350500c8f1ce1a6a5bcfcb749292ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini1__mo.html</anchorfile>
      <anchor>ac044cf434bb0cd96230187c42f3a7317</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weight_bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini1__mo.html</anchorfile>
      <anchor>a1feaa53a39042df9fa82f4036f014cb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini1__mo.html</anchorfile>
      <anchor>af1ceafd8b7678eae55a98fca89e6cc7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Cassini1minlp</name>
    <filename>classfcmaes_1_1astro_1_1_cassini1minlp.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1minlp.html</anchorfile>
      <anchor>a43fe7b41f8ebaab1dea138bae0a52568</anchor>
      <arglist>(self, planets=[2, 2, 3, 5])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cassini1</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1minlp.html</anchorfile>
      <anchor>a899dcf0f3139b54035e0b3f01ef6a408</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1minlp.html</anchorfile>
      <anchor>a1cbd83402656701b417eb6d8766727fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>planets</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1minlp.html</anchorfile>
      <anchor>a68e1d9d22284550c7fd7bcd54b3eb5e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Cassini1multi</name>
    <filename>classfcmaes_1_1astro_1_1_cassini1multi.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1multi.html</anchorfile>
      <anchor>a6f542a9ffb66b028f975a6529bed90c3</anchor>
      <arglist>(self, weights=[1, 0, 0, 0], planets=[2, 2, 3, 5])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cassini1</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1multi.html</anchorfile>
      <anchor>a030454ed2d59c150171a83abb1e6d94b</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1multi.html</anchorfile>
      <anchor>abc0c4735a3014c94fe6934f96c7a2b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weights</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1multi.html</anchorfile>
      <anchor>accf0981b5689f4aa3e31172b07222f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>planets</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1multi.html</anchorfile>
      <anchor>ab73694cdd33d6720b4f74ed68e970f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mfun</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini1multi.html</anchorfile>
      <anchor>ae9b3acee5a218cba957861661d2156dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Cassini2</name>
    <filename>classfcmaes_1_1astro_1_1_cassini2.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_cassini2.html</anchorfile>
      <anchor>a7eac7e729908efd4c4dada53b3b52cfb</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::elitescass2::Cassini2_me</name>
    <filename>classexamples_1_1elitescass2_1_1_cassini2__me.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1elitescass2_1_1_cassini2__me.html</anchorfile>
      <anchor>a15675ecc9dcc21266fa36a00fcd783b3</anchor>
      <arglist>(self, prob)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>qd_fitness</name>
      <anchorfile>classexamples_1_1elitescass2_1_1_cassini2__me.html</anchorfile>
      <anchor>a2ef9f353092f4e6e21687a58c231fca0</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classexamples_1_1elitescass2_1_1_cassini2__me.html</anchorfile>
      <anchor>a44b48c8d4953332ba7cbc476dd162002</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>descriptors</name>
      <anchorfile>classexamples_1_1elitescass2_1_1_cassini2__me.html</anchorfile>
      <anchor>a668a8d93c21c94c40c4917e8e232453a</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>problem</name>
      <anchorfile>classexamples_1_1elitescass2_1_1_cassini2__me.html</anchorfile>
      <anchor>ad199e628fa4287d3484e5eb73fd96bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classexamples_1_1elitescass2_1_1_cassini2__me.html</anchorfile>
      <anchor>a116c9714a687bf3a8a90a7651e8316b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qd_dim</name>
      <anchorfile>classexamples_1_1elitescass2_1_1_cassini2__me.html</anchorfile>
      <anchor>ab43522dfa7fb4fbe19fecc73c2aff920</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1elitescass2_1_1_cassini2__me.html</anchorfile>
      <anchor>a470e4358bf82c6b5b4afc9c0fc02c4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>qd_bounds</name>
      <anchorfile>classexamples_1_1elitescass2_1_1_cassini2__me.html</anchorfile>
      <anchor>a7dbfdf90184670926eb557ba4b449236</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::moexamples::cassini2_mo</name>
    <filename>classexamples_1_1moexamples_1_1cassini2__mo.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini2__mo.html</anchorfile>
      <anchor>a19efcdbf3abf19b7d8a9ef137ea568d1</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini2__mo.html</anchorfile>
      <anchor>ada76a55bc7d5657dd4ad6085cb39dbdc</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>base</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini2__mo.html</anchorfile>
      <anchor>a49461f4cddd036d9842f2b3e1f9744ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini2__mo.html</anchorfile>
      <anchor>afe0c63d30f32fb147496ac8bca27fac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weight_bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini2__mo.html</anchorfile>
      <anchor>a75ed6fe8d453400c0418ff0c203cc2a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classexamples_1_1moexamples_1_1cassini2__mo.html</anchorfile>
      <anchor>a40aea611c7f988552c37e232a801358c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::cassini2_minlp::CassiniMulti</name>
    <filename>classexamples_1_1cassini2__minlp_1_1_cassini_multi.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1cassini2__minlp_1_1_cassini_multi.html</anchorfile>
      <anchor>a7b9f7a7ba7000c00dba35044eb685546</anchor>
      <arglist>(self, planets=[2, 2, 3, 5])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cassini2</name>
      <anchorfile>classexamples_1_1cassini2__minlp_1_1_cassini_multi.html</anchorfile>
      <anchor>a980bc8637afdfffe7d62ecf39135e8a0</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>name</name>
      <anchorfile>classexamples_1_1cassini2__minlp_1_1_cassini_multi.html</anchorfile>
      <anchor>a8dd108b7c18754bbed5664852d3ec979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>planets</name>
      <anchorfile>classexamples_1_1cassini2__minlp_1_1_cassini_multi.html</anchorfile>
      <anchor>a9104d16407bc98ce751502bc2d073b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1cassini2__minlp_1_1_cassini_multi.html</anchorfile>
      <anchor>a1367dda313a8adcb811f118feb2d7778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1cassini2__minlp_1_1_cassini_multi.html</anchorfile>
      <anchor>ae899337d59352a6884fb1a6c3384803d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteOpt</name>
    <filename>class_c_bite_opt.html</filename>
    <base>CBiteOptBase&lt; int64_t &gt;</base>
    <class kind="class">CBiteOpt::CParOpt</class>
    <member kind="typedef">
      <type>int64_t</type>
      <name>ptype</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a80651b5ffb10feccb67729f4c472a5dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CBiteOpt</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a5f4640ecb94e39ea475d71ca2234bc39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDims</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a73dc570985bec54dc288690c31a8d8c7</anchor>
      <arglist>(const int aParamCount, const int PopSize0=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a24a8733fc9dbb2c7e314b699fc360d7b</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>optimize</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a2f56a9d5d682c92e2da1234ed68d54ed</anchor>
      <arglist>(CBiteRnd &amp;rnd, CBiteOpt *const PushOpt=NULL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateParPop</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a168cd86a91750b0548698f046e4b6d83</anchor>
      <arglist>(const double UpdCost, const ptype *const UpdParams)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CBitePop &amp;</type>
      <name>selectParPop</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a344271b2490d03eaa0c8e1ab062d916d</anchor>
      <arglist>(const int gi, CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CBitePop &amp;</type>
      <name>selectAltPop</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>ab98060db69130d7610818bddda8c7115</anchor>
      <arglist>(const int gi, CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getMinSolIndex</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>af25cdfb71a0ad9081148c31da58fe949</anchor>
      <arglist>(const int gi, CBiteRnd &amp;rnd, const int ps)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol1</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>aaf2f5bc8a214a95532426c9a9b38fdb8</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol2</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>ab6de0da3b279e77788efed7d3e05a0e2</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol2b</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>abd6c435c82a97476332139663d9a1c82</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol2c</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a2363863090db7154792f78ec46abcf47</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol2d</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a76fa9d8bf4abde13b69e06761acc82f5</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol3</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a2babc6c08dad9718d349683242805bc0</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol4</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>ae48399aea9fc3c2e01b370b846d88c82</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol5</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a01e7f5a94a2ae837844f8c60ddf21db6</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol5b</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>aac1bd4dd832e20880872b94b07773946</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol6</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a001440627928387b57b5f266696ba330</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol7</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a6766fe9d56bee1f623d297b2f9cf8500</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol8</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a332b03425de84b8ef8eb362af8e75e78</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol9</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>adca09db7345122f1da38d8f5c1800d83</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSol10</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a8a5048dc4357f48344cf5ade0757ae2b</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSolPar</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>aee604953caf90013f483d9f77fd3881c</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>MethodSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a91a52c9eab07a265fce92f0ba0ec0d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>M1Sel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a03f51391b90a59f023178008e3d27746</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 3 &gt;</type>
      <name>M1ASel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a3af3717f98de343325970c75aca0845c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>M1BSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a7e0f0eb4591c8c8f0a0147324e91e9e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>M1CSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a19ae8f821f9f26a9c0e01870bad6c42a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>M2Sel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a7d27a27405a83e13d6674d22e22c4f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>M2BSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a7f28d33448459a4a860f6df420333afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>PopChangeIncrSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>acac20a0af0c58f4aa58fb20bf4be11d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>PopChangeDecrSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>acd43fdffae9a65684c1436aaee087fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>ParOpt2Sel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a1926decbab37c16bdf14787724e875d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>ParPopPSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a47f66536806d836d1ec0ee5926995c0d</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>AltPopPSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a7c38e45fe68be8f7f9e6cbb4f1ec7e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>AltPopSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>abdbe1b2dca3680429d01e33ad78e0588</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>MinSolPwrSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a1f08554f3c3fffb89fafd91104d6ac5d</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>MinSolMulSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a26719d83668ff3b3cce919878c358967</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>Gen1AllpSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>aabfab1d71a0563959f94970b250c5df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>Gen1MoveAsyncSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a4cb14ff23736a5a74987504f94f1bf4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>Gen1MoveSpanSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a88b8c7fcc43de72d390950fbfdc86cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>Gen2ModeSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>aa05a9c04ac6d2a2ec6b679abd789df64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>Gen2bModeSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a8d6a5b4fd019d8aa73529c1fda6e91d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>Gen2cModeSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a96dbb17248d735d60d10b6ef4be3b7c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>Gen2dModeSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a1db3ecb43fe42f89db5b8dc1644baad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>Gen3ModeSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>abe8a0cedf383e8d0b272e779c2c8c6a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>Gen4MixFacSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>adf6acc728abfdec9b464d4a3c37b6a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>Gen5bModeSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>af0f831fa6f9105ecab62be7bbb2c79b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>Gen7PowFacSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>aad5bacfdff08b09d2834231c17bab4a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 2 &gt;</type>
      <name>Gen8ModeSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a44981d73146ac3b77f4c7283af776473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>Gen8NumSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>af4e31b724cbc2a4e859ebd205e5cfd25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>Gen8SpanSel</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>ada28884009d78c2651d1b68dd3f6e1ba</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBitePop</type>
      <name>OldPop</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a7c347ab2966fe6e79a9022fb136d25fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>DoInitEvals</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>af14783d4853d9e7e207f00788583a42e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>DoEval</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>ae7df30b17e5821498b7284e182425cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>NewCost</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a764c6c8faa178116999c26b3866f8189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CParOpt&lt; CSpherOpt &gt;</type>
      <name>ParOpt</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>aa2ca8983a05dc599ff5a5f47d3af16b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBitePop</type>
      <name>ParOptPop</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a93a88d27436aa1660edea574fea346ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CParOpt&lt; CNMSeqOpt &gt;</type>
      <name>ParOpt2</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>a2ddf8b2ba7691dc249b50baab668a5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBitePop</type>
      <name>ParOpt2Pop</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>afb37a6bb1eacba21280536ee17511830</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>UseParOpt</name>
      <anchorfile>class_c_bite_opt.html</anchorfile>
      <anchor>ab3a911c7924b1a55c9a38365ea1e60ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteOptBase</name>
    <filename>class_c_bite_opt_base.html</filename>
    <templarg>typename ptype</templarg>
    <base>CBiteOptInterface</base>
    <base protection="protected" virtualness="virtual">CBiteParPops&lt; ptype &gt;</base>
    <member kind="function">
      <type></type>
      <name>CBiteOptBase</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>af11515f00a0a685516aa9cc3daf7f603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CBiteOptBase</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>abc6be9a0740c36dfadb4ec3508dc0d65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const double *</type>
      <name>getBestParams</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>abbed35653d8765915efc675204c19bb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getBestCost</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a4b2d3669723dbe251cf391cc10dd4f5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CBiteSelBase **</type>
      <name>getSels</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a2eaae4dd1761eaef42ead68546994c12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char **</type>
      <name>getSelNames</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>afd1006a5d6154064115a205b54ecaa8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSelCount</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a96f3b9e0a82d830bc34c17a5d0f8fa19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>MaxSelCount</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>ad4c10c5958656e9ad5bb0073415b9c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initBuffers</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a5c53a8eb3a4269a746d990282452d71e</anchor>
      <arglist>(const int aParamCount, const int aPopSize, const int aCnsCount=0, const int aObjCount=1)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteBuffers</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>aed59421f7102fb6921e4af39acfb8369</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initCommonVars</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a768362da5c773eea5a8649d44676eeed</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDiffValues</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>ac2ee22488c24887a922a30dd15d898e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBestCost</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a9e49b98f5f6a2470d060282b2fd26a53</anchor>
      <arglist>(const double UpdCost, const double *const UpdValues, const int p=-1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>getRealValue</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a7b849dbede3dc6be555a4197541fad51</anchor>
      <arglist>(const ptype *const NormParams, const int i) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>wrapParamReal</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a634a498e8ebd71bbf87fd1df02f178e0</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double v, const int i) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSel</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a5d8710f00b828beca21c0d2699ae340d</anchor>
      <arglist>(CBiteSelBase &amp;s, const char *const sname)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>select</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>abf93d2e584756812ad210f86e4f84a69</anchor>
      <arglist>(T &amp;Sel, CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applySelsIncr</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>aa08dcfff8871910e4d01a94f261ee752</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double v=1.0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applySelsDecr</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a47acdb7a495f75170b0eb457e0dc950e</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>MinValues</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a07d5b7c3007f79c7dc1f6106d9832dc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>MaxValues</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a9b100a7afa3bdcb3684383ff2df7867a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>DiffValues</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a70f5211fb9521491b0e6a336e21dd7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>DiffValuesI</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>ad5c0fe9c5312847158a6df8f4639de23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>BestValues</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a0fbab700b9d9c5c36d5ef664540efad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>BestCost</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>adc4dfe02978fd4ed460f49c7e9a01633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>NewValues</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a0a97be5c42eed6fbaffba04c8720e6ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>StallCount</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>ab756659a8ba09ba42ffa3d207564fdd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>HiBound</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a48296b534db162fa0007ff83757cb84b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>AvgCost</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>acc0aa62d6125bd03d3baae22b0bf0467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSelBase *</type>
      <name>Sels</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>aebc1904c883f8b4dafefeda608c4536b</anchor>
      <arglist>[MaxSelCount]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>SelNames</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a43d69538ae5aa7d78d8b3a3e821902b7</anchor>
      <arglist>[MaxSelCount]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>SelCount</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>ae9b284aca73ab2f6784f12174e391f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSelBase *</type>
      <name>ApplySels</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a3922d6b29602643882d3212071a5e679</anchor>
      <arglist>[MaxApplySels]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ApplySelsCount</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>afc2d6ec2c61d8f41bd39bb99632cf12e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>MaxApplySels</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>ab1e0b2f8caf76a2a75401e2f6bc913ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CBiteOptBase</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a424395289a687d98b8d27cbd828dbc6c</anchor>
      <arglist>(const CBiteOptBase &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CBiteOptBase &amp;</type>
      <name>operator=</name>
      <anchorfile>class_c_bite_opt_base.html</anchorfile>
      <anchor>a8b1b8265762299edcd1714553ce2104d</anchor>
      <arglist>(const CBiteOptBase &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteOptDeep</name>
    <filename>class_c_bite_opt_deep.html</filename>
    <base>CBiteOptInterface</base>
    <class kind="class">CBiteOptDeep::CBiteOptWrap</class>
    <member kind="function">
      <type></type>
      <name>CBiteOptDeep</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a65d5f650fd7eae9ae1d1cb76387a3179</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CBiteOptDeep</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a8442d47ab16f76d4783a4f8227ab78a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const double *</type>
      <name>getBestParams</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a17c7c044ef259f3c68e2e47c53c043a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getBestCost</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a961516dc7772d327e64965fc3e07ce31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CBiteSelBase **</type>
      <name>getSels</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a7b759e5dbc58b29e36f7d3c6a10e16a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char **</type>
      <name>getSelNames</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a4ddcbc966999f0b3f4b59c8f8e909864</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSelCount</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>aa30c464f1425ad1219e7f512e75527a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDims</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a48ae954f715acc3433125af9b0abaa61</anchor>
      <arglist>(const int aParamCount, const int M=6, const int PopSize0=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>abeb2e2aa0929e9fb6741ac7b0892a31b</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>optimize</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a5f9dce3d0bcb37dd0d63fec707204786</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteBuffers</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a5aeb781988a714cc50107efa2521cc52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ParamCount</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>ac7cfdf4754e5ad3fef6b3cd98ba22520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>OptCount</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a20f687043f3b744c0a77cb095cca4a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteOptWrap **</type>
      <name>Opts</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>ac3ed0017d87104f26f320ad878fddcc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteOptWrap *</type>
      <name>BestOpt</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>afd1350f64112950d0887700984547b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteOptWrap *</type>
      <name>CurOpt</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>a0407325111b05d021ce58bdc770f2c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>StallCount</name>
      <anchorfile>class_c_bite_opt_deep.html</anchorfile>
      <anchor>ad7c9509c6e4525db8faab200f4f2edf6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteOptInterface</name>
    <filename>class_c_bite_opt_interface.html</filename>
    <member kind="function">
      <type></type>
      <name>CBiteOptInterface</name>
      <anchorfile>class_c_bite_opt_interface.html</anchorfile>
      <anchor>a0155b3fcab9eeb2d7505c0326e12e809</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CBiteOptInterface</name>
      <anchorfile>class_c_bite_opt_interface.html</anchorfile>
      <anchor>a070d1317053ec55bbe7d8ddde32076ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const double *</type>
      <name>getBestParams</name>
      <anchorfile>class_c_bite_opt_interface.html</anchorfile>
      <anchor>a2da6e8d4cfb2ecc8380b0cd220d1aeac</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getBestCost</name>
      <anchorfile>class_c_bite_opt_interface.html</anchorfile>
      <anchor>a79e5a8cdcdf2c9a12f16e4aeba49c75f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getMinValues</name>
      <anchorfile>class_c_bite_opt_interface.html</anchorfile>
      <anchor>ae7f8adaf2fd8acb10ccf057592a6229d</anchor>
      <arglist>(double *const p) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getMaxValues</name>
      <anchorfile>class_c_bite_opt_interface.html</anchorfile>
      <anchor>a9debe40625c2bc248a4ffd12a9197a4d</anchor>
      <arglist>(double *const p) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>optcost</name>
      <anchorfile>class_c_bite_opt_interface.html</anchorfile>
      <anchor>a45d7e2c9ea31b6f8bb23758a6879df9d</anchor>
      <arglist>(const double *const p)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteOptMinimize</name>
    <filename>class_c_bite_opt_minimize.html</filename>
    <base>CBiteOptDeep</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMinValues</name>
      <anchorfile>class_c_bite_opt_minimize.html</anchorfile>
      <anchor>a6a6d606aa0f4dc874acb855b66571124</anchor>
      <arglist>(double *const p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMaxValues</name>
      <anchorfile>class_c_bite_opt_minimize.html</anchorfile>
      <anchor>ad68d81fd1dad55c40ccd01a9d6567ccf</anchor>
      <arglist>(double *const p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>optcost</name>
      <anchorfile>class_c_bite_opt_minimize.html</anchorfile>
      <anchor>ae80abdaf663fbb5c83e719eea4d49d48</anchor>
      <arglist>(const double *const p)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>N</name>
      <anchorfile>class_c_bite_opt_minimize.html</anchorfile>
      <anchor>a8678489b0c6aca31865aabf22b7a6a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>biteopt_func</type>
      <name>f</name>
      <anchorfile>class_c_bite_opt_minimize.html</anchorfile>
      <anchor>ad256ead784368777ead4e544edc15352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>data</name>
      <anchorfile>class_c_bite_opt_minimize.html</anchorfile>
      <anchor>a83276d987e4697798ba94109a0cad9d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double *</type>
      <name>lb</name>
      <anchorfile>class_c_bite_opt_minimize.html</anchorfile>
      <anchor>a46e2e9238152b322ff7f7b71a6893d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double *</type>
      <name>ub</name>
      <anchorfile>class_c_bite_opt_minimize.html</anchorfile>
      <anchor>a0e1e84cbc118f9ccd61d8b581d345a60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteOptDeep::CBiteOptWrap</name>
    <filename>class_c_bite_opt_deep_1_1_c_bite_opt_wrap.html</filename>
    <base>CBiteOpt</base>
    <member kind="function">
      <type></type>
      <name>CBiteOptWrap</name>
      <anchorfile>class_c_bite_opt_deep_1_1_c_bite_opt_wrap.html</anchorfile>
      <anchor>a8f0f4ade1c6e99b3f0efc94670d3ae8f</anchor>
      <arglist>(CBiteOptDeep *const aOwner)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMinValues</name>
      <anchorfile>class_c_bite_opt_deep_1_1_c_bite_opt_wrap.html</anchorfile>
      <anchor>a2b9e245cc0cdb32268e01c0ec406fe63</anchor>
      <arglist>(double *const p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMaxValues</name>
      <anchorfile>class_c_bite_opt_deep_1_1_c_bite_opt_wrap.html</anchorfile>
      <anchor>a2f9fc126b59988b4a0812d87b3d6fdfd</anchor>
      <arglist>(double *const p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>optcost</name>
      <anchorfile>class_c_bite_opt_deep_1_1_c_bite_opt_wrap.html</anchorfile>
      <anchor>a881038400bff3e6d813fcb4304a9bac0</anchor>
      <arglist>(const double *const p)</arglist>
    </member>
    <member kind="variable">
      <type>CBiteOptDeep *</type>
      <name>Owner</name>
      <anchorfile>class_c_bite_opt_deep_1_1_c_bite_opt_wrap.html</anchorfile>
      <anchor>aababa20b5a32983ebfc89e2d14cfe72c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteOrt</name>
    <filename>class_c_bite_ort.html</filename>
    <base virtualness="virtual">CBitePop&lt; double &gt;</base>
    <member kind="function">
      <type></type>
      <name>CBiteOrt</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a449fc81d0f3149cf3dcc1aed45b7a75f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDims</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>ac3418aa5bb3f4e2735409038b56f98be</anchor>
      <arglist>(const int aParamCount, const int aPopSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateWeights</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a2470177aa3f85af2a5a3daf548b7166e</anchor>
      <arglist>(const int UsePopSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>ac052c94187f7b767dbf31cb8c72e8914</anchor>
      <arglist>(const double *const InitCent=NULL, const double *const InitSigma=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>ab718877f7b3014357fc44bc34391d827</anchor>
      <arglist>(const CBitePop &amp;ExtPop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ort</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a89dfc6c4e11b5e752b95d8e80f961a98</anchor>
      <arglist>(const double *const ip, double *const op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ortnc</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a4e3cc10dcabfd6b1eb1ebf586b2670b0</anchor>
      <arglist>(const double *const ip, double *const op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unort</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a955555215281014f61c914f71963009c</anchor>
      <arglist>(const double *const ip, double *const op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sample</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a0687c4810cab96a266d421eec88368fb</anchor>
      <arglist>(CBiteRnd &amp;rnd, double *const op) const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>CentPow</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a274b976da955293465fc9e49ae0a7d9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>CovUpdSlow</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a2cf9763b9162a1095afbff15239dfc6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>CovUpdFast</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a22c0f31f0b3b89b84de05419c3f755c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SigmaMulBase1</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a0a177a216c024c0a9ceef4b191959958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SigmaMulBase2</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a7031aaff7a449354b8b9a4ad59d2f5ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SigmaMulExp2</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>aed92d35956a184cc13ad74c74821ffa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>EvalFac</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>af963cd0c9988f31971e375bd2aedf30d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initBuffers</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a7f99eac373be63d512a4660ea9eaf040</anchor>
      <arglist>(const int aParamCount, const int aPopSize, const int aCnsCount=0, const int aObjCount=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteBuffers</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a34a09edcccffb93ecb83ad4f8cd8365d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>eigen</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a77ae9fd22421595707c336bf14d3931a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>calcCent</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a0d9cf0f06f8e894e9432fdc4486bc24b</anchor>
      <arglist>(const double **const SortedParams, const int UsePopSize)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>dotp</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a51833c929e82998422cb7c0910378d62</anchor>
      <arglist>(const double *const p1, const double *const p2, const int c) const</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>tred2</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a5415d9c622dbc0b03f32c0f105a9169a</anchor>
      <arglist>(const int n, double *d, double **V, double *e)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>hypot_</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a5196abda80a361c2d6f40a9a79773123</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>max_</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a1e68e963eb443af650525cd0d58ba57a</anchor>
      <arglist>(const double a, const double b)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>tql2</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a33285821015e487d6c933ed1d6385144</anchor>
      <arglist>(const int n, double *d, double **V, double *e)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>CovParamsBuf</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a957515315eac19649dcc69f57ecefa88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double **</type>
      <name>CovParams</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>ae8c61d66cc14d42b4bc24ccc1b51fdde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>BParamsBuf</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a5bcc49be8d7e1b368a313ae2dd91063e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double **</type>
      <name>BParams</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>af37edb8ec1a7cec8f88169539952a1bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>DParams</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a6c75959d8b2bd12b909f4637eeb16db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>DParamsN</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a73f4b5a868ea4cc2ef2f22c6841c263a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>PrevCentParams</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>abcfbd9fc0b1d9620ad4fb8d396742f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>WPopCent</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>ae73996fe205afb75041aa1d9d7ad473d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>WPopCov</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a05fb4a934fae2cc11a491463cffbdbd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>spc</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a8323d1f7c3504e784d6a92682e54a97b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CBiteOrt</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a023600358736dab27643a71154164b8e</anchor>
      <arglist>(const CBiteOrt &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CBiteOrt &amp;</type>
      <name>operator=</name>
      <anchorfile>class_c_bite_ort.html</anchorfile>
      <anchor>a9aac149388364c2c183f6a3c39d69d9d</anchor>
      <arglist>(const CBiteOrt &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteParPops</name>
    <filename>class_c_bite_par_pops.html</filename>
    <templarg>typename ptype</templarg>
    <base virtualness="virtual">CBitePop&lt; ptype &gt;</base>
    <member kind="function">
      <type></type>
      <name>CBiteParPops</name>
      <anchorfile>class_c_bite_par_pops.html</anchorfile>
      <anchor>a1d00195283da4d97f648da706e5c5cec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CBiteParPops</name>
      <anchorfile>class_c_bite_par_pops.html</anchorfile>
      <anchor>a772516362f17b8e5790596740ce355ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setParPopCount</name>
      <anchorfile>class_c_bite_par_pops.html</anchorfile>
      <anchor>a24cc3d1978b4dbe57fad8a6f6d7efd8a</anchor>
      <arglist>(const int NewCount)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getMinDistParPop</name>
      <anchorfile>class_c_bite_par_pops.html</anchorfile>
      <anchor>afa8a97732cea882b664c2d0fbedf2289</anchor>
      <arglist>(const double Cost, const ptype *const Params) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBitePop&lt; ptype &gt; *</type>
      <name>ParPops</name>
      <anchorfile>class_c_bite_par_pops.html</anchorfile>
      <anchor>a79983cca58bd18a6ff73120e65a976dd</anchor>
      <arglist>[MaxParPopCount]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ParPopCount</name>
      <anchorfile>class_c_bite_par_pops.html</anchorfile>
      <anchor>aea59bf6c1cf9894f944d07cec99882ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>MaxParPopCount</name>
      <anchorfile>class_c_bite_par_pops.html</anchorfile>
      <anchor>a451f5fa8bb3503f9c344fe03f46ffcc9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBitePop</name>
    <filename>class_c_bite_pop.html</filename>
    <templarg>typename ptype</templarg>
    <member kind="function">
      <type></type>
      <name>CBitePop</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ad427518ed1d47fbe3c2222b3a11badb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CBitePop</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a73402384f4b75abf6d956dc086ccf36e</anchor>
      <arglist>(const CBitePop &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CBitePop</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ac386e4638d6fc6bd5370eeae895347c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CBitePop &amp;</type>
      <name>operator=</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ab18cf322db6ab186db1e19b53e34c232</anchor>
      <arglist>(const CBitePop &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initBuffers</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a7488531e6b12accb61f068bbe654f580</anchor>
      <arglist>(const int aParamCount, const int aPopSize, const int aCnsCount=0, const int aObjCount=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a3fc2d887ae91be62fd9fc3100268e53c</anchor>
      <arglist>(const CBitePop &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateCentroid</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a7850902dad276dcecea68559eaccc168</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ptype *</type>
      <name>getCentroid</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a5e6ccebb178353b084084f841b09042d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ptype *</type>
      <name>getParamsOrdered</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>aaa8e3f180accfedf21218cbed8ffbb79</anchor>
      <arglist>(const int i) const</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>getCnsPtr</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ad38d886687357797479e69098759476a</anchor>
      <arglist>(ptype *const pp) const</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>getObjPtr</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ad6cbe6cfbf9954dcb6f8a223a5e1f36b</anchor>
      <arglist>(ptype *const pp) const</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>getRankPtr</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>aa4f3255c9607f72eff280f8c3c09143f</anchor>
      <arglist>(ptype *const pp) const</arglist>
    </member>
    <member kind="function">
      <type>const ptype **</type>
      <name>getPopParams</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ac2a01e9eb6b884a0b318e4b914273acf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ptype *</type>
      <name>getCurParams</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a0053ae41c70babe967c5931f491ea865</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurPopSize</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a5aef425d751172e1fff38a455cb51d34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurPopPos</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a7e1fbb7f7e9aaf8f73eb865fa4610185</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCurPopPos</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a767519aa2fcc2667dc135a131bc9fd85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incrCurPopSize</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a48d6ede5c82534c973e0458726e820dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decrCurPopSize</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a4656171c63f1944ae045d6f222d9d33a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>updatePop</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>aad999ddc8a2ed72ffaee0db7732c9f76</anchor>
      <arglist>(double UpdCost, const ptype *const UpdParams, const bool DoUpdateCentroid, const bool CanRejectCost=true)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteBuffers</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a47de1dedd30171e9fc9ae9475998d51d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>zeroParams</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a0d5ab322641bb1a091df91ff7ee630c4</anchor>
      <arglist>(ptype *const dst) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyParams</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a24130fea35014433f142e3b9ed0f8929</anchor>
      <arglist>(ptype *const dst, const ptype *const src) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyValues</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a57e751582761922bbabff1ddb7af277b</anchor>
      <arglist>(double *const dst, const double *const src) const</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ptype</type>
      <name>wrapParam</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a3b7e8d2276455475bd761e29c8c72ac6</anchor>
      <arglist>(CBiteRnd &amp;rnd, const ptype v)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ptype</type>
      <name>getGaussianInt</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>aecaac61269e65bda93cb2dc1a3a26091</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double sd, const ptype meanInt)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>calcLP1Coeff</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ad4e3a3c5b7a25ad02ef0231bd3fe8388</anchor>
      <arglist>(const double Count)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ParamCount</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a0dc6f7b3a19db513e349e68c3471f9fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>ParamCountI</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a884c9ad4c0327aaa0110a23a89f5697a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>PopSize</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a58e3bf5abc2fb4b1e173aa6cb3477bfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>PopSize1</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a0b64743a84d5af143d44e7f6e9f02ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>CurPopSize</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>adc98fbdebc2671ef0826245d8c472cc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>CurPopSize1</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a26b81c70200085e410cf83258e139f9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>CurPopSizeI</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>aa5105ca75379f9a760dc9f0b9ea30ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>CurPopPos</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>aa7c87b9148768d6104f8d3dfb5abebce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>CnsCount</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a2bf725291723a8dcaa215496e3175471</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ObjCount</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a2f7c6a4707e23c21197ab32b71d900c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t *</type>
      <name>PopParamsBuf</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ac69b014720b11a472509b22588eaf6c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ptype **</type>
      <name>PopParams</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a0c41790e473b70c5ec37986d0fb1f9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>PopCnsOffs</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a6d4a3479ca9e60de6cf4667d5b2937a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>PopObjOffs</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a98e2af75120c4184b271c14d22acf9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>PopRankOffs</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a3ecc4ffcf1c6f3f9b4e4e5a873c481fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>PopItemSize</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a3cdac0ad2cf5c8403f1f7676171f4e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ptype *</type>
      <name>CentParams</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ac31d95bc1f383828e72bcf1eb499e949</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>NeedCentUpdate</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a41f29468becc588bea6ff3f842db93ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>CentLPC</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ab6dec63b0ee3955563c2a3f815614f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ptype *</type>
      <name>TmpParams</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>acae90e3584dca8b6c08c70d7bd317729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>IntOverBits</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a8009a96dd8a678daaefc9410ba2e0a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>IntMantBits</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>ac9adf8849ed7251dadd94815e20bdee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int64_t</type>
      <name>IntMantMult</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a1302e3c2e578dd650aedb57e18645092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int64_t</type>
      <name>IntMantMultM</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>aeba03d86b17ed01a97dc8225c5598b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int64_t</type>
      <name>IntMantMult2</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a8c64d2e83f225b034df818b06b09ecd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int64_t</type>
      <name>IntMantMask</name>
      <anchorfile>class_c_bite_pop.html</anchorfile>
      <anchor>a27448c9be1bed517e4a48aa656ca4f76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteRnd</name>
    <filename>class_c_bite_rnd.html</filename>
    <member kind="function">
      <type></type>
      <name>CBiteRnd</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a2776cd41c02588346bf91d928a5c8c87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CBiteRnd</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a6cc79f28d1026941dffddd9590586ef6</anchor>
      <arglist>(const int NewSeed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a568e9d76b0dcac410bdb0292d1aef2e0</anchor>
      <arglist>(const int NewSeed, biteopt_rng const arf=NULL, void *const ardata=NULL)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>afdb77334884f1a612780def0dec0a326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInt</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a4e9ad0a5c5e09149a60f849736d8d7ce</anchor>
      <arglist>(const int N1)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSqr</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>aabbf1ffd535ca8fe31fda768f15ccd1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPow</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>aa4c960b792982f495cc19c04ad9c2705</anchor>
      <arglist>(const double p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLog</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a5ca4595f6d0ef48367ad0ee06b337bf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSqrInt</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>ab73d2c6a6e4c1f5da7441168f165529d</anchor>
      <arglist>(const int N1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPowInt</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>adca97316ecce595b9175815493f7a3a2</anchor>
      <arglist>(const double p, const int N1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLogInt</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>ab5e3f4ddf78ebb400f3ddd6dd7ddf016</anchor>
      <arglist>(const int N1)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getRaw</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a6e9234ff0489b0d3d38ef71be159b34d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTPDF</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a97eb8d3dce6693178a1f54cf4a076fd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGaussian</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a3f6c22ff1f6f19de24f7c837530f31c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBit</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a6ccc0608cbc9080d9509a0e4c483adfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint64_t</type>
      <name>advance</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>ae1167f8ecac85f268ced4bc1d2fa953b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>biteopt_rng</type>
      <name>rf</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a008bb9aa42951c18a447c999800e0f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>rdata</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a44e318756bc7385e8924011349aa4f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>Seed</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>af5a87e0a942d6232222aafc648ed511c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>lcg</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>ae34e558692230f33fe667766c67c1856</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>Hash</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>ab5b48a474edb75ca3c24f62b56e9a4ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>BitPool</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>ab1e875c012a97278485cc502a660664a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>BitsLeft</name>
      <anchorfile>class_c_bite_rnd.html</anchorfile>
      <anchor>a3ba7429a43a41566ccbc4e59ba73bb3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteSel</name>
    <filename>class_c_bite_sel.html</filename>
    <templarg>int tCount</templarg>
    <base>CBiteSelBase</base>
    <member kind="function">
      <type></type>
      <name>CBiteSel</name>
      <anchorfile>class_c_bite_sel.html</anchorfile>
      <anchor>a925bccb88403ab45d066f7f88b5355d9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteSelBase</name>
    <filename>class_c_bite_sel_base.html</filename>
    <member kind="function">
      <type></type>
      <name>CBiteSelBase</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>ad36767758d2812ffdaa59d074b30099f</anchor>
      <arglist>(const int aCount)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CBiteSelBase</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a7b8a0dd2ad7a7031bfa968ff52189ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a608b89514f2f4430e4e0a6ff6660c7cf</anchor>
      <arglist>(CBiteRnd &amp;rnd, const int ParamCount)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getChoiceCount</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a29da0dce87d2b658c696a1094367ef85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incr</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>aa1de251ac8527c6d77286c7aec210871</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double v=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decr</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>ae8cab652e5ae42278ab060a3eb2513a2</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>select</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a8057363e3d0feb4fc8e23957a8806245</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSel</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a94dd22328f70ff750a5cf088dcc5f18a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetIsSelected</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a72e40d55a22571f3f55c977069aca42a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsSelected</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a2543edb14cb215f3738564da2a236f93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>Count</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>aa9533e60d72366596dad8fcbf1d58546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>SparseMul</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>ae40825798948f1f8fb0f2e856001d81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>CountSp</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a8514c1122bad5eb24f3faecb3dde66dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>CountSp1</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a861068aef7d05de32e3cf5b0b8cc9640</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>AccumCoeff</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a99f44ba4532f2f16cc0d347c8d8690dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>SlotAccums</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a74f1cdec6aa5ef6bfe2950371d7ad2b8</anchor>
      <arglist>[SlotCount]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>Sels</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a020042ee4772e7f05de9e2c31e44009e</anchor>
      <arglist>[SlotCount]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>SelBuf</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a2cbe3935a3e6c218ad4ef402d45f43b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>SelBufCapacity</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a80e8dd1e42d0e8b1ed60c8a005be5cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>Sel</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a90376539edbd802257bc22edd557dbe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>Selp</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a96580bfdc4f144d3bb84edbf12f2e270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>Slot</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a26c67f4680fbbb93c5041a82c5413936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>IsSelected</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a3a4c0030d8667e0b827e703384266510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>SlotCount</name>
      <anchorfile>class_c_bite_sel_base.html</anchorfile>
      <anchor>a81268a0bafd308583dc5a525c51cd5e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CDEOpt</name>
    <filename>class_c_d_e_opt.html</filename>
    <base>CBiteOptBase&lt; int64_t &gt;</base>
    <member kind="typedef">
      <type>int64_t</type>
      <name>ptype</name>
      <anchorfile>class_c_d_e_opt.html</anchorfile>
      <anchor>a5aab4771da4fe59a157f702840b8ac49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDims</name>
      <anchorfile>class_c_d_e_opt.html</anchorfile>
      <anchor>a226dd5b6af6c70e994012958e41eb550</anchor>
      <arglist>(const int aParamCount, const int PopSize0=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>class_c_d_e_opt.html</anchorfile>
      <anchor>a36a626e15e143c668c8c94417a7e9d20</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>optimize</name>
      <anchorfile>class_c_d_e_opt.html</anchorfile>
      <anchor>a819e3692005dd630f7bc83d4444e23ee</anchor>
      <arglist>(CBiteRnd &amp;rnd, double *const OutCost=NULL, double *const OutValues=NULL)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>DoInitEvals</name>
      <anchorfile>class_c_d_e_opt.html</anchorfile>
      <anchor>a7bd6d1e27282a8b4eee07da8ef5fae2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::CheckBounds</name>
    <filename>classfcmaes_1_1optimizer_1_1_check_bounds.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_check_bounds.html</anchorfile>
      <anchor>a21fd59a9771e5e58340921efd952eadd</anchor>
      <arglist>(self, Bounds bounds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_check_bounds.html</anchorfile>
      <anchor>a85adee224b45c4a645b251017c1d604b</anchor>
      <arglist>(self, **kwargs)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_check_bounds.html</anchorfile>
      <anchor>aed2f7dfc674ae70d6e768e4b6415ae7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Choice</name>
    <filename>classfcmaes_1_1optimizer_1_1_choice.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_choice.html</anchorfile>
      <anchor>a5d640dae06a047492e728d0fc2bac409</anchor>
      <arglist>(self, ArrayLike optimizers)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_choice.html</anchorfile>
      <anchor>acc04c696958e97fdd9c4f8ad51354530</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Bounds bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike, Callable]] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>optimizers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_choice.html</anchorfile>
      <anchor>a63c504ba4d8b574728b84223f1c01158</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::testfun::Cigar</name>
    <filename>classfcmaes_1_1testfun_1_1_cigar.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_cigar.html</anchorfile>
      <anchor>a65186daa3dad8f1a6c93683bfa1e4dd4</anchor>
      <arglist>(self, dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Cma_ask_tell</name>
    <filename>classfcmaes_1_1optimizer_1_1_cma__ask__tell.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__ask__tell.html</anchorfile>
      <anchor>a09d9c0f932642fd605a5db7793836eb6</anchor>
      <arglist>(self, max_evaluations=50000, popsize=31, guess=None, stop_fitness=-np.inf, sdevs=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__ask__tell.html</anchorfile>
      <anchor>a8cd8fee170f10d492be9efddd646f592</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__ask__tell.html</anchorfile>
      <anchor>a2a32bf4b1974985835c6fe4d78efbfa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__ask__tell.html</anchorfile>
      <anchor>a7d349b5034ba57f809452070bc13b7c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__ask__tell.html</anchorfile>
      <anchor>a3c87ed72ee15e5bcd89e0e484ef980c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sdevs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__ask__tell.html</anchorfile>
      <anchor>a54e31b68f53d2561911716c31f45b1be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Cma_awm</name>
    <filename>classfcmaes_1_1optimizer_1_1_cma__awm.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__awm.html</anchorfile>
      <anchor>a9c298a21af035fd7f8527648a4483673</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[Union[float, ArrayLike]] sdevs=None, continuous_space=None, discrete_space=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__awm.html</anchorfile>
      <anchor>aeae1df11cb00effaafd1a0bde69ea5e0</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike]] sdevs=0.3, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__awm.html</anchorfile>
      <anchor>adfed8224a61810107b7df8908a1872cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__awm.html</anchorfile>
      <anchor>a9244263d6e7b2315ffa2f09b7fde5aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__awm.html</anchorfile>
      <anchor>adcd113e9905647601dc5c7539a6eb4cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sdevs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__awm.html</anchorfile>
      <anchor>a03b189caddedc1bdd249597786622c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__awm.html</anchorfile>
      <anchor>ab41fe95321101071e337afb74b3fd7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>continuous_space</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__awm.html</anchorfile>
      <anchor>a3393db059ecb730f3016c1c33287324e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>discrete_space</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__awm.html</anchorfile>
      <anchor>af411add911152d8b4c3d25369f787955</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Cma_cpp</name>
    <filename>classfcmaes_1_1optimizer_1_1_cma__cpp.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>a9d071c64c65735fdf51ec4f744397e29</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[float] sdevs=None, Optional[int] workers=None, Optional[int] update_gap=None, Optional[bool] normalize=True, Optional[bool] delayed_update=True, Optional[int] stop_hist=-1)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>adf0a83599c8dbbdab6e4c0482e22443a</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike, Callable]] sdevs=0.1, rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>a2bb997ef25340e30ce54a699f3dea578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>ae7c8ca1a9885411036279c8990bada8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_hist</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>ad8ae4d6852922d2037677886a6e47081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>ad4abbe5291e81a88cfcd2ac2017c540c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sdevs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>aa1d8e4cb3a9f831afa8dbca3ba762120</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>update_gap</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>a30083184aacba7ca41b7a96e06ba164c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>delayed_update</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>ab75f2eed9cd3127b7174cc45f7ede81d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>normalize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>a7d425626d29af5e5e323d059572b9931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__cpp.html</anchorfile>
      <anchor>ada69629e32dd255e9ae77bdc81803f7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Cma_lw</name>
    <filename>classfcmaes_1_1optimizer_1_1_cma__lw.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__lw.html</anchorfile>
      <anchor>afe014de535eeb9ece1e4cbf6ddf7f62d</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[Union[float, ArrayLike]] sdevs=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__lw.html</anchorfile>
      <anchor>a86222ef0aed5dce4b0f3aed01c9f513a</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike]] sdevs=0.3, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__lw.html</anchorfile>
      <anchor>a1861ff82b2a8709da57f19cb75a483ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__lw.html</anchorfile>
      <anchor>a93cdf2e5be18ff6b6ba1de0fe2ca3faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__lw.html</anchorfile>
      <anchor>abd9e72f56c6e5b5b1fbe57bd16691589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sdevs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__lw.html</anchorfile>
      <anchor>a9fd63506e11cbdde339d20f108f6669c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__lw.html</anchorfile>
      <anchor>a76927f85115786da386af8ac5a0620ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Cma_orig</name>
    <filename>classfcmaes_1_1optimizer_1_1_cma__orig.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__orig.html</anchorfile>
      <anchor>a1dd748026586bac7e0f73ed6328d0917</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[float] sdevs=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__orig.html</anchorfile>
      <anchor>a4dbf460c986845f8121946c4252c2fa0</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike]] sdevs=0.3, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__orig.html</anchorfile>
      <anchor>a90f09477ed9000f2c20750fa9ac73ed5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__orig.html</anchorfile>
      <anchor>aa3e54c6b1d49bf087f1afcb4e4d92f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__orig.html</anchorfile>
      <anchor>a91b1661ab6194b9f03f1bc5eb95195e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sdevs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__orig.html</anchorfile>
      <anchor>a246b1629a6e77876a03baa8ef4a485ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::benchmark_gtop_pygmo::Cma_pyg</name>
    <filename>classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg.html</anchorfile>
      <anchor>a72cd3810a8aa777511b258e2c10179b5</anchor>
      <arglist>(self, max_evaluations=50000, popsize=31, guess=None, stop_fitness=-np.inf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>minimize</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg.html</anchorfile>
      <anchor>ac6519a73a433d9af5f92b533f3e1520a</anchor>
      <arglist>(self, fun, bounds, guess=None, sdevs=0.3, rg=Generator(MT19937()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg.html</anchorfile>
      <anchor>a417a165a5ceee871a126af16ba74aa40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg.html</anchorfile>
      <anchor>ab9b4f3a7942f95a90e46cabf2ae20641</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg.html</anchorfile>
      <anchor>abb8008f11f1ddb42806a01d4a70c931b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Cma_python</name>
    <filename>classfcmaes_1_1optimizer_1_1_cma__python.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__python.html</anchorfile>
      <anchor>a82643dd56a018e574b60be0a2dfae303</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[float] sdevs=None, Optional[int] workers=None, Optional[int] update_gap=None, Optional[bool] normalize=True)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__python.html</anchorfile>
      <anchor>a11b849f7e44223c9edba4c1247b7e9e6</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike, Callable]] sdevs=0.1, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__python.html</anchorfile>
      <anchor>a37f6cfbea5e7ae43fde5dec59bec4371</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__python.html</anchorfile>
      <anchor>a581873b49ad570adbcdef9fc9ceff19f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>update_gap</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__python.html</anchorfile>
      <anchor>a22a6511d0a158b47ceb15c09119ce9f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__python.html</anchorfile>
      <anchor>a9cbca3b1c1920f4cca037696a3d3143a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sdevs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__python.html</anchorfile>
      <anchor>ac16e971fb41d9c8acc8f95264585cf8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>normalize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__python.html</anchorfile>
      <anchor>a3ba6830a8e6ee037faaa309c2e68dce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__python.html</anchorfile>
      <anchor>a4186bbe66760780ba88e32a2343cc8ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Cma_sep</name>
    <filename>classfcmaes_1_1optimizer_1_1_cma__sep.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__sep.html</anchorfile>
      <anchor>a77bae4af713b31cc22068d9a219e67e1</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[Union[float, ArrayLike]] sdevs=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__sep.html</anchorfile>
      <anchor>a5220a28c20ca5b96c1312ba25ee8e1eb</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike]] sdevs=0.3, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__sep.html</anchorfile>
      <anchor>abddd49200f8a013f6fb55ce8698dd111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__sep.html</anchorfile>
      <anchor>a6bcb1fd525cca55a937381532eaab1d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__sep.html</anchorfile>
      <anchor>a4357690ffebc7f4f1467a31db2371194</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sdevs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__sep.html</anchorfile>
      <anchor>a5462e127f44c3e90a14dd8a7e4e39c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_cma__sep.html</anchorfile>
      <anchor>a497ac6bf34a3b0d86ced9bf82b00bb0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::cmaes::Cmaes</name>
    <filename>classfcmaes_1_1cmaes_1_1_cmaes.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a081d9143661974676245efab12c318cb</anchor>
      <arglist>(self, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.3, Optional[int] popsize=31, Optional[int] max_evaluations=100000, Optional[int] max_iterations=100000, Optional[int] accuracy=1.0, Optional[float] stop_fitness=-np.inf, Optional[bool] is_terminate=None, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[Callable] randn=np.random.randn, Optional[int] runid=0, Optional[bool] normalize=True, Optional[int] update_gap=None, Optional[Callable[[ArrayLike], float]] fun=None)</arglist>
    </member>
    <member kind="function">
      <type>np.array</type>
      <name>ask</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a56c7e2c2ad921a3fc6263e5be6a873f8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a398738e6fcf7fe101cce3257fb0d579d</anchor>
      <arglist>(self, np.ndarray ys, Optional[np.ndarray] xs=None)</arglist>
    </member>
    <member kind="function">
      <type>np.array</type>
      <name>population</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a7d18b1bc7ca57941c7ca07bde288c8f5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>result</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a5c6955cf059c16dfea867a214b485501</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.array</type>
      <name>ask_one</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ab89a6f59ef9aafbe855a9547c80669f5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell_one</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ac7cbecf8b29fb1048bd4cc7ec900692c</anchor>
      <arglist>(self, float y, np.array x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>newArgs</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>aff1c6aff205dfd66b677b1237f3566e7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>do_optimize_delayed_update</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ae86966099ee875815394d69b087738f4</anchor>
      <arglist>(self, fun, max_evals=None, workers=mp.cpu_count())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>doOptimize</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a974188898932b9c2ecacb33387c08fd8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>updateCMA</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a7dada2c399890feafb59c01d1f424ee5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>updateEvolutionPaths</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ae3fd3fbe79efd9509bb8462382d63bdd</anchor>
      <arglist>(self, zmean, xold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>updateCovariance</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>afd8b8665d87f14c53cd60da16c932336</anchor>
      <arglist>(self, hsig, bestArx, arz, arindex, xold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>updateBD</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ae26e42639fa8cb28b64c1fe1bcd7109c</anchor>
      <arglist>(self, negccov)</arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>arx</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a84f0007d9d933264673eb08e17e2bc8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>evals</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a94c7703c8ab62c0696018a9dec53e7ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>runid</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>aaf84ee8e2f184fa2e5b5b49f681fb5ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>lower</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a81bf83c8277ff8319a7c2ee4c4189669</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>upper</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>aee7e5c28fcdad6c41c9589f49d05a56a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ad60e13f5cfc1f2c51e12bc24507708e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>fitfun</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>aab6158b518a6657e69010bb347c9d72f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>rg</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a472913cd6e65e99db64b742fc0b348f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>randn</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>abc49c506631c8deb58566ce95a1b3069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>accuracy</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ae977d12b9b7f088beb9df50d43936122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>is_terminate</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a53ccd69a742fb33d4a8c783cdcd2b51a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a2e2ca07b4daef2f2ad49d42d3220f268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a761c0d9f4dee80eeede32decb57c33df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>input_sigma</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>abfb4fec954b64eec89f44d931515ed48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>insigma</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a255bb1d29dc205cf8a37e794bb7fa209</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>sigma</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a0c1c9cf3e185d2a6d4e8d64db0a2f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>max_evaluations</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ae9bf236b9972f1dbb22e45c0938591b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>max_iterations</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>aa7a7a3eb4886eedbfa5e3b46c35adede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ab77d778b85b64826f6a8e7c004387f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>stopTolUpX</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>afaa10b55e67589d51b3781645d801da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>stopTolX</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>abebaeee4cae9bad0d9ea507610aad62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>stopTolFun</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a87a139a9830d96524ee8cac362cc03a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>stopTolHistFun</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>aaa66313795089b51ff1f38a62e2664fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>mu</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a3d8d08495e9ebae0cc1e8164f92bbda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>best_y</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a7dc4517b21d000a43313255dd7f7b5ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>n_evals</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a13f1cc130df08ee63adedf73d9bb0d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>time_0</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a83af54c38e948804ee8aceba231d25ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>weights</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>afa1dbc74053584467bcd74d4d7cbcf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>sumw</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a88afdde6c2904cd36c827facfb43e8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>sumwq</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a2ca9e07a6a38eba18c3370262eb550fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>mueff</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a87b45423cf6e89e57e4682ff318a5c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>cc</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a896dcfff9b45acea10fdf6f918ca8329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>cs</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a8c15e41b9f3e7d6eb11ff2112109cd52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>damps</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>aa86568b2e35fa0abc9c44441370001b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>ccov1</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a64138cc1569696378f425b77a1133c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>ccovmu</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ac4f76391f5b24411336fd43932b1f32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>chiN</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>af748707b894a344fc39d3d933ddd6875</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>ccov1Sep</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ad83a90d453bf38c57926596aab31f741</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>ccovmuSep</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ad28c8205ed7b2094888c758757511eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>lazy_update_gap</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>abd695ddec4028c73504ddc1e56d9ddbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>xmean</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>ab23d2436d1c72f54ab99839058c1adf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>pc</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a72279ffee64f7ce0014f5a6f2a5dcbe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>ps</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>abf10f8059a83dd6d1d02c17f8c9317b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>normps</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a6c0ece7221cef9045ab5c872974c78fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>B</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>aa02345ac78df378d92478bf7bb17362e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>diagD</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a7da80a6a1a85ca8df878d8d205b21d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>diagC</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a02064e035283dd8a57de4869703c8977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>BD</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>addeb9c3f1881d703fcbdab203a81e8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>C</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a69e5ed885bebdebca4855961f2a3c4cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>iterations</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>af7581432fe2911ae409ec703de2cbc13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>historySize</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a91dd0137d82524d5c7f82d0992ca823c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>last_update</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>afada885234491b531340c56405686608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>stop</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>acc278543fe1ef34927806184e59ad84c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>best_value</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>abe14f6b9326248e7d16f17edd05660c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>best_x</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a180e3a8a1099625f1d089209c93a6d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>fitness_history</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a37fe790f8441da81e8e25dd57ebe5e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>tuple</type>
      <name>arz</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a219b889766de63a8dcca256df781a0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>fitness</name>
      <anchorfile>classfcmaes_1_1cmaes_1_1_cmaes.html</anchorfile>
      <anchor>a777ec51b23b513f06524b1d0a73e47ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CNMSeqOpt</name>
    <filename>class_c_n_m_seq_opt.html</filename>
    <base>CBiteOptBase&lt; double &gt;</base>
    <member kind="function">
      <type></type>
      <name>CNMSeqOpt</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a71ef10bfb9e6d7c852bb3e96156d3ed8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CNMSeqOpt</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a91ae0f70b98a4b34c31f86f483d23a31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDims</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a0db683f79e6af131ffd6e59238a6df51</anchor>
      <arglist>(const int aParamCount, const int PopSize0=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>aff1efaf9224552ae9a607a60f4ca17fc</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>optimize</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a7acf8fee1b87f954b19f8a4313e58b7d</anchor>
      <arglist>(CBiteRnd &amp;rnd, double *const OutCost=NULL, double *const OutValues=NULL)</arglist>
    </member>
    <member kind="enumeration" protection="private">
      <type></type>
      <name>EState</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a1f81889f90eb0c0e9b5f9ee1b9e1faa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>stReflection</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a1f81889f90eb0c0e9b5f9ee1b9e1faa7a2882bfaa75c67e68fad7e1b31b752a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>stExpansion</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a1f81889f90eb0c0e9b5f9ee1b9e1faa7a598ff65bb5323e300f4ba87a2155aac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>stContraction</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a1f81889f90eb0c0e9b5f9ee1b9e1faa7aa9847544ca4f0a439c38dff1d0f6db0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>stReduction</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a1f81889f90eb0c0e9b5f9ee1b9e1faa7aeb70e74fc5104ae8c19bad1a162741c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>stReflection</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a1f81889f90eb0c0e9b5f9ee1b9e1faa7a2882bfaa75c67e68fad7e1b31b752a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>stExpansion</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a1f81889f90eb0c0e9b5f9ee1b9e1faa7a598ff65bb5323e300f4ba87a2155aac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>stContraction</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a1f81889f90eb0c0e9b5f9ee1b9e1faa7aa9847544ca4f0a439c38dff1d0f6db0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>stReduction</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a1f81889f90eb0c0e9b5f9ee1b9e1faa7aeb70e74fc5104ae8c19bad1a162741c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>initBuffers</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a523bc7d383b7a2cfeef8d2a4edc12b5f</anchor>
      <arglist>(const int aParamCount, const int aPopSize, const int aCnsCount=0, const int aObjCount=1)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteBuffers</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a76ae39736ff317e9aa048d24872e7084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>findhi</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a2b301caae34520d6495dabb8fcfd5c63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>calccent</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>abe5f0b09856d48eb312d0c3a8701fdcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a67aa8414c254cfb6a9b442450850987d</anchor>
      <arglist>(const double *const ip, const double Cost)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>eval</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a1ef451e7a70db607e096c343dac37bb1</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double *const Params, double *const OutCost=NULL, double *const OutValues=NULL)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>N</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a61e71ca1c5282bcfab71d638613f8ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>M</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a7eae04524ddb0580b4657ab2d74f8837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>M1</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>ac7358629418dff64bb5febd828f64f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>M1i</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>aff51e4e10e5089f3b8a1f8286f83010e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>xlo</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a553e8ff44398fb272de572df3055c8a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>xhi</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a371cf09612300720f18981ae1e3aec9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>xhi2</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>aa38748f581346e620b42202427ae7fd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double **</type>
      <name>x</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a356c7d926e3bc14c441622a19ab12df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>y</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a49d787843631379aad7a4e096b4368e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>x0</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a752068f193d7b65015a3b3b1d34a2c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>x1</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>ad1d9690201835708ecbf9e639e7a1a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>y1</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>ac43a76bb5f3f4a5f059f17ad8e54d646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>x2</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a22d3e10bba1fbfa50a458527d285d04b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>rx</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>abc45d41e6ba582da381eb4c9999442ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>rj</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>a71dd7363e56585f44ccf346c31bf031c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>DoInitEvals</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>af1e9f2a0229d5f931333d2285894434d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EState</type>
      <name>State</name>
      <anchorfile>class_c_n_m_seq_opt.html</anchorfile>
      <anchor>af55bab09410e2932dc2983c3646fba93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::ConstantOffsetFn</name>
    <filename>classexamples_1_1rover_1_1_constant_offset_fn.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_constant_offset_fn.html</anchorfile>
      <anchor>af7cfdad285f19f48c906b8d8d5810f9a</anchor>
      <arglist>(self, fn_instance, offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1rover_1_1_constant_offset_fn.html</anchorfile>
      <anchor>a576d8386cd92eba5c789738c6c0b1d3b</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_range</name>
      <anchorfile>classexamples_1_1rover_1_1_constant_offset_fn.html</anchorfile>
      <anchor>a38021ae8d9773838abedb6b1edd5cbf6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fn_instance</name>
      <anchorfile>classexamples_1_1rover_1_1_constant_offset_fn.html</anchorfile>
      <anchor>aaf677e5435a8dcb3cd1326a129b3cd06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>offset</name>
      <anchorfile>classexamples_1_1rover_1_1_constant_offset_fn.html</anchorfile>
      <anchor>a14c11f6e5f3f23de6f0748ede0ebb66f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::ConstCost</name>
    <filename>classexamples_1_1rover_1_1_const_cost.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_const_cost.html</anchorfile>
      <anchor>a50cb3ae1e965ee6ddb5d87af627bf67d</anchor>
      <arglist>(self, cost)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1rover_1_1_const_cost.html</anchorfile>
      <anchor>abbda252f7d0e477a4f0b9f1676847aae</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>c</name>
      <anchorfile>classexamples_1_1rover_1_1_const_cost.html</anchorfile>
      <anchor>ad1b6eebf901c4c919456e157f02b5920</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>quantumcomm::constellation_udp</name>
    <filename>classquantumcomm_1_1constellation__udp.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a8804eea0d2eaffcea2926f6780aafdf8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_bounds</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>ae0a95b68653b5337476415c5f69fb960</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_ints</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>aeaefa471acf6233e861c77385d2e9695</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_nix</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a3bb518a054083acd70ee7d5e884d22bb</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_nobj</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a37eb35c15c7342a8c31a2f4a0d78c97a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_nic</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a14b241afc0f8cc6ce5203fe8de9e4f7e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_rover_constraint</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a793f1ab728c23da59e9c59f30396cf73</anchor>
      <arglist>(self, lambda0, phi0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_sat_constraint</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a228c4f828e7c8261bbeedd69d6d19573</anchor>
      <arglist>(self, d_min)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>generate_walker</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a7751ec7ef991c732aeffdb2ac59332e6</anchor>
      <arglist>(self, S, P, F, a, e, incl, w, t0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>build_graph</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a06e2f7fe5888de4c38d08d4b1f290511</anchor>
      <arglist>(self, ep_idx, pos, num_w1_sats, eta)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>average_shortest_path</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a5827f9a431732de6732e1d7a4d0a5fe5</anchor>
      <arglist>(self, G, src, dst)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>construct_walkers</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a0488615446771fa666b9fa156ab6627e</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>construct_mothership_pos</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>ac050bcb0c45f9e8238563588261417e9</anchor>
      <arglist>(self, motherships)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>construct_pos</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a46cbd774de9aefba3ee882c665072446</anchor>
      <arglist>(self, walker1, walker2, pos_r)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a13abd2e63f36cb79a4c08d96557d3d87</anchor>
      <arglist>(self, x, verbose=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pretty</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a8c60ffafb21bc14b969a3f3f4079d24d</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>example</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>abd7080d6cfab62437f82a825e53f1e53</anchor>
      <arglist>(self, verbose=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>compute_orbit_walker</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a055cad3b277eb52218b1926cf1730044</anchor>
      <arglist>(self, walker, ep0, sma)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>compute_orbit_motherships</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a538e6e0a73831c10938e12e9ec73513c</anchor>
      <arglist>(self, ep0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>ae7806f788f8f22a8be936a007a8a3deb</anchor>
      <arglist>(self, x, src, dst, ep=1, lims=10000, ax=None, dark_mode=True)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_epochs</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a9d785ce76d7893987af5b9439f8dbf16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>jds</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a6c229d5e6f94a3e1d7847a5cc85a3629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>frs</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a9e02bb6ac8e8e0aed1249640e1ea4a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ep_ref</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>aea71bfcc1860bfebd45edf3f50061450</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pos_m</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a94f4701662430239b3a0df294b8e5121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n_motherships</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>aed45357b9732be28c9301a0da997fbe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rovers_db</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>aaf595a09122ffe6d5db7ab8bc8fb8888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lambdas</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a92b6079745dcc7e51160f9a6f6e40dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>phis</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a9a86bb566548f702ddc82c688de151c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_rovers</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a1b50811adb76ab085077e2b1e275d851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>LOS</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>adeb6632a7a453441664f79cfcb9a9c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>R_p</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a9e52ccef528d06e738e4c8479347b334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w_p</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a9f5d75bc8ab2658b521fbef7c6ef4475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>eps_z</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>ab9b87fefd4eca71a6ec905ebc2354244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_t0</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>ad924507a2abeb0b7bb5e89d5f925b559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_duration</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>af578ab2b4d0d76d74336fd7756fa33bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_min_rover_dist</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a8dde60f0189c428a6b1c9b47677b9284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_zenith_angle</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>af928486a95f4c02e8139a82a5856e74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_min_sat_dist</name>
      <anchorfile>classquantumcomm_1_1constellation__udp.html</anchorfile>
      <anchor>a02e82edc599f86967503c01d2d7219f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::ConstObstacleCost</name>
    <filename>classexamples_1_1rover_1_1_const_obstacle_cost.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_const_obstacle_cost.html</anchorfile>
      <anchor>a7368f8d4316086554151a3f2d3bac59b</anchor>
      <arglist>(self, geometry, cost)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1rover_1_1_const_obstacle_cost.html</anchorfile>
      <anchor>aab2874d2bc04e873ad4757b2db74fc18</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>geom</name>
      <anchorfile>classexamples_1_1rover_1_1_const_obstacle_cost.html</anchorfile>
      <anchor>aaa03dec8b1545604bf243a8501888bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>c</name>
      <anchorfile>classexamples_1_1rover_1_1_const_obstacle_cost.html</anchorfile>
      <anchor>a29bfbb10b896deebab2ec8cb4ffa0fc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBiteOpt::CParOpt</name>
    <filename>class_c_bite_opt_1_1_c_par_opt.html</filename>
    <templarg>class T</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMinValues</name>
      <anchorfile>class_c_bite_opt_1_1_c_par_opt.html</anchorfile>
      <anchor>a661fa30fe699ca82972c1999507fcc10</anchor>
      <arglist>(double *const p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMaxValues</name>
      <anchorfile>class_c_bite_opt_1_1_c_par_opt.html</anchorfile>
      <anchor>a0eb7bdd22fa894f836fbea2141ec3f39</anchor>
      <arglist>(double *const p) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>optcost</name>
      <anchorfile>class_c_bite_opt_1_1_c_par_opt.html</anchorfile>
      <anchor>a4ca168bf20b06cb767d052e8610c9258</anchor>
      <arglist>(const double *const p)</arglist>
    </member>
    <member kind="variable">
      <type>CBiteOpt *</type>
      <name>Owner</name>
      <anchorfile>class_c_bite_opt_1_1_c_par_opt.html</anchorfile>
      <anchor>a97233e62721d5fe19b78d2d5492f7f9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Crfmnes</name>
    <filename>classfcmaes_1_1optimizer_1_1_crfmnes.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes.html</anchorfile>
      <anchor>a7aa38ceaaa7ce8a91a9932d1d893217e</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=32, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[float] sdevs=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes.html</anchorfile>
      <anchor>aeaf53b0b1cef69245496384c9c5569fb</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=0.3, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes.html</anchorfile>
      <anchor>abf110ededa79f1101d0acefadef018f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes.html</anchorfile>
      <anchor>a784caafbf6afcebd51d20067ead7aaae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes.html</anchorfile>
      <anchor>af4d308e51cb40add76e8a257dc54e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sdevs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes.html</anchorfile>
      <anchor>ac325129f209caae80b300744683acf34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes.html</anchorfile>
      <anchor>a3dbb8d59213de71c0f3b5b9b74c3751b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::crfmnescpp::CRFMNES_C</name>
    <filename>classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c.html</anchorfile>
      <anchor>ace27ab32b6fd227caa1a9877c52f54d1</anchor>
      <arglist>(self, int dim, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.3, Optional[int] popsize=32, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=False, Optional[bool] use_constraint_violation=True, Optional[float] penalty_coef=1E5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__del__</name>
      <anchorfile>classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c.html</anchorfile>
      <anchor>a8108ee1a2f3dd941e1105a3491269572</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>ask</name>
      <anchorfile>classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c.html</anchorfile>
      <anchor>a70d038e8b7f0c094ef4eb618fffbb1ed</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tell</name>
      <anchorfile>classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c.html</anchorfile>
      <anchor>a30327c6b3f1ecc4add777f4a74e83533</anchor>
      <arglist>(self, np.ndarray ys)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>population</name>
      <anchorfile>classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c.html</anchorfile>
      <anchor>a47083f6baea2a536011cbb100e69f4d5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>result</name>
      <anchorfile>classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c.html</anchorfile>
      <anchor>a9dec09b9656f828fa32d78a409cb51d4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ptr</name>
      <anchorfile>classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c.html</anchorfile>
      <anchor>a5be4aaaff3704c64f6579594e6aa32fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c.html</anchorfile>
      <anchor>ad99f6494d91a596c6025dc5dceea0970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c.html</anchorfile>
      <anchor>a3a0ed9ee6a06fadc715153d6be9145b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Crfmnes_cpp</name>
    <filename>classfcmaes_1_1optimizer_1_1_crfmnes__cpp.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes__cpp.html</anchorfile>
      <anchor>a46da4d64dafe49cf3de81ac538bd96c7</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=32, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[float] sdevs=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes__cpp.html</anchorfile>
      <anchor>a28a1d5e195fa924386bd76c29a9f682d</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=0.3, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes__cpp.html</anchorfile>
      <anchor>adf8a89f1eba94649ba1fbafd89e68ba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes__cpp.html</anchorfile>
      <anchor>a241df60d5265b688e9959feca89318fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes__cpp.html</anchorfile>
      <anchor>a01fc558e855be7732876a6e5facf3d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sdevs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes__cpp.html</anchorfile>
      <anchor>a87d76bc7c9ce8d7cce77354a5bd3415b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_crfmnes__cpp.html</anchorfile>
      <anchor>a8407a495267d4a58ad2b1364eb49b79e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>crmfnes::CrfmnesOptimizer</name>
    <filename>classcrmfnes_1_1_crfmnes_optimizer.html</filename>
    <member kind="function">
      <type></type>
      <name>CrfmnesOptimizer</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a05253e344b7c87ba83627a8b15bf384b</anchor>
      <arglist>(int64_t runid_, Fitness *fitfun_, int dim_, vec m_, double sigma_, int lamb_, int maxEvaluations_, double stopfitness_, double penalty_coef_, bool use_constraint_violation_, int64_t seed)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrfmnesOptimizer</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a23aa6d542c16d17a68a0fd29b13b36b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doOptimize</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>aa451fe19e5c4b4617099daf96ed4d171</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>getPopulation</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a2351c27b7cd4710d802d0a86dd6ea39f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>getBestX</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a7ee78ff487813e794ab15e0374a35f6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBestValue</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>abea9bcf06910aef210b31f43504c340c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIterations</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a4735fca2ded46c9ae1e713ae3d77b152</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStop</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>acdb727b084e729ed508db581aaee4ee7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Fitness *</type>
      <name>getFitfun</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a07a2bffa713685aa8e13ff615d46081c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDim</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a7f114cfa6d21f79ace8fed2094960cce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPopsize</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ab5d2acf44525abcdfae3a8ec346f345a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>ask</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ac3695788414c855140e6615040309e42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tell</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>aae1806b3f5cca0f2f27363c38c83a836</anchor>
      <arglist>(vec &amp;evs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>cexp</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a1c0bc5770261a21ed819387c339b3c05</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>c1</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a61b800bdcb2be2c0add38eabc9bb2df5</anchor>
      <arglist>(double lambF)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>eta_B</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ae0b69c9a8ba0266efb3fe667de42134f</anchor>
      <arglist>(double lambF)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>alpha_dist</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a13448f49cc0f161fa5fdbd6430cc7804</anchor>
      <arglist>(double lambF)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>w_dist_hat</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ad0e305a53657d5e357d198610c0c21e3</anchor>
      <arglist>(mat z, double lambF)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>eta_stag_sigma</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>afa07fb187d0982f0bdcf00c943e9e641</anchor>
      <arglist>(double lambF)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>eta_conv_sigma</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a1748dadb5cbf900c7835cabfbb898456</anchor>
      <arglist>(double lambF)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>f</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a8f9c2b6e89e25a5c3e0d50a8eb4011be</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>f_prime</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a7f306ac3a58b6ed9f29babc44fbe466b</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>get_h_inv</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>af30c10c32f611845931c3a8dc034874f</anchor>
      <arglist>(int dim)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>num_feasible</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>adae78062208e6dc79abad146a0461ec3</anchor>
      <arglist>(const vec &amp;evals)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ivec</type>
      <name>sort_indices_by</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a914d39cf65f7277f14b0ed3cbf4e0d73</anchor>
      <arglist>(const vec &amp;evals, mat z)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int64_t</type>
      <name>runid</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a94ef5ecb5b443d6bea2755f8f5ff101e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Fitness *</type>
      <name>fitfun</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a4c445b517a62b00b96b57dfb9813d6df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ae8f11358c33f0923b4a9e8b5717fcc9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>m</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>af0db5eb5a3f56f27d4b98d761e72d1a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>sigma</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a4c0820d04c88fd8fee328b76e876b802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>lamb</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ab1d3f2692777e3bd4c769b8a10b9a3cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mu</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a36b0425100406234215eea1c9b13e9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>use_constraint_violation</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a129a0aa8de197876c8b303efb52aec42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pcg64 *</type>
      <name>rs</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>aadf548da26f22c15246e777fd2a5f850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>v</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>acbc3a84327f441962eeda759eb1e888c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>D</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a684b752fdb0d7c4b1f2cdf467930faf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>penalty_coef</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a8e0fa412cfd0b5c7e65ecab47b329cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>w_rank_hat</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a276111d6b0fdeb972925d988901da9b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>w_rank</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a696d7a7a6fa5842a0aefc5c61de232b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mueff</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>aab8f01e12fdcb233497debd49422d67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>cs</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>aff1006f7662b3b17b824b151b40a8165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>cc</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>aa5bfe0c1ff87f0fefc54e2246a06c2ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>c1_cma</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>acf5da4897c7d05b4a560483aa902dc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>chiN</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>aa5b420b40b5781750b33e17ccdb2d2d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>pc</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ac80232587fb6c3f7ee255f6f008cde98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>ps</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ae3129ee6c7c9205a66634a2f2df6ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>h_inv</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>afb276c3887c0b199f31b724b3d4c82e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>eta_m</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a352856a88945aa103202f415a9b8b90f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>eta_move_sigma</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>aa686eecadca99ea7ee1064afda80c369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>g</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>aad0299e6e1ed76e143db1ef75d1a3c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>no_of_evals</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a85f1a006b0a3aa878e22e0b65517142e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>z</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>af8751cd4ca7041f11f83cb5e3faffde1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>f_best</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ae7104ec4f55d2e4bedb9ac8e885cc3d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>x_best</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>af415b05895f150b3f59613fb3e5a67ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>xs_no_sort</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ad68ee5ba071c8eb355a3fbe1b306adb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>evals_no_sort</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a676c36938614690f4db2c6d9ccee7df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a9979f360a5500c2e9eb53522659bd745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>maxEvaluations</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>abbde930c83008df3cc0ffc0274f9d42f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stopfitness</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ae32d48173c079d73cce875635b480add</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>stop</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a052fd208dd9ea12039373c6fc9d3f272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>normv</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a7bc978613195f2ba7b83cc3a48e102ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>normv2</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a864c3927e72f4eac9fa682e84396cd0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>vbar</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>aa12a412b683512f38cfe0dc8e2575dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>y</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>a70a1083d613aed87133542c0817f0df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>x</name>
      <anchorfile>classcrmfnes_1_1_crfmnes_optimizer.html</anchorfile>
      <anchor>ab3f078f7cce59803c94ed53e685f2e3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSMAESOpt</name>
    <filename>class_c_s_m_a_e_s_opt.html</filename>
    <base>CBiteOptBase&lt; double &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>updateDims</name>
      <anchorfile>class_c_s_m_a_e_s_opt.html</anchorfile>
      <anchor>a962bc70900bbe39b2997eb8bf3249013</anchor>
      <arglist>(const int aParamCount, const int PopSize0=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>class_c_s_m_a_e_s_opt.html</anchorfile>
      <anchor>ae9526767119fdd032998923fdb4383aa</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0, const double *const sdevs=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sample</name>
      <anchorfile>class_c_s_m_a_e_s_opt.html</anchorfile>
      <anchor>a278f47b6393fed2d1c9ccffee0bc05f9</anchor>
      <arglist>(CBiteRnd &amp;rnd, double *const op) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>optimize</name>
      <anchorfile>class_c_s_m_a_e_s_opt.html</anchorfile>
      <anchor>ae6322c2f8523f5a70a5d5bac5b9baa43</anchor>
      <arglist>(CBiteRnd &amp;rnd, double *const OutCost=NULL, double *const OutValues=NULL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isFeasible</name>
      <anchorfile>class_c_s_m_a_e_s_opt.html</anchorfile>
      <anchor>a65fddc11f5608ddba75e7994441a5a5c</anchor>
      <arglist>(const double *const x) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteOrt</type>
      <name>Ort</name>
      <anchorfile>class_c_s_m_a_e_s_opt.html</anchorfile>
      <anchor>a9dcc2658933cb8f1689bd5bf55f4e4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>cure</name>
      <anchorfile>class_c_s_m_a_e_s_opt.html</anchorfile>
      <anchor>ad423ccfeb5d6b9ae4a6218dd10ab5892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>curem</name>
      <anchorfile>class_c_s_m_a_e_s_opt.html</anchorfile>
      <anchor>a17c264dd72b9ca488ce6cfb53a80b4fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSpherOpt</name>
    <filename>class_c_spher_opt.html</filename>
    <base>CBiteOptBase&lt; double &gt;</base>
    <member kind="function">
      <type></type>
      <name>CSpherOpt</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a3ff6a1a07d0c5f3ac9c133b021b190ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CSpherOpt</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a8b6557f101813e721289a7c8edecf349</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDims</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a0be21abe1246b154cb848bd338bf1723</anchor>
      <arglist>(const int aParamCount, const int PopSize0=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a84b141fe50be3806222b2ad3d0846aaf</anchor>
      <arglist>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>optimize</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a1515c953ba95c15ca8722ad8fb46523d</anchor>
      <arglist>(CBiteRnd &amp;rnd, double *const OutCost=NULL, double *const OutValues=NULL)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initBuffers</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a00c0facb71cb0ef24498e77ce68e6c04</anchor>
      <arglist>(const int aParamCount, const int aPopSize, const int aCnsCount=0, const int aObjCount=1)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteBuffers</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a6491915dd708c2791682a529005c035e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a9bda67c2fee53ca92fc6f90bd99b459d</anchor>
      <arglist>(CBiteRnd &amp;rnd)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>WPopCent</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a5f268cc854a7de1995a54e9b73f87e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>WPopRad</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a2598f95d32a6dcb9c25366f89f795912</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>JitMult</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>adb82e9f193684e7b21d60e35bd38237f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>JitOffs</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>ae8093a1a0cab7fae9e8762ff306c4827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>Radius</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a28e10a5d2dad5244fb97197e7e85095d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>EvalFac</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a92e80374efa3c695155056dc9bed3001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>cure</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a0d833587909f28ade47110ec158b0d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>curem</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>ae47ab981059bd16abc005b6c35c90259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>DoCentEval</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a3d0802a35e4655fc88d6082df144c20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>CentPowSel</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a03ab19cfd5185229176166ccc011f160</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 4 &gt;</type>
      <name>RadPowSel</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>a29f0077440e7edc368830ae2582181ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CBiteSel&lt; 3 &gt;</type>
      <name>EvalFacSel</name>
      <anchorfile>class_c_spher_opt.html</anchorfile>
      <anchor>adb977f181df718708fe31cce2f7ee20b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::house::cv_problem</name>
    <filename>classexamples_1_1house_1_1cv__problem.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1house_1_1cv__problem.html</anchorfile>
      <anchor>a5ab4547383841ff00ffb34758ea90f0a</anchor>
      <arglist>(self, pfun, bounds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1house_1_1cv__problem.html</anchorfile>
      <anchor>a10c3ff3227c149ee1be4501cb49caa23</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>name</name>
      <anchorfile>classexamples_1_1house_1_1cv__problem.html</anchorfile>
      <anchor>a18240369becd1f47b5d8d2818cd7773b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classexamples_1_1house_1_1cv__problem.html</anchorfile>
      <anchor>a47e86edf09df1a3ee84d89fa89c18ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pfun</name>
      <anchorfile>classexamples_1_1house_1_1cv__problem.html</anchorfile>
      <anchor>ac51707e91a75854aa1f4dbcb99aa5e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1house_1_1cv__problem.html</anchorfile>
      <anchor>a705b53208512700d7536b7caf171997b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evals</name>
      <anchorfile>classexamples_1_1house_1_1cv__problem.html</anchorfile>
      <anchor>ac5def97ca99e841fe6910fe0eccfba60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classexamples_1_1house_1_1cv__problem.html</anchorfile>
      <anchor>a57e1a06abf880f4f02944fa746deea27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classexamples_1_1house_1_1cv__problem.html</anchorfile>
      <anchor>a2544581b4a19c5a1108142982c0f8e20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Da_cpp</name>
    <filename>classfcmaes_1_1optimizer_1_1_da__cpp.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_da__cpp.html</anchorfile>
      <anchor>a6041f0fa9c49b4908d638bc2c502b7a0</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[float] stop_fitness=-np.inf, Optional[bool] use_local_search=True, Optional[ArrayLike] guess=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_da__cpp.html</anchorfile>
      <anchor>ad66e1bd6c6235662127232d705d890ad</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_da__cpp.html</anchorfile>
      <anchor>a1ee5e02f5bdc6f640595c081eb01c230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use_local_search</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_da__cpp.html</anchorfile>
      <anchor>acb3f2d082778319925251a69518fa25a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_da__cpp.html</anchorfile>
      <anchor>adb6bcafec8f433b6d7971da3c9bad807</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Damp</name>
    <filename>struct_damp.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>struct_damp.html</anchorfile>
      <anchor>a5b5c78ee17f6b01bbedd2c9490fe706d</anchor>
      <arglist>(const state_t &amp;y, state_t &amp;yDot, const double)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>struct_damp.html</anchorfile>
      <anchor>ac4918310ac12cfdf15bb7fb8bccbf930</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dual_annealing::DARunner</name>
    <filename>classdual__annealing_1_1_d_a_runner.html</filename>
    <member kind="function">
      <type></type>
      <name>DARunner</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>ab74bf44c93edc55f999fb2605f5ff8fa</anchor>
      <arglist>(Fitness *fun_, vec &amp;x0_, long seed_, bool use_local_search_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DARunner</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>a76caa1fe49af670bbdedc500bffe8549</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>search</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>ae439a61ba872582e64f2fc32568cd669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>bestX</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>ac923ec281c800062d6b3e1e4e778183f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>bestY</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>a4b0f48a1d4ae3a336fa8fd7ac5412274</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MAX_REINIT_COUNT</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>af8ca542fabea4845d0f5328e5352a35e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>temperature_start</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>aa8381759804d5cc3b4292b52fac60839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>qv</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>ac82ca2d8cb2aa15d9b258acd72457a54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>qa</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>af08f83bd6889eab07940f8449e82ac28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>use_local_search</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>a78921fe0a6d5da888ecfea3c94032d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>maxsteps</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>a7040dfd6a925a6eb8f88bc0b541d5ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>temperature_restart</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>a0ef3f5607f26f6f636f7232fb89d068f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Fitness *</type>
      <name>owf</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>a317b83fdc0799403979dd0b297adc415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pcg64 *</type>
      <name>rs</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>ae1c19d12feed61dc3f5933b7b426ad73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EnergyState *</type>
      <name>es</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>af151a579442ae1acac266642e5aaf639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>StrategyChain *</type>
      <name>sc</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>ac65e14436ec2b8978a0314de5cf44fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VisitingDistribution *</type>
      <name>vd</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>a9151deb647c2beb8201767b00a79785b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iter</name>
      <anchorfile>classdual__annealing_1_1_d_a_runner.html</anchorfile>
      <anchor>a0a4a5f10e88460ae6bd092917af3e5e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::de::DE</name>
    <filename>classfcmaes_1_1de_1_1_d_e.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>acb3ffe72d7d81180fdf03c9c293ba663</anchor>
      <arglist>(self, int dim, Bounds bounds, Optional[int] popsize=31, Optional[float] stop_fitness=-np.inf, Optional[int] keep=200, Optional[float] F=0.5, Optional[float] Cr=0.9, Optional[Generator] rg=Generator(PCG64DXSM()), Optional filter=None, Optional[ArrayLike] ints=None, Optional[float] min_mutate=0.1, Optional[float] max_mutate=0.5, Optional[Callable] modifier=None)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>ask</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>acc2a7649411442c90167d856c673ccb4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>aa9de9d67ac999658a523d2ad8976954b</anchor>
      <arglist>(self, ArrayLike ys, Optional[ArrayLike] xs=None)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>population</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a011bec0b481334ccc6d957fb89d306a7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>result</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>ab58df13ca3623bcce727576e5d354bbc</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[int, np.ndarray]</type>
      <name>ask_one</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a6e647b4dbacab60b482242c80b0a8582</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell_one</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a882c7a58bf3f14c342d2a0e0700e31ef</anchor>
      <arglist>(self, int p, float y, ArrayLike x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>apply_fun</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a4f28f983cc8d831a834065b9ad762dc1</anchor>
      <arglist>(self, x, x_old, y_old)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>do_optimize</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a32845de73093acd3cc921a173958d818</anchor>
      <arglist>(self, fun, max_evals)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>do_optimize_delayed_update</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a2d6eb4d91b58018e74be863ecf71862b</anchor>
      <arglist>(self, fun, max_evals, workers=mp.cpu_count())</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a82571c812edbae94b8dbe570a781e078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lower</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>abfb162caa78015d04524bf151b9dd823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>upper</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a779d053f6915d9a593bec26d7a4dab45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>ac57257a177f51fb2637120cc3bf7ac55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a22676b41ab3ab0d910bda941601cb9c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>keep</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a79b95ab48735e11bd612ddbbc65d82ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rg</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a52523fe4b73185a4ff613238c05dfbe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>F0</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>aab11943c3f10fffbe188f1b187f93c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>Cr0</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a9e6a1d8de9d1227bc0d069a0ad0df0f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stop</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a34e8b51b9574c58baf0223914b3436d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a719a10d4fc296d619022bb065bb7fdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>evals</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a26f323c02bc649cb1d06c06de41b31bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>p</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>ac79e3e82f51ac3afc9945899353603e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>improves</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>ab06bd7ef3c26ed185460f070462df5e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>filter</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>aa235fc388bec48ff90cca10f3e82fcb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ints</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a801386a81a80f7c0f5a8c7657b6e8b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_mutate</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a32aa627efd58ac0864e1abab290d008a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_mutate</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a87eeb5f5b78c7eb88f301ee8f02d0b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>modifier</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a7698336acbd18cfc93652598fe8f253e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>acc7ff6a5539d9f46c63aaf53152479fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n_evals</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a97c10b3a56ea2da4e71cb7cb927a6a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>time_0</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a976d25de99114d1eca7746bee992275a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>asked</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>af99e0a33e3026139a617ba2f619455a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>best_i</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>ab82523baab98d9c3ab365204dbdadd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_x</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a7832310bdca0281b9cc91f4e2eae603e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_value</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>ac06303559818f85d970746c3dc243e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>x</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a7c0d515bba4c2bdaf12be9da6adc1c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>x0</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a3eca7e626d9f80684912065519cb7652</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>y</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>abc7d518a5e4b0099bf8bbaaa88cab8eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pop_iter</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a4ae2c1ae1c81d24a5a5baf010063d492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>ad346a5d42fbaec4c0fa1eed13ca09757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_evals</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>acf33e850252a8c82db8a69cfa7e8ea9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Cr</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>aa02d15c526823d8e56c8248067637c7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>F</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a01a705e747ab78e6fac28e1e0b79d59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_init</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>ab410b147f0676eb8f0cee48fd1625b0e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_next_x</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>af65d189c855a19bc82ea60b185482757</anchor>
      <arglist>(self, p)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_next_improve</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a75e2c22d49dde6bd8f31572ef39152d7</anchor>
      <arglist>(self, xb, x, xi)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_sample</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>adf6645de9d62c0900bad93d5a6934a4b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_feasible</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>ac3453c9ebcc0897aedb6a53a8b93ffcd</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_modifier</name>
      <anchorfile>classfcmaes_1_1de_1_1_d_e.html</anchorfile>
      <anchor>a61072489f9cd73c41286fbaf8d89357b</anchor>
      <arglist>(self, x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::De_ask_tell</name>
    <filename>classfcmaes_1_1optimizer_1_1_de__ask__tell.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__ask__tell.html</anchorfile>
      <anchor>a438d0e4e3eb02efc66eb6a0e7d2728e1</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=None, Optional[float] stop_fitness=-np.inf, Optional[int] keep=200, Optional[float] f=0.5, Optional[float] cr=0.9)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__ask__tell.html</anchorfile>
      <anchor>add27360c14d87672fd1c81a406d8b388</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__ask__tell.html</anchorfile>
      <anchor>ad7be76f5ffe7fc538f9d630e8ebf4137</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__ask__tell.html</anchorfile>
      <anchor>aa94dd4195cc987dcedf14f4c483c1b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>keep</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__ask__tell.html</anchorfile>
      <anchor>aaa99670844fc1389c8c2149247cdff1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>f</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__ask__tell.html</anchorfile>
      <anchor>a059ad704d037181b31185585a82c9941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cr</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__ask__tell.html</anchorfile>
      <anchor>a38c525587b6c8ee2d3776273ac3846ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::decpp::DE_C</name>
    <filename>classfcmaes_1_1decpp_1_1_d_e___c.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1decpp_1_1_d_e___c.html</anchorfile>
      <anchor>afcd3a8216d55e778558eada4cdf9c6dc</anchor>
      <arglist>(self, Optional[int] dim=None, Optional[Bounds] bounds=None, Optional[int] popsize=31, Optional[int] keep=200, Optional[float] f=0.5, Optional[float] cr=0.9, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[ArrayLike] ints=None, Optional[float] min_mutate=0.1, Optional[float] max_mutate=0.5, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.3, Optional[float] min_sigma=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__del__</name>
      <anchorfile>classfcmaes_1_1decpp_1_1_d_e___c.html</anchorfile>
      <anchor>ab22d38f2f4822b861fa7217725d8db1a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.array</type>
      <name>ask</name>
      <anchorfile>classfcmaes_1_1decpp_1_1_d_e___c.html</anchorfile>
      <anchor>ac938731f80bce720692af9b7b84e41d0</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tell</name>
      <anchorfile>classfcmaes_1_1decpp_1_1_d_e___c.html</anchorfile>
      <anchor>ad53cc4b5553a819096b47115e1f49b42</anchor>
      <arglist>(self, np.ndarray ys)</arglist>
    </member>
    <member kind="function">
      <type>np.array</type>
      <name>population</name>
      <anchorfile>classfcmaes_1_1decpp_1_1_d_e___c.html</anchorfile>
      <anchor>ae6321ea6313c6ef9bf44d492aaa619f8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>result</name>
      <anchorfile>classfcmaes_1_1decpp_1_1_d_e___c.html</anchorfile>
      <anchor>a2f794b6d8709f5b14d5f56695bb8d8ff</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ptr</name>
      <anchorfile>classfcmaes_1_1decpp_1_1_d_e___c.html</anchorfile>
      <anchor>ad9095931be109c4c732f10d7791c54fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1decpp_1_1_d_e___c.html</anchorfile>
      <anchor>ad122a7d34bd51afeb06228ad811f85ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1decpp_1_1_d_e___c.html</anchorfile>
      <anchor>a174ff7e79ef1f1d187dc0197e95256e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::De_cpp</name>
    <filename>classfcmaes_1_1optimizer_1_1_de__cpp.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__cpp.html</anchorfile>
      <anchor>a1f80db786b4efa5e8e7b87f372f57cf9</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=None, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[int] keep=200, Optional[float] f=0.5, Optional[float] cr=0.9, Optional[ArrayLike] ints=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__cpp.html</anchorfile>
      <anchor>a339827fb8e27dd33fa0d38ee11829e7c</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__cpp.html</anchorfile>
      <anchor>aeee0354a9a88e72a8de9a14518e0b631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__cpp.html</anchorfile>
      <anchor>a8a7c5c4f984128d0bf719d2042b5b6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__cpp.html</anchorfile>
      <anchor>ac215b9338b1e36507d52f271011f2623</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>keep</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__cpp.html</anchorfile>
      <anchor>ac6682fdfdc8f6b55907437b02e679657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>f</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__cpp.html</anchorfile>
      <anchor>a59179389fcc9cb26537457c5330ffd49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cr</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__cpp.html</anchorfile>
      <anchor>a9148bc8b53eac219089f0ba26797748a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ints</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__cpp.html</anchorfile>
      <anchor>afed059c9c4f9fbd12aca70b2d807bc26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__cpp.html</anchorfile>
      <anchor>a3b20c4a11064d97a46e01e0fa1212497</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::benchmark_gtop_pygmo::De_pyg</name>
    <filename>classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg.html</anchorfile>
      <anchor>a9f4fc297f56e80492558024b35ffa75c</anchor>
      <arglist>(self, max_evaluations=50000, popsize=None, stop_fitness=-np.inf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>minimize</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg.html</anchorfile>
      <anchor>ac378a2bf0efbc53ed2ef677fa017b916</anchor>
      <arglist>(self, fun, bounds, guess=None, sdevs=None, rg=Generator(MT19937()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg.html</anchorfile>
      <anchor>a3d8f82742cfd9cc92c3f9711096abbea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg.html</anchorfile>
      <anchor>a00ba15f8005bd8a195e420220b6b4773</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::De_python</name>
    <filename>classfcmaes_1_1optimizer_1_1_de__python.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__python.html</anchorfile>
      <anchor>a117ce72331b424a57089228ca286e29b</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=None, Optional[float] stop_fitness=-np.inf, Optional[int] keep=200, Optional[float] f=0.5, Optional[float] cr=0.9, Optional[ArrayLike] ints=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__python.html</anchorfile>
      <anchor>aee98e8d42f4a5556e2bfcbca9208b325</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__python.html</anchorfile>
      <anchor>a69e1e5d4ef59774da8d311e5414f423b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__python.html</anchorfile>
      <anchor>add6597366425631f6da2437eeaf81068</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>keep</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__python.html</anchorfile>
      <anchor>a352951220906583104f8431b7d0bc7d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>f</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__python.html</anchorfile>
      <anchor>a8f01f6f1c691b49141a1be706362fa84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cr</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__python.html</anchorfile>
      <anchor>a8b3d07574a419fe034e45103e3fae567</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ints</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__python.html</anchorfile>
      <anchor>ac7722b0c33dcef4798a5755abe2d424f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_de__python.html</anchorfile>
      <anchor>ac68ccfdd7268fe6a21f708593b6bc13e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>differential_evolution::DeOptimizer</name>
    <filename>classdifferential__evolution_1_1_de_optimizer.html</filename>
    <member kind="function">
      <type></type>
      <name>DeOptimizer</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a88f53bfd99efb252ac0e6d53b1457edf</anchor>
      <arglist>(long runid_, Fitness *fitfun_, int dim_, int seed_, int popsize_, int maxEvaluations_, double keep_, double stopfitness_, double F_, double CR_, double min_mutate_, double max_mutate_, bool *isInt_, const vec &amp;guess_, const vec &amp;inputSigma_, double minSigma_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DeOptimizer</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a33d01cb4aa66ec253c8505a466298e4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rnd01</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a922dfb6a6903d18311a87e2fe553c78b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rndInt</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>ad1842fb1469f6b2e9f341afbe3b26d69</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>sample</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a750fb2ff0c0981be30414916d8c872bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sample_i</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a427ae953a5503dc4369da1bbb338fe67</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_mean</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>ac2c05bd08ebf41841869016986381905</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>nextX</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a8babf7e82f12af63653d0d26df11e8b0</anchor>
      <arglist>(int p, const vec &amp;xp, const vec &amp;xb)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>next_improve</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>aff18de19791b75f799d4aa5e9c60b5fa</anchor>
      <arglist>(const vec &amp;xb, const vec &amp;x, const vec &amp;xi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modify</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a9f8d2654bcad80c32d9358faa62cebd9</anchor>
      <arglist>(vec &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>ask</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>af7935d4c0d376a000470f2b943aadbd6</anchor>
      <arglist>(int &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>accf9be34ac5d30b9a2df15dba24f4dce</anchor>
      <arglist>(double y, const vec &amp;x, int p)</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>askAll</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a0dcd44cbcddd9e0dde1ccd2ea5fbf96d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tellAll</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>aa1d0f0d9ddbb192cb30b470d8c3c1af0</anchor>
      <arglist>(vec &amp;ys)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doOptimize</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a18f5c0a1c724443666e4827126716315</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_optimize_delayed_update</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a0af3433f0f60f99f8a9fbf9f10f36360</anchor>
      <arglist>(int workers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a4a4034e862bdd75aead3dd069ec36583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>getBestX</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>af3cb231427f53598ae45ba8c320b1231</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBestValue</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a9588f30973550e4b1083fd67641dadbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIterations</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>ab8e8cfb1d04f3cd8dd5c82978f425eb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Fitness *</type>
      <name>getFitfun</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>ab5aa75486c266ec520613a4e00c2ad52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDim</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>aa3653941bc72f8c6e32688f1e09ba76b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>getPopulation</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a4842f3a4aae6868fbe69fdc154032ca5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStop</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a4cf73cd0c13cf54880eb91edb58db9a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPopsize</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a7c4a14f47ad8a07a84cad2132661b004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>runid</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a1b66dc0c337d6bab9b3235c7eeeb49af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Fitness *</type>
      <name>fitfun</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a5224214768edd53cecbf3272d501f463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>popsize</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a2d3f9b551728af32ae3535ccd8fe191e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a33fe24d499544386815402a4406ea791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>maxEvaluations</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a4c5093a5bde2ba68233dcaf789fe69f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>keep</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a232a3e2545baae1701e76f0a2c6eeec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stopfitness</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a657515bc56ba9827a222186364996c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>aa98729ab4bc1be4fa22a3a7340a1ea3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>bestY</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a9fa4859d97afa85e9c3f8452cc0d6b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>bestX</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a7576298bacac75697507e4f90fc59c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>bestI</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>ac23f0d4e38b52955528bf2cbe349992f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>stop</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a3ee567dd0543a9e7cbd7735746ac3f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>F0</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>ae0a4dcecee1e26d0e8e87b783e324fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>CR0</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a8b2f3c51406460c57cfa59bc406d8078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>F</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a9f332b775ee1241daa8d431e21d415e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>CR</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a5422a64ca391813662eeddb2c8cc02ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pcg64 *</type>
      <name>rs</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a9f02b77e27171b51fefa32b5141ae248</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>popX</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a765bf8a43ae4db32b8de45ef4282b2a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>popX0</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>aa20f437a2e42ae30421404788d2d3f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>askedX</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>abbc98f32e02cab03f4bc226fa732dcfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ivec</type>
      <name>askedP</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a5227e652d09cf3cf711eefba448a06f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>popY</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a6a1b6520ac72b27ee3a574beb03800af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>popIter</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a0fbfaa180253cf0a90ca9130199f53bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>queue&lt; vec &gt;</type>
      <name>improvesX</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a487e97cae40baef80b638c79338880af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>queue&lt; int &gt;</type>
      <name>improvesP</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a58da822d0a571d1c5fc502f0de64dc7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>pos</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a942e3699e1766ab34111b48281792ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>min_mutate</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a37f47b61da3d427b3c999546203eafc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>max_mutate</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a3dae73ea54686df165fc76d29be7aa58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool *</type>
      <name>isInt</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a22b7150d5c13e282b696140e6c97af50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useNormal</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a47d96cda10236c7e0cea6e50bec7d7dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>sigma</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>ab770253e46d1dc717520ceddcf0c9a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>mean</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a58ba93e54c9364339defb2c2cfe3ec4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>maxSigma</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a10983927cb3fb32ef29b0e00d648cdc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>minSigma</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>ac59ec7255ba605669b82e5f06acfe580</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>minSigmaVal</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a56b8f5ae70f5f635c9eb2981238f0e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>meanHist</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>ad74151d3e6bcde089f6bf162f4033b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>meanHistIndex</name>
      <anchorfile>classdifferential__evolution_1_1_de_optimizer.html</anchorfile>
      <anchor>a7a9d221e815553826c0f1cb6b1585148</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Differential_evolution</name>
    <filename>classfcmaes_1_1optimizer_1_1_differential__evolution.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_differential__evolution.html</anchorfile>
      <anchor>a92e2de95c88f14f16c601cb783f9e64d</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_differential__evolution.html</anchorfile>
      <anchor>a8096359879e83b09f09bea6b73d59776</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_differential__evolution.html</anchorfile>
      <anchor>a6acd0d736b610c904c1ecdec83ee1b42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Dual_annealing</name>
    <filename>classfcmaes_1_1optimizer_1_1_dual__annealing.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_dual__annealing.html</anchorfile>
      <anchor>ae4f414368932eac040e7431fec8fd6bc</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[bool] use_local_search=True)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_dual__annealing.html</anchorfile>
      <anchor>aae221326dd0bd3d5b646badbf6a59133</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>no_local_search</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_dual__annealing.html</anchorfile>
      <anchor>a9b9402e2a5a598d792164d460b82056d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::testfun::Eggholder</name>
    <filename>classfcmaes_1_1testfun_1_1_eggholder.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_eggholder.html</anchorfile>
      <anchor>abecdc4c5978776ec647f0b9424c6b90e</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::testfun::Elli</name>
    <filename>classfcmaes_1_1testfun_1_1_elli.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_elli.html</anchorfile>
      <anchor>ac187a52acd0202adc67ac36884b725d1</anchor>
      <arglist>(self, dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::robot::end_effector</name>
    <filename>classexamples_1_1robot_1_1end__effector.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1robot_1_1end__effector.html</anchorfile>
      <anchor>a0de4d854fd164f2e08f91f9eefada154</anchor>
      <arglist>(self, b2world_interface, init_pos, base, init_angle, hand_shape=&apos;rectangle&apos;, hand_size=(0.3, 1))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_pos</name>
      <anchorfile>classexamples_1_1robot_1_1end__effector.html</anchorfile>
      <anchor>a2c76b9613ca2ddad07bf118ebcaaa4e4</anchor>
      <arglist>(self, pos, angle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>apply_wrench</name>
      <anchorfile>classexamples_1_1robot_1_1end__effector.html</anchorfile>
      <anchor>a254df906f14175a25460e69206232c6d</anchor>
      <arglist>(self, rlvel=(0, 0), ravel=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_state</name>
      <anchorfile>classexamples_1_1robot_1_1end__effector.html</anchorfile>
      <anchor>a06b2e91a5ef8b9898b0fccfed7e0d562</anchor>
      <arglist>(self, verbose=False)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hand</name>
      <anchorfile>classexamples_1_1robot_1_1end__effector.html</anchorfile>
      <anchor>a797dad778a18e493f3792c8469b2e9c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hand_shape</name>
      <anchorfile>classexamples_1_1robot_1_1end__effector.html</anchorfile>
      <anchor>a72964828d20b8c4332f27f8e8852b7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hand_size</name>
      <anchorfile>classexamples_1_1robot_1_1end__effector.html</anchorfile>
      <anchor>ac0b2cde5536ed4a0c2fbb1b14fe39dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>forceunit</name>
      <anchorfile>classexamples_1_1robot_1_1end__effector.html</anchorfile>
      <anchor>a93141201773012f21fa30a2a27be5f21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dual_annealing::EnergyState</name>
    <filename>classdual__annealing_1_1_energy_state.html</filename>
    <member kind="function">
      <type></type>
      <name>EnergyState</name>
      <anchorfile>classdual__annealing_1_1_energy_state.html</anchorfile>
      <anchor>ab4019fca53c889b2713ca921edcb4d76</anchor>
      <arglist>(int dim_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classdual__annealing_1_1_energy_state.html</anchorfile>
      <anchor>a44539c22d2beaefdaf44bad69a84a570</anchor>
      <arglist>(Fitness *owf, pcg64 *rs, const vec &amp;x0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_best</name>
      <anchorfile>classdual__annealing_1_1_energy_state.html</anchorfile>
      <anchor>a253f480c318533c39555a064fa589711</anchor>
      <arglist>(double e, const vec &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_current</name>
      <anchorfile>classdual__annealing_1_1_energy_state.html</anchorfile>
      <anchor>a02f06aa547755c62064fcfc3dac274d5</anchor>
      <arglist>(double e, const vec &amp;x)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ebest</name>
      <anchorfile>classdual__annealing_1_1_energy_state.html</anchorfile>
      <anchor>a871b427d2f509df0fdc61057c2fafdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec</type>
      <name>xbest</name>
      <anchorfile>classdual__annealing_1_1_energy_state.html</anchorfile>
      <anchor>a971f125dc3aac8af4095c28d888304e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>current_energy</name>
      <anchorfile>classdual__annealing_1_1_energy_state.html</anchorfile>
      <anchor>aa4e93d97d69bc0e3f47cfb39751165ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec</type>
      <name>current_location</name>
      <anchorfile>classdual__annealing_1_1_energy_state.html</anchorfile>
      <anchor>ac2a7ba4addc25eb70635db3e95012659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MAX_REINIT_COUNT</name>
      <anchorfile>classdual__annealing_1_1_energy_state.html</anchorfile>
      <anchor>a3cea69fd776444a0e672c9582ec15b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classdual__annealing_1_1_energy_state.html</anchorfile>
      <anchor>aee07e95de848191c2d47f06bd820524a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::evaluator::Evaluator</name>
    <filename>classfcmaes_1_1evaluator_1_1_evaluator.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1_evaluator.html</anchorfile>
      <anchor>a50ed6d53a492bce3552b2fc991271542</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>start</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1_evaluator.html</anchorfile>
      <anchor>ac97052cab67773de915ff7f6b91dcbf2</anchor>
      <arglist>(self, Optional[int] workers=mp.cpu_count())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stop</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1_evaluator.html</anchorfile>
      <anchor>aa63fc8612c3f2849065ce8c7d00ef8f5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1_evaluator.html</anchorfile>
      <anchor>ae5b016e0ced992bbb7b07073a7df5a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pipe</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1_evaluator.html</anchorfile>
      <anchor>a4ca417b9deee1bddace8f316098da8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>read_mutex</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1_evaluator.html</anchorfile>
      <anchor>a3e267f2596f3621d04264f076ab3abd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>write_mutex</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1_evaluator.html</anchorfile>
      <anchor>ae4b2cf3ee6030d54b34a94a0a7365c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1_evaluator.html</anchorfile>
      <anchor>ae804d4d3f546dd5277b8592560a820db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>proc</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1_evaluator.html</anchorfile>
      <anchor>aca2cb8b8564a09c258b3b74472868860</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>evaluator</name>
    <filename>classevaluator.html</filename>
    <class kind="class">evaluator::evaluator_job</class>
    <member kind="function">
      <type></type>
      <name>evaluator</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>ad503d1b0d07dc0123f2619f613fe2365</anchor>
      <arglist>(Fitness *fit, int nobj, int workers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~evaluator</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>a68ea26494aa55c644bbab86b39d29d9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>a62e9fb557b5a2ecfabc49a01eb7f59d5</anchor>
      <arglist>(vec &amp;x, int id)</arglist>
    </member>
    <member kind="function">
      <type>vec_id *</type>
      <name>result</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>a71fc6fd970c9d9f19af8202500c51b05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>execute</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>a39a80a3c8535b71a004ef2b395015ade</anchor>
      <arglist>(int thread_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>join</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>aaedd24a31a5d9e98e59596ba5e86cae2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Fitness *</type>
      <name>_fit</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>a55728e92361122eb506a3f53d7ca7965</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>_nobj</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>aa9acff16e9a1fff7e8374d02bcb5897b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>_workers</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>a01d0a89d9e703daa46c72471b2245727</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_stop</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>a475abe7cc16b726f9257c4c99170903c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>blocking_queue&lt; vec_id * &gt; *</type>
      <name>_requests</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>a52c19bb405788ea2d4de4915dfcce2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>blocking_queue&lt; vec_id * &gt; *</type>
      <name>_evaled</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>af0459baf3cf0e1917cd7254a041825f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; evaluator_job &gt;</type>
      <name>_jobs</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>aaa142677c82d588bf35f42c80ae932e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>time_point&lt; Clock &gt;</type>
      <name>_t0</name>
      <anchorfile>classevaluator.html</anchorfile>
      <anchor>a91dbe1e8f9bc305dbdd890718ce890c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>evaluator::evaluator_job</name>
    <filename>classevaluator_1_1evaluator__job.html</filename>
    <member kind="function">
      <type></type>
      <name>evaluator_job</name>
      <anchorfile>classevaluator_1_1evaluator__job.html</anchorfile>
      <anchor>ac1577bf4f13621bd5549090a62168e64</anchor>
      <arglist>(int id, evaluator *exec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>join</name>
      <anchorfile>classevaluator_1_1evaluator__job.html</anchorfile>
      <anchor>a89e3493b53e70cc64148d9d9aabfb138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::thread</type>
      <name>_thread</name>
      <anchorfile>classevaluator_1_1evaluator__job.html</anchorfile>
      <anchor>a71ac7a8c335ace505cdccd614a872e7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>F8</name>
    <filename>struct_f8.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>struct_f8.html</anchorfile>
      <anchor>a765d953b5bc8963d058e899423a0180e</anchor>
      <arglist>(const state_t &amp;y, state_t &amp;yDot, const double)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>w</name>
      <anchorfile>struct_f8.html</anchorfile>
      <anchor>aab1a8275b253b608be5771f9beadb04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>ksi</name>
      <anchorfile>struct_f8.html</anchorfile>
      <anchor>a049ead0e788956d08e235dd4ce263c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>ksi_2</name>
      <anchorfile>struct_f8.html</anchorfile>
      <anchor>aa3fcaa03c86beb1785f1f205a4fa3f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>ksi_3</name>
      <anchorfile>struct_f8.html</anchorfile>
      <anchor>ab005a6e178e54c61d0360419108a067a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::f8::f8_problem</name>
    <filename>classexamples_1_1f8_1_1f8__problem.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1f8_1_1f8__problem.html</anchorfile>
      <anchor>a24954c3c927370c687c8a0f536b6baec</anchor>
      <arglist>(self, dim, f8fun)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1f8_1_1f8__problem.html</anchorfile>
      <anchor>a017bafba8cac9022a8683804494191ad</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>name</name>
      <anchorfile>classexamples_1_1f8_1_1f8__problem.html</anchorfile>
      <anchor>a9f78672934045515f966ee9473cd6e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classexamples_1_1f8_1_1f8__problem.html</anchorfile>
      <anchor>af883608e630d0b5fa77e6e83969d1c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>f8fun</name>
      <anchorfile>classexamples_1_1f8_1_1f8__problem.html</anchorfile>
      <anchor>aa91c8816778e52136ee226f78f80871e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1f8_1_1f8__problem.html</anchorfile>
      <anchor>ae5169f3001021958f15c094b840839c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evals</name>
      <anchorfile>classexamples_1_1f8_1_1f8__problem.html</anchorfile>
      <anchor>a5233f87deea69fbf743214613e56b464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classexamples_1_1f8_1_1f8__problem.html</anchorfile>
      <anchor>ae8bd2dc13afc2e441a458f57d758388f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classexamples_1_1f8_1_1f8__problem.html</anchorfile>
      <anchor>ad485f749b59b2b7c3338426f3a0b25af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fbcover::fb_graph</name>
    <filename>classfbcover_1_1fb__graph.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfbcover_1_1fb__graph.html</anchorfile>
      <anchor>ac9f413e30a964761b7ee73619535824e</anchor>
      <arglist>(self, vmap, source, target, circs)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nodes</name>
      <anchorfile>classfbcover_1_1fb__graph.html</anchorfile>
      <anchor>a571cc96c0169cd09090ae239e72a91ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>source</name>
      <anchorfile>classfbcover_1_1fb__graph.html</anchorfile>
      <anchor>a8bf663c203943e8da53d605d8cb48ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>target</name>
      <anchorfile>classfbcover_1_1fb__graph.html</anchorfile>
      <anchor>a130c542b8575e6137bf833f673c39fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nnodes</name>
      <anchorfile>classfbcover_1_1fb__graph.html</anchorfile>
      <anchor>a159b30e89ef87e5d336319a75a10ca1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ncircles</name>
      <anchorfile>classfbcover_1_1fb__graph.html</anchorfile>
      <anchor>ab1a35bba6549551618f52ec5323a193a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>circs</name>
      <anchorfile>classfbcover_1_1fb__graph.html</anchorfile>
      <anchor>ae9237286301dd0588cede06eee394312</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>acircles</name>
      <anchorfile>classfbcover_1_1fb__graph.html</anchorfile>
      <anchor>a1e745c777619e839bd9a65a8dbcf29f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>circle_size</name>
      <anchorfile>classfbcover_1_1fb__graph.html</anchorfile>
      <anchor>a7652a24a76570690972a83f262c3efeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weights</name>
      <anchorfile>classfbcover_1_1fb__graph.html</anchorfile>
      <anchor>a82843813051418f329b0241c14a45dcb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::maxcut::fcmaes_Optimizer</name>
    <filename>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</filename>
    <member kind="function">
      <type>None</type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>a13d3b711374425e7bedd9936d1be1940</anchor>
      <arglist>(self, optimizer, Optional[Bounds] bounds=None, int max_retries=1, int workers=None, use_wrapper=False, logger=None # monitors parallel retry)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_support_level</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>a055f54dac3620d222a29f8790baef305</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>OptimizerResult</type>
      <name>minimize</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>af1011c9cb8dfae55ebe5c7d63cd74e40</anchor>
      <arglist>(self, Callable[[POINT], float] fun, POINT x0, Optional[Callable[[POINT], POINT]] jac=None, Optional[List[Tuple[float, float]]] bounds=None)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_optimizer</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>a48e3eb5669742b003aaaae8b7fffdf5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_bounds</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>a88871f75c30a3e71cffe3ea0b879a27d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_max_retries</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>ac57441ef830353ad6ffe5fd961061306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_workers</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>a4fe72093883bd0b7d751079443408b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_use_wrapper</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>aedc181d6c63eaafb9ef7c405e9410736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_logger</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>a05197bc618bc1f6d313a13c508db7a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="property" static="yes">
      <type></type>
      <name>settings</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>af6557da6fed6cbe613e7eb5d3a2a2bfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>Dict[str, Any]</type>
      <name>settings</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___optimizer.html</anchorfile>
      <anchor>a1bb4080dbf712f3009acb3fa02544943</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::maxcut::fcmaes_SPSA</name>
    <filename>classexamples_1_1maxcut_1_1fcmaes___s_p_s_a.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___s_p_s_a.html</anchorfile>
      <anchor>a0cb3788055eab2918241a2d216ca629e</anchor>
      <arglist>(self, maxiter=1000)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>minimize</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___s_p_s_a.html</anchorfile>
      <anchor>a1b0cb9b532604387d1521da09efccb50</anchor>
      <arglist>(self, fun, bounds, guess=None, sdevs=None, rg=None, store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>opt</name>
      <anchorfile>classexamples_1_1maxcut_1_1fcmaes___s_p_s_a.html</anchorfile>
      <anchor>a6d0c5f60a7a6da494656f103acf9c3d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::filter::filter</name>
    <filename>classexamples_1_1filter_1_1filter.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>a712effcfdc121fa169216b6da13b8804</anchor>
      <arglist>(self, size, interval, filter_prob=0.9)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>a287ca08f91dae8ebd0b9c6b24d30adb3</anchor>
      <arglist>(self, x, y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>x</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>a663125c6add024d2eb1284f57ca8ad09</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>y</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>aef3f67bb7fc5993c23a17a5c9e137b19</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>learn</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>a903971b343ce5a832f74e1e25c1de308</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>is_improve</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>a2637d39a182439a38c218519cca3aa70</anchor>
      <arglist>(self, x, x_old, y_old)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>af57658df88f14f3e05d2c535f9763a7f</anchor>
      <arglist>(self, problem)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xq</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>a8ad591c512301f38d81a6a82fbeffa17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>yq</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>a2f0c39484ec15dfac7bb8bbca564900b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>interval</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>af14d776abf955fec0431001f762f8241</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>filter_prob</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>a66bb43de44afa0e7eae5c2fefa043be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>af1b8bdeda2c1216fc8da8624bc6a87a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>model</name>
      <anchorfile>classexamples_1_1filter_1_1filter.html</anchorfile>
      <anchor>a47e2e8a924524873f6cef322c647680d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dual_annealing::Fitness</name>
    <filename>classdual__annealing_1_1_fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>Fitness</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a4aeaf0549e22e464b769a52b97fd5cf8</anchor>
      <arglist>(callback_type pfunc, vec *lower_limit, vec *upper_limit, long maxEvals_)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>getClosestFeasible</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a95a989c077c91a342b18f61125c2bea5</anchor>
      <arglist>(const vec &amp;X) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a459c83b85fbfc02a5811a0f98d2ac7b5</anchor>
      <arglist>(const vec &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a02a57480e20f23ac3d1b9eab91f408f7</anchor>
      <arglist>(const vec &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>local_search</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a0e4b28444de4d6951dfb416e8e7a8710</anchor>
      <arglist>(const vec &amp;x0, double currval, vec &amp;res)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>encode</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a288c5b34db28ee5a3c0e0916f6936d27</anchor>
      <arglist>(const vec &amp;X) const</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>decode</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>ad5755fabd06c8e86de566687f40c55e8</anchor>
      <arglist>(const vec &amp;X) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getEvaluations</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a9abe3257d970e7fec842dedfeb409f37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>maxEvalReached</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>aa8838720841139fdfbac2c37a4dc0548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>vec</type>
      <name>lower</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a20221f76a8ea7ea803e29e716a35b40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec</type>
      <name>upper</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>aca95b5772925f77987ea96b12004b7b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>LS_MAXITER_RATIO</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a6ca3b936412ade3edf4441e48f87a966</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>LS_MAXITER_MIN</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a88756554a52354b1c976854944f5db4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>LS_MAXITER_MAX</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a6089fb532194afab1e05fac3e55c77c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>callback_type</type>
      <name>func</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a420fcefb28b5a9ba16b80cabba1d017f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>evaluationCounter</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a1f692ead51aa3fbd74d7df8d63e35e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>maxEvals</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a6fb1053a249b16799a038672c59e915c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>scale</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a48db5da79ec356d83901c6e264ef4c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>bestY</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>a59495a3cce1d7ed69a5ada5066911b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>bestX</name>
      <anchorfile>classdual__annealing_1_1_fitness.html</anchorfile>
      <anchor>ab67b400f380bb926698cf02edd2f5ffa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::quant::Fitness</name>
    <filename>classexamples_1_1quant_1_1_fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1quant_1_1_fitness.html</anchorfile>
      <anchor>ab9f14ed15a75c6f2dd7a8031eadd7ddf</anchor>
      <arglist>(self, target_distr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1quant_1_1_fitness.html</anchorfile>
      <anchor>a83ad6e774865c0d543ab7f356378e48a</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>target_distr</name>
      <anchorfile>classexamples_1_1quant_1_1_fitness.html</anchorfile>
      <anchor>ae776c81b56af72978888efa1e430e0c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1quant_1_1_fitness.html</anchorfile>
      <anchor>a505efb4be4047efca40ea53ae1b3b1c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Fitness</name>
    <filename>class_fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>Fitness</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a810378027f4bbbefc1b6fe1e42c0abb2</anchor>
      <arglist>(callback_type func, callback_parallel func_par_, int dim, int nobj, const vec &amp;lower, const vec &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>terminate</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a08a70acdfa7636ae3285e3576c9e3d11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>eval</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>aad187f1bc51d22a4dbca1a2dc8633bc2</anchor>
      <arglist>(const vec &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>eval</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>ad7d85700ac92bf7e332fcc3c4855e55c</anchor>
      <arglist>(const double *const p)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>getClosestFeasible</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a2085e5ce1a0afa5949366f580d5ec5a4</anchor>
      <arglist>(const vec &amp;X) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getClosestFeasible_i</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a1bc40ec5454b560389975e2a9ef8942e</anchor>
      <arglist>(int i, double x_i)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>getClosestFeasibleNormed</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>aba037e55263004819068b5076532b4bf</anchor>
      <arglist>(const vec &amp;X) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClosestFeasible</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a8f1605fc965e423d17c837cfba3dc4c6</anchor>
      <arglist>(mat &amp;X) const</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>norm</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>ac9bd4bd8b140939a1fd9507160bc0b07</anchor>
      <arglist>(const vec &amp;X) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>norm_i</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a57913ab2b23ab85ae2eab0f0a3a27961</anchor>
      <arglist>(int i, double x) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>feasible</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a5d1edacb197d16faf0d3b2c035ab2308</anchor>
      <arglist>(int i, double x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBounds</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a171aed8b88b47ea516a37453cb958948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>sample</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a0bfcc395cf728a4b91e740f4197f927b</anchor>
      <arglist>(pcg64 &amp;rs)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>sample</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>ae05d628784c7ca1954d012f23e82abf5</anchor>
      <arglist>(pcg64 &amp;rs, vec &amp;up, vec &amp;lo)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sample_i</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a517d31dc4378bfb8d94db9ccedaf948b</anchor>
      <arglist>(int i, pcg64 &amp;rs)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sample_i</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a34d84883637889310f026e2aed3d1bf3</anchor>
      <arglist>(int i, pcg64 &amp;rs, vec &amp;up, vec &amp;lo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>evaluations</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>aba60038eac4e0e15d995e57f4ba079e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetEvaluations</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>adc49c4f7f25822a081a412af0acb51c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incrEvaluations</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a4ebdd48fa1e3dea8040c9c7bcf98aa17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>scale</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a13571dee4e75e03d9c421a42cae811b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>typx</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a28d387d040da4d881537965535892e8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormalize</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a31beb7ecb5fa49ac03b43abe444ab9a6</anchor>
      <arglist>(bool normalize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTerminate</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>ac511c0bb7aaf678184edfca41d4e1a81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>encode</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>ab56956f8f382ffe1b9de9d35d156a65e</anchor>
      <arglist>(const vec &amp;X) const</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>decode</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a7fdca1fda75e3976b91e1e9e0eb12057</anchor>
      <arglist>(const vec &amp;X) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>values</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a780edd5ddec4867c4d59c4cd3995f6ce</anchor>
      <arglist>(const mat &amp;popX, vec &amp;ys)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>violations</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a233793c918d3978ec0e52ef8431102b6</anchor>
      <arglist>(const mat &amp;X, double penalty_coef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMinValues</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a437e35b1a2557879b07e22de801a9855</anchor>
      <arglist>(double *const p) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMaxValues</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>ab25d3d92db939b7e739f97ea73907a71</anchor>
      <arglist>(double *const p) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>callback_type</type>
      <name>_func</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a4a7797a662230b7f29774339a5a32b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>callback_parallel</type>
      <name>_func_par</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>aeb85d0ee0818d8c995c2e829dbc44c3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>_dim</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a573c650b339da5518a559d444e28eae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>_nobj</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>af000c91778d06c45b09cd36c83d76d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>_lower</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>abd64428a6046b128b3b142a2a030968f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>_upper</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>acc824dbf4b0d84fa1a291bd6b16403ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>_scale</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>abc2f2bdcf8f5eafe359d6f7492f0a302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>_typx</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a576f73240084816d6a42e61d04290a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_normalize</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>ad522e44cbf9016953cd3ecaa5aaf657e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_terminate</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a14b92585c6089d0ee1dc7663c9868d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>_evaluationCounter</name>
      <anchorfile>class_fitness.html</anchorfile>
      <anchor>a37d7bfa82125022b6c648f5976fd5275</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::arm::fitness</name>
    <filename>classexamples_1_1arm_1_1fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1arm_1_1fitness.html</anchorfile>
      <anchor>a2e9a0e628d84c0a64cfac7f728d471d3</anchor>
      <arglist>(self, dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1arm_1_1fitness.html</anchorfile>
      <anchor>ac275bc61471d8757c126d150d47ce202</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classexamples_1_1arm_1_1fitness.html</anchorfile>
      <anchor>a43de0eb2d82f09570a5ba603554941af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classexamples_1_1arm_1_1fitness.html</anchorfile>
      <anchor>ace8bbe4933daa16876a6bdb5a8a21e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1arm_1_1fitness.html</anchorfile>
      <anchor>a27977796e35fd10742d6f7a40a491331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qd_dim</name>
      <anchorfile>classexamples_1_1arm_1_1fitness.html</anchorfile>
      <anchor>adfc933dd815ec5c03324c50ed9e09ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>qd_bounds</name>
      <anchorfile>classexamples_1_1arm_1_1fitness.html</anchorfile>
      <anchor>a66f828c9d1374236606561a2abe054df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::crypto::fitness</name>
    <filename>classexamples_1_1crypto_1_1fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>ad9958db7a70ef673f3bcb9d5f5e5708b</anchor>
      <arglist>(self, tickers, start, end, max_trades=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>a5a933388f6d0303f80251156e30e6b9b</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>ac24e8f7966063c3bc0cc215a561cbadb</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mofun</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>a1209aafc30c6a32427e2707c0bcadd22</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ndfun</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>a3ba688bf0d5b34a2cc6268a2248dfaa0</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_trades</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>a92e26f20d8494227c6ef3ff4cf6cae71</anchor>
      <arglist>(self, ticker, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_values</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>a052fc5adc7b09eb7f0613dc254699a5d</anchor>
      <arglist>(self, ticker, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>af74be6f5f7cb7648d11cc9852fb1ea05</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evals</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>ae49c94306fd553fcf1163473d6db192d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>add3f7fd867bb662eb828f9ce44f7a9db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>a2dc1e4fe20038b1eff24554fcc9a7b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tickers</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>a9ffd824c461a915a2e1361a44428040e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_trades</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>a23a9ca5a0018097f299c6bbdb1463ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict</type>
      <name>histories</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>a996266cd94bc021d810079a4acaf9105</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict</type>
      <name>closes</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>abe072955ebed441ec3435097e2caf86b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict</type>
      <name>dates</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>abe3f4d73b67a9b156c6188b9d644cec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict</type>
      <name>hodls</name>
      <anchorfile>classexamples_1_1crypto_1_1fitness.html</anchorfile>
      <anchor>a9c118b62e1b58bee262b99574abe0428</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::damp::fitness</name>
    <filename>classexamples_1_1damp_1_1fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1damp_1_1fitness.html</anchorfile>
      <anchor>a7bdfce437aa4db20680c43739eb43be5</anchor>
      <arglist>(self, dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1damp_1_1fitness.html</anchorfile>
      <anchor>a182cdb7a5c25015336faa57a9afebef6</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>qd_fit</name>
      <anchorfile>classexamples_1_1damp_1_1fitness.html</anchorfile>
      <anchor>af629821589f78858c6422998bcb02fe5</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classexamples_1_1damp_1_1fitness.html</anchorfile>
      <anchor>a9442ab7a67e53c7af403ae3380d126e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classexamples_1_1damp_1_1fitness.html</anchorfile>
      <anchor>a83ffb937421ee9b1f73bbd1cb8421dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1damp_1_1fitness.html</anchorfile>
      <anchor>a221a43fe417289340272db9250b90f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qd_dim</name>
      <anchorfile>classexamples_1_1damp_1_1fitness.html</anchorfile>
      <anchor>a0c02985bc005febd02d0d0501c35db07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>qd_bounds</name>
      <anchorfile>classexamples_1_1damp_1_1fitness.html</anchorfile>
      <anchor>aef5f8c2aac81732fac5237797ab0e3bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::harvesting::fitness</name>
    <filename>classexamples_1_1harvesting_1_1fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>aff9639a19d154ee6ceeedd5f73acf9bf</anchor>
      <arglist>(self, task_data, bounds, n_jobs, n_operations, n_machines, max_active, name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>chart</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>acb6ce7a10ef6b8a08952a7cf7b94b4f6</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>ac9d51d3f1b4b38e405e5cce9fdd48b7d</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>add29e0fd221efd5ffa3ce2f0933b633f</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evals</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>acdccca1f5f064cff1ed3b227f6ee6083</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>abef7ef0eef0226fbf7c2b05dd707e4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>a82bfcf17e6bdebbb45766a25fa07c7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>task_data</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>ab83d77fabcdf2ad945a09d15415441a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n_jobs</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>a8307767d6fcf38a545057515e9e2081d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n_operations</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>aa2e6edce71626a64d0f92cf7f1fe0978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n_machines</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>ad69eef392c3e8bfa54df715ddc71a097</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_active</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>a93ba55f2cf507f0c20f5d93241873d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>a7c5f7176944c928ea0b8a667e20c0934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>a5df1d237e656b28b147deab852aa5617</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nobj</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>afae97d0f6a70547ee1f5fda0e3b1f608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncon</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>a87d8c30285fadcd3387ea1b0f5194db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weights</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>ad62323e2fef3b563c6062a4987ce6d14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>job_indices</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>aa724092b904a41081b0749a0fb0efffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>job_ids</name>
      <anchorfile>classexamples_1_1harvesting_1_1fitness.html</anchorfile>
      <anchor>a1576b605b6dd4a4f3d4fff693b8933a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::jobshop::fitness</name>
    <filename>classexamples_1_1jobshop_1_1fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a36837d685fafe51e15b3485ffab58eff</anchor>
      <arglist>(self, task_data, bounds, n_jobs, n_operations, n_machines, name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>chart</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>ac15543b2da616ca5c0286391fe3c7b3a</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a38ad69646f0c310cddd2d489743c2837</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a65088d25d52805209f6dfec80ed1aa9f</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evals</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>aef018505894519a72df356d42c4c6d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a0983086fe5e1ad65b0705e7eef52cf57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>acc27d0fb31438fceefb1222643e315ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>task_data</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a7e2c5c07d96ad3f5ca01911202bc31fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n_jobs</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a58dda2b3cc271437a42e1c25fbbd8d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n_operations</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a03d0bc2d19ef688e81badc24e828f0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n_machines</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a91b1681ba789472a1e6a8a628a386582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>af2a6fe9d692d05db14d4256d583af5c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a0077590ffb70ed4a4311f3abfc2ec156</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nobj</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>acaf99377698f869f95b80ce6856dab34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncon</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a1b2e2aff8fad66c46ac50a13938ea994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weights</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a87dcab98144aaa1557e230f89e710a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>job_indices</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a2b3febf6797fd4b041a9b940237da76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>job_ids</name>
      <anchorfile>classexamples_1_1jobshop_1_1fitness.html</anchorfile>
      <anchor>a3e1ed42a68b5e6fbe96b7507db888a14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::scheduling::fitness</name>
    <filename>classexamples_1_1scheduling_1_1fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a4ef1711a34383984fe05eb4c41a6161e</anchor>
      <arglist>(self, transfers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a4eff7a725e23a7148b932307532f6542</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a8d58e9d7e95ceb929858cdc06b0eda47</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>qd_fun</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a713c154b74b96a06274438bae71e2419</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>score</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a0dcc50199c64159aae9a5a89326d1cc6</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evals</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a2db366aa7d2903b1f35990720f5e68ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>af3bdc7333faccce3e1ecb566a025e06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a128eb9a2d9dc7afccae971d4357976eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>transfers</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a06815cb664a05b50f3ee6594d9b5ff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>asteroid</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a3c6e38b77d942c1e65224859181be8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>acf65c26ee59887b44569adfe6b91c044</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>trajectory</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>ac179b7f4bfdd438553c69ecd3a68ea87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>transfer_start</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>ad1224cbf70121fb902845afc4b2e93d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>transfer_time</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a24c80a2210c454aab20b8dfea66c812c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mass</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a4d559c6afd6b519e383a389b1b667a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dv</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>af376623fb6066a93517e1be01d8f7cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>trajectory_dv</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>acbb8393cc721e22d4964ad94685f15c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nobj</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a9fcd9faba20dabb88e8396d21e2bd6ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncon</name>
      <anchorfile>classexamples_1_1scheduling_1_1fitness.html</anchorfile>
      <anchor>a0c832c38c4d5e650792b17323418d2f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::subset::fitness</name>
    <filename>classexamples_1_1subset_1_1fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1subset_1_1fitness.html</anchorfile>
      <anchor>ae81edf4a9e7c38ca6097c440e6574e84</anchor>
      <arglist>(self, selection_value, dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>selected</name>
      <anchorfile>classexamples_1_1subset_1_1fitness.html</anchorfile>
      <anchor>afbd613f893539051a353e244d53ba64e</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1subset_1_1fitness.html</anchorfile>
      <anchor>a23ae3f9deb0bf53a1a594e1f2564c14c</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>selection_value</name>
      <anchorfile>classexamples_1_1subset_1_1fitness.html</anchorfile>
      <anchor>a89b260fa32177cc4e1225469d21b54b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1subset_1_1fitness.html</anchorfile>
      <anchor>abb7b10a459f0ace0493e56922e5b87cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::subset_mo::fitness</name>
    <filename>classexamples_1_1subset__mo_1_1fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1subset__mo_1_1fitness.html</anchorfile>
      <anchor>addf85c72e39b140383beef6db0d10e35</anchor>
      <arglist>(self, selection_value, dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>selected</name>
      <anchorfile>classexamples_1_1subset__mo_1_1fitness.html</anchorfile>
      <anchor>ac15b20aced828260b7563061593ecbef</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1subset__mo_1_1fitness.html</anchorfile>
      <anchor>a7d34771039eadc6134feabf67d3ac896</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>selection_value</name>
      <anchorfile>classexamples_1_1subset__mo_1_1fitness.html</anchorfile>
      <anchor>a20cac7f3c010185fc000534490ee76fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1subset__mo_1_1fitness.html</anchorfile>
      <anchor>a9e4515283b5c50dd58b6a4d92e903b1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::trappist_delivery::fitness</name>
    <filename>classexamples_1_1trappist__delivery_1_1fitness.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>ac93b14c8459740354d17ab1e96262bf8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a9c1664f5b2f23d74d40c0d36262af5b4</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>windows</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a1bf55a383dda1484f8e3cfbdad60dfd7</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>convert</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>afe9d605b6b8ab793bcd82376d6be49cf</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>ad25284f2ed9bbb5897ec7ca711e5fa17</anchor>
      <arglist>(self, maxevals=50000000, retries=2000)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>udp</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a46dd96ea80bc85c68b209b636ec3452c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sel_i</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>adc956fb869ae471beb7963ad438be581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sel_size</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a4d1deeb3a4f09d5a3554889183e6dc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ub_selection</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a3c2a5c40f5941e45d4afa100a1cefcad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>db</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a5e1ca9b0352ca434af54d73f0876474d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a133c96a64e92c82834d684f8b53f80f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a72b345bc382ff4c29360d66e89992e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>af15eda907d43881daeb82c926911e37b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_min</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a59db4ff2ae78efc307bd406db4ceb986</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_x</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a9e75309de43a64bd7ccf8a2c860973f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weights</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>a0f5c9846e248690f607ada9b0b617ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>window_lb</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>ac0dcebc5d6ff6cb76dbd0c193750bf07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>window_ub</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1fitness.html</anchorfile>
      <anchor>afc0f187fd3c282da558fcb39058baafd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::moexamples::fonseca</name>
    <filename>classexamples_1_1moexamples_1_1fonseca.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1moexamples_1_1fonseca.html</anchorfile>
      <anchor>a5f6984293aa62e0a2fabab192af1e03d</anchor>
      <arglist>(self, dim)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1moexamples_1_1fonseca.html</anchorfile>
      <anchor>accb4f09ab7849d699dd3c6f56d07b7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1fonseca.html</anchorfile>
      <anchor>a1ba2328495976cd1c3f907a00489b375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weight_bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1fonseca.html</anchorfile>
      <anchor>aeb26e7f492c7cd21f1fe27e2b9703834</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>name</name>
      <anchorfile>classexamples_1_1moexamples_1_1fonseca.html</anchorfile>
      <anchor>a7de3207828b60ce92238ee3582c073e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::GMCost</name>
    <filename>classexamples_1_1rover_1_1_g_m_cost.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_g_m_cost.html</anchorfile>
      <anchor>a7ad4a0f68b48fd6f7094f58779c62cf7</anchor>
      <arglist>(self, centers, sigmas, weights=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1rover_1_1_g_m_cost.html</anchorfile>
      <anchor>af39c1af9a1e61878a88b899d58a511d8</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>c</name>
      <anchorfile>classexamples_1_1rover_1_1_g_m_cost.html</anchorfile>
      <anchor>a4aaea18dec35e4b0def7bd4fba2e9d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>classexamples_1_1rover_1_1_g_m_cost.html</anchorfile>
      <anchor>aa883cd3bf77cec0ed8e534ac72da7581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>w</name>
      <anchorfile>classexamples_1_1rover_1_1_g_m_cost.html</anchorfile>
      <anchor>ab3bc19e548719abb2f52284cb475dffc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>edgecover::graph</name>
    <filename>classedgecover_1_1graph.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classedgecover_1_1graph.html</anchorfile>
      <anchor>ab949ce0b99bb4cd1ef8257c1360fb528</anchor>
      <arglist>(self, g)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nodes</name>
      <anchorfile>classedgecover_1_1graph.html</anchorfile>
      <anchor>ab1c2291dc3aca604a76b86f29abe3dc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>source</name>
      <anchorfile>classedgecover_1_1graph.html</anchorfile>
      <anchor>ad44bc611ea2c7acc18d393800c6f3c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>target</name>
      <anchorfile>classedgecover_1_1graph.html</anchorfile>
      <anchor>aa4d72257e78cc1597ae73f6cb0e104ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Gtoc1</name>
    <filename>classfcmaes_1_1astro_1_1_gtoc1.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_gtoc1.html</anchorfile>
      <anchor>a4283ab873bea376c32af02854e2f024e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>gtoc1</name>
      <anchorfile>classfcmaes_1_1astro_1_1_gtoc1.html</anchorfile>
      <anchor>ad6d6c8c25643c873077f9716d2fb36b1</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>gfun</name>
      <anchorfile>classfcmaes_1_1astro_1_1_gtoc1.html</anchorfile>
      <anchor>a82fab81ef2b07029b3e9e0a252b10a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1astro_1_1_gtoc1.html</anchorfile>
      <anchor>a144ad84d1ad2a646e794e87808f1f6b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::robot::guiWorld</name>
    <filename>classexamples_1_1robot_1_1gui_world.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1robot_1_1gui_world.html</anchorfile>
      <anchor>a2a72190b0879ff50cdeebe3cf3213d7d</anchor>
      <arglist>(self, fps)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>draw</name>
      <anchorfile>classexamples_1_1robot_1_1gui_world.html</anchorfile>
      <anchor>adab98b24ef2879406211e7c2325addd2</anchor>
      <arglist>(self, bodies, bg_color=(64, 64, 64, 0))</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCREEN_WIDTH</name>
      <anchorfile>classexamples_1_1robot_1_1gui_world.html</anchorfile>
      <anchor>ad22538df02066ff8e529fdefde7a11ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SCREEN_HEIGHT</name>
      <anchorfile>classexamples_1_1robot_1_1gui_world.html</anchorfile>
      <anchor>a03d57f981170d79d51d9033c04292594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TARGET_FPS</name>
      <anchorfile>classexamples_1_1robot_1_1gui_world.html</anchorfile>
      <anchor>a97e18c60d7c158fb93505ff1062f4215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>PPM</name>
      <anchorfile>classexamples_1_1robot_1_1gui_world.html</anchorfile>
      <anchor>ad6cabbaff2dd91875d324a223955033d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>screen</name>
      <anchorfile>classexamples_1_1robot_1_1gui_world.html</anchorfile>
      <anchor>a4e6d908e38fe9362abbf8d42061d56ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>clock</name>
      <anchorfile>classexamples_1_1robot_1_1gui_world.html</anchorfile>
      <anchor>af98ec11c04c1ba0765d4475cf383f29e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>screen_origin</name>
      <anchorfile>classexamples_1_1robot_1_1gui_world.html</anchorfile>
      <anchor>af1fded6ed1528b22f0517f72bbad19f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict</type>
      <name>colors</name>
      <anchorfile>classexamples_1_1robot_1_1gui_world.html</anchorfile>
      <anchor>a25335c34ece85a6399269d8c972ba1dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hbv::hbv</name>
    <filename>classhbv_1_1hbv.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classhbv_1_1hbv.html</anchorfile>
      <anchor>a018b2b26a4e6f1b37de09375347b11df</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classhbv_1_1hbv.html</anchorfile>
      <anchor>af5f8604b9c3d15a55b152cee78d56e39</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>qd_fitness</name>
      <anchorfile>classhbv_1_1hbv.html</anchorfile>
      <anchor>a89aea998d9546dc3465bf46fbee95689</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classhbv_1_1hbv.html</anchorfile>
      <anchor>a092a863432753cc15dba7848e7c421d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hbv</name>
      <anchorfile>classhbv_1_1hbv.html</anchorfile>
      <anchor>ae4c85c60e063bfd11874ddfd8daf2d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classhbv_1_1hbv.html</anchorfile>
      <anchor>a215bc24a3f9ff6ae0e74d3260429abcd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::mapelites::in_niche_filter</name>
    <filename>classfcmaes_1_1mapelites_1_1in__niche__filter.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1in__niche__filter.html</anchorfile>
      <anchor>ae359024a8d9321fa9435b80d4f1c68b5</anchor>
      <arglist>(self, Callable[[ArrayLike], Tuple[float, np.ndarray]] fit, int index, Callable[[ArrayLike], np.ndarray] index_of_niches)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1in__niche__filter.html</anchorfile>
      <anchor>a488d9065cc360b95c707fcd92793ff31</anchor>
      <arglist>(self, ArrayLike x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fit</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1in__niche__filter.html</anchorfile>
      <anchor>a92398321d5c000aad5ddad54cd92a349</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>index_of_niches</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1in__niche__filter.html</anchorfile>
      <anchor>ac6c721121ac09bd043d9d5bc141f79ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>index</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1in__niche__filter.html</anchorfile>
      <anchor>abefaec57e0e3215cd40bdcf1dc42f0e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IndexVal</name>
    <filename>struct_index_val.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>struct_index_val.html</anchorfile>
      <anchor>a22dbaf9b662c668008e740239224f208</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>val</name>
      <anchorfile>struct_index_val.html</anchorfile>
      <anchor>a912365899c31aab0e77ec045f32a0b42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::interferometry_udp::Interferometry</name>
    <filename>classexamples_1_1interferometry__udp_1_1_interferometry.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1interferometry__udp_1_1_interferometry.html</anchorfile>
      <anchor>ac3456e586ad91c7a24ca7b89e321133f</anchor>
      <arglist>(self, number_points, image, image_size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_bounds</name>
      <anchorfile>classexamples_1_1interferometry__udp_1_1_interferometry.html</anchorfile>
      <anchor>a2d43e438cc90a1c292c90925583652b7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classexamples_1_1interferometry__udp_1_1_interferometry.html</anchorfile>
      <anchor>a35547ca7bad49ebeec4beaf458f53856</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>number_points</name>
      <anchorfile>classexamples_1_1interferometry__udp_1_1_interferometry.html</anchorfile>
      <anchor>a0de82ef011a26a1945319b023f9da85e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>image</name>
      <anchorfile>classexamples_1_1interferometry__udp_1_1_interferometry.html</anchorfile>
      <anchor>a468ad50f14f7acacbc604489b7348269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>image_size_log2</name>
      <anchorfile>classexamples_1_1interferometry__udp_1_1_interferometry.html</anchorfile>
      <anchor>ada31a2daf6f03c43db3a69a6a085a24a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>image_size</name>
      <anchorfile>classexamples_1_1interferometry__udp_1_1_interferometry.html</anchorfile>
      <anchor>a1eb1ca6f3df61ce5e288b5431d41b4b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>im_numpy</name>
      <anchorfile>classexamples_1_1interferometry__udp_1_1_interferometry.html</anchorfile>
      <anchor>a033ed091186328f2783d7d6a7548de03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>im_fft</name>
      <anchorfile>classexamples_1_1interferometry__udp_1_1_interferometry.html</anchorfile>
      <anchor>ad907cb45808a3f0dcda1a08e46a372ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::journal::Journal</name>
    <filename>classfcmaes_1_1journal_1_1_journal.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>ad6b76d939a19c9c3df8d3387357163c6</anchor>
      <arglist>(self, filename, study_name, dir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>study</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>acbbc07226630aecfb75ee29f74077fc7</anchor>
      <arglist>(self, worker_id, study_name, dir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>trial</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>aeefe1aea935c585f4bbed751cfd8332f</anchor>
      <arglist>(self, worker_id, study_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>param</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>a071316e37bbbe42be6c9dda9bfe0a7d7</anchor>
      <arglist>(self, worker_id, trial_id, param_name, param_value_internal, low, high)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>value</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>a657e3ac3b8ab3aa80bed8190a69e753d</anchor>
      <arglist>(self, worker_id, trial_id, y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>write_x</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>a7f1df03b226966e2c112e449fe31747b</anchor>
      <arglist>(self, worker_id, trial_id, x, bounds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>write_xs</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>a745cc0929536fec00ae35f51264a1af1</anchor>
      <arglist>(self, trial_id, xs, bounds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>write_ys</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>a7dd993c2fa0347ea449a35ec8c953120</anchor>
      <arglist>(self, trial_id, ys)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>write_starts</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>aef6c2fd765119c081c3541b04831dedc</anchor>
      <arglist>(self, study_id, batch_size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>close</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>a09aa7fd18b891e40b6cb2b1682565efd</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>filename</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>a708be2ce8c89c052edabab8d0a9c250e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>file</name>
      <anchorfile>classfcmaes_1_1journal_1_1_journal.html</anchorfile>
      <anchor>a6a2f06762d55e23420c8a67aa056ba03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::journal::journal_wrapper</name>
    <filename>classfcmaes_1_1journal_1_1journal__wrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a79c04d53fb0fc834ba1a867d06a7f8a4</anchor>
      <arglist>(self, fit, bounds, jfname, study_name, study_id, batch_size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reset</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a593c2894a37eb1507db8fbad05539f60</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>store_start</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>aa7a757ccc4986688a24911071e68e034</anchor>
      <arglist>(self, worker_id, study_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>store_x</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a5adc885590326f2a0989cbef083646e2</anchor>
      <arglist>(self, worker_id, trial_id, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>store_y</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a36307cef398f9219427d7c4802c7079a</anchor>
      <arglist>(self, worker_id, trial_id, y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>ad219e74b48d4588e84683ec326143a48</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fit</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a625328e1f0565bf7e8fedc5d2ffbd64a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a6153c4a1a7f4a645d276c3ddaf08b069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>journal</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>aeaae96fabf88febd67162868798561ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>study_id</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a1b7923ef0b7c7a833f78239cea442d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>batch_size</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a859bf29174f7087cbfe4e1527a651bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>trial_id</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a6d48fc2b71768abc5fd10898d5306431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lock</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a6da25d7287b3ac5e8b848b4047eeb582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mgr</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>af36fb00ab5b0b3a2dd393bf914df2f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>starts</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a793b40cf4389c39186273cd58e6aec68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xs</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a67bba76d67d66bbb648bf957b18e4ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ys</name>
      <anchorfile>classfcmaes_1_1journal_1_1journal__wrapper.html</anchorfile>
      <anchor>a2b6cb16e9fca08a2a5eb8c9078afa4a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::kepler::kepler::Kepler</name>
    <filename>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>aee857072d6d6ef61af5c7f99babb210e</anchor>
      <arglist>(self, kep, mu, t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>copy</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a8e81a56d4635f3bebf19c293cf6a3cab</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__str__</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a64122f76c0be0d95f97657145b3e0f55</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>kep</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>abf1403322377f6aa4b5743a37659647b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>propagate_kepler</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a4fbe50a434e7f2312059e3477ba13ca7</anchor>
      <arglist>(self, dt)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_time</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>acd6a5c8bf0fcffed8257e59351144296</anchor>
      <arglist>(self, t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>minRadius</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a128d62459f870c0d51b8e97de9e1020c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>maxRadius</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a6a01af65c5d49b1ace9e7ed52d663b13</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>meanMotion</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a3029de7154c23e9d7dedda9650ffdae5</anchor>
      <arglist>(self, mu)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>period</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>af08e9af9e5240529660759e6abb10cb0</anchor>
      <arglist>(self, mu)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>periapsis</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a9c9b156730f6ee9e15d1b7ab1c492f4e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>apoapsis</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a0649f78a15b9a2220ac73612b91a6e83</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>setM0</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>aebb73077f8510f43f7dc943d1b4f16be</anchor>
      <arglist>(self, M0, dt, mu)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eccentric2ta</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a7442523c8b9786e119c4a4efadc0048a</anchor>
      <arglist>(self, E)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>getTrueAnomaly</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a0789b3d8b3a7dfa103714ca48cd34c49</anchor>
      <arglist>(self, M0, dt, mu)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>getEccentricAnomaly</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a8e781852385072982573e3d584e6e7bd</anchor>
      <arglist>(self, M0, dt, mu)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>getEccentricAnomaly2</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>aae84ef21298ce1f21ea13cd99d115732</anchor>
      <arglist>(self, M0, dt, mu)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mean2ta</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>ace359228af6ab44df9562414d3be0b73</anchor>
      <arglist>(self, M)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mean2eccentric</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a30c2309d5290666bb3aaa6e85b2dc5f7</anchor>
      <arglist>(self, M)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eccentric2Mean</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a9b30df8804abd68a5c6768e4c9592034</anchor>
      <arglist>(self, ea)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>a</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a0f2187dd893c4ac0b412a2fae1598c64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>e</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>adbf1d874e82620722189926fc427c68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>i</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a65f12b3a0e778b5cb03645f27bc2c14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>W</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a6d385ecf57dd95f7069d4e78987d1061</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>w</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a7fe33110403dc55936c5b19f8b24f161</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ea</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>ab9b6a6bc6fe9c30ce6dadf6a889fcc6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mu</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>ae01c4ca0b311406aebc49db57c8bb9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t</name>
      <anchorfile>classexamples_1_1kepler_1_1kepler_1_1_kepler.html</anchorfile>
      <anchor>a38ba9f7eea75feb6afc437ad6ca35050</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::kepler::lambert::lambert_problem_multirev</name>
    <filename>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>adfd8d3b5191614adef6e58b98b73d2ca</anchor>
      <arglist>(self, v_in, lambert_problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_v1</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>a0b71fd4f9727881739c3941b6b304a90</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_v2</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>aaf2d7701e81477736096dfe7a077fa22</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_r1</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>ae01a8d18150f5f4973e8b7b2bfe9e91c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_r2</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>a90f6d816f14cecca1001ce2aba5918a0</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_mu</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>a4c2e9bfdfe5ec8e5131e57257a3e9bd1</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_x</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>acb524881ce41e73025559fa7ffc00715</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_iters</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>a4911c44dd7d48949280b46f2268ddfa8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_tof</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>a6757f67fa96e9a5889d01024d697b4cb</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_Nmax</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>a2533a0e1f26125ace8b0922cb5e324b9</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_i</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>aff5f32bf1a98f1024836d744b36bd6ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lambert_problem</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev.html</anchorfile>
      <anchor>acce45365d9ae28486d8b3f1322f3bc82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::kepler::lambert::lambert_problem_multirev_ga</name>
    <filename>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>a68331e3fffd131d4b35a6cc3736c2178</anchor>
      <arglist>(self, v_in, lp, planet, v_planet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_v1</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>a5223139cb5aa6a14e22d7687e30324d3</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_v2</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>a7a820147a2bd36a8caba81ef0db28753</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_r1</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>a71465de9cf4768c8b5ce6f66e814c9aa</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_r2</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>ad4001708940160e44e8b32727c4d63b2</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_mu</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>a27f5c1918ea489d7612db695b518074b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_x</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>a0683a879c52988d0039d1867bdfdc56b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_iters</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>abc3c43bb02f4dfe0a18fdc8ec7568754</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_tof</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>a45ccffe438b6e40403d4c77f63ec5447</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_Nmax</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>a311b6bfea03c98e233f9c96acfac4846</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_i</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>adfabadd56bd8e605a38e2617f5228a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lambert_problem</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__multirev__ga.html</anchorfile>
      <anchor>a43545dc274cf92521b9f538a891094d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::kepler::lambert::lambert_problem_stochastic</name>
    <filename>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>a7d5f1ff71c65327f589e1b5f4d73f970</anchor>
      <arglist>(self, v_in, lambert_problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_v1</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>a49ec2e13ded362dd13c326863511151e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_v2</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>a621b479a308e62cf3f4d0ace1c222ecd</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_r1</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>a9b71608dac985c0285d4e41eefe45ac8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_r2</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>aaa73678c748e8ce1212e2efe023c815b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_mu</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>a62d99915b93564d4b437f7176ec0c802</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_x</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>ae1b904d6fedd51f7e642c4e3efe5d69a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_iters</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>ab8c2e2994efb2ceacc9fceeb623ff553</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_tof</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>a5f11b92c53f560947472efd28706ff5d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_Nmax</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>a136900e2e2f648f9958ade293b1c9dfb</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_i</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>aa6ed163461145a76cbf9e851e9c6534a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lambert_problem</name>
      <anchorfile>classexamples_1_1kepler_1_1lambert_1_1lambert__problem__stochastic.html</anchorfile>
      <anchor>aa7b09bdd335595f9db708a59c15057a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LBFGSpp::LBFGSBSolver</name>
    <filename>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</filename>
    <templarg>typename Scalar</templarg>
    <templarg>template&lt; class &gt; class LineSearch</templarg>
    <member kind="function">
      <type></type>
      <name>LBFGSBSolver</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>af6f13d5faffe94686e9ba8710da1bb5a</anchor>
      <arglist>(const LBFGSBParam&lt; Scalar &gt; &amp;param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimize</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a420f4521286e2ac37a37f41b9f5767a9</anchor>
      <arglist>(Foo &amp;f, Vector &amp;x, Scalar &amp;fx, const Vector &amp;lb, const Vector &amp;ub)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, 1 &gt;</type>
      <name>Vector</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a68ac128001b807b5ae6a48d7fd15ba3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>Matrix</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>ab506657a5181cb3fd5b56ff975916f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Eigen::Map&lt; Vector &gt;</type>
      <name>MapVec</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>afc50f513af96f02c39cf1c608b011cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>IndexSet</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a243e993b1c8009144cea153e7ac2d588</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>reset</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a2b265895288516adbacc3e25fabe2829</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>force_bounds</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a88780c13f50eaaf437bcbbb54d7a7f3c</anchor>
      <arglist>(Vector &amp;x, const Vector &amp;lb, const Vector &amp;ub)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static Scalar</type>
      <name>proj_grad_norm</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a57692ffc3df2f5152f8ef27dfb4f9cac</anchor>
      <arglist>(const Vector &amp;x, const Vector &amp;g, const Vector &amp;lb, const Vector &amp;ub)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static Scalar</type>
      <name>max_step_size</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a788f97964a14b4b6db287f9e2646f2f6</anchor>
      <arglist>(const Vector &amp;x0, const Vector &amp;drt, const Vector &amp;lb, const Vector &amp;ub)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const LBFGSBParam&lt; Scalar &gt; &amp;</type>
      <name>m_param</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>aa70044da7add6566b5cfd75e868ad85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BFGSMat&lt; Scalar, true &gt;</type>
      <name>m_bfgs</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>afe28f7248239eac6eac4e586da1b1447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vector</type>
      <name>m_fx</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a979a0d5a7dfc557ae62196681e15bc4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vector</type>
      <name>m_xp</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>af5b2357022d48bf126b9e6a975940ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vector</type>
      <name>m_grad</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a478cfc0f18b184d805274234cceed32c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vector</type>
      <name>m_gradp</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a120b8ed88219c8464616fe433c1cb492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vector</type>
      <name>m_drt</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_b_solver.html</anchorfile>
      <anchor>a7070c707f445259e2df484ec540d5c75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dual_annealing::LBFGSFunc</name>
    <filename>classdual__annealing_1_1_l_b_f_g_s_func.html</filename>
    <member kind="function">
      <type></type>
      <name>LBFGSFunc</name>
      <anchorfile>classdual__annealing_1_1_l_b_f_g_s_func.html</anchorfile>
      <anchor>a4a47dfad8532211a6da6eaf696f9eb77</anchor>
      <arglist>(Fitness *Fitness_, int dim_)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>classdual__annealing_1_1_l_b_f_g_s_func.html</anchorfile>
      <anchor>a7493a5c4715c66ffe3d0c489ce1bf2d7</anchor>
      <arglist>(const vec &amp;x, vec &amp;grad)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Fitness *</type>
      <name>func</name>
      <anchorfile>classdual__annealing_1_1_l_b_f_g_s_func.html</anchorfile>
      <anchor>ab2864f24f45a4ced5f87d4b46be00aa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classdual__annealing_1_1_l_b_f_g_s_func.html</anchorfile>
      <anchor>a4631838189a072670a408711f5e26197</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LBFGSpp::LBFGSSolver</name>
    <filename>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</filename>
    <templarg>typename Scalar</templarg>
    <templarg>template&lt; class &gt; class LineSearch</templarg>
    <member kind="function">
      <type></type>
      <name>LBFGSSolver</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>a2a7734277fde68058fb37f73150e196e</anchor>
      <arglist>(const LBFGSParam&lt; Scalar &gt; &amp;param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimize</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>aa1961dc72e480cb35e7831ad18d772f8</anchor>
      <arglist>(Foo &amp;f, Vector &amp;x, Scalar &amp;fx)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, 1 &gt;</type>
      <name>Vector</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>ab4864e0f16be346e255182c27b2fbaf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>Matrix</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>a8a3350487e293b79093a0d6ffecd7dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Eigen::Map&lt; Vector &gt;</type>
      <name>MapVec</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>a3f994e546dc2db71eba2117253b2ab4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>reset</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>a160bdb91edc2c2063ea8398eca3b6e98</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const LBFGSParam&lt; Scalar &gt; &amp;</type>
      <name>m_param</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>aab9105ff5975bdc987b4244bf9c05853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BFGSMat&lt; Scalar &gt;</type>
      <name>m_bfgs</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>a8f0425e17cbff685c1bcd98fd9d3d5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vector</type>
      <name>m_fx</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>aaa38eeb856f1382cbc539209a3bd719b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vector</type>
      <name>m_xp</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>afd36125de4b725d1ace591491c2de97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vector</type>
      <name>m_grad</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>ab2915f454f2b84d3e049ab1e30a15634</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vector</type>
      <name>m_gradp</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>a57928834c3e888a053c7bfc621ebded0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vector</type>
      <name>m_drt</name>
      <anchorfile>class_l_b_f_g_spp_1_1_l_b_f_g_s_solver.html</anchorfile>
      <anchor>a9cecd4bcdb0ec5573c4f41f391f9d39d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>lrgv::lrgv</name>
    <filename>classlrgv_1_1lrgv.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classlrgv_1_1lrgv.html</anchorfile>
      <anchor>a95e96bb1d82f80634803c206ff503c78</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classlrgv_1_1lrgv.html</anchorfile>
      <anchor>ab5c1283f83c705c307d7ae74f3474a1c</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>qd_fitness</name>
      <anchorfile>classlrgv_1_1lrgv.html</anchorfile>
      <anchor>a527b9b7a7927721b5320ab433bf75aea</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classlrgv_1_1lrgv.html</anchorfile>
      <anchor>a7555329caa09a7287805f9cb206fe3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lrgv_p</name>
      <anchorfile>classlrgv_1_1lrgv.html</anchorfile>
      <anchor>a1c61933d3481441a96013ec8dab2fd08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>name</name>
      <anchorfile>classlrgv_1_1lrgv.html</anchorfile>
      <anchor>acda438d56f30afb04402de3ddb607803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classlrgv_1_1lrgv.html</anchorfile>
      <anchor>a6413e3e1992050f5801e1d8a5d31d6e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::siemens::Machine</name>
    <filename>classexamples_1_1siemens_1_1_machine.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>a2b27545f4d46af3150c459993480c7ea</anchor>
      <arglist>(self, type, dtime)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>process</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>aecd32c1f18e3ac7977e9a86b4e8f1012</anchor>
      <arglist>(self, time, product)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>take</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>a945720eb724bb91836f9ade21953b6df</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>finished</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>acf96c3492bc4e9b03bb5d1e175096165</anchor>
      <arglist>(self, time)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>available</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>a6581c31f45a3d7ef036ef0291c2804eb</anchor>
      <arglist>(self, time)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__str__</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>aefd1d19fe21acd23751a1a52389d7381</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>product</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>ad56d0526d8d5d1233ea08e13e423698a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_product</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>a9d89a15b5297f3d841f5f2c1060a5949</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>time</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>a22c5b6e74d0988be787d0edfcd1b9f16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>type</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>a0226b64676509ec13b7bbed945c2317a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtime</name>
      <anchorfile>classexamples_1_1siemens_1_1_machine.html</anchorfile>
      <anchor>a186e0153fa4c3b89d35128b6d16dfea2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Messenger</name>
    <filename>classfcmaes_1_1astro_1_1_messenger.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_messenger.html</anchorfile>
      <anchor>a91119f29cff0a60beda79e7ce156563b</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::MessFull</name>
    <filename>classfcmaes_1_1astro_1_1_mess_full.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_mess_full.html</anchorfile>
      <anchor>a47a2b886613a8f91b65ff97414ce8f04</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Minimize</name>
    <filename>classfcmaes_1_1optimizer_1_1_minimize.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_minimize.html</anchorfile>
      <anchor>a1d0c22f3f65fc79861e54f90424f0203</anchor>
      <arglist>(self, max_evaluations=50000, store=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_minimize.html</anchorfile>
      <anchor>a58bfab5556bb4969d88c7905361515ab</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mmkp::MMKP</name>
    <filename>classmmkp_1_1_m_m_k_p.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>a6a38a2a564dddc89a43fb20169895634</anchor>
      <arglist>(self, problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>deviation</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>a1dfd349f5b8fb7723a37b3ce28eb4823</anchor>
      <arglist>(self, vsum)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness_pen</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>a213f560e4e944cc784b84e78cf46f9ba</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>aeab8da83296dbb68b5c90753e6fe6ff1</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>dump</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>a47221aa9a69b03bc277ca6bd3c3afd20</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>problem</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>a62f6b253d0a093a354bb1d7af30fbc14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>a6a441591c5c7b1bf6eb80c9bafa8d52e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>l</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>ad7ded520557368c699215d828397d33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>m</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>aed2bd5d990a56a186ed6d7af40d19de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_val</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>a455876cfbd60cb44c18f0adf512710d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_sol</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>ad3000e24c5205205079e224810a6d506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>avail</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>a4b8d157169439be49770affa59b88316</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>values</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>ab4fea66e9c32aabf1ebf9732cf36e1a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>resources</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>a202a059df46a4b0f0cca3e36355a6e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>aabb5288b6a681b13d3f80f9b06cfb7ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classmmkp_1_1_m_m_k_p.html</anchorfile>
      <anchor>a600bb297210e79ebdf4c1371a65997b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::moretry::mo_wrapper</name>
    <filename>classfcmaes_1_1moretry_1_1mo__wrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1moretry_1_1mo__wrapper.html</anchorfile>
      <anchor>a38adbadd49e6b9145e3c04944c3269b6</anchor>
      <arglist>(self, fun, weights, ncon, y_exp=2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eval</name>
      <anchorfile>classfcmaes_1_1moretry_1_1mo__wrapper.html</anchorfile>
      <anchor>a9f091a54dc6f2c2fefb4c6a90ab108a2</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mo_eval</name>
      <anchorfile>classfcmaes_1_1moretry_1_1mo__wrapper.html</anchorfile>
      <anchor>a9dbf1252c03ebe42925abe561e556598</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1moretry_1_1mo__wrapper.html</anchorfile>
      <anchor>a28cf58191f93203c9fea6eeddb561b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weights</name>
      <anchorfile>classfcmaes_1_1moretry_1_1mo__wrapper.html</anchorfile>
      <anchor>a9e4376ef1f3111acff67bd2636e87369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ny</name>
      <anchorfile>classfcmaes_1_1moretry_1_1mo__wrapper.html</anchorfile>
      <anchor>a49583ed387d697b327640f4e537f8e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nobj</name>
      <anchorfile>classfcmaes_1_1moretry_1_1mo__wrapper.html</anchorfile>
      <anchor>a56aa5cba0d3f3415eb314363a1d0b649</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ncon</name>
      <anchorfile>classfcmaes_1_1moretry_1_1mo__wrapper.html</anchorfile>
      <anchor>a415eabee422272fc9ae0f0d91374af55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>y_exp</name>
      <anchorfile>classfcmaes_1_1moretry_1_1mo__wrapper.html</anchorfile>
      <anchor>a0ed665adf5fc723417110f0ca3fbe297</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::mode::MODE</name>
    <filename>classfcmaes_1_1mode_1_1_m_o_d_e.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>ad2876e7272901dcadf387a203a338648</anchor>
      <arglist>(self, int nobj, int ncon, Bounds bounds, Optional[int] popsize=64, Optional[float] F=0.5, Optional[float] Cr=0.9, Optional[float] pro_c=0.5, Optional[float] dis_c=15.0, Optional[float] pro_m=0.9, Optional[float] dis_m=20.0, Optional[bool] nsga_update=True, Optional[int] pareto_update=0, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[ArrayLike] ints=None, Optional[float] min_mutate=0.1, Optional[float] max_mutate=0.5, Callable modifier=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_guess</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>af1ac6ae50db24a626f6649175bfecf96</anchor>
      <arglist>(self, guess, mofun, rg=None)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>ask</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a1893dc839f866ab4d22f7fd13489bf73</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tell</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a8b928c29cf646933a1821566ec18d73a</anchor>
      <arglist>(self, np.ndarray ys, Optional[np.ndarray] xs=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, np.ndarray]</type>
      <name>minimize_ser</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a3b3a358c6fded3c638706495c88eff1a</anchor>
      <arglist>(self, Callable[[ArrayLike], ArrayLike] fun, Optional[int] max_evaluations=100000)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, np.ndarray]</type>
      <name>minimize_par</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a6f479d982825465b97c89e528351bf36</anchor>
      <arglist>(self, Callable[[ArrayLike], ArrayLike] fun, Optional[int] max_evaluations=100000, Optional[int] workers=mp.cpu_count())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pop_update</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a29791dbcb2e070361529475630de2052</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nobj</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>ad8a88c6e8d55396b806493982cb1cdb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ncon</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a20adacf20c1411e271fe9be8f7504fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a5c09cc3172e92b1253fb3e742cf30366</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lower</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a58a39c1931ba9e160e53a6a5bb597214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>upper</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a49d3d6a1d92e1681a12bb5770a9f6c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>]</type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>ab0225e759a59fcf9af44411a93f195d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rg</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a76afedce7a0358acd6633c6b6c6241e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>F0</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>aa68beb9a07ba893546bb695759b619f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>Cr0</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>ac76f411eb1bbe4b5ae4b3f9925370096</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pro_c</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a81f79977661c7a4dc09bc7d4e6d891a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dis_c</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>ae93a68cfc0936c62f75b890c9a6b19d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pro_m</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>ab1df5291083b159bf2671c038c3e38e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dis_m</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a2fde79913ea108d6f5b55ef509109ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type># use NSGA-II update strategy.</type>
      <name>nsga_update</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a57cf010ab62e26a06988d5f251c62b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pareto_update</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>ac5a6b39d9c5736bfb80c744742609f46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stop</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a3877c96890ef6ce77a0eb464c9efc9eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a2088eee51e00dd89edfdc48c882c99f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>evals</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a76a2bef54f9de04b12fac1cecf6378b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mutex</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>ac4814f6a92ab2814c791c23e76d9e1b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>p</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a6823b36a4bb5daadeef62ec78b7c2281</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ints</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>af3cea564c07f1d434bba95c39afc165c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_mutate</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a18459596315b3de8f34a62377c7b006c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_mutate</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a7151073081d8ed1d9309c9f44870d035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>modifier</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a523b3fbb4e1cebe83a81574fce168104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>x</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>aa0b5e8c7849badf7439bb4cd3ab1bfea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>y</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a0dc84c88e30325bfc4bec42ab07cdc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>vx</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a0386b1bcd3af523b5d82f8ba797c729d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vp</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a84feff642eb583f7e1174057703a2c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ycon</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a8824bcdfb8fd5d5e3fc3af5beed5f699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>eps</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a56041c14d6c40485bab6484b46b15cc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Cr</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a6afc083457c056ab0bf0612e1b71b647</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>F</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>adf37ab4f0a77200880ad47b5387b9266</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_init</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a762479149abbac45c113a9baf627a7d0</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_next_x</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a4e75c17eaa625b8be5fa0ccb0d64bd05</anchor>
      <arglist>(self, p)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_sample</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>a8eb775858ef6da65ce5d71629503e622</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_feasible</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>aa3f08e7e3d5e33149762ebf261b6c719</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_modifier</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>ab6f842a65bbcbab7bc6821c25737d0aa</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_is_dominated</name>
      <anchorfile>classfcmaes_1_1mode_1_1_m_o_d_e.html</anchorfile>
      <anchor>aefce54c9125b2799dd00564d8b32a654</anchor>
      <arglist>(self, y, p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::modecpp::MODE_C</name>
    <filename>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>ac8edb933a20c41ff33f74d59f9a7f486</anchor>
      <arglist>(self, int nobj, int ncon, Bounds bounds, Optional[int] popsize=64, Optional[float] f=0.5, Optional[float] cr=0.9, Optional[float] pro_c=0.5, Optional[float] dis_c=15.0, Optional[float] pro_m=0.9, Optional[float] dis_m=20.0, Optional[bool] nsga_update=True, Optional[int] pareto_update=0, Optional[ArrayLike] ints=None, Optional[float] min_mutate=0.1, Optional[float] max_mutate=0.5, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__del__</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>a580bb3d8baef2a338186cac64df0ea45</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_guess</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>a3267cafa8c068a367179034c3f5a562d</anchor>
      <arglist>(self, guess, mofun, rg=None)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>ask</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>ae42863ed67ebbb8f39a488a9caecebc1</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>adff2bdf2d7fa9dd5d8aabf4962471e07</anchor>
      <arglist>(self, np.ndarray ys, Optional[np.ndarray] xs=None)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell_switch</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>a92426eb6d5a2f38b3a1218fd9479a1bc</anchor>
      <arglist>(self, np.ndarray ys, Optional[bool] nsga_update=True, Optional[int] pareto_update=0)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>population</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>a3433826fba507128212dc6dd455a7227</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, np.ndarray]</type>
      <name>minimize_ser</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>aa4a7a3e4f9a3fc84dc37faf820025306</anchor>
      <arglist>(self, Callable[[ArrayLike], ArrayLike] fun, Optional[int] max_evaluations=100000)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, np.ndarray]</type>
      <name>minimize_par</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>a672b403a7e745d9e69532454f32d2b62</anchor>
      <arglist>(self, Callable[[ArrayLike], ArrayLike] fun, Optional[int] max_evaluations=100000, Optional[int] workers=mp.cpu_count())</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ptr</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>a082166f4b177fc11e1aba67824f04e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>ac85826131061fe5596f9420ff628f582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>af4ebfa8da5f83635f078bc8f543a3243</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nobj</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>a6c3952de5a26ec3374f08723eecf3b2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ncon</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>aa461c8e27adc9620ba6f4ed42b6e04cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classfcmaes_1_1modecpp_1_1_m_o_d_e___c.html</anchorfile>
      <anchor>ab5837c03082fdd02b53bb829e538a094</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>mode_optimizer::MoDeOptimizer</name>
    <filename>classmode__optimizer_1_1_mo_de_optimizer.html</filename>
    <member kind="function">
      <type></type>
      <name>MoDeOptimizer</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a163da18af0bf36f7d599a5ab0b0915b6</anchor>
      <arglist>(long runid_, Fitness *fitfun_, int dim_, int nobj_, int ncon_, int seed_, int popsize_, double F_, double CR_, double pro_c_, double dis_c_, double pro_m_, double dis_m_, bool nsga_update_, double pareto_update_, double min_mutate_, double max_mutate_, bool *isInt_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MoDeOptimizer</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>aa809e16cec26180884d0762dff1283ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>variation</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a0455034273652829d554dd3858b4b6e1</anchor>
      <arglist>(const mat &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>nextX</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>ae0edab6fb47d84a669d402f893ff4b6f</anchor>
      <arglist>(int p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modify</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>af3c43901c39d8ee6f6ec5fb1d02f327e</anchor>
      <arglist>(vec &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>crowd_dist</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a6ef6cfaa4da734c923fcdbf8692875f5</anchor>
      <arglist>(mat &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_dominated</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>af5f89faff00f2714a594e1d60cd2d6e3</anchor>
      <arglist>(const vec &amp;y, int p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_dominated</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a5e6806c59a545b96460af0bdbb3bfe27</anchor>
      <arglist>(const mat &amp;y, int i, int index)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>pareto_levels</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a10363d0716952c74500da8ca679dc95b</anchor>
      <arglist>(const mat &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>objranks</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a1d4ce60e415e141efaef2728d9952933</anchor>
      <arglist>(mat objs)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>ranks</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a7d415b38158a793f2a2d666e921d838b</anchor>
      <arglist>(mat cons, vec eps)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>pareto</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a3762607fa33f7bb558fd7aae9690fc37</anchor>
      <arglist>(const mat &amp;ys)</arglist>
    </member>
    <member kind="function">
      <type>ivec</type>
      <name>random_int_vector</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>aed65680ebd6f773bab2c475fbb527827</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_update</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a8941e256d6ff3843da336b4473513363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>ask</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a5abdc69324e8a71cfdebde3f5692e2ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>ae75b13be3336c20b675886b7e0f0bb11</anchor>
      <arglist>(mat xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>abe30b3010caaf8d4648b31adfa127fd2</anchor>
      <arglist>(mat ys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a9d11baa8f5e4d3e4f68fe678918eb09a</anchor>
      <arglist>(mat ys, bool nsga_update_, double pareto_update_)</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>getPopulation</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>ac0ac96eb437da4896667a45d11d37d17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a5e864a8ba16fb9f3ab38260f7cbfa773</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>getX</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>adbc432704310adeeade48f55cc1ecb63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>getY</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a52df4b6d8bd56e5aa89a775338ad4e2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIterations</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a5a626ae2567fef61822eaa0cc6aaa6e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStop</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a4022efa7d51865ed4d97931bf611e914</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Fitness *</type>
      <name>getFitfun</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a51327e372807cc0ef7de27dae144fbe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDim</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a9b3ff868b5d9f398ac048f02cdeddd7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNobj</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a403d7134c1c92e24818df5a8d00c0cc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNcon</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a9b4870b045748a2ad502f9788e4771be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPopsize</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>accd38c8a40e0b6a43c195941f7ce5c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPopsize</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a7983bac3697e7bc3f1972876b7dc6409</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>runid</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>aa80910f343eea5e7a618f3fe7b2caf25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Fitness *</type>
      <name>fitfun</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a1e170e8649f89ff648eff4bf8e12be82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>popsize</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a049b95e05389fa43cf9824e2c9f74738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a525d3ef2687b848cf441d5fa6fc603c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nobj</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a0fac3538c85110c074c67b42af91b63d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>ncon</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>adbdd68d58d539c3c06852139e73c50a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>keep</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a1293cf70abda945e279153f492a7ac93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stopfitness</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a8735c5c9b8d7403db83dacd167622428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>aa8d87c510901036d807bbd312e5b652b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>n_evals</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a52b577c15bc193cdf3f61e0c270184e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>stop</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a09b8202d4c500c4a51410eeb48e79103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>F0</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>aa08b5b7d015ba33ad43f3a6fe11869f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>CR0</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a2e19fae27d9ed4687096dd8426b4cbeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>F</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a21094b0a99aaed9a1e16ebde53afe8cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>CR</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a8e089b2926237332790e44bbb4cda41f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>pro_c</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a26c43b21cd840f3d8edfab54602c8088</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>dis_c</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a2629e1f2c634bf07a9606516515b6d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>pro_m</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a48225933ba93cf9b72b6dd748672944f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>dis_m</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a1ae0187b26f0dce18fe523e9ad13ac6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pcg64 *</type>
      <name>rs</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>ab85bddd76c7d99e1d39993ce774ca622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>popX</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a8117860be738d75f79e7c0359baf64c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>popY</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>ae4f57bd08638b2779afe68ddc7214d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>vX</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>ae6659d6638b70e97c73ef9dc81b1e0d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>vp</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>ad6725ac2fbfde7aa80f031f69b0567a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>lastCon</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a5b2332ae4d4347e6c2fbe7c361a3f4ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>lastEps</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a160a04578fb2ae6512edc6cb5cd642f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>next_size</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a2360670fdb71a5da25b70d0ba66ef6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; bool &gt;</type>
      <name>vdone</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a60d056b89031e6b391d95b679b713f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>pos</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>ac06b17efdd21d372c4487f50dbfaf11b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>nsga_update</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a378d36d73b3efdb1d9b6b5dbbedb130f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>pareto_update</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a7aaf6cbec2a38894382d79c0453b089f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>min_mutate</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a6c98f5bff98f17a004b99fb3430f9e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>max_mutate</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>a953467de91810e549f4bc0117ec73ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool *</type>
      <name>isInt</name>
      <anchorfile>classmode__optimizer_1_1_mo_de_optimizer.html</anchorfile>
      <anchor>afded42264dc1897c870e496adbd18dc5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::multiretry::multiretry</name>
    <filename>classfcmaes_1_1multiretry_1_1multiretry.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a77bf3a97684c97c11cbe30adcb54a74a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a8cd2b04b9e59bbe46a34efeacc59f4f1</anchor>
      <arglist>(self, stats)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>retry</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a55f05d04ff385042a990d3139b2c4f19</anchor>
      <arglist>(self, optimizer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>values</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a96427eba6d0685bada50f247b508580d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>remove_worst</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a9be3531534aef30b5b4f3242da6a69db</anchor>
      <arglist>(self, n=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>size</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a498ccce18e874dc891d0060bc2a77b7f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>dump</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a7c6d566da882dd32bae574f6ed3fb38c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>dump_all</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a5760fc807f9695ac7cb1e50d83ffc1e1</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>values_all</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>ac8076246ab84314be35894a67437a19e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>result</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a4901ed08a9e521c5c1c74c3ecc12a513</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>save</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a68046c0b4cc7c281cec9dfa673ce58fb</anchor>
      <arglist>(self, name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>load</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a34c47ed6cd26370e8c8d5227791921b8</anchor>
      <arglist>(self, name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_data</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a9f823aeb9dfd28ddc6ce5e4789013405</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_data</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a21913764a493beb8b148d1fcb640d5df</anchor>
      <arglist>(self, data)</arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>problem_stats</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a50eaad12e27a3c2850d1e34ac6050ab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>all_stats</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1multiretry.html</anchorfile>
      <anchor>a45317d4e99e798e661776de739d331b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dual_annealing::nanexception</name>
    <filename>classdual__annealing_1_1nanexception.html</filename>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdual__annealing_1_1nanexception.html</anchorfile>
      <anchor>a361bbd58684b727e57c9b1fb87eeae2e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::NegGeom</name>
    <filename>classexamples_1_1rover_1_1_neg_geom.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_neg_geom.html</anchorfile>
      <anchor>ae0cd947662006d62c1be1dbb450891df</anchor>
      <arglist>(self, geometry)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>contains</name>
      <anchorfile>classexamples_1_1rover_1_1_neg_geom.html</anchorfile>
      <anchor>ae477ebc2bb651493f613f8667caf4ea9</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>geom</name>
      <anchorfile>classexamples_1_1rover_1_1_neg_geom.html</anchorfile>
      <anchor>a977d66ad1eece3d36dd7d31997338a04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::NLopt</name>
    <filename>classfcmaes_1_1optimizer_1_1_n_lopt.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_n_lopt.html</anchorfile>
      <anchor>aa14e61b3608c3de70f42e3bc7bfce31f</anchor>
      <arglist>(self, algo, max_evaluations=50000, store=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_n_lopt.html</anchorfile>
      <anchor>aca63a2312668db8238a4d71819fa437f</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nlfunc</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_n_lopt.html</anchorfile>
      <anchor>a02628583a11cb998eba4aa6f9b499f76</anchor>
      <arglist>(self, x, _)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>algo</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_n_lopt.html</anchorfile>
      <anchor>a33c832c03b0c4372a3c3274a007e4afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_n_lopt.html</anchorfile>
      <anchor>a87532d607570bf7ca347eb50dcbf18cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nlfunc</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_n_lopt.html</anchorfile>
      <anchor>a4801e08b9462c55ccc3239a41bd117f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::NormalizedInputFn</name>
    <filename>classexamples_1_1rover_1_1_normalized_input_fn.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_normalized_input_fn.html</anchorfile>
      <anchor>a385299bdf85db1af00e87d23169e2fb8</anchor>
      <arglist>(self, fn_instance, x_range)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1rover_1_1_normalized_input_fn.html</anchorfile>
      <anchor>a1753cd4e4dd5b023bfd632c0668a1e06</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>project_input</name>
      <anchorfile>classexamples_1_1rover_1_1_normalized_input_fn.html</anchorfile>
      <anchor>adb36e5847488cc430f99b6b43f2de8cb</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>inv_project_input</name>
      <anchorfile>classexamples_1_1rover_1_1_normalized_input_fn.html</anchorfile>
      <anchor>a79b8fee249a911d1ac1f07389ebfacee</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_range</name>
      <anchorfile>classexamples_1_1rover_1_1_normalized_input_fn.html</anchorfile>
      <anchor>ac44a6618ec40360dfa1cec1e3d1cb113</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fn_instance</name>
      <anchorfile>classexamples_1_1rover_1_1_normalized_input_fn.html</anchorfile>
      <anchor>a8242038aecd8611a62868e37886eba96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>x_range</name>
      <anchorfile>classexamples_1_1rover_1_1_normalized_input_fn.html</anchorfile>
      <anchor>aadce70fe4d3a6040ab0df0b52a65873b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Optimizer</name>
    <filename>classfcmaes_1_1optimizer_1_1_optimizer.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_optimizer.html</anchorfile>
      <anchor>a51efe265d8e041b095d8210878d7d7c1</anchor>
      <arglist>(self, Optional[int] max_evaluations=50000, Optional[str] name=&apos;&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>max_eval_num</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_optimizer.html</anchorfile>
      <anchor>adfc4b7f5b36503f186c68d521a9ede8a</anchor>
      <arglist>(self, store=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_count_runs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_optimizer.html</anchorfile>
      <anchor>acf09b9b314cc4faf25c9935e76ae1821</anchor>
      <arglist>(self, store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_evaluations</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_optimizer.html</anchorfile>
      <anchor>a434f96f307e1bf0b0196933945d518e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_optimizer.html</anchorfile>
      <anchor>ae0423ec54db7b25862e01d7863ab4708</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::evaluator::parallel</name>
    <filename>classfcmaes_1_1evaluator_1_1parallel.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1parallel.html</anchorfile>
      <anchor>a9679b6f265113de94c38364e0124e3cb</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[int] workers=mp.cpu_count())</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1parallel.html</anchorfile>
      <anchor>a63cfd5289e05dc71f2b53e24e268350f</anchor>
      <arglist>(self, ArrayLike xs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stop</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1parallel.html</anchorfile>
      <anchor>ace042713bbecd9278b68cbf54f12322f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evaluator</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1parallel.html</anchorfile>
      <anchor>a5f8d924594d093ffe94f441d62e79b6f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::evaluator::parallel_mo</name>
    <filename>classfcmaes_1_1evaluator_1_1parallel__mo.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1parallel__mo.html</anchorfile>
      <anchor>a30a69e897a8f91003afd40baa508d7fe</anchor>
      <arglist>(self, Callable[[ArrayLike], ArrayLike] fun, int nobj, Optional[int] workers=mp.cpu_count())</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1parallel__mo.html</anchorfile>
      <anchor>a2e2dfb664e0d8c322934abcba87e59a4</anchor>
      <arglist>(self, ArrayLike xs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stop</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1parallel__mo.html</anchorfile>
      <anchor>ab85eef7c755dcc597fe05ff726ab848e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nobj</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1parallel__mo.html</anchorfile>
      <anchor>a9976a23db518884ec306a66c40c241a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evaluator</name>
      <anchorfile>classfcmaes_1_1evaluator_1_1parallel__mo.html</anchorfile>
      <anchor>ae6b28a6671fa2734ab1b48e7b6b20b8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::pgpecpp::PGPE_C</name>
    <filename>classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c.html</anchorfile>
      <anchor>a966fbd9f17de3cc069973c3b9d01915c</anchor>
      <arglist>(self, int dim, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.1, Optional[int] popsize=32, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=True, Optional[int] lr_decay_steps=1000, Optional[bool] use_ranking=False, Optional[float] center_learning_rate=0.15, Optional[float] stdev_learning_rate=0.1, Optional[float] stdev_max_change=0.2, Optional[float] b1=0.9, Optional[float] b2=0.999, Optional[float] eps=1e-8, Optional[float] decay_coef=1.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__del__</name>
      <anchorfile>classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c.html</anchorfile>
      <anchor>a255b3fc3e61ebee7f65b20d63c6ba3d4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.array</type>
      <name>ask</name>
      <anchorfile>classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c.html</anchorfile>
      <anchor>ab63d18c231a89de22d03945f00e5fdfe</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell</name>
      <anchorfile>classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c.html</anchorfile>
      <anchor>a3d030c90af2ea816f60372c4f0bb98d5</anchor>
      <arglist>(self, np.ndarray ys)</arglist>
    </member>
    <member kind="function">
      <type>np.array</type>
      <name>population</name>
      <anchorfile>classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c.html</anchorfile>
      <anchor>aeaf7b21b34fd7cb1438ed8bcf23a2f4c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>result</name>
      <anchorfile>classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c.html</anchorfile>
      <anchor>a93ccd2d19bf80b6da653b292f276e94e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ptr</name>
      <anchorfile>classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c.html</anchorfile>
      <anchor>a9ffbedaabec9d62b8bd10edab6324c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c.html</anchorfile>
      <anchor>a65ed94e32ef0d14d2e63d6db3df4ef34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c.html</anchorfile>
      <anchor>ac4aea22f09cd578e95e7e4b7eeca12e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Pgpe_cpp</name>
    <filename>classfcmaes_1_1optimizer_1_1_pgpe__cpp.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_pgpe__cpp.html</anchorfile>
      <anchor>a2845640bcdc3ee87799cf8decf702f1d</anchor>
      <arglist>(self, Optional[int] max_evaluations=500000, Optional[int] popsize=640, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[float] sdevs=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_pgpe__cpp.html</anchorfile>
      <anchor>a15393a3e9dbb73be5cf8e5c9cc6f8c2d</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=0.1, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>popsize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_pgpe__cpp.html</anchorfile>
      <anchor>ad8bb83e394a209e90761b1d77b424e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stop_fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_pgpe__cpp.html</anchorfile>
      <anchor>a8927d734b23546a18e42e14ade1569e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>guess</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_pgpe__cpp.html</anchorfile>
      <anchor>a3acb28558e183337fbc25d0f30dfc2a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sdevs</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_pgpe__cpp.html</anchorfile>
      <anchor>a32af3f567e2852891077542f09c90ec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>workers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_pgpe__cpp.html</anchorfile>
      <anchor>a8862c3af607ca2bb3c07bbef226691aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pgpe::PGPEOptimizer</name>
    <filename>classpgpe_1_1_p_g_p_e_optimizer.html</filename>
    <member kind="function">
      <type></type>
      <name>PGPEOptimizer</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>abb3c39813a8c1221d91192bc8a0847df</anchor>
      <arglist>(long runid_, Fitness *fitfun_, int dim_, int seed_, int popsize_, const vec &amp;guess_, const vec &amp;inputSigma_, int maxEvaluations_, double stopfitness_, int lr_decay_steps_, bool use_ranking_, double center_learning_rate_, double stdev_learning_rate_, double stdev_max_change_, double b1_, double b2_, double eps_, double decay_coef_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PGPEOptimizer</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>afdc7c84fd76b0b6fe5c0df6a1827a98f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>process_scores</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a94f0a09e1ac629bc2daa0782f0b78b7a</anchor>
      <arglist>(const vec &amp;ys)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_reinforce_update</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>aedf86311561b4c064c713229e9fff837</anchor>
      <arglist>(const vec &amp;fitness_scores, const mat &amp;scaled_noises, const vec &amp;stdev)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>update_stdev</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>af5dd12d8bb2b74222820282793a111ed</anchor>
      <arglist>(const vec &amp;stdev, double lr, const vec &amp;grad, double max_change)</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>ask</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a431dca3f8ed9c12e85c449474001930c</anchor>
      <arglist>(const vec &amp;stdev, const vec &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>ask</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>adb8d7f20201db004da433725efda69cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>af44c1f8d0f9632e39c187fe89c6df26e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>ask_decode</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>abcd7c230df525f67d06fa41f4450f23d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tell</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a920b8cf76e73e296c8a416c6100e9b96</anchor>
      <arglist>(vec ys)</arglist>
    </member>
    <member kind="function">
      <type>mat</type>
      <name>getPopulation</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a1c4686a59afbf7da3383fe594af0f2ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>getBestX</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>ad9fae8865ce2ae4502feb469621cf336</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBestValue</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a0edc78afeba19ac33c69025815923088</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIterations</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>aa189f3e0a4b7a3e1c2cd477de2bde537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStop</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a13e59873810dc80105b232862e97694d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Fitness *</type>
      <name>getFitfun</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a03e67227b1099ca3c35c0f9d953cc86c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDim</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>acd4bfd1277a1fdef42a5c3f4152205e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPopsize</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>adc8adb1458abef40a6cd1eacc4fd38a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>runid</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a905b9565ca17288415da939216dc70e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Fitness *</type>
      <name>fitfun</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a08b11e28ce3478c1bf596412678ae94d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ADAM *</type>
      <name>optimizer</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a6b20bd300923092a198071cd3bcd1f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>popsize</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a852a3bc0a44a9a4a37ac175b4bd7993d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a9a62cfb8a5e5737cd6940559a5a28e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>maxEvaluations</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>ad65ef0d571184f00a530b744b318720b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>keep</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a8ae592b3eafa6b768dce659bd69f2b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stopfitness</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>abd2a628f0257f84148dfefa844d911ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a763dac15ecb73191656d1e5c9d56cc00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>bestY</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>ac0e607ff7462b3c2c231fe06756756ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>bestX</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a60b5b90ad37acfd8b562ca3fb0189e5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>stop</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a66514826be64b9814c0dbb330c5525d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pcg64 *</type>
      <name>rs</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a5fe46e06fd5258960a7d1bf70dd1eab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>popX</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a785f388ac746302c91cb964563d14e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>mat</type>
      <name>scaled_noises</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a38fb3ee0b953d37ccd5aad77250b2bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>popY</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a4cf61ec6c2aaaa233969c765c4f38928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>center</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a91f07247eabc246de82e0fe27367ff1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>stdev</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a3b22f8ad3324a2cde82a753881a451f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>grad_center</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>aa05ce82c5de00141802efa50625c4060</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>grad_stdev</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a6f781a67d0054069b30742bdc7a3de0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>use_ranking</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a0b57a5c636c110d07675dab85f18dd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>lr_decay_steps</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a06d3dbc71179429995fd6c068dfcb732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>center_learning_rate</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>acc4988a82176b8c5e067766f443aed74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stdev_learning_rate</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>af02edda627bf7e47c5b67069288af9fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>stdev_max_change</name>
      <anchorfile>classpgpe_1_1_p_g_p_e_optimizer.html</anchorfile>
      <anchor>a851acdc3f2d277bed929991ad72c15e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::siemens::Plant</name>
    <filename>classexamples_1_1siemens_1_1_plant.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a0c807d70b50a4f01853770887af951c9</anchor>
      <arglist>(self, dtime)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reset</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a97bf8351232cf791ed59ee44fe62897a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__str__</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a148ff3ee966131e176d1f8274249fee7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>next_product</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a1e32e624120cf855722e347ed941b77f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tick</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>ad8b1d9faabe8e2a82ea8eae1e98ce1c5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>simulate</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a4570217ffc213f931499ca5ca147819c</anchor>
      <arglist>(self, all_time, batch_size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>simulate_threadsafe</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a65f01129754dfefe1d95b9b44c0a796d</anchor>
      <arglist>(self, all_time, batch_size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a3262a8868ef2877018ed63cd77d9c5be</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>name</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>af348bfc4ca148a674e48b0131ba0baeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtime</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>ab17655317b87c0ec787a77dc66bff7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a7ef051716b1d967271974422393ba9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>ae9100e0cacbed379d5b3aaea2256033a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>qd_bounds</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a5242ec61b86bf80a14907a9ef9ecddb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>batch_size</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a512e790009360ad66c3b3bdce5493fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>machine1</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a23392ca60bd557117771bab5e577f9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>machine2</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>af8862c8439d7706e47f9902dabfd73a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>buffer</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a70b06de080413c95991cb21842647e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>count_finished</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a14e3b22b9af956f9a5c4ef9a74ea6074</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>time</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>ab758b7cd5760565612a24989e308e0c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>product</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>af64e7c8f379c2aa2d543998a9be8b170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>to_process</name>
      <anchorfile>classexamples_1_1siemens_1_1_plant.html</anchorfile>
      <anchor>a70badb27ace0d8c60d0688d36c69bb84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::PointBSpline</name>
    <filename>classexamples_1_1rover_1_1_point_b_spline.html</filename>
    <base>examples.rover.Trajectory</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_point_b_spline.html</anchorfile>
      <anchor>adbbedb28344ce819672c40009723ca29</anchor>
      <arglist>(self, dim, num_points)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_params</name>
      <anchorfile>classexamples_1_1rover_1_1_point_b_spline.html</anchorfile>
      <anchor>ace33159f5979622fd5dd8ed23ebe3cab</anchor>
      <arglist>(self, params, start=None, goal=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_points</name>
      <anchorfile>classexamples_1_1rover_1_1_point_b_spline.html</anchorfile>
      <anchor>a71851a1b64fad26272d8d039eb9951f7</anchor>
      <arglist>(self, t)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tck</name>
      <anchorfile>classexamples_1_1rover_1_1_point_b_spline.html</anchorfile>
      <anchor>a09e55ae544de814c7f8d3336f01fdb0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>d</name>
      <anchorfile>classexamples_1_1rover_1_1_point_b_spline.html</anchorfile>
      <anchor>a725daa8d759ab3fc43d40f4221335074</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>npoints</name>
      <anchorfile>classexamples_1_1rover_1_1_point_b_spline.html</anchorfile>
      <anchor>afafeb955c14ba2f44d50f2a089d07d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="property" static="yes">
      <type></type>
      <name>param_size</name>
      <anchorfile>classexamples_1_1rover_1_1_point_b_spline.html</anchorfile>
      <anchor>a5e61be4384410f60da557be42ec8a7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>param_size</name>
      <anchorfile>classexamples_1_1rover_1_1_point_b_spline.html</anchorfile>
      <anchor>abe8e49ded9a98949bf77a4c974e10b71</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::moexamples::poloni</name>
    <filename>classexamples_1_1moexamples_1_1poloni.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1moexamples_1_1poloni.html</anchorfile>
      <anchor>a811f372af3678355144708e348f2ff4d</anchor>
      <arglist>(self, dim)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1moexamples_1_1poloni.html</anchorfile>
      <anchor>af982af89da67c6ffab1c741d968d2ad1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1poloni.html</anchorfile>
      <anchor>a7ce92402006f09357b0a77fcc410d5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weight_bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1poloni.html</anchorfile>
      <anchor>a632a5db6aaebbf3cc20ec04cb185cc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>name</name>
      <anchorfile>classexamples_1_1moexamples_1_1poloni.html</anchorfile>
      <anchor>a976e67b737c31d4ca1a27b6243ebe06e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::powerplant::PowerPlant</name>
    <filename>classexamples_1_1powerplant_1_1_power_plant.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1powerplant_1_1_power_plant.html</anchorfile>
      <anchor>a324449e8830f6615f93aa385ab45ef1e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>calculate_efficiency</name>
      <anchorfile>classexamples_1_1powerplant_1_1_power_plant.html</anchorfile>
      <anchor>ac895a4b4ea8434a5320344b71db52b0d</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>calculate_qd</name>
      <anchorfile>classexamples_1_1powerplant_1_1_power_plant.html</anchorfile>
      <anchor>a5a1c1253b4d58f5f7d346fb24ce83472</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nw</name>
      <anchorfile>classexamples_1_1powerplant_1_1_power_plant.html</anchorfile>
      <anchor>aab711b2d10c71730460b6b62a4b6a9aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>power</name>
      <anchorfile>classexamples_1_1powerplant_1_1_power_plant.html</anchorfile>
      <anchor>aa3ea795b382cc29715c2fec04b34f184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>heat</name>
      <anchorfile>classexamples_1_1powerplant_1_1_power_plant.html</anchorfile>
      <anchor>a4993a483a10f4b089953cf5a04f02c02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>edgecover::problem</name>
    <filename>classedgecover_1_1problem.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classedgecover_1_1problem.html</anchorfile>
      <anchor>a7e56f4392b466592b5be52005fb1bd4a</anchor>
      <arglist>(self, g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classedgecover_1_1problem.html</anchorfile>
      <anchor>a8ad14faff9c46c2d1da7ddf258b015b2</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classedgecover_1_1problem.html</anchorfile>
      <anchor>a076d2450c80fd6459cb257188c1afc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classedgecover_1_1problem.html</anchorfile>
      <anchor>ace89b603f11f12ce781bb6e2b1a27d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>g</name>
      <anchorfile>classedgecover_1_1problem.html</anchorfile>
      <anchor>acaf0cb6b366623d1b0bea27a3bcbb743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_n</name>
      <anchorfile>classedgecover_1_1problem.html</anchorfile>
      <anchor>af5df7f082a9a6052bab659374db8b08c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::employee::problem</name>
    <filename>classexamples_1_1employee_1_1problem.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a033ab2b283e0100bf5a86f4dc8d1cdee</anchor>
      <arglist>(self, json_file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a88fb1f528fee9cf2fe3979bda5bb43c5</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness_mo</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a7e757b49faf9cee5a35c9ca99b3e28c3</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>show</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a7a2e3aedb09ebf076fb59d8505c76fe9</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a96c79aee6dab29a25fd28b0b383f1916</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_mo</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a451356183bd266ec5feb44a1b9cf92ef</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>shifts</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>ab63104468a52403ee813ce6ff6745374</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>shift_to_index</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>af730ca54e6310f3f3cc8322deb6cf6c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>days</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a4899b9bc494d478a71fbeb28f040ceba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>locations</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a03eca8445435b63a090a54e4b3659057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>required_skills</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>aab1b2159c2e6513b5861764ae21556dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sec_start</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a7cbf0b7dd7d7286687a799331c6dd51e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sec_end</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a82e6d3c21f10189d1b44d8847f6a1c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>day_to_index</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>af50494fb419a3c824b2dea5f97538891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>day_ids</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>af93f1f9f6296f980a3b2fdeb681eadb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>location_to_index</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>ac13841291b0064789b8d36a3bfb275e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>location_ids</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a791bc4ac8d62196dab60d3277b146f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>employees</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a00dc45ea9a2513fa5f1cbb6867e5d677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>employee_to_index</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>ad7650edfaf32cc655316a9fa8f2c5691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>names</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>aac5d784e20b57d4542dad5f98ead0925</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>skill_sets</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>af535f89234509bd801f6c978aa50c9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name_to_index</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>ac5f026f711fad91d2eb81fec35eccc68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name_ids</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>ac408d43691b03a30620fe529e726da1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>skill_to_index</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a24f12742b39ffe059a54abcb153d8099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>skill_set_ids</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a5d11cc597eed0c3ec8d17ff1709b4348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>required_skill_ids</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>ac36deeee6c750e0eda3a912b28ed04e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>avails</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a17c3a286e29019b8fdf8fda0ef405dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>avail_to_index</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>aea543c5ede2a6e57fa57ba473b67fa98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>avail_names</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>affd959b97305da24e073789749d4b800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>avail_types</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>ad467a80771739159fdf447ef57bbc517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>avail_days</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a54478a860a92917ca51c7ae454bf3ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>avail_name_ids</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a41c8d2a1c3c701b94c44ab11da40b132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>avail_day_ids</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a1e9a8352ff2314fa6195be5a4402e4b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>avail_type_ids</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>af337c3fbf86bdce8af2a6edfb41de607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a20d86685f62e59d9c53fe09a8678b8cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1employee_1_1problem.html</anchorfile>
      <anchor>a0f84e8b53814615766163e596a3425b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fbcover::problem_fb</name>
    <filename>classfbcover_1_1problem__fb.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfbcover_1_1problem__fb.html</anchorfile>
      <anchor>a738fdebee24a1ec0993b28d2f447d61e</anchor>
      <arglist>(self, g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cost</name>
      <anchorfile>classfbcover_1_1problem__fb.html</anchorfile>
      <anchor>afdb76f1a3d3d8545c2190561bd1905e4</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classfbcover_1_1problem__fb.html</anchorfile>
      <anchor>aaee0bd1064a102d1c0b08531a924bebc</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness_so</name>
      <anchorfile>classfbcover_1_1problem__fb.html</anchorfile>
      <anchor>aafca7fa77a778148b4e8f81fc10f5607</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfbcover_1_1problem__fb.html</anchorfile>
      <anchor>a38bb90d353f1dcd4e045e2dd55870909</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classfbcover_1_1problem__fb.html</anchorfile>
      <anchor>a6da63b58d421497ed5f538e9ab9ae1a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>g</name>
      <anchorfile>classfbcover_1_1problem__fb.html</anchorfile>
      <anchor>a7f470e8c99d290e4c199ca78f3f850f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classfbcover_1_1problem__fb.html</anchorfile>
      <anchor>afc7ab8dcb02a6c186221899a0cc09ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_cost</name>
      <anchorfile>classfbcover_1_1problem__fb.html</anchorfile>
      <anchor>aebceee07ffeaa078cc29aca5d20e1971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_cov</name>
      <anchorfile>classfbcover_1_1problem__fb.html</anchorfile>
      <anchor>a1fca4ef0d827ce916d4b4ab58037567c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::multiretry::problem_stats</name>
    <filename>classfcmaes_1_1multiretry_1_1problem__stats.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>aa0f75cc24bf60c302db2476b7b536c08</anchor>
      <arglist>(self, prob, id, index, retries_inc=64, num_retries=10000)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>retry</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>abff769ec9721100a3274ce5e4e1d7035</anchor>
      <arglist>(self, optimizer)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>store</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>ae367b1b41066f3652e4885add625054a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>prob</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>a609b88130dc53480e9b2482d528bdc9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>a816013d97866561967441f7f5d469a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>aa692dda9e8785372877087a37861e73e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>retries_inc</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>a9f91d58092173d90258dfdab875b1a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>value</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>ac081ca6b75614526547d3be6c661cbb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>id</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>aa558cc8f587b4b125d6761578f1be803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>index</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>a8ae48429f680e70a0447d7896be1d4eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ret</name>
      <anchorfile>classfcmaes_1_1multiretry_1_1problem__stats.html</anchorfile>
      <anchor>acec8f2c5826ca9ebd4b5591ae90d8e69</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::robot::PushReward</name>
    <filename>classexamples_1_1robot_1_1_push_reward.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>a79391c66d4c7e5d3579fa0ef864999c4</anchor>
      <arglist>(self, do_gui=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>a12fdbdc7cace400a133572e73d6cc7d2</anchor>
      <arglist>(self, argv)</arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>xmin</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>a12d01d1a6bda486ebef6fdf58bb16959</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>xmax</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>a8bcba3852110328e20e0b9c8890bd498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>sxy</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>ac1d9afbd054c2f7332a4bbd9f139d2ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>sxy2</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>a089bb19e4fbc8bbfa0e69686f1a07a74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>gxy</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>ac56d4765930f5f39be5ef19a42b4ebe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>gxy2</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>abc433b7d5ac069d7ac9b2ee60b168d43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>do_gui</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>aa92457b63fd7c895077365c0ff63b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="property" static="yes">
      <type></type>
      <name>f_max</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>a6e1df9cc36056fea745db2d21136b0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property" static="yes">
      <type></type>
      <name>dx</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>a833013c53995102c560bfc6fe37b89d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>f_max</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>ada3f0c35266a5467ac22b6b0c80a3ea9</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>dx</name>
      <anchorfile>classexamples_1_1robot_1_1_push_reward.html</anchorfile>
      <anchor>a1d2daca54b1e449ab25ff769faedba81</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PVThrust</name>
    <filename>struct_p_v_thrust.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>struct_p_v_thrust.html</anchorfile>
      <anchor>a6eb2b209c427f2d8477af8e066c7fe07</anchor>
      <arglist>(const state_t &amp;pv, state_t &amp;yDot, const double)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>_veff</name>
      <anchorfile>struct_p_v_thrust.html</anchorfile>
      <anchor>ae8a9c89ffadcb3ee34c8a73cc1915a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>_mu</name>
      <anchorfile>struct_p_v_thrust.html</anchorfile>
      <anchor>aff57ae6be1d59ba76d1d5cb20ab3f7a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>_ux</name>
      <anchorfile>struct_p_v_thrust.html</anchorfile>
      <anchor>a7c9b6042921c8a1f6ea50625739f4e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>_uy</name>
      <anchorfile>struct_p_v_thrust.html</anchorfile>
      <anchor>a1aabd4508e41926e63411a74fbab4b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>_uz</name>
      <anchorfile>struct_p_v_thrust.html</anchorfile>
      <anchor>a07f93fb87261c551035e907d7ba133eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>_unorm</name>
      <anchorfile>struct_p_v_thrust.html</anchorfile>
      <anchor>afc970af5b54428f05ed1e14b32fe00e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PVTwaste</name>
    <filename>struct_p_v_twaste.html</filename>
    <member kind="function">
      <type>void</type>
      <name>sunr</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a24eeb47274a02f75d1e1f4cce1d0e858</anchor>
      <arglist>(double t, double &amp;xsun, double &amp;ysun, double &amp;zsun)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moonr</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a1cfca4e9f5f2698750985837e6cb9098</anchor>
      <arglist>(double t, double &amp;xM, double &amp;yM, double &amp;zM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a5750399f7beaf3ada4493ba6ae4634b0</anchor>
      <arglist>(const state_t &amp;pv, state_t &amp;yDot, const double t)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>_cram</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a2d0bba9d3cc1604b9b7f5d246424ff26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>muE</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a3fec432bcbb1df023d16d391281c851c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>muS</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a52e84d9913b95d595e0bacf4f7ca9de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>muM</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a943290c3b910f9f1016d0dced0705b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Re</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>ae6cc1ca203ca5714f009597f21084df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>C20</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>ac38aab594992fbf42162e262a5198fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>C22</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>ac151accd6ddb505bc4dcb0e733bf63d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>S22</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a2e8b7d56d53ecea62d2eab181484c289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>muERe2V5C20</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a837536dbf943a0e98a06baf33501fff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>muERe2V15C22</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>afbeafc30daf033bf6e391c52acc30de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>muERe2V15S22</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a269ded5e0e6bf15f9555b8051fd41ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>thetaG</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>ae2c0e25846d64775a15258981426f1ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>vE</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>afb0a11e7c464f1d5e2ea31ac73457e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>vMa</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a65eb3aee288895471a46b161b71a2075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>vMp</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>ac16a357b63460839f8817382093ce2e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>vMs</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>ac94bac84a19f62603f096eb832ccacdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>aS</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a6de94e89e8e369b52666fe682ad31c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Psrp</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>ae2e5af7b7e92b4f42357a69a54d98463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Psrpas2</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>ab5ec885cc8046aa8cc73ad72f9aef8da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>phiS</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>aa423f7cadbdad2fd76457f73a144b9e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>OMomS</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a9e79ddea190aeb198ef6ab36181c95cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>vS</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>ab8ade552c1fccf17ddaa56c7f842b1e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>ep</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a926ed0db0d282eab35a5072abc024b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>cosep</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a51a1f5057c4468e7a27a0dfacf72934b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>sinep</name>
      <anchorfile>struct_p_v_twaste.html</anchorfile>
      <anchor>a9920cfb5cdf508bc5ed7053e9b8dae90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::benchmark_gtop_pygmo::pygmo_udp</name>
    <filename>classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp.html</anchorfile>
      <anchor>a554b734061744f3a24a94b3b2b5638b1</anchor>
      <arglist>(self, fun, bounds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp.html</anchorfile>
      <anchor>a8b05705866c5de83931191324a4e1311</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_bounds</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp.html</anchorfile>
      <anchor>a41d3b087b32923f75cbe401f3f2419e3</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp.html</anchorfile>
      <anchor>a3cbfcb92d557e07dca883659abd8375a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp.html</anchorfile>
      <anchor>ab521631aff5164ef305cc19229711bb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::python_fun</name>
    <filename>classfcmaes_1_1astro_1_1python__fun.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1python__fun.html</anchorfile>
      <anchor>abf06eb12ce6525e9243940a84c73d94c</anchor>
      <arglist>(self, cfun, bounds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1astro_1_1python__fun.html</anchorfile>
      <anchor>a192073cb4d9c99ce7078bc4600bb2d7f</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cfun</name>
      <anchorfile>classfcmaes_1_1astro_1_1python__fun.html</anchorfile>
      <anchor>a4e336bc9e7096b1fffe9576915a2230c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classfcmaes_1_1astro_1_1python__fun.html</anchorfile>
      <anchor>a120709c7a954843ad0f8bb32da5a6658</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::random_search</name>
    <filename>classfcmaes_1_1optimizer_1_1random__search.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1random__search.html</anchorfile>
      <anchor>a6fa5aeb0f39108286986746640a41331</anchor>
      <arglist>(self, max_evaluations=50000)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1random__search.html</anchorfile>
      <anchor>a32252573912d707c4725f05041d70db1</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::testfun::Rastrigin</name>
    <filename>classfcmaes_1_1testfun_1_1_rastrigin.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_rastrigin.html</anchorfile>
      <anchor>adc0d1a013ef3b19d8fa0b24bb67cbfb0</anchor>
      <arglist>(self, dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::testfun::RastriginMean</name>
    <filename>classfcmaes_1_1testfun_1_1_rastrigin_mean.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_rastrigin_mean.html</anchorfile>
      <anchor>ab3de865f1a1c5a6969740d4be0a75b88</anchor>
      <arglist>(self, dim, n)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE1</name>
    <filename>classexamples_1_1repython_1_1_r_e1.html</filename>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e1.html</anchorfile>
      <anchor>a62aecf645bd5e046d838fd49c9e6387d</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_var</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e1.html</anchorfile>
      <anchor>a347dd0c4f17e9718c0df49fd7c75efd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_obj</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e1.html</anchorfile>
      <anchor>a79007aff52e36b64720c3e09548ebaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_con</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e1.html</anchorfile>
      <anchor>a0425028529633a04ace46c58e1dd1b4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xl</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e1.html</anchorfile>
      <anchor>a78336c0128f5d17a9c96f78078c1ae17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xu</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e1.html</anchorfile>
      <anchor>a8736d6d0e49d3ee22b26c71f631897e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE1_pymoo</name>
    <filename>classexamples_1_1repython_1_1_r_e1__pymoo.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e1__pymoo.html</anchorfile>
      <anchor>ab314e6a6ce2bfb487d8878d35e185c0a</anchor>
      <arglist>(self, **kwargs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_evaluate</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e1__pymoo.html</anchorfile>
      <anchor>aad366e994f5fabef85e0031f3e91fba0</anchor>
      <arglist>(self, x, out, *args, **kwargs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE2</name>
    <filename>classexamples_1_1repython_1_1_r_e2.html</filename>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e2.html</anchorfile>
      <anchor>a7b942a0dcfcc17647034a022e4ee8b22</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_var</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e2.html</anchorfile>
      <anchor>ae56908908830809b010390d8984fce5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_obj</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e2.html</anchorfile>
      <anchor>a4451f78ea5a13a6a058bb166b69f7d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_con</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e2.html</anchorfile>
      <anchor>ad9066a583ea46c2dd5b11ba2977d105a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xl</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e2.html</anchorfile>
      <anchor>abab8d191714a682c86a251527123b70a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xu</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e2.html</anchorfile>
      <anchor>ad74ec33084f9dc48acc8621924da0918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>feasible_values</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e2.html</anchorfile>
      <anchor>a8cbacbf8223af1e0e73e3b9af4a612b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE3</name>
    <filename>classexamples_1_1repython_1_1_r_e3.html</filename>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e3.html</anchorfile>
      <anchor>a08282daa4c00b48d3bea50d8a3a7d34b</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_var</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e3.html</anchorfile>
      <anchor>a2164ee3dd3e7ad6e2c9e95d58a79d085</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_obj</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e3.html</anchorfile>
      <anchor>a2f8741f6d744b59cdb11f079f44f4689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_con</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e3.html</anchorfile>
      <anchor>a6013e646a05358a4c86fff04f7ea5741</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xl</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e3.html</anchorfile>
      <anchor>aa57af065608ff00272105b8619fdada3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xu</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e3.html</anchorfile>
      <anchor>a94bf31e30da700f6ee009c0763d9f9f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE4</name>
    <filename>classexamples_1_1repython_1_1_r_e4.html</filename>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e4.html</anchorfile>
      <anchor>a7b8f06f5b59df54411b2d5b578e25e7d</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_var</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e4.html</anchorfile>
      <anchor>a551112350b80d556eacd84625f2180fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_obj</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e4.html</anchorfile>
      <anchor>a1adc041beee161faa2bb0a6a87b6264a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_con</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e4.html</anchorfile>
      <anchor>aad19b386b02e8452bfca4cb3d3bb7f3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xl</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e4.html</anchorfile>
      <anchor>a806914bb3c4777f80a0c30c8288dab5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xu</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e4.html</anchorfile>
      <anchor>a8d6defed2a57e9b5670a91f5f7f91b73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE4_pymoo</name>
    <filename>classexamples_1_1repython_1_1_r_e4__pymoo.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e4__pymoo.html</anchorfile>
      <anchor>a7b6400b6d3527fcb6fae85bc89abd091</anchor>
      <arglist>(self, **kwargs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_evaluate</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e4__pymoo.html</anchorfile>
      <anchor>ae7a6d3acc7b15ffaa2e242622a1aef31</anchor>
      <arglist>(self, x, out, *args, **kwargs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE5</name>
    <filename>classexamples_1_1repython_1_1_r_e5.html</filename>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e5.html</anchorfile>
      <anchor>a541c8e896355cdd229f7ba2f4caaa388</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_var</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e5.html</anchorfile>
      <anchor>a56780a4909e1285225c77991b9eb7c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_obj</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e5.html</anchorfile>
      <anchor>aa1a79b1507c5a8bd54f5f0e050c72c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_con</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e5.html</anchorfile>
      <anchor>a48cdb33fe0e9857f7a440b39d8b56c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xl</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e5.html</anchorfile>
      <anchor>a8b5c8a68a4142e3d3f2dc7d4397b23ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xu</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e5.html</anchorfile>
      <anchor>a5cbb56fcf2c8715cc3d2de236c323008</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE5_pymoo</name>
    <filename>classexamples_1_1repython_1_1_r_e5__pymoo.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e5__pymoo.html</anchorfile>
      <anchor>a3b4c96f8a1cb22e0bc6219a941e6e96f</anchor>
      <arglist>(self, **kwargs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_evaluate</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e5__pymoo.html</anchorfile>
      <anchor>a12ef1c4f5bf91156884a5dbc7ff821ad</anchor>
      <arglist>(self, x, out, *args, **kwargs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE6</name>
    <filename>classexamples_1_1repython_1_1_r_e6.html</filename>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e6.html</anchorfile>
      <anchor>a56f855d154ebcc64d04ef7c7fe046491</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_var</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e6.html</anchorfile>
      <anchor>a13e179d59852d16614a861a5db357ae0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_obj</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e6.html</anchorfile>
      <anchor>aeb8dfd7f775433fb193507191cec9aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_con</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e6.html</anchorfile>
      <anchor>a84b7b4813483278bc1875622dca09571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xl</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e6.html</anchorfile>
      <anchor>a0bfe48531e0ca23b3185ae456a6e9a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xu</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e6.html</anchorfile>
      <anchor>ae764dfce20e85e127155a9aea9536cf0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE6_pymoo</name>
    <filename>classexamples_1_1repython_1_1_r_e6__pymoo.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e6__pymoo.html</anchorfile>
      <anchor>aa99df743c9bcb27aa5a6fb452463acc6</anchor>
      <arglist>(self, **kwargs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_evaluate</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e6__pymoo.html</anchorfile>
      <anchor>a0c6a821c85abf0e96e076bc4f93df826</anchor>
      <arglist>(self, x, out, *args, **kwargs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::repython::RE7</name>
    <filename>classexamples_1_1repython_1_1_r_e7.html</filename>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e7.html</anchorfile>
      <anchor>a1d92fe2e9f2c2106ca6a3fba0bd26caf</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_var</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e7.html</anchorfile>
      <anchor>ad5e59d7e7da2135cfcb0e33a9a898759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_obj</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e7.html</anchorfile>
      <anchor>a6d7974d9f2afcb5e87139e51aa4ac000</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>n_con</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e7.html</anchorfile>
      <anchor>a93ca0e99af0b4795a96e7656b7520272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xl</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e7.html</anchorfile>
      <anchor>a63c3b05227d8c0eb76b286419fb8dff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>list</type>
      <name>xu</name>
      <anchorfile>classexamples_1_1repython_1_1_r_e7.html</anchorfile>
      <anchor>a1662a586acbe4c55d880d2ca6c7bdfe9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::reproblem::re_problem</name>
    <filename>classexamples_1_1reproblem_1_1re__problem.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1reproblem_1_1re__problem.html</anchorfile>
      <anchor>ad88a821be41b01aa8c32b77c4d6e4d2d</anchor>
      <arglist>(self, name, weight_bounds=Bounds([0, 0], [1, 1]))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1reproblem_1_1re__problem.html</anchorfile>
      <anchor>aaa502e5bfc8d1a94d57be0856676919c</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classexamples_1_1reproblem_1_1re__problem.html</anchorfile>
      <anchor>a48fb9610ac3b577460fb1ca8bd2d0d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>numVars</name>
      <anchorfile>classexamples_1_1reproblem_1_1re__problem.html</anchorfile>
      <anchor>a127ae7d067abfa91bdf7c5f3d9bc3694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>numObjs</name>
      <anchorfile>classexamples_1_1reproblem_1_1re__problem.html</anchorfile>
      <anchor>a67857fd3321a5fd02bb0fe48cca8c9d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>numConstr</name>
      <anchorfile>classexamples_1_1reproblem_1_1re__problem.html</anchorfile>
      <anchor>a7111b338d81341160ae9609699f4b438</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1reproblem_1_1re__problem.html</anchorfile>
      <anchor>acbac7ed28a50c8a838e0efd7349f3e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weight_bounds</name>
      <anchorfile>classexamples_1_1reproblem_1_1re__problem.html</anchorfile>
      <anchor>a074dc85532d8d477049f2073daca7bf0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::kepler::resonance::resonance</name>
    <filename>classexamples_1_1kepler_1_1resonance_1_1resonance.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>aaf455ef7c3cc45eedbc1f00874b43fd9</anchor>
      <arglist>(self, planet, rvt_in, rvt_pl, resonances=[[1, 1], [5, 4], [4, 3], [3, 2], [5, 3]])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__str__</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>a9bc2dcda2ecc4f6a933f0648535c2597</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>select_resonance</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>a6b7565150846c8f66997053d6a5fb009</anchor>
      <arglist>(self, beta, safe_distance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tof</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>addda085424819e7bf8749c6bdf598245</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>planet</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>af764cdec0f045b6a16b8766daed16532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rvt_in</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>a52f3caebdaf5fa114ea184050fc0342a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rvt_pl</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>a93c6d2e9ae1deb0dfc250badd5272821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>time</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>af3cc8853ce8fbd89bfb0a67e4d13bb3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>resonances</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>ad0cf0c0e2fecd37ac67eb0ab374d8b59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>period</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>a0bcc7ba0c3eec6250c58ec197b597791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mu</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>af1af3f64a7b293c45da950514ae50adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>timing_error</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>af2faa0d84b1f4f18cffe76f0b620ef3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rvt_out</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>a7b296e6ea3c6edd8875189c349ffe21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>resonance</name>
      <anchorfile>classexamples_1_1kepler_1_1resonance_1_1resonance.html</anchorfile>
      <anchor>a8c7f3802bca3a7f66cac2786a3de62b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::testfun::Rosen</name>
    <filename>classfcmaes_1_1testfun_1_1_rosen.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_rosen.html</anchorfile>
      <anchor>a4cb77fdab714481708d2e1c4589cceaa</anchor>
      <arglist>(self, dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Rosetta</name>
    <filename>classfcmaes_1_1astro_1_1_rosetta.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_rosetta.html</anchorfile>
      <anchor>ad37e8e95d1e2611a4217d78af56ccdb6</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::routing::Routing</name>
    <filename>classexamples_1_1routing_1_1_routing.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>abb0e3c53692f8946841d2ea3d1c06141</anchor>
      <arglist>(self, filename, capacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>abd93168d87b5678e916b090c6bcd080a</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness_capacity</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>ae793230b0a62aff7921b2750eed3817a</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness_so</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>a2ec29234dfaac9bd2805420c2efc8479</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>dump</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>a15358173d0f3864be3de5ae2213baf66</anchor>
      <arglist>(self, seq, y=0, capa=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>capacity</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>a3c4a10dd85b8ef3c7badcb1f4bf5ed8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>demands</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>abee955773927e7a90890b285ee4be897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>distance</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>adf6658107ab5418cf8580de44d3ac8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>abbc61c3d537745ee4ee352aa37de50f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>aaa6c830c5c0d5c7d080fd3093dc4a334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds_capacity</name>
      <anchorfile>classexamples_1_1routing_1_1_routing.html</anchorfile>
      <anchor>a3035dc6bd0a47436292ad1e934eb0e1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::RoverDomain</name>
    <filename>classexamples_1_1rover_1_1_rover_domain.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a708409d5253e1583b7a15ee02607000b</anchor>
      <arglist>(self, cost_fn, start, goal, traj, s_range, start_miss_cost=None, goal_miss_cost=None, force_start=True, force_goal=True, only_add_start_goal=True, rnd_stream=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a4ba9fa810af2a6417e90599214aae3df</anchor>
      <arglist>(self, params, n_samples=1000)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_params</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a5fc4dbfdeeeb45e828c2db21fe2eb908</anchor>
      <arglist>(self, params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>estimate_cost</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a60840a6ab40f86a73f7bd1bce9099d12</anchor>
      <arglist>(self, n_samples=1000)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cost_fn</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a4273b36f984eca0947e3dd30a5aed567</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>start</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a0efff7e14ded474c7f2eaa3ebb0639f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>goal</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a683a9449fa09963fbb599693541ef8fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>traj</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a3f47d31af70741772fbf534325f4f22b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s_range</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a30f9c349d650f55227a1394d63e593bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rnd_stream</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>afea7a0b011174acdae795cbdb94a34db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>force_start</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a6f324c41f28bbbab3459637559a1570f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>force_goal</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a725a4b212e8ad88824e0f5a9007a99b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>goal_miss_cost</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a3fd96c704ab7629386af25b022d00cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>start_miss_cost</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>aa6f1212184c2576ce9cf6c0adbda8f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property" static="yes">
      <type></type>
      <name>input_size</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>af771c4b68557d85cefe9866398d9551b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>input_size</name>
      <anchorfile>classexamples_1_1rover_1_1_rover_domain.html</anchorfile>
      <anchor>a0e75ac6f876210ca471fd14af8332560</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::kepler::rvt::rvt</name>
    <filename>classexamples_1_1kepler_1_1rvt_1_1rvt.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>a4221af848c64e34a0edb6c3cb775e39a</anchor>
      <arglist>(self, r, v, time, mu)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__str__</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>a74e74da30b1b1ea3677a80bd260d0f9b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>apply_dv</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>a8997e5792afd4f46259a6c8cf3658071</anchor>
      <arglist>(self, dv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>propagate_lagrangian</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>abd80ce02a092e9baf6746864bc078142</anchor>
      <arglist>(self, tof)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>propagatetaylor</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>aabfdc3a9714df9af15eee10724eea95a</anchor>
      <arglist>(self, tof, m0, thrust, veff=1, log10tol=-15, log10rtol=-15)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>kepler</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>a6b5028db713625237900f551e23f6045</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_kepler</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>a03c381c47ce14d3a7f549118694cb8ab</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>ab071a9aa69e98d177ba2aa9b2d799320</anchor>
      <arglist>(self, tof, N=60, units=AU, color=&quot;b&quot;, label=None, axes=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>period</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>adeb422336f723bde9931d8c3e226ca36</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>rotate</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>aa7b28bbd31a31d3e581bb55442706e11</anchor>
      <arglist>(self, k, theta)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tof</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>a747fb07fc3a13f967f0f3fd8ae48e584</anchor>
      <arglist>(self, rvt2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>copy</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>ae8cd128d9131857db5d5695b6e48d0c0</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>r</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>a29d745cf30a1183a4864388d4508a36a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>v</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>a15400b6669841eae54dc14817157e01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>ac929fbefb4b213b9704c21455c01f816</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mu</name>
      <anchorfile>classexamples_1_1kepler_1_1rvt_1_1rvt.html</anchorfile>
      <anchor>a8493644f9fb90b7281e7d31c55ab28cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Sagas</name>
    <filename>classfcmaes_1_1astro_1_1_sagas.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_sagas.html</anchorfile>
      <anchor>a532bc77e95faf73e051a8574ae5c93d7</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::moexamples::schaffer</name>
    <filename>classexamples_1_1moexamples_1_1schaffer.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1moexamples_1_1schaffer.html</anchorfile>
      <anchor>a9efabe9057767de2d571212041ea1c4f</anchor>
      <arglist>(self, dim)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1moexamples_1_1schaffer.html</anchorfile>
      <anchor>a10b328eef7be3135910830a565a6ab45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1schaffer.html</anchorfile>
      <anchor>a6882de61351bdf964ae5347711e33bc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weight_bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1schaffer.html</anchorfile>
      <anchor>a58532071f4503f6238ffb52863e7642a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>name</name>
      <anchorfile>classexamples_1_1moexamples_1_1schaffer.html</anchorfile>
      <anchor>ab4968ea95226652ae3aea20bf8211c4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Sequence</name>
    <filename>classfcmaes_1_1optimizer_1_1_sequence.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_sequence.html</anchorfile>
      <anchor>a66a64a03f89942b1f44ed1a5e4f251db</anchor>
      <arglist>(self, ArrayLike optimizers)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_sequence.html</anchorfile>
      <anchor>adc63a6013eab2ee950d72914cb655e4e</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Bounds bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike, Callable]] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>optimizers</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_sequence.html</anchorfile>
      <anchor>a4115470350e4b99353bd0ad57f11e1c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::retry::Shared2d</name>
    <filename>classfcmaes_1_1retry_1_1_shared2d.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1retry_1_1_shared2d.html</anchorfile>
      <anchor>a0d1c9d735b97086605baf64547e9a92d</anchor>
      <arglist>(self, xs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_i</name>
      <anchorfile>classfcmaes_1_1retry_1_1_shared2d.html</anchorfile>
      <anchor>a8f215e97145f12a7b2dc9b322652e8e5</anchor>
      <arglist>(self, i, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>view</name>
      <anchorfile>classfcmaes_1_1retry_1_1_shared2d.html</anchorfile>
      <anchor>a7c6d7c872ffb38a8a3ede6267c3abd28</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set</name>
      <anchorfile>classfcmaes_1_1retry_1_1_shared2d.html</anchorfile>
      <anchor>ad2452a4e2d5797f2fd2b7e86caea1843</anchor>
      <arglist>(self, xs)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rows</name>
      <anchorfile>classfcmaes_1_1retry_1_1_shared2d.html</anchorfile>
      <anchor>a57ba9eed93c6e87be18f57516cd8bfc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cols</name>
      <anchorfile>classfcmaes_1_1retry_1_1_shared2d.html</anchorfile>
      <anchor>a3e421506a60c206e6c1ebec288294a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtype</name>
      <anchorfile>classfcmaes_1_1retry_1_1_shared2d.html</anchorfile>
      <anchor>a2a200e99ea9271c4a48476903aa31a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ra</name>
      <anchorfile>classfcmaes_1_1retry_1_1_shared2d.html</anchorfile>
      <anchor>aa9c58dfba6f7887648069920eef16ade</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::Shgo</name>
    <filename>classfcmaes_1_1optimizer_1_1_shgo.html</filename>
    <base>fcmaes.optimizer.Optimizer</base>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_shgo.html</anchorfile>
      <anchor>a1f41c6cfdd62200e3cb6de81ac0d49b7</anchor>
      <arglist>(self, max_evaluations=50000, store=None)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, float, int]</type>
      <name>minimize</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1_shgo.html</anchorfile>
      <anchor>a58c5c9135b6b975bbbb07c8bbed731e2</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::single_objective</name>
    <filename>classfcmaes_1_1optimizer_1_1single__objective.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1single__objective.html</anchorfile>
      <anchor>a68816ea034f1b42e34e1d80cee2ca95f</anchor>
      <arglist>(self, pagmo_prob)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1single__objective.html</anchorfile>
      <anchor>a0ee356aef80ee4ebd577c5f4654f2f30</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pagmo_prob</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1single__objective.html</anchorfile>
      <anchor>ad25e56a10c0ea5d09acb820ac41ad45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1single__objective.html</anchorfile>
      <anchor>a8cf4edf41e74714f0c4daea1df61c53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1single__objective.html</anchorfile>
      <anchor>ae90ac92d0397e40020c7c7c8ea9b1cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1single__objective.html</anchorfile>
      <anchor>a18def57d87cfebb4dea2ddbf2817b380</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dual_annealing::sizeexception</name>
    <filename>classdual__annealing_1_1sizeexception.html</filename>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classdual__annealing_1_1sizeexception.html</anchorfile>
      <anchor>accb76493c20396c212123667e1e3c27b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::solo_mgar_udp::solo_mgar_udp</name>
    <filename>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a970e8ef840c1255127cf06a8c12042e4</anchor>
      <arglist>(self, t0=[7000, 8000], tof=[[50, 420], [50, 400], [50, 400]], int max_revs=2, resonances=[[[1, 1], [5, 4], [4, 3]], [[1, 1], [5, 4], [4, 3]], [[1, 1], [5, 4], [4, 3]], [[4, 3], [3, 2], [5, 3]], [[4, 3], [3, 2], [5, 3]], [[4, 3], [3, 2], [5, 3]]], safe_distance=350000, max_mission_time=11.0 *365.25, max_dv0=5600)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>aa38ea487a578acabc4f2f9e78458e406</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mo_fitness</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>ae1850a6f7c51a4fca0d647d5d3638542</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_nobj</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a119ed0a458c6596d62b2f4293577df2f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_bounds</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a2bee6165ff1ec7ab62b5abcaf671e68e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_nic</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>ac1170e5462ec0649b3e40486c5ce8fe7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pretty</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a5e609bd39357f14e70695debc374e38f</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a3dac1a1a04ca664e4805c1d1f373fc72</anchor>
      <arglist>(self, x, axes=None, units=AU, N=60)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eph</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>afaf91bbef39f261bba9225fd537e1c64</anchor>
      <arglist>(self, rvts, t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_distance_and_flybys</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>aba1e8ae9f93e4d570147f475185e809a</anchor>
      <arglist>(self, x, axes=None, N=1200, extension=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Tuple[ List[Any], List[Any], List[Any], List[float], List[float],]</type>
      <name>_compute_dvs</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a92828aaaf12b6addeb33a6249b7539b8</anchor>
      <arglist>(self, List[float] x, lps=None, resos=None)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_safe_distance</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a5366d6f7298cb1b8b969ea1c012b1813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_max_mission_time</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a126acd0036b041ca8b40c9ab4e9acdae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_max_dv0</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a14ddda6b384b169d125e2312b7cafb7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_min_beta</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a7b51ca13892900c3b1d440782f99a827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_max_beta</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a84e14b898b6ebf864466fa2a119fec4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_earth</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a5b5b30bef0065c5ecde34f9688129718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_venus</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a6ca02859ab7d46c620afcc688649d69c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>list</type>
      <name>_seq</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a559f74d85b98022d2e284d43740a9726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_resonances</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>abd0c1286806e069fc526442c89a2bdd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_t0</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>aa0d5da42a8e0ff89ddceb5e100864479</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_tof</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a688be7fb38d713f57d1cb11adaef9256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_max_revs</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a895f172dca1a6c490a943f871bc12ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>_n_legs</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>ab8cf026aa6aa142340dd7e493d69bae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type></type>
      <name>_rotation_axis</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a22ab1fc09e562121f2e870df44490395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>_theta</name>
      <anchorfile>classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a2d74e5cc2f517d8c601facd7e1dd800d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::testfun::Sphere</name>
    <filename>classfcmaes_1_1testfun_1_1_sphere.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_sphere.html</anchorfile>
      <anchor>a49792538dd2f26d3904440b9d400733a</anchor>
      <arglist>(self, dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::advretry::Store</name>
    <filename>classfcmaes_1_1advretry_1_1_store.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a1dfb9b034380f6ca44583ab26014d0ba</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Bounds bounds, Optional[int] max_eval_fac=None, Optional[int] check_interval=100, Optional[int] capacity=500, Optional[int] num_retries=None, Optional[int] statistic_num=0, Optional[str] datafile=None)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>wrapper</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>abd78c63348eaf496e00df2bc0d3711aa</anchor>
      <arglist>(self, ArrayLike x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>save</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a19b9d6c0787fb06a2b00e595f487bf37</anchor>
      <arglist>(self, str name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>load</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>adc9b28c43aee9110aef2fad53f30a077</anchor>
      <arglist>(self, str name)</arglist>
    </member>
    <member kind="function">
      <type>List</type>
      <name>get_data</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>aabe26248085adae1ad80a9b17202e5b7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_data</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>acff238ba31618eab7787f5204b5676f3</anchor>
      <arglist>(self, ArrayLike data)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_improvements</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>afda8cdd53cf9e0c3160f59bb623becba</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>List</type>
      <name>get_statistics</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a6ccfce173196171f999e4a3c4531f01f</anchor>
      <arglist>(self, int num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>eval_num</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>acb6d9b590c7c36a83fa8b764d6e15f7e</anchor>
      <arglist>(self, int max_evals)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[float, np.ndarray, np.ndarray, np.ndarray, np.ndarray]</type>
      <name>limits</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>ab543494f5cc2e6a7f877ca8cb0e35591</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>distance</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a00ab052ea8b184b7344875122481b623</anchor>
      <arglist>(self, np.ndarray xprev, np.ndarray x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>replace</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a0ae90f35f58deb629c18747fbf9b1cc9</anchor>
      <arglist>(self, int i, float y, np.ndarray x)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[int, int]</type>
      <name>crossover</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a879e1014d958865e37c48d5d271c8dc6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sort</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>aa5c9f7209b6bfb5bf079ad940a84eea4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add_result</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a7dfa5440d1d295083cef68ea37be60fe</anchor>
      <arglist>(self, float y, np.ndarray x, int evals, Optional[float] limit=np.inf)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_x_best</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a95e2b65e516214df91625c67e4ebe558</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_x</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a97e407315b2e0c802b9d5b4414f3f91b</anchor>
      <arglist>(self, pid)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_xs</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a2df2e37a5663c3e12c22c4b97f2549a2</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_y</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a907617cde0def7276f1f609d7690335f</anchor>
      <arglist>(self, int pid)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_ys</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a3cc073975313c4893de761cfc9771d77</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_y_best</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a801f488c7741c549ab3212f5ce52803a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_count_evals</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a0e6a826522ffacef8ab24249fc4127b4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_count_runs</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a329ccb4c8a17a35fec30a506495dee61</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_x</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a732636cd5ab3c40b878ef2e0274b1d1b</anchor>
      <arglist>(self, pid, xs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_y</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a12d96e54629b449293d2aabf5542ddc1</anchor>
      <arglist>(self, pid, y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_runs_compare_incr</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>ac1a185da0fdff01550d275b4635f73df</anchor>
      <arglist>(self, float limit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>dump</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a03953d817f7ad4b1c13818e1f133a6da</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a9421450cd349123b0c703029528418f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lower</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a69725da93edb777480fc90c959d45678</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>upper</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a8d112bb91cc58f032a0bb929c236fd8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>delta</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>ad2d1513e8146883a75bab3f55fb4be95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>capacity</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>ac02358030591fcfa40acde3b27f6ee30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_retries</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a4c08da826f59305eaa14d6bbdbaa6b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>eval_fac_incr</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>aebbd407d5af1334e38fbdc5a8ba36d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_eval_fac</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a943e1c9111fc75a8c7aad94b9feb5538</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>check_interval</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a3dc00b6f12a508d7e3537e4869bae3ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>(pid+1) *self.dim]</type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>abe787e76d4993d0280a389dabc8c3fe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a3353add8a5c4d01dd02a8a56890c1036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>statistic_num</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>ae5d9ac54fe3531077bedd2945298073f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>datafile</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a4a5af1d8a29594eff250c931f481d146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rg</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>af869a404006e773c0f7fd0744d3733f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>add_mutex</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>ae73944a21ee51902dfdc93403dadc8ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>check_mutex</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a784de4dd2241f0d45a199379be53532d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xs</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>adcc4bcd2b2d9dd72a7d315ac273def89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ys</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>ac058ac776acb3ce2891ddb0fe7a15100</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>eval_fac</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>aca1758cb0a6f2a0033b311b9cc89684c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>count_evals</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>af0db304f4763604809335265782f7d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>count_runs</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a073e21184da6081e7a868fb615bfa55f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_stored</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a35cab48a8942fed186c0a6bd88b90497</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a597ae039b1fe0bd28ed9afc8e270075a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>worst_y</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>afefa9194fbf5ada1b23dcd45ed3e48f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_x</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>aeb660ff644cb19f40c20494360cebb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>time</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a9f708b7ec4308e915d2600f357ae7a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>val</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a72b4b6c231e9e44a77a30dec5c731db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>si</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a3d944cda44a59bf02cef0cd0b68cc4c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sevals</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>ab1505fe94e716ee8645e7e694f69efbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bval</name>
      <anchorfile>classfcmaes_1_1advretry_1_1_store.html</anchorfile>
      <anchor>a44fe2e19ed26797a80dd27ee7c1a6b50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::retry::Store</name>
    <filename>classfcmaes_1_1retry_1_1_store.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a12ccf40a561e8b6528ca7eb962ae021a</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fun, Bounds bounds, Optional[int] check_interval=10, Optional[int] capacity=500, Optional[int] statistic_num=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>wrapper</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>aac8eb97e032a0f6c9bd340e6702c642c</anchor>
      <arglist>(self, ArrayLike x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_improvements</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a300771cb56317ceb78cb7cd4a79ce0ec</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>List</type>
      <name>get_statistics</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>abd99f307cd4d6cf478e8c8201ee15f59</anchor>
      <arglist>(self, int num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>eval_num</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a2f184eeda8d0c62eed36c32161e9b5bb</anchor>
      <arglist>(self, int max_evals)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>replace</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a42807f223ababda1171ddc055df0bbd1</anchor>
      <arglist>(self, int i, float y, ArrayLike xs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sort</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>ac6ff35da8231cd4aedb488427841aa3b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add_result</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>aed35531d1489fd7b28d69dc3c9794508</anchor>
      <arglist>(self, float y, ArrayLike x, int evals, limit=np.inf)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_x_best</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>ae078fd3c0dfc87aabde92b937cb2fa91</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>create_xs_view</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a65ac0375e6705dd9e67e253829efd92d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_xs</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>ae65b46bea16b6e50a3af24254cf4a2a8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_y</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a8ef8c822668e6ddb6da277082513e323</anchor>
      <arglist>(self, int pid)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_y_best</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a6f2490b0d579f6766b663fccd8c557b5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_ys</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>af199095a120a26f0a77d0a263785d4f3</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_y_mean</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a26a39767ca9766302d42f84cd4dd25d6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_y_standard_dev</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a7ad3659c8d9d66fe34e6e13ec6d9eb69</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_count_evals</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>ae2f03d71d58da349826b6d0249a66e61</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_count_runs</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a1dcbf34a7eb52ea3463469e7e2eaa8bb</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_runs_compare_incr</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a45f5a4eb953f48b845388d985ccc8737</anchor>
      <arglist>(self, float limit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>incr_count_evals</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a440b834ab3066810ed77da1c5093fa49</anchor>
      <arglist>(self, evals)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>dump</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a0049736307028e256c038d8a8c1723d2</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a958dac450efef452d7a6a81864c9ab29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lower</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a74edea66527f530d09f39b00ab4e8216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>upper</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a4638dbc2eff8a0fb5209513ee112a6d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>capacity</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a2948a743df6a8be2bf2c274341a59997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>check_interval</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>aa9efde59322cf2c93aad79a8e24d8d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a051fd56ed3ea2758d70a16e26888e2d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>delta</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a5e7a47140abfcb59a91b4559eba46d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>add_mutex</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a5c10a1d4fb385cbdc835ce1360c693d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xs</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>afb813b3455fba516e72fa95f6a7261f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ys</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a9da0b3410bcb1d0eab643afe10343135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>count_evals</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a3f6bde5da0736513834d69412b7c61dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>count_runs</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a130c7f2aadec40eb41b24cb0d6dbc425</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_stored</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>ac25eb94e6c607fe3119c19a9fda395fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>count_stat_runs</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a2be02fdcd227c43fa17eafab835a9efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a4fc40ab16eeca0897e5ea7528dacbf26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mean</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a93bde352c1ab2614c9e975c2c042f9e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>qmean</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a3aba1d490d946a3765da95a30732b665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>abaa0621bb3e9f36e0a97ffe120d6653b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_x</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a005e34c5baaa20b4169e5da2cc2eaffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>statistic_num</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a8a329ef518cc42000867ae5fa9b854d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>time</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>ab62e2aba40d2a934b1cf31bb8e142e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>val</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>ab3305985c51cacaee432b2d93144794a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>si</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>af8054c47224cbc0038d74502e002d2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sevals</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a4c779ed899eabfdc90daab6f0be1b1ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bval</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>ac8aae6e25f5f6b3283fce0598a6aecad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xs_view</name>
      <anchorfile>classfcmaes_1_1retry_1_1_store.html</anchorfile>
      <anchor>a35a4f6c361cb2a13c382b95fbbe8dc85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::mode::store</name>
    <filename>classfcmaes_1_1mode_1_1store.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>ab639a5b34f36a616f38edbd188469b99</anchor>
      <arglist>(self, dim, nobj, capacity=mp.cpu_count() *512)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>create_views</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>a34a1a949f5857ab3edfb6beb8fb8b563</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_xs</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>ac474104fcfc6ca9dce6a873a95af0204</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>get_ys</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>ae794481869c1d681838a181c6f1976fe</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add_result</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>a215371084a0bff8b1368d27a91495fb5</anchor>
      <arglist>(self, x, y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add_results</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>aac282e295578d049a156da83056e25fe</anchor>
      <arglist>(self, xs, ys)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_front</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>a1f2b11c0242f454020e72bc15d12625d</anchor>
      <arglist>(self, update=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_content</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>a1ffd4596004d9c4a84a094883dccdbfa</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>abb90fc4232b181b4692c5418a37a5bd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nobj</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>ad41dda52326d3c8dd58fa1ba06e4fe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type># give up</type>
      <name>capacity</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>a3e2c5ad682cc0020ea9ba7cd00a94a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>add_mutex</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>ae24305a686c275864dc54f1afb29d8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xs</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>a1a19c7046d247df093c393bf640049b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ys</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>aebc7f2a3cbee661b34b92bc6948b7849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_stored</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>a55c223142d2113cb824124744d2926e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_added</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>ac4b4da5b1175f8134ee6555ceb37d183</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xs_view</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>a96139a4d610eaf0d6814eba5f3dc6fc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ys_view</name>
      <anchorfile>classfcmaes_1_1mode_1_1store.html</anchorfile>
      <anchor>a270a1beccd7fe26e44d5d727fc484f0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dual_annealing::StrategyChain</name>
    <filename>classdual__annealing_1_1_strategy_chain.html</filename>
    <member kind="function">
      <type></type>
      <name>StrategyChain</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>a4ce4d3da5f8d7cd3551283663df76a83</anchor>
      <arglist>(double acceptance_param_, VisitingDistribution *vd_, Fitness *ofw_, pcg64 *rs_, EnergyState *state_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept_reject</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>ab2c87c327d546df01f2535d8d3d86418</anchor>
      <arglist>(int j, double e, const vec &amp;x_visit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>a668e78f845ae5a2f3955fc8cb6d20461</anchor>
      <arglist>(int step, double temperature)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>local_search</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>a28557c3e98c19aeb5bde009fb8be3601</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>emin</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>ac126ef9be8f8b7f4209130a3a137e7ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vec</type>
      <name>xmin</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>a3a0358910020f79c26f94b38fd755f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EnergyState *</type>
      <name>state</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>abc2cfd8cfafd95685d430fa4b60bbccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>acceptance_param</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>a4bd45a76ca10e2da7c55bb2443b7fb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VisitingDistribution *</type>
      <name>vd</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>a11ec7898905e7efe0052469ca2d4bb4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>not_improved_idx</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>ab140b4425c3ab6ebe9ceffd5a433d8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>not_improved_max_idx</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>ad49c7b2e8ffbc90f236cb6c442386947</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pcg64 *</type>
      <name>rs</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>a1314379d4cb36007526aa01765e2959b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Fitness *</type>
      <name>ofw</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>ace3a1711d168fb56e10b18f2f0909612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>temperature_step</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>a1426934ad1afd5b8709841244d2baec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>K</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>a41a2102a33462fda04c034561ccd0bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>state_improved</name>
      <anchorfile>classdual__annealing_1_1_strategy_chain.html</anchorfile>
      <anchor>a6099c7e70349b2e72b4aa7de902eb0c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::journal::Study_start</name>
    <filename>classfcmaes_1_1journal_1_1_study__start.html</filename>
    <base>fcmaes.journal.Base_message</base>
    <member kind="variable" static="yes">
      <type>List</type>
      <name>directions</name>
      <anchorfile>classfcmaes_1_1journal_1_1_study__start.html</anchorfile>
      <anchor>a9f3c0e2c3c55503582f69efe70bcf07d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Tandem</name>
    <filename>classfcmaes_1_1astro_1_1_tandem.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem.html</anchorfile>
      <anchor>a85863c32831e91124bc8d1de23e13f39</anchor>
      <arglist>(self, i, constrained=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tandem</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem.html</anchorfile>
      <anchor>afbf6dda0c1377a59f0d4add61533293b</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>name</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem.html</anchorfile>
      <anchor>aaff7202792acfdc376fbf63dda71288f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>fun_c</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem.html</anchorfile>
      <anchor>ac8fa6a908f79271f8e69a3ebcd7dc115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem.html</anchorfile>
      <anchor>a7289ad20163a2b464e987587daa2fd90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem.html</anchorfile>
      <anchor>a78eef598c2b6d4c782c8c3f29e4c1752</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>seqs</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem.html</anchorfile>
      <anchor>a921041f857be56f16225e48038ebdc7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>seq</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem.html</anchorfile>
      <anchor>a72a4f9ca06fa840de348e7bb1ac916cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::astro::Tandem_minlp</name>
    <filename>classfcmaes_1_1astro_1_1_tandem__minlp.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem__minlp.html</anchorfile>
      <anchor>a13780d3723cb39e01929d7d82848dfe6</anchor>
      <arglist>(self, constrained=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tandem_minlp</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem__minlp.html</anchorfile>
      <anchor>aa0c9717bee62a0dfeb50f4533d09a5a2</anchor>
      <arglist>(self, xs)</arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>name</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem__minlp.html</anchorfile>
      <anchor>ae5334e0ccd190cefdaf55458e695d304</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>fun_c</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem__minlp.html</anchorfile>
      <anchor>a28656ec242ea92f2ab7ccc385d333a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem__minlp.html</anchorfile>
      <anchor>ab4f58a6afc6358ae6c4004395eb94ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classfcmaes_1_1astro_1_1_tandem__minlp.html</anchorfile>
      <anchor>a95a182a6b93b36922e8d3e120345e0e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::moexamples::tandem_mo</name>
    <filename>classexamples_1_1moexamples_1_1tandem__mo.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1moexamples_1_1tandem__mo.html</anchorfile>
      <anchor>a1aa1a50748e860b0e2feef50d2b07b28</anchor>
      <arglist>(self, constrained=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1moexamples_1_1tandem__mo.html</anchorfile>
      <anchor>a3cbef98aa5fbd416a6b5344a14de9ee1</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>base</name>
      <anchorfile>classexamples_1_1moexamples_1_1tandem__mo.html</anchorfile>
      <anchor>a09dc9402019380ff93e28961b4414d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1tandem__mo.html</anchorfile>
      <anchor>a511846a5c1b27e20e4b6ea0359bfff1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weight_bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1tandem__mo.html</anchorfile>
      <anchor>aace3ae9d7607ceab95180da983ee6619</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classexamples_1_1moexamples_1_1tandem__mo.html</anchorfile>
      <anchor>aab019d0f29632f3b7ea8644864e1efdd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::Trajectory</name>
    <filename>classexamples_1_1rover_1_1_trajectory.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_trajectory.html</anchorfile>
      <anchor>a716f6c9780fb49ec245fba98b5e7ced7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_params</name>
      <anchorfile>classexamples_1_1rover_1_1_trajectory.html</anchorfile>
      <anchor>a599041aa0cfc739a83362487794d363c</anchor>
      <arglist>(self, start, goal, params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_points</name>
      <anchorfile>classexamples_1_1rover_1_1_trajectory.html</anchorfile>
      <anchor>a414d3f091728648d91f9783494c8d6a9</anchor>
      <arglist>(self, t)</arglist>
    </member>
    <member kind="property" static="yes">
      <type></type>
      <name>param_size</name>
      <anchorfile>classexamples_1_1rover_1_1_trajectory.html</anchorfile>
      <anchor>a47a778dbc3e032c49c2a981a37c4fb30</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>param_size</name>
      <anchorfile>classexamples_1_1rover_1_1_trajectory.html</anchorfile>
      <anchor>a597aeae68f75047a2b31b485199effcc</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::subset::transaction_value</name>
    <filename>classexamples_1_1subset_1_1transaction__value.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1subset_1_1transaction__value.html</anchorfile>
      <anchor>a4bc56ebf914f8befe5083a3d6668a2b6</anchor>
      <arglist>(self, transactions, payments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1subset_1_1transaction__value.html</anchorfile>
      <anchor>ae7f666e74665559231d774bbcc3c4c2e</anchor>
      <arglist>(self, selection)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>transactions</name>
      <anchorfile>classexamples_1_1subset_1_1transaction__value.html</anchorfile>
      <anchor>a3086eca902943812e3e2510f8d74341e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sum_payments</name>
      <anchorfile>classexamples_1_1subset_1_1transaction__value.html</anchorfile>
      <anchor>a7354605592874ce9edfbbfd81f82b8bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::subset_mo::transaction_value</name>
    <filename>classexamples_1_1subset__mo_1_1transaction__value.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1subset__mo_1_1transaction__value.html</anchorfile>
      <anchor>a0629ed058f9acb077156579173b146a2</anchor>
      <arglist>(self, transactions, payments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1subset__mo_1_1transaction__value.html</anchorfile>
      <anchor>ae780ff1020881d523c5cb25a042a6a95</anchor>
      <arglist>(self, selection)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>transactions</name>
      <anchorfile>classexamples_1_1subset__mo_1_1transaction__value.html</anchorfile>
      <anchor>adf5b10dccce7016316e509e1933e514b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sum_payments</name>
      <anchorfile>classexamples_1_1subset__mo_1_1transaction__value.html</anchorfile>
      <anchor>aa047927fe66ec75b848f042a7ed80e8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gtoc12::Transfers</name>
    <filename>classgtoc12_1_1_transfers.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classgtoc12_1_1_transfers.html</anchorfile>
      <anchor>aaaa424f6b67da45e9986fdc5667eb852</anchor>
      <arglist>(self, fname)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_transfer</name>
      <anchorfile>classgtoc12_1_1_transfers.html</anchorfile>
      <anchor>a2809ae2208de935e198087eb7a409760</anchor>
      <arglist>(self, a1, a2, ep_min)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tmap</name>
      <anchorfile>classgtoc12_1_1_transfers.html</anchorfile>
      <anchor>abadd280cdaf8d67e168aefee0c239460</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>idx</name>
      <anchorfile>classgtoc12_1_1_transfers.html</anchorfile>
      <anchor>abcf80c94847bb73a34b100c60742e9e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ast_to_id</name>
      <anchorfile>classgtoc12_1_1_transfers.html</anchorfile>
      <anchor>a49d677369224818450f5b979a7a329f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>id_to_ast</name>
      <anchorfile>classgtoc12_1_1_transfers.html</anchorfile>
      <anchor>ab5b9afeaca61cdf3c25577629d728e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ast_num</name>
      <anchorfile>classgtoc12_1_1_transfers.html</anchorfile>
      <anchor>acd2b847c93a58a6780de47fd7d7782d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::trappist_delivery::trappist_schedule</name>
    <filename>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>ad49fb49a15d50bdf8ffb49a3a452c0d2</anchor>
      <arglist>(self, path=os.path.join(&quot;.&quot;, &quot;trappist/candidates.txt&quot;), n_stations=12, start_time=0.0, end_time=80.0, station_gap=1.0, materials=(&quot;Material A&quot;, &quot;Material B&quot;, &quot;Material C&quot;,))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_nobj</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a04fa91e6b227d386a9089a2c09350b0c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_nix</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a8cebe82668c7807b5ca79c14143be75a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_nec</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a5aa2a411aa8136aa4ff032beeccc4787</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_nic</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a32ca9457b465788d42a6d4238887649c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_bounds</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a05225027bb79bb598408d34eccca3d0f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>abfacff9519a7926d3958aa192c6aa54c</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pretty</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a8c08f4da8537abdfb6a83dd7682eb2ae</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>aab08205267f0350357c54fad4df63b8c</anchor>
      <arglist>(self, x, ax=None, path=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>example</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a4508d8053f18fb3f3d5449f360ca1abc</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>convert_to_chromosome</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a6927de26658a5e34a9e952cd94179327</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>db</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>acd3f1a1ff38ead0eca14e9a5278c0b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n_stations</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a18395f11e6c81aa516e2ec4bef41db1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n_asteroids</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a7859cc61326139c65d5d98d6e6f7e310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>flat_db</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>aa1c9d81854f51cfbd8757f29953bc025</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_opportunities</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>afd0ebdc2ee3d7520dcfd6ce163703bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>start_time</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a7e81a9b44eba191fd562ad40a04deefa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>end_time</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>aea3674afcf5be6fad76b85302d039080</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>station_gap</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a16fd71d9d8f5b3903959487cb92c4a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>materials</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a0292935302f86bb92f7f038317c97be7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_load</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a0a1525e9c7d156cfb215e35b8a7f4fb2</anchor>
      <arglist>(self, path)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_flatten</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>abd8ab5bbb7c6ca032bb1c4574138c8ad</anchor>
      <arglist>(self, db)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_plot</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a3e02e116bf308314a6bc6c546960635e</anchor>
      <arglist>(self, masses, schedule, ax=None, path=None)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_fitness_impl</name>
      <anchorfile>classexamples_1_1trappist__delivery_1_1trappist__schedule.html</anchorfile>
      <anchor>a0d67cf1ecfbbfa31991d2998be8d6586</anchor>
      <arglist>(self, x, logging=False, plotting=False, ax=None, path=None)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::journal::Trial_param</name>
    <filename>classfcmaes_1_1journal_1_1_trial__param.html</filename>
    <base>fcmaes.journal.Base_message</base>
    <member kind="variable" static="yes">
      <type>Dict</type>
      <name>distribution</name>
      <anchorfile>classfcmaes_1_1journal_1_1_trial__param.html</anchorfile>
      <anchor>a8930836be9d47579078f327e59cbd447</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::journal::Trial_start</name>
    <filename>classfcmaes_1_1journal_1_1_trial__start.html</filename>
    <base>fcmaes.journal.Base_message</base>
  </compound>
  <compound kind="class">
    <name>fcmaes::journal::Trial_value</name>
    <filename>classfcmaes_1_1journal_1_1_trial__value.html</filename>
    <base>fcmaes.journal.Base_message</base>
    <member kind="variable" static="yes">
      <type>List</type>
      <name>values</name>
      <anchorfile>classfcmaes_1_1journal_1_1_trial__value.html</anchorfile>
      <anchor>a57eb44e751294d63bf2b75422b23ccdd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::noisy_tsp::TSP</name>
    <filename>classexamples_1_1noisy__tsp_1_1_t_s_p.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>ac6667519b59b578a877b76927beb4f5f</anchor>
      <arglist>(self, name, W, noise_factor, iter_num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a820f00764aca30493d15b5fbaab1f558</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mofun</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a18f9b6b35c64ab50fa3abdad4a12ef42</anchor>
      <arglist>(self, xs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>ab921c0f958d351e1846745dfe2e6c438</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__str__</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a2f0e74ea61f09f52a769556ba2cfd8b6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a5849bb4c633a30f8c2929f486eda293a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_mo</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>aa298d4659787619babc9c7c0bbb98b74</anchor>
      <arglist>(self, nsga_update=True)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a6e8212b6541f83c5fb8873d1b11160ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a342ebcc277e8f695d3d0b74971608e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>W</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>ac77bb2ffbe421579fa7588619208349c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>noise_factor</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>aab15a8e683241dd5f30608552afa10de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>iter_num</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a0b625778fcb7aa5c2e945515f60d0696</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evals</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a12b4d225747619cbd6f5cb345b30eb4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>ae627032ef2a6509aee69ea8b04c64585</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a1614a3adc9935ebf5db3b81a2a161d62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bestY</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a37817a8e4866856cf13ce4f10b4163cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>bestX</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>a50e8129f4893cf0fb95a3068ccbf3111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mofun</name>
      <anchorfile>classexamples_1_1noisy__tsp_1_1_t_s_p.html</anchorfile>
      <anchor>ae0e91e94ec6dd338a47022f9ac6fe368</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::top_trumps::tt_problem</name>
    <filename>classexamples_1_1top__trumps_1_1tt__problem.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>a458a618c69d11530f4a9303b35696a42</anchor>
      <arglist>(self, suite, name, dim, numObjs, function, instance, rep=2000, weight_bounds=Bounds([0, 0], [1, 1]))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>ac6f4336e5458badfb401d7d756077ca4</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>suite</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>a60e6cdeee6a23a9cf716c051359d2e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>a836998a9352fe11ea5deaa76de19ecb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>a47fda569781dfabb111d1966637b8a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>numObjs</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>aa4b23024f91402c99a0804f79d9eb4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>function</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>a34d711ed09fc993b4341026d10906ab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>instance</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>ab5a4347af5a47888a58811fffd5be7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rep</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>ae122afb2aa054daa46815c03afd230ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weight_bounds</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>ab41baed40a14fe4d9c596134a796a4c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1top__trumps_1_1tt__problem.html</anchorfile>
      <anchor>ada73eb93f9fa324672d285c92f53508b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::rover::UnionGeom</name>
    <filename>classexamples_1_1rover_1_1_union_geom.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1rover_1_1_union_geom.html</anchorfile>
      <anchor>ac1acf61a797002e4415657f53f70ffb4</anchor>
      <arglist>(self, geometries)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>contains</name>
      <anchorfile>classexamples_1_1rover_1_1_union_geom.html</anchorfile>
      <anchor>a7ef0852ef62b4570f96041910e2b7f79</anchor>
      <arglist>(self, X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>geoms</name>
      <anchorfile>classexamples_1_1rover_1_1_union_geom.html</anchorfile>
      <anchor>ae554a3843aa4433bf556dea8cbe61d4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vec_id</name>
    <filename>structvec__id.html</filename>
    <member kind="function">
      <type></type>
      <name>vec_id</name>
      <anchorfile>structvec__id.html</anchorfile>
      <anchor>a8f6fc0f6104128193ec755ab84ad5c69</anchor>
      <arglist>(const vec &amp;v, int id)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>_id</name>
      <anchorfile>structvec__id.html</anchorfile>
      <anchor>a126c3cb731d047e25c08742f735f0f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vec</type>
      <name>_v</name>
      <anchorfile>structvec__id.html</anchorfile>
      <anchor>af5bf436ff9f915e145a897a73e4cdac9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::vilar::VilarOscillator</name>
    <filename>classexamples_1_1vilar_1_1_vilar_oscillator.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1vilar_1_1_vilar_oscillator.html</anchorfile>
      <anchor>a16955e8171bdf642ba294cbdb889a922</anchor>
      <arglist>(self, parameter_values=None)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>volume</name>
      <anchorfile>classexamples_1_1vilar_1_1_vilar_oscillator.html</anchorfile>
      <anchor>af1285c9a655de3f27743c45e764e1cd9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dual_annealing::VisitingDistribution</name>
    <filename>classdual__annealing_1_1_visiting_distribution.html</filename>
    <member kind="function">
      <type></type>
      <name>VisitingDistribution</name>
      <anchorfile>classdual__annealing_1_1_visiting_distribution.html</anchorfile>
      <anchor>a522d6cb53a56f02bba86980d18d04b40</anchor>
      <arglist>(int dim, double visiting_param_, pcg64 *rs_)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>visiting</name>
      <anchorfile>classdual__annealing_1_1_visiting_distribution.html</anchorfile>
      <anchor>a0c95415e2aa6426dbe64d65eb799c7f7</anchor>
      <arglist>(const vec &amp;x, int step, double temperature)</arglist>
    </member>
    <member kind="function">
      <type>vec</type>
      <name>visit_fn</name>
      <anchorfile>classdual__annealing_1_1_visiting_distribution.html</anchorfile>
      <anchor>a5fb765282e4ad1fcfd42481e20ad7a09</anchor>
      <arglist>(double temperature, int dim)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pcg64 *</type>
      <name>rs</name>
      <anchorfile>classdual__annealing_1_1_visiting_distribution.html</anchorfile>
      <anchor>a62b306315afc2b8802fed40375a38b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>_visiting_param</name>
      <anchorfile>classdual__annealing_1_1_visiting_distribution.html</anchorfile>
      <anchor>aa37781842ca3526be32001b2ace3168b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>_factor4_p</name>
      <anchorfile>classdual__annealing_1_1_visiting_distribution.html</anchorfile>
      <anchor>a3801b308cec6da63fa5678cdcf9bdf1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>_factor6</name>
      <anchorfile>classdual__annealing_1_1_visiting_distribution.html</anchorfile>
      <anchor>a299fb41ee5ae47e41dad13b99ed701cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const double</type>
      <name>TAIL_LIMIT</name>
      <anchorfile>classdual__annealing_1_1_visiting_distribution.html</anchorfile>
      <anchor>a015af994a7461bd70cd69bb11d578376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const double</type>
      <name>MIN_VISIT_BOUND</name>
      <anchorfile>classdual__annealing_1_1_visiting_distribution.html</anchorfile>
      <anchor>aacb719f5fb17e1ee8c03be5686192950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vrptw::VRPTW</name>
    <filename>classvrptw_1_1_v_r_p_t_w.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>a1efcfc8bfc20a42c811882ba01577242</anchor>
      <arglist>(self, problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>a6857cddbe741acf9b5980c793dd2b540</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>dump</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>a824ddbcad6207e8d14f8a41809c1b3f2</anchor>
      <arglist>(self, seq, y, problem, opt_name=&apos;&apos;)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>problem</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>a8b21d6a356d4577a2dd1c219600f7453</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>vnumber</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>a63ce5c900d4c9bd72d95dec777face1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>capacity</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>af0528c356eac756865adcbd400630d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtime</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>a554b90bff076ba204b81227dc9d1c31d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>demand</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>a55f7a957039524a6643aae1d43035df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ready</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>acb1f65486029d21f64b3de15aee414ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>due</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>a349bee89e56a713370472eea5511e741</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>service</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>a39113eda2fe4d53cae06d3cd992b5c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>abdbcb2ec23309b4f3e13bf8966cfce6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classvrptw_1_1_v_r_p_t_w.html</anchorfile>
      <anchor>ace37603e9117f7be43e58fd53ab08f5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::testfun::Wrapper</name>
    <filename>classfcmaes_1_1testfun_1_1_wrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_wrapper.html</anchorfile>
      <anchor>ae106b1f604bdb6e24937cee17b03e2d1</anchor>
      <arglist>(self, fun, dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eval</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_wrapper.html</anchorfile>
      <anchor>a45ea4439b3b149098ed57d810656de38</anchor>
      <arglist>(self, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_best_x</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_wrapper.html</anchorfile>
      <anchor>ad0135b00f2c165118000017b25b3bfa4</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_best_y</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_wrapper.html</anchorfile>
      <anchor>ab86f2d8e5df54c431b95a8dac9eb7c80</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_count</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_wrapper.html</anchorfile>
      <anchor>a4441f7cb86d2ff083093521f22c72784</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>func</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_wrapper.html</anchorfile>
      <anchor>a672784c241ae3b65b49297a7e5669b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>statMutex</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_wrapper.html</anchorfile>
      <anchor>a3dfee5cd0eb8f872c25bedf57ca02cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_x</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_wrapper.html</anchorfile>
      <anchor>a150ab1471fdda3ff21e3f4e29adf1225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_wrapper.html</anchorfile>
      <anchor>a676b9c1af1cf8c2b284854e792637541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>count</name>
      <anchorfile>classfcmaes_1_1testfun_1_1_wrapper.html</anchorfile>
      <anchor>af9bf5ba50b9b5c1e6a147711b56f9218</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::mapelites::wrapper</name>
    <filename>classfcmaes_1_1mapelites_1_1wrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1wrapper.html</anchorfile>
      <anchor>aabff3459c811afa2fde70139254db138</anchor>
      <arglist>(self, Callable[[ArrayLike], Tuple[float, np.ndarray]] fit, int qd_dim, Optional[int] interval=1000000, Optional[int] save_interval=1E20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1wrapper.html</anchorfile>
      <anchor>aef447c485c8dad313f64e3df4768218e</anchor>
      <arglist>(self, ArrayLike x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fit</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1wrapper.html</anchorfile>
      <anchor>a3dcdc7f9a349494aad1b493a11cd42af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evals</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1wrapper.html</anchorfile>
      <anchor>a8ea76006dbf24383642dea6e049cbf21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1wrapper.html</anchorfile>
      <anchor>ab23032c564e05c9cd76c2040c1ed9ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1wrapper.html</anchorfile>
      <anchor>a93873c0c4890d0bed1501c112c96cd3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>qd_dim</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1wrapper.html</anchorfile>
      <anchor>a02e60134786bef32dc1cc014911d00f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>interval</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1wrapper.html</anchorfile>
      <anchor>a56117fe62174acee95b94c3635fc3b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>save_interval</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1wrapper.html</anchorfile>
      <anchor>a7550f0855e16b0f05f68bfe285d9960c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lock</name>
      <anchorfile>classfcmaes_1_1mapelites_1_1wrapper.html</anchorfile>
      <anchor>ac4dfd1c8307fa5f6c607ff70ac71f3ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::mode::wrapper</name>
    <filename>classfcmaes_1_1mode_1_1wrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>acd6bb1258b7aae36e3f5f62696db4db4</anchor>
      <arglist>(self, Callable[[ArrayLike], ArrayLike] fun, int nobj, Optional[store] store=None, Optional[int] interval=100000, Optional[bool] plot=False, Optional[str] name=None)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>a3da595496f0fa1e7a64955db25dec429</anchor>
      <arglist>(self, ArrayLike x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>a3a69785db0897b0c68286388b7916276</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nobj</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>ad2534786b7fbf2ce570b2d2503b85482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evals</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>a01e4931ca3f69d0c311b89206fdb5a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>a69f5f58f4deac7c580121b3deeae8e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>ab4c73a985518883d0979e00ade17d3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>store</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>a8aa88c436b49a51817ef990ecf103852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>interval</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>a28f164ad5617369d31a073342b0e0566</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>plot</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>a3c81297fbc84256960ada5e615b044f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>ab935f5beea9753e260fcc858ea43386e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lock</name>
      <anchorfile>classfcmaes_1_1mode_1_1wrapper.html</anchorfile>
      <anchor>abd5e47c70b9ebab11397eb565f1ac811</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fcmaes::optimizer::wrapper</name>
    <filename>classfcmaes_1_1optimizer_1_1wrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1wrapper.html</anchorfile>
      <anchor>aed261250f7e3866c2dcf79a3e2f99e8d</anchor>
      <arglist>(self, Callable[[ArrayLike], float] fit)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>__call__</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1wrapper.html</anchorfile>
      <anchor>a430bf153bd7cabe32d29db369f16b53e</anchor>
      <arglist>(self, ArrayLike x)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fit</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1wrapper.html</anchorfile>
      <anchor>a79dcdc4f646076fb112f0f41de73f2d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evals</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1wrapper.html</anchorfile>
      <anchor>aa70a5066e0c47fb11d70e9f59485ae19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best_y</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1wrapper.html</anchorfile>
      <anchor>adec55deddde66d5eeaa8e51681f3c094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>classfcmaes_1_1optimizer_1_1wrapper.html</anchorfile>
      <anchor>aea57e451cd341d8ec740d1beedb095f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>examples::moexamples::zdt1</name>
    <filename>classexamples_1_1moexamples_1_1zdt1.html</filename>
    <member kind="function">
      <type></type>
      <name>__init__</name>
      <anchorfile>classexamples_1_1moexamples_1_1zdt1.html</anchorfile>
      <anchor>ae3d3f7a58a4898aa81ba42d29206f98c</anchor>
      <arglist>(self, dim)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fun</name>
      <anchorfile>classexamples_1_1moexamples_1_1zdt1.html</anchorfile>
      <anchor>a9a9c87ca31e4550f14b56938ffe925b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1zdt1.html</anchorfile>
      <anchor>aac2d76839129a0fdb5773c341f2c42aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weight_bounds</name>
      <anchorfile>classexamples_1_1moexamples_1_1zdt1.html</anchorfile>
      <anchor>aac22d2604374b3ba9b344c0b67a52e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>name</name>
      <anchorfile>classexamples_1_1moexamples_1_1zdt1.html</anchorfile>
      <anchor>ad9e1b4d020b56c11b9b98a6016ca05be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>acmaes</name>
    <filename>namespaceacmaes.html</filename>
    <class kind="class">acmaes::AcmaesOptimizer</class>
    <member kind="function" static="yes">
      <type>static ivec</type>
      <name>inverse</name>
      <anchorfile>namespaceacmaes.html</anchorfile>
      <anchor>a8f3b844e07e4684f10852956288758de</anchor>
      <arglist>(const ivec &amp;indices)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vec</type>
      <name>sequence</name>
      <anchorfile>namespaceacmaes.html</anchorfile>
      <anchor>aa2100c3aed4c265a18c551b1c748a588</anchor>
      <arglist>(double start, double end, double step)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>anpcp</name>
    <filename>namespaceanpcp.html</filename>
    <class kind="class">anpcp::ANPCP</class>
    <member kind="function">
      <type></type>
      <name>next_free_</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>a1633c5905b3d9dfa0816c7193e554322</anchor>
      <arglist>(used, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>selection_</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>ad1c73ca9e8ad8f9a6b51cf5738b5ddf9</anchor>
      <arglist>(s, n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>calc_distance_</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>a4db012d42b40fde3133917da7bae5a1b</anchor>
      <arglist>(users, facilities)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness_</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>af7f3f87b0283565d269d0f86ddcc0a55</anchor>
      <arglist>(selection, distance, alpha)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>a5aca052fb7d52bf72b7d2533d4d3e17e</anchor>
      <arglist>(anpcp, opt, num_retries=32)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>ad7bc2e2f3677bce618daccaada98f522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>a60d184d80ec29d14dabb704da3b15e34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>a100643474ed134a9d313019112a2fd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>anpcp</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>a3d4fcfcfe8fbbb5aae7993b6bbeb6312</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>popsize</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>a37fca338ec24c25c87790d168e80cd38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_evaluations</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>af0b0b587e0ebbedb6364482103b76548</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>opt</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>a726f529bf80b17eeb6c009a2c4d0669b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_retries</name>
      <anchorfile>namespaceanpcp.html</anchorfile>
      <anchor>a82746ac1bef745db3de2e55aed299998</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>anpcpc</name>
    <filename>namespaceanpcpc.html</filename>
    <class kind="class">anpcpc::ANPCPC</class>
    <member kind="function">
      <type></type>
      <name>calc_distance_</name>
      <anchorfile>namespaceanpcpc.html</anchorfile>
      <anchor>a6d061093fd5f80bcbd737e82b3245a72</anchor>
      <arglist>(users, facilities_x, facilities_y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness_</name>
      <anchorfile>namespaceanpcpc.html</anchorfile>
      <anchor>a6f7639f06e2fed3d414229306a974296</anchor>
      <arglist>(facilities_x, facilities_y, users, alpha)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceanpcpc.html</anchorfile>
      <anchor>a40270bab751f1a6b11ea3f2e2859c9b6</anchor>
      <arglist>(anpcpc, opt, num_retries=32)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceanpcpc.html</anchorfile>
      <anchor>a305ef4caca2dd08b64e982b1de410c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceanpcpc.html</anchorfile>
      <anchor>af8e80f1693970acfb7792b645adde448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceanpcpc.html</anchorfile>
      <anchor>ac06a5b70ddcf2202ca5127f6d06fbcbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>anpcpc</name>
      <anchorfile>namespaceanpcpc.html</anchorfile>
      <anchor>aa0eb3717747838dafe9f87910283b8e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_evaluations</name>
      <anchorfile>namespaceanpcpc.html</anchorfile>
      <anchor>ab08cea8848a3e910b2167bd758b129b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>opt</name>
      <anchorfile>namespaceanpcpc.html</anchorfile>
      <anchor>a736b88f96bf165d1b09df84f4e39c799</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_retries</name>
      <anchorfile>namespaceanpcpc.html</anchorfile>
      <anchor>aebaa9deca41cafd15bede126256385ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>biteopt</name>
    <filename>namespacebiteopt.html</filename>
    <class kind="class">biteopt::BiteOptimizer</class>
  </compound>
  <compound kind="namespace">
    <name>crmfnes</name>
    <filename>namespacecrmfnes.html</filename>
    <class kind="class">crmfnes::CrfmnesOptimizer</class>
    <member kind="function" static="yes">
      <type>static vec</type>
      <name>sequence</name>
      <anchorfile>namespacecrmfnes.html</anchorfile>
      <anchor>a37f765d781ba1148662c876fc40498b8</anchor>
      <arglist>(double start, double end, double step)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>differential_evolution</name>
    <filename>namespacedifferential__evolution.html</filename>
    <class kind="class">differential_evolution::DeOptimizer</class>
  </compound>
  <compound kind="namespace">
    <name>dual_annealing</name>
    <filename>namespacedual__annealing.html</filename>
    <class kind="class">dual_annealing::DARunner</class>
    <class kind="class">dual_annealing::EnergyState</class>
    <class kind="class">dual_annealing::Fitness</class>
    <class kind="class">dual_annealing::LBFGSFunc</class>
    <class kind="class">dual_annealing::nanexception</class>
    <class kind="class">dual_annealing::sizeexception</class>
    <class kind="class">dual_annealing::StrategyChain</class>
    <class kind="class">dual_annealing::VisitingDistribution</class>
    <member kind="typedef">
      <type>double(*</type>
      <name>callback_type</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>acc0e4feae757283b161380c003152d7c</anchor>
      <arglist>)(int, const double *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vec</type>
      <name>zeros</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>a8be31e030bc6b64855a87450168499d1</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::MatrixXd</type>
      <name>normalVec</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>a3688f9a35c8af0e21f7670473fdfc196</anchor>
      <arglist>(int dim, pcg64 &amp;rs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::MatrixXd</type>
      <name>uniformVec</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>ab0a43c3dcc31de6ab3f4b6feb070a4df</anchor>
      <arglist>(int dim, pcg64 &amp;rs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vec</type>
      <name>logv</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>aa453b3bdb1c9bcf34d298af39b661639</anchor>
      <arglist>(vec v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static vec</type>
      <name>expv</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>a151b32ba2575f7a0632b5c55162fb4bd</anchor>
      <arglist>(vec v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minLBFGS</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>ac314c8e5c367afe5307f99a29a667f6b</anchor>
      <arglist>(Fitness *fitfun, vec &amp;X0_, int maxIterations)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minimize</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>a9d98349bcdfafe6b4659304b33f53b88</anchor>
      <arglist>(Fitness *fun, vec &amp;x0, long seed, bool use_local_search, vec &amp;X)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static uniform_real_distribution</type>
      <name>distr_01</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>aa2dc69b8049771ea50c1c75e24ba4f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static normal_distribution</type>
      <name>gauss_01</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>a3355fe6c7e3315cbbdff5dd45558144f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static vec</type>
      <name>emptyVec</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>ad43d310b3d2ac1ef9ad7cf7af4edb59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dual_annealing::nanexception</type>
      <name>naneexc</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>ab078cd17a94ab74e2da2a4931983a391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>BIG_VALUE</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>a614a5ed9ce767f856bcc9bc07bef6b2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dual_annealing::sizeexception</type>
      <name>sizeeexc</name>
      <anchorfile>namespacedual__annealing.html</anchorfile>
      <anchor>a40c22fe5772392ba4c147232af1cd4d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>edgecover</name>
    <filename>namespaceedgecover.html</filename>
    <class kind="class">edgecover::graph</class>
    <class kind="class">edgecover::problem</class>
    <member kind="function">
      <type></type>
      <name>plot_graph</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a744dda64b530055628154923fb165b02</anchor>
      <arglist>(g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nx_to_jgraph</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>adacf3d39b139b421f2b14f266963dcc9</anchor>
      <arglist>(g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>solve_jg</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a2727ccaa79bc6d32ce044e9677314496</anchor>
      <arglist>(g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>initial_solution</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a010150d32280d804796dadb5edda4711</anchor>
      <arglist>(g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>remove_node</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a73da3a94d91f82f192729ac189e39276</anchor>
      <arglist>(g, solution, mean, start_time, max_time)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>solve_greedy</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>ab2c2a9dd447db5ff8c3125389066708f</anchor>
      <arglist>(g, seed, max_time)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>run_solve</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a2db8017a9662aa750e8fd49a9d7c1d68</anchor>
      <arglist>(g, max_time)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>solve_multiprocessing</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a2f9e9af0dbf9169e251c131f7402f6fa</anchor>
      <arglist>(g, num, max_time)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add_vertice</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a669278e054d76bef7dce46109d141905</anchor>
      <arglist>(v, vmap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nx_graph</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a9860d907cb65923b50ef1dd1b9761143</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>num_true</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a1b8b28cc53b6df88c1a30a41217fe0a2</anchor>
      <arglist>(nodes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>numba_covered</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a9247b4fa16dbb502c6e5e1bd0c30ca12</anchor>
      <arglist>(source, target, nodes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>not_covered</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>ad20c66f5851e97419ed4bda2ef1aa333</anchor>
      <arglist>(g, nodes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nodes</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>ac5b3a2a87224ba1241ca69d49adc5c3e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>solve_opt</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a182ff9dbc428e26929d7fa0413315027</anchor>
      <arglist>(g)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a59bd3f0d59b0b35fb7ebbbe615e55fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a71246da8be12458f566ebd391e820de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a89157c3a85c389dd41e0bba728a24ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>g</name>
      <anchorfile>namespaceedgecover.html</anchorfile>
      <anchor>a1258e4ccc07f1c0a31fe912e53cf08ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples</name>
    <filename>namespaceexamples.html</filename>
    <namespace>examples::advexamples</namespace>
    <namespace>examples::arm</namespace>
    <namespace>examples::benchmark_gtop</namespace>
    <namespace>examples::benchmark_gtop_pygmo</namespace>
    <namespace>examples::cassini2_minlp</namespace>
    <namespace>examples::cassini_minlp</namespace>
    <namespace>examples::clustering</namespace>
    <namespace>examples::crypto</namespace>
    <namespace>examples::damp</namespace>
    <namespace>examples::elitescass2</namespace>
    <namespace>examples::employee</namespace>
    <namespace>examples::examples</namespace>
    <namespace>examples::f8</namespace>
    <namespace>examples::filter</namespace>
    <namespace>examples::gear_train</namespace>
    <namespace>examples::harvesting</namespace>
    <namespace>examples::house</namespace>
    <namespace>examples::interferometry</namespace>
    <namespace>examples::interferometry_udp</namespace>
    <namespace>examples::jobshop</namespace>
    <namespace>examples::kepler</namespace>
    <namespace>examples::lotka</namespace>
    <namespace>examples::maxcut</namespace>
    <namespace>examples::moexamples</namespace>
    <namespace>examples::noisy_tsp</namespace>
    <namespace>examples::powerplant</namespace>
    <namespace>examples::prophet_opt</namespace>
    <namespace>examples::quant</namespace>
    <namespace>examples::reproblem</namespace>
    <namespace>examples::repython</namespace>
    <namespace>examples::robot</namespace>
    <namespace>examples::routing</namespace>
    <namespace>examples::rover</namespace>
    <namespace>examples::scheduling</namespace>
    <namespace>examples::siemens</namespace>
    <namespace>examples::solo_mgar</namespace>
    <namespace>examples::solo_mgar_udp</namespace>
    <namespace>examples::spring</namespace>
    <namespace>examples::subset</namespace>
    <namespace>examples::subset_mo</namespace>
    <namespace>examples::tandem_minlp</namespace>
    <namespace>examples::tdesign</namespace>
    <namespace>examples::top_trumps</namespace>
    <namespace>examples::trappist_delivery</namespace>
    <namespace>examples::tutorial</namespace>
    <namespace>examples::vaccination</namespace>
    <namespace>examples::vessel</namespace>
    <namespace>examples::vilar</namespace>
    <namespace>examples::yahpo</namespace>
    <member kind="variable" protection="private">
      <type>str</type>
      <name>__version__</name>
      <anchorfile>namespaceexamples.html</anchorfile>
      <anchor>a1ac59d4e0c0efe472e35e1af226293a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespaceexamples.html</anchorfile>
      <anchor>a90dd76b91edc32b0c5011127e58f5579</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::advexamples</name>
    <filename>namespaceexamples_1_1advexamples.html</filename>
    <member kind="function">
      <type></type>
      <name>messengerFullLoop</name>
      <anchorfile>namespaceexamples_1_1advexamples.html</anchorfile>
      <anchor>af104a8054f05417e1d6b18ee536e1ca3</anchor>
      <arglist>(opt, num=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_all</name>
      <anchorfile>namespaceexamples_1_1advexamples.html</anchorfile>
      <anchor>a2a20839039b9a15bbb1b28922a43fbc9</anchor>
      <arglist>(num_retries=1000, num=1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_test_optimizer</name>
      <anchorfile>namespaceexamples_1_1advexamples.html</anchorfile>
      <anchor>aebec6bee380e8587e7a76863116c6533</anchor>
      <arglist>(opt, problem, num_retries=10000, num=1, value_limit=100.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1advexamples.html</anchorfile>
      <anchor>a84fbed51a59ef6d65f1ed69b8dc9f709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1advexamples.html</anchorfile>
      <anchor>a003eda07d83ddcf7aa3d5376ea6cc721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1advexamples.html</anchorfile>
      <anchor>ae8c80a7376195db7691268fbb40e1f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1advexamples.html</anchorfile>
      <anchor>a74052630e376936dd3e5999c00f08e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>problems</name>
      <anchorfile>namespaceexamples_1_1advexamples.html</anchorfile>
      <anchor>a06cd80bb729c861f36e45723b48ed013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>min_evals</name>
      <anchorfile>namespaceexamples_1_1advexamples.html</anchorfile>
      <anchor>afb9d784b8ee0668c4d9613b75f2b87a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>algos</name>
      <anchorfile>namespaceexamples_1_1advexamples.html</anchorfile>
      <anchor>a356d2c98290d0378f8bf28fbdcc9a653</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::arm</name>
    <filename>namespaceexamples_1_1arm.html</filename>
    <class kind="class">examples::arm::fitness</class>
    <member kind="function">
      <type></type>
      <name>forward_kinematics</name>
      <anchorfile>namespaceexamples_1_1arm.html</anchorfile>
      <anchor>a80e778de36aaf3dc8e17664107b0e7d3</anchor>
      <arglist>(q)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot3d</name>
      <anchorfile>namespaceexamples_1_1arm.html</anchorfile>
      <anchor>a733ceee264c14eb2f7d1ff13f4829d2c</anchor>
      <arglist>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_archive</name>
      <anchorfile>namespaceexamples_1_1arm.html</anchorfile>
      <anchor>a934c10606d0d0eb7affe392052060dbd</anchor>
      <arglist>(problem, archive=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_qd</name>
      <anchorfile>namespaceexamples_1_1arm.html</anchorfile>
      <anchor>ab7dbff077d5f4d9cced586ea8549c068</anchor>
      <arglist>(dim)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1arm.html</anchorfile>
      <anchor>aa790fea54dc39525fea8af48171d2f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1arm.html</anchorfile>
      <anchor>a2eaf9a24499a0fdf7f802a05b4390276</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1arm.html</anchorfile>
      <anchor>a462e31a71600d1808a3b4b2f6ae80542</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dim</name>
      <anchorfile>namespaceexamples_1_1arm.html</anchorfile>
      <anchor>ab0903e0bb39e1e1d1041b6e350f6d207</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::benchmark_gtop</name>
    <filename>namespaceexamples_1_1benchmark__gtop.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>_test_optimizer</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop.html</anchorfile>
      <anchor>a08a1ce877f0cc26216701cbd9b3e5701</anchor>
      <arglist>(opt, problem, num_retries=10000, num=1, value_limit=100.0, stop_val=-1E99)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop.html</anchorfile>
      <anchor>aa7b89d2bfe93ac3c40ba31caa1892769</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop.html</anchorfile>
      <anchor>aac08380d92bdb514d537ec4337dfa19f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop.html</anchorfile>
      <anchor>a4f7cd346d30b61ea57ed3d7b1cddb947</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop.html</anchorfile>
      <anchor>a05618727fe3f0aefe0cd231bb511a593</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::benchmark_gtop_pygmo</name>
    <filename>namespaceexamples_1_1benchmark__gtop__pygmo.html</filename>
    <class kind="class">examples::benchmark_gtop_pygmo::Cma_pyg</class>
    <class kind="class">examples::benchmark_gtop_pygmo::De_pyg</class>
    <class kind="class">examples::benchmark_gtop_pygmo::pygmo_udp</class>
    <member kind="function">
      <type></type>
      <name>de_cma_pyg</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop__pygmo.html</anchorfile>
      <anchor>adacb1bdcd0ee085801b2b9e6e8022ace</anchor>
      <arglist>(max_evaluations=50000, popsize=31, stop_fitness=-np.inf, de_max_evals=None, cma_max_evals=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pyg_de_cma</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop__pygmo.html</anchorfile>
      <anchor>ae9fd95cc51761a89ffc0635dba4aa504</anchor>
      <arglist>(max_evaluations=50000, popsize=31, stop_fitness=-np.inf, de_max_evals=None, cma_max_evals=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>de_pyg_cma</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop__pygmo.html</anchorfile>
      <anchor>a35d3645d623ed7454908364351809f25</anchor>
      <arglist>(max_evaluations=50000, popsize=31, stop_fitness=-np.inf, de_max_evals=None, cma_max_evals=None)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_test_optimizer</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop__pygmo.html</anchorfile>
      <anchor>a122592852c04a8a8e8a3b4d9cdc38bfa</anchor>
      <arglist>(opt, problem, num_retries=10000, num=1, value_limit=100.0, stop_val=-1E99, log=logger())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_test_archipelago</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop__pygmo.html</anchorfile>
      <anchor>a7778c5b75c17d1682355830441233819</anchor>
      <arglist>(algo, problem, num=10000, stop_val=-1E99, log=logger())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_archipelago</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop__pygmo.html</anchorfile>
      <anchor>acf3acdca1f90a44c0759ad0d1cda8b22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_coordinated_retry</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop__pygmo.html</anchorfile>
      <anchor>aeccaaa319086484e7320dee37695e81d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop__pygmo.html</anchorfile>
      <anchor>add963c7379a8ed4088502dc06b82227f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop__pygmo.html</anchorfile>
      <anchor>ac734fa0c08aa511b65e95ca5c64f2a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1benchmark__gtop__pygmo.html</anchorfile>
      <anchor>ad5c3b451839647131465e551e27882c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::cassini2_minlp</name>
    <filename>namespaceexamples_1_1cassini2__minlp.html</filename>
    <class kind="class">examples::cassini2_minlp::CassiniMulti</class>
    <member kind="function">
      <type></type>
      <name>cassini1</name>
      <anchorfile>namespaceexamples_1_1cassini2__minlp.html</anchorfile>
      <anchor>a9292ad8cb402196ba3edfc2d9aef2874</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sequences</name>
      <anchorfile>namespaceexamples_1_1cassini2__minlp.html</anchorfile>
      <anchor>a1c7a0bf8fdb945a9d533cdd1f066a679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>check_multiretry</name>
      <anchorfile>namespaceexamples_1_1cassini2__minlp.html</anchorfile>
      <anchor>a4f9d143b00f952dc469300952129df01</anchor>
      <arglist>(retries_inc=100, keep=0.7, optimizer=de_cma(1500), repeat=100)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1cassini2__minlp.html</anchorfile>
      <anchor>a2ee9f2bd126e600b50641bc9a006a7b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1cassini2__minlp.html</anchorfile>
      <anchor>a90fd9ad85f39764f89831dc0b7514446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1cassini2__minlp.html</anchorfile>
      <anchor>ac69a1f693c2270d2d2b6c5264bcce4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1cassini2__minlp.html</anchorfile>
      <anchor>adcbae0665f0c92b298d76542a0d1bfec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::cassini_minlp</name>
    <filename>namespaceexamples_1_1cassini__minlp.html</filename>
    <member kind="function">
      <type></type>
      <name>test_optimizer</name>
      <anchorfile>namespaceexamples_1_1cassini__minlp.html</anchorfile>
      <anchor>aa466c84c83ff750d9f87a4db3c0ccd8e</anchor>
      <arglist>(opt, problem, num_retries=120000, num=100, value_limit=10.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sequences</name>
      <anchorfile>namespaceexamples_1_1cassini__minlp.html</anchorfile>
      <anchor>a3f4fa3576b8750954c4b7713b129b8a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_multiretry</name>
      <anchorfile>namespaceexamples_1_1cassini__minlp.html</anchorfile>
      <anchor>a94bf22b64964bb0a72821a4c7b85d291</anchor>
      <arglist>(retries_inc=128, keep=0.7, optimizer=de_cma(1500), repeat=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1cassini__minlp.html</anchorfile>
      <anchor>a686d98230d20b74f09e6ad1839f06ffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1cassini__minlp.html</anchorfile>
      <anchor>a9f5576df785d369ef573bb5ac3cc7ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1cassini__minlp.html</anchorfile>
      <anchor>ab9469e320da447d082b3731e59e08457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1cassini__minlp.html</anchorfile>
      <anchor>aa37eb20aa295dd4a2c60777b6768da08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::clustering</name>
    <filename>namespaceexamples_1_1clustering.html</filename>
    <member kind="function">
      <type></type>
      <name>sum_distance</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a2b0696d94d5bb65cab882dc62228498a</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>unique</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a3abfba0cdea4b88b27ef19171a4e8179</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a14d4f9f604e631d0140dffffb4f2cae6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>show</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a2e4522195ee18b33c6e344d71e0ed39d</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a8de29e7cf2101e2d46966e6af4940e5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a43daad447827de3a0404f7d9f5846899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a11456775a0cb6c71d900fb46eb3f3624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>af9ee0af2fb1bc0ae1e417d5721c1d689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>distance_matrix</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a2c1a0f7c6153841d4c8aad2e493c98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>repeat</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a85ceb44b790fbcebb039824f122ca84b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_nodes</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a6db539b92ada28d4d19bff9faef164e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_groups</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a8a1cd579f497af72e82d3bc9795622e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>group_size</name>
      <anchorfile>namespaceexamples_1_1clustering.html</anchorfile>
      <anchor>a8d19357740cd283ce14597219d2a193f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::crypto</name>
    <filename>namespaceexamples_1_1crypto.html</filename>
    <class kind="class">examples::crypto::fitness</class>
    <member kind="function">
      <type></type>
      <name>get_history</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a2c916307beb743d28425fcd5c7568f01</anchor>
      <arglist>(ticker, start, end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_ema</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a38e3ca807ed30d1fa4d4a5cc478e1525</anchor>
      <arglist>(prices, period)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_sma</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a8fe56bb9960bb347eee6e2c39ddbd90f</anchor>
      <arglist>(prices, period)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>buy_all</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a54eb39bc81fed172b7d1d74dcec022c2</anchor>
      <arglist>(cash, num_coins, price, date, logs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sell_all</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a8e16e3bee50df8bd1b44e55fe8950e10</anchor>
      <arglist>(cash, num_coins, price, date, logs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hodl</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a941dc0c737b40581bde98db6aef23525</anchor>
      <arglist>(close, start_cash)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>strategy</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a61f6c93fa62a257ed271a0aa1210f604</anchor>
      <arglist>(close, start_cash, ema, sma, wait_buy, wait_sell, dates)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>simulate</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a75d529296c6d83294ad1c37e55bd267f</anchor>
      <arglist>(prices, ema_period, sma_period, wait_buy, wait_sell, dates=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a7c596426791d1e3f74d126fdb08ec38f</anchor>
      <arglist>(tickers, start, end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_mo</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a8de0d53fbf350d4ad637d00dfa9e3318</anchor>
      <arglist>(tickers, start, end, nsga_update=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>bar</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a832e3832c38bb9d153a7af1b37d2e24a</anchor>
      <arglist>(tickers, start, end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_nd</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a89ff39f1a827fa14663f90898e5f3fef</anchor>
      <arglist>(tickers, start, end)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a6b5e9bcf79e1fc78cf493c28c73d7404</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a6973099c614186a0aaab015ae17aed7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>ae6b082b78a586ad18f44525f886f79f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>START_CASH</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>accaf5b53eed6cbec1e49d2a7292a15b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a284d5c864a794e437544590cb282efac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ddim</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a9fefe2b65764ffc2422e189b7674e66b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>qd_bounds</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a7b9a03eae92503954a62eb5a0510c852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>niche_num</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a5eede08c19254c6895849bb97c9257a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>tickers</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a11fa498d14aab048b8ba856c68562161</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>start</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a69a1d45fff78e42c6f6b970bdab95bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>end</name>
      <anchorfile>namespaceexamples_1_1crypto.html</anchorfile>
      <anchor>a8a8f7983f4ea099719a5b299d1b22ef6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::damp</name>
    <filename>namespaceexamples_1_1damp.html</filename>
    <class kind="class">examples::damp::fitness</class>
    <member kind="function">
      <type></type>
      <name>spring</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>a120d80f0e9c27f43e15cf2b0f733842f</anchor>
      <arglist>(t, y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>integrator</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>aee7af86328f6a9a28f0ce52ff807f5e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>integrate</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>abdb44c5b9f3ef91f23f856138800f22e</anchor>
      <arglist>(I, t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>integrate_C</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>ae2820d97b3059c42c2e26899fada5bae</anchor>
      <arglist>(y, dt, alpha, step)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>parallel_retry</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>ac57ba480422b498635e1a96503b7d82e</anchor>
      <arglist>(dim, opt=De_cpp(20000))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot3d</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>a2850a13c811fbfdfe69e7950e68377ac</anchor>
      <arglist>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_archive</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>a56eb880b40f4b83f6f114f81b6427c0e</anchor>
      <arglist>(problem, archive=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_qd</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>a7c1340c7c027e4ca57ce802c60670acc</anchor>
      <arglist>(dim)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>aee5e7a2fc7de79849a207c78070823ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>ad9f3f1d785cc34c870cc15ee5622c308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>a32a224ccf0ae4bf6b63cf635948a5b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>max_alpha</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>a172062e32b094696498aa4407e0d1164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_time</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>af0f3e235c844a34ba40537940b74051a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>integrateDamp_C</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>a20808bf28b9c96938a20ffc20c60a2ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>a5743df027c1a41a275daff76a57ace27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>a39244848ee7e782c96a1c058b81970c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>freemem</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>afb4a0fde354ff82618033ed7c3d845b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dim</name>
      <anchorfile>namespaceexamples_1_1damp.html</anchorfile>
      <anchor>a9431849b162e37e8131f56bdd7bc66a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::elitescass2</name>
    <filename>namespaceexamples_1_1elitescass2.html</filename>
    <class kind="class">examples::elitescass2::Cassini2_me</class>
    <member kind="function">
      <type></type>
      <name>plot3d</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>ab94c74c431f8fff119e0db2a1ba6aec5</anchor>
      <arglist>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_archive</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>a30538a53214b86ebd4dde6f1ce3fe044</anchor>
      <arglist>(archive, max_dv=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tof</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>a8a12d69ae5d847736ef1e1cd7b56b00e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>launch</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>a069f5085f77c4946500c11941955469a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cma_elite</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>aa7e89bb3fe0e85f83c4faff8a3112640</anchor>
      <arglist>(problem, archive, num=300)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>a99523598aa4aa14064852c19c9db7cdb</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>run_diversifier</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>a585abcf3e78b314f5965d009c5a42fcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>run_map_elites</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>a2d34737ea1ce88ba22a59acf69e098a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>a82d94e40024f051ed4ece4caa61ac49d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>a5361dd1597322715827d8fa8012c8f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>ae8d161804c261d5e6a4bc98ffbbf35bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>niche_num</name>
      <anchorfile>namespaceexamples_1_1elitescass2.html</anchorfile>
      <anchor>a3e032f90428595a2bce8f124ecdd22f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::employee</name>
    <filename>namespaceexamples_1_1employee.html</filename>
    <class kind="class">examples::employee::problem</class>
    <member kind="function">
      <type></type>
      <name>shift_indices</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a0a58622a7a7c4f9fcfbbf879b94854b2</anchor>
      <arglist>(shifts)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>employee_indices</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a93df84459b2fb28c6471daa74c139d9b</anchor>
      <arglist>(employees)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>avail_indices</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a617d9fe08d9e0a14c2db07e579faa09e</anchor>
      <arglist>(avails)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>index_map</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>ab18f283155c98ce2de7c475df39a864d</anchor>
      <arglist>(strs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>index_multi_map</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a5394b6007fdbe17085a5f12ef7d55a2f</anchor>
      <arglist>(lists)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness_</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>aa8d6cedc8d0c67de9584d0c0118ad058</anchor>
      <arglist>(employees_at_shift, day_ids, required_skill_ids, skill_set_ids, avail_names_ids, avail_days_ids, avail_type_ids, sec_start, sec_end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>show_example_solution</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a9676a4206eb4d11331bf0f725a98d91d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>aa486a9de2d7d7992ad08f0796cbc4822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a10d2b2d544bd7c073189648ed6db74ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a58ccc58221d0d1f4bb1dfdbcddc5824c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DESIRED</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>ae77fa958075499ad932d76e084aa27cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>UNDESIRED</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a10088c3a190eb6596fda3cde6e1d150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>UNAVAILABLE</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a045770e413dc0d779a16616b2368c57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict</type>
      <name>avail_type_map</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a7c41f8641df0e47ff0443b7fda29f9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>p</name>
      <anchorfile>namespaceexamples_1_1employee.html</anchorfile>
      <anchor>a3f0037e0195b5b4153034bb0d67a95be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::examples</name>
    <filename>namespaceexamples_1_1examples.html</filename>
    <member kind="function">
      <type></type>
      <name>test_all</name>
      <anchorfile>namespaceexamples_1_1examples.html</anchorfile>
      <anchor>a89bf5fd91d6193ce7f87fd23624ccbda</anchor>
      <arglist>(num_retries=320, num=1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_test_optimizer</name>
      <anchorfile>namespaceexamples_1_1examples.html</anchorfile>
      <anchor>aa1b20c9243f3ec91c6265811bb3dd8a8</anchor>
      <arglist>(opt, problem, num_retries=32, num=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1examples.html</anchorfile>
      <anchor>ac7178a19ba2e34dfe2f03d3165a9a84e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1examples.html</anchorfile>
      <anchor>ab2538f9cf4c77582114f6efe28430014</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1examples.html</anchorfile>
      <anchor>a565e0290b45197b1fc7638ead21bba6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1examples.html</anchorfile>
      <anchor>a74987491d40e19ac395a5ec08ef3a5c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>problems</name>
      <anchorfile>namespaceexamples_1_1examples.html</anchorfile>
      <anchor>a8b61d476c2c5fc57441de80202fc9be7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_evals</name>
      <anchorfile>namespaceexamples_1_1examples.html</anchorfile>
      <anchor>aa42696fc3de024f11015d9bcf9e3ff7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>algos</name>
      <anchorfile>namespaceexamples_1_1examples.html</anchorfile>
      <anchor>ae14817ef6a8b1bd0a154a0375cefda61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::f8</name>
    <filename>namespaceexamples_1_1f8.html</filename>
    <class kind="class">examples::f8::f8_problem</class>
    <member kind="function">
      <type></type>
      <name>f8</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>abb430cf22cc5d886ed57d2779f95f939</anchor>
      <arglist>(t, y, w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>bounds</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a16f2b5368959427f3eeacb0d09f89301</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>obj_f</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>aa56ebe4417be7da0b50032e27a949ee2</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>obj_f_c</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a45311ef62008dabd7031405663afdf13</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_default_cordinated_retry</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>ac15e3164294c973c8525b747e5612388</anchor>
      <arglist>(problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_gclde_cordinated_retry</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a90e66176c39820d24606c1803a21a682</anchor>
      <arglist>(problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_cma_cordinated_retry</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a0c7c9dd2bf41f65d59684df70361018a</anchor>
      <arglist>(dim=6)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_de_cma_parallel_retry</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>aa52e358a5531d1b2f59aba6b73d9f9fc</anchor>
      <arglist>(problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_cma_parallel_eval</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a545ccc620ffe0e15b26bb49f9d996fd4</anchor>
      <arglist>(problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_gclde_parallel_eval</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a2761e37ad7f9424dcd775492ddac1aed</anchor>
      <arglist>(problem)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>aeecd475268eaac3ca5c1d83937692528</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a917b1d90c79f5928cbc8c3e8f5ef2b8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a836d0a9be20bf394ffda3586abe75926</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ksi</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a37a9fc6c4c6dcc77c32f318d9ecb919c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>integrateF8_C</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a828783438a580b58c72837e17d5d61a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a178c95a5c2a21ca72d34dbbbbf583f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a1429a567c0d4eebe634d377059f5fab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>freemem</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>ae14e6ef9056e9877368a539a519f0f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dim</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a62aa26911a48985ff9145ba7afa2ea92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>problem</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a681305358ccb77100f5c4fc48f6d0f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ret</name>
      <anchorfile>namespaceexamples_1_1f8.html</anchorfile>
      <anchor>a5c0f72dba186ef86a69efc09ded23449</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::filter</name>
    <filename>namespaceexamples_1_1filter.html</filename>
    <class kind="class">examples::filter::filter</class>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1filter.html</anchorfile>
      <anchor>a8e4a9fe9a9fc81e17722b8999b8fc300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1filter.html</anchorfile>
      <anchor>a5e54718cf5871a3bfa2e5838228cfb21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1filter.html</anchorfile>
      <anchor>a58c622d84be6a19c2213d000bd4eae2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>filter</name>
      <anchorfile>namespaceexamples_1_1filter.html</anchorfile>
      <anchor>aefed5bb18a20cf853dc9f9b21f2c7294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tsp</name>
      <anchorfile>namespaceexamples_1_1filter.html</anchorfile>
      <anchor>a10af08ebae43e244b283744e19d8d40e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::gear_train</name>
    <filename>namespaceexamples_1_1gear__train.html</filename>
    <member kind="function">
      <type></type>
      <name>ratio</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>aa60f94f1dcb8bd291893acc7c3284ffb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>discrete</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>aed91576b10d97cb488c1badbe66e796c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_feasible</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>a8650b80b6d76475be4dfd225a55c62b0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>feasable_ratio</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>adf9cb51be26cd8e06226d3836a2782f1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_result</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>a5f77cab0f2182c613735dba90ac0a2b2</anchor>
      <arglist>(ret, best, t0, i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_optimizer</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>a6942c7e5c634c2d56ccc8e6991db3725</anchor>
      <arglist>(fun, n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_optimizer_adv</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>aedfd50e048f3a8af3a3782a7e4b76fb1</anchor>
      <arglist>(fun, n)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>a051e33678c6c8e3ebf31aec6959c48c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>a7f0a36761745a3929e1ef1af7f977201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>a4d3efa93f718adb000a2adb164e09797</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fac</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>ad2a2ddca5789d754aeaca5f116195235</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>lowerbound</name>
      <anchorfile>namespaceexamples_1_1gear__train.html</anchorfile>
      <anchor>ac55edaaa100d315167378785d8149a44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::harvesting</name>
    <filename>namespaceexamples_1_1harvesting.html</filename>
    <class kind="class">examples::harvesting::fitness</class>
    <member kind="function">
      <type></type>
      <name>scheduling</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>a666bda29f0fbc73cf7507967dbd8e2d8</anchor>
      <arglist>(tasks, n_jobs, n_machines, max_active, start, duration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>chart</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>a372d76d3dd55bdbce747759184911516</anchor>
      <arglist>(tasks, n_jobs, n_machines, max_active, start, duration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>adjust_timing</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>ad7244b0bc13af9e1df5e1a29be8200a6</anchor>
      <arglist>(start, duration, max_active)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>exec_tasks</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>a5e6fd72941106ed07937bf8806852011</anchor>
      <arglist>(tasks, n_jobs, n_machines, max_active, start, duration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>filtered_tasks</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>ac5401be59f58e63fbbb729287a4c3171</anchor>
      <arglist>(x, task_data, n_operations, n_machines, job_indices, job_ids)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>retry_modecpp</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>abe8c6e1997927ab3f18d66329f8e3ff9</anchor>
      <arglist>(fit, retry_num=32, popsize=48, max_eval=500000, nsga_update=True, workers=mp.cpu_count())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optall</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>ab869345e6c0b51fa393095935a395060</anchor>
      <arglist>(max_active, multi_objective=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>a12ed3a155bf3c4c55dcfa7935b5d5b90</anchor>
      <arglist>(bi, max_active, multi_objective=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>a499ab2843b981f8e2c10eb21636a6d01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>a8509c0d38a1c6445d5349c203e203311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>a48e2ae48f8a81a448c4f19d7014cfdeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1harvesting.html</anchorfile>
      <anchor>aa37b036022b2bc82cff39f6e0393bf86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::house</name>
    <filename>namespaceexamples_1_1house.html</filename>
    <class kind="class">examples::house::cv_problem</class>
    <member kind="function">
      <type></type>
      <name>ConverNaNToNAString</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>ade8281dc8c65d8118f9d98154de6308e</anchor>
      <arglist>(data, columnList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cv_score</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a39b5eebf257563b87a88a9a5ef6ee5ad</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>obj_f</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a8b9298c0123a93afcd0f36a42ac72230</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>obj_fmin</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>acb427336872b6d7e0fc0371ddc53dac7</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a4934e27c4da6ba749aed142321a92786</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>ab46c30f2c08d0d96db6520e8ca076d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>aba858ae5de8fb7f24964bff0c3842802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>train_dataset</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a3b0347fdd4de9dbe8215ffed52d37f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>test_dataset</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>aed975c759441882937098ef4c190ca0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>categorical_features</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a82b43265e599352aa67170fb0dc01976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>every_column_except_y</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a4b968b58512b3493a1c28ddcb1b62a17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>every_column_non_categorical</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a2edc9a3af1cf35065657d37aa6092d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>numeric_feats</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>ad86e27976b8a992dcc2d41b89bcc8db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>features_with_nan</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a550e21ac7059371e4394896cfe2a7ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>model</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a51b5d2e283cc1d846c6fe369fea06a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>weighted_features</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a992883b04b0f7d9481f373de9c5df398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ordered_features</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a543dd25d1396426b86a8b84cc639ee16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>most_relevant_features</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a59913344df23ab873d6a5d0ae217e90e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>axis</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a42ce97b3ca0226db9e4467e016d417cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>inplace</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a4586d38b33b44e150bb176b86f7c3022</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>train_x</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a1377c74d53c1100c7bbce092002e8362</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>train_y</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>aed17691e77bd8195b440e7e6c576c0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>grid_search</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a3c03a0234a2c71ef181d8e85ee11739d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hyperopt</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>ae1e3ec63d02fac6de46655b3bd0c22b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bayesian</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a58f1ee9db2b6804b6d00c152ad40b802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>evolutionary</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a5a3829e9f7c9a57a045c0b48719b1b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dict</type>
      <name>parameters_for_testing</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a5fc66d59169f22ab71835a11b5e9e932</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xgb_model</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a5e0260102b4af1ca5b85c5472d09b2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>gsearch</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a2732c74b853863a101cac2999de77e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>xgb_space</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>afba8daf815562b6f56fad5a1a4923cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a0ad73fccd0afeaa8550811d87106dd5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>bds</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>ab5772acae74caae3870e1ca71d7dc5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>optimizer</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a263802c227189418de4d0c702eb18dce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_iter</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a8b99c5a7ab3c241da3ed644965f2a715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>y_bo</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a107282d610c5c3cd4e8bece6cafd4bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>aa1edc9c4f08ab5e9479e35f328a6743b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>problem</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a96d51c8d870c5843922de8007f346037</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ret</name>
      <anchorfile>namespaceexamples_1_1house.html</anchorfile>
      <anchor>a1baee49f82585b83c248e153dbfeb95c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::interferometry</name>
    <filename>namespaceexamples_1_1interferometry.html</filename>
    <member kind="function">
      <type></type>
      <name>archipelago</name>
      <anchorfile>namespaceexamples_1_1interferometry.html</anchorfile>
      <anchor>a4d145c826df624e173c54c792e88ebe8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>check_good_solution</name>
      <anchorfile>namespaceexamples_1_1interferometry.html</anchorfile>
      <anchor>a73aab1174c417c8b5a55b336f223f95d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceexamples_1_1interferometry.html</anchorfile>
      <anchor>add210e1c8397b3514e0f8db7459e950f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1interferometry.html</anchorfile>
      <anchor>ade47542775d2f283a81383e3cbac2785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1interferometry.html</anchorfile>
      <anchor>a4f82e920edf90012be4468c9b2ca878f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1interferometry.html</anchorfile>
      <anchor>a96b179a04bfc3874cd3a01d26b5a730c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>udp</name>
      <anchorfile>namespaceexamples_1_1interferometry.html</anchorfile>
      <anchor>a58061aa172c8b7502b21a633b5e32e77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::interferometry_udp</name>
    <filename>namespaceexamples_1_1interferometry__udp.html</filename>
    <class kind="class">examples::interferometry_udp::Interferometry</class>
    <member kind="function" protection="protected">
      <type></type>
      <name>_get_observed</name>
      <anchorfile>namespaceexamples_1_1interferometry__udp.html</anchorfile>
      <anchor>aeab16d7e29734973fa9765c86dc90bc0</anchor>
      <arglist>(n_points, im_ft, chromosome)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1interferometry__udp.html</anchorfile>
      <anchor>a0f511dae1cda4fc86f448811ea76a52b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1interferometry__udp.html</anchorfile>
      <anchor>af7003fd9174f0ca0c0fcb7a766387191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1interferometry__udp.html</anchorfile>
      <anchor>a93288b8b4ae12b4cd66fe598a24ca610</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>best</name>
      <anchorfile>namespaceexamples_1_1interferometry__udp.html</anchorfile>
      <anchor>a1fa9fbcc27bb7a7e4a2a1304d29496b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>count</name>
      <anchorfile>namespaceexamples_1_1interferometry__udp.html</anchorfile>
      <anchor>a8fe727e854115e399d2a0f00c17bdfbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>namespaceexamples_1_1interferometry__udp.html</anchorfile>
      <anchor>a92a0fa419a0d32fac263c9e25af3da4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>monitor</name>
      <anchorfile>namespaceexamples_1_1interferometry__udp.html</anchorfile>
      <anchor>a742b65934a702e09a3e3ab28673ed758</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::jobshop</name>
    <filename>namespaceexamples_1_1jobshop.html</filename>
    <class kind="class">examples::jobshop::fitness</class>
    <member kind="function">
      <type></type>
      <name>read_fjs</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>a6346fe9e3884169bb758fec8c703bec4</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>gantt</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>aeffe05b3358ef00e6271d4eed4eb540f</anchor>
      <arglist>(data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>scheduling</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>a3673511507c121e07cc4fbdb1a8241ca</anchor>
      <arglist>(tasks, n_jobs, n_machines)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>chart</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>abb824d6bc21e433ddb4298dd88d9ca28</anchor>
      <arglist>(tasks, n_jobs, n_machines)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>job_indices</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>a4189c2c7b394fe5aa8a0e4b244443333</anchor>
      <arglist>(tasks)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reorder</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>a51c2115b043ef1e6627c7e92383cb656</anchor>
      <arglist>(tasks, order, n_operations, job_ids, job_indices)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>exec_tasks</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>a3bfeb2d540dcef3a8111193fd5990f23</anchor>
      <arglist>(tasks, n_jobs, n_machines)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>filter_tasks</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>a750acc4c674962244544953c8738f08a</anchor>
      <arglist>(x, tasks, n_operations, n_machines)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>filtered_tasks</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>aa5e76ed2d482c6572421cff829f9da68</anchor>
      <arglist>(x, task_data, n_operations, n_machines, job_indices, job_ids)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optall</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>a3ce73ee1f522f98827b73e440f09683d</anchor>
      <arglist>(multi_objective=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>ab7d20451a09c85673eb6f79306479319</anchor>
      <arglist>(bi, multi_objective=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>a01494c8d6d33a9c47a72cda71efcd5e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>ad414b941ea67d277248d598fd522b491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>ae54cecc127c4cbd68811b9d513a1fdd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1jobshop.html</anchorfile>
      <anchor>aa4e2a964fa28bd08b9d3ce76f481fc8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::kepler</name>
    <filename>namespaceexamples_1_1kepler.html</filename>
    <namespace>examples::kepler::kepler</namespace>
    <namespace>examples::kepler::lambert</namespace>
    <namespace>examples::kepler::resonance</namespace>
    <namespace>examples::kepler::rvt</namespace>
    <member kind="variable" protection="private">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespaceexamples_1_1kepler.html</anchorfile>
      <anchor>a2626ef531246c803db87284ad4fa2bec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::kepler::kepler</name>
    <filename>namespaceexamples_1_1kepler_1_1kepler.html</filename>
    <class kind="class">examples::kepler::kepler::Kepler</class>
    <member kind="function">
      <type></type>
      <name>normRad</name>
      <anchorfile>namespaceexamples_1_1kepler_1_1kepler.html</anchorfile>
      <anchor>adba74f047075b00b64109925fa20a952</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_kepler</name>
      <anchorfile>namespaceexamples_1_1kepler_1_1kepler.html</anchorfile>
      <anchor>acd2ed415248c15d823c283bd3e067fb0</anchor>
      <arglist>(a, e, i, W, w, M0, mu, dt=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eccentric_anomaly</name>
      <anchorfile>namespaceexamples_1_1kepler_1_1kepler.html</anchorfile>
      <anchor>a1f0348588f88a7cbbef1b87d189a8673</anchor>
      <arglist>(a, e, M0, mu, dt=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_mean2ta</name>
      <anchorfile>namespaceexamples_1_1kepler_1_1kepler.html</anchorfile>
      <anchor>a517d2a90d3773a272d1ee7d415799214</anchor>
      <arglist>(M, e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_mean2eccentric</name>
      <anchorfile>namespaceexamples_1_1kepler_1_1kepler.html</anchorfile>
      <anchor>a1e36aa5defd99e317d30a5db994a0576</anchor>
      <arglist>(M, e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>keplerStart3</name>
      <anchorfile>namespaceexamples_1_1kepler_1_1kepler.html</anchorfile>
      <anchor>a1270aff9b2683cf09fd997af1c49791b</anchor>
      <arglist>(e, M)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eps3</name>
      <anchorfile>namespaceexamples_1_1kepler_1_1kepler.html</anchorfile>
      <anchor>a2421a039709ffc114992322c5b944ba0</anchor>
      <arglist>(e, M, x)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::kepler::lambert</name>
    <filename>namespaceexamples_1_1kepler_1_1lambert.html</filename>
    <class kind="class">examples::kepler::lambert::lambert_problem_multirev</class>
    <class kind="class">examples::kepler::lambert::lambert_problem_multirev_ga</class>
    <class kind="class">examples::kepler::lambert::lambert_problem_stochastic</class>
  </compound>
  <compound kind="namespace">
    <name>examples::kepler::resonance</name>
    <filename>namespaceexamples_1_1kepler_1_1resonance.html</filename>
    <class kind="class">examples::kepler::resonance::resonance</class>
  </compound>
  <compound kind="namespace">
    <name>examples::kepler::rvt</name>
    <filename>namespaceexamples_1_1kepler_1_1rvt.html</filename>
    <class kind="class">examples::kepler::rvt::rvt</class>
    <member kind="function">
      <type></type>
      <name>rvt_kepler</name>
      <anchorfile>namespaceexamples_1_1kepler_1_1rvt.html</anchorfile>
      <anchor>a0fb133f46a6fcb5df906d942441ec464</anchor>
      <arglist>(kep)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>rvt_planet</name>
      <anchorfile>namespaceexamples_1_1kepler_1_1rvt.html</anchorfile>
      <anchor>a6027e9c84ce0081e4d5a4cf0ed8bd9d4</anchor>
      <arglist>(pl, time)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>rotate_vector</name>
      <anchorfile>namespaceexamples_1_1kepler_1_1rvt.html</anchorfile>
      <anchor>aeb74e648c4036b6aaad59775e779a010</anchor>
      <arglist>(v, k, theta)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::lotka</name>
    <filename>namespaceexamples_1_1lotka.html</filename>
  </compound>
  <compound kind="namespace">
    <name>examples::maxcut</name>
    <filename>namespaceexamples_1_1maxcut.html</filename>
    <class kind="class">examples::maxcut::fcmaes_Optimizer</class>
    <class kind="class">examples::maxcut::fcmaes_SPSA</class>
    <member kind="function">
      <type></type>
      <name>maxcut</name>
      <anchorfile>namespaceexamples_1_1maxcut.html</anchorfile>
      <anchor>a401b3e4e3b71951161d316bc933160e5</anchor>
      <arglist>(optimizer, n=13, backend_name=&quot;aer_simulator&quot;, add_noise=False)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1maxcut.html</anchorfile>
      <anchor>a6c87169a72c531f0678f435c7b0b770e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1maxcut.html</anchorfile>
      <anchor>aa3cc5f1ee347c061fa4829906787318b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1maxcut.html</anchorfile>
      <anchor>ab5255a81e0455d4e83265e3ec8a517b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>namespaceexamples_1_1maxcut.html</anchorfile>
      <anchor>a9bc9ad3cda5a76da69f8968aa644b3eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::moexamples</name>
    <filename>namespaceexamples_1_1moexamples.html</filename>
    <class kind="class">examples::moexamples::cassini1_mo</class>
    <class kind="class">examples::moexamples::cassini2_mo</class>
    <class kind="class">examples::moexamples::fonseca</class>
    <class kind="class">examples::moexamples::poloni</class>
    <class kind="class">examples::moexamples::schaffer</class>
    <class kind="class">examples::moexamples::tandem_mo</class>
    <class kind="class">examples::moexamples::zdt1</class>
    <member kind="function">
      <type></type>
      <name>uniform</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>ac65511f1250e7d476d1dbefa6a1383d6</anchor>
      <arglist>(bounds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nsgaII</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>a4053ac1d24b537d2435005c9f7be9ccd</anchor>
      <arglist>(NObj, objective, pbounds, seed=None, NGEN=20000, MU=400, CXPB=0.9)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nsgaII_test</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>a565f7101212f4770069ca2b305bfb10f</anchor>
      <arglist>(problem, fname, NGEN=2000, MU=100, value_limits=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_all</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>a4599740480fba54da22dd17058b73c76</anchor>
      <arglist>(folder, fname)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>decpp_minimize_plot</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>aea4afb4ee1738276b6d3458681f545cf</anchor>
      <arglist>(problem, name, popsize=64, max_eval=100000, nobj=2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>de_minimize_plot</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>aea8fa426f342d5569c78b2f502d23d5d</anchor>
      <arglist>(problem, name, popsize=64, max_eval=100000, nobj=2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nsga_minimize_plot</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>acab1d97a5dc64a2c9ab558c3638986e7</anchor>
      <arglist>(problem, name, popsize=64, max_eval=100000, nobj=2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>minimize_plot</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>a566fc7b1e3a68cda7c9b396dda6ce003</anchor>
      <arglist>(problem, opt, name, exp=2.0, num_retries=1024, value_limits=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>adv_minimize_plot</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>ac27d609cba5e248a69559de25efe9a26</anchor>
      <arglist>(problem, opt, name, value_limit=np.inf, num_retries=10240)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>a8756eb69c44e589cded619be92a0070d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>ac2c1d97b582d9e0b4c897fb5aaf9bcbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>a1a01ead9a2a5cff2d6543351593f946b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>FirstCall</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>acbff63ac4ca44b2c8d090f13e6a24d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exp</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>a2613f239ece1c033a7e0a1e5c2977a09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_retries</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>ae8e0a9288b0247d89e562a088db4166a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>value_limits</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>a4568b4c3e26cef769662e6ed9a840839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>value_limit</name>
      <anchorfile>namespaceexamples_1_1moexamples.html</anchorfile>
      <anchor>a56a3887777d5069db3de8ea51f916347</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::noisy_tsp</name>
    <filename>namespaceexamples_1_1noisy__tsp.html</filename>
    <class kind="class">examples::noisy_tsp::TSP</class>
    <member kind="function">
      <type></type>
      <name>evaluate_tsp</name>
      <anchorfile>namespaceexamples_1_1noisy__tsp.html</anchorfile>
      <anchor>a0ce68f212bcae03932d42fc95e0c9b5e</anchor>
      <arglist>(x, W, d, noise_factor, iter_num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>load_tsplib</name>
      <anchorfile>namespaceexamples_1_1noisy__tsp.html</anchorfile>
      <anchor>a274a3b58edfc0cdd8981e59138bc1d5b</anchor>
      <arglist>(path, noise_factor=1, iter_num=100)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1noisy__tsp.html</anchorfile>
      <anchor>adf0402eddcdcf74d3e734391682997b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1noisy__tsp.html</anchorfile>
      <anchor>a32bd4bbc6c3e7c205179670d3c261b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1noisy__tsp.html</anchorfile>
      <anchor>a9da110a99efd0178aaa8388683d0ec2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tsp</name>
      <anchorfile>namespaceexamples_1_1noisy__tsp.html</anchorfile>
      <anchor>a8345b041db5eda8bdc039cee0b2f2a3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::powerplant</name>
    <filename>namespaceexamples_1_1powerplant.html</filename>
    <class kind="class">examples::powerplant::PowerPlant</class>
    <member kind="function">
      <type></type>
      <name>optimize_fcmaes</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>ac65ddc3076a6a09c56dd51103402f526</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_qd</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>ad53e1a3a3df5632bbbf9ba687701accc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_archive</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>a40e0b05c5c539f8e9800c1053e0df88e</anchor>
      <arglist>(archive)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>screen_level</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>a2f5507817062080b61a452eab5e05563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>a4f5b6416ddba2f7d1fcc3070d046507c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>a327b80afd9ca0a738ab9581f762edc0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dim</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>a9897ae865258899c6a683d3c4410725c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nobj</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>ae9821641eeb365562951ee84a190a47a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncon</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>a36f33b188fcc1f4e8a35c22cd64adca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>a8bcca3c60d94623e0dafbc9c139b8a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>local</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>a14a177aa86746b8829645a4feb2830a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qd_dim</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>adf307215fa1609423237f05bc6a10986</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>qd_bounds</name>
      <anchorfile>namespaceexamples_1_1powerplant.html</anchorfile>
      <anchor>a26dfe71635f9eb14498be9fea2e08ac8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::prophet_opt</name>
    <filename>namespaceexamples_1_1prophet__opt.html</filename>
    <member kind="function">
      <type></type>
      <name>load_data</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>a7549217e0180b68ae1bd365ca7287fe4</anchor>
      <arglist>(symbol=&apos;BTC-USD&apos;, start_date=&apos;2013-01-01&apos;, end_date=&apos;2024-10-30&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>btc_strategy</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>a61ac51634dd7cfd9cf39a7947fcbd281</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_df</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>a8a4ce6e419eeaa24cd84dcbd0930f019</anchor>
      <arglist>(df)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>btc_eval_params</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>aaef1882f68b34d7af026e8781098c1d5</anchor>
      <arglist>(df, changepoint_prior_scale, period, fourier_order, seasonality_mode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>btc_show_params</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>ae4e0f5b1e89fcbb3c76d779137998d54</anchor>
      <arglist>(df, changepoint_prior_scale, period, fourier_order, seasonality_mode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>convert_x</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>a6de43eaac1a61a76257187d2827f2ece</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>btc_show_x</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>a18a248c54de45c4841f27809e3a642b1</anchor>
      <arglist>(df, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>ab552129c694447ce6fc44ad3f49825e9</anchor>
      <arglist>(df, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_btc</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>a89edb34f6787ecf7671d592512524b7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_btc_ask_tell</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>a6036ff4e616cbf09671db7d938061190</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>show_good_result</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>ae9fc3dd94248f2146ad53fcf139d55fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>logger</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>a43ce737dcffd73d540d9e21f70f783c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>null_handler</name>
      <anchorfile>namespaceexamples_1_1prophet__opt.html</anchorfile>
      <anchor>a7790ff1362e83048ddbf1967cb4488ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::quant</name>
    <filename>namespaceexamples_1_1quant.html</filename>
    <class kind="class">examples::quant::Fitness</class>
    <member kind="function">
      <type></type>
      <name>get_var_form</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>a9072d95c70ea7d05b666c80254547034</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_probability_distribution</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>a9757373bc2b175a335aa0d5f752dcd78</anchor>
      <arglist>(counts)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>random_target_distr</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>ada40b79fd0f923b6c0b1757cdafd4603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>objective_function</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>ab0e48a116239e90fe916567c6a16fb23</anchor>
      <arglist>(params, target_distr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_differential_evolution_loop</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>a27dda8d7474d2d824515d4e27ee7c1e4</anchor>
      <arglist>(fits)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_cmaes_loop</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>a308d4239e56d47cf999cd1b6ed9925f5</anchor>
      <arglist>(fits)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_biteopt_loop</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>a9bdd19a5ca466377aa79f0d5eb64da2a</anchor>
      <arglist>(fits)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_COBYLA_evolution_loop</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>a59120aaeb10828e4a2d789db7e1895af</anchor>
      <arglist>(fits)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>find_COBYLA_weakness</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>aa8a413cdec1ed5fb8fd269635d471ce2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>backend</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>a65c7b887b7f7367afcbfd16db3d1c42d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>aec66392ed0dc315b764d783c2cfeabe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>a7cb7bd52f8064e1948012d4cf23aba31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>a587f1251b35e2212f728550c97f776cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NUM_SHOTS</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>ad4a54ae9ebc5e270133852a96105cf56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>fits</name>
      <anchorfile>namespaceexamples_1_1quant.html</anchorfile>
      <anchor>a7749e368860b241dc9bdd4d28b06f835</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::reproblem</name>
    <filename>namespaceexamples_1_1reproblem.html</filename>
    <class kind="class">examples::reproblem::re_problem</class>
    <member kind="function">
      <type></type>
      <name>objectives_re</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>ae65e9bff5a0a5413fed20efe2babdead</anchor>
      <arglist>(name, x, numVars, numObjs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>bounds_re</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>ac4ecb3cc994643348717fe767901a820</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>minimize_plot</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>a172e76e02ef5848a37c7e17b07e0d159</anchor>
      <arglist>(problem, opt, name, exp=2.0, num_retries=1024, value_limits=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>adv_minimize_plot</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>a5cf58ca88bffce73f658f62ae55daefc</anchor>
      <arglist>(problem, opt, name, value_limit=np.inf, num_retries=10240)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>ad84f6c59065eaf6c3871238ac9efc1be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>a67ddb3e7cc602ad548fc8a455a7fff6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>a1ec84fb6aaafdabfdef64e2248356b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>ae599bda27de440044f1369b00b0190a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>basepath</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>aad1bcf928c7cac4e8a77ec7ed972879d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>libcmalib</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>ae9e391de35d99b16b69e0cc83d0fb399</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>objectives_re_C</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>a58085290ecd79262dab3ddbc05f0a43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>aeb83fc4a8ed17c713ae4f96afda33d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>a71807d466129b8abb25bd7c0c32b90a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds_re_C</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>a53004170ed8c799a80259975b54c71b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>freemem</name>
      <anchorfile>namespaceexamples_1_1reproblem.html</anchorfile>
      <anchor>a7bf6d7281b617beb32bb6369c2be3905</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::repython</name>
    <filename>namespaceexamples_1_1repython.html</filename>
    <class kind="class">examples::repython::RE1</class>
    <class kind="class">examples::repython::RE1_pymoo</class>
    <class kind="class">examples::repython::RE2</class>
    <class kind="class">examples::repython::RE3</class>
    <class kind="class">examples::repython::RE4</class>
    <class kind="class">examples::repython::RE4_pymoo</class>
    <class kind="class">examples::repython::RE5</class>
    <class kind="class">examples::repython::RE5_pymoo</class>
    <class kind="class">examples::repython::RE6</class>
    <class kind="class">examples::repython::RE6_pymoo</class>
    <class kind="class">examples::repython::RE7</class>
    <member kind="function">
      <type></type>
      <name>closest_value</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>a367ffed537bf279a1b746b412e9284fc</anchor>
      <arglist>(arr, val)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>div</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>a5e91499417ba4e5a4c5da965f07ac2b4</anchor>
      <arglist>(x1, x2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>re_1</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>ab0c3b123150d77d0235996369f952c7a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>re_2</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>aa59bb6e94f8b70a49a0679275692624d</anchor>
      <arglist>(x, feasible_values)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>re_3</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>ad37cdaa66ca5a84df03975c4a8c42832</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>re_4</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>ac603d498fc30083478073cb180210714</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>re_5</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>a000f26546a03c5a3ca895f1d77100808</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>re_6</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>aac7cd61f81d591e151154ba29c9d4c7d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>re_7</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>a93cdbf073e9d13bee2872948f88abb20</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>check_pymoo</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>a2f2d11f17068d9bc01d73094231e625d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>a04dd7e0aab879e0f2f8a6a203761d2af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>ab9ec8d2d29e4d0868c463f04553235e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>a73c9e19b0adc1569e7497188f2a82e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1repython.html</anchorfile>
      <anchor>a538d1bebe924b867166f037eb8842a1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::robot</name>
    <filename>namespaceexamples_1_1robot.html</filename>
    <class kind="class">examples::robot::b2WorldInterface</class>
    <class kind="class">examples::robot::end_effector</class>
    <class kind="class">examples::robot::guiWorld</class>
    <class kind="class">examples::robot::PushReward</class>
    <member kind="function">
      <type></type>
      <name>create_body</name>
      <anchorfile>namespaceexamples_1_1robot.html</anchorfile>
      <anchor>a252c38079aadabb2799d5085b5eb4a48</anchor>
      <arglist>(base, b2world_interface, body_shape, body_size, body_friction, body_density, obj_loc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>make_base</name>
      <anchorfile>namespaceexamples_1_1robot.html</anchorfile>
      <anchor>ac017cc6df6c6717fcc3f1bb730354cde</anchor>
      <arglist>(table_width, table_length, b2world_interface)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add_obstacles</name>
      <anchorfile>namespaceexamples_1_1robot.html</anchorfile>
      <anchor>ae951566f2aafee72e88b7889b7249481</anchor>
      <arglist>(b2world_interface, obsverts)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>run_simulation</name>
      <anchorfile>namespaceexamples_1_1robot.html</anchorfile>
      <anchor>aa5b8f7a38272096913298ba3f11b72d8</anchor>
      <arglist>(world, body, body2, robot, robot2, xvel, yvel, xvel2, yvel2, rtor, rtor2, simulation_steps, simulation_steps2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1robot.html</anchorfile>
      <anchor>ad7e10efd4ee195ca3e30475bbef6b25b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::routing</name>
    <filename>namespaceexamples_1_1routing.html</filename>
    <class kind="class">examples::routing::Routing</class>
    <member kind="function">
      <type></type>
      <name>fitness_</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>a7c0135d03443b57db620ab0f8c763b69</anchor>
      <arglist>(seq, distance, demands, capacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>parse</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>a814d077c3a27a0f9024e585934398fa0</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>a968104978655bcf356ed27cf06e6bcee</anchor>
      <arglist>(filename, capacity, popsize, max_evaluations)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_capacity</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>aae9bc2f46194c49093d7aa0f36e6c315</anchor>
      <arglist>(filename, popsize, max_evaluations, num_retries=640)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_so</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>a995ddf4fbc26aa967013e68e80cbc75e</anchor>
      <arglist>(filename, capacity, opt, num_retries=320)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>dump</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>aedf81cfa24d1bc109fc199d6b9395ed0</anchor>
      <arglist>(filename, capacity, seq)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>a3ade6fef1c9ae9e0c8643aca8d8ac3cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>a89239249a3c147f328a323e0cd5a3d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>a5f11c94e47c34b1791c7a3a31d5b0195</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>str</type>
      <name>filename</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>af20f7439464bb10d90f1a4eed8fd3f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>capacity</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>a516d080357c265eac4a9258cb89b05c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>popsize</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>a5a4800fbe52df6b0a5ff0b19c727cd55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_evaluations</name>
      <anchorfile>namespaceexamples_1_1routing.html</anchorfile>
      <anchor>a0b20d4e9fcb358442363b9c59b242cb0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::rover</name>
    <filename>namespaceexamples_1_1rover.html</filename>
    <class kind="class">examples::rover::AABoxes</class>
    <class kind="class">examples::rover::AdditiveCosts</class>
    <class kind="class">examples::rover::ConstantOffsetFn</class>
    <class kind="class">examples::rover::ConstCost</class>
    <class kind="class">examples::rover::ConstObstacleCost</class>
    <class kind="class">examples::rover::GMCost</class>
    <class kind="class">examples::rover::NegGeom</class>
    <class kind="class">examples::rover::NormalizedInputFn</class>
    <class kind="class">examples::rover::PointBSpline</class>
    <class kind="class">examples::rover::RoverDomain</class>
    <class kind="class">examples::rover::Trajectory</class>
    <class kind="class">examples::rover::UnionGeom</class>
    <member kind="function">
      <type></type>
      <name>simple_rbf</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>a8207a32f0c02058548e9e200378ec732</anchor>
      <arglist>(x, point)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_2d_rover</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>aa48d43d67b8dbf6d1a0ec1c55a23f9a8</anchor>
      <arglist>(roverdomain, ngrid_points=100, ntraj_points=100, colormap=&apos;RdBu&apos;, draw_colorbar=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>generate_verts</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>a701f5da1f2c44ddb42f0cb2650d1645e</anchor>
      <arglist>(rectangles)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_3d_forest_rover</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>acb4d82abdf43c7d1c50e81ae6945c25f</anchor>
      <arglist>(roverdomain, rectangles, ntraj_points=100)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>create_cost_small</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>aec941ae9a13aea3eb5a306bf83f8d3bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>create_small_domain</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>a23a83bf80e3cd736066e3bf602df95b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>create_cost_large</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>a07b1b7a0f434192fb94ed8fc72743a07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>create_large_domain</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>a240750491f18db35d64c202a18f6718d</anchor>
      <arglist>(force_start=False, force_goal=False, start_miss_cost=None, goal_miss_cost=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>a478b95bc30ea81b5ac1b26729cd9cf9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>a5bb566eecba03b10441820b99c624dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>afd261f0f2f987b14a9bd407644a3cc76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1rover.html</anchorfile>
      <anchor>a3680e045702b29bc3b4625ac2c8df3db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::scheduling</name>
    <filename>namespaceexamples_1_1scheduling.html</filename>
    <class kind="class">examples::scheduling::fitness</class>
    <member kind="function">
      <type></type>
      <name>select</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>af71d892a26a7cf4e51f3d0c28dd3d93b</anchor>
      <arglist>(asteroid, station, trajectory, mass, transfer_start, transfer_time, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>check_pymoo</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a692cea66b0bddb89af116d021965b1f1</anchor>
      <arglist>(dim, fit, lb, ub, is_MO)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>check_de_update</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a59d0a8a992360512d79106e3e3a51eeb</anchor>
      <arglist>(dim, fit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_fitness</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a1bf9ac13dfe55503a90073b1ca96d486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>aee3b215ee9f014805933d7f107793261</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot3d</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a446a90f88f19e750f2a8c52f98660ee4</anchor>
      <arglist>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_archive</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a61f08d3370844ad2267d011c37260ad2</anchor>
      <arglist>(archive, problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nd_optimize</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a6556fae25bdbd6c39503674979477c1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>next_free</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a171925bee0250e0755f9521ef6756bc7</anchor>
      <arglist>(used, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>disjoined</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a9b78175a9bd193289a2db7a992840231</anchor>
      <arglist>(s, n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>timings</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a5473acc487e865227b4f1d9ac06d8102</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>dyson_stations</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>afe388874c2fafb820cc0d1a456332d53</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>trajectory_selection</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a65b621b377aebb2c8a0b9af590aa280d</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>score</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>aa1884a671e4ac02c8cc86173c911794c</anchor>
      <arglist>(min_mass, trajectory_dv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>score_vals</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>abce02ddc9637c49f7152ef997c3db2eb</anchor>
      <arglist>(min_mass, trajectory_dv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>trajectory_dv</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>abae88677822865f44d0e0124ca35f438</anchor>
      <arglist>(asteroid, trajectory, delta_v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>select_dvs</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>aef8d4dd874790f032aa9f541c3c199a6</anchor>
      <arglist>(bdv, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ast_num</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>ad2889b9007308a61135c1b5faeca5d11</anchor>
      <arglist>(x, asteroid, trajectory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a9714bb5daa021b51c31c14cf8584c0d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>aa4d70ee05aa50eb56fc778db9b2e603c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a6a224f324c4b0255a7c9ee2e0b3ecb56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>ad6bb7f30e415965f2865c6021d84757a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>STATION_NUM</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a0de8c3a22eac606b2f5fe7f33205ee70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>TRAJECTORY_NUM</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a7fc878ed92cb500572e6876821c5d97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ASTEROID_NUM</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a66fa9995c0ca0abe7c130eb32ed75377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>MAX_TIME</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>acc865effb06c5acf64afac6c28f1b1c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>WAIT_TIME</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a93fb6ce388e505e50c12697e2ada8c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ALPHA</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a7cd5df9eeb21860bc32419ff89843345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>A_DYSON</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a81964c0fe65663ecb8a640ebf2980c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DAY</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a238c380bbe3791fa8b45aa7e25f561d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>YEAR</name>
      <anchorfile>namespaceexamples_1_1scheduling.html</anchorfile>
      <anchor>a643ae9a76a6aace4f82709ea70110912</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::siemens</name>
    <filename>namespaceexamples_1_1siemens.html</filename>
    <class kind="class">examples::siemens::Buffer</class>
    <class kind="class">examples::siemens::Machine</class>
    <class kind="class">examples::siemens::Plant</class>
    <member kind="function">
      <type></type>
      <name>simulate</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>a67952b8c3871d96f16be3611f304e108</anchor>
      <arglist>(plant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_de</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>afc870909e46d815101a1a549d8d95c37</anchor>
      <arglist>(plant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_bite</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>a12e19ccc6d58c1583e69ac1d1e6cd408</anchor>
      <arglist>(plant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot3d</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>aa7e561dd488ae1d3eaedc8f761743f96</anchor>
      <arglist>(store, name, xlabel=&apos;batch1&apos;, ylabel=&apos;batch2&apos;, zlabel=&apos;number&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>ac5b4f4a9b78a88fca87ea4452adbf0dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>a2534024e6cb713fb632d2c03a0727188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>a23a3c944635c8a264f08496c623a9bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>a11f14a89b3a1ef6ac8faad05f9a069d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>buffer_capacity</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>ad3a041edcdbd13065c5c8d1242e0dc69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>setup_time</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>a98750a048c544f155e938e599c83ff0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtime_orig</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>add8affd4a1b1a45e1709d86ac89bfa54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dtime_2</name>
      <anchorfile>namespaceexamples_1_1siemens.html</anchorfile>
      <anchor>a3e43412b000c273dd90c6c320e058507</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::solo_mgar</name>
    <filename>namespaceexamples_1_1solo__mgar.html</filename>
    <member kind="function">
      <type></type>
      <name>read_solutions</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>aa279c9f78f2ec004e4903d58ca983e1b</anchor>
      <arglist>(fname)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>verify</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>a1e0a732208df5c3b8f3702ae71c93015</anchor>
      <arglist>(ys, xs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>check_good_solution</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>a19767315305fd46d53086fc0fe52085e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_good_solutions</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>a212c6d5afb67588b11013c8d2b8cc819</anchor>
      <arglist>(xs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>aad03af6f9c89ae3a7a0bbdbab890adf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>archipelago</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>a973fceab6e9884b725a995f604136e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_pagmo</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>acaf2dae83ca2b5af9010501f1a0dde2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>ad80ce794be13973e648e88e898b15f55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>a2e9f09869c9b5f20e4c9ce69cd138968</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>ade826ec0813c240a21aff7bab4d03a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ys</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>a5da2e7082f9e5edf20503277bb2647f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xs</name>
      <anchorfile>namespaceexamples_1_1solo__mgar.html</anchorfile>
      <anchor>a9587198ac3bbb25456c3249544bc5d6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::solo_mgar_udp</name>
    <filename>namespaceexamples_1_1solo__mgar__udp.html</filename>
    <class kind="class">examples::solo_mgar_udp::solo_mgar_udp</class>
    <member kind="function" protection="protected">
      <type></type>
      <name>_dv_mga</name>
      <anchorfile>namespaceexamples_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a6d928d9b61388ba3bc08749cb303c94e</anchor>
      <arglist>(pl1, pl2, tof, max_revs, rvt_outs, rvt_ins, rvt_pls, dvs, lps=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>compute_resonance</name>
      <anchorfile>namespaceexamples_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a2f01caf14c62d02e55dfc2245172590b</anchor>
      <arglist>(pl, resonances, beta, safe_distance, used_resos, reso_dts, rvt_outs, rvt_ins, rvt_pls, dvs, resos=None)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_angle</name>
      <anchorfile>namespaceexamples_1_1solo__mgar__udp.html</anchorfile>
      <anchor>aa993877cfdbc437a566d33cb4290ca03</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bval</name>
      <anchorfile>namespaceexamples_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a2289d39606ce5637b029abca9fb50734</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a8f38d11a28a8076a2702e9cabd3bd26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a66e7f962fcf0cfc9727f1d44c236423a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1solo__mgar__udp.html</anchorfile>
      <anchor>a4747b599c24290b902644f37120162bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::spring</name>
    <filename>namespaceexamples_1_1spring.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>_feasible</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>ab4b7a17b6f29a47a16b6e750c9f44b6a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>constraint_ineq</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>a682c6c4156dd71a76e42d83aa869de29</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>penalty</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>ad819bd367024b1a2ff5dcdcf9baf0f26</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>weight</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>a44581395454773e536a02fcb79378602</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>weight_penalty</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>a39b97ec21efea793b97726fa1bdc4d0b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_result</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>a5548a6c0d57e91af650b43407f2f1c60</anchor>
      <arglist>(ret, best, t0, i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_minimize_SLSQP</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>a4f4f0af3100172a2bbc0cb83f41b898b</anchor>
      <arglist>(fun, num)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>a55a6dd02772bb5070ce3d3ee23159536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>aeded92414f5c10780704c6973ae03d81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>a5c04a0e5f94323fd06f6650b9cad6511</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>ae6ba700de81ecca5fda9ecb43131e822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>a8e8a7e5d2cdf369ae80b7ff233303f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ret</name>
      <anchorfile>namespaceexamples_1_1spring.html</anchorfile>
      <anchor>afc682836ceabbcec865a7a97824dd4ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::subset</name>
    <filename>namespaceexamples_1_1subset.html</filename>
    <class kind="class">examples::subset::fitness</class>
    <class kind="class">examples::subset::transaction_value</class>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>a7bbe5727bd22adb4b3799c9609a7f02c</anchor>
      <arglist>(fitness, opt, num_retries=32)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>a5fae8dd08316195f544e4722e322a03d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>a77a7fc2ebc4d922deef408e9504f60a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>ab20c00d2cb58cd9e08890ae4ab65d571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>seed</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>ab1d139b33d16d6305c757593dedaff64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rng</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>a469a03a585c93bb6faa83a9cd5d88489</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>transactions</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>a6f3071fe7ad84dc50bb98cfc1a047727</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>payments</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>a39f642e1a3269c4fa74c288ae81cc3bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>selection_value</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>a5503474dac56ffe85b0a09c9f2939ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fit</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>a4695d9c7629719d263f5b6591b1fb7e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>opt</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>a87a59c35e9b45d5a99ac814703ebd27c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_retries</name>
      <anchorfile>namespaceexamples_1_1subset.html</anchorfile>
      <anchor>abb9b555e6ed2dbbd8bcaaed5c6743559</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::subset_mo</name>
    <filename>namespaceexamples_1_1subset__mo.html</filename>
    <class kind="class">examples::subset_mo::fitness</class>
    <class kind="class">examples::subset_mo::transaction_value</class>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>acd79478d3e44c465555276e48e90e00d</anchor>
      <arglist>(fitness, num_retries=32)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>a4a4407282e83c35df67852fd8c37897c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>a2972b528aabc88fc9dfc65048865dd14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>a8bcfa788f47a0974ca1a1ff1b496d1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>seed</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>a8db6919f28ea9e53e34d0078663912c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rng</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>ac8b0005c086547bf40662538a07e39d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>transactions</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>a98a290ade7b2602b35a204863e3809cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>payments</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>a48b9015e470666f1c68c857558a5786d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>selection_value</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>a583cca73f8f471685e8c55474c8a58cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fit</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>ae9d549016de4bfb479dceaba4c841658</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_retries</name>
      <anchorfile>namespaceexamples_1_1subset__mo.html</anchorfile>
      <anchor>ad29cc6f72976c25723a9cbf55e550153</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::tandem_minlp</name>
    <filename>namespaceexamples_1_1tandem__minlp.html</filename>
    <member kind="function">
      <type></type>
      <name>test_optimizer</name>
      <anchorfile>namespaceexamples_1_1tandem__minlp.html</anchorfile>
      <anchor>a989c56c3ebd6182b717f0bc60cefdf62</anchor>
      <arglist>(opt, problem, num_retries=120000, num=100, value_limit=-10.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_multiretry</name>
      <anchorfile>namespaceexamples_1_1tandem__minlp.html</anchorfile>
      <anchor>a4220480017c03fd1eb1031abc9f6fda3</anchor>
      <arglist>(num_retries=512, keep=0.7, optimizer=de_cma(1500), repeat=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1tandem__minlp.html</anchorfile>
      <anchor>a9dfca19c3f1a75d4015416930751b3d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1tandem__minlp.html</anchorfile>
      <anchor>a9719ff7ffc4cff396835e71a241f40ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1tandem__minlp.html</anchorfile>
      <anchor>ac322aeac6acec7460f8af8e6a58744b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1tandem__minlp.html</anchorfile>
      <anchor>a62367b1d782620556dc32e47728eede1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::tdesign</name>
    <filename>namespaceexamples_1_1tdesign.html</filename>
    <member kind="function">
      <type></type>
      <name>cartesian_to_spherical</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a43d97e938ee2c3ec0a2d6436fbb3b844</anchor>
      <arglist>(points)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>spherical_to_cartesian</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a55246a7f644c9b7a7ed3d05dbc4b9845</anchor>
      <arglist>(theta, phi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>x_to_points</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a0c0d6d6a3a2a1742e8c5ecd7b244da24</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>normalize_weights_to_average_one</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a6ca70e19dba68def099810c806a5b842</anchor>
      <arglist>(weights)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fibonacci_sphere</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a12b99ff43b5f26ff93cf1e70d10bd3e2</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>real_spherical_harmonics</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a532ed878becc725e89bc283de0ba5352</anchor>
      <arglist>(l_max, theta, phi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>weighted_spherical_harmonics</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>aaf9d7a51f34d459c87a877b260d6b27d</anchor>
      <arglist>(l_max, theta, phi, weights)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>symmetry_error</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a704d0d6079500012779ad8cbd2c50d27</anchor>
      <arglist>(Y, N, l_max)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>symmetry</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a1cb307dfea95e59f67161218e5a0ef8e</anchor>
      <arglist>(pts, l_max, weights=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>t_design_error</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a8357e675a25643e47dc42c4957e28147</anchor>
      <arglist>(points, l_max, weights=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>visualize_points</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>ae536e1afa6d09f1d3d8354727738b2df</anchor>
      <arglist>(points, l_max, weights=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_weighted</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a2045c59f87224672cc3e092a27f3af23</anchor>
      <arglist>(N, l_max, workers=20, max_evals=150000, max_iters=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>show_results</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>afed335728de9256c19b963026d24a9c4</anchor>
      <arglist>(N, l_max)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a0a4ca9d39498dd3b69d7e5b1ff8b24fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a4ceb80cd75e998e2c77c4f4ab759201e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a45a2f701a62f3a83ad5795225e2e5056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>legacy</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a18d261189422e3a4f4fffcec131ecb31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>N</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>a2e448f46c66a0d9b947f0fd53d9e2e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>l_max</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>adbeb85e4adde4fefcdcb2eb59eff21c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_evals</name>
      <anchorfile>namespaceexamples_1_1tdesign.html</anchorfile>
      <anchor>af9da4611a90cc099b657a3cf4dd49d15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::top_trumps</name>
    <filename>namespaceexamples_1_1top__trumps.html</filename>
    <class kind="class">examples::top_trumps::tt_problem</class>
    <member kind="function">
      <type></type>
      <name>objectives_rw</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>aa1e516064096b0560889c99e5874f513</anchor>
      <arglist>(name, numObjs, function, instance, rep, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>bounds_rw</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>aa30fe9874e79f935906b7def746823c7</anchor>
      <arglist>(dim, instance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mo_minimize_plot</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>aa5e803d06dbb86830e219bc96578c85b</anchor>
      <arglist>(problem, opt, name, exp=3.0, num_retries=256)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>minimize_plot</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>a8e4b33f4260ae19998e5b869e59a8019</anchor>
      <arglist>(problem, opt, name, num_retries=256)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>main</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>ad5e851a3c8f2d554992aca2a3c2ee439</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>a02ff12f2e804c0139f4a40da7a6c9045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>a5e20e9626fe3cbdff2e69017a6788dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>a28d299df9089f3dfa9ae87563a91bbdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>basepath</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>acd999cc1e6e67a725eff684edf812cfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>librw</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>a1a4f886ea1b4e044dbf0a59aff55a79f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>evaluate_rw_top_trumps</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>ad185d7bfc116b48bd1db4c5be5b36fc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>ad909a047442c34cf5ee63e7012dcf3b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rw_top_trumps_bounds</name>
      <anchorfile>namespaceexamples_1_1top__trumps.html</anchorfile>
      <anchor>a2ed155c15e55809460bcecefe4294bdb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::trappist_delivery</name>
    <filename>namespaceexamples_1_1trappist__delivery.html</filename>
    <class kind="class">examples::trappist_delivery::fitness</class>
    <class kind="class">examples::trappist_delivery::trappist_schedule</class>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespaceexamples_1_1trappist__delivery.html</anchorfile>
      <anchor>af96d18a768624688d121c794e4f942f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>check</name>
      <anchorfile>namespaceexamples_1_1trappist__delivery.html</anchorfile>
      <anchor>a3edb3cf576e5d7d7c04b7537dca935d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_fitness</name>
      <anchorfile>namespaceexamples_1_1trappist__delivery.html</anchorfile>
      <anchor>a2ac010d1048b03a8b3a60890c6d297ea</anchor>
      <arglist>(x, db, weights, sel_size)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1trappist__delivery.html</anchorfile>
      <anchor>a18bd40710c90bdf185e011f99f4ece05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1trappist__delivery.html</anchorfile>
      <anchor>ad77004958229e12040ca3f94df74adc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1trappist__delivery.html</anchorfile>
      <anchor>aadf833660386e0dc2e7a439b8c0d9f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>udp</name>
      <anchorfile>namespaceexamples_1_1trappist__delivery.html</anchorfile>
      <anchor>a11073f56d338653276d5988b460f9832</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::tutorial</name>
    <filename>namespaceexamples_1_1tutorial.html</filename>
    <member kind="function">
      <type></type>
      <name>test_advretry</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a9c88d425b049fc145296367957b2ae3c</anchor>
      <arglist>(problem, value_limit, num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_advretry_cma_python</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>af03d69ad52b8a379a9397c1310172b92</anchor>
      <arglist>(problem, value_limit, num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_retry</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a86d9de974dfa0ae3145e459d3c32f066</anchor>
      <arglist>(problem, num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_retry_cma_python</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a8253dc379a78438f0d0295b16e19451f</anchor>
      <arglist>(problem, num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_cma_python</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>aafe9c1a1371c8d452cc44618c6b66af3</anchor>
      <arglist>(problem, num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_cma_cpp</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a90f9c1bb7d36f83fdca74a3327138806</anchor>
      <arglist>(problem, num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_ask_tell</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a39d164367ec41f19eb0630be5f15e379</anchor>
      <arglist>(problem, num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_cma_parallel</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a45eb0de7a5694eacaa1d6fd23be5bfa6</anchor>
      <arglist>(problem, num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_differential_evolution</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>adfff9f66cbc8b67315072f2f788a06ce</anchor>
      <arglist>(problem, num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_dual_annealing</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a72ebe625829f6382a4dab5eb255468f2</anchor>
      <arglist>(problem, num)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_scipy_minimize</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a3c73252012add36920a4b8801996ad94</anchor>
      <arglist>(problem, num)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>aff3196d07a2b546ca0a784ffa6edcb0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a2b09dd6f2c499b02132cc297845df828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a12773781d80c6a95e79425b52f14aa15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>problem</name>
      <anchorfile>namespaceexamples_1_1tutorial.html</anchorfile>
      <anchor>a1b931a53bcd8caf3de0e12fd39eb6a8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::vaccination</name>
    <filename>namespaceexamples_1_1vaccination.html</filename>
    <member kind="function">
      <type></type>
      <name>fast_update</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>a1920e929d3fa9a04e2deabddd1c670c4</anchor>
      <arglist>(s, i, r, beta, gamma)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fast_simulate</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>a4bdddac30a6306570a020bcc149340c1</anchor>
      <arglist>(s, i, r, t_end, beta, gamma)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fast_simulate_last</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>ac2534a94f3c4080fcb6f39b4abcfb86e</anchor>
      <arglist>(s, i, r, t_end, beta, gamma)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot2d</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>a04a9f847b51fc09ecae12cb503754524</anchor>
      <arglist>(xs, ys, name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot3d</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>abfaa852a18035e621672746cdeb09aac</anchor>
      <arglist>(xs, ys, name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>execute</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>af4244c8872144d2e8cf4265b60f90b34</anchor>
      <arglist>(task)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>a9ef54cf24f4cb923eb3aebc7aab4783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>ab819fa350d6d8da1c32ea4796cccc218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>a76195593d8426902655dba8496ac5a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dim</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>a22cb35962db3ca5f8b9aa5b4f9d13641</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>namespaceexamples_1_1vaccination.html</anchorfile>
      <anchor>a9166dbe518bd48257977c93979d27379</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::vessel</name>
    <filename>namespaceexamples_1_1vessel.html</filename>
    <member kind="function">
      <type></type>
      <name>discrete</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a9b9b7d9b525b0e32dec4a679dd25fb79</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_feasible</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>aa26c59f34fa12f86c197263f10fd1dca</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>constraint_ineq</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>acf59dad747a84939ba5b8e0da39d030b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>weight</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>adda1cdd4b5189fb2a4b564572cdf0dcc</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>penalty</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a8adc06d6d9db18a2bfac93d6483c23af</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>feasable_cost</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a68aa194637f52a545cb4d8e1f552f3f8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>feasable_cost_penalty</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a95a5805807fc62c2224ce037be72bee4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>penalty_int</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>abe6b8db835b58ffb639eac1a6de1172f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>penalty_int_all</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a1b1d80a77c03ba9019a2ab8f7820a471</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cost_int_penalty</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>afff096102e6cd9739381cfac25c0e450</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_result</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>aa3edc89d9a8061a39a6985e4a588ec96</anchor>
      <arglist>(ret, best, t0, i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_minimize_SLSQP</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a876eb8e7aeeebb524d51f11ef3ecc488</anchor>
      <arglist>(fun, num)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a7223d98a0308c7b38977d830242cd5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a0c4af533fa7c354d642eaf31de503db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a2855cb5c6258f5f244c42bff42bed308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fac</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a3cd8872c36b8452b5186f2074bbccb0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>aee86003cb6bbb331c8c6c5484c0f6d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>t0</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a75936765aaa289c75f230ba4fa2dbb4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ret</name>
      <anchorfile>namespaceexamples_1_1vessel.html</anchorfile>
      <anchor>a2720db2f81c03590516dd5482790f916</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::vilar</name>
    <filename>namespaceexamples_1_1vilar.html</filename>
    <class kind="class">examples::vilar::VilarOscillator</class>
    <member kind="function">
      <type></type>
      <name>get_bounds</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>a2145fd085b8dc079889e8e1be899f4bf</anchor>
      <arglist>(model, scale)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_params</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>afe27928528b9221976a31a064e46d2df</anchor>
      <arglist>(model, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sweep_params</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>a406bfa725b5b16f4bf940f31d8e95ff0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>run_diversifier</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>aa344a3b9ba46bca39ce6fa792ed087fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_archive</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>a6e6d663720ddae410f7f5f2db391cc23</anchor>
      <arglist>(archive)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>a305c44f72c09ab8c4241ce1a3e496bd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>aad73b7db1620620898ced5c06b28f735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>a0a8bfe6ebbcb0fed7f3ad380231cc7b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>af83d5ed6a2595273703d4fb8c81639e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>a457693183463e22e50c189f101ba34b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>qd_bounds</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>af1105e84bbb60a73eac7d2d069ecc277</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>qd_dim</name>
      <anchorfile>namespaceexamples_1_1vilar.html</anchorfile>
      <anchor>a041f65838a6fa4cb34cab04427474409</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>examples::yahpo</name>
    <filename>namespaceexamples_1_1yahpo.html</filename>
    <member kind="function">
      <type></type>
      <name>opt_ranger_hardware</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>aca8ebb42199ed8663e4d2fb1704bb11d</anchor>
      <arglist>(task_id, max_evals=100000)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_ranger_interpretability</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>a657da003ad951471dc74d132dda50c01</anchor>
      <arglist>(task_id, max_evals=100000)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_xgboost</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>aa0f008c277a52f11bb7ae3430c49384c</anchor>
      <arglist>(task_id, max_evals=100000)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>evaluate_ranger_</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>aafb5885cf1e9c035878faf3bee87ccb0</anchor>
      <arglist>(x, features, params, bench, task_id, lower, upper, trafo=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>evaluate_xgboost_</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>ae80be8ace972b91258cc5d78d421d250</anchor>
      <arglist>(x, features, params, bench, task_id, lower, upper, trafo=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>retrafo_</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>a15c68f9f26552d8ed5597f36e8ddbb0e</anchor>
      <arglist>(z, lower, upper)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot3d</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>abed4facab8c6aaf0a992c93f39b25297</anchor>
      <arglist>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>a00ed0fa5c4577f6841d751aa5de9beb4</anchor>
      <arglist>(archive, name)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>afe1322233650f09611ff6bb0bc4331c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>ae276d68e6662c5f55c586736a173f808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespaceexamples_1_1yahpo.html</anchorfile>
      <anchor>ad57fee966233f2df05e0195d0d7e75e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fbcover</name>
    <filename>namespacefbcover.html</filename>
    <class kind="class">fbcover::fb_graph</class>
    <class kind="class">fbcover::problem_fb</class>
    <member kind="function">
      <type></type>
      <name>num_true</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>a6e0f66764bcc9b581187a2526b81dc3d</anchor>
      <arglist>(nodes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sum_weights</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>a8588994a104cf05c867efc5ad768ada4</anchor>
      <arglist>(nodes, weights)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>add_vertice</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>ae2eb6efa5043c4651cf81eba28f9459f</anchor>
      <arglist>(v, vmap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>circles_arr</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>a45600a27fa97dcb1f89854158921ef04</anchor>
      <arglist>(circs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>parse_fb</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>aea05a7e0ef43a61707f165fddb3ee1ce</anchor>
      <arglist>(edge_file, circle_file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fb_covered</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>a1d37d0da59730aab39af8760119dc8c8</anchor>
      <arglist>(source, target, circles, circle_size, nds)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nodes</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>aef0e4896abc75b367cfae486326fd280</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_mo</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>a96d70e845cfb879830051d512a70da2a</anchor>
      <arglist>(g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_so</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>ac30f20ffc7b04c1a995b554b5b960d5c</anchor>
      <arglist>(g)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>ad511d1b0457ecda9bd63e836ad69a028</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>ade1a6852398323e88dbb93b4ed1a39c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>a62f998cdce7ff217860cfd4877c609d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>g</name>
      <anchorfile>namespacefbcover.html</anchorfile>
      <anchor>aed8dd649424e36ced41d00ad9b7c8128</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes</name>
    <filename>namespacefcmaes.html</filename>
    <namespace>fcmaes::advretry</namespace>
    <namespace>fcmaes::astro</namespace>
    <namespace>fcmaes::bitecpp</namespace>
    <namespace>fcmaes::cmaes</namespace>
    <namespace>fcmaes::cmaescpp</namespace>
    <namespace>fcmaes::crfmnes</namespace>
    <namespace>fcmaes::crfmnescpp</namespace>
    <namespace>fcmaes::dacpp</namespace>
    <namespace>fcmaes::de</namespace>
    <namespace>fcmaes::decpp</namespace>
    <namespace>fcmaes::diversifier</namespace>
    <namespace>fcmaes::evaluator</namespace>
    <namespace>fcmaes::journal</namespace>
    <namespace>fcmaes::mapelites</namespace>
    <namespace>fcmaes::mode</namespace>
    <namespace>fcmaes::modecpp</namespace>
    <namespace>fcmaes::moretry</namespace>
    <namespace>fcmaes::multiretry</namespace>
    <namespace>fcmaes::optimizer</namespace>
    <namespace>fcmaes::pgpecpp</namespace>
    <namespace>fcmaes::pygmoretry</namespace>
    <namespace>fcmaes::retry</namespace>
    <namespace>fcmaes::test_cma</namespace>
    <namespace>fcmaes::testfun</namespace>
    <member kind="variable" protection="private">
      <type>str</type>
      <name>__version__</name>
      <anchorfile>namespacefcmaes.html</anchorfile>
      <anchor>ae605e63fdf74e5abdbbf36d144e19fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespacefcmaes.html</anchorfile>
      <anchor>a27a0623312cce9f12a5205c5ef3b4df5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::advretry</name>
    <filename>namespacefcmaes_1_1advretry.html</filename>
    <class kind="class">fcmaes::advretry::Store</class>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1advretry.html</anchorfile>
      <anchor>ac919a7d43929d78301af60b182a99f24</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Bounds bounds, Optional[float] value_limit=np.inf, Optional[int] num_retries=5000, Optional[int] workers=mp.cpu_count(), Optional[int] popsize=31, Optional[int] min_evaluations=1500, Optional[int] max_eval_fac=None, Optional[int] check_interval=100, Optional[int] capacity=500, Optional[float] stop_fitness=-np.inf, Optional[Optimizer] optimizer=None, Optional[int] statistic_num=0, Optional[str] datafile=None)</arglist>
    </member>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>retry</name>
      <anchorfile>namespacefcmaes_1_1advretry.html</anchorfile>
      <anchor>afa7f53840d446eae71b0a9d7a01077e4</anchor>
      <arglist>(Store store, Callable optimize, Optional[float] value_limit=np.inf, workers=mp.cpu_count(), stop_fitness=-np.inf)</arglist>
    </member>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize_plot</name>
      <anchorfile>namespacefcmaes_1_1advretry.html</anchorfile>
      <anchor>a5e2cd1f8c09ad3861f3e9fec0c5d8ea0</anchor>
      <arglist>(str name, Optimizer optimizer, Callable[[ArrayLike], float] fun, Bounds bounds, Optional[float] value_limit=np.inf, Optional[float] plot_limit=np.inf, Optional[int] num_retries=1024, Optional[int] workers=mp.cpu_count(), Optional[float] stop_fitness=-np.inf, Optional[int] statistic_num=5000)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_retry_loop</name>
      <anchorfile>namespacefcmaes_1_1advretry.html</anchorfile>
      <anchor>a2e67b1339ce1e546807f7cba0a45d8c9</anchor>
      <arglist>(pid, rgs, store, optimize, value_limit, stop_fitness=-np.inf)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_crossover</name>
      <anchorfile>namespacefcmaes_1_1advretry.html</anchorfile>
      <anchor>a6c3c42e1fa5ab01ff7ba59710578ebb5</anchor>
      <arglist>(fun, store, optimize, rg)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::astro</name>
    <filename>namespacefcmaes_1_1astro.html</filename>
    <class kind="class">fcmaes::astro::Astrofun</class>
    <class kind="class">fcmaes::astro::Cassini1</class>
    <class kind="class">fcmaes::astro::Cassini1minlp</class>
    <class kind="class">fcmaes::astro::Cassini1multi</class>
    <class kind="class">fcmaes::astro::Cassini2</class>
    <class kind="class">fcmaes::astro::Gtoc1</class>
    <class kind="class">fcmaes::astro::Messenger</class>
    <class kind="class">fcmaes::astro::MessFull</class>
    <class kind="class">fcmaes::astro::python_fun</class>
    <class kind="class">fcmaes::astro::Rosetta</class>
    <class kind="class">fcmaes::astro::Sagas</class>
    <class kind="class">fcmaes::astro::Tandem</class>
    <class kind="class">fcmaes::astro::Tandem_minlp</class>
    <member kind="function">
      <type></type>
      <name>cassini1minlp</name>
      <anchorfile>namespacefcmaes_1_1astro.html</anchorfile>
      <anchor>a59d6a07135ef342220c1f9f03d600d59</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cassini1multi</name>
      <anchorfile>namespacefcmaes_1_1astro.html</anchorfile>
      <anchor>a472db8fe54c0594a141e21b211868164</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cassini2multi</name>
      <anchorfile>namespacefcmaes_1_1astro.html</anchorfile>
      <anchor>af7f68f2469008115c386732d7a167537</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="variable">
      <type>dict</type>
      <name>astro_map</name>
      <anchorfile>namespacefcmaes_1_1astro.html</anchorfile>
      <anchor>a2f99dd1e432eff41347fcf1ab23c3226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>freemem</name>
      <anchorfile>namespacefcmaes_1_1astro.html</anchorfile>
      <anchor>ae7ed2a3e77f9b7bc33f0db1f11050369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespacefcmaes_1_1astro.html</anchorfile>
      <anchor>a5050977f7260bed3428fdd3a21c5559f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespacefcmaes_1_1astro.html</anchorfile>
      <anchor>af36476b2491da3e045a5972ff0baca7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::bitecpp</name>
    <filename>namespacefcmaes_1_1bitecpp.html</filename>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1bitecpp.html</anchorfile>
      <anchor>a02c6a2143e70721f9ad360505914f9ba</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[int] max_evaluations=100000, Optional[float] stop_fitness=-np.inf, Optional[int] M=1, Optional[int] popsize=0, Optional[int] stall_criterion=0, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>optimizeBite_C</name>
      <anchorfile>namespacefcmaes_1_1bitecpp.html</anchorfile>
      <anchor>a3e9029aaa882c4646cc176749bd3c5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespacefcmaes_1_1bitecpp.html</anchorfile>
      <anchor>a135989ea655d889da4b8651d0d305968</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::cmaes</name>
    <filename>namespacefcmaes_1_1cmaes.html</filename>
    <class kind="class">fcmaes::cmaes::Cmaes</class>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1cmaes.html</anchorfile>
      <anchor>ab8082e1fc4bdc2b20f0c1628e2923abd</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.3, Optional[int] popsize=31, Optional[int] max_evaluations=100000, Optional[int] max_iterations=100000, Optional[int] workers=1, Optional[float] accuracy=1.0, Optional[float] stop_fitness=-np.inf, Optional[Callable[[ArrayLike, float], bool]] is_terminate=None, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=True, Optional[int] update_gap=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::cmaescpp</name>
    <filename>namespacefcmaes_1_1cmaescpp.html</filename>
    <class kind="class">fcmaes::cmaescpp::ACMA_C</class>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>a625d259f091b81159e59b47837722d4e</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.3, Optional[int] popsize=31, Optional[int] max_evaluations=100000, Optional[float] accuracy=1.0, Optional[float] stop_fitness=-np.inf, Optional[float] stop_hist=-1, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[int] workers=1, Optional[bool] normalize=True, Optional[bool] delayed_update=True, Optional[int] update_gap=None)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>optimizeACMA_C</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>a869b80a999c8dbaafec9a1e836b441b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>a4b4bc53bc7ff4a07bc165c3b3ede4e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>initACMA_C</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>a5f13d5d8f530e90f5b93f5bacf82dfef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>a02a0f73f01d725c0440ce1cbe96fc018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>destroyACMA_C</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>a19d6ee3b1a025b0c87e16121a77e8afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>askACMA_C</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>a5d24fbafb1f6010caa637d9318fe88e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tellACMA_C</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>ae19b39d0288c14daa4d7db903c4285d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tellXACMA_C</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>a72633ee9a21ca3a356464d6c570b0237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>populationACMA_C</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>a7f7e4ef0af633235aa443b759dba5ed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>resultACMA_C</name>
      <anchorfile>namespacefcmaes_1_1cmaescpp.html</anchorfile>
      <anchor>aeecf9aa46c0d9cbb7e56087c5d7f0fef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::crfmnes</name>
    <filename>namespacefcmaes_1_1crfmnes.html</filename>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::crfmnescpp</name>
    <filename>namespacefcmaes_1_1crfmnescpp.html</filename>
    <class kind="class">fcmaes::crfmnescpp::CRFMNES_C</class>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1crfmnescpp.html</anchorfile>
      <anchor>ae1a2ee01cfe0465cbd01fbb78c4fbb89</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, input_sigma=0.3, popsize=32, max_evaluations=100000, workers=None, stop_fitness=-np.inf, rg=Generator(PCG64DXSM()), runid=0, normalize=False, use_constraint_violation=True, penalty_coef=1E5)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>optimizeCRFMNES_C</name>
      <anchorfile>namespacefcmaes_1_1crfmnescpp.html</anchorfile>
      <anchor>ab1e7635b7e619545987ebfc9380c88e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespacefcmaes_1_1crfmnescpp.html</anchorfile>
      <anchor>abc206b02ad5c66cfa53e924f992c530e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>initCRFMNES_C</name>
      <anchorfile>namespacefcmaes_1_1crfmnescpp.html</anchorfile>
      <anchor>a9084cdfaf4cdbde49738fac2a361d8a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespacefcmaes_1_1crfmnescpp.html</anchorfile>
      <anchor>a854e412144de71ef17b09d594acbd0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>destroyCRFMNES_C</name>
      <anchorfile>namespacefcmaes_1_1crfmnescpp.html</anchorfile>
      <anchor>a2049b510a55914b1482f4f4b188e557f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>askCRFMNES_C</name>
      <anchorfile>namespacefcmaes_1_1crfmnescpp.html</anchorfile>
      <anchor>a0414b501fcc51390ff9f8dfe00b73910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tellCRFMNES_C</name>
      <anchorfile>namespacefcmaes_1_1crfmnescpp.html</anchorfile>
      <anchor>aa685b7d7f9e93560a1f6f08a3984a2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>populationCRFMNES_C</name>
      <anchorfile>namespacefcmaes_1_1crfmnescpp.html</anchorfile>
      <anchor>a4c655199ab31427cfb2afbdcdcd8dc68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>resultCRFMNES_C</name>
      <anchorfile>namespacefcmaes_1_1crfmnescpp.html</anchorfile>
      <anchor>a248d281b148a66ee941821abcdb364c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::dacpp</name>
    <filename>namespacefcmaes_1_1dacpp.html</filename>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1dacpp.html</anchorfile>
      <anchor>aa5ad4244fa09713fa980fb5229adc4c1</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[int] max_evaluations=100000, Optional[bool] use_local_search=True, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>optimizeDA_C</name>
      <anchorfile>namespacefcmaes_1_1dacpp.html</anchorfile>
      <anchor>a51548e77349fcaa0963fafeed727cc3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespacefcmaes_1_1dacpp.html</anchorfile>
      <anchor>a9d643e00b79952e37ee44d2b7bf23b19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::de</name>
    <filename>namespacefcmaes_1_1de.html</filename>
    <class kind="class">fcmaes::de::DE</class>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1de.html</anchorfile>
      <anchor>afe0971ca279c85cb452a9ca34826d05a</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Optional[int] dim=None, Optional[Bounds] bounds=None, Optional[int] popsize=31, Optional[int] max_evaluations=100000, Optional[int] workers=None, Optional[float] stop_fitness=-np.inf, Optional[int] keep=200, Optional[float] f=0.5, Optional[float] cr=0.9, Optional[Generator] rg=Generator(PCG64DXSM()), filter=None, Optional[ArrayLike] ints=None, Optional[float] min_mutate=0.1, Optional[float] max_mutate=0.5, Optional[Callable] modifier=None)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_check_bounds</name>
      <anchorfile>namespacefcmaes_1_1de.html</anchorfile>
      <anchor>a43e9207e1c55b796ef2b78053589d8ed</anchor>
      <arglist>(bounds, dim)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::decpp</name>
    <filename>namespacefcmaes_1_1decpp.html</filename>
    <class kind="class">fcmaes::decpp::DE_C</class>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1decpp.html</anchorfile>
      <anchor>a5f109c8aa67919ea612f518860268ea3</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Optional[int] dim=None, Optional[Bounds] bounds=None, Optional[int] popsize=31, Optional[int] max_evaluations=100000, Optional[float] stop_fitness=-np.inf, Optional[int] keep=200, Optional[float] f=0.5, Optional[float] cr=0.9, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[ArrayLike] ints=None, Optional[float] min_mutate=0.1, Optional[float] max_mutate=0.5, Optional[int] workers=1, Optional[Callable[[ArrayLike, float], bool]] is_terminate=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=None, Optional[float] min_sigma=0, Optional[int] runid=0)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>optimizeDE_C</name>
      <anchorfile>namespacefcmaes_1_1decpp.html</anchorfile>
      <anchor>a890d0db67042ae71d4c7df9adec2d3ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespacefcmaes_1_1decpp.html</anchorfile>
      <anchor>a6f58a442e0eb6c6c1ec1396e794faf04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>initDE_C</name>
      <anchorfile>namespacefcmaes_1_1decpp.html</anchorfile>
      <anchor>ae77a3d487fdde3b54015c3fcb4758e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespacefcmaes_1_1decpp.html</anchorfile>
      <anchor>abe8daeb234f718819dbb5a946b16d39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>destroyDE_C</name>
      <anchorfile>namespacefcmaes_1_1decpp.html</anchorfile>
      <anchor>adecb8709958be364970da9957340521a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>askDE_C</name>
      <anchorfile>namespacefcmaes_1_1decpp.html</anchorfile>
      <anchor>a63c8f68ce2fc471736fe8dbf0a9c297e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tellDE_C</name>
      <anchorfile>namespacefcmaes_1_1decpp.html</anchorfile>
      <anchor>a42e7c91ec427be0aca79ecf4bec8319f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>populationDE_C</name>
      <anchorfile>namespacefcmaes_1_1decpp.html</anchorfile>
      <anchor>a83480897deb0e4a967b6de51edd57f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>resultDE_C</name>
      <anchorfile>namespacefcmaes_1_1decpp.html</anchorfile>
      <anchor>af82bf7db3d2be348a9dbec6a24087b14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::diversifier</name>
    <filename>namespacefcmaes_1_1diversifier.html</filename>
    <member kind="function">
      <type>Archive</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1diversifier.html</anchorfile>
      <anchor>aff21c62cc4f78f4786b277e0b20cb216</anchor>
      <arglist>(Callable[[ArrayLike], Tuple[float, np.ndarray]] qd_fitness, Bounds bounds, Bounds qd_bounds, Optional[int] niche_num=10000, Optional[int] samples_per_niche=20, Optional[int] max_evals=None, Optional[int] workers=mp.cpu_count(), Optional[Archive] archive=None, Optional[Dict] opt_params={}, Optional[bool] use_stats=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>apply_advretry</name>
      <anchorfile>namespacefcmaes_1_1diversifier.html</anchorfile>
      <anchor>a02e1220deec92a5ffd1a04e5b168fe6c</anchor>
      <arglist>(Callable[[ArrayLike], float] fitness, Callable[[ArrayLike], Tuple[float, np.ndarray]] qd_fitness, Bounds bounds, Archive archive, Optional[Optimizer] optimizer=None, Optional[int] num_retries=1000, Optional[int] workers=mp.cpu_count(), Optional[float] max_eval_fac=5.0, Optional[np.ndarray] xs=None, Optional[np.ndarray] ys=None, Callable[[ArrayLike], ArrayLike] x_conv=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>minimize_parallel_</name>
      <anchorfile>namespacefcmaes_1_1diversifier.html</anchorfile>
      <anchor>ab816a6a4e44baee3d8bee364a7522274</anchor>
      <arglist>(archive, fitness, bounds, workers, opt_params, max_evals)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>run_minimize_</name>
      <anchorfile>namespacefcmaes_1_1diversifier.html</anchorfile>
      <anchor>a37838757d6fbed5b0cd7e56fa51f194e</anchor>
      <arglist>(archive, fitness, bounds, rg, opt_params, p, workers, evals, max_evals)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>run_map_elites_</name>
      <anchorfile>namespacefcmaes_1_1diversifier.html</anchorfile>
      <anchor>ae5fd5f192aa814e8e6abe660f4592d7d</anchor>
      <arglist>(archive, fitness, bounds, rg, evals, max_evals, opt_params={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>minimize_</name>
      <anchorfile>namespacefcmaes_1_1diversifier.html</anchorfile>
      <anchor>a4e57f15d7add818aaf5dfe6223e98475</anchor>
      <arglist>(archive, fitness, bounds, rg, evals, max_evals, opt_params, x0=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>run_bite_</name>
      <anchorfile>namespacefcmaes_1_1diversifier.html</anchorfile>
      <anchor>a91529f8a57353a18ce9ce8ea0e372f63</anchor>
      <arglist>(archive, fitness, bounds, rg, evals, max_evals, opt_params, x0=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_solver_</name>
      <anchorfile>namespacefcmaes_1_1diversifier.html</anchorfile>
      <anchor>a7360db2f799d60d42b8a3f76650f075a</anchor>
      <arglist>(bounds, opt_params, rg, x0=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::evaluator</name>
    <filename>namespacefcmaes_1_1evaluator.html</filename>
    <class kind="class">fcmaes::evaluator::_fitness</class>
    <class kind="class">fcmaes::evaluator::callback</class>
    <class kind="class">fcmaes::evaluator::callback_mo</class>
    <class kind="class">fcmaes::evaluator::callback_par</class>
    <class kind="class">fcmaes::evaluator::callback_so</class>
    <class kind="class">fcmaes::evaluator::Evaluator</class>
    <class kind="class">fcmaes::evaluator::parallel</class>
    <class kind="class">fcmaes::evaluator::parallel_mo</class>
    <member kind="function">
      <type></type>
      <name>is_log_level_active</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>ab8a6f2f441a50ed78841e55af7af2f5f</anchor>
      <arglist>(level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>is_debug_active</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>ab8164b41a79c6e2e9836dbcc301d3369</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>is_trace_active</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a629b44d3fbb8de96604cf0cedb48452e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eval_parallel</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a3f1de81bb9ebb3f1026990d51627f5e3</anchor>
      <arglist>(ArrayLike xs, Evaluator evaluator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eval_parallel_mo</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a7fd3b71184ba68c9fc886a0da91030a1</anchor>
      <arglist>(ArrayLike xs, Evaluator evaluator, int nobj)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_eval_parallel_segment</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>afe255aa77cf706556cd5740a6d9dc120</anchor>
      <arglist>(xs, ys, i0, i1, evaluator)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_evaluate</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>ad73ccd9d36e41634dfd83907b1fa2872</anchor>
      <arglist>(fun, pipe, read_mutex, write_mutex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_check_bounds</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a4cbc79347af4303863c4d9b57a251e0d</anchor>
      <arglist>(bounds, guess, rg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_get_bounds</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a8e9d001859be2ec90b8511ef634bfdda</anchor>
      <arglist>(dim, bounds, guess, rg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>serial</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a91fda48468c86eb01e6ef3959d4087c8</anchor>
      <arglist>(fun)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_func_serial</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a208b8277669b6cfffba7bbafa42702fe</anchor>
      <arglist>(fun, num, pid, xs, ys)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_tryfun</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a2070228090b71531c5734270831835f1</anchor>
      <arglist>(fun, x)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pipe_limit</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a68d2ca2ef338645b599a081c8a9d47e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>basepath</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a7e6692c75e37badbe9b2a64268404720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>libcmalib</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a18b6b20a32631ee3da1b0728bb8aad22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mo_call_back_type</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a0cd19ddbe59785956b8547b6a0352f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>call_back_type</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>ae4b67a512622d25a7afbdeb83357e371</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>call_back_par</name>
      <anchorfile>namespacefcmaes_1_1evaluator.html</anchorfile>
      <anchor>a88261dcfd3a319b63ff1e856f1b3d84d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::journal</name>
    <filename>namespacefcmaes_1_1journal.html</filename>
    <class kind="class">fcmaes::journal::Base_message</class>
    <class kind="class">fcmaes::journal::Journal</class>
    <class kind="class">fcmaes::journal::journal_wrapper</class>
    <class kind="class">fcmaes::journal::Study_start</class>
    <class kind="class">fcmaes::journal::Trial_param</class>
    <class kind="class">fcmaes::journal::Trial_start</class>
    <class kind="class">fcmaes::journal::Trial_value</class>
    <member kind="function">
      <type></type>
      <name>message_to_json</name>
      <anchorfile>namespacefcmaes_1_1journal.html</anchorfile>
      <anchor>ab2d4646b056641882ced63f7d0299978</anchor>
      <arglist>(message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>distribution</name>
      <anchorfile>namespacefcmaes_1_1journal.html</anchorfile>
      <anchor>a3d2994fbc61c2eb4fa0bf4b6018b055e</anchor>
      <arglist>(low, high)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>study_start</name>
      <anchorfile>namespacefcmaes_1_1journal.html</anchorfile>
      <anchor>a10dd7671556c1ec184e8402909fead3e</anchor>
      <arglist>(worker_id, study_name, dir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>trial_param</name>
      <anchorfile>namespacefcmaes_1_1journal.html</anchorfile>
      <anchor>ab08848e83cf71c33842407ee31354411</anchor>
      <arglist>(worker_id, trial_id, param_name, param_value_internal, low, high)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>trial_start</name>
      <anchorfile>namespacefcmaes_1_1journal.html</anchorfile>
      <anchor>a7fd5c2a880bb6da8e4e2e42790dc9430</anchor>
      <arglist>(worker_id, study_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>trial_value</name>
      <anchorfile>namespacefcmaes_1_1journal.html</anchorfile>
      <anchor>a968c87aa2fb6e2e186e221f834d63552</anchor>
      <arglist>(worker_id, trial_id, y)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::mapelites</name>
    <filename>namespacefcmaes_1_1mapelites.html</filename>
    <class kind="class">fcmaes::mapelites::Archive</class>
    <class kind="class">fcmaes::mapelites::in_niche_filter</class>
    <class kind="class">fcmaes::mapelites::wrapper</class>
    <member kind="function">
      <type>Archive</type>
      <name>optimize_map_elites</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>a028f687a02a53b2626abc9f046a77aa2</anchor>
      <arglist>(Callable[[ArrayLike], Tuple[float, np.ndarray]] qd_fitness, Bounds bounds, Bounds qd_bounds, Optional[int] niche_num=4000, Optional[int] samples_per_niche=20, Optional[int] workers=mp.cpu_count(), Optional[int] iterations=100, Optional[Archive] archive=None, Optional[Dict] me_params={}, Optional[Dict] cma_params={}, Optional[bool] use_stats=False)</arglist>
    </member>
    <member kind="function">
      <type>Archive</type>
      <name>empty_archive</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>a49c2831aa0bf9634663977bbd6321afc</anchor>
      <arglist>(int dim, Bounds qd_bounds, int niche_num, int samples_per_niche, Optional[bool] use_stats=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set_KDTree</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>ace0194d76906adbf0c0dd3db084f177c</anchor>
      <arglist>(Archive archive, Optional[np.ndarray] centers=None, Optional[int] niche_num=None, Optional[Bounds] qd_bounds=None, Optional[int] samples_per_niche=100)</arglist>
    </member>
    <member kind="function">
      <type>Archive</type>
      <name>load_archive</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>a9430b58efcd2bccef1537defe6b7e8db</anchor>
      <arglist>(str name, Bounds bounds, Bounds qd_bounds, Optional[int] niche_num=10000, Optional[bool] use_stats=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_map_elites_</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>ad2ec9edcc53986935aa2f2e1127d458d</anchor>
      <arglist>(archive, fitness, bounds, workers, me_params, cma_params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>run_map_elites_</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>a04bcf57530df0bef091b00ceb8e9d44a</anchor>
      <arglist>(archive, fitness, bounds, rg, me_params, cma_params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_cma_</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>addca945e57b8fc097ca552903b98187f</anchor>
      <arglist>(archive, fitness, bounds, rg, cma_params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>update_archive</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>a86f7f0503dc82b70b87a882b49a95f23</anchor>
      <arglist>(Archive archive, np.ndarray xs, Optional[Callable[[ArrayLike], Tuple[float, np.ndarray]]] fitness=None, Optional[ArrayLike] yds=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_grid_indices</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>a5c3c74816cffd5997c0f9e897205abc8</anchor>
      <arglist>(ds, capacity, lb, ub)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>variation_</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>a5f70b23800f6a77b08d918f5aa0f9b3d</anchor>
      <arglist>(pop, lower, upper, rg, dis_c=20, dis_m=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>iso_dd_</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>aa557fd895bcaf40f495273ef16953c11</anchor>
      <arglist>(x1, x2, lower, upper, rg, iso_sigma=0.01, line_sigma=0.2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_centers_</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>a1cd72ab87d7aa999a255ad854895d3aa</anchor>
      <arglist>(niche_num, dim, samples_per_niche)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rng</name>
      <anchorfile>namespacefcmaes_1_1mapelites.html</anchorfile>
      <anchor>ae3ff11934566d45300958dca5961a6ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::mode</name>
    <filename>namespacefcmaes_1_1mode.html</filename>
    <class kind="class">fcmaes::mode::MODE</class>
    <class kind="class">fcmaes::mode::store</class>
    <class kind="class">fcmaes::mode::wrapper</class>
    <member kind="function">
      <type>Tuple[np.ndarray, np.ndarray]</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>a7e76a634ae4563d738ad007097e3c2b4</anchor>
      <arglist>(Callable[[ArrayLike], ArrayLike] mofun, int nobj, int ncon, Bounds bounds, Optional[np.ndarray] guess=None, Optional[int] popsize=64, Optional[int] max_evaluations=100000, Optional[int] workers=1, Optional[float] f=0.5, Optional[float] cr=0.9, Optional[float] pro_c=0.5, Optional[float] dis_c=15.0, Optional[float] pro_m=0.9, Optional[float] dis_m=20.0, Optional[bool] nsga_update=True, Optional[int] pareto_update=0, Optional[ArrayLike] ints=None, Callable modifier=None, Optional[float] min_mutate=0.1, Optional[float] max_mutate=0.5, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[store] store=None)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_check_bounds</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>a7437cac94470387e12001d7f424393af</anchor>
      <arglist>(bounds, dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_filter</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>a4421a58b8727b0b72ab4aaff9f3494b3</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>objranks</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>a64da91b9fe11c4db2c528851fe65f4e4</anchor>
      <arglist>(objs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ranks</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>af072da864e0f91afc47942de9a8901a5</anchor>
      <arglist>(cons, feasible, eps)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_valid</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>aa9045b5ff7e2451881af650c926cc04c</anchor>
      <arglist>(xs, ys, nobj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pareto_sort</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>a4648393e4988cb88b634bc6969891383</anchor>
      <arglist>(x0, y0, nobj, ncon)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pareto_domination</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>aee5b0cd4fba6d7edff0afe48a8bc636a</anchor>
      <arglist>(ys, nobj, ncon, last_ycon=None, last_eps=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pareto_levels</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>a2570992dd7d42219e4b1381adff7a710</anchor>
      <arglist>(ys)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>crowd_dist</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>a0f27ab476c153a96dba3568003ab075a</anchor>
      <arglist>(y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>variation</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>afba15234474d356adb0ed83aa94f73a6</anchor>
      <arglist>(pop, lower, upper, rg, pro_c=1, dis_c=20, pro_m=1, dis_m=20)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>feasible</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>ad8018519575a155be2d2f4659ce52b0b</anchor>
      <arglist>(xs, ys, ncon, eps=1E-2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>is_feasible</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>afc694697801d4ac2a3e8956987220939</anchor>
      <arglist>(y, nobj, eps=1E-2)</arglist>
    </member>
    <member kind="function">
      <type>Tuple[np.ndarray, np.ndarray]</type>
      <name>minimize_plot</name>
      <anchorfile>namespacefcmaes_1_1mode.html</anchorfile>
      <anchor>a0bc11f1e1783869a0b99b01ba75c80eb</anchor>
      <arglist>(str name, Callable[[ArrayLike], ArrayLike] fun, int nobj, int ncon, Bounds bounds, Optional[int] popsize=64, Optional[int] max_evaluations=100000, Optional[bool] nsga_update=True, Optional[int] pareto_update=0, Optional[ArrayLike] ints=None, Optional[int] workers=mp.cpu_count())</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::modecpp</name>
    <filename>namespacefcmaes_1_1modecpp.html</filename>
    <class kind="class">fcmaes::modecpp::MODE_C</class>
    <member kind="function">
      <type>Tuple[np.ndarray, np.ndarray]</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>a1fc7328d1bfb4cc8c339722697ea5429</anchor>
      <arglist>(Callable[[ArrayLike], ArrayLike] mofun, int nobj, int ncon, Bounds bounds, Optional[np.ndarray] guess=None, Optional[int] popsize=64, Optional[int] max_evaluations=100000, Optional[int] workers=1, Optional[float] f=0.5, Optional[float] cr=0.9, Optional[float] pro_c=0.5, Optional[float] dis_c=15.0, Optional[float] pro_m=0.9, Optional[float] dis_m=20.0, Optional[bool] nsga_update=True, Optional[int] pareto_update=0, Optional[ArrayLike] ints=None, Optional[float] min_mutate=0.1, Optional[float] max_mutate=0.5, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[store] store=None, Optional[int] runid=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>retry</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>aecf03e3039759695759cbf7f028546d6</anchor>
      <arglist>(Callable[[ArrayLike], ArrayLike] mofun, int nobj, int ncon, Bounds bounds, Optional[np.ndarray] guess=None, Optional[int] num_retries=64, Optional[int] popsize=64, Optional[int] max_evaluations=100000, Optional[int] workers=mp.cpu_count(), Optional[bool] nsga_update=False, Optional[int] pareto_update=0, Optional[ArrayLike] ints=None, Optional[int] capacity=None)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_retry_loop</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>ae779b2337bd3227701e148a6a6997a0a</anchor>
      <arglist>(num_retries, pid, rgs, mofun, nobj, ncon, bounds, guess, popsize, max_evaluations, workers, nsga_update, pareto_update, store, ints)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>initMODE_C</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>a7983baf5cae97002769592e7d8e8643b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>aa26b72a8ba02fae562ed03e63087522b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>a23ec54ef3fec9755ffc5d870d9d73c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>destroyMODE_C</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>a8667a04257d49d4eabd9d64d0e8301a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>askMODE_C</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>a44851bd7f89116b8d2704123ae52b295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tellMODE_C</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>a3f5c0d6338d68c18374d7fbcaeba9930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tellMODE_switchC</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>a754aecb7c3cb6174c472f001c7b24e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>populationMODE_C</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>ae6223aa5cb7a9c8f005870cb8f3c4d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>setPopulationMODE_C</name>
      <anchorfile>namespacefcmaes_1_1modecpp.html</anchorfile>
      <anchor>ad27774b75048f71df3a93ace96ffadf7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::moretry</name>
    <filename>namespacefcmaes_1_1moretry.html</filename>
    <class kind="class">fcmaes::moretry::mo_wrapper</class>
    <member kind="function">
      <type>Tuple[np.ndarray, np.ndarray]</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1moretry.html</anchorfile>
      <anchor>aba66691a21a53975863acf44cac52eda</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Bounds bounds, Bounds weight_bounds, Optional[int] ncon=0, Optional[float] value_exp=2.0, Optional[ArrayLike] value_limits=None, Optional[int] num_retries=1024, Optional[int] workers=mp.cpu_count(), Optional[int] popsize=31, Optional[int] max_evaluations=50000, Optional[int] capacity=None, Optional[Optimizer] optimizer=None, Optional[int] statistic_num=0, Optional[str] plot_name=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mo_retry</name>
      <anchorfile>namespacefcmaes_1_1moretry.html</anchorfile>
      <anchor>a795e0edbefdcbbf2bc2b0446d59d5903</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Bounds weight_bounds, int ncon, float y_exp, store, Callable optimize, int num_retries, ArrayLike value_limits, Optional[int] workers=mp.cpu_count())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_retry_loop</name>
      <anchorfile>namespacefcmaes_1_1moretry.html</anchorfile>
      <anchor>a2015c92ea717d0ce4849a00282a56d96</anchor>
      <arglist>(pid, rgs, fun, weight_bounds, ncon, y_exp, store, optimize, num_retries, value_limits)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pareto</name>
      <anchorfile>namespacefcmaes_1_1moretry.html</anchorfile>
      <anchor>a76f8b50c1782e6def55706f648e3e819</anchor>
      <arglist>(np.ndarray xs, np.ndarray ys)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>minimize_plot</name>
      <anchorfile>namespacefcmaes_1_1moretry.html</anchorfile>
      <anchor>a9afe8f9041254063275650e3dc56b77e</anchor>
      <arglist>(str name, Optimizer optimizer, Callable[[ArrayLike], float] fun, Bounds bounds, weight_bounds, Optional[int] ncon=0, Optional[ArrayLike] value_limits=None, Optional[int] num_retries=1024, Optional[float] exp=2.0, Optional[int] workers=mp.cpu_count(), statistic_num=0, plot_name=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot</name>
      <anchorfile>namespacefcmaes_1_1moretry.html</anchorfile>
      <anchor>a47b95fe506257996c19d9189f3f005c5</anchor>
      <arglist>(name, ncon, xs, ys, eps=1E-2, all=True, interp=False, plot3d=False)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>adv_minimize_plot</name>
      <anchorfile>namespacefcmaes_1_1moretry.html</anchorfile>
      <anchor>a6059f5a7788b8fb7273d3e5900426199</anchor>
      <arglist>(str name, Optimizer optimizer, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[float] value_limit=np.inf, Optional[int] num_retries=1024, Optional[int] statistic_num=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_avg_exp</name>
      <anchorfile>namespacefcmaes_1_1moretry.html</anchorfile>
      <anchor>ac6f83723e5f5c51274e705d503b7133f</anchor>
      <arglist>(y, y_exp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_pareto_values</name>
      <anchorfile>namespacefcmaes_1_1moretry.html</anchorfile>
      <anchor>a6c5d049111477ebbf03ca1dbd174bbbd</anchor>
      <arglist>(ys)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_pareto</name>
      <anchorfile>namespacefcmaes_1_1moretry.html</anchorfile>
      <anchor>a56d8f2ec5777046d87dcd9a79c8168f9</anchor>
      <arglist>(ys)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::multiretry</name>
    <filename>namespacefcmaes_1_1multiretry.html</filename>
    <class kind="class">fcmaes::multiretry::multiretry</class>
    <class kind="class">fcmaes::multiretry::problem_stats</class>
    <member kind="function">
      <type>List</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1multiretry.html</anchorfile>
      <anchor>a622afd956406ccabb7ebebdfdf9715b6</anchor>
      <arglist>(ArrayLike problems, Optional[ArrayLike] ids=None, Optional[int] retries_inc=min(256, 8 *mp.cpu_count()), Optional[int] num_retries=10000, Optional[float] keep=0.7, Optional[Optimizer] optimizer=de_cma(1500), datafile=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::optimizer</name>
    <filename>namespacefcmaes_1_1optimizer.html</filename>
    <class kind="class">fcmaes::optimizer::Basin_hopping</class>
    <class kind="class">fcmaes::optimizer::Bite_cpp</class>
    <class kind="class">fcmaes::optimizer::CheckBounds</class>
    <class kind="class">fcmaes::optimizer::Choice</class>
    <class kind="class">fcmaes::optimizer::Cma_ask_tell</class>
    <class kind="class">fcmaes::optimizer::Cma_awm</class>
    <class kind="class">fcmaes::optimizer::Cma_cpp</class>
    <class kind="class">fcmaes::optimizer::Cma_lw</class>
    <class kind="class">fcmaes::optimizer::Cma_orig</class>
    <class kind="class">fcmaes::optimizer::Cma_python</class>
    <class kind="class">fcmaes::optimizer::Cma_sep</class>
    <class kind="class">fcmaes::optimizer::Crfmnes</class>
    <class kind="class">fcmaes::optimizer::Crfmnes_cpp</class>
    <class kind="class">fcmaes::optimizer::Da_cpp</class>
    <class kind="class">fcmaes::optimizer::De_ask_tell</class>
    <class kind="class">fcmaes::optimizer::De_cpp</class>
    <class kind="class">fcmaes::optimizer::De_python</class>
    <class kind="class">fcmaes::optimizer::Differential_evolution</class>
    <class kind="class">fcmaes::optimizer::Dual_annealing</class>
    <class kind="class">fcmaes::optimizer::Minimize</class>
    <class kind="class">fcmaes::optimizer::NLopt</class>
    <class kind="class">fcmaes::optimizer::Optimizer</class>
    <class kind="class">fcmaes::optimizer::Pgpe_cpp</class>
    <class kind="class">fcmaes::optimizer::random_search</class>
    <class kind="class">fcmaes::optimizer::Sequence</class>
    <class kind="class">fcmaes::optimizer::Shgo</class>
    <class kind="class">fcmaes::optimizer::single_objective</class>
    <class kind="class">fcmaes::optimizer::wrapper</class>
    <member kind="function">
      <type></type>
      <name>eprint</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>ae1056ace6b9d6293933260f0ffd8b139</anchor>
      <arglist>(*args, **kwargs)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>scale</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>a4bd18244815f50df9c133ce56be95865</anchor>
      <arglist>(ArrayLike lower, ArrayLike upper)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>typical</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>aaae18e4aad3a1d3f8ca3b264c16f10a8</anchor>
      <arglist>(ArrayLike lower, ArrayLike upper)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>fitting</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>a83e03a72c4ba10e3773f1ec31350bd56</anchor>
      <arglist>(ArrayLike guess, ArrayLike lower, ArrayLike upper)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_terminate</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>a28ae2bbd57e22b7bf12623dcc7cb75c8</anchor>
      <arglist>(int runid, int iterations, float val)</arglist>
    </member>
    <member kind="function">
      <type>np.ndarray</type>
      <name>random_x</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>a86bf62954992be8d3ff9a4fbeed47c54</anchor>
      <arglist>(ArrayLike lower, ArrayLike upper)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dtime</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>ac563cd1fadd680f0e114a92adb740159</anchor>
      <arglist>(float t0)</arglist>
    </member>
    <member kind="function">
      <type>Sequence</type>
      <name>de_cma</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>a7619d6ba38c7ec9033f6dbd0580f094b</anchor>
      <arglist>(Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[float] stop_fitness=-np.inf, Optional[int] de_max_evals=None, Optional[int] cma_max_evals=None, Optional[ArrayLike] ints=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Sequence</type>
      <name>de_cma_py</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>a47d1c3b0025fdbfe74a53b4c09e50b2f</anchor>
      <arglist>(Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[float] stop_fitness=-np.inf, Optional[int] de_max_evals=None, Optional[int] cma_max_evals=None, Optional[ArrayLike] ints=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Sequence</type>
      <name>da_cma</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>a08e08a743a3d7654472d545ac33dd2d4</anchor>
      <arglist>(Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[int] da_max_evals=None, Optional[int] cma_max_evals=None, Optional[float] stop_fitness=-np.inf)</arglist>
    </member>
    <member kind="function">
      <type>Sequence</type>
      <name>de_crfmnes</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>acf749397f0f3e9790e9d162554304df7</anchor>
      <arglist>(Optional[int] max_evaluations=50000, Optional[int] popsize=32, Optional[float] stop_fitness=-np.inf, Optional[int] de_max_evals=None, Optional[int] crfm_max_evals=None, Optional[ArrayLike] ints=None, Optional[int] workers=None)</arglist>
    </member>
    <member kind="function">
      <type>Sequence</type>
      <name>crfmnes_bite</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>acdb72c2fc9851551f88b19ccb5f58874</anchor>
      <arglist>(Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[float] stop_fitness=-np.inf, Optional[int] crfm_max_evals=None, Optional[int] bite_max_evals=None, Optional[int] M=1)</arglist>
    </member>
    <member kind="function">
      <type>Sequence</type>
      <name>bite_cma</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>aa81db687f4de5f26a620f2275ad5667a</anchor>
      <arglist>(Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[float] stop_fitness=-np.inf, Optional[int] bite_max_evals=None, Optional[int] cma_max_evals=None, Optional[int] M=1)</arglist>
    </member>
    <member kind="function">
      <type>Sequence</type>
      <name>cma_bite</name>
      <anchorfile>namespacefcmaes_1_1optimizer.html</anchorfile>
      <anchor>a62ac4124b543bccd313f445c06b7354a</anchor>
      <arglist>(Optional[int] max_evaluations=50000, Optional[int] popsize=32, Optional[float] stop_fitness=-np.inf, Optional[int] cma_max_evals=None, Optional[int] bite_max_evals=None, Optional[int] M=1)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::pgpecpp</name>
    <filename>namespacefcmaes_1_1pgpecpp.html</filename>
    <class kind="class">fcmaes::pgpecpp::PGPE_C</class>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1pgpecpp.html</anchorfile>
      <anchor>ac26ca85a239168914a5e741b112af39f</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.1, Optional[int] popsize=32, Optional[int] max_evaluations=100000, Optional[int] workers=None, Optional[float] stop_fitness=-np.inf, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=True, Optional[int] lr_decay_steps=1000, Optional[bool] use_ranking=True, Optional[float] center_learning_rate=0.15, Optional[float] stdev_learning_rate=0.1, Optional[float] stdev_max_change=0.2, Optional[float] b1=0.9, Optional[float] b2=0.999, Optional[float] eps=1e-8, Optional[float] decay_coef=1.0)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>optimizePGPE_C</name>
      <anchorfile>namespacefcmaes_1_1pgpecpp.html</anchorfile>
      <anchor>af8da1cbe352bc1a796e5f15d878647f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespacefcmaes_1_1pgpecpp.html</anchorfile>
      <anchor>af356a4b052dd645eb6858407c6c30cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>initPGPE_C</name>
      <anchorfile>namespacefcmaes_1_1pgpecpp.html</anchorfile>
      <anchor>aee73bd986018e30ab0fef7ab6f5d8b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespacefcmaes_1_1pgpecpp.html</anchorfile>
      <anchor>a5c33aa0b6c6e1fb0369e7516eacb5649</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>destroyPGPE_C</name>
      <anchorfile>namespacefcmaes_1_1pgpecpp.html</anchorfile>
      <anchor>a03df7e468c547553701bf0f0dc702b4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>askPGPE_C</name>
      <anchorfile>namespacefcmaes_1_1pgpecpp.html</anchorfile>
      <anchor>a89e498c3d796b4113e670e638aa85163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>tellPGPE_C</name>
      <anchorfile>namespacefcmaes_1_1pgpecpp.html</anchorfile>
      <anchor>a83964137647622f1ea94a90106b7fc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>populationPGPE_C</name>
      <anchorfile>namespacefcmaes_1_1pgpecpp.html</anchorfile>
      <anchor>a3c39b0fa9cb8f471f226bc6916bf3a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>resultPGPE_C</name>
      <anchorfile>namespacefcmaes_1_1pgpecpp.html</anchorfile>
      <anchor>a550fd833f381cfb0e882cdccfe52ef2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::pygmoretry</name>
    <filename>namespacefcmaes_1_1pygmoretry.html</filename>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1pygmoretry.html</anchorfile>
      <anchor>a328972de17ce781527987b521bc1d1bf</anchor>
      <arglist>(prob, algo, value_limit=np.inf, num_retries=100 *mp.cpu_count(), workers=mp.cpu_count(), popsize=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>retry</name>
      <anchorfile>namespacefcmaes_1_1pygmoretry.html</anchorfile>
      <anchor>a81cd046316826e2601d9f2510b44f629</anchor>
      <arglist>(store, prob, algo, num_retries, value_limit=np.inf, popsize=1, workers=mp.cpu_count())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_retry_loop</name>
      <anchorfile>namespacefcmaes_1_1pygmoretry.html</anchorfile>
      <anchor>a9ee4304fb34177166a0d9bcfd176c179</anchor>
      <arglist>(pid, rgs, store, prob, algo, num_retries, value_limit, popsize, pg)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::retry</name>
    <filename>namespacefcmaes_1_1retry.html</filename>
    <class kind="class">fcmaes::retry::Shared2d</class>
    <class kind="class">fcmaes::retry::Store</class>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize</name>
      <anchorfile>namespacefcmaes_1_1retry.html</anchorfile>
      <anchor>ae5cef7db4d25eedc630e6e7b3fd077a7</anchor>
      <arglist>(Callable[[ArrayLike], float] fun, Bounds bounds, Optional[float] value_limit=np.inf, Optional[int] num_retries=1024, Optional[int] workers=mp.cpu_count(), Optional[int] popsize=31, Optional[int] max_evaluations=50000, Optional[int] capacity=500, Optional[float] stop_fitness=-np.inf, Optional[Optimizer] optimizer=None, Optional[int] statistic_num=0)</arglist>
    </member>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>retry</name>
      <anchorfile>namespacefcmaes_1_1retry.html</anchorfile>
      <anchor>a2a07e0a25785c0590b0426a946de6009</anchor>
      <arglist>(Store store, Callable optimize, int num_retries, Optional[float] value_limit=np.inf, Optional[int] workers=mp.cpu_count(), Optional[float] stop_fitness=-np.inf)</arglist>
    </member>
    <member kind="function">
      <type>OptimizeResult</type>
      <name>minimize_plot</name>
      <anchorfile>namespacefcmaes_1_1retry.html</anchorfile>
      <anchor>aa3fad9513845a768be702efc7bdd594a</anchor>
      <arglist>(str name, Optimizer optimizer, Callable[[ArrayLike], float] fun, Bounds bounds, Optional[float] value_limit=np.inf, Optional[float] plot_limit=np.inf, Optional[int] num_retries=1024, Optional[int] workers=mp.cpu_count(), Optional[float] stop_fitness=-np.inf, Optional[int] statistic_num=5000)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot</name>
      <anchorfile>namespacefcmaes_1_1retry.html</anchorfile>
      <anchor>a52b831afcdd723de9f72a3430e75afe8</anchor>
      <arglist>(ArrayLike front, str fname, Optional[bool] interp=True, Optional[str] label=r &apos;$\chi$&apos;, Optional[str] xlabel=r &apos; $f_1$&apos;, Optional[str] ylabel=r &apos; $f_2$&apos;, Optional[str] zlabel=r &apos; $f_3$&apos;, Optional[bool] plot3d=False, s=1, dpi=300)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot3</name>
      <anchorfile>namespacefcmaes_1_1retry.html</anchorfile>
      <anchor>a754240fc233254e554ddcc58503d84a3</anchor>
      <arglist>(ArrayLike front, str fname, Optional[str] label=r &apos;$\chi$&apos;, Optional[str] xlabel=r &apos; $f_1$&apos;, Optional[str] ylabel=r &apos; $f_2$&apos;, Optional[str] zlabel=r &apos; $f_3$&apos;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_retry_loop</name>
      <anchorfile>namespacefcmaes_1_1retry.html</anchorfile>
      <anchor>a30908c77918cbc9dd9e43456662cda26</anchor>
      <arglist>(pid, rgs, store, optimize, num_retries, value_limit, stop_fitness=-np.inf)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_convertBounds</name>
      <anchorfile>namespacefcmaes_1_1retry.html</anchorfile>
      <anchor>a35537fa2c742d879961164339775fd72</anchor>
      <arglist>(bounds)</arglist>
    </member>
    <member kind="variable">
      <type>dict</type>
      <name>dtype_map</name>
      <anchorfile>namespacefcmaes_1_1retry.html</anchorfile>
      <anchor>a59360006c21e3c4b3c0cd45bd65a5f25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::test_cma</name>
    <filename>namespacefcmaes_1_1test__cma.html</filename>
    <member kind="function">
      <type></type>
      <name>almost_equal</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a56ec13d8a176e397762ffb9cd3b7eff7</anchor>
      <arglist>(X1, X2, eps=1E-5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rastrigin_python</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a2e73dbd9042d810ea17f3936e4bde46a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rosen_python</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>ac0a08b371b89371721929cd1399aaea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rosen_ask_tell</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a7ec4b8716063cabb65fc0ee28ec32a2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rosen_cpp</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>ad3b0a415eace1ef9007488cc11361e41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rosen_parallel</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>acea283ec5bc0b3c0931d864d3e7ca963</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rosen_cpp_parallel</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a51fa8539bc5e205e434371d8ddef2901</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rosen_de</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a4821d7d9a8c7dd879fd2b20760804c45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rosen_de_parallel</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a1115f0b14db848a92fd7ff0a646f58de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rosen_ask_tell_de</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a5a01b755e5c5a97dc38606546f0ea3de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rosen_decpp</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a9bf91ec31779ea12048ac626d8a04313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_rosen_decpp_parallel</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a574c6dc9453d6792bae4513b307c0e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_eggholder_python</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a2128729d18fafa07c146daa25880d870</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_eggholder_retry</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a06d4235007fede3ebaf194baf5a46612</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_eggholder_advanced_retry</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a02ddb211b712593bc51e118e3d26764d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_eggholder_retry_python</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>aa39a1c6e2b785ee9f6c3bfd330b057eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_eggholder_advanced_retry_python</name>
      <anchorfile>namespacefcmaes_1_1test__cma.html</anchorfile>
      <anchor>a5ff61f59a536b4c3c16c968e1eb8b568</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>fcmaes::testfun</name>
    <filename>namespacefcmaes_1_1testfun.html</filename>
    <class kind="class">fcmaes::testfun::_testfun</class>
    <class kind="class">fcmaes::testfun::Cigar</class>
    <class kind="class">fcmaes::testfun::Eggholder</class>
    <class kind="class">fcmaes::testfun::Elli</class>
    <class kind="class">fcmaes::testfun::Rastrigin</class>
    <class kind="class">fcmaes::testfun::RastriginMean</class>
    <class kind="class">fcmaes::testfun::Rosen</class>
    <class kind="class">fcmaes::testfun::Sphere</class>
    <class kind="class">fcmaes::testfun::Wrapper</class>
    <member kind="function" protection="protected">
      <type></type>
      <name>_rosen</name>
      <anchorfile>namespacefcmaes_1_1testfun.html</anchorfile>
      <anchor>a73c5b2617f1f5e73c08b36611a54c9e9</anchor>
      <arglist>(xs, alpha=1e2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_rastrigin</name>
      <anchorfile>namespacefcmaes_1_1testfun.html</anchorfile>
      <anchor>aabd797a31cba75eb6dcd83bd586bf3e3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_cigar</name>
      <anchorfile>namespacefcmaes_1_1testfun.html</anchorfile>
      <anchor>abac6eddc844a76e10f2f866c063c6ad7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_sphere</name>
      <anchorfile>namespacefcmaes_1_1testfun.html</anchorfile>
      <anchor>a952a92ed97c6285612f56fa6a8f51fbd</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_elli</name>
      <anchorfile>namespacefcmaes_1_1testfun.html</anchorfile>
      <anchor>a0a7d3f710cd2e37748bfcefee390e92e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_modify</name>
      <anchorfile>namespacefcmaes_1_1testfun.html</anchorfile>
      <anchor>abe5db8aa47b5d50d2100075d9600ba6c</anchor>
      <arglist>(x, delta)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_rastrigin_mean</name>
      <anchorfile>namespacefcmaes_1_1testfun.html</anchorfile>
      <anchor>ad34b2d407175d3fa91535738b5193c88</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_eggholder</name>
      <anchorfile>namespacefcmaes_1_1testfun.html</anchorfile>
      <anchor>a40a0037c26c1d47818ccdb151849b2c0</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>gtoc12</name>
    <filename>namespacegtoc12.html</filename>
    <class kind="class">gtoc12::Transfers</class>
    <member kind="function" protection="protected">
      <type></type>
      <name>_mined</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>a26efcf6f474611baf2b8b91f3008f879</anchor>
      <arglist>(asteroids, epochs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_reduce</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>a0550f7dc70affbfd3edcc196396272e3</anchor>
      <arglist>(ast_num, ast_used, sequence0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>_transfer</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>abc2ed451edb0f7c2113a840921194d6e</anchor>
      <arglist>(a2, epoch_min, transfers, idx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>ae69e77fa378b33f00726f3d6f69299bd</anchor>
      <arglist>(fname, max_evals=200000, num_restarts=32, seq=None)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>check_solutions</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>a91594165754dfc90464518c70cf65911</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>a2e22421b2b0080eae1a5581e431cd925</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>a18c2454c55e7bb3653a6c20cedb73564</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>aa06169adfdff68a70708375939de9528</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MIN_MJD</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>a8acad931f57ab9670ed027e4c654bcf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MAX_MJD</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>a52ead272c2041fc35b63f1eaa61bc58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_evals</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>af47b9c9db23b8a487ec3407a8bbc1651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>num_restarts</name>
      <anchorfile>namespacegtoc12.html</anchorfile>
      <anchor>a1e9439f79458a0c5bb77c25992369fb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hbv</name>
    <filename>namespacehbv.html</filename>
    <class kind="class">hbv::hbv</class>
    <member kind="function">
      <type></type>
      <name>check_pymoo</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>ac472b577264065e672297bacbf97cb7b</anchor>
      <arglist>(index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_mo</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a6ee72909084ab4c1484abbfd15e60994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot3d</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a3a4f2f6019a427da618eb1b4826876da</anchor>
      <arglist>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_archive</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a9517c57f4d7c2b62d429da020f8213ad</anchor>
      <arglist>(archive, problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_qd</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>ab4adfe2a468412f8ef0d14c6b70285eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>af08d5aa316c47190f06e6735442eea8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a8ed61252b87568105a6825dbbc8400a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a51b936bde1a81be54cdd1be721f288a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>basepath</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a00404bedc5447ca26bd54d928e700a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>libhbv</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a4647b0f6ace18e5556b93f8cb071f77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hbv_C</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>ae439426f8c05b2209aebcd1fb6bbf4d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a8944e04035637d967db8c57ffc1f254f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a5b25c774b87cf013880075d1080628dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fitness_hbv_C</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a0e4d56699fe475c27c22f9b8163b2d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nobj</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a21be01c67f722a84e886f22bca6d0d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>bounds</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a085e628fbdd8f3fb78fd6ce1645e9521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dim</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>adefdcf86299ec8bacaa2343da556df0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lb</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a0ba6e3603d8d7832067bcc79338a3f83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ub</name>
      <anchorfile>namespacehbv.html</anchorfile>
      <anchor>a85af41e7e854710f0f339749ecd29ca2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>LBFGSpp</name>
    <filename>namespace_l_b_f_g_spp.html</filename>
    <class kind="class">LBFGSpp::LBFGSBSolver</class>
    <class kind="class">LBFGSpp::LBFGSSolver</class>
  </compound>
  <compound kind="namespace">
    <name>lrgv</name>
    <filename>namespacelrgv.html</filename>
    <class kind="class">lrgv::lrgv</class>
    <member kind="function">
      <type></type>
      <name>check_pymoo</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a1864166a2be484c530fbbbff644f2841</anchor>
      <arglist>(index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_mo</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>af66d50b3590ffa761afae82d3302a9e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot3d</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a2fe3ed09ae5ef083c2fa961c8875803e</anchor>
      <arglist>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>plot_archive</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>ab44b25d6ed6c94ba6a458846cb48830e</anchor>
      <arglist>(archive, problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize_qd</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a6f6a9cf8f09f279c6e4a42bd1280b6bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a546a8d7a2c8d5d70473483cd579ee37e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>ae5afb8c70aa9e376cfded3b954fcee22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a59a0a2ac7224fbcfa1dc31bae5bfcc13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>basepath</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a078e0fdbc2e213f557653587cefa72bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>liblrgv</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a8a9687b6d3550c4bb5c267849b510b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lrgv_C</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a64192d450a24357c2cf08680027a8edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argtypes</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a7cf76f3222902615a0f385652a3e4ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>restype</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a9c3ec5665670484a0f69070cb3e0c7b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fitness_lrgv_C</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a64b62d5d00c14a2216d8eafc41bff520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dim</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a64ff71a6edd5406dfab800588382ceb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nobj</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a3eb25c6952cb525a4757fad05a972d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncon</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>ab821656770b8341f0037aeab40cbb563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lb</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>a3c9fa67db16eafc90d80d9a8e725a9b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ub</name>
      <anchorfile>namespacelrgv.html</anchorfile>
      <anchor>ad2579c2667c7abf4a40c88aa61aa9c8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>mmkp</name>
    <filename>namespacemmkp.html</filename>
    <class kind="class">mmkp::MMKP</class>
    <member kind="function">
      <type></type>
      <name>fitness_</name>
      <anchorfile>namespacemmkp.html</anchorfile>
      <anchor>a3a5108d8dc62c98878f97afeb7b824aa</anchor>
      <arglist>(x, n, l, avail, values, resources)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>parse</name>
      <anchorfile>namespacemmkp.html</anchorfile>
      <anchor>acbf4d8b05ab4c16cc7258fc95e329bf9</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespacemmkp.html</anchorfile>
      <anchor>a65f010ffc522cb211692efb799859c78</anchor>
      <arglist>(mmkp, opt, num_retries=32)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_dir</name>
      <anchorfile>namespacemmkp.html</anchorfile>
      <anchor>a33b6275af2dd6a9f23dbb9c5abf6936e</anchor>
      <arglist>(dir)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespacemmkp.html</anchorfile>
      <anchor>acf29bde0bf94595641add39c2fabe88e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespacemmkp.html</anchorfile>
      <anchor>aeaff2315bbba323260bf42abcb887299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespacemmkp.html</anchorfile>
      <anchor>ab4267cee45edb924f7213befbd0fe168</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>mode_optimizer</name>
    <filename>namespacemode__optimizer.html</filename>
    <class kind="class">mode_optimizer::MoDeOptimizer</class>
  </compound>
  <compound kind="namespace">
    <name>pgpe</name>
    <filename>namespacepgpe.html</filename>
    <class kind="class">pgpe::ADAM</class>
    <class kind="class">pgpe::PGPEOptimizer</class>
    <member kind="function">
      <type>double</type>
      <name>sdev</name>
      <anchorfile>namespacepgpe.html</anchorfile>
      <anchor>acf8eb800c548fcaacd7f2cce47367122</anchor>
      <arglist>(vec v)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>predict</name>
    <filename>namespacepredict.html</filename>
    <member kind="function">
      <type></type>
      <name>r</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>a9eb8a7f2d97c2232ac5e77fa90d9df04</anchor>
      <arglist>(v, n=3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>rl</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>aabf7895b0c2014fbaf861964feb49186</anchor>
      <arglist>(l, n=3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>is_false</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>ad531a3e16645e8674c98c955cf8d8878</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>read_data</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>a599dbaaf3e028846b0a9caa9488934df</anchor>
      <arglist>(fname)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collect_all_data</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>afdbf92a42255fcb6b3887ac00ea347f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fit</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>ae7622bff7fe9037ec444e436cb460d90</anchor>
      <arglist>(n, props, inc_is_winner, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>find_other_model</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>ad077eccae37490e4ed56b294cbd4befd</anchor>
      <arglist>(data, harris_predict=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_harris_prediciton</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>ad246ba8a830fe9fd72e974cf6daeaff8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fit_eps</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>a4507d36f763c4844a0397a6d87c04351</anchor>
      <arglist>(n, props, inc_is_winner, x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>find_other_model_eps</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>af5ad07c8bb3af886e070227f63a64f49</anchor>
      <arglist>(data, harris_predict=True)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_harris_prediciton_eps</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>ad721282821c568630118f56abb709e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>single_sum</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>a78af025818b30b1095a47b0c156e5bf5</anchor>
      <arglist>(n, single_props, weights)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>find_harris_estimate_eps</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>ae74d61a5e7d5bd7326999923fe2a4f05</anchor>
      <arglist>(data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test_harris_estimate_eps</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>a3a578b72e4180dffe78dd9382cb34426</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>aa3e178a05f763b774165a4d90108dfc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>a5ec9a88a847ca576c451fae35a5275ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespacepredict.html</anchorfile>
      <anchor>ac417963cec53c476b66042b408659932</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>quantumcomm</name>
    <filename>namespacequantumcomm.html</filename>
    <class kind="class">quantumcomm::constellation_udp</class>
    <member kind="function">
      <type></type>
      <name>get_mothership_satellites</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a7c43375b014085ada1580778d0deb20c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>line_of_sight</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>adeb3d6f34e9ce9bde81d145e0cb4b1c6</anchor>
      <arglist>(r1, r2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>zenith_angle</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a32214ea35bfdc5ac32988510e98f5643</anchor>
      <arglist>(src, dst)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>qkd_metric</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>af0f5b86687bc9356f53b8e0fcd826c2d</anchor>
      <arglist>(idx, src, dst, cos_theta_z, eta, eps_z, n_rovers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_adjmatrix</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a0b9a5d09cf8b8062250d0631d392b9e4</anchor>
      <arglist>(pos, ep_idx, eta, num_w1_sats, LOS, N, eps_z, n_rovers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>construct_rover_pos</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>ab6b2e04e125b00253e56eea291fb11a5</anchor>
      <arglist>(lambda0, phi0, n_rovers, jds, R_p, w_p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>combine_scores</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>abfabcba615cdf83e8edf913c888034e0</anchor>
      <arglist>(points)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>af16dec207874c04d4e67e42e8832d851</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>select_valid</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>ac0164d14577f24455b1c4cfd24a7a9fd</anchor>
      <arglist>(xs, ys)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>read_solution</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a8419b7d865cb04abb4a75ee8457a301c</anchor>
      <arglist>(fname)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mo_par</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a84c6558e0b765a6d0b545850d3821a76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>mo_to_qd</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a685f20cc5ab4536617a667be7981d7e3</anchor>
      <arglist>(y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>qd_fun</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a6b7a2382d55e8c0db17e1220d4cd7be3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>get_arch</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a9179fbf0ec29e945c2af91b0202b0e99</anchor>
      <arglist>(qd_bounds, niche_num, samples_per_niche)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>nd_par</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a7b02c8bc9af9b7e849783b5a8cbfc014</anchor>
      <arglist>(niche_num=10000)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>so_par</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>aeb3856600fe5caa9eff67e2ebb6f269a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pymoo_par</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a1b51de779f54455f301b965bca17467c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reduce</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a29b16ceed23f94c44a426cf51cb2670d</anchor>
      <arglist>(xs, ys, num, evals=50000, retries=mp.cpu_count())</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a2c2d5e5c609de5aa6cd1d78008e5cf2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>aa02045840efca4723c7830b9d2478fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>aef9f62aff427fde17bcbda6c3139420e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>udp</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>aea96ab455c15aa9c4d6284bb868ac44c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nobj</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>ae6a7b0e3b3363799da193a937082152c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncon</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a57cb5c03dd7f2016c85077510ec50fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dim</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a38c14b3f964ffa67c7911f4e175f4784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ref_point</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>ab5b2a2b68abc9d15c1406cad0842982f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ubs</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a7bea33c966401d0a25705d8371e83147</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bounds</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>adaca5954b72a118a0abc3f3b1d9d56ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>max_evals</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a4ae96be5bf50bd2b7bdbf8077fcbf992</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>manager</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a10d52de9364caed740ad48fe34ecc151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>ys</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>afa433f406099fb18e0906c1ca5fc7918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ys0</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a3e2a162310a02aff9e3e2129cfceaa2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>xs</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a009bae3131bf4f32ab41813e095bd545</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>min_ys</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a4df7798fa72740ab9b5adcadca862f58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>count</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a5b2fa9d0041f90fcf0b912c6de25020a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>mutex</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a3a28fa8296e887be274b151c8429b985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>ae18efb9ddb56b08da17e0a6c224e48fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_hv</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>aad80073dce041cbb8ad4b99c5d39fc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>evals</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>ae07ba0a2eed2514d1829c083ea9828b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>pid</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>a894d47aede87908d7383da852279e601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>xs_out</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>acf793ce9680502af168bcaa54d2b161b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ys_out</name>
      <anchorfile>namespacequantumcomm.html</anchorfile>
      <anchor>acb604547ddffa821c69c8ccbec065d4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vrptw</name>
    <filename>namespacevrptw.html</filename>
    <class kind="class">vrptw::VRPTW</class>
    <member kind="function">
      <type></type>
      <name>parse_problem</name>
      <anchorfile>namespacevrptw.html</anchorfile>
      <anchor>a53a9bb8ebce4a6fbd9cc4922a420fa96</anchor>
      <arglist>(filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fitness_</name>
      <anchorfile>namespacevrptw.html</anchorfile>
      <anchor>a6223d5b5d0f77c015a842e7fd153cde1</anchor>
      <arglist>(seq, capacity, dtime, demands, readys, dues, services)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>optimize</name>
      <anchorfile>namespacevrptw.html</anchorfile>
      <anchor>a0304b6337cf8df9d3a0c67295ee045b7</anchor>
      <arglist>(vrptw, opt, num_retries=64)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_dir</name>
      <anchorfile>namespacevrptw.html</anchorfile>
      <anchor>a8acf1684d313df340e4a19bbf730c59e</anchor>
      <arglist>(dir)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>stdout</name>
      <anchorfile>namespacevrptw.html</anchorfile>
      <anchor>a875ed5eb0a825a000482657cc77b6525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>format</name>
      <anchorfile>namespacevrptw.html</anchorfile>
      <anchor>a006b1e47e0f67f540f4bbe62893dffef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>level</name>
      <anchorfile>namespacevrptw.html</anchorfile>
      <anchor>afd423b04c3592ebd2377e00c5ea9f954</anchor>
      <arglist></arglist>
    </member>
  </compound>
</tagfile>

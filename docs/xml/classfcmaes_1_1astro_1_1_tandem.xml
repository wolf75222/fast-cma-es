<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1astro_1_1_tandem" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::astro::Tandem</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1_tandem_1aaff7202792acfdc376fbf63dda71288f" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple fcmaes.astro.Tandem::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>fcmaes.astro.Tandem.name</qualifiedname>
        <initializer>=  (&apos;<ref refid="classfcmaes_1_1astro_1_1_tandem" kindref="compound">Tandem</ref> &apos; if constrained else &apos;<ref refid="classfcmaes_1_1astro_1_1_tandem" kindref="compound">Tandem</ref> unconstrained &apos;) + str(i+1)</initializer>
        <briefdescription>
<para>The name of the tandem, which includes an indication of. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="449" column="1" bodyfile="fcmaes/astro.py" bodystart="449" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1mode_1_1wrapper_1a3da595496f0fa1e7a64955db25dec429" compoundref="mode_8py" startline="1370" endline="1403">fcmaes.mode.wrapper.__call__</referencedby>
        <referencedby refid="classexamples_1_1reproblem_1_1re__problem_1aaa502e5bfc8d1a94d57be0856676919c" compoundref="reproblem_8py" startline="83" endline="86">examples.reproblem.re_problem.fun</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1_tandem_1ac8fa6a908f79271f8e69a3ebcd7dc115" prot="public" static="no" mutable="no">
        <type>str</type>
        <definition>str fcmaes.astro.Tandem::fun_c</definition>
        <argsstring></argsstring>
        <name>fun_c</name>
        <qualifiedname>fcmaes.astro.Tandem.fun_c</qualifiedname>
        <initializer>=  &quot;tandemC&quot; if constrained else &quot;tandemCu&quot;</initializer>
        <briefdescription>
<para>The string identifier of the function in the external library,. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="450" column="1" bodyfile="fcmaes/astro.py" bodystart="450" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1astro_1_1_tandem_1afbf6dda0c1377a59f0d4add61533293b" compoundref="astro_8py" startline="476" endline="490">fcmaes.astro.Tandem.tandem</referencedby>
        <referencedby refid="classfcmaes_1_1astro_1_1_tandem__minlp_1aa0c9717bee62a0dfeb50f4533d09a5a2" compoundref="astro_8py" startline="548" endline="563">fcmaes.astro.Tandem_minlp.tandem_minlp</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1_tandem_1a7289ad20163a2b464e987587daa2fd90" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.astro.Tandem::fun</definition>
        <argsstring></argsstring>
        <name>fun</name>
        <qualifiedname>fcmaes.astro.Tandem.fun</qualifiedname>
        <initializer>=  self.tandem</initializer>
        <briefdescription>
<para>The main function of the class implemented as <computeroutput>tandem</computeroutput>,. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="451" column="1" bodyfile="fcmaes/astro.py" bodystart="451" bodyend="-1"/>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1ac24e8f7966063c3bc0cc215a561cbadb" compoundref="crypto_8py" startline="167" endline="170">examples.crypto.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1add29e0fd221efd5ffa3ce2f0933b633f" compoundref="harvesting_8py" startline="211" endline="214">examples.harvesting.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a65088d25d52805209f6dfec80ed1aa9f" compoundref="jobshop_8py" startline="252" endline="255">examples.jobshop.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback_1a2725c10a3383f79e36a236de01c56c53" compoundref="evaluator_8py" startline="723" endline="729">fcmaes.evaluator.callback.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__mo_1a99eab2bafd1186fff0be59544a596443" compoundref="evaluator_8py" startline="880" endline="893">fcmaes.evaluator.callback_mo.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__par_1a2cc5592287f3feddcda3e51dcf38054b" compoundref="evaluator_8py" startline="950" endline="969">fcmaes.evaluator.callback_par.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__so_1a91b3f73bc6c6999748aaf8bfb94cdd39" compoundref="evaluator_8py" startline="795" endline="809">fcmaes.evaluator.callback_so.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1wrapper_1a3da595496f0fa1e7a64955db25dec429" compoundref="mode_8py" startline="1370" endline="1403">fcmaes.mode.wrapper.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a4f28f983cc8d831a834065b9ad762dc1" compoundref="de_8py" startline="567" endline="579">fcmaes.de.DE.apply_fun</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a2d6eb4d91b58018e74be863ecf71862b" compoundref="de_8py" startline="658" endline="693">fcmaes.de.DE.do_optimize_delayed_update</referencedby>
        <referencedby refid="classfcmaes_1_1moretry_1_1mo__wrapper_1a9f091a54dc6f2c2fefb4c6a90ab108a2" compoundref="moretry_8py" startline="327" endline="335">fcmaes.moretry.mo_wrapper.eval</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a8b05705866c5de83931191324a4e1311" compoundref="benchmark__gtop__pygmo_8py" startline="46" endline="48">examples.benchmark_gtop_pygmo.pygmo_udp.fitness</referencedby>
        <referencedby refid="classfcmaes_1_1moretry_1_1mo__wrapper_1a9dbf1252c03ebe42925abe561e556598" compoundref="moretry_8py" startline="346" endline="348">fcmaes.moretry.mo_wrapper.mo_eval</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a1209aafc30c6a32427e2707c0bcadd22" compoundref="crypto_8py" startline="171" endline="176">examples.crypto.fitness.mofun</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a3ba688bf0d5b34a2cc6268a2248dfaa0" compoundref="crypto_8py" startline="177" endline="180">examples.crypto.fitness.ndfun</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a02628583a11cb998eba4aa6f9b499f76" compoundref="optimizer_8py" startline="3307" endline="3313">fcmaes.optimizer.NLopt.nlfunc</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1aa36396c7701eed3f5d8e84a14a111104" compoundref="evaluator_8py" startline="433" endline="437">fcmaes.evaluator._fitness.values</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1_tandem_1a78eef598c2b6d4c782c8c3f29e4c1752" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.astro.Tandem::bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <qualifiedname>fcmaes.astro.Tandem.bounds</qualifiedname>
        <initializer>=  Bounds([5475, 2.5, 0, 0, 20, 20, 20, 20, 0.01, 0.01, 0.01, 0.01, 1.05, 1.05, 1.05, -math.pi, -math.pi, -math.pi],
                             [9132, 4.9, 1, 1, 2500, 2500, 2500, 2500, 0.99, 0.99, 0.99, 0.99, 10, 10, 10, math.pi,  math.pi,  math.pi])</initializer>
        <briefdescription>
<para>The lower and upper bounds for input parameters associated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="452" column="1" bodyfile="fcmaes/astro.py" bodystart="452" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_check_bounds_1a85adee224b45c4a645b251017c1d604b" compoundref="optimizer_8py" startline="2905" endline="2910">fcmaes.optimizer.CheckBounds.__call__</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a41d3b087b32923f75cbe401f3f2419e3" compoundref="benchmark__gtop__pygmo_8py" startline="49" endline="51">examples.benchmark_gtop_pygmo.pygmo_udp.get_bounds</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" compoundref="anpcp_8py" startline="78" endline="98">anpcp.ANPCP.init_tsp</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a96c79aee6dab29a25fd28b0b383f1916" compoundref="employee_8py" startline="241" endline="250">examples.employee.problem.optimize</referencedby>
        <referencedby refid="classexamples_1_1trappist__delivery_1_1fitness_1ad25284f2ed9bbb5897ec7ca711e5fa17" compoundref="trappist__delivery_8py" startline="944" endline="954">examples.trappist_delivery.fitness.optimize</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a451356183bd266ec5feb44a1b9cf92ef" compoundref="employee_8py" startline="251" endline="268">examples.employee.problem.optimize_mo</referencedby>
        <referencedby refid="classfcmaes_1_1journal_1_1journal__wrapper_1a5adc885590326f2a0989cbef083646e2" compoundref="journal_8py" startline="608" endline="613">fcmaes.journal.journal_wrapper.store_x</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1_tandem_1a921041f857be56f16225e48038ebdc7f" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list fcmaes.astro.Tandem::seqs</definition>
        <argsstring></argsstring>
        <name>seqs</name>
        <qualifiedname>fcmaes.astro.Tandem.seqs</qualifiedname>
        <initializer>=  [[3,2,2,2,6],[3,2,2,3,6],[3,2,2,4,6],[3,2,2,5,6],[3,2,3,2,6],
                [3,2,3,3,6],[3,2,3,4,6],[3,2,3,5,6],[3,2,4,2,6],[3,2,4,3,6],
                [3,2,4,4,6],[3,2,4,5,6],[3,3,2,2,6],[3,3,2,3,6],[3,3,2,4,6],
                [3,3,2,5,6],[3,3,3,2,6],[3,3,3,3,6],[3,3,3,4,6],[3,3,3,5,6],
                [3,3,4,2,6],[3,3,4,3,6],[3,3,4,4,6],[3,3,4,5,6]]</initializer>
        <briefdescription>
<para>Predefined list of sequences available for. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="454" column="1" bodyfile="fcmaes/astro.py" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1_tandem_1a72a4f9ca06fa840de348e7bb1ac916cd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.astro.Tandem::seq</definition>
        <argsstring></argsstring>
        <name>seq</name>
        <qualifiedname>fcmaes.astro.Tandem.seq</qualifiedname>
        <initializer>=  self.seqs[i]</initializer>
        <briefdescription>
<para>The specific sequence selected for the tandem object,. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes an instance with specific configuration based on the given index and constraints. <verbatim>   This constructor sets up various attributes for the instance including the name, associated
   functions, bounds, and sequence configurations based on the input parameters. It provides
   flexibility for creating either a constrained or unconstrained configuration.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index used to select specific sequence and configurations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>constrained</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the configuration should be constrained or unconstrained. Default is True. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="459" column="1" bodyfile="fcmaes/astro.py" bodystart="459" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1astro_1_1_tandem_1afbf6dda0c1377a59f0d4add61533293b" compoundref="astro_8py" startline="476" endline="490">fcmaes.astro.Tandem.tandem</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1astro_1_1_tandem_1a85863c32831e91124bc8d1de23e13f39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.astro.Tandem.__init__</definition>
        <argsstring>(self, i, constrained=True)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.astro.Tandem.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>i</type>
          <defname>i</defname>
        </param>
        <param>
          <type>constrained</type>
          <defname>constrained</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="448" column="1" bodyfile="fcmaes/astro.py" bodystart="448" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1astro_1_1_tandem_1afbf6dda0c1377a59f0d4add61533293b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.astro.Tandem.tandem</definition>
        <argsstring>(self, x)</argsstring>
        <name>tandem</name>
        <qualifiedname>fcmaes.astro.Tandem.tandem</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>Compute the evaluation of a C library function using the provided numeric array. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This function interfaces with an external C function to perform calculations. The
   input array is passed to the C function after converting it to the required C types,
   and the result is retrieved. If any exception occurs or the result is not finite,
   a fallback value is returned.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Numeric array used as input for the C function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float Result of the C function evaluation, or a fallback value in case of errors or non-finite results. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="476" column="1" bodyfile="fcmaes/astro.py" bodystart="476" bodyend="490"/>
        <references refid="classfcmaes_1_1astro_1_1_astrofun_1a5ce1bafb6bcb8c199b249bda95cc1f5e" compoundref="astro_8py" startline="105">fcmaes.astro.Astrofun.fun_c</references>
        <references refid="classfcmaes_1_1astro_1_1_tandem_1ac8fa6a908f79271f8e69a3ebcd7dc115" compoundref="astro_8py" startline="450">fcmaes.astro.Tandem.fun_c</references>
        <references refid="classfcmaes_1_1astro_1_1_tandem_1a72a4f9ca06fa840de348e7bb1ac916cd" compoundref="astro_8py" startline="459">fcmaes.astro.Tandem.seq</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents a <ref refid="classfcmaes_1_1astro_1_1_tandem" kindref="compound">Tandem</ref> configuration with specific bounds, sequences, and functionalities. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is designed to create and manage a tandem object, where each tandem is characterized by specific constraints, bounds, sequences, and a function that calculates a value based on given inputs. It allows the classification of tandems as constrained or unconstrained and associates them with specific functionality.</para>
<para><verbatim>       determined by the input index at instantiation.
</verbatim> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.astro.Tandem</label>
        <link refid="classfcmaes_1_1astro_1_1_tandem"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/astro.py" line="407" column="1" bodyfile="fcmaes/astro.py" bodystart="407" bodyend="490"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1astro_1_1_tandem_1a85863c32831e91124bc8d1de23e13f39" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem_1a78eef598c2b6d4c782c8c3f29e4c1752" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem</scope><name>bounds</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem_1a7289ad20163a2b464e987587daa2fd90" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem</scope><name>fun</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem_1ac8fa6a908f79271f8e69a3ebcd7dc115" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem</scope><name>fun_c</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem_1aaff7202792acfdc376fbf63dda71288f" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem</scope><name>name</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem_1a72a4f9ca06fa840de348e7bb1ac916cd" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem</scope><name>seq</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem_1a921041f857be56f16225e48038ebdc7f" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem</scope><name>seqs</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem_1afbf6dda0c1377a59f0d4add61533293b" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem</scope><name>tandem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="biteoptimizer_8cpp" kind="file" language="C++">
    <compoundname>biteoptimizer.cpp</compoundname>
    <includes local="no">Eigen/Core</includes>
    <includes local="no">iostream</includes>
    <includes local="no">float.h</includes>
    <includes local="no">ctime</includes>
    <includes local="no">random</includes>
    <includes refid="biteopt_8h" local="yes">biteopt.h</includes>
    <includes refid="evaluator_8h" local="yes">evaluator.h</includes>
    <incdepgraph>
      <node id="1">
        <label>_fcmaescpp/biteoptimizer.cpp</label>
        <link refid="biteoptimizer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>biteaux.h</label>
        <link refid="biteaux_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>biteopt.h</label>
        <link refid="biteopt_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>evaluator.h</label>
        <link refid="evaluator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>nmsopt.h</label>
        <link refid="nmsopt_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>spheropt.h</label>
        <link refid="spheropt_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Eigen/Core</label>
      </node>
      <node id="15">
        <label>algorithm</label>
      </node>
      <node id="20">
        <label>chrono</label>
      </node>
      <node id="21">
        <label>condition_variable</label>
      </node>
      <node id="5">
        <label>ctime</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>math.h</label>
      </node>
      <node id="17">
        <label>mutex</label>
      </node>
      <node id="22">
        <label>pcg_random.hpp</label>
      </node>
      <node id="16">
        <label>queue</label>
      </node>
      <node id="6">
        <label>random</label>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
      <node id="18">
        <label>thread</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classbiteopt_1_1_bite_optimizer" prot="public">biteopt::BiteOptimizer</innerclass>
    <innernamespace refid="namespacebiteopt">biteopt</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="biteoptimizer_8cpp_1a3a44f6d1b82c40e137d534553af547b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void optimizeBite_C</definition>
        <argsstring>(long runid, callback_type func, int dim, int seed, double *init, double *lower, double *upper, int maxEvals, double stopfitness, int M, int popsize, int stall_iterations, double *res)</argsstring>
        <name>optimizeBite_C</name>
        <param>
          <type>long</type>
          <declname>runid</declname>
        </param>
        <param>
          <type><ref refid="evaluator_8h_1af419da391481d5e767cbe038009da309" kindref="member">callback_type</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>init</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>upper</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxEvals</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stopfitness</declname>
        </param>
        <param>
          <type>int</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int</type>
          <declname>popsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stall_iterations</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/biteoptimizer.cpp" line="126" column="6" bodyfile="_fcmaescpp/biteoptimizer.cpp" bodystart="126" bodyend="158"/>
        <references refid="class_fitness_1aba60038eac4e0e15d995e57f4ba079e1" compoundref="evaluator_8h" startline="313" endline="315">Fitness::evaluations</references>
        <references refid="evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e" compoundref="evaluator_8h" startline="90" endline="91">noop_callback_par</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="biteopt_8h" kindref="compound">biteopt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="evaluator_8h" kindref="compound">evaluator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespacebiteopt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacebiteopt" kindref="compound">biteopt</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classbiteopt_1_1_bite_optimizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbiteopt_1_1_bite_optimizer_1ac0abad8d3fbb5e91bba5c49b59a60e8b" kindref="member">BiteOptimizer</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_c_bite_opt_deep_1a65d5f650fd7eae9ae1d1cb76387a3179" kindref="member">CBiteOptDeep</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classbiteopt_1_1_bite_optimizer_1ac0abad8d3fbb5e91bba5c49b59a60e8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1ac0abad8d3fbb5e91bba5c49b59a60e8b" kindref="member">BiteOptimizer</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>runid_,<sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>*fitfun_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*init_,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stallCriterion_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxEvaluations_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stopfitness_)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>runid<sp/>used<sp/>to<sp/>identify<sp/>a<sp/>specific<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1aaf39fcde875f4ba2aabf9b881a46dab0" kindref="member">runid</ref><sp/>=<sp/>runid_;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fitness<sp/>function<sp/>to<sp/>minimize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a0ee80e7c3878dae82aef5f9a532281ae" kindref="member">fitfun</ref><sp/>=<sp/>fitfun_;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>objective<sp/>variables/problem<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a8e4b9fbc66dcb68d7afbfbdc9897c180" kindref="member">dim</ref><sp/>=<sp/>dim_;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Depth<sp/>to<sp/>use,<sp/>1<sp/>for<sp/>plain<sp/>CBiteOpt<sp/>algorithm,<sp/>&gt;1<sp/>for<sp/>CBiteOptDeep.<sp/>Expected<sp/>range<sp/>is<sp/>[1;<sp/>36].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a388a1a6fb08111aa79aba41ac358ef96" kindref="member">M</ref><sp/>=<sp/>M_<sp/>&gt;<sp/>0<sp/>?<sp/>M_<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>terminate<sp/>if<sp/>stallCriterion_*128*evaluations<sp/>stalled,<sp/>if<sp/>&lt;=<sp/>0<sp/>not<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a710877c371d6154d8718ffadc82c220e" kindref="member">stallCriterion</ref><sp/>=<sp/>stallCriterion_<sp/>&gt;<sp/>0<sp/>?<sp/>stallCriterion_<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximal<sp/>number<sp/>of<sp/>evaluations<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a202fcfa155957a158f3a3916753448a4" kindref="member">maxEvaluations</ref><sp/>=<sp/>maxEvaluations_<sp/>&gt;<sp/>0<sp/>?<sp/>maxEvaluations_<sp/>:<sp/>50000;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>iterations<sp/>already<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>for<sp/>fitness<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a8e2a405cc4f23f9f34e15236ac072721" kindref="member">stopfitness</ref><sp/>=<sp/>stopfitness_;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::random_device<sp/>rd;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rs<sp/>=<sp/>new<sp/>Eigen::Rand::P8_mt19937_64(seed_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a6635331036d8d48e550a1a6716bacf33" kindref="member">rs</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>pcg64(seed_);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>criteria</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a9fdbe319b90b1f86175cd924c9700302" kindref="member">stop</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a96feed5acebf4945e27d50cbcd8ef36f" kindref="member">iterations</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1ae9c0069b5b67d537814be3f7f83c0293" kindref="member">bestY</ref><sp/>=<sp/>DBL_MAX;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a4b393b354bee73e0c41973074118a1e5" kindref="member">rnd</ref>.init(seed_);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61" kindref="member">updateDims</ref>(dim_,<sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a388a1a6fb08111aa79aba41ac358ef96" kindref="member">M</ref>,<sp/>popsize);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" kindref="member">init</ref>(<ref refid="classbiteopt_1_1_bite_optimizer_1a4b393b354bee73e0c41973074118a1e5" kindref="member">rnd</ref>,<sp/>init_);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classbiteopt_1_1_bite_optimizer_1a5774713fad3253b58a5b79f52586e072" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a5774713fad3253b58a5b79f52586e072" kindref="member">~BiteOptimizer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a6635331036d8d48e550a1a6716bacf33" kindref="member">rs</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classbiteopt_1_1_bite_optimizer_1a11148136b4a3eebd78d235eda7e3dff4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a11148136b4a3eebd78d235eda7e3dff4" kindref="member">getMinValues</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a0ee80e7c3878dae82aef5f9a532281ae" kindref="member">fitfun</ref>-&gt;getMinValues(p);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classbiteopt_1_1_bite_optimizer_1a8d1716460571a9aef6f8206715a5a71c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a8d1716460571a9aef6f8206715a5a71c" kindref="member">getMaxValues</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a0ee80e7c3878dae82aef5f9a532281ae" kindref="member">fitfun</ref>-&gt;getMaxValues(p);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classbiteopt_1_1_bite_optimizer_1a0244d5e664ac99fd264ebe908023ce0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a0244d5e664ac99fd264ebe908023ce0c" kindref="member">optcost</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a0ee80e7c3878dae82aef5f9a532281ae" kindref="member">fitfun</ref>-&gt;eval(p)(0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classbiteopt_1_1_bite_optimizer_1a311b608ce3c0eea69d66615f22448279" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a311b608ce3c0eea69d66615f22448279" kindref="member">getBestX</ref>()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a2eb7f354f8bc1aa1e4f5a001d3ecdc38" kindref="member">bestX</ref><sp/>=<sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref>(<ref refid="classbiteopt_1_1_bite_optimizer_1a8e4b9fbc66dcb68d7afbfbdc9897c180" kindref="member">dim</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*bx<sp/>=<sp/><ref refid="class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3" kindref="member">getBestParams</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a8e4b9fbc66dcb68d7afbfbdc9897c180" kindref="member">dim</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a2eb7f354f8bc1aa1e4f5a001d3ecdc38" kindref="member">bestX</ref>[i]<sp/>=<sp/>bx[i];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a2eb7f354f8bc1aa1e4f5a001d3ecdc38" kindref="member">bestX</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classbiteopt_1_1_bite_optimizer_1aa117da98db6b95c17836e1c0acb37d88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1aa117da98db6b95c17836e1c0acb37d88" kindref="member">getBestValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31" kindref="member">getBestCost</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classbiteopt_1_1_bite_optimizer_1a5ebdeb53261b8a3d0366f7dee30995e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a5ebdeb53261b8a3d0366f7dee30995e1" kindref="member">getIterations</ref>()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a96feed5acebf4945e27d50cbcd8ef36f" kindref="member">iterations</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classbiteopt_1_1_bite_optimizer_1aa080b647a6dc4297f6be40f55e443dfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1aa080b647a6dc4297f6be40f55e443dfb" kindref="member">getStop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a9fdbe319b90b1f86175cd924c9700302" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classbiteopt_1_1_bite_optimizer_1a7f48d5b15bac207bebbc9492708fb3fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a7f48d5b15bac207bebbc9492708fb3fd" kindref="member">doOptimize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------<sp/>Generation<sp/>Loop<sp/>--------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classbiteopt_1_1_bite_optimizer_1a96feed5acebf4945e27d50cbcd8ef36f" kindref="member">iterations</ref><sp/>=<sp/>1;<sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a0ee80e7c3878dae82aef5f9a532281ae" kindref="member">fitfun</ref>-&gt;evaluations()<sp/>&lt;<sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a202fcfa155957a158f3a3916753448a4" kindref="member">maxEvaluations</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a96feed5acebf4945e27d50cbcd8ef36f" kindref="member">iterations</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stallCount<sp/>=<sp/><ref refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" kindref="member">optimize</ref>(<ref refid="classbiteopt_1_1_bite_optimizer_1a4b393b354bee73e0c41973074118a1e5" kindref="member">rnd</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31" kindref="member">getBestCost</ref>()<sp/>&lt;<sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a8e2a405cc4f23f9f34e15236ac072721" kindref="member">stopfitness</ref>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a9fdbe319b90b1f86175cd924c9700302" kindref="member">stop</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classbiteopt_1_1_bite_optimizer_1a710877c371d6154d8718ffadc82c220e" kindref="member">stallCriterion</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>stallCount<sp/>&gt;<sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a710877c371d6154d8718ffadc82c220e" kindref="member">stallCriterion</ref>*128*<ref refid="classbiteopt_1_1_bite_optimizer_1a8e4b9fbc66dcb68d7afbfbdc9897c180" kindref="member">dim</ref>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a9fdbe319b90b1f86175cd924c9700302" kindref="member">stop</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106" refid="classbiteopt_1_1_bite_optimizer_1aaf39fcde875f4ba2aabf9b881a46dab0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1aaf39fcde875f4ba2aabf9b881a46dab0" kindref="member">runid</ref>;</highlight></codeline>
<codeline lineno="107" refid="classbiteopt_1_1_bite_optimizer_1a0ee80e7c3878dae82aef5f9a532281ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>*<ref refid="classbiteopt_1_1_bite_optimizer_1a0ee80e7c3878dae82aef5f9a532281ae" kindref="member">fitfun</ref>;</highlight></codeline>
<codeline lineno="108" refid="classbiteopt_1_1_bite_optimizer_1a388a1a6fb08111aa79aba41ac358ef96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a388a1a6fb08111aa79aba41ac358ef96" kindref="member">M</ref>;<sp/></highlight><highlight class="comment">//<sp/>deepness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classbiteopt_1_1_bite_optimizer_1a710877c371d6154d8718ffadc82c220e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a710877c371d6154d8718ffadc82c220e" kindref="member">stallCriterion</ref>;<sp/></highlight><highlight class="comment">//<sp/>terminate<sp/>if<sp/>f<sp/>stallCriterion*128*evaluations<sp/>stalled,<sp/>if<sp/>&lt;=<sp/>0<sp/>not<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classbiteopt_1_1_bite_optimizer_1a8e4b9fbc66dcb68d7afbfbdc9897c180" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a8e4b9fbc66dcb68d7afbfbdc9897c180" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="111" refid="classbiteopt_1_1_bite_optimizer_1a202fcfa155957a158f3a3916753448a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a202fcfa155957a158f3a3916753448a4" kindref="member">maxEvaluations</ref>;</highlight></codeline>
<codeline lineno="112" refid="classbiteopt_1_1_bite_optimizer_1a8e2a405cc4f23f9f34e15236ac072721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a8e2a405cc4f23f9f34e15236ac072721" kindref="member">stopfitness</ref>;</highlight></codeline>
<codeline lineno="113" refid="classbiteopt_1_1_bite_optimizer_1a96feed5acebf4945e27d50cbcd8ef36f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a96feed5acebf4945e27d50cbcd8ef36f" kindref="member">iterations</ref>;</highlight></codeline>
<codeline lineno="114" refid="classbiteopt_1_1_bite_optimizer_1ae9c0069b5b67d537814be3f7f83c0293" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1ae9c0069b5b67d537814be3f7f83c0293" kindref="member">bestY</ref>;</highlight></codeline>
<codeline lineno="115" refid="classbiteopt_1_1_bite_optimizer_1a9fdbe319b90b1f86175cd924c9700302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a9fdbe319b90b1f86175cd924c9700302" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="116" refid="classbiteopt_1_1_bite_optimizer_1a2eb7f354f8bc1aa1e4f5a001d3ecdc38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a2eb7f354f8bc1aa1e4f5a001d3ecdc38" kindref="member">bestX</ref>;</highlight></codeline>
<codeline lineno="117" refid="classbiteopt_1_1_bite_optimizer_1a6635331036d8d48e550a1a6716bacf33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pcg64<sp/>*<ref refid="classbiteopt_1_1_bite_optimizer_1a6635331036d8d48e550a1a6716bacf33" kindref="member">rs</ref>;</highlight></codeline>
<codeline lineno="118" refid="classbiteopt_1_1_bite_optimizer_1a4b393b354bee73e0c41973074118a1e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref><sp/><ref refid="classbiteopt_1_1_bite_optimizer_1a4b393b354bee73e0c41973074118a1e5" kindref="member">rnd</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacebiteopt" kindref="compound">biteopt</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126" refid="biteoptimizer_8cpp_1a3a44f6d1b82c40e137d534553af547b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="biteoptimizer_8cpp_1a3a44f6d1b82c40e137d534553af547b1" kindref="member">optimizeBite_C</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>runid,<sp/><ref refid="evaluator_8h_1af419da391481d5e767cbe038009da309" kindref="member">callback_type</ref><sp/>func,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*init,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*upper,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxEvals,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stopfitness,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stall_iterations,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>res)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>lower_limit(dim),<sp/>upper_limit(dim);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>upper<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_limit[i]<sp/>=<sp/>lower[i];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_limit[i]<sp/>=<sp/>upper[i];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_limit.resize(0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_limit.resize(0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>fitfun(func,<sp/><ref refid="evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e" kindref="member">noop_callback_par</ref>,<sp/><sp/>dim,<sp/>1,<sp/>lower_limit,<sp/>upper_limit);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbiteopt_1_1_bite_optimizer" kindref="compound">BiteOptimizer</ref><sp/>opt(runid,<sp/>&amp;fitfun,<sp/>dim,<sp/>init,<sp/>seed,<sp/>M,<sp/>popsize,<sp/>stall_iterations,<sp/>maxEvals,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stopfitness);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.doOptimize();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>bestX<sp/>=<sp/>opt.getBestX();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bestY<sp/>=<sp/>opt.getBestValue();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[i]<sp/>=<sp/>bestX[i];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[dim]<sp/>=<sp/>bestY;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[dim<sp/>+<sp/>1]<sp/>=<sp/>fitfun.<ref refid="class_fitness_1aba60038eac4e0e15d995e57f4ba079e1" kindref="member">evaluations</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[dim<sp/>+<sp/>2]<sp/>=<sp/>opt.getIterations();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[dim<sp/>+<sp/>3]<sp/>=<sp/>opt.getStop();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="_fcmaescpp/biteoptimizer.cpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="prophet__opt_8py" kind="file" language="Python">
    <compoundname>prophet_opt.py</compoundname>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1prophet__opt">examples::prophet_opt</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1prophet__opt_1a43ce737dcffd73d540d9e21f70f783c7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::prophet_opt.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <qualifiedname>examples.prophet_opt.logger</qualifiedname>
        <initializer>=  logging.getLogger(&apos;cmdstanpy&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="142" column="1" bodyfile="examples/prophet_opt.py" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1prophet__opt_1a7790ff1362e83048ddbf1967cb4488ad" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::prophet_opt.null_handler</definition>
        <argsstring></argsstring>
        <name>null_handler</name>
        <qualifiedname>examples.prophet_opt.null_handler</qualifiedname>
        <initializer>=  logging.NullHandler()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="147" column="1" bodyfile="examples/prophet_opt.py" bodystart="147" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.load_data</definition>
        <argsstring>(symbol=&apos;BTC-USD&apos;, start_date=&apos;2013-01-01&apos;, end_date=&apos;2024-10-30&apos;)</argsstring>
        <name>load_data</name>
        <qualifiedname>examples.prophet_opt.load_data</qualifiedname>
        <param>
          <type>symbol</type>
          <defname>symbol</defname>
          <defval>&apos;BTC-USD&apos;</defval>
        </param>
        <param>
          <type>start_date</type>
          <defname>start_date</defname>
          <defval>&apos;2013-01-01&apos;</defval>
        </param>
        <param>
          <type>end_date</type>
          <defname>end_date</defname>
          <defval>&apos;2024-10-30&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="156" column="1" bodyfile="examples/prophet_opt.py" bodystart="156" bodyend="169"/>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1a61ac51634dd7cfd9cf39a7947fcbd281" compoundref="prophet__opt_8py" startline="170" endline="235">examples.prophet_opt.btc_strategy</referencedby>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1a89edb34f6787ecf7671d592512524b7f" compoundref="prophet__opt_8py" startline="376" endline="393">examples.prophet_opt.optimize_btc</referencedby>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1a6036ff4e616cbf09671db7d938061190" compoundref="prophet__opt_8py" startline="394" endline="427">examples.prophet_opt.optimize_btc_ask_tell</referencedby>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1ae9fc3dd94248f2146ad53fcf139d55fb" compoundref="prophet__opt_8py" startline="428" endline="436">examples.prophet_opt.show_good_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1a61ac51634dd7cfd9cf39a7947fcbd281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.btc_strategy</definition>
        <argsstring>()</argsstring>
        <name>btc_strategy</name>
        <qualifiedname>examples.prophet_opt.btc_strategy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="170" column="1" bodyfile="examples/prophet_opt.py" bodystart="170" bodyend="235"/>
        <references refid="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" compoundref="prophet__opt_8py" startline="156" endline="169">examples.prophet_opt.load_data</references>
        <references refid="namespaceexamples_1_1prophet__opt_1a8a4ce6e419eeaa24cd84dcbd0930f019" compoundref="prophet__opt_8py" startline="236" endline="277">examples.prophet_opt.plot_df</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1a8a4ce6e419eeaa24cd84dcbd0930f019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.plot_df</definition>
        <argsstring>(df)</argsstring>
        <name>plot_df</name>
        <qualifiedname>examples.prophet_opt.plot_df</qualifiedname>
        <param>
          <type>df</type>
          <defname>df</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="236" column="1" bodyfile="examples/prophet_opt.py" bodystart="236" bodyend="277"/>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1ae4e0f5b1e89fcbb3c76d779137998d54" compoundref="prophet__opt_8py" startline="343" endline="352">examples.prophet_opt.btc_show_params</referencedby>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1a61ac51634dd7cfd9cf39a7947fcbd281" compoundref="prophet__opt_8py" startline="170" endline="235">examples.prophet_opt.btc_strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1aaef1882f68b34d7af026e8781098c1d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.btc_eval_params</definition>
        <argsstring>(df, changepoint_prior_scale, period, fourier_order, seasonality_mode)</argsstring>
        <name>btc_eval_params</name>
        <qualifiedname>examples.prophet_opt.btc_eval_params</qualifiedname>
        <param>
          <type>df</type>
          <defname>df</defname>
        </param>
        <param>
          <type>changepoint_prior_scale</type>
          <defname>changepoint_prior_scale</defname>
        </param>
        <param>
          <type>period</type>
          <defname>period</defname>
        </param>
        <param>
          <type>fourier_order</type>
          <defname>fourier_order</defname>
        </param>
        <param>
          <type>seasonality_mode</type>
          <defname>seasonality_mode</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="278" column="1" bodyfile="examples/prophet_opt.py" bodystart="278" bodyend="342"/>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1ae4e0f5b1e89fcbb3c76d779137998d54" compoundref="prophet__opt_8py" startline="343" endline="352">examples.prophet_opt.btc_show_params</referencedby>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1ab552129c694447ce6fc44ad3f49825e9" compoundref="prophet__opt_8py" startline="371" endline="375">examples.prophet_opt.fitness</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1ae4e0f5b1e89fcbb3c76d779137998d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.btc_show_params</definition>
        <argsstring>(df, changepoint_prior_scale, period, fourier_order, seasonality_mode)</argsstring>
        <name>btc_show_params</name>
        <qualifiedname>examples.prophet_opt.btc_show_params</qualifiedname>
        <param>
          <type>df</type>
          <defname>df</defname>
        </param>
        <param>
          <type>changepoint_prior_scale</type>
          <defname>changepoint_prior_scale</defname>
        </param>
        <param>
          <type>period</type>
          <defname>period</defname>
        </param>
        <param>
          <type>fourier_order</type>
          <defname>fourier_order</defname>
        </param>
        <param>
          <type>seasonality_mode</type>
          <defname>seasonality_mode</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="343" column="1" bodyfile="examples/prophet_opt.py" bodystart="343" bodyend="352"/>
        <references refid="namespaceexamples_1_1prophet__opt_1aaef1882f68b34d7af026e8781098c1d5" compoundref="prophet__opt_8py" startline="278" endline="342">examples.prophet_opt.btc_eval_params</references>
        <references refid="namespaceexamples_1_1prophet__opt_1a8a4ce6e419eeaa24cd84dcbd0930f019" compoundref="prophet__opt_8py" startline="236" endline="277">examples.prophet_opt.plot_df</references>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" compoundref="prophet__opt_8py" startline="360" endline="363">examples.prophet_opt.btc_show_x</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1a6de43eaac1a61a76257187d2827f2ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.convert_x</definition>
        <argsstring>(x)</argsstring>
        <name>convert_x</name>
        <qualifiedname>examples.prophet_opt.convert_x</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="353" column="1" bodyfile="examples/prophet_opt.py" bodystart="353" bodyend="359"/>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" compoundref="prophet__opt_8py" startline="360" endline="363">examples.prophet_opt.btc_show_x</referencedby>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1ab552129c694447ce6fc44ad3f49825e9" compoundref="prophet__opt_8py" startline="371" endline="375">examples.prophet_opt.fitness</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.btc_show_x</definition>
        <argsstring>(df, x)</argsstring>
        <name>btc_show_x</name>
        <qualifiedname>examples.prophet_opt.btc_show_x</qualifiedname>
        <param>
          <type>df</type>
          <defname>df</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="360" column="1" bodyfile="examples/prophet_opt.py" bodystart="360" bodyend="363"/>
        <references refid="namespaceexamples_1_1prophet__opt_1ae4e0f5b1e89fcbb3c76d779137998d54" compoundref="prophet__opt_8py" startline="343" endline="352">examples.prophet_opt.btc_show_params</references>
        <references refid="namespaceexamples_1_1prophet__opt_1a6de43eaac1a61a76257187d2827f2ece" compoundref="prophet__opt_8py" startline="353" endline="359">examples.prophet_opt.convert_x</references>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1a89edb34f6787ecf7671d592512524b7f" compoundref="prophet__opt_8py" startline="376" endline="393">examples.prophet_opt.optimize_btc</referencedby>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1a6036ff4e616cbf09671db7d938061190" compoundref="prophet__opt_8py" startline="394" endline="427">examples.prophet_opt.optimize_btc_ask_tell</referencedby>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1ae9fc3dd94248f2146ad53fcf139d55fb" compoundref="prophet__opt_8py" startline="428" endline="436">examples.prophet_opt.show_good_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1ab552129c694447ce6fc44ad3f49825e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.fitness</definition>
        <argsstring>(df, x)</argsstring>
        <name>fitness</name>
        <qualifiedname>examples.prophet_opt.fitness</qualifiedname>
        <param>
          <type>df</type>
          <defname>df</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="371" column="1" bodyfile="examples/prophet_opt.py" bodystart="371" bodyend="375"/>
        <references refid="namespaceexamples_1_1prophet__opt_1aaef1882f68b34d7af026e8781098c1d5" compoundref="prophet__opt_8py" startline="278" endline="342">examples.prophet_opt.btc_eval_params</references>
        <references refid="namespaceexamples_1_1prophet__opt_1a6de43eaac1a61a76257187d2827f2ece" compoundref="prophet__opt_8py" startline="353" endline="359">examples.prophet_opt.convert_x</references>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1ae9fc3dd94248f2146ad53fcf139d55fb" compoundref="prophet__opt_8py" startline="428" endline="436">examples.prophet_opt.show_good_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1a89edb34f6787ecf7671d592512524b7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.optimize_btc</definition>
        <argsstring>()</argsstring>
        <name>optimize_btc</name>
        <qualifiedname>examples.prophet_opt.optimize_btc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="376" column="1" bodyfile="examples/prophet_opt.py" bodystart="376" bodyend="393"/>
        <references refid="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" compoundref="prophet__opt_8py" startline="360" endline="363">examples.prophet_opt.btc_show_x</references>
        <references refid="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" compoundref="prophet__opt_8py" startline="156" endline="169">examples.prophet_opt.load_data</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1a6036ff4e616cbf09671db7d938061190" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.optimize_btc_ask_tell</definition>
        <argsstring>()</argsstring>
        <name>optimize_btc_ask_tell</name>
        <qualifiedname>examples.prophet_opt.optimize_btc_ask_tell</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="394" column="1" bodyfile="examples/prophet_opt.py" bodystart="394" bodyend="427"/>
        <references refid="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" compoundref="prophet__opt_8py" startline="360" endline="363">examples.prophet_opt.btc_show_x</references>
        <references refid="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" compoundref="prophet__opt_8py" startline="156" endline="169">examples.prophet_opt.load_data</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1prophet__opt_1ae9fc3dd94248f2146ad53fcf139d55fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.prophet_opt.show_good_result</definition>
        <argsstring>()</argsstring>
        <name>show_good_result</name>
        <qualifiedname>examples.prophet_opt.show_good_result</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/prophet_opt.py" line="428" column="1" bodyfile="examples/prophet_opt.py" bodystart="428" bodyend="436"/>
        <references refid="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" compoundref="prophet__opt_8py" startline="360" endline="363">examples.prophet_opt.btc_show_x</references>
        <references refid="namespaceexamples_1_1prophet__opt_1ab552129c694447ce6fc44ad3f49825e9" compoundref="prophet__opt_8py" startline="371" endline="375">examples.prophet_opt.fitness</references>
        <references refid="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" compoundref="prophet__opt_8py" startline="156" endline="169">examples.prophet_opt.load_data</references>
        <references refid="namespaceexamples_1_1prophet__opt_1ae9fc3dd94248f2146ad53fcf139d55fb" compoundref="prophet__opt_8py" startline="428" endline="436">examples.prophet_opt.show_good_result</references>
        <referencedby refid="namespaceexamples_1_1prophet__opt_1ae9fc3dd94248f2146ad53fcf139d55fb" compoundref="prophet__opt_8py" startline="428" endline="436">examples.prophet_opt.show_good_result</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1prophet__opt" refkind="compound"><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>How<sp/>to<sp/>optimize<sp/>an<sp/>AI<sp/>generated<sp/>algorithmic<sp/>trading<sp/>strategy?</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Resolve<sp/>dependencies:</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>pip<sp/>install<sp/>plotly<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>pip<sp/>install<sp/>yfinance</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>pip<sp/>install<sp/>fcmaes<sp/>--upgrade</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>pip<sp/>install<sp/>prophet</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>example<sp/>code<sp/>is<sp/>partly<sp/>generated<sp/>by<sp/>o1-preview.<sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>LLMs<sp/>can<sp/>help<sp/>to<sp/>generate<sp/>the<sp/>code<sp/>and<sp/>to<sp/>understand<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>its<sp/>concepts.<sp/>It<sp/>can<sp/>even<sp/>propose<sp/>ways<sp/>to<sp/>optimize<sp/>the<sp/>trading</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>strategy.<sp/>This<sp/>example<sp/>shows<sp/>how<sp/>this<sp/>optimization<sp/>process<sp/>can<sp/>be<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>automated<sp/>using<sp/>fcmaes.<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>Executing<sp/>the<sp/>trading<sp/>strategy<sp/>takes<sp/>time,<sp/>so<sp/>a<sp/>complete<sp/>parameter</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>sweep<sp/>is<sp/>slow.</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>We<sp/>exploit<sp/>the<sp/>fact<sp/>the<sp/>fcmaes<sp/>uses<sp/>parallel<sp/>processes<sp/>to<sp/>speed<sp/>up</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>optimization<sp/>process.<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>An<sp/>evolutionary<sp/>optimizer<sp/>like<sp/>Differential<sp/>Evolution<sp/>refines<sp/>&quot;promising&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>parameter<sp/>sets,<sp/>thereby<sp/>avoiding<sp/>to<sp/>get<sp/>stuck<sp/>at<sp/>local<sp/>optima.</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Used<sp/>prompts:</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;why<sp/>are<sp/>HMMs<sp/>not<sp/>typically<sp/>used<sp/>for<sp/>point<sp/>forecasts?&apos;</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o1-preview<sp/>lists<sp/>the<sp/>reasons,<sp/>shows<sp/>alternatives,<sp/>one<sp/>is<sp/>to<sp/>use<sp/>Prophet.</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;show<sp/>python<sp/>code<sp/>using<sp/>Prophet<sp/>for<sp/>implementing<sp/>a<sp/>trading<sp/>strategy&apos;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;list<sp/>this<sp/>code<sp/>in<sp/>one<sp/>chunk&apos;</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>generated<sp/>code<sp/>desn&apos;t<sp/>work<sp/>with<sp/>newest<sp/>yfinance,<sp/>so<sp/>method<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;load_data&apos;<sp/>requires<sp/>a<sp/>minor<sp/>fix.<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;how<sp/>can<sp/>the<sp/>code<sp/>be<sp/>adapted<sp/>to<sp/>bitcoin<sp/>reflecting<sp/>the<sp/>4<sp/>year<sp/>bitcoin<sp/>cycle?&apos;</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;apply<sp/>this<sp/>model<sp/>to<sp/>implement<sp/>and<sp/>test<sp/>a<sp/>trading<sp/>strategy<sp/>for<sp/>BTC&apos;</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Now<sp/>we<sp/>want<sp/>to<sp/>know<sp/>how<sp/>to<sp/>optimize<sp/>the<sp/>strategy:</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;what<sp/>can<sp/>I<sp/>try<sp/>to<sp/>optimize<sp/>market<sp/>return?&apos;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Experiment<sp/>with<sp/>different<sp/>values<sp/>of<sp/>changepoint_prior_scale.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Adjust<sp/>the<sp/>fourier_order<sp/>for<sp/>the<sp/>yearly<sp/>and<sp/>custom<sp/>4-year<sp/>seasonalities.</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Change<sp/>Seasonality<sp/>Modes,<sp/>can<sp/>be<sp/>either<sp/>&apos;additive&apos;<sp/>or<sp/>&apos;multiplicative&apos;</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>...</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Additionally<sp/>-<sp/>not<sp/>mentioned<sp/>by<sp/>o1-preview,<sp/>we<sp/>could<sp/>vary<sp/>the<sp/>4-year<sp/>cycle</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>We<sp/>show<sp/>how<sp/>fcmaes<sp/>Differential<sp/>Evolution<sp/>can<sp/>be<sp/>applied<sp/>to<sp/>optimize<sp/>these<sp/>parameters.<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>But<sp/>first<sp/>we<sp/>have<sp/>to<sp/>get<sp/>rid<sp/>of<sp/>the<sp/>Prophecy<sp/>log<sp/>messages,<sp/>since<sp/>they<sp/>interfere</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>with<sp/>the<sp/>log<sp/>messages<sp/>of<sp/>the<sp/>optimizer.<sp/>We<sp/>use<sp/>the<sp/>prompt:<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;how<sp/>to<sp/>supress<sp/>prophecy<sp/>log<sp/>messages?&apos;<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>resulting<sp/>code<sp/>is<sp/>shown<sp/>below.<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Notes:</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>Differential<sp/>Evolution<sp/>uses<sp/>contiuous<sp/>decision<sp/>variables,<sp/>so<sp/>we<sp/>have<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>convert<sp/>these<sp/>into<sp/>the<sp/>strategy<sp/>parameters<sp/>prposed<sp/>by<sp/>o1-preview<sp/>(see<sp/>convert_x)</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>The<sp/>boxed<sp/>boundaries<sp/>of<sp/>the<sp/>parameters<sp/>are<sp/>defined<sp/>by<sp/>the<sp/>line:</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds([0.001,<sp/>300,<sp/>3,<sp/>0],<sp/>[1,<sp/>1600,<sp/>12,<sp/>1])<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>may<sp/>ask<sp/>o1-preview<sp/>for<sp/>feasible<sp/>parameter<sp/>ranges.</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>On<sp/>an<sp/>AMD<sp/>9950x<sp/>16<sp/>core<sp/>processor<sp/>on<sp/>Linux<sp/>we<sp/>get<sp/>about<sp/>7<sp/>trading<sp/>simulations<sp/>per<sp/>second.</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>code<sp/>works<sp/>on<sp/>Windows,<sp/>but<sp/>is<sp/>significantly<sp/>slower.<sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>btc_eval_params<sp/>modifies<sp/>the<sp/>Dataframe<sp/>used<sp/>as<sp/>its<sp/>input<sp/>parameter.<sp/>How<sp/>does<sp/>this<sp/>work,<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>since<sp/>btc_eval_params<sp/>is<sp/>called<sp/>in<sp/>parallel?<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>fcmaes<sp/>&apos;de&apos;<sp/>uses<sp/>Python<sp/>multiprocessing,<sp/>so<sp/>each<sp/>Process<sp/>has<sp/>its<sp/>own<sp/>copy<sp/>of<sp/>the<sp/>Dataframe.</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>the<sp/>optimimal<sp/>period<sp/>is<sp/>535<sp/>days<sp/>which<sp/>is<sp/>inconsistent<sp/>with<sp/>the<sp/>assumed<sp/>4<sp/>year<sp/>cycle.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>After<sp/>some<sp/>hours<sp/>we<sp/>get<sp/>the<sp/>following<sp/>optimized<sp/>strategy<sp/>parameters:</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changepoint<sp/>prior<sp/>scale:<sp/>0.05</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period:<sp/>535.0</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourier<sp/>order:<sp/>8</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seasonality_mode:<sp/>additive</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Total<sp/>Market<sp/>Return:<sp/>15800.96%</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Total<sp/>Strategy<sp/>Return:<sp/>678644.32%</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Annualized<sp/>Sharpe<sp/>Ratio<sp/>of<sp/>the<sp/>Strategy:<sp/>2.03</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>May<sp/>be<sp/>there<sp/>is<sp/>some<sp/>overfitting<sp/>involved.<sp/>So<sp/>take<sp/>this<sp/>result<sp/>with<sp/>some<sp/>grain<sp/>of<sp/>salt.<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>tutorial<sp/>shows<sp/>how<sp/>to<sp/>automate<sp/>parameter<sp/>sweeping<sp/>using<sp/>parallel<sp/>optimization.<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>could<sp/>use<sp/>o1-preview<sp/>or<sp/>another<sp/>LLM<sp/>to<sp/>create<sp/>your<sp/>own<sp/>strategy<sp/>which<sp/>you<sp/>then</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>could<sp/>optimize<sp/>in<sp/>a<sp/>similar<sp/>manner.<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>What<sp/>if<sp/>we<sp/>ask<sp/>o1-preview<sp/>how<sp/>to<sp/>implement<sp/>optimization<sp/>of<sp/>the<sp/>strategy<sp/>parameters?</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>It<sp/>recommends<sp/>to<sp/>use<sp/>https://optuna.org/[Optuna]<sp/>which<sp/>indeed<sp/>is<sp/>a<sp/>very<sp/>good<sp/>choice.<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>We<sp/>tried<sp/>other<sp/>alternatives,<sp/>but<sp/>only<sp/>Optuna<sp/>successfully<sp/>parallelized<sp/>the<sp/>tranding<sp/>strategy</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>simulation.<sp/>Its<sp/>default<sp/>optimizer<sp/>(using<sp/>Parzen<sp/>Trees)<sp/>does<sp/>a<sp/>good<sp/>job,<sp/>comparable<sp/>to<sp/>what<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>fcmaes<sp/>DE<sp/>can<sp/>achieve:</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>Good<sp/>results<sp/>for<sp/>low<sp/>evaluation<sp/>counts.</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>Strange<sp/>slow-down<sp/>for<sp/>high<sp/>evaluation<sp/>counts<sp/>for<sp/>this<sp/>example.</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Other<sp/>Optuna<sp/>optimizers<sp/>(like<sp/>Bayesian<sp/>Optimization<sp/>and<sp/>CMA-ES)<sp/>don&apos;t<sp/>work<sp/>as<sp/>well.<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Optuna<sp/>has<sp/>a<sp/>valuable<sp/>feature:<sp/>A<sp/>https://github.com/optuna/optuna-dashboard[dashboard]</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>providing<sp/>real<sp/>time<sp/>insights<sp/>into<sp/>the<sp/>optimization<sp/>process.<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Fortunately<sp/>we<sp/>can<sp/>make<sp/>this<sp/>dashboard<sp/>work<sp/>also<sp/>for<sp/>fcmaes:</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>There<sp/>is<sp/>an<sp/>Optuna<sp/>journal<sp/>file<sp/>generating<sp/>wrapper<sp/>for<sp/>the<sp/>objective<sp/>function<sp/>used<sp/>by<sp/>fcmaes</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>optimizers.<sp/>Because<sp/>of<sp/>the<sp/>order<sp/>parallel<sp/>objective<sp/>function<sp/>evaluations<sp/>are<sp/>scheduled<sp/>by<sp/>fcmaes,</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>some<sp/>results<sp/>cannot<sp/>be<sp/>captured,<sp/>but<sp/>in<sp/>practice<sp/>the<sp/>dashboard<sp/>works<sp/>quite<sp/>well.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Instead<sp/>of<sp/>&quot;batches&quot;<sp/>a<sp/>more<sp/>sophisticated<sp/>parallelization<sp/>approach<sp/>is<sp/>implemented,<sp/>which<sp/>exploits<sp/>the<sp/>fact</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>that<sp/>objective<sp/>function<sp/>evaluations<sp/>can<sp/>require<sp/>vastly<sp/>different<sp/>execution<sp/>times.<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>So<sp/>evaluation<sp/>in<sp/>&quot;batches&quot;<sp/>would<sp/>cause<sp/>some<sp/>CPU<sp/>cores<sp/>to<sp/>idle<sp/>waiting<sp/>for<sp/>the<sp/>slow<sp/>ones.<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Using<sp/>fcmaes<sp/>ask/tell<sp/>interface<sp/>batch<sp/>evaluation<sp/>can<sp/>be<sp/>enforced<sp/>if<sp/>you<sp/>prefer<sp/>this.</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>yfinance<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>yf</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>prophet<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Prophet</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Suppress<sp/>log<sp/>messages<sp/>from<sp/>Prophet<sp/>and<sp/>its<sp/>dependencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="123"><highlight class="normal">logging.getLogger(</highlight><highlight class="stringliteral">&apos;prophet&apos;</highlight><highlight class="normal">).setLevel(logging.ERROR)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">logging.getLogger(</highlight><highlight class="stringliteral">&apos;cmdstanpy&apos;</highlight><highlight class="normal">).setLevel(logging.ERROR)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">logging.getLogger(</highlight><highlight class="stringliteral">&apos;pystan&apos;</highlight><highlight class="normal">).setLevel(logging.ERROR)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Remove<sp/>any<sp/>existing<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">logger<sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&apos;cmdstanpy&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>logger.hasHandlers():</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.handlers.clear()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Create<sp/>a<sp/>null<sp/>handler<sp/>to<sp/>absorb<sp/>logs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">null_handler<sp/>=<sp/>logging.NullHandler()</highlight></codeline>
<codeline lineno="134"><highlight class="normal">logger.addHandler(null_handler)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Suppress<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>warnings</highlight></codeline>
<codeline lineno="138"><highlight class="normal">warnings.filterwarnings(</highlight><highlight class="stringliteral">&apos;ignore&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">#<sp/>generated<sp/>by<sp/>o1-preview,<sp/>refactored<sp/>in<sp/>a<sp/>separate<sp/>method<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="namespaceexamples_1_1prophet__opt_1a43ce737dcffd73d540d9e21f70f783c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" kindref="member">load_data</ref>(symbol<sp/>=<sp/>&apos;BTC-USD&apos;,<sp/>start_date<sp/>=<sp/>&apos;2013-01-01&apos;,<sp/>end_date<sp/>=<sp/>&apos;2024-10-30&apos;):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>yf.download(symbol,<sp/>start=start_date,<sp/>end=end_date)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>data.columns<sp/>=<sp/>data.columns.get_level_values(0)<sp/></highlight><highlight class="comment">#<sp/>take<sp/>first<sp/>element<sp/>of<sp/>the<sp/>multi<sp/>index<sp/>column<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Prepare<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="namespaceexamples_1_1prophet__opt_1a7790ff1362e83048ddbf1967cb4488ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/>data.reset_index()[[</highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Adj<sp/>Close&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>df.rename(columns={</highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Adj<sp/>Close&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">},<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">].dt.tz_localize(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>remove<sp/>time-zone<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Handle<sp/>missing<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>df.dropna(inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">#<sp/>generated<sp/>by<sp/>o1-preview<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1a61ac51634dd7cfd9cf39a7947fcbd281" kindref="member">btc_strategy</ref>():</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/><ref refid="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" kindref="member">load_data</ref>()</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>the<sp/>Prophet<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>Prophet(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daily_seasonality=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weekly_seasonality=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yearly_seasonality=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">#<sp/>Keep<sp/>yearly<sp/>seasonality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changepoint_prior_scale=0.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Adjust<sp/>for<sp/>Bitcoin&apos;s<sp/>volatility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>custom<sp/>4-year<sp/>seasonality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>model.add_seasonality(</highlight></codeline>
<codeline lineno="170" refid="namespaceexamples_1_1prophet__opt_1a61ac51634dd7cfd9cf39a7947fcbd281" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&apos;four_year_cycle&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period=1461,<sp/><sp/></highlight><highlight class="comment">#<sp/>365.25<sp/>days<sp/>*<sp/>4<sp/>years<sp/>(accounting<sp/>for<sp/>leap<sp/>years)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourier_order=5</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Fit<sp/>the<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>model.fit(df)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>a<sp/>DataFrame<sp/>to<sp/>hold<sp/>predictions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>future<sp/>=<sp/>model.make_future_dataframe(periods=90)<sp/><sp/></highlight><highlight class="comment">#<sp/>Forecasting<sp/>the<sp/>next<sp/>90<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>forecast<sp/>=<sp/>model.predict(future)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>forecast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>model.plot(forecast)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&apos;Bitcoin<sp/>Price<sp/>Forecast<sp/>with<sp/>4-Year<sp/>Cycle&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(</highlight><highlight class="stringliteral">&apos;Price<sp/>(USD)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>components<sp/>to<sp/>see<sp/>the<sp/>effect<sp/>of<sp/>the<sp/>4-year<sp/>cycle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>model.plot_components(forecast)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Merge<sp/>the<sp/>forecast<sp/>with<sp/>the<sp/>original<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>forecast<sp/>=<sp/>forecast[[</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;yhat&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/>df.merge(forecast,<sp/>on=</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">,<sp/>how=</highlight><highlight class="stringliteral">&apos;left&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>the<sp/>daily<sp/>change<sp/>in<sp/>predicted<sp/>prices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;yhat_change&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;yhat&apos;</highlight><highlight class="normal">].diff()</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>a<sp/>threshold<sp/>for<sp/>generating<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;yhat_change&apos;</highlight><highlight class="normal">].<ref refid="namespacestd" kindref="compound">std</ref>()<sp/><sp/></highlight><highlight class="comment">#<sp/>Use<sp/>standard<sp/>deviation<sp/>as<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>the<sp/>signal<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;signal&apos;</highlight><highlight class="normal">]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>df.loc[df[</highlight><highlight class="stringliteral">&apos;yhat_change&apos;</highlight><highlight class="normal">]<sp/>&gt;<sp/>threshold,<sp/></highlight><highlight class="stringliteral">&apos;signal&apos;</highlight><highlight class="normal">]<sp/>=<sp/>1<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Buy<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>df.loc[df[</highlight><highlight class="stringliteral">&apos;yhat_change&apos;</highlight><highlight class="normal">]<sp/>&lt;<sp/>-threshold,<sp/></highlight><highlight class="stringliteral">&apos;signal&apos;</highlight><highlight class="normal">]<sp/>=<sp/>-1<sp/><sp/></highlight><highlight class="comment">#<sp/>Sell<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>daily<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;return&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">].pct_change()</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Shift<sp/>the<sp/>signal<sp/>by<sp/>1<sp/>day<sp/>to<sp/>simulate<sp/>trading<sp/>at<sp/>the<sp/>next<sp/>day&apos;s<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;strategy_return&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;signal&apos;</highlight><highlight class="normal">].shift(1)<sp/>*<sp/>df[</highlight><highlight class="stringliteral">&apos;return&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>cumulative<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;cumulative_market_return&apos;</highlight><highlight class="normal">]<sp/>=<sp/>(1<sp/>+<sp/>df[</highlight><highlight class="stringliteral">&apos;return&apos;</highlight><highlight class="normal">]).cumprod()</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;cumulative_strategy_return&apos;</highlight><highlight class="normal">]<sp/>=<sp/>(1<sp/>+<sp/>df[</highlight><highlight class="stringliteral">&apos;strategy_return&apos;</highlight><highlight class="normal">]).cumprod()</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1prophet__opt_1a8a4ce6e419eeaa24cd84dcbd0930f019" kindref="member">plot_df</ref>(df)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">#<sp/>generated<sp/>by<sp/>o1-preview,<sp/>refactored<sp/>in<sp/>a<sp/>separate<sp/>method<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1a8a4ce6e419eeaa24cd84dcbd0930f019" kindref="member">plot_df</ref>(df):</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>cumulative<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.figure(figsize=(14,<sp/>7))</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.plot(df[</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">],<sp/>df[</highlight><highlight class="stringliteral">&apos;cumulative_market_return&apos;</highlight><highlight class="normal">],<sp/>label=</highlight><highlight class="stringliteral">&apos;Market<sp/>Return&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.plot(df[</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">],<sp/>df[</highlight><highlight class="stringliteral">&apos;cumulative_strategy_return&apos;</highlight><highlight class="normal">],<sp/>label=</highlight><highlight class="stringliteral">&apos;Strategy<sp/>Return&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.legend()</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&apos;Cumulative<sp/>Returns:<sp/>Strategy<sp/>vs.<sp/>Market&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(</highlight><highlight class="stringliteral">&apos;Cumulative<sp/>Return&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>total<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>total_market_return<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;cumulative_market_return&apos;</highlight><highlight class="normal">].iloc[-1]<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>total_strategy_return<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;cumulative_strategy_return&apos;</highlight><highlight class="normal">].iloc[-1]<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="236" refid="namespaceexamples_1_1prophet__opt_1a8a4ce6e419eeaa24cd84dcbd0930f019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Total<sp/>Market<sp/>Return:<sp/>{total_market_return:.2%}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Total<sp/>Strategy<sp/>Return:<sp/>{total_strategy_return:.2%}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>signals<sp/>on<sp/>the<sp/>Bitcoin<sp/>price</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.figure(figsize=(14,<sp/>7))</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.plot(df[</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">],<sp/>df[</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">],<sp/>label=</highlight><highlight class="stringliteral">&apos;Bitcoin<sp/>Price&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>buy<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>buy_signals<sp/>=<sp/>df[df[</highlight><highlight class="stringliteral">&apos;signal&apos;</highlight><highlight class="normal">]<sp/>==<sp/>1]</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.scatter(buy_signals[</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">],<sp/>buy_signals[</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">],<sp/>marker=</highlight><highlight class="stringliteral">&apos;^&apos;</highlight><highlight class="normal">,<sp/>color=</highlight><highlight class="stringliteral">&apos;green&apos;</highlight><highlight class="normal">,<sp/>label=</highlight><highlight class="stringliteral">&apos;Buy<sp/>Signal&apos;</highlight><highlight class="normal">,<sp/>alpha=1)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>sell<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>sell_signals<sp/>=<sp/>df[df[</highlight><highlight class="stringliteral">&apos;signal&apos;</highlight><highlight class="normal">]<sp/>==<sp/>-1]</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.scatter(sell_signals[</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">],<sp/>sell_signals[</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">],<sp/>marker=</highlight><highlight class="stringliteral">&apos;v&apos;</highlight><highlight class="normal">,<sp/>color=</highlight><highlight class="stringliteral">&apos;red&apos;</highlight><highlight class="normal">,<sp/>label=</highlight><highlight class="stringliteral">&apos;Sell<sp/>Signal&apos;</highlight><highlight class="normal">,<sp/>alpha=1)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.legend()</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&apos;Trading<sp/>Signals<sp/>on<sp/>Bitcoin<sp/>Price&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(</highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(</highlight><highlight class="stringliteral">&apos;Price<sp/>(USD)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>Sharpe<sp/>Ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>strategy_returns<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;strategy_return&apos;</highlight><highlight class="normal">].dropna()</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>sharpe_ratio<sp/>=<sp/>(strategy_returns.mean()<sp/>/<sp/>strategy_returns.std())<sp/>*<sp/>np.sqrt(252)<sp/></highlight><highlight class="comment">#<sp/>Annualized<sp/>Sharpe<sp/>Ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Annualized<sp/>Sharpe<sp/>Ratio<sp/>of<sp/>the<sp/>Strategy:<sp/>{sharpe_ratio:.2f}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1aaef1882f68b34d7af026e8781098c1d5" kindref="member">btc_eval_params</ref>(df,<sp/>changepoint_prior_scale,<sp/>period,<sp/>fourier_order,<sp/>seasonality_mode):</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>the<sp/>Prophet<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>Prophet(</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seasonality_mode=seasonality_mode,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daily_seasonality=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weekly_seasonality=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yearly_seasonality=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">#<sp/>Keep<sp/>yearly<sp/>seasonality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changepoint_prior_scale=changepoint_prior_scale<sp/><sp/></highlight><highlight class="comment">#<sp/>Adjust<sp/>for<sp/>Bitcoin&apos;s<sp/>volatility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>custom<sp/>4-year<sp/>seasonality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>model.add_seasonality(</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&apos;four_year_cycle&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="278" refid="namespaceexamples_1_1prophet__opt_1aaef1882f68b34d7af026e8781098c1d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period=period,<sp/><sp/></highlight><highlight class="comment">#<sp/>365.25<sp/>days<sp/>*<sp/>4<sp/>years<sp/>(accounting<sp/>for<sp/>leap<sp/>years)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fourier_order=fourier_order</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Fit<sp/>the<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>model.fit(df)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>a<sp/>DataFrame<sp/>to<sp/>hold<sp/>predictions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>future<sp/>=<sp/>model.make_future_dataframe(periods=90)<sp/><sp/></highlight><highlight class="comment">#<sp/>Forecasting<sp/>the<sp/>next<sp/>90<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>forecast<sp/>=<sp/>model.predict(future)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Merge<sp/>the<sp/>forecast<sp/>with<sp/>the<sp/>original<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>forecast<sp/>=<sp/>forecast[[</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;yhat&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/>df.merge(forecast,<sp/>on=</highlight><highlight class="stringliteral">&apos;ds&apos;</highlight><highlight class="normal">,<sp/>how=</highlight><highlight class="stringliteral">&apos;left&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>the<sp/>daily<sp/>change<sp/>in<sp/>predicted<sp/>prices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;yhat_change&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;yhat&apos;</highlight><highlight class="normal">].diff()</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>a<sp/>threshold<sp/>for<sp/>generating<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;yhat_change&apos;</highlight><highlight class="normal">].<ref refid="namespacestd" kindref="compound">std</ref>()<sp/><sp/></highlight><highlight class="comment">#<sp/>Use<sp/>standard<sp/>deviation<sp/>as<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>the<sp/>signal<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;signal&apos;</highlight><highlight class="normal">]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>df.loc[df[</highlight><highlight class="stringliteral">&apos;yhat_change&apos;</highlight><highlight class="normal">]<sp/>&gt;<sp/>threshold,<sp/></highlight><highlight class="stringliteral">&apos;signal&apos;</highlight><highlight class="normal">]<sp/>=<sp/>1<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Buy<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>df.loc[df[</highlight><highlight class="stringliteral">&apos;yhat_change&apos;</highlight><highlight class="normal">]<sp/>&lt;<sp/>-threshold,<sp/></highlight><highlight class="stringliteral">&apos;signal&apos;</highlight><highlight class="normal">]<sp/>=<sp/>-1<sp/><sp/></highlight><highlight class="comment">#<sp/>Sell<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>daily<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;return&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">].pct_change()</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Shift<sp/>the<sp/>signal<sp/>by<sp/>1<sp/>day<sp/>to<sp/>simulate<sp/>trading<sp/>at<sp/>the<sp/>next<sp/>day&apos;s<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;strategy_return&apos;</highlight><highlight class="normal">]<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;signal&apos;</highlight><highlight class="normal">].shift(1)<sp/>*<sp/>df[</highlight><highlight class="stringliteral">&apos;return&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>cumulative<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;cumulative_market_return&apos;</highlight><highlight class="normal">]<sp/>=<sp/>(1<sp/>+<sp/>df[</highlight><highlight class="stringliteral">&apos;return&apos;</highlight><highlight class="normal">]).cumprod()</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;cumulative_strategy_return&apos;</highlight><highlight class="normal">]<sp/>=<sp/>(1<sp/>+<sp/>df[</highlight><highlight class="stringliteral">&apos;strategy_return&apos;</highlight><highlight class="normal">]).cumprod()</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>total<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>total_market_return<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;cumulative_market_return&apos;</highlight><highlight class="normal">].iloc[-1]<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>total_strategy_return<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;cumulative_strategy_return&apos;</highlight><highlight class="normal">].iloc[-1]<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(f&quot;Total<sp/>Market<sp/>Return:<sp/>{total_market_return:.2%}&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(f&quot;Total<sp/>Strategy<sp/>Return:<sp/>{total_strategy_return:.2%}&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Calculate<sp/>Sharpe<sp/>Ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>strategy_returns<sp/>=<sp/>df[</highlight><highlight class="stringliteral">&apos;strategy_return&apos;</highlight><highlight class="normal">].dropna()</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>sharpe_ratio<sp/>=<sp/>strategy_returns.mean()<sp/>/<sp/>strategy_returns.std()<sp/>*<sp/>np.sqrt(252)<sp/><sp/></highlight><highlight class="comment">#<sp/>Annualized<sp/>Sharpe<sp/>Ratio<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sharpe_ratio,<sp/>total_strategy_return,<sp/>total_market_return,<sp/>df</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1ae4e0f5b1e89fcbb3c76d779137998d54" kindref="member">btc_show_params</ref>(df,<sp/>changepoint_prior_scale,<sp/>period,<sp/>fourier_order,<sp/>seasonality_mode):</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>sharpe_ratio,<sp/>total_strategy_return,<sp/>total_market_return,<sp/>df<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1prophet__opt_1aaef1882f68b34d7af026e8781098c1d5" kindref="member">btc_eval_params</ref>(df,<sp/>changepoint_prior_scale,<sp/>period,<sp/>fourier_order,<sp/>seasonality_mode)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;changepoint<sp/>prior<sp/>scale:<sp/>{changepoint_prior_scale:.2f}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;period:<sp/>{period:.1f}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;fourier<sp/>order:<sp/>{fourier_order}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;seasonality_mode:<sp/>{seasonality_mode}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1prophet__opt_1a8a4ce6e419eeaa24cd84dcbd0930f019" kindref="member">plot_df</ref>(df)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">#<sp/>convert<sp/>the<sp/>continuous<sp/>decision<sp/>variable<sp/>vector<sp/>x<sp/>into<sp/>strategy<sp/>parameters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1a6de43eaac1a61a76257187d2827f2ece" kindref="member">convert_x</ref>(x):</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>changepoint_prior_scale<sp/>=<sp/>x[0]</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>period<sp/>=<sp/>int(x[1])</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>fourier_order<sp/>=<sp/>int(x[2])</highlight></codeline>
<codeline lineno="343" refid="namespaceexamples_1_1prophet__opt_1ae4e0f5b1e89fcbb3c76d779137998d54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>seasonality_mode<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;multiplicative&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>int(x[3])<sp/>&lt;<sp/>0.5<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;additive&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>changepoint_prior_scale,<sp/>period,<sp/>fourier_order,<sp/>seasonality_mode</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" kindref="member">btc_show_x</ref>(df,<sp/>x):</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>changepoint_prior_scale,<sp/>period,<sp/>fourier_order,<sp/>seasonality_mode<sp/>=<sp/><ref refid="namespaceexamples_1_1prophet__opt_1a6de43eaac1a61a76257187d2827f2ece" kindref="member">convert_x</ref>(x)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1prophet__opt_1ae4e0f5b1e89fcbb3c76d779137998d54" kindref="member">btc_show_params</ref>(df,<sp/>changepoint_prior_scale,<sp/>period,<sp/>fourier_order,<sp/>seasonality_mode)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>functools<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>partial</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="353" refid="namespaceexamples_1_1prophet__opt_1a6de43eaac1a61a76257187d2827f2ece" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>de,<sp/>decpp,<sp/>evaluator</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>wrapper</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1journal" kindref="compound">fcmaes.journal</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Journal,<sp/>journal_wrapper</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1ab552129c694447ce6fc44ad3f49825e9" kindref="member">fitness</ref>(df,<sp/>x):</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>changepoint_prior_scale,<sp/>period,<sp/>fourier_order,<sp/>seasonality_mode<sp/>=<sp/><ref refid="namespaceexamples_1_1prophet__opt_1a6de43eaac1a61a76257187d2827f2ece" kindref="member">convert_x</ref>(x)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>use<sp/>only<sp/>negative<sp/>sharpe<sp/>ratio<sp/>-<sp/>we<sp/>want<sp/>to<sp/>maximize<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="namespaceexamples_1_1prophet__opt_1aaef1882f68b34d7af026e8781098c1d5" kindref="member">btc_eval_params</ref>(df,<sp/>changepoint_prior_scale,<sp/>period,<sp/>fourier_order,<sp/>seasonality_mode)[0]</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1a89edb34f6787ecf7671d592512524b7f" kindref="member">optimize_btc</ref>():<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.remove()</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/><ref refid="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" kindref="member">load_data</ref>()</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="classfcmaes_1_1optimizer_1_1wrapper" kindref="compound">wrapper</ref>(partial(fitness,<sp/>df))</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds([0.001,<sp/>300,<sp/>3,<sp/>0],<sp/>[1,<sp/>1600,<sp/>11.999,<sp/>1.0])<sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>len(bounds.lb)</highlight></codeline>
<codeline lineno="371" refid="namespaceexamples_1_1prophet__opt_1ab552129c694447ce6fc44ad3f49825e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>batch_size<sp/>=<sp/>16</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>study_id<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>using<sp/>journal<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="classfcmaes_1_1journal_1_1journal__wrapper" kindref="compound">journal_wrapper</ref>(fit,<sp/>bounds,<sp/></highlight><highlight class="stringliteral">&quot;journal.log&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BTC_strategy&quot;</highlight><highlight class="normal">,<sp/>study_id,<sp/>batch_size)</highlight></codeline>
<codeline lineno="376" refid="namespaceexamples_1_1prophet__opt_1a89edb34f6787ecf7671d592512524b7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>de.minimize(fit,<sp/>dim,<sp/>bounds,<sp/>popsize<sp/>=<sp/>batch_size,<sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations=10000,<sp/>workers=batch_size)<sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" kindref="member">btc_show_x</ref>(df,<sp/>result.x)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1a6036ff4e616cbf09671db7d938061190" kindref="member">optimize_btc_ask_tell</ref>():<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.remove()</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/><ref refid="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" kindref="member">load_data</ref>()</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="classfcmaes_1_1optimizer_1_1wrapper" kindref="compound">wrapper</ref>(partial(fitness,<sp/>df))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds([0.001,<sp/>300,<sp/>3,<sp/>0],<sp/>[1,<sp/>1600,<sp/>11.999,<sp/>1.0])<sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>len(bounds.lb)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>batch_size<sp/>=<sp/>16</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>study_id<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>using<sp/>ask<sp/>/<sp/>tell<sp/>interface<sp/>+<sp/>journal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>journal<sp/>=<sp/><ref refid="classfcmaes_1_1journal_1_1_journal" kindref="compound">Journal</ref>(</highlight><highlight class="stringliteral">&quot;journal2.log&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BTC_strategy&quot;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="394" refid="namespaceexamples_1_1prophet__opt_1a6036ff4e616cbf09671db7d938061190" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pfit<sp/>=<sp/><ref refid="classfcmaes_1_1evaluator_1_1parallel" kindref="compound">evaluator.parallel</ref>(fit,<sp/>workers=batch_size)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>es<sp/>=<sp/><ref refid="classfcmaes_1_1de_1_1_d_e" kindref="compound">de.DE</ref>(dim,<sp/>bounds<sp/>=<sp/>bounds,<sp/>popsize=batch_size)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>iters<sp/>=<sp/>10000</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>trial_id<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>iter<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(iters):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>journal.write_starts(study_id,<sp/>batch_size)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>es.ask()</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>journal.write_xs(trial_id,<sp/>xs,<sp/>bounds)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>pfit(xs)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>journal.write_ys(trial_id,<sp/>ys)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trial_id<sp/>+=<sp/>batch_size</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>es.tell(ys)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stop<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>es.best_x</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>es.best_value</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" kindref="member">btc_show_x</ref>(df,<sp/>x)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1prophet__opt_1ae9fc3dd94248f2146ad53fcf139d55fb" kindref="member">show_good_result</ref>():</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Total<sp/>Market<sp/>Return:<sp/>15800.96%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Total<sp/>Strategy<sp/>Return:<sp/>708605.56%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Annualized<sp/>Sharpe<sp/>Ratio<sp/>of<sp/>the<sp/>Strategy:<sp/>2.02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>[0.05398682129917759,<sp/>534.0752343371352,<sp/>8.880921187256302,<sp/>1.0]</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/><ref refid="namespaceexamples_1_1prophet__opt_1a7549217e0180b68ae1bd365ca7287fe4" kindref="member">load_data</ref>()</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="namespaceexamples_1_1prophet__opt_1ab552129c694447ce6fc44ad3f49825e9" kindref="member">fitness</ref>(df,<sp/>x)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1prophet__opt_1a18a248c54de45c4841f27809e3a642b1" kindref="member">btc_show_x</ref>(df,<sp/>x)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#btc_strategy()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#optimize_btc()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#optimize_btc_ask_tell()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1prophet__opt_1ae9fc3dd94248f2146ad53fcf139d55fb" kindref="member">show_good_result</ref>()</highlight></codeline>
<codeline lineno="428" refid="namespaceexamples_1_1prophet__opt_1ae9fc3dd94248f2146ad53fcf139d55fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/prophet_opt.py"/>
  </compounddef>
</doxygen>

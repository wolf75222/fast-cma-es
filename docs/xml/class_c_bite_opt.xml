<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_c_bite_opt" kind="class" language="C++" prot="public">
    <compoundname>CBiteOpt</compoundname>
    <basecompoundref refid="class_c_bite_opt_base" prot="public" virt="non-virtual">CBiteOptBase&lt; int64_t &gt;</basecompoundref>
    <derivedcompoundref refid="class_c_bite_opt_deep_1_1_c_bite_opt_wrap" prot="public" virt="non-virtual">CBiteOptDeep::CBiteOptWrap</derivedcompoundref>
    <includes refid="biteopt_8h" local="no">biteopt.h</includes>
    <innerclass refid="class_c_bite_opt_1_1_c_par_opt" prot="protected">CBiteOpt::CParOpt</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_c_bite_opt_1a80651b5ffb10feccb67729f4c472a5dd" prot="public" static="no">
        <type>int64_t</type>
        <definition>typedef int64_t CBiteOpt::ptype</definition>
        <argsstring></argsstring>
        <name>ptype</name>
        <qualifiedname>CBiteOpt::ptype</qualifiedname>
        <briefdescription>
<para>signed integer type, same as <ref refid="class_c_bite_opt_base" kindref="compound">CBiteOptBase</ref> template parameter). </para>
        </briefdescription>
        <detaileddescription>
<para>Parameter value storage type (should be a </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="49" column="17" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="49" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_bite_opt_1a91a52c9eab07a265fce92f0ba0ec0d03" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::MethodSel</definition>
        <argsstring></argsstring>
        <name>MethodSel</name>
        <qualifiedname>CBiteOpt::MethodSel</qualifiedname>
        <briefdescription>
<para>Population generator 4-method selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="423" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="423" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a03f51391b90a59f023178008e3d27746" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::M1Sel</definition>
        <argsstring></argsstring>
        <name>M1Sel</name>
        <qualifiedname>CBiteOpt::M1Sel</qualifiedname>
        <briefdescription>
<para>Method 1&apos;s sub-method selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="424" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="424" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a3af3717f98de343325970c75aca0845c" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 3 &gt;</type>
        <definition>CBiteSel&lt; 3 &gt; CBiteOpt::M1ASel</definition>
        <argsstring></argsstring>
        <name>M1ASel</name>
        <qualifiedname>CBiteOpt::M1ASel</qualifiedname>
        <briefdescription>
<para>Method 1&apos;s sub-sub-method A selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="425" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="425" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a7e0f0eb4591c8c8f0a0147324e91e9e1" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::M1BSel</definition>
        <argsstring></argsstring>
        <name>M1BSel</name>
        <qualifiedname>CBiteOpt::M1BSel</qualifiedname>
        <briefdescription>
<para>Method 1&apos;s sub-sub-method B selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="426" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="426" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a19ae8f821f9f26a9c0e01870bad6c42a" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::M1CSel</definition>
        <argsstring></argsstring>
        <name>M1CSel</name>
        <qualifiedname>CBiteOpt::M1CSel</qualifiedname>
        <briefdescription>
<para>Method 1&apos;s sub-sub-method C selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="427" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="427" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a7d27a27405a83e13d6674d22e22c4f4f" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::M2Sel</definition>
        <argsstring></argsstring>
        <name>M2Sel</name>
        <qualifiedname>CBiteOpt::M2Sel</qualifiedname>
        <briefdescription>
<para>Method 2&apos;s sub-method selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="428" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="428" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a7f28d33448459a4a860f6df420333afc" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::M2BSel</definition>
        <argsstring></argsstring>
        <name>M2BSel</name>
        <qualifiedname>CBiteOpt::M2BSel</qualifiedname>
        <briefdescription>
<para>Method 2&apos;s sub-sub-method B selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="429" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="429" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1acac20a0af0c58f4aa58fb20bf4be11d5" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::PopChangeIncrSel</definition>
        <argsstring></argsstring>
        <name>PopChangeIncrSel</name>
        <qualifiedname>CBiteOpt::PopChangeIncrSel</qualifiedname>
        <briefdescription>
<para>selector. </para>
        </briefdescription>
        <detaileddescription>
<para>Population size change increase </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="430" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="430" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1acd43fdffae9a65684c1436aaee087fd1" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::PopChangeDecrSel</definition>
        <argsstring></argsstring>
        <name>PopChangeDecrSel</name>
        <qualifiedname>CBiteOpt::PopChangeDecrSel</qualifiedname>
        <briefdescription>
<para>selector. </para>
        </briefdescription>
        <detaileddescription>
<para>Population size change decrease </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="432" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="432" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a1926decbab37c16bdf14787724e875d6" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::ParOpt2Sel</definition>
        <argsstring></argsstring>
        <name>ParOpt2Sel</name>
        <qualifiedname>CBiteOpt::ParOpt2Sel</qualifiedname>
        <briefdescription>
<para>Parallel optimizer 2 use selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="434" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="434" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" compoundref="biteopt_8h" startline="1370" endline="1427">generateSolPar</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a47f66536806d836d1ec0ee5926995c0d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::ParPopPSel[4]</definition>
        <argsstring>[4]</argsstring>
        <name>ParPopPSel</name>
        <qualifiedname>CBiteOpt::ParPopPSel</qualifiedname>
        <briefdescription>
<para>probability selectors. </para>
        </briefdescription>
        <detaileddescription>
<para>Parallel population use </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="435" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="435" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a344271b2490d03eaa0c8e1ab062d916d" compoundref="biteopt_8h" startline="531" endline="539">selectParPop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a7c38e45fe68be8f7f9e6cbb4f1ec7e50" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::AltPopPSel</definition>
        <argsstring></argsstring>
        <name>AltPopPSel</name>
        <qualifiedname>CBiteOpt::AltPopPSel</qualifiedname>
        <briefdescription>
<para>Alternative population use selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="437" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="437" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1ab98060db69130d7610818bddda8c7115" compoundref="biteopt_8h" startline="549" endline="570">selectAltPop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1abdbe1b2dca3680429d01e33ad78e0588" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::AltPopSel[4]</definition>
        <argsstring>[4]</argsstring>
        <name>AltPopSel</name>
        <qualifiedname>CBiteOpt::AltPopSel</qualifiedname>
        <briefdescription>
<para>selectors. </para>
        </briefdescription>
        <detaileddescription>
<para>Alternative population type use </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="438" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="438" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1ab98060db69130d7610818bddda8c7115" compoundref="biteopt_8h" startline="549" endline="570">selectAltPop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a1f08554f3c3fffb89fafd91104d6ac5d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::MinSolPwrSel[4]</definition>
        <argsstring>[4]</argsstring>
        <name>MinSolPwrSel</name>
        <qualifiedname>CBiteOpt::MinSolPwrSel</qualifiedname>
        <briefdescription>
<para>least-cost population index selection. </para>
        </briefdescription>
        <detaileddescription>
<para>Power factor selectors, for </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="440" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="440" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1af25cdfb71a0ad9081148c31da58fe949" compoundref="biteopt_8h" startline="581" endline="590">getMinSolIndex</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a26719d83668ff3b3cce919878c358967" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::MinSolMulSel[4]</definition>
        <argsstring>[4]</argsstring>
        <name>MinSolMulSel</name>
        <qualifiedname>CBiteOpt::MinSolMulSel</qualifiedname>
        <briefdescription>
<para>least-cost population index selection. </para>
        </briefdescription>
        <detaileddescription>
<para>Multiplier selectors, for </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="442" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="442" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1af25cdfb71a0ad9081148c31da58fe949" compoundref="biteopt_8h" startline="581" endline="590">getMinSolIndex</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1aabfab1d71a0563959f94970b250c5df9" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::Gen1AllpSel</definition>
        <argsstring></argsstring>
        <name>Gen1AllpSel</name>
        <qualifiedname>CBiteOpt::Gen1AllpSel</qualifiedname>
        <briefdescription>
<para>Generator method 1&apos;s Allp selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="444" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="444" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" compoundref="biteopt_8h" startline="598" endline="682">generateSol1</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a4cb14ff23736a5a74987504f94f1bf4b" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::Gen1MoveAsyncSel</definition>
        <argsstring></argsstring>
        <name>Gen1MoveAsyncSel</name>
        <qualifiedname>CBiteOpt::Gen1MoveAsyncSel</qualifiedname>
        <briefdescription>
<para>selector. </para>
        </briefdescription>
        <detaileddescription>
<para>Generator method 1&apos;s Move async </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="445" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="445" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" compoundref="biteopt_8h" startline="598" endline="682">generateSol1</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a88b8c7fcc43de72d390950fbfdc86cad" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::Gen1MoveSpanSel</definition>
        <argsstring></argsstring>
        <name>Gen1MoveSpanSel</name>
        <qualifiedname>CBiteOpt::Gen1MoveSpanSel</qualifiedname>
        <briefdescription>
<para>selector. </para>
        </briefdescription>
        <detaileddescription>
<para>Generator method 1&apos;s Move span </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="447" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="447" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" compoundref="biteopt_8h" startline="598" endline="682">generateSol1</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1aa05a9c04ac6d2a2ec6b679abd789df64" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::Gen2ModeSel</definition>
        <argsstring></argsstring>
        <name>Gen2ModeSel</name>
        <qualifiedname>CBiteOpt::Gen2ModeSel</qualifiedname>
        <briefdescription>
<para>Generator method 2&apos;s Mode selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="449" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="449" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1ab6de0da3b279e77788efed7d3e05a0e2" compoundref="biteopt_8h" startline="690" endline="732">generateSol2</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a8d6a5b4fd019d8aa73529c1fda6e91d5" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::Gen2bModeSel</definition>
        <argsstring></argsstring>
        <name>Gen2bModeSel</name>
        <qualifiedname>CBiteOpt::Gen2bModeSel</qualifiedname>
        <briefdescription>
<para>Generator method 2b&apos;s Mode selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="450" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="450" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1abd6c435c82a97476332139663d9a1c82" compoundref="biteopt_8h" startline="738" endline="779">generateSol2b</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a96dbb17248d735d60d10b6ef4be3b7c5" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::Gen2cModeSel</definition>
        <argsstring></argsstring>
        <name>Gen2cModeSel</name>
        <qualifiedname>CBiteOpt::Gen2cModeSel</qualifiedname>
        <briefdescription>
<para>Generator method 2c&apos;s Mode selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="451" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="451" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2363863090db7154792f78ec46abcf47" compoundref="biteopt_8h" startline="786" endline="886">generateSol2c</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a1db3ecb43fe42f89db5b8dc1644baad6" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::Gen2dModeSel</definition>
        <argsstring></argsstring>
        <name>Gen2dModeSel</name>
        <qualifiedname>CBiteOpt::Gen2dModeSel</qualifiedname>
        <briefdescription>
<para>Generator method 2d&apos;s Mode selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="452" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="452" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a76fa9d8bf4abde13b69e06761acc82f5" compoundref="biteopt_8h" startline="893" endline="933">generateSol2d</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1abe8a0cedf383e8d0b272e779c2c8c6a4" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::Gen3ModeSel</definition>
        <argsstring></argsstring>
        <name>Gen3ModeSel</name>
        <qualifiedname>CBiteOpt::Gen3ModeSel</qualifiedname>
        <briefdescription>
<para>Generator method 3&apos;s Mode selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="453" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="453" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a2babc6c08dad9718d349683242805bc0" compoundref="biteopt_8h" startline="941" endline="974">generateSol3</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1adf6acc728abfdec9b464d4a3c37b6a82" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::Gen4MixFacSel</definition>
        <argsstring></argsstring>
        <name>Gen4MixFacSel</name>
        <qualifiedname>CBiteOpt::Gen4MixFacSel</qualifiedname>
        <briefdescription>
<para>selector. </para>
        </briefdescription>
        <detaileddescription>
<para>Generator method 4&apos;s mixing count </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="454" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="454" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1ae48399aea9fc3c2e01b370b846d88c82" compoundref="biteopt_8h" startline="983" endline="1017">generateSol4</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1af0f831fa6f9105ecab62be7bbb2c79b8" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::Gen5bModeSel</definition>
        <argsstring></argsstring>
        <name>Gen5bModeSel</name>
        <qualifiedname>CBiteOpt::Gen5bModeSel</qualifiedname>
        <briefdescription>
<para>Generator method 5b&apos;s Mode selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="456" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="456" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1aac1bd4dd832e20880872b94b07773946" compoundref="biteopt_8h" startline="1068" endline="1115">generateSol5b</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1aad5bacfdff08b09d2834231c17bab4a2" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::Gen7PowFacSel</definition>
        <argsstring></argsstring>
        <name>Gen7PowFacSel</name>
        <qualifiedname>CBiteOpt::Gen7PowFacSel</qualifiedname>
        <briefdescription>
<para>Generator method 7&apos;s Power selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="457" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="457" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a6766fe9d56bee1f623d297b2f9cf8500" compoundref="biteopt_8h" startline="1167" endline="1191">generateSol7</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a44981d73146ac3b77f4c7283af776473" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 2 &gt;</type>
        <definition>CBiteSel&lt; 2 &gt; CBiteOpt::Gen8ModeSel</definition>
        <argsstring></argsstring>
        <name>Gen8ModeSel</name>
        <qualifiedname>CBiteOpt::Gen8ModeSel</qualifiedname>
        <briefdescription>
<para>Generator method 8&apos;s mode selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="458" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="458" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a332b03425de84b8ef8eb362af8e75e78" compoundref="biteopt_8h" startline="1201" endline="1272">generateSol8</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1af4e31b724cbc2a4e859ebd205e5cfd25" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::Gen8NumSel</definition>
        <argsstring></argsstring>
        <name>Gen8NumSel</name>
        <qualifiedname>CBiteOpt::Gen8NumSel</qualifiedname>
        <briefdescription>
<para>Generator method 8&apos;s NumSols selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="459" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="459" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a332b03425de84b8ef8eb362af8e75e78" compoundref="biteopt_8h" startline="1201" endline="1272">generateSol8</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1ada28884009d78c2651d1b68dd3f6e1ba" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CBiteOpt::Gen8SpanSel[2]</definition>
        <argsstring>[2]</argsstring>
        <name>Gen8SpanSel</name>
        <qualifiedname>CBiteOpt::Gen8SpanSel</qualifiedname>
        <briefdescription>
<para>selectors. </para>
        </briefdescription>
        <detaileddescription>
<para>Generator method 8&apos;s random span </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="460" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="460" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</referencedby>
        <referencedby refid="class_c_bite_opt_1a332b03425de84b8ef8eb362af8e75e78" compoundref="biteopt_8h" startline="1201" endline="1272">generateSol8</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a7c347ab2966fe6e79a9022fb136d25fc" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_pop" kindref="compound">CBitePop</ref></type>
        <definition>CBitePop CBiteOpt::OldPop</definition>
        <argsstring></argsstring>
        <name>OldPop</name>
        <qualifiedname>CBiteOpt::OldPop</qualifiedname>
        <briefdescription>
<para>probabilistically. </para>
        </briefdescription>
        <detaileddescription>
<para>Population of older solutions, updated </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="462" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="462" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a76fa9d8bf4abde13b69e06761acc82f5" compoundref="biteopt_8h" startline="893" endline="933">generateSol2d</referencedby>
        <referencedby refid="class_c_bite_opt_1a6766fe9d56bee1f623d297b2f9cf8500" compoundref="biteopt_8h" startline="1167" endline="1191">generateSol7</referencedby>
        <referencedby refid="class_c_bite_opt_1a24a8733fc9dbb2c7e314b699fc360d7b" compoundref="biteopt_8h" startline="144" endline="201">init</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
        <referencedby refid="class_c_bite_opt_1a73dc570985bec54dc288690c31a8d8c7" compoundref="biteopt_8h" startline="110" endline="131">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1af14783d4853d9e7e207f00788583a42e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CBiteOpt::DoInitEvals</definition>
        <argsstring></argsstring>
        <name>DoInitEvals</name>
        <qualifiedname>CBiteOpt::DoInitEvals</qualifiedname>
        <briefdescription>
<para>&quot;True&quot; if initial evaluations should be performed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="464" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="464" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1a24a8733fc9dbb2c7e314b699fc360d7b" compoundref="biteopt_8h" startline="144" endline="201">init</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1ae7df30b17e5821498b7284e182425cdf" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CBiteOpt::DoEval</definition>
        <argsstring></argsstring>
        <name>DoEval</name>
        <qualifiedname>CBiteOpt::DoEval</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Temporary variable which equals to &quot;true&quot; if the newly-generated solution should be evaluated via the <ref refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d" kindref="member">optcost()</ref> function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="465" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="465" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" compoundref="biteopt_8h" startline="1370" endline="1427">generateSolPar</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a764c6c8faa178116999c26b3866f8189" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOpt::NewCost</definition>
        <argsstring></argsstring>
        <name>NewCost</name>
        <qualifiedname>CBiteOpt::NewCost</qualifiedname>
        <briefdescription>
<para>value (cost). </para>
        </briefdescription>
        <detaileddescription>
<para>Temporary variable that receives objective function&apos;s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="468" column="8" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="468" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" compoundref="biteopt_8h" startline="1370" endline="1427">generateSolPar</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1aa2ca8983a05dc599ff5a5f47d3af16b4" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_opt_1_1_c_par_opt" kindref="compound">CParOpt</ref>&lt; <ref refid="class_c_spher_opt" kindref="compound">CSpherOpt</ref> &gt;</type>
        <definition>CParOpt&lt; CSpherOpt &gt; CBiteOpt::ParOpt</definition>
        <argsstring></argsstring>
        <name>ParOpt</name>
        <qualifiedname>CBiteOpt::ParOpt</qualifiedname>
        <briefdescription>
<para>Parallel optimizer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="497" column="9" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="497" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" compoundref="biteopt_8h" startline="1370" endline="1427">generateSolPar</referencedby>
        <referencedby refid="class_c_bite_opt_1a24a8733fc9dbb2c7e314b699fc360d7b" compoundref="biteopt_8h" startline="144" endline="201">init</referencedby>
        <referencedby refid="class_c_bite_opt_1a73dc570985bec54dc288690c31a8d8c7" compoundref="biteopt_8h" startline="110" endline="131">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a93a88d27436aa1660edea574fea346ef" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_pop" kindref="compound">CBitePop</ref></type>
        <definition>CBitePop CBiteOpt::ParOptPop</definition>
        <argsstring></argsstring>
        <name>ParOptPop</name>
        <qualifiedname>CBiteOpt::ParOptPop</qualifiedname>
        <briefdescription>
<para>Includes only its solutions. </para>
        </briefdescription>
        <detaileddescription>
<para>Population of parallel optimizer&apos;s solutions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="498" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="498" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" compoundref="biteopt_8h" startline="1370" endline="1427">generateSolPar</referencedby>
        <referencedby refid="class_c_bite_opt_1a24a8733fc9dbb2c7e314b699fc360d7b" compoundref="biteopt_8h" startline="144" endline="201">init</referencedby>
        <referencedby refid="class_c_bite_opt_1ab98060db69130d7610818bddda8c7115" compoundref="biteopt_8h" startline="549" endline="570">selectAltPop</referencedby>
        <referencedby refid="class_c_bite_opt_1a73dc570985bec54dc288690c31a8d8c7" compoundref="biteopt_8h" startline="110" endline="131">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1a2ddf8b2ba7691dc249b50baab668a5c8" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_opt_1_1_c_par_opt" kindref="compound">CParOpt</ref>&lt; <ref refid="class_c_n_m_seq_opt" kindref="compound">CNMSeqOpt</ref> &gt;</type>
        <definition>CParOpt&lt; CNMSeqOpt &gt; CBiteOpt::ParOpt2</definition>
        <argsstring></argsstring>
        <name>ParOpt2</name>
        <qualifiedname>CBiteOpt::ParOpt2</qualifiedname>
        <briefdescription>
<para>Parallel optimizer2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="500" column="9" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="500" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" compoundref="biteopt_8h" startline="1370" endline="1427">generateSolPar</referencedby>
        <referencedby refid="class_c_bite_opt_1a24a8733fc9dbb2c7e314b699fc360d7b" compoundref="biteopt_8h" startline="144" endline="201">init</referencedby>
        <referencedby refid="class_c_bite_opt_1a73dc570985bec54dc288690c31a8d8c7" compoundref="biteopt_8h" startline="110" endline="131">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1afb37a6bb1eacba21280536ee17511830" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_pop" kindref="compound">CBitePop</ref></type>
        <definition>CBitePop CBiteOpt::ParOpt2Pop</definition>
        <argsstring></argsstring>
        <name>ParOpt2Pop</name>
        <qualifiedname>CBiteOpt::ParOpt2Pop</qualifiedname>
        <briefdescription>
<para>Includes only its solutions. </para>
        </briefdescription>
        <detaileddescription>
<para>Population of parallel optimizer 2&apos;s solutions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="501" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="501" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" compoundref="biteopt_8h" startline="1370" endline="1427">generateSolPar</referencedby>
        <referencedby refid="class_c_bite_opt_1a24a8733fc9dbb2c7e314b699fc360d7b" compoundref="biteopt_8h" startline="144" endline="201">init</referencedby>
        <referencedby refid="class_c_bite_opt_1ab98060db69130d7610818bddda8c7115" compoundref="biteopt_8h" startline="549" endline="570">selectAltPop</referencedby>
        <referencedby refid="class_c_bite_opt_1a73dc570985bec54dc288690c31a8d8c7" compoundref="biteopt_8h" startline="110" endline="131">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_1ab3a911c7924b1a55c9a38365ea1e60ef" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteOpt::UseParOpt</definition>
        <argsstring></argsstring>
        <name>UseParOpt</name>
        <qualifiedname>CBiteOpt::UseParOpt</qualifiedname>
        <briefdescription>
<para>Parallel optimizer currently being in use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="503" column="5" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="503" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" compoundref="biteopt_8h" startline="1370" endline="1427">generateSolPar</referencedby>
        <referencedby refid="class_c_bite_opt_1a24a8733fc9dbb2c7e314b699fc360d7b" compoundref="biteopt_8h" startline="144" endline="201">init</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBiteOpt::CBiteOpt</definition>
        <argsstring>()</argsstring>
        <name>CBiteOpt</name>
        <qualifiedname>CBiteOpt::CBiteOpt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="52" column="1" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="52" bodyend="98"/>
        <references refid="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" compoundref="biteaux_8h" startline="1859" endline="1864">CBiteOptBase&lt; int64_t &gt;::addSel</references>
        <references refid="class_c_bite_opt_1a7c38e45fe68be8f7f9e6cbb4f1ec7e50" compoundref="biteopt_8h" startline="437">AltPopPSel</references>
        <references refid="class_c_bite_opt_1abdbe1b2dca3680429d01e33ad78e0588" compoundref="biteopt_8h" startline="438">AltPopSel</references>
        <references refid="class_c_bite_opt_1aabfab1d71a0563959f94970b250c5df9" compoundref="biteopt_8h" startline="444">Gen1AllpSel</references>
        <references refid="class_c_bite_opt_1a4cb14ff23736a5a74987504f94f1bf4b" compoundref="biteopt_8h" startline="445">Gen1MoveAsyncSel</references>
        <references refid="class_c_bite_opt_1a88b8c7fcc43de72d390950fbfdc86cad" compoundref="biteopt_8h" startline="447">Gen1MoveSpanSel</references>
        <references refid="class_c_bite_opt_1a8d6a5b4fd019d8aa73529c1fda6e91d5" compoundref="biteopt_8h" startline="450">Gen2bModeSel</references>
        <references refid="class_c_bite_opt_1a96dbb17248d735d60d10b6ef4be3b7c5" compoundref="biteopt_8h" startline="451">Gen2cModeSel</references>
        <references refid="class_c_bite_opt_1a1db3ecb43fe42f89db5b8dc1644baad6" compoundref="biteopt_8h" startline="452">Gen2dModeSel</references>
        <references refid="class_c_bite_opt_1aa05a9c04ac6d2a2ec6b679abd789df64" compoundref="biteopt_8h" startline="449">Gen2ModeSel</references>
        <references refid="class_c_bite_opt_1abe8a0cedf383e8d0b272e779c2c8c6a4" compoundref="biteopt_8h" startline="453">Gen3ModeSel</references>
        <references refid="class_c_bite_opt_1adf6acc728abfdec9b464d4a3c37b6a82" compoundref="biteopt_8h" startline="454">Gen4MixFacSel</references>
        <references refid="class_c_bite_opt_1af0f831fa6f9105ecab62be7bbb2c79b8" compoundref="biteopt_8h" startline="456">Gen5bModeSel</references>
        <references refid="class_c_bite_opt_1aad5bacfdff08b09d2834231c17bab4a2" compoundref="biteopt_8h" startline="457">Gen7PowFacSel</references>
        <references refid="class_c_bite_opt_1a44981d73146ac3b77f4c7283af776473" compoundref="biteopt_8h" startline="458">Gen8ModeSel</references>
        <references refid="class_c_bite_opt_1af4e31b724cbc2a4e859ebd205e5cfd25" compoundref="biteopt_8h" startline="459">Gen8NumSel</references>
        <references refid="class_c_bite_opt_1ada28884009d78c2651d1b68dd3f6e1ba" compoundref="biteopt_8h" startline="460">Gen8SpanSel</references>
        <references refid="class_c_bite_opt_1a3af3717f98de343325970c75aca0845c" compoundref="biteopt_8h" startline="425">M1ASel</references>
        <references refid="class_c_bite_opt_1a7e0f0eb4591c8c8f0a0147324e91e9e1" compoundref="biteopt_8h" startline="426">M1BSel</references>
        <references refid="class_c_bite_opt_1a19ae8f821f9f26a9c0e01870bad6c42a" compoundref="biteopt_8h" startline="427">M1CSel</references>
        <references refid="class_c_bite_opt_1a03f51391b90a59f023178008e3d27746" compoundref="biteopt_8h" startline="424">M1Sel</references>
        <references refid="class_c_bite_opt_1a7f28d33448459a4a860f6df420333afc" compoundref="biteopt_8h" startline="429">M2BSel</references>
        <references refid="class_c_bite_opt_1a7d27a27405a83e13d6674d22e22c4f4f" compoundref="biteopt_8h" startline="428">M2Sel</references>
        <references refid="class_c_bite_opt_1a91a52c9eab07a265fce92f0ba0ec0d03" compoundref="biteopt_8h" startline="423">MethodSel</references>
        <references refid="class_c_bite_opt_1a26719d83668ff3b3cce919878c358967" compoundref="biteopt_8h" startline="442">MinSolMulSel</references>
        <references refid="class_c_bite_opt_1a1f08554f3c3fffb89fafd91104d6ac5d" compoundref="biteopt_8h" startline="440">MinSolPwrSel</references>
        <references refid="class_c_bite_opt_1a1926decbab37c16bdf14787724e875d6" compoundref="biteopt_8h" startline="434">ParOpt2Sel</references>
        <references refid="class_c_bite_opt_1a47f66536806d836d1ec0ee5926995c0d" compoundref="biteopt_8h" startline="435">ParPopPSel</references>
        <references refid="class_c_bite_opt_1acd43fdffae9a65684c1436aaee087fd1" compoundref="biteopt_8h" startline="432">PopChangeDecrSel</references>
        <references refid="class_c_bite_opt_1acac20a0af0c58f4aa58fb20bf4be11d5" compoundref="biteopt_8h" startline="430">PopChangeIncrSel</references>
        <references refid="class_c_bite_par_pops_1a24cc3d1978b4dbe57fad8a6f6d7efd8a" compoundref="biteaux_8h" startline="1392" endline="1405">CBiteParPops&lt; int64_t &gt;::setParPopCount</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a73dc570985bec54dc288690c31a8d8c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::updateDims</definition>
        <argsstring>(const int aParamCount, const int PopSize0=0)</argsstring>
        <name>updateDims</name>
        <qualifiedname>CBiteOpt::updateDims</qualifiedname>
        <param>
          <type>const int</type>
          <declname>aParamCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>PopSize0</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates dimensionality of *this object. Function does nothing if dimensionality has not changed since the last call. This function should be called at least once before calling the <ref refid="class_c_bite_opt_1a24a8733fc9dbb2c7e314b699fc360d7b" kindref="member">init()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of parameters being optimized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PopSize0</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements in population to use. If set to 0 or negative, the default formula will be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="110" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="110" bodyend="131"/>
        <references refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" compoundref="biteaux_8h" startline="1684" endline="1696">CBiteOptBase&lt; int64_t &gt;::initBuffers</references>
        <references refid="class_c_bite_opt_1a7c347ab2966fe6e79a9022fb136d25fc" compoundref="biteopt_8h" startline="462">OldPop</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_1aa2ca8983a05dc599ff5a5f47d3af16b4" compoundref="biteopt_8h" startline="497">ParOpt</references>
        <references refid="class_c_bite_opt_1a2ddf8b2ba7691dc249b50baab668a5c8" compoundref="biteopt_8h" startline="500">ParOpt2</references>
        <references refid="class_c_bite_opt_1afb37a6bb1eacba21280536ee17511830" compoundref="biteopt_8h" startline="501">ParOpt2Pop</references>
        <references refid="class_c_bite_opt_1a93a88d27436aa1660edea574fea346ef" compoundref="biteopt_8h" startline="498">ParOptPop</references>
        <references refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" compoundref="biteaux_8h" startline="1172">CBitePop&lt; int64_t &gt;::PopSize</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a24a8733fc9dbb2c7e314b699fc360d7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::init</definition>
        <argsstring>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</argsstring>
        <name>init</name>
        <qualifiedname>CBiteOpt::init</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const double *const</type>
          <declname>InitParams</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>InitRadius</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes *this optimizer. Does not perform objective function evaluations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitParams</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, initial parameter vector, also used as centroid for initial population vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial radius, multiplier relative to the default sigma value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="144" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="144" bodyend="201"/>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; int64_t &gt;::DiffValues</references>
        <references refid="class_c_bite_opt_1af14783d4853d9e7e207f00788583a42e" compoundref="biteopt_8h" startline="464">DoInitEvals</references>
        <references refid="class_c_bite_pop_1aecaac61269e65bda93cb2dc1a3a26091" compoundref="biteaux_8h" startline="1318" endline="1330">CBitePop&lt; int64_t &gt;::getGaussianInt</references>
        <references refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; int64_t &gt;::initCommonVars</references>
        <references refid="class_c_bite_pop_1a1302e3c2e578dd650aedb57e18645092" compoundref="biteaux_8h" startline="1161">CBitePop&lt; int64_t &gt;::IntMantMult</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; int64_t &gt;::MinValues</references>
        <references refid="class_c_bite_opt_1a7c347ab2966fe6e79a9022fb136d25fc" compoundref="biteopt_8h" startline="462">OldPop</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_1aa2ca8983a05dc599ff5a5f47d3af16b4" compoundref="biteopt_8h" startline="497">ParOpt</references>
        <references refid="class_c_bite_opt_1a2ddf8b2ba7691dc249b50baab668a5c8" compoundref="biteopt_8h" startline="500">ParOpt2</references>
        <references refid="class_c_bite_opt_1afb37a6bb1eacba21280536ee17511830" compoundref="biteopt_8h" startline="501">ParOpt2Pop</references>
        <references refid="class_c_bite_opt_1a93a88d27436aa1660edea574fea346ef" compoundref="biteopt_8h" startline="498">ParOptPop</references>
        <references refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" compoundref="biteaux_8h" startline="1182">CBitePop&lt; int64_t &gt;::PopParams</references>
        <references refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" compoundref="biteaux_8h" startline="1172">CBitePop&lt; int64_t &gt;::PopSize</references>
        <references refid="class_c_bite_opt_1ab3a911c7924b1a55c9a38365ea1e60ef" compoundref="biteopt_8h" startline="503">UseParOpt</references>
        <references refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" compoundref="biteaux_8h" startline="1256" endline="1307">CBitePop&lt; int64_t &gt;::wrapParam</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteOpt::optimize</definition>
        <argsstring>(CBiteRnd &amp;rnd, CBiteOpt *const PushOpt=NULL)</argsstring>
        <name>optimize</name>
        <qualifiedname>CBiteOpt::optimize</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type><ref refid="class_c_bite_opt" kindref="compound">CBiteOpt</ref> *const</type>
          <declname>PushOpt</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function performs the parameter optimization iteration that involves 1 objective function evaluation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PushOpt</parametername>
</parameternamelist>
<parameterdescription>
<para>Optimizer where the recently obtained solution should be &quot;pushed&quot;, used for deep optimization algorithm. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of non-improving iterations so far. A high value means optimizer has reached an optimization plateau. The suggested threshold value is ParamCount * 128. When this value was reached, the probability of plateau is high. This value, however, should not be solely relied upon when considering a stopping criteria: a hard iteration limit should be always used as in some cases convergence time may be very high with small, but frequent improving steps. This value is best used to allocate iteration budget between optimization attempts more efficiently. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="221" column="5" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="221" bodyend="420"/>
        <references refid="class_c_bite_opt_base_1a47acdb7a495f75170b0eb457e0dc950e" compoundref="biteaux_8h" startline="1909" endline="1920">CBiteOptBase&lt; int64_t &gt;::applySelsDecr</references>
        <references refid="class_c_bite_opt_base_1aa08dcfff8871910e4d01a94f261ee752" compoundref="biteaux_8h" startline="1890" endline="1901">CBiteOptBase&lt; int64_t &gt;::applySelsIncr</references>
        <references refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" compoundref="biteopt_8h" startline="52" endline="98">CBiteOpt</references>
        <references refid="class_c_bite_pop_1a3fc2d887ae91be62fd9fc3100268e53c" compoundref="biteaux_8h" startline="760" endline="786">CBitePop&lt; int64_t &gt;::copy</references>
        <references refid="class_c_bite_pop_1aa7c87b9148768d6104f8d3dfb5abebce" compoundref="biteaux_8h" startline="1177">CBitePop&lt; int64_t &gt;::CurPopPos</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" compoundref="biteaux_8h" startline="1175">CBitePop&lt; int64_t &gt;::CurPopSize1</references>
        <references refid="class_c_bite_pop_1aa5105ca75379f9a760dc9f0b9ea30ea7" compoundref="biteaux_8h" startline="1176">CBitePop&lt; int64_t &gt;::CurPopSizeI</references>
        <references refid="class_c_bite_pop_1a4656171c63f1944ae045d6f222d9d33a" compoundref="biteaux_8h" startline="1013" endline="1020">CBitePop&lt; int64_t &gt;::decrCurPopSize</references>
        <references refid="class_c_bite_opt_1ae7df30b17e5821498b7284e182425cdf" compoundref="biteopt_8h" startline="465">DoEval</references>
        <references refid="class_c_bite_opt_1af14783d4853d9e7e207f00788583a42e" compoundref="biteopt_8h" startline="464">DoInitEvals</references>
        <references refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" compoundref="biteopt_8h" startline="598" endline="682">generateSol1</references>
        <references refid="class_c_bite_opt_1a8a5048dc4357f48344cf5ade0757ae2b" compoundref="biteopt_8h" startline="1316" endline="1363">generateSol10</references>
        <references refid="class_c_bite_opt_1ab6de0da3b279e77788efed7d3e05a0e2" compoundref="biteopt_8h" startline="690" endline="732">generateSol2</references>
        <references refid="class_c_bite_opt_1abd6c435c82a97476332139663d9a1c82" compoundref="biteopt_8h" startline="738" endline="779">generateSol2b</references>
        <references refid="class_c_bite_opt_1a2363863090db7154792f78ec46abcf47" compoundref="biteopt_8h" startline="786" endline="886">generateSol2c</references>
        <references refid="class_c_bite_opt_1a76fa9d8bf4abde13b69e06761acc82f5" compoundref="biteopt_8h" startline="893" endline="933">generateSol2d</references>
        <references refid="class_c_bite_opt_1a2babc6c08dad9718d349683242805bc0" compoundref="biteopt_8h" startline="941" endline="974">generateSol3</references>
        <references refid="class_c_bite_opt_1ae48399aea9fc3c2e01b370b846d88c82" compoundref="biteopt_8h" startline="983" endline="1017">generateSol4</references>
        <references refid="class_c_bite_opt_1a01e7f5a94a2ae837844f8c60ddf21db6" compoundref="biteopt_8h" startline="1029" endline="1061">generateSol5</references>
        <references refid="class_c_bite_opt_1aac1bd4dd832e20880872b94b07773946" compoundref="biteopt_8h" startline="1068" endline="1115">generateSol5b</references>
        <references refid="class_c_bite_opt_1a001440627928387b57b5f266696ba330" compoundref="biteopt_8h" startline="1126" endline="1158">generateSol6</references>
        <references refid="class_c_bite_opt_1a6766fe9d56bee1f623d297b2f9cf8500" compoundref="biteopt_8h" startline="1167" endline="1191">generateSol7</references>
        <references refid="class_c_bite_opt_1a332b03425de84b8ef8eb362af8e75e78" compoundref="biteopt_8h" startline="1201" endline="1272">generateSol8</references>
        <references refid="class_c_bite_opt_1adca09db7345122f1da38d8f5c1800d83" compoundref="biteopt_8h" startline="1280" endline="1310">generateSol9</references>
        <references refid="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" compoundref="biteopt_8h" startline="1370" endline="1427">generateSolPar</references>
        <references refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">CBiteRnd::get</references>
        <references refid="class_c_bite_pop_1a0053ae41c70babe967c5931f491ea865" compoundref="biteaux_8h" startline="950" endline="953">CBitePop&lt; int64_t &gt;::getCurParams</references>
        <references refid="class_c_bite_pop_1ad6cbe6cfbf9954dcb6f8a223a5e1f36b" compoundref="biteaux_8h" startline="917" endline="920">CBitePop&lt; int64_t &gt;::getObjPtr</references>
        <references refid="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" compoundref="biteaux_8h" startline="1803" endline="1806">CBiteOptBase&lt; int64_t &gt;::getRealValue</references>
        <references refid="class_c_bite_pop_1a48d6ede5c82534c973e0458726e820dd" compoundref="biteaux_8h" startline="998" endline="1005">CBitePop&lt; int64_t &gt;::incrCurPopSize</references>
        <references refid="class_c_bite_opt_1a3af3717f98de343325970c75aca0845c" compoundref="biteopt_8h" startline="425">M1ASel</references>
        <references refid="class_c_bite_opt_1a7e0f0eb4591c8c8f0a0147324e91e9e1" compoundref="biteopt_8h" startline="426">M1BSel</references>
        <references refid="class_c_bite_opt_1a19ae8f821f9f26a9c0e01870bad6c42a" compoundref="biteopt_8h" startline="427">M1CSel</references>
        <references refid="class_c_bite_opt_1a03f51391b90a59f023178008e3d27746" compoundref="biteopt_8h" startline="424">M1Sel</references>
        <references refid="class_c_bite_opt_1a7f28d33448459a4a860f6df420333afc" compoundref="biteopt_8h" startline="429">M2BSel</references>
        <references refid="class_c_bite_opt_1a7d27a27405a83e13d6674d22e22c4f4f" compoundref="biteopt_8h" startline="428">M2Sel</references>
        <references refid="class_c_bite_opt_1a91a52c9eab07a265fce92f0ba0ec0d03" compoundref="biteopt_8h" startline="423">MethodSel</references>
        <references refid="class_c_bite_opt_1a764c6c8faa178116999c26b3866f8189" compoundref="biteopt_8h" startline="468">NewCost</references>
        <references refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" compoundref="biteaux_8h" startline="1667">CBiteOptBase&lt; int64_t &gt;::NewValues</references>
        <references refid="class_c_bite_opt_1a7c347ab2966fe6e79a9022fb136d25fc" compoundref="biteopt_8h" startline="462">OldPop</references>
        <references refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d">CBiteOptInterface::optcost</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1a884c9ad4c0327aaa0110a23a89f5697a" compoundref="biteaux_8h" startline="1171">CBitePop&lt; int64_t &gt;::ParamCountI</references>
        <references refid="class_c_bite_par_pops_1aea59bf6c1cf9894f944d07cec99882ee" compoundref="biteaux_8h" startline="1382">CBiteParPops&lt; int64_t &gt;::ParPopCount</references>
        <references refid="class_c_bite_par_pops_1a79983cca58bd18a6ff73120e65a976dd" compoundref="biteaux_8h" startline="1380">CBiteParPops&lt; int64_t &gt;::ParPops</references>
        <references refid="class_c_bite_opt_1acd43fdffae9a65684c1436aaee087fd1" compoundref="biteopt_8h" startline="432">PopChangeDecrSel</references>
        <references refid="class_c_bite_opt_1acac20a0af0c58f4aa58fb20bf4be11d5" compoundref="biteopt_8h" startline="430">PopChangeIncrSel</references>
        <references refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" compoundref="biteaux_8h" startline="1182">CBitePop&lt; int64_t &gt;::PopParams</references>
        <references refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" compoundref="biteaux_8h" startline="1172">CBitePop&lt; int64_t &gt;::PopSize</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" compoundref="biteaux_8h" startline="1668">CBiteOptBase&lt; int64_t &gt;::StallCount</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <references refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" compoundref="biteaux_8h" startline="1779" endline="1793">CBiteOptBase&lt; int64_t &gt;::updateBestCost</references>
        <references refid="class_c_bite_pop_1a7850902dad276dcecea68559eaccc168" compoundref="biteaux_8h" startline="795" endline="873">CBitePop&lt; int64_t &gt;::updateCentroid</references>
        <references refid="class_c_bite_opt_1a168cd86a91750b0548698f046e4b6d83" compoundref="biteopt_8h" startline="512" endline="520">updateParPop</references>
        <references refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" compoundref="biteaux_8h" startline="1039" endline="1151">CBitePop&lt; int64_t &gt;::updatePop</references>
        <references refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" compoundref="biteaux_8h" startline="1256" endline="1307">CBitePop&lt; int64_t &gt;::wrapParam</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_c_bite_opt_1a168cd86a91750b0548698f046e4b6d83" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::updateParPop</definition>
        <argsstring>(const double UpdCost, const ptype *const UpdParams)</argsstring>
        <name>updateParPop</name>
        <qualifiedname>CBiteOpt::updateParPop</qualifiedname>
        <param>
          <type>const double</type>
          <declname>UpdCost</declname>
        </param>
        <param>
          <type>const <ref refid="class_c_bite_opt_1a80651b5ffb10feccb67729f4c472a5dd" kindref="member">ptype</ref> *const</type>
          <declname>UpdParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates an appropriate parallel population.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>UpdCost</parametername>
</parameternamelist>
<parameterdescription>
<para>Cost of the new solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UpdParams</parametername>
</parameternamelist>
<parameterdescription>
<para>New parameter values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="512" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="512" bodyend="520"/>
        <references refid="class_c_bite_par_pops_1afa8a97732cea882b664c2d0fbedf2289" compoundref="biteaux_8h" startline="1417" endline="1512">CBiteParPops&lt; int64_t &gt;::getMinDistParPop</references>
        <references refid="class_c_bite_par_pops_1a79983cca58bd18a6ff73120e65a976dd" compoundref="biteaux_8h" startline="1380">CBiteParPops&lt; int64_t &gt;::ParPops</references>
        <references refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" compoundref="biteaux_8h" startline="1039" endline="1151">CBitePop&lt; int64_t &gt;::updatePop</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a344271b2490d03eaa0c8e1ab062d916d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_bite_pop" kindref="compound">CBitePop</ref> &amp;</type>
        <definition>CBitePop &amp; CBiteOpt::selectParPop</definition>
        <argsstring>(const int gi, CBiteRnd &amp;rnd)</argsstring>
        <name>selectParPop</name>
        <qualifiedname>CBiteOpt::selectParPop</qualifiedname>
        <param>
          <type>const int</type>
          <declname>gi</declname>
        </param>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function selects a parallel population to use for solution generation. With certain probability, *this object&apos;s own population will be returned instead of parallel population.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gi</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution generator index (0-3). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="531" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="531" bodyend="539"/>
        <references refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" compoundref="biteaux_8h" startline="672" endline="681">CBitePop&lt; int64_t &gt;::CBitePop</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_par_pops_1aea59bf6c1cf9894f944d07cec99882ee" compoundref="biteaux_8h" startline="1382">CBiteParPops&lt; int64_t &gt;::ParPopCount</references>
        <references refid="class_c_bite_opt_1a47f66536806d836d1ec0ee5926995c0d" compoundref="biteopt_8h" startline="435">ParPopPSel</references>
        <references refid="class_c_bite_par_pops_1a79983cca58bd18a6ff73120e65a976dd" compoundref="biteaux_8h" startline="1380">CBiteParPops&lt; int64_t &gt;::ParPops</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <referencedby refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" compoundref="biteopt_8h" startline="598" endline="682">generateSol1</referencedby>
        <referencedby refid="class_c_bite_opt_1ae48399aea9fc3c2e01b370b846d88c82" compoundref="biteopt_8h" startline="983" endline="1017">generateSol4</referencedby>
        <referencedby refid="class_c_bite_opt_1a01e7f5a94a2ae837844f8c60ddf21db6" compoundref="biteopt_8h" startline="1029" endline="1061">generateSol5</referencedby>
        <referencedby refid="class_c_bite_opt_1aac1bd4dd832e20880872b94b07773946" compoundref="biteopt_8h" startline="1068" endline="1115">generateSol5b</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1ab98060db69130d7610818bddda8c7115" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_bite_pop" kindref="compound">CBitePop</ref> &amp;</type>
        <definition>CBitePop &amp; CBiteOpt::selectAltPop</definition>
        <argsstring>(const int gi, CBiteRnd &amp;rnd)</argsstring>
        <name>selectAltPop</name>
        <qualifiedname>CBiteOpt::selectAltPop</qualifiedname>
        <param>
          <type>const int</type>
          <declname>gi</declname>
        </param>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function selects an alternative, parallel optimizer&apos;s, population, to use in some solution generators.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gi</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution generator index (0-3). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="549" column="10" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="549" bodyend="570"/>
        <references refid="class_c_bite_opt_1a7c38e45fe68be8f7f9e6cbb4f1ec7e50" compoundref="biteopt_8h" startline="437">AltPopPSel</references>
        <references refid="class_c_bite_opt_1abdbe1b2dca3680429d01e33ad78e0588" compoundref="biteopt_8h" startline="438">AltPopSel</references>
        <references refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" compoundref="biteaux_8h" startline="672" endline="681">CBitePop&lt; int64_t &gt;::CBitePop</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_opt_1afb37a6bb1eacba21280536ee17511830" compoundref="biteopt_8h" startline="501">ParOpt2Pop</references>
        <references refid="class_c_bite_opt_1a93a88d27436aa1660edea574fea346ef" compoundref="biteopt_8h" startline="498">ParOptPop</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <referencedby refid="class_c_bite_opt_1abd6c435c82a97476332139663d9a1c82" compoundref="biteopt_8h" startline="738" endline="779">generateSol2b</referencedby>
        <referencedby refid="class_c_bite_opt_1ae48399aea9fc3c2e01b370b846d88c82" compoundref="biteopt_8h" startline="983" endline="1017">generateSol4</referencedby>
        <referencedby refid="class_c_bite_opt_1a01e7f5a94a2ae837844f8c60ddf21db6" compoundref="biteopt_8h" startline="1029" endline="1061">generateSol5</referencedby>
        <referencedby refid="class_c_bite_opt_1aac1bd4dd832e20880872b94b07773946" compoundref="biteopt_8h" startline="1068" endline="1115">generateSol5b</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1af25cdfb71a0ad9081148c31da58fe949" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteOpt::getMinSolIndex</definition>
        <argsstring>(const int gi, CBiteRnd &amp;rnd, const int ps)</argsstring>
        <name>getMinSolIndex</name>
        <qualifiedname>CBiteOpt::getMinSolIndex</qualifiedname>
        <param>
          <type>const int</type>
          <declname>gi</declname>
        </param>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>ps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns a dynamically-selected minimal population index, used in some solution generation methods.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gi</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution generator index (0-3). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>Population size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="581" column="5" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="581" bodyend="590"/>
        <references refid="class_c_bite_rnd_1aa4c960b792982f495cc19c04ad9c2705" compoundref="biteaux_8h" startline="148" endline="205">CBiteRnd::getPow</references>
        <references refid="class_c_bite_opt_1a26719d83668ff3b3cce919878c358967" compoundref="biteopt_8h" startline="442">MinSolMulSel</references>
        <references refid="class_c_bite_opt_1a1f08554f3c3fffb89fafd91104d6ac5d" compoundref="biteopt_8h" startline="440">MinSolPwrSel</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <referencedby refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" compoundref="biteopt_8h" startline="598" endline="682">generateSol1</referencedby>
        <referencedby refid="class_c_bite_opt_1ab6de0da3b279e77788efed7d3e05a0e2" compoundref="biteopt_8h" startline="690" endline="732">generateSol2</referencedby>
        <referencedby refid="class_c_bite_opt_1abd6c435c82a97476332139663d9a1c82" compoundref="biteopt_8h" startline="738" endline="779">generateSol2b</referencedby>
        <referencedby refid="class_c_bite_opt_1a2babc6c08dad9718d349683242805bc0" compoundref="biteopt_8h" startline="941" endline="974">generateSol3</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol1</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol1</name>
        <qualifiedname>CBiteOpt::generateSol1</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The original &quot;bitmask inversion with random move&quot; solution generator. Most of the time adjusts only a single parameter of a better solution, yet manages to produce excellent &quot;reference points&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="598" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="598" bodyend="682"/>
        <references refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" compoundref="biteaux_8h" startline="672" endline="681">CBitePop&lt; int64_t &gt;::CBitePop</references>
        <references refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" compoundref="biteaux_8h" startline="1229" endline="1232">CBitePop&lt; int64_t &gt;::copyParams</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_opt_1aabfab1d71a0563959f94970b250c5df9" compoundref="biteopt_8h" startline="444">Gen1AllpSel</references>
        <references refid="class_c_bite_opt_1a4cb14ff23736a5a74987504f94f1bf4b" compoundref="biteopt_8h" startline="445">Gen1MoveAsyncSel</references>
        <references refid="class_c_bite_opt_1a88b8c7fcc43de72d390950fbfdc86cad" compoundref="biteopt_8h" startline="447">Gen1MoveSpanSel</references>
        <references refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">CBiteRnd::get</references>
        <references refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" compoundref="biteaux_8h" startline="959" endline="962">CBitePop&lt; ptype &gt;::getCurPopSize</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_opt_1af25cdfb71a0ad9081148c31da58fe949" compoundref="biteopt_8h" startline="581" endline="590">getMinSolIndex</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; ptype &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_rnd_1a97eb8d3dce6693178a1f54cf4a076fd0" compoundref="biteaux_8h" startline="265" endline="271">CBiteRnd::getTPDF</references>
        <references refid="class_c_bite_pop_1a27448c9be1bed517e4a48aa656ca4f76" compoundref="biteaux_8h" startline="1167">CBitePop&lt; int64_t &gt;::IntMantMask</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1a884c9ad4c0327aaa0110a23a89f5697a" compoundref="biteaux_8h" startline="1171">CBitePop&lt; int64_t &gt;::ParamCountI</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_opt_1a344271b2490d03eaa0c8e1ab062d916d" compoundref="biteopt_8h" startline="531" endline="539">selectParPop</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1ab6de0da3b279e77788efed7d3e05a0e2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol2</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol2</name>
        <qualifiedname>CBiteOpt::generateSol2</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The &quot;Differential Evolution&quot;-based solution generator. Note that compared to a usual DE, this generator does not use crossover, and it uses one, or an average of two best solutions as the base. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="690" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="690" bodyend="732"/>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" compoundref="biteaux_8h" startline="1175">CBitePop&lt; int64_t &gt;::CurPopSize1</references>
        <references refid="class_c_bite_opt_1aa05a9c04ac6d2a2ec6b679abd789df64" compoundref="biteopt_8h" startline="449">Gen2ModeSel</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_opt_1af25cdfb71a0ad9081148c31da58fe949" compoundref="biteopt_8h" startline="581" endline="590">getMinSolIndex</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1abd6c435c82a97476332139663d9a1c82" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol2b</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol2b</name>
        <qualifiedname>CBiteOpt::generateSol2b</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An alternative &quot;Differential Evolution&quot;-based solution generator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="738" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="738" bodyend="779"/>
        <references refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" compoundref="biteaux_8h" startline="672" endline="681">CBitePop&lt; int64_t &gt;::CBitePop</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" compoundref="biteaux_8h" startline="1175">CBitePop&lt; int64_t &gt;::CurPopSize1</references>
        <references refid="class_c_bite_opt_1a8d6a5b4fd019d8aa73529c1fda6e91d5" compoundref="biteopt_8h" startline="450">Gen2bModeSel</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_opt_1af25cdfb71a0ad9081148c31da58fe949" compoundref="biteopt_8h" startline="581" endline="590">getMinSolIndex</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; ptype &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_opt_1ab98060db69130d7610818bddda8c7115" compoundref="biteopt_8h" startline="549" endline="570">selectAltPop</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a2363863090db7154792f78ec46abcf47" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol2c</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol2c</name>
        <qualifiedname>CBiteOpt::generateSol2c</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Differential Evolution&quot;-based solution generator, almost an exact replica of the <ref refid="class_c_d_e_opt" kindref="compound">CDEOpt</ref> optimizer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="786" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="786" bodyend="886"/>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" compoundref="biteaux_8h" startline="1175">CBitePop&lt; int64_t &gt;::CurPopSize1</references>
        <references refid="class_c_bite_opt_1a96dbb17248d735d60d10b6ef4be3b7c5" compoundref="biteopt_8h" startline="451">Gen2cModeSel</references>
        <references refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" compoundref="biteaux_8h" startline="317" endline="337">CBiteRnd::getBit</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1adca97316ecce595b9175815493f7a3a2" compoundref="biteaux_8h" startline="236" endline="239">CBiteRnd::getPowInt</references>
        <references refid="class_c_bite_rnd_1a6e9234ff0489b0d3d38ef71be159b34d" compoundref="biteaux_8h" startline="256" endline="259">CBiteRnd::getRaw</references>
        <references refid="class_c_bite_pop_1a27448c9be1bed517e4a48aa656ca4f76" compoundref="biteaux_8h" startline="1167">CBitePop&lt; int64_t &gt;::IntMantMask</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <references refid="class_c_bite_pop_1a0d5ab322641bb1a091df91ff7ee630c4" compoundref="biteaux_8h" startline="1217" endline="1220">CBitePop&lt; int64_t &gt;::zeroParams</references>
        <referencedby refid="class_c_bite_opt_1a76fa9d8bf4abde13b69e06761acc82f5" compoundref="biteopt_8h" startline="893" endline="933">generateSol2d</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a76fa9d8bf4abde13b69e06761acc82f5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol2d</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol2d</name>
        <qualifiedname>CBiteOpt::generateSol2d</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An alternative &quot;Differential Evolution&quot;-based solution generator that uses &quot;OldPop&quot; population. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="893" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="893" bodyend="933"/>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_opt_1a1db3ecb43fe42f89db5b8dc1644baad6" compoundref="biteopt_8h" startline="452">Gen2dModeSel</references>
        <references refid="class_c_bite_opt_1a2363863090db7154792f78ec46abcf47" compoundref="biteopt_8h" startline="786" endline="886">generateSol2c</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_opt_1a7c347ab2966fe6e79a9022fb136d25fc" compoundref="biteopt_8h" startline="462">OldPop</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a2babc6c08dad9718d349683242805bc0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol3</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol3</name>
        <qualifiedname>CBiteOpt::generateSol3</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Centroid mix with DE&quot; solution generator, works well for convex functions. For DE operation, uses a better solution and a random previous solution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="941" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="941" bodyend="974"/>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_opt_1abe8a0cedf383e8d0b272e779c2c8c6a4" compoundref="biteopt_8h" startline="453">Gen3ModeSel</references>
        <references refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">CBiteRnd::get</references>
        <references refid="class_c_bite_pop_1a5e6ccebb178353b084084f841b09042d" compoundref="biteaux_8h" startline="881" endline="884">CBitePop&lt; int64_t &gt;::getCentroid</references>
        <references refid="class_c_bite_opt_1af25cdfb71a0ad9081148c31da58fe949" compoundref="biteopt_8h" startline="581" endline="590">getMinSolIndex</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1ae48399aea9fc3c2e01b370b846d88c82" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol4</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol4</name>
        <qualifiedname>CBiteOpt::generateSol4</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Entropy bit mixing&quot;-based solution generator. Performs crossing-over of an odd number (this is important) of random solutions via XOR operation. Slightly less effective than the DE-based mixing, but makes the optimization method more diverse overall. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="983" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="983" bodyend="1017"/>
        <references refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" compoundref="biteaux_8h" startline="672" endline="681">CBitePop&lt; int64_t &gt;::CBitePop</references>
        <references refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" compoundref="biteaux_8h" startline="1229" endline="1232">CBitePop&lt; int64_t &gt;::copyParams</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_opt_1adf6acc728abfdec9b464d4a3c37b6a82" compoundref="biteopt_8h" startline="454">Gen4MixFacSel</references>
        <references refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" compoundref="biteaux_8h" startline="317" endline="337">CBiteRnd::getBit</references>
        <references refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" compoundref="biteaux_8h" startline="959" endline="962">CBitePop&lt; int64_t &gt;::getCurPopSize</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_opt_1ab98060db69130d7610818bddda8c7115" compoundref="biteopt_8h" startline="549" endline="570">selectAltPop</references>
        <references refid="class_c_bite_opt_1a344271b2490d03eaa0c8e1ab062d916d" compoundref="biteopt_8h" startline="531" endline="539">selectParPop</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a01e7f5a94a2ae837844f8c60ddf21db6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol5</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol5</name>
        <qualifiedname>CBiteOpt::generateSol5</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A novel &quot;Randomized bit crossing-over&quot; candidate solution generation method. Effective, but on its own cannot stand coordinate system offsets, converges slowly. Completely mixes bits of two randomly-selected solutions, plus changes 1 random bit.</para>
<para>This method is similar to a biological DNA crossing-over, but on a single-bit scale. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1029" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1029" bodyend="1061"/>
        <references refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" compoundref="biteaux_8h" startline="672" endline="681">CBitePop&lt; int64_t &gt;::CBitePop</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" compoundref="biteaux_8h" startline="317" endline="337">CBiteRnd::getBit</references>
        <references refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" compoundref="biteaux_8h" startline="959" endline="962">CBitePop&lt; ptype &gt;::getCurPopSize</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; ptype &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1a6e9234ff0489b0d3d38ef71be159b34d" compoundref="biteaux_8h" startline="256" endline="259">CBiteRnd::getRaw</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_pop_1ac9adf8849ed7251dadd94815e20bdee8" compoundref="biteaux_8h" startline="1157">CBitePop&lt; int64_t &gt;::IntMantBits</references>
        <references refid="class_c_bite_pop_1a27448c9be1bed517e4a48aa656ca4f76" compoundref="biteaux_8h" startline="1167">CBitePop&lt; int64_t &gt;::IntMantMask</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_1ab98060db69130d7610818bddda8c7115" compoundref="biteopt_8h" startline="549" endline="570">selectAltPop</references>
        <references refid="class_c_bite_opt_1a344271b2490d03eaa0c8e1ab062d916d" compoundref="biteopt_8h" startline="531" endline="539">selectParPop</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1aac1bd4dd832e20880872b94b07773946" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol5b</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol5b</name>
        <qualifiedname>CBiteOpt::generateSol5b</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Randomized parameter cross-over&quot; solution generator. Similar to the &quot;randomized bit cross-over&quot;, but works with the whole parameter values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1068" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1068" bodyend="1115"/>
        <references refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" compoundref="biteaux_8h" startline="672" endline="681">CBitePop&lt; int64_t &gt;::CBitePop</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" compoundref="biteaux_8h" startline="1175">CBitePop&lt; int64_t &gt;::CurPopSize1</references>
        <references refid="class_c_bite_opt_1af0f831fa6f9105ecab62be7bbb2c79b8" compoundref="biteopt_8h" startline="456">Gen5bModeSel</references>
        <references refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" compoundref="biteaux_8h" startline="317" endline="337">CBiteRnd::getBit</references>
        <references refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" compoundref="biteaux_8h" startline="959" endline="962">CBitePop&lt; ptype &gt;::getCurPopSize</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; ptype &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_opt_1ab98060db69130d7610818bddda8c7115" compoundref="biteopt_8h" startline="549" endline="570">selectAltPop</references>
        <references refid="class_c_bite_opt_1a344271b2490d03eaa0c8e1ab062d916d" compoundref="biteopt_8h" startline="531" endline="539">selectParPop</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a001440627928387b57b5f266696ba330" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol6</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol6</name>
        <qualifiedname>CBiteOpt::generateSol6</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A short-cut solution generator. Parameter value short-cuts: they considerably reduce convergence time for some functions while not severely impacting performance for other functions.</para>
<para>Can use variation with randomization between two values, and a slight move towards real 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1126" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1126" bodyend="1158"/>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" compoundref="biteaux_8h" startline="1664">CBiteOptBase&lt; int64_t &gt;::DiffValuesI</references>
        <references refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" compoundref="biteaux_8h" startline="317" endline="337">CBiteRnd::getBit</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1aa4c960b792982f495cc19c04ad9c2705" compoundref="biteaux_8h" startline="148" endline="205">CBiteRnd::getPow</references>
        <references refid="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" compoundref="biteaux_8h" startline="1803" endline="1806">CBiteOptBase&lt; int64_t &gt;::getRealValue</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; int64_t &gt;::MinValues</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a6766fe9d56bee1f623d297b2f9cf8500" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol7</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol7</name>
        <qualifiedname>CBiteOpt::generateSol7</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A solution generator that randomly combines solutions from the main and &quot;old&quot; populations. Conceptually, it can be called a weighted-random crossover that combines solutions from diverse sources. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1167" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1167" bodyend="1191"/>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_opt_1aad5bacfdff08b09d2834231c17bab4a2" compoundref="biteopt_8h" startline="457">Gen7PowFacSel</references>
        <references refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" compoundref="biteaux_8h" startline="317" endline="337">CBiteRnd::getBit</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1aa4c960b792982f495cc19c04ad9c2705" compoundref="biteaux_8h" startline="148" endline="205">CBiteRnd::getPow</references>
        <references refid="class_c_bite_opt_1a7c347ab2966fe6e79a9022fb136d25fc" compoundref="biteopt_8h" startline="462">OldPop</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a332b03425de84b8ef8eb362af8e75e78" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol8</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol8</name>
        <qualifiedname>CBiteOpt::generateSol8</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Solution generator that is DE-alike in its base. It calculates a centroid of a number of best solutions, and then applies &quot;mutation&quot; operation between the centroid and the solutions, using a random multiplier. This generator is similar to the &quot;move&quot; operation of generator 1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1201" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1201" bodyend="1272"/>
        <references refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" compoundref="biteaux_8h" startline="1229" endline="1232">CBitePop&lt; int64_t &gt;::copyParams</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_opt_1a44981d73146ac3b77f4c7283af776473" compoundref="biteopt_8h" startline="458">Gen8ModeSel</references>
        <references refid="class_c_bite_opt_1af4e31b724cbc2a4e859ebd205e5cfd25" compoundref="biteopt_8h" startline="459">Gen8NumSel</references>
        <references refid="class_c_bite_opt_1ada28884009d78c2651d1b68dd3f6e1ba" compoundref="biteopt_8h" startline="460">Gen8SpanSel</references>
        <references refid="class_c_bite_rnd_1a3f6c22ff1f6f19de24f7c837530f31c4" compoundref="biteaux_8h" startline="282" endline="310">CBiteRnd::getGaussian</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" compoundref="biteaux_8h" startline="1667">CBiteOptBase&lt; int64_t &gt;::NewValues</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1adca09db7345122f1da38d8f5c1800d83" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol9</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol9</name>
        <qualifiedname>CBiteOpt::generateSol9</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A &quot;water drain&quot; solution generator: makes a fixed-multiplier step from a better random solution 1 towards or away from worse random solution<orderedlist>
<listitem><para>Moderately efficient on its own. </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1280" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1280" bodyend="1310"/>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" compoundref="biteaux_8h" startline="1175">CBitePop&lt; int64_t &gt;::CurPopSize1</references>
        <references refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" compoundref="biteaux_8h" startline="317" endline="337">CBiteRnd::getBit</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1a8a5048dc4357f48344cf5ade0757ae2b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSol10</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSol10</name>
        <qualifiedname>CBiteOpt::generateSol10</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Solution generator based on SpherOpt&apos;s converging hyper-spheroid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1316" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1316" bodyend="1363"/>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; int64_t &gt;::CurPopSize</references>
        <references refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" compoundref="biteaux_8h" startline="1175">CBitePop&lt; int64_t &gt;::CurPopSize1</references>
        <references refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">CBiteRnd::get</references>
        <references refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" compoundref="biteaux_8h" startline="893" endline="896">CBitePop&lt; int64_t &gt;::getParamsOrdered</references>
        <references refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">CBiteRnd::getSqrInt</references>
        <references refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" compoundref="biteaux_8h" startline="1667">CBiteOptBase&lt; int64_t &gt;::NewValues</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOpt::generateSolPar</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>generateSolPar</name>
        <qualifiedname>CBiteOpt::generateSolPar</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Solution generator that obtains solution from an independently-running parallel optimizer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1370" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1370" bodyend="1427"/>
        <references refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" compoundref="biteaux_8h" startline="672" endline="681">CBitePop&lt; int64_t &gt;::CBitePop</references>
        <references refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" compoundref="biteaux_8h" startline="1664">CBiteOptBase&lt; int64_t &gt;::DiffValuesI</references>
        <references refid="class_c_bite_opt_1ae7df30b17e5821498b7284e182425cdf" compoundref="biteopt_8h" startline="465">DoEval</references>
        <references refid="class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2" compoundref="biteaux_8h" startline="1614" endline="1617">CBiteOptBase&lt; int64_t &gt;::getBestParams</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; int64_t &gt;::MinValues</references>
        <references refid="class_c_bite_opt_1a764c6c8faa178116999c26b3866f8189" compoundref="biteopt_8h" startline="468">NewCost</references>
        <references refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" compoundref="biteaux_8h" startline="1667">CBiteOptBase&lt; int64_t &gt;::NewValues</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; int64_t &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_1aa2ca8983a05dc599ff5a5f47d3af16b4" compoundref="biteopt_8h" startline="497">ParOpt</references>
        <references refid="class_c_bite_opt_1a2ddf8b2ba7691dc249b50baab668a5c8" compoundref="biteopt_8h" startline="500">ParOpt2</references>
        <references refid="class_c_bite_opt_1afb37a6bb1eacba21280536ee17511830" compoundref="biteopt_8h" startline="501">ParOpt2Pop</references>
        <references refid="class_c_bite_opt_1a1926decbab37c16bdf14787724e875d6" compoundref="biteopt_8h" startline="434">ParOpt2Sel</references>
        <references refid="class_c_bite_opt_1a93a88d27436aa1660edea574fea346ef" compoundref="biteopt_8h" startline="498">ParOptPop</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; int64_t &gt;::select</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; int64_t &gt;::TmpParams</references>
        <references refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" compoundref="biteaux_8h" startline="1039" endline="1151">CBitePop&lt; int64_t &gt;::updatePop</references>
        <references refid="class_c_bite_opt_1ab3a911c7924b1a55c9a38365ea1e60ef" compoundref="biteopt_8h" startline="503">UseParOpt</references>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">optimize</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>BiteOpt optimization class. Implements a stochastic non-linear bound-constrained derivative-free optimization method.</para>
<para>Description is available at <ulink url="https://github.com/avaneev/biteopt">https://github.com/avaneev/biteopt</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CBiteOpt</label>
        <link refid="class_c_bite_opt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptBase&lt; int64_t &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>CBiteOptDeep::CBiteOptWrap</label>
        <link refid="class_c_bite_opt_deep_1_1_c_bite_opt_wrap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="7">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CBiteParPops&lt; int64_t &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="5">
        <label>CBitePop&lt; int64_t &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CBiteOpt</label>
        <link refid="class_c_bite_opt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#Gen1MoveSpanSel</edgelabel>
          <edgelabel>#Gen3ModeSel</edgelabel>
          <edgelabel>#Gen4MixFacSel</edgelabel>
          <edgelabel>#Gen7PowFacSel</edgelabel>
          <edgelabel>#Gen8NumSel</edgelabel>
          <edgelabel>#Gen8SpanSel</edgelabel>
          <edgelabel>#M1Sel</edgelabel>
          <edgelabel>#M2BSel</edgelabel>
          <edgelabel>#MethodSel</edgelabel>
          <edgelabel>#MinSolMulSel</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>#M1ASel</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>#AltPopPSel</edgelabel>
          <edgelabel>#AltPopSel</edgelabel>
          <edgelabel>#Gen1AllpSel</edgelabel>
          <edgelabel>#Gen1MoveAsyncSel</edgelabel>
          <edgelabel>#Gen2ModeSel</edgelabel>
          <edgelabel>#Gen2bModeSel</edgelabel>
          <edgelabel>#Gen2cModeSel</edgelabel>
          <edgelabel>#Gen2dModeSel</edgelabel>
          <edgelabel>#Gen5bModeSel</edgelabel>
          <edgelabel>#Gen8ModeSel</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#OldPop</edgelabel>
          <edgelabel>#ParOpt2Pop</edgelabel>
          <edgelabel>#ParOptPop</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>#ParOpt</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>#ParOpt2</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>CBiteOpt::CParOpt&lt; T &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>CBiteOpt::CParOpt&lt; CNMSeqOpt &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
        <childnode refid="21" relation="template-instance">
          <edgelabel>&lt; CNMSeqOpt &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>CBiteOpt::CParOpt&lt; CSpherOpt &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
        <childnode refid="21" relation="template-instance">
          <edgelabel>&lt; CSpherOpt &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>CBiteOptBase&lt; double &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptBase&lt; int64_t &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="7">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>CBiteParPops&lt; double &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>#ParPops</edgelabel>
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>CBiteParPops&lt; int64_t &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#ParPops</edgelabel>
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="20">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>CBitePop&lt; int64_t &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="13">
        <label>CBiteSel&lt; tCount &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>CBiteSel&lt; 2 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>CBiteSel&lt; 3 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>CBiteSel&lt; 4 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; 4 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>CBiteSelBase</label>
        <link refid="class_c_bite_sel_base"/>
      </node>
      <node id="24">
        <label>CNMSeqOpt</label>
        <link refid="class_c_n_m_seq_opt"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>CSpherOpt</label>
        <link refid="class_c_spher_opt"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#CentPowSel</edgelabel>
          <edgelabel>#RadPowSel</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>#EvalFacSel</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>T</label>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/biteopt.h" line="46" column="1" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="47" bodyend="1428"/>
    <listofallmembers>
      <member refid="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>addSel</name></member>
      <member refid="class_c_bite_opt_1a7c38e45fe68be8f7f9e6cbb4f1ec7e50" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>AltPopPSel</name></member>
      <member refid="class_c_bite_opt_1abdbe1b2dca3680429d01e33ad78e0588" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>AltPopSel</name></member>
      <member refid="class_c_bite_opt_base_1a3922d6b29602643882d3212071a5e679" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ApplySels</name></member>
      <member refid="class_c_bite_opt_base_1afc2d6ec2c61d8f41bd39bb99632cf12e" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ApplySelsCount</name></member>
      <member refid="class_c_bite_opt_base_1a47acdb7a495f75170b0eb457e0dc950e" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>applySelsDecr</name></member>
      <member refid="class_c_bite_opt_base_1aa08dcfff8871910e4d01a94f261ee752" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>applySelsIncr</name></member>
      <member refid="class_c_bite_opt_base_1acc0aa62d6125bd03d3baae22b0bf0467" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>AvgCost</name></member>
      <member refid="class_c_bite_opt_base_1adc4dfe02978fd4ed460f49c7e9a01633" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>BestCost</name></member>
      <member refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>BestValues</name></member>
      <member refid="class_c_bite_pop_1ad4e3a3c5b7a25ad02ef0231bd3fe8388" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>calcLP1Coeff</name></member>
      <member refid="class_c_bite_opt_1a5f4640ecb94e39ea475d71ca2234bc39" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>CBiteOpt</name></member>
      <member refid="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" prot="private" virt="non-virtual"><scope>CBiteOpt</scope><name>CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>CBiteOptInterface</name></member>
      <member refid="class_c_bite_par_pops_1a1d00195283da4d97f648da706e5c5cec" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>CBiteParPops</name></member>
      <member refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1a73402384f4b75abf6d956dc086ccf36e" prot="public" virt="non-virtual" ambiguityscope="CBiteParPops&lt; int64_t &gt;::"><scope>CBiteOpt</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1ab6dec63b0ee3955563c2a3f815614f31" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>CentLPC</name></member>
      <member refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>CentParams</name></member>
      <member refid="class_c_bite_pop_1a2bf725291723a8dcaa215496e3175471" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>CnsCount</name></member>
      <member refid="class_c_bite_pop_1a3fc2d887ae91be62fd9fc3100268e53c" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>copy</name></member>
      <member refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>copyParams</name></member>
      <member refid="class_c_bite_pop_1a57e751582761922bbabff1ddb7af277b" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>copyValues</name></member>
      <member refid="class_c_bite_pop_1aa7c87b9148768d6104f8d3dfb5abebce" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>CurPopPos</name></member>
      <member refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>CurPopSize</name></member>
      <member refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>CurPopSize1</name></member>
      <member refid="class_c_bite_pop_1aa5105ca75379f9a760dc9f0b9ea30ea7" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>CurPopSizeI</name></member>
      <member refid="class_c_bite_pop_1a4656171c63f1944ae045d6f222d9d33a" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>decrCurPopSize</name></member>
      <member refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" prot="protected" virt="virtual"><scope>CBiteOpt</scope><name>deleteBuffers</name></member>
      <member refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>DiffValues</name></member>
      <member refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>DiffValuesI</name></member>
      <member refid="class_c_bite_opt_1ae7df30b17e5821498b7284e182425cdf" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>DoEval</name></member>
      <member refid="class_c_bite_opt_1af14783d4853d9e7e207f00788583a42e" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>DoInitEvals</name></member>
      <member refid="class_c_bite_opt_1aabfab1d71a0563959f94970b250c5df9" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen1AllpSel</name></member>
      <member refid="class_c_bite_opt_1a4cb14ff23736a5a74987504f94f1bf4b" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen1MoveAsyncSel</name></member>
      <member refid="class_c_bite_opt_1a88b8c7fcc43de72d390950fbfdc86cad" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen1MoveSpanSel</name></member>
      <member refid="class_c_bite_opt_1a8d6a5b4fd019d8aa73529c1fda6e91d5" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen2bModeSel</name></member>
      <member refid="class_c_bite_opt_1a96dbb17248d735d60d10b6ef4be3b7c5" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen2cModeSel</name></member>
      <member refid="class_c_bite_opt_1a1db3ecb43fe42f89db5b8dc1644baad6" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen2dModeSel</name></member>
      <member refid="class_c_bite_opt_1aa05a9c04ac6d2a2ec6b679abd789df64" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen2ModeSel</name></member>
      <member refid="class_c_bite_opt_1abe8a0cedf383e8d0b272e779c2c8c6a4" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen3ModeSel</name></member>
      <member refid="class_c_bite_opt_1adf6acc728abfdec9b464d4a3c37b6a82" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen4MixFacSel</name></member>
      <member refid="class_c_bite_opt_1af0f831fa6f9105ecab62be7bbb2c79b8" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen5bModeSel</name></member>
      <member refid="class_c_bite_opt_1aad5bacfdff08b09d2834231c17bab4a2" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen7PowFacSel</name></member>
      <member refid="class_c_bite_opt_1a44981d73146ac3b77f4c7283af776473" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen8ModeSel</name></member>
      <member refid="class_c_bite_opt_1af4e31b724cbc2a4e859ebd205e5cfd25" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen8NumSel</name></member>
      <member refid="class_c_bite_opt_1ada28884009d78c2651d1b68dd3f6e1ba" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Gen8SpanSel</name></member>
      <member refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol1</name></member>
      <member refid="class_c_bite_opt_1a8a5048dc4357f48344cf5ade0757ae2b" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol10</name></member>
      <member refid="class_c_bite_opt_1ab6de0da3b279e77788efed7d3e05a0e2" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol2</name></member>
      <member refid="class_c_bite_opt_1abd6c435c82a97476332139663d9a1c82" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol2b</name></member>
      <member refid="class_c_bite_opt_1a2363863090db7154792f78ec46abcf47" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol2c</name></member>
      <member refid="class_c_bite_opt_1a76fa9d8bf4abde13b69e06761acc82f5" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol2d</name></member>
      <member refid="class_c_bite_opt_1a2babc6c08dad9718d349683242805bc0" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol3</name></member>
      <member refid="class_c_bite_opt_1ae48399aea9fc3c2e01b370b846d88c82" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol4</name></member>
      <member refid="class_c_bite_opt_1a01e7f5a94a2ae837844f8c60ddf21db6" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol5</name></member>
      <member refid="class_c_bite_opt_1aac1bd4dd832e20880872b94b07773946" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol5b</name></member>
      <member refid="class_c_bite_opt_1a001440627928387b57b5f266696ba330" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol6</name></member>
      <member refid="class_c_bite_opt_1a6766fe9d56bee1f623d297b2f9cf8500" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol7</name></member>
      <member refid="class_c_bite_opt_1a332b03425de84b8ef8eb362af8e75e78" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol8</name></member>
      <member refid="class_c_bite_opt_1adca09db7345122f1da38d8f5c1800d83" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSol9</name></member>
      <member refid="class_c_bite_opt_1aee604953caf90013f483d9f77fd3881c" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>generateSolPar</name></member>
      <member refid="class_c_bite_opt_base_1a4b2d3669723dbe251cf391cc10dd4f5c" prot="public" virt="virtual"><scope>CBiteOpt</scope><name>getBestCost</name></member>
      <member refid="class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2" prot="public" virt="virtual"><scope>CBiteOpt</scope><name>getBestParams</name></member>
      <member refid="class_c_bite_pop_1a5e6ccebb178353b084084f841b09042d" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getCentroid</name></member>
      <member refid="class_c_bite_pop_1ad38d886687357797479e69098759476a" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getCnsPtr</name></member>
      <member refid="class_c_bite_pop_1a0053ae41c70babe967c5931f491ea865" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getCurParams</name></member>
      <member refid="class_c_bite_pop_1a7e1fbb7f7e9aaf8f73eb865fa4610185" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getCurPopPos</name></member>
      <member refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getCurPopSize</name></member>
      <member refid="class_c_bite_pop_1aecaac61269e65bda93cb2dc1a3a26091" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>getGaussianInt</name></member>
      <member refid="class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d" prot="public" virt="pure-virtual"><scope>CBiteOpt</scope><name>getMaxValues</name></member>
      <member refid="class_c_bite_par_pops_1afa8a97732cea882b664c2d0fbedf2289" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>getMinDistParPop</name></member>
      <member refid="class_c_bite_opt_1af25cdfb71a0ad9081148c31da58fe949" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>getMinSolIndex</name></member>
      <member refid="class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d" prot="public" virt="pure-virtual"><scope>CBiteOpt</scope><name>getMinValues</name></member>
      <member refid="class_c_bite_pop_1ad6cbe6cfbf9954dcb6f8a223a5e1f36b" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getObjPtr</name></member>
      <member refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getParamsOrdered</name></member>
      <member refid="class_c_bite_pop_1ac2a01e9eb6b884a0b318e4b914273acf" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getPopParams</name></member>
      <member refid="class_c_bite_pop_1aa4f3255c9607f72eff280f8c3c09143f" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getRankPtr</name></member>
      <member refid="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>getRealValue</name></member>
      <member refid="class_c_bite_opt_base_1a96f3b9e0a82d830bc34c17a5d0f8fa19" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getSelCount</name></member>
      <member refid="class_c_bite_opt_base_1afd1006a5d6154064115a205b54ecaa8c" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getSelNames</name></member>
      <member refid="class_c_bite_opt_base_1a2eaae4dd1761eaef42ead68546994c12" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>getSels</name></member>
      <member refid="class_c_bite_opt_base_1a48296b534db162fa0007ff83757cb84b" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>HiBound</name></member>
      <member refid="class_c_bite_pop_1a48d6ede5c82534c973e0458726e820dd" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>incrCurPopSize</name></member>
      <member refid="class_c_bite_opt_1a24a8733fc9dbb2c7e314b699fc360d7b" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>init</name></member>
      <member refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" prot="protected" virt="virtual"><scope>CBiteOpt</scope><name>initBuffers</name></member>
      <member refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>initCommonVars</name></member>
      <member refid="class_c_bite_pop_1ac9adf8849ed7251dadd94815e20bdee8" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>IntMantBits</name></member>
      <member refid="class_c_bite_pop_1a27448c9be1bed517e4a48aa656ca4f76" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>IntMantMask</name></member>
      <member refid="class_c_bite_pop_1a1302e3c2e578dd650aedb57e18645092" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>IntMantMult</name></member>
      <member refid="class_c_bite_pop_1a8c64d2e83f225b034df818b06b09ecd2" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>IntMantMult2</name></member>
      <member refid="class_c_bite_pop_1aeba03d86b17ed01a97dc8225c5598b2d" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>IntMantMultM</name></member>
      <member refid="class_c_bite_pop_1a8009a96dd8a678daaefc9410ba2e0a76" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>IntOverBits</name></member>
      <member refid="class_c_bite_opt_1a3af3717f98de343325970c75aca0845c" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>M1ASel</name></member>
      <member refid="class_c_bite_opt_1a7e0f0eb4591c8c8f0a0147324e91e9e1" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>M1BSel</name></member>
      <member refid="class_c_bite_opt_1a19ae8f821f9f26a9c0e01870bad6c42a" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>M1CSel</name></member>
      <member refid="class_c_bite_opt_1a03f51391b90a59f023178008e3d27746" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>M1Sel</name></member>
      <member refid="class_c_bite_opt_1a7f28d33448459a4a860f6df420333afc" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>M2BSel</name></member>
      <member refid="class_c_bite_opt_1a7d27a27405a83e13d6674d22e22c4f4f" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>M2Sel</name></member>
      <member refid="class_c_bite_opt_base_1ab1e0b2f8caf76a2a75401e2f6bc913ba" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>MaxApplySels</name></member>
      <member refid="class_c_bite_par_pops_1a451f5fa8bb3503f9c344fe03f46ffcc9" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>MaxParPopCount</name></member>
      <member refid="class_c_bite_opt_base_1ad4c10c5958656e9ad5bb0073415b9c9f" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>MaxSelCount</name></member>
      <member refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>MaxValues</name></member>
      <member refid="class_c_bite_opt_1a91a52c9eab07a265fce92f0ba0ec0d03" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>MethodSel</name></member>
      <member refid="class_c_bite_opt_1a26719d83668ff3b3cce919878c358967" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>MinSolMulSel</name></member>
      <member refid="class_c_bite_opt_1a1f08554f3c3fffb89fafd91104d6ac5d" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>MinSolPwrSel</name></member>
      <member refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>MinValues</name></member>
      <member refid="class_c_bite_pop_1a41f29468becc588bea6ff3f842db93ea" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>NeedCentUpdate</name></member>
      <member refid="class_c_bite_opt_1a764c6c8faa178116999c26b3866f8189" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>NewCost</name></member>
      <member refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>NewValues</name></member>
      <member refid="class_c_bite_pop_1a2f7c6a4707e23c21197ab32b71d900c7" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ObjCount</name></member>
      <member refid="class_c_bite_opt_1a7c347ab2966fe6e79a9022fb136d25fc" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>OldPop</name></member>
      <member refid="class_c_bite_opt_base_1a8b1b8265762299edcd1714553ce2104d" prot="private" virt="non-virtual"><scope>CBiteOpt</scope><name>operator=</name></member>
      <member refid="class_c_bite_pop_1ab18cf322db6ab186db1e19b53e34c232" prot="public" virt="non-virtual" ambiguityscope="CBiteParPops&lt; int64_t &gt;::"><scope>CBiteOpt</scope><name>operator=</name></member>
      <member refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d" prot="public" virt="pure-virtual"><scope>CBiteOpt</scope><name>optcost</name></member>
      <member refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>optimize</name></member>
      <member refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ParamCount</name></member>
      <member refid="class_c_bite_pop_1a884c9ad4c0327aaa0110a23a89f5697a" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ParamCountI</name></member>
      <member refid="class_c_bite_opt_1aa2ca8983a05dc599ff5a5f47d3af16b4" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ParOpt</name></member>
      <member refid="class_c_bite_opt_1a2ddf8b2ba7691dc249b50baab668a5c8" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ParOpt2</name></member>
      <member refid="class_c_bite_opt_1afb37a6bb1eacba21280536ee17511830" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ParOpt2Pop</name></member>
      <member refid="class_c_bite_opt_1a1926decbab37c16bdf14787724e875d6" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ParOpt2Sel</name></member>
      <member refid="class_c_bite_opt_1a93a88d27436aa1660edea574fea346ef" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ParOptPop</name></member>
      <member refid="class_c_bite_par_pops_1aea59bf6c1cf9894f944d07cec99882ee" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ParPopCount</name></member>
      <member refid="class_c_bite_opt_1a47f66536806d836d1ec0ee5926995c0d" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ParPopPSel</name></member>
      <member refid="class_c_bite_par_pops_1a79983cca58bd18a6ff73120e65a976dd" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>ParPops</name></member>
      <member refid="class_c_bite_opt_1acd43fdffae9a65684c1436aaee087fd1" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>PopChangeDecrSel</name></member>
      <member refid="class_c_bite_opt_1acac20a0af0c58f4aa58fb20bf4be11d5" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>PopChangeIncrSel</name></member>
      <member refid="class_c_bite_pop_1a6d4a3479ca9e60de6cf4667d5b2937a5" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>PopCnsOffs</name></member>
      <member refid="class_c_bite_pop_1a3cdac0ad2cf5c8403f1f7676171f4e76" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>PopItemSize</name></member>
      <member refid="class_c_bite_pop_1a98e2af75120c4184b271c14d22acf9d4" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>PopObjOffs</name></member>
      <member refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>PopParams</name></member>
      <member refid="class_c_bite_pop_1ac69b014720b11a472509b22588eaf6c3" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>PopParamsBuf</name></member>
      <member refid="class_c_bite_pop_1a3ecc4ffcf1c6f3f9b4e4e5a873c481fe" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>PopRankOffs</name></member>
      <member refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>PopSize</name></member>
      <member refid="class_c_bite_pop_1a0b64743a84d5af143d44e7f6e9f02ada" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>PopSize1</name></member>
      <member refid="class_c_bite_opt_1a80651b5ffb10feccb67729f4c472a5dd" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>ptype</name></member>
      <member refid="class_c_bite_pop_1a767519aa2fcc2667dc135a131bc9fd85" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>resetCurPopPos</name></member>
      <member refid="class_c_bite_opt_base_1ae9b284aca73ab2f6784f12174e391f7b" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>SelCount</name></member>
      <member refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>select</name></member>
      <member refid="class_c_bite_opt_1ab98060db69130d7610818bddda8c7115" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>selectAltPop</name></member>
      <member refid="class_c_bite_opt_1a344271b2490d03eaa0c8e1ab062d916d" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>selectParPop</name></member>
      <member refid="class_c_bite_opt_base_1a43d69538ae5aa7d78d8b3a3e821902b7" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>SelNames</name></member>
      <member refid="class_c_bite_opt_base_1aebc1904c883f8b4dafefeda608c4536b" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>Sels</name></member>
      <member refid="class_c_bite_par_pops_1a24cc3d1978b4dbe57fad8a6f6d7efd8a" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>setParPopCount</name></member>
      <member refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>StallCount</name></member>
      <member refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>TmpParams</name></member>
      <member refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>updateBestCost</name></member>
      <member refid="class_c_bite_pop_1a7850902dad276dcecea68559eaccc168" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>updateCentroid</name></member>
      <member refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>updateDiffValues</name></member>
      <member refid="class_c_bite_opt_1a73dc570985bec54dc288690c31a8d8c7" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>updateDims</name></member>
      <member refid="class_c_bite_opt_1a168cd86a91750b0548698f046e4b6d83" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>updateParPop</name></member>
      <member refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" prot="public" virt="non-virtual"><scope>CBiteOpt</scope><name>updatePop</name></member>
      <member refid="class_c_bite_opt_1ab3a911c7924b1a55c9a38365ea1e60ef" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>UseParOpt</name></member>
      <member refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>wrapParam</name></member>
      <member refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>wrapParamReal</name></member>
      <member refid="class_c_bite_pop_1a0d5ab322641bb1a091df91ff7ee630c4" prot="protected" virt="non-virtual"><scope>CBiteOpt</scope><name>zeroParams</name></member>
      <member refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" prot="public" virt="virtual"><scope>CBiteOpt</scope><name>~CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce" prot="public" virt="virtual"><scope>CBiteOpt</scope><name>~CBiteOptInterface</name></member>
      <member refid="class_c_bite_par_pops_1a772516362f17b8e5790596740ce355ba" prot="public" virt="virtual"><scope>CBiteOpt</scope><name>~CBiteParPops</name></member>
      <member refid="class_c_bite_pop_1ac386e4638d6fc6bd5370eeae895347c3" prot="public" virt="virtual"><scope>CBiteOpt</scope><name>~CBitePop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

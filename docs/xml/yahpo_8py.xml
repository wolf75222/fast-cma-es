<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="yahpo_8py" kind="file" language="Python">
    <compoundname>yahpo.py</compoundname>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1yahpo">examples::yahpo</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1yahpo_1afe1322233650f09611ff6bb0bc4331c2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::yahpo.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.yahpo.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="40" column="1" bodyfile="examples/yahpo.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1yahpo_1ae276d68e6662c5f55c586736a173f808" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::yahpo.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.yahpo.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="40" column="1" bodyfile="examples/yahpo.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1yahpo_1ad57fee966233f2df05e0195d0d7e75e6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::yahpo.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.yahpo.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="40" column="1" bodyfile="examples/yahpo.py" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1yahpo_1aca8ebb42199ed8663e4d2fb1704bb11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.yahpo.opt_ranger_hardware</definition>
        <argsstring>(task_id, max_evals=100000)</argsstring>
        <name>opt_ranger_hardware</name>
        <qualifiedname>examples.yahpo.opt_ranger_hardware</qualifiedname>
        <param>
          <type>task_id</type>
          <defname>task_id</defname>
        </param>
        <param>
          <type>max_evals</type>
          <defname>max_evals</defname>
          <defval>100000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="43" column="1" bodyfile="examples/yahpo.py" bodystart="43" bodyend="84"/>
        <references refid="namespaceexamples_1_1yahpo_1aafb5885cf1e9c035878faf3bee87ccb0" compoundref="yahpo_8py" startline="173" endline="188">examples.yahpo.evaluate_ranger_</references>
        <references refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" compoundref="yahpo_8py" startline="228" endline="242">examples.yahpo.plot</references>
        <referencedby refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" compoundref="yahpo_8py" startline="228" endline="242">examples.yahpo.plot</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1yahpo_1a657da003ad951471dc74d132dda50c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.yahpo.opt_ranger_interpretability</definition>
        <argsstring>(task_id, max_evals=100000)</argsstring>
        <name>opt_ranger_interpretability</name>
        <qualifiedname>examples.yahpo.opt_ranger_interpretability</qualifiedname>
        <param>
          <type>task_id</type>
          <defname>task_id</defname>
        </param>
        <param>
          <type>max_evals</type>
          <defname>max_evals</defname>
          <defval>100000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="85" column="1" bodyfile="examples/yahpo.py" bodystart="85" bodyend="126"/>
        <references refid="namespaceexamples_1_1yahpo_1aafb5885cf1e9c035878faf3bee87ccb0" compoundref="yahpo_8py" startline="173" endline="188">examples.yahpo.evaluate_ranger_</references>
        <references refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" compoundref="yahpo_8py" startline="228" endline="242">examples.yahpo.plot</references>
        <referencedby refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" compoundref="yahpo_8py" startline="228" endline="242">examples.yahpo.plot</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1yahpo_1aa0f008c277a52f11bb7ae3430c49384c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.yahpo.opt_xgboost</definition>
        <argsstring>(task_id, max_evals=100000)</argsstring>
        <name>opt_xgboost</name>
        <qualifiedname>examples.yahpo.opt_xgboost</qualifiedname>
        <param>
          <type>task_id</type>
          <defname>task_id</defname>
        </param>
        <param>
          <type>max_evals</type>
          <defname>max_evals</defname>
          <defval>100000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="127" column="1" bodyfile="examples/yahpo.py" bodystart="127" bodyend="172"/>
        <references refid="namespaceexamples_1_1yahpo_1ae80be8ace972b91258cc5d78d421d250" compoundref="yahpo_8py" startline="189" endline="205">examples.yahpo.evaluate_xgboost_</references>
        <references refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" compoundref="yahpo_8py" startline="228" endline="242">examples.yahpo.plot</references>
        <referencedby refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" compoundref="yahpo_8py" startline="228" endline="242">examples.yahpo.plot</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1yahpo_1aafb5885cf1e9c035878faf3bee87ccb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.yahpo.evaluate_ranger_</definition>
        <argsstring>(x, features, params, bench, task_id, lower, upper, trafo=True)</argsstring>
        <name>evaluate_ranger_</name>
        <qualifiedname>examples.yahpo.evaluate_ranger_</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>features</type>
          <defname>features</defname>
        </param>
        <param>
          <type>params</type>
          <defname>params</defname>
        </param>
        <param>
          <type>bench</type>
          <defname>bench</defname>
        </param>
        <param>
          <type>task_id</type>
          <defname>task_id</defname>
        </param>
        <param>
          <type>lower</type>
          <defname>lower</defname>
        </param>
        <param>
          <type>upper</type>
          <defname>upper</defname>
        </param>
        <param>
          <type>trafo</type>
          <defname>trafo</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="173" column="1" bodyfile="examples/yahpo.py" bodystart="173" bodyend="188"/>
        <references refid="namespaceexamples_1_1yahpo_1a15c68f9f26552d8ed5597f36e8ddbb0e" compoundref="yahpo_8py" startline="206" endline="211">examples.yahpo.retrafo_</references>
        <referencedby refid="namespaceexamples_1_1yahpo_1aca8ebb42199ed8663e4d2fb1704bb11d" compoundref="yahpo_8py" startline="43" endline="84">examples.yahpo.opt_ranger_hardware</referencedby>
        <referencedby refid="namespaceexamples_1_1yahpo_1a657da003ad951471dc74d132dda50c01" compoundref="yahpo_8py" startline="85" endline="126">examples.yahpo.opt_ranger_interpretability</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1yahpo_1ae80be8ace972b91258cc5d78d421d250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.yahpo.evaluate_xgboost_</definition>
        <argsstring>(x, features, params, bench, task_id, lower, upper, trafo=True)</argsstring>
        <name>evaluate_xgboost_</name>
        <qualifiedname>examples.yahpo.evaluate_xgboost_</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>features</type>
          <defname>features</defname>
        </param>
        <param>
          <type>params</type>
          <defname>params</defname>
        </param>
        <param>
          <type>bench</type>
          <defname>bench</defname>
        </param>
        <param>
          <type>task_id</type>
          <defname>task_id</defname>
        </param>
        <param>
          <type>lower</type>
          <defname>lower</defname>
        </param>
        <param>
          <type>upper</type>
          <defname>upper</defname>
        </param>
        <param>
          <type>trafo</type>
          <defname>trafo</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="189" column="1" bodyfile="examples/yahpo.py" bodystart="189" bodyend="205"/>
        <references refid="namespaceexamples_1_1yahpo_1a15c68f9f26552d8ed5597f36e8ddbb0e" compoundref="yahpo_8py" startline="206" endline="211">examples.yahpo.retrafo_</references>
        <referencedby refid="namespaceexamples_1_1yahpo_1aa0f008c277a52f11bb7ae3430c49384c" compoundref="yahpo_8py" startline="127" endline="172">examples.yahpo.opt_xgboost</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1yahpo_1a15c68f9f26552d8ed5597f36e8ddbb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.yahpo.retrafo_</definition>
        <argsstring>(z, lower, upper)</argsstring>
        <name>retrafo_</name>
        <qualifiedname>examples.yahpo.retrafo_</qualifiedname>
        <param>
          <type>z</type>
          <defname>z</defname>
        </param>
        <param>
          <type>lower</type>
          <defname>lower</defname>
        </param>
        <param>
          <type>upper</type>
          <defname>upper</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="206" column="1" bodyfile="examples/yahpo.py" bodystart="206" bodyend="211"/>
        <referencedby refid="namespaceexamples_1_1yahpo_1aafb5885cf1e9c035878faf3bee87ccb0" compoundref="yahpo_8py" startline="173" endline="188">examples.yahpo.evaluate_ranger_</referencedby>
        <referencedby refid="namespaceexamples_1_1yahpo_1ae80be8ace972b91258cc5d78d421d250" compoundref="yahpo_8py" startline="189" endline="205">examples.yahpo.evaluate_xgboost_</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1yahpo_1abed4facab8c6aaf0a992c93f39b25297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.yahpo.plot3d</definition>
        <argsstring>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</argsstring>
        <name>plot3d</name>
        <qualifiedname>examples.yahpo.plot3d</qualifiedname>
        <param>
          <type>ys</type>
          <defname>ys</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>xlabel</type>
          <defname>xlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>ylabel</type>
          <defname>ylabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>zlabel</type>
          <defname>zlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="212" column="1" bodyfile="examples/yahpo.py" bodystart="212" bodyend="227"/>
        <referencedby refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" compoundref="yahpo_8py" startline="228" endline="242">examples.yahpo.plot</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.yahpo.plot</definition>
        <argsstring>(archive, name)</argsstring>
        <name>plot</name>
        <qualifiedname>examples.yahpo.plot</qualifiedname>
        <param>
          <type>archive</type>
          <defname>archive</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/yahpo.py" line="228" column="1" bodyfile="examples/yahpo.py" bodystart="228" bodyend="242"/>
        <references refid="namespaceexamples_1_1yahpo_1aca8ebb42199ed8663e4d2fb1704bb11d" compoundref="yahpo_8py" startline="43" endline="84">examples.yahpo.opt_ranger_hardware</references>
        <references refid="namespaceexamples_1_1yahpo_1a657da003ad951471dc74d132dda50c01" compoundref="yahpo_8py" startline="85" endline="126">examples.yahpo.opt_ranger_interpretability</references>
        <references refid="namespaceexamples_1_1yahpo_1aa0f008c277a52f11bb7ae3430c49384c" compoundref="yahpo_8py" startline="127" endline="172">examples.yahpo.opt_xgboost</references>
        <references refid="namespaceexamples_1_1yahpo_1abed4facab8c6aaf0a992c93f39b25297" compoundref="yahpo_8py" startline="212" endline="227">examples.yahpo.plot3d</references>
        <referencedby refid="namespaceexamples_1_1yahpo_1aca8ebb42199ed8663e4d2fb1704bb11d" compoundref="yahpo_8py" startline="43" endline="84">examples.yahpo.opt_ranger_hardware</referencedby>
        <referencedby refid="namespaceexamples_1_1yahpo_1a657da003ad951471dc74d132dda50c01" compoundref="yahpo_8py" startline="85" endline="126">examples.yahpo.opt_ranger_interpretability</referencedby>
        <referencedby refid="namespaceexamples_1_1yahpo_1aa0f008c277a52f11bb7ae3430c49384c" compoundref="yahpo_8py" startline="127" endline="172">examples.yahpo.opt_xgboost</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1yahpo" refkind="compound"><highlight class="comment">#<sp/>Adapted<sp/>from<sp/>https://github.com/slds-lmu/qdo_yahpo<sp/>for<sp/>application<sp/>of<sp/>fcmaes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>&quot;A<sp/>Collection<sp/>of<sp/>Quality<sp/>Diversity<sp/>Optimization<sp/>Problems<sp/>Derived<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>from<sp/>Hyperparameter<sp/>Optimization<sp/>of<sp/>Machine<sp/>Learning<sp/>Models&quot;<sp/>https://arxiv.org/abs/2204.14061</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Differences<sp/>to<sp/>https://github.com/slds-lmu/qdo_yahpo:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>No<sp/>statistics,<sp/>just<sp/>applies<sp/>the<sp/>Hyperparameter<sp/>Optimization<sp/>and<sp/>ranger<sp/>benchmark<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>Parallelism<sp/>is<sp/>handled<sp/>by<sp/>the<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>Configured<sp/>optimizer<sp/>is<sp/>similar<sp/>to<sp/>&quot;mixed&quot;<sp/>in<sp/>qdo_yahpo,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Uses<sp/>CR-FM-NES<sp/>instead<sp/>of<sp/>CMA-ES<sp/>emitter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>CR-FM-NES<sp/>is<sp/>initialized<sp/>with<sp/>a<sp/>random<sp/>solution<sp/>instead<sp/>of<sp/>a<sp/>niche<sp/>elite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Uses<sp/>Voronoi<sp/>tesselation<sp/>(see<sp/>CVT<sp/>MAP-Elites<sp/>https://arxiv.org/abs/1610.05729)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Map-Elites<sp/>is<sp/>executed<sp/>in<sp/>parallel<sp/>with<sp/>CR-FM-NES<sp/>sharing<sp/>the<sp/>same<sp/>QD-archive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>*<sp/>Instead<sp/>of<sp/>gaussian<sp/>distribution<sp/>Map-Elites<sp/>uses<sp/>simulated<sp/>binary<sp/>crossover<sp/>+<sp/>mutation<sp/>as<sp/>NSGAII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Results<sp/>cannot<sp/>be<sp/>directly<sp/>compared<sp/>since<sp/>different<sp/>tesselation<sp/>is<sp/>used<sp/>(Grid/Voronoi).<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Requires<sp/>yahpo_gym,<sp/>please<sp/>follow<sp/>the<sp/>installation<sp/>instuctions<sp/>at<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/slds-lmu/yahpo_gym/tree/main/yahpo_gym</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>install<sp/>first:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pip<sp/>install<sp/>--upgrade<sp/>setuptools[core]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pip<sp/>install<sp/>swig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pip<sp/>install<sp/>box2d-py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>yahpo_gym<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>benchmark_set</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>yahpo_gym.local_config<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LocalConfiguration</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>yahpo_gym.benchmarks.iaml</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>diversifier,<sp/>mapelites</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="40" refid="namespaceexamples_1_1yahpo_1ae276d68e6662c5f55c586736a173f808" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespaceexamples_1_1yahpo_1aca8ebb42199ed8663e4d2fb1704bb11d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1yahpo_1aca8ebb42199ed8663e4d2fb1704bb11d" kindref="member">opt_ranger_hardware</ref>(task_id,<sp/>max_evals<sp/>=<sp/>100000):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>bench<sp/>=<sp/>benchmark_set.BenchmarkSet(</highlight><highlight class="stringliteral">&quot;iaml_ranger&quot;</highlight><highlight class="normal">,<sp/>check<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>bench.set_instance(task_id)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>search_space<sp/>=<sp/>bench.get_opt_space()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>params<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;num.trees&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mtry.ratio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;min.node.size&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sample.fraction&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>[(search_space.get_hyperparameter(param).lower,<sp/>search_space.get_hyperparameter(param).upper)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>param<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>params]</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>[bound[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bound<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bounds]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>[bound[1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bound<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bounds]</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;41146&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((1.,<sp/>0.19),<sp/>(200.,<sp/>4.5))<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;40981&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((1.,<sp/>0.10),<sp/>(40.,<sp/>0.65))<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1489&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((1.,<sp/>0.19),<sp/>(200.,<sp/>4.5))<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1067&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((1.,<sp/>0.13),<sp/>(78.,<sp/>1.55))<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>len(bounds)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>qd_dim<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds([0]*dim,<sp/>[1]*dim)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">qd_fun(x):<sp/></highlight><highlight class="comment">#<sp/>Only<sp/>a<sp/>single<sp/>fitness<sp/>is<sp/>needed.<sp/>Parallelism<sp/>is<sp/>handled<sp/>by<sp/>the<sp/>optimizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yd<sp/>=<sp/><ref refid="namespaceexamples_1_1yahpo_1aafb5885cf1e9c035878faf3bee87ccb0" kindref="member">evaluate_ranger_</ref>([x],<sp/>[</highlight><highlight class="stringliteral">&quot;rammodel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;timepredict&quot;</highlight><highlight class="normal">],<sp/>params,<sp/>bench,<sp/>task_id,<sp/>lower,<sp/>upper)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yd[0][0],<sp/>yd[0][1:]</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>niche_num<sp/>=<sp/>4000</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>arch<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;elites&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:16}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;CRMFNES_CPP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;max_evals&apos;</highlight><highlight class="normal">:200,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:16,<sp/></highlight><highlight class="stringliteral">&apos;stall_criterion&apos;</highlight><highlight class="normal">:3}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>diversifier.minimize(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1mapelites_1_1wrapper" kindref="compound">mapelites.wrapper</ref>(qd_fun,<sp/>qd_dim,<sp/>interval=100000),<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds,<sp/>qd_bounds,<sp/>opt_params=[opt_params0,<sp/>opt_params1],<sp/>max_evals=max_evals,<sp/>archive<sp/>=<sp/>arch,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>niche_num<sp/>=<sp/>niche_num,<sp/>samples_per_niche<sp/>=<sp/>20)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;range_hard&quot;</highlight><highlight class="normal"><sp/>+<sp/>task_id</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;final<sp/>archive:&apos;</highlight><highlight class="normal">,<sp/>archive.info())</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>archive.save(name)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" kindref="member">plot</ref>(archive,<sp/>name)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="namespaceexamples_1_1yahpo_1a657da003ad951471dc74d132dda50c01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1yahpo_1a657da003ad951471dc74d132dda50c01" kindref="member">opt_ranger_interpretability</ref>(task_id,<sp/>max_evals<sp/>=<sp/>100000):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>bench<sp/>=<sp/>benchmark_set.BenchmarkSet(</highlight><highlight class="stringliteral">&quot;iaml_ranger&quot;</highlight><highlight class="normal">,<sp/>check<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>bench.set_instance(task_id)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>search_space<sp/>=<sp/>bench.get_opt_space()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>params<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;num.trees&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mtry.ratio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;min.node.size&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sample.fraction&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>[(search_space.get_hyperparameter(param).lower,<sp/>search_space.get_hyperparameter(param).upper)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>param<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>params]</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>[bound[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bound<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bounds]</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>[bound[1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bound<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bounds]</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;41146&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((0.,<sp/>0.),<sp/>(20.,<sp/>1.))<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;40981&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((0.,<sp/>0.),<sp/>(14.,<sp/>1.))<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1489&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((0.,<sp/>0.),<sp/>(5.,<sp/>1.))<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1067&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((0.,<sp/>0.),<sp/>(21.,<sp/>1.))<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>len(bounds)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>qd_dim<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds([0]*dim,<sp/>[1]*dim)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">qd_fun(x):<sp/></highlight><highlight class="comment">#<sp/>Only<sp/>a<sp/>single<sp/>fitness<sp/>is<sp/>needed.<sp/>Parallelism<sp/>is<sp/>handled<sp/>by<sp/>the<sp/>optimizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yd<sp/>=<sp/><ref refid="namespaceexamples_1_1yahpo_1aafb5885cf1e9c035878faf3bee87ccb0" kindref="member">evaluate_ranger_</ref>([x],<sp/>[</highlight><highlight class="stringliteral">&quot;nf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ias&quot;</highlight><highlight class="normal">],<sp/>params,<sp/>bench,<sp/>task_id,<sp/>lower,<sp/>upper)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yd[0][0],<sp/>yd[0][1:]</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>niche_num<sp/>=<sp/>4000</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>arch<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;elites&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:16}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;CRMFNES_CPP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;max_evals&apos;</highlight><highlight class="normal">:200,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:16,<sp/></highlight><highlight class="stringliteral">&apos;stall_criterion&apos;</highlight><highlight class="normal">:3}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>diversifier.minimize(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1mapelites_1_1wrapper" kindref="compound">mapelites.wrapper</ref>(qd_fun,<sp/>qd_dim,<sp/>interval=100000),<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds,<sp/>qd_bounds,<sp/>opt_params=[opt_params0,<sp/>opt_params1],<sp/>max_evals=max_evals,<sp/>archive<sp/>=<sp/>arch,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>niche_num<sp/>=<sp/>niche_num,<sp/>samples_per_niche<sp/>=<sp/>20)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;range&quot;</highlight><highlight class="normal"><sp/>+<sp/>task_id</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;final<sp/>archive:&apos;</highlight><highlight class="normal">,<sp/>archive.info())</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>archive.save(name)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" kindref="member">plot</ref>(archive,<sp/>name)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="namespaceexamples_1_1yahpo_1aa0f008c277a52f11bb7ae3430c49384c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1yahpo_1aa0f008c277a52f11bb7ae3430c49384c" kindref="member">opt_xgboost</ref>(task_id,<sp/>max_evals<sp/>=<sp/>100000):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>bench<sp/>=<sp/>benchmark_set.BenchmarkSet(</highlight><highlight class="stringliteral">&quot;iaml_xgboost&quot;</highlight><highlight class="normal">,<sp/>check<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>disable<sp/>input<sp/>checking<sp/>of<sp/>parameters<sp/>for<sp/>speed<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>bench.set_instance(task_id)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>search_space<sp/>=<sp/>bench.get_opt_space()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>params<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lambda&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nrounds&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;subsample&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;colsample_bylevel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;colsample_bytree&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;max_depth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;min_child_weight&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>[(search_space.get_hyperparameter(param).lower,<sp/>search_space.get_hyperparameter(param).upper)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>param<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>params]</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>defaults<sp/>=<sp/>[0.001,<sp/>0.001,<sp/>1000.,<sp/>1.,<sp/>1.,<sp/>1.,<sp/>0.3,<sp/>0.001,<sp/>6.,<sp/>3.]</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(params)):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>search_space.get_hyperparameter(params[i]).log:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds[i]<sp/>=<sp/>np.log(bounds[i])</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaults[i]<sp/>=<sp/>np.log(defaults[i])</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>[bound[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bound<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bounds]</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>[bound[1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bound<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bounds]</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;41146&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((0.,<sp/>0.),<sp/>(20.,<sp/>1.))<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;40981&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((0.,<sp/>0.),<sp/>(14.,<sp/>1.))<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1489&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((0.,<sp/>0.),<sp/>(5.,<sp/>1.))<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>task_id<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1067&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qd_bounds<sp/>=<sp/>Bounds((0.,<sp/>0.),<sp/>(21.,<sp/>1.))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>qd_dim<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>len(defaults)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds([0]*dim,<sp/>[1]*dim)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">qd_fun(x):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yd<sp/>=<sp/><ref refid="namespaceexamples_1_1yahpo_1ae80be8ace972b91258cc5d78d421d250" kindref="member">evaluate_xgboost_</ref>([x],<sp/>[</highlight><highlight class="stringliteral">&quot;nf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ias&quot;</highlight><highlight class="normal">],<sp/>params,<sp/>bench,<sp/>task_id,<sp/>lower,<sp/>upper)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yd[0][0],<sp/>yd[0][1:]</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>niche_num<sp/>=<sp/>4000</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>arch<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;elites&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:16}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;CRMFNES_CPP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;max_evals&apos;</highlight><highlight class="normal">:200,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:16,<sp/></highlight><highlight class="stringliteral">&apos;stall_criterion&apos;</highlight><highlight class="normal">:3}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>diversifier.minimize(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1mapelites_1_1wrapper" kindref="compound">mapelites.wrapper</ref>(qd_fun,<sp/>qd_dim,<sp/>interval=100000),<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds,<sp/>qd_bounds,<sp/>opt_params=[opt_params0,<sp/>opt_params1],<sp/>max_evals=max_evals,<sp/>archive<sp/>=<sp/>arch,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>niche_num<sp/>=<sp/>niche_num,<sp/>samples_per_niche<sp/>=<sp/>20)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;xgboost_opt&quot;</highlight><highlight class="normal"><sp/>+<sp/>task_id</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;final<sp/>archive:&apos;</highlight><highlight class="normal">,<sp/>archive.info())</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>archive.save(name)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" kindref="member">plot</ref>(archive,<sp/>name)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="namespaceexamples_1_1yahpo_1aafb5885cf1e9c035878faf3bee87ccb0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1yahpo_1aafb5885cf1e9c035878faf3bee87ccb0" kindref="member">evaluate_ranger_</ref>(x,<sp/>features,<sp/>params,<sp/>bench,<sp/>task_id,<sp/>lower,<sp/>upper,<sp/>trafo=True):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>trafo:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.array([<ref refid="namespaceexamples_1_1yahpo_1a15c68f9f26552d8ed5597f36e8ddbb0e" kindref="member">retrafo_</ref>(i,<sp/>lower,<sp/>upper)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x])</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>YAHPO<sp/>Gym<sp/>supports<sp/>batch<sp/>predicts<sp/>if<sp/>configs<sp/>are<sp/>passed<sp/>as<sp/>a<sp/>list<sp/>of<sp/>dicts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>config<sp/>=<sp/>[dict(zip(params,<sp/>x[i]))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(x.shape[0])]</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>the<sp/>other<sp/>hyperparameters<sp/>not<sp/>part<sp/>of<sp/>the<sp/>search<sp/>space<sp/>and<sp/>respect<sp/>integers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(config)):</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config[i].update({</highlight><highlight class="stringliteral">&quot;num.trees&quot;</highlight><highlight class="normal">:round(config[i][</highlight><highlight class="stringliteral">&quot;num.trees&quot;</highlight><highlight class="normal">]),<sp/></highlight><highlight class="stringliteral">&quot;min.node.size&quot;</highlight><highlight class="normal">:round(config[i][</highlight><highlight class="stringliteral">&quot;min.node.size&quot;</highlight><highlight class="normal">])})</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config[i].update({</highlight><highlight class="stringliteral">&quot;task_id&quot;</highlight><highlight class="normal">:task_id,<sp/></highlight><highlight class="stringliteral">&quot;trainsize&quot;</highlight><highlight class="normal">:1,<sp/></highlight><highlight class="stringliteral">&quot;replace&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;respect.unordered.factors&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;splitrule&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;gini&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>results<sp/>=<sp/>bench.objective_function(config)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>targets<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;mmce&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>targets.extend(features)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>pd.DataFrame(results)[targets]</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>y[[</highlight><highlight class="stringliteral">&quot;mmce&quot;</highlight><highlight class="normal">]]<sp/>=<sp/>1<sp/>-<sp/>y[[</highlight><highlight class="stringliteral">&quot;mmce&quot;</highlight><highlight class="normal">]]<sp/><sp/></highlight><highlight class="comment">#<sp/>pyribs<sp/>maximizes<sp/>by<sp/>default<sp/>so<sp/>we<sp/>turn<sp/>mmce<sp/>into<sp/>acc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y.values<sp/><sp/></highlight><highlight class="comment">#<sp/>pyribs<sp/>expects<sp/>a<sp/>numpy<sp/>array<sp/>as<sp/>return<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="namespaceexamples_1_1yahpo_1ae80be8ace972b91258cc5d78d421d250" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1yahpo_1ae80be8ace972b91258cc5d78d421d250" kindref="member">evaluate_xgboost_</ref>(x,<sp/>features,<sp/>params,<sp/>bench,<sp/>task_id,<sp/>lower,<sp/>upper,<sp/>trafo=True):</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>trafo:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.array([<ref refid="namespaceexamples_1_1yahpo_1a15c68f9f26552d8ed5597f36e8ddbb0e" kindref="member">retrafo_</ref>(i,<sp/>lower,<sp/>upper)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x])</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>YAHPO<sp/>Gym<sp/>supports<sp/>batch<sp/>predicts<sp/>if<sp/>configs<sp/>are<sp/>passed<sp/>as<sp/>a<sp/>list<sp/>of<sp/>dicts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>config<sp/>=<sp/>[dict(zip(params,<sp/>x[i]))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(x.shape[0])]</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>the<sp/>other<sp/>hyperparameters<sp/>not<sp/>part<sp/>of<sp/>the<sp/>search<sp/>space<sp/>and<sp/>respect<sp/>log<sp/>trafos<sp/>and<sp/>integers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(config)):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config[i].update({</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">:np.exp(config[i][</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">]),<sp/></highlight><highlight class="stringliteral">&quot;lambda&quot;</highlight><highlight class="normal">:np.exp(config[i][</highlight><highlight class="stringliteral">&quot;lambda&quot;</highlight><highlight class="normal">]),<sp/></highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal">:np.exp(config[i][</highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal">]),<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">:np.exp(config[i][</highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal">]),<sp/></highlight><highlight class="stringliteral">&quot;min_child_weight&quot;</highlight><highlight class="normal">:np.exp(config[i][</highlight><highlight class="stringliteral">&quot;min_child_weight&quot;</highlight><highlight class="normal">])})</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config[i].update({</highlight><highlight class="stringliteral">&quot;nrounds&quot;</highlight><highlight class="normal">:round(np.exp(config[i][</highlight><highlight class="stringliteral">&quot;nrounds&quot;</highlight><highlight class="normal">])),<sp/></highlight><highlight class="stringliteral">&quot;max_depth&quot;</highlight><highlight class="normal">:round(config[i][</highlight><highlight class="stringliteral">&quot;max_depth&quot;</highlight><highlight class="normal">])})</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config[i].update({</highlight><highlight class="stringliteral">&quot;task_id&quot;</highlight><highlight class="normal">:task_id,<sp/></highlight><highlight class="stringliteral">&quot;trainsize&quot;</highlight><highlight class="normal">:1,<sp/></highlight><highlight class="stringliteral">&quot;booster&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;gbtree&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>results<sp/>=<sp/>bench.objective_function(config)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>targets<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;mmce&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>targets.extend(features)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>pd.DataFrame(results)[targets]</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>y[[</highlight><highlight class="stringliteral">&quot;mmce&quot;</highlight><highlight class="normal">]]<sp/>=<sp/>1<sp/>-<sp/>y[[</highlight><highlight class="stringliteral">&quot;mmce&quot;</highlight><highlight class="normal">]]<sp/><sp/></highlight><highlight class="comment">#<sp/>pyribs<sp/>maximizes<sp/>by<sp/>default<sp/>so<sp/>we<sp/>turn<sp/>mmce<sp/>into<sp/>acc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y.values<sp/><sp/></highlight><highlight class="comment">#<sp/>pyribs<sp/>expects<sp/>a<sp/>numpy<sp/>array<sp/>as<sp/>return<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="namespaceexamples_1_1yahpo_1a15c68f9f26552d8ed5597f36e8ddbb0e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1yahpo_1a15c68f9f26552d8ed5597f36e8ddbb0e" kindref="member">retrafo_</ref>(z,<sp/>lower,<sp/>upper):</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len(z)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(n<sp/>==<sp/>len(lower))</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(n<sp/>==<sp/>len(upper))</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[np.max((lower[i],<sp/>np.min(((z[i]<sp/>*<sp/>(upper[i]<sp/>-<sp/>lower[i]))<sp/>+<sp/>lower[i],<sp/>upper[i]))))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n)]</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="namespaceexamples_1_1yahpo_1abed4facab8c6aaf0a992c93f39b25297" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1yahpo_1abed4facab8c6aaf0a992c93f39b25297" kindref="member">plot3d</ref>(ys,<sp/>name,<sp/>xlabel=&apos;&apos;,<sp/>ylabel=&apos;&apos;,<sp/>zlabel=&apos;&apos;):</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>ys[:,<sp/>0];<sp/>y<sp/>=<sp/>ys[:,<sp/>1];<sp/>z<sp/>=<sp/>ys[:,<sp/>2]</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>plt.figure()</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>ax<sp/>=<sp/>fig.add_subplot()<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.grid()</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>img<sp/>=<sp/>ax.scatter(x,<sp/>y,<sp/>s=4,<sp/>c=z,<sp/>cmap=</highlight><highlight class="stringliteral">&apos;rainbow&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar<sp/>=<sp/>fig.colorbar(img)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(xlabel)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(ylabel)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.grid(visible=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar.set_label(zlabel)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figheight(8)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figwidth(8)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.savefig(name,<sp/>dpi=300)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1yahpo_1a00ed0fa5c4577f6841d751aa5de9beb4" kindref="member">plot</ref>(archive,<sp/>name):</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>si<sp/>=<sp/>archive.argsort()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>ds<sp/>=<sp/>archive.get_ds()[si]</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>archive.get_ys()[si]</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(si)):</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ys[i]<sp/>==<sp/>np.inf:<sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>ds[i]</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ysp.append([d[0],<sp/>d[1],<sp/>ys[i]])</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>np.array(ysp)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>print(len(ysp))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>print(ysp)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1yahpo_1abed4facab8c6aaf0a992c93f39b25297" kindref="member">plot3d</ref>(ysp,<sp/>name,<sp/></highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalConfiguration().init_config()</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>task_id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&quot;41146&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;40981&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1489&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1067&quot;</highlight><highlight class="normal">]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1yahpo_1a657da003ad951471dc74d132dda50c01" kindref="member">opt_ranger_interpretability</ref>(task_id)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1yahpo_1aca8ebb42199ed8663e4d2fb1704bb11d" kindref="member">opt_ranger_hardware</ref>(task_id)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1yahpo_1aa0f008c277a52f11bb7ae3430c49384c" kindref="member">opt_xgboost</ref>(task_id)</highlight></codeline>
    </programlisting>
    <location file="examples/yahpo.py"/>
  </compounddef>
</doxygen>

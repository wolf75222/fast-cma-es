<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_c_s_m_a_e_s_opt" kind="class" language="C++" prot="public">
    <compoundname>CSMAESOpt</compoundname>
    <basecompoundref refid="class_c_bite_opt_base" prot="public" virt="non-virtual">CBiteOptBase&lt; double &gt;</basecompoundref>
    <includes refid="smaesopt_8h" local="no">smaesopt.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_s_m_a_e_s_opt_1a9dcc2658933cb8f1689bd5bf55f4e4f3" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_ort" kindref="compound">CBiteOrt</ref></type>
        <definition>CBiteOrt CSMAESOpt::Ort</definition>
        <argsstring></argsstring>
        <name>Ort</name>
        <qualifiedname>CSMAESOpt::Ort</qualifiedname>
        <briefdescription>
<para>Rotation vector and orthogonalization calculator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/smaesopt.h" line="217" column="10" bodyfile="_fcmaescpp/include/smaesopt.h" bodystart="217" bodyend="-1"/>
        <referencedby refid="class_c_s_m_a_e_s_opt_1ae9526767119fdd032998923fdb4383aa" compoundref="smaesopt_8h" startline="80" endline="112">init</referencedby>
        <referencedby refid="class_c_s_m_a_e_s_opt_1ae6322c2f8523f5a70a5d5bac5b9baa43" compoundref="smaesopt_8h" startline="167" endline="214">optimize</referencedby>
        <referencedby refid="class_c_s_m_a_e_s_opt_1a278f47b6393fed2d1c9ccffee0bc05f9" compoundref="smaesopt_8h" startline="122" endline="153">sample</referencedby>
        <referencedby refid="class_c_s_m_a_e_s_opt_1a962bc70900bbe39b2997eb8bf3249013" compoundref="smaesopt_8h" startline="56" endline="68">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_s_m_a_e_s_opt_1ad423ccfeb5d6b9ae4a6218dd10ab5892" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CSMAESOpt::cure</definition>
        <argsstring></argsstring>
        <name>cure</name>
        <qualifiedname>CSMAESOpt::cure</qualifiedname>
        <briefdescription>
<para>&quot;curem&quot; if population distribution needs to be updated. </para>
        </briefdescription>
        <detaileddescription>
<para>Current evaluation index, greater or equal to </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/smaesopt.h" line="218" column="5" bodyfile="_fcmaescpp/include/smaesopt.h" bodystart="218" bodyend="-1"/>
        <referencedby refid="class_c_s_m_a_e_s_opt_1ae9526767119fdd032998923fdb4383aa" compoundref="smaesopt_8h" startline="80" endline="112">init</referencedby>
        <referencedby refid="class_c_s_m_a_e_s_opt_1ae6322c2f8523f5a70a5d5bac5b9baa43" compoundref="smaesopt_8h" startline="167" endline="214">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_s_m_a_e_s_opt_1a17c264dd72b9ca488ce6cfb53a80b4fe" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CSMAESOpt::curem</definition>
        <argsstring></argsstring>
        <name>curem</name>
        <qualifiedname>CSMAESOpt::curem</qualifiedname>
        <briefdescription>
<para>&quot;cure&quot; value threshold. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/smaesopt.h" line="220" column="5" bodyfile="_fcmaescpp/include/smaesopt.h" bodystart="220" bodyend="-1"/>
        <referencedby refid="class_c_s_m_a_e_s_opt_1ae9526767119fdd032998923fdb4383aa" compoundref="smaesopt_8h" startline="80" endline="112">init</referencedby>
        <referencedby refid="class_c_s_m_a_e_s_opt_1ae6322c2f8523f5a70a5d5bac5b9baa43" compoundref="smaesopt_8h" startline="167" endline="214">optimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_s_m_a_e_s_opt_1a962bc70900bbe39b2997eb8bf3249013" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSMAESOpt::updateDims</definition>
        <argsstring>(const int aParamCount, const int PopSize0=0)</argsstring>
        <name>updateDims</name>
        <qualifiedname>CSMAESOpt::updateDims</qualifiedname>
        <param>
          <type>const int</type>
          <declname>aParamCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>PopSize0</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates dimensionality of *this object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of parameters being optimized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PopSize0</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements in population to use. If set to 0 or negative, the default formula will be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/smaesopt.h" line="56" column="6" bodyfile="_fcmaescpp/include/smaesopt.h" bodystart="56" bodyend="68"/>
        <references refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" compoundref="biteaux_8h" startline="1684" endline="1696">CBiteOptBase&lt; double &gt;::initBuffers</references>
        <references refid="class_c_s_m_a_e_s_opt_1a9dcc2658933cb8f1689bd5bf55f4e4f3" compoundref="smaesopt_8h" startline="217">Ort</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" compoundref="biteaux_8h" startline="1172">CBitePop&lt; double &gt;::PopSize</references>
      </memberdef>
      <memberdef kind="function" id="class_c_s_m_a_e_s_opt_1ae9526767119fdd032998923fdb4383aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSMAESOpt::init</definition>
        <argsstring>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0, const double *const sdevs=NULL)</argsstring>
        <name>init</name>
        <qualifiedname>CSMAESOpt::init</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const double *const</type>
          <declname>InitParams</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>InitRadius</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>const double *const</type>
          <declname>sdevs</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes *this optimizer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitParams</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial parameter values, only used as centroid, not evaluated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial radius, multiplier relative to the default sigma value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/smaesopt.h" line="80" column="6" bodyfile="_fcmaescpp/include/smaesopt.h" bodystart="80" bodyend="112"/>
        <references refid="class_c_s_m_a_e_s_opt_1ad423ccfeb5d6b9ae4a6218dd10ab5892" compoundref="smaesopt_8h" startline="218">cure</references>
        <references refid="class_c_s_m_a_e_s_opt_1a17c264dd72b9ca488ce6cfb53a80b4fe" compoundref="smaesopt_8h" startline="220">curem</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; double &gt;::CurPopSize</references>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; double &gt;::DiffValues</references>
        <references refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; double &gt;::initCommonVars</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; double &gt;::MinValues</references>
        <references refid="class_c_s_m_a_e_s_opt_1a9dcc2658933cb8f1689bd5bf55f4e4f3" compoundref="smaesopt_8h" startline="217">Ort</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" compoundref="biteaux_8h" startline="1182">CBitePop&lt; double &gt;::PopParams</references>
      </memberdef>
      <memberdef kind="function" id="class_c_s_m_a_e_s_opt_1a278f47b6393fed2d1c9ccffee0bc05f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSMAESOpt::sample</definition>
        <argsstring>(CBiteRnd &amp;rnd, double *const op) const</argsstring>
        <name>sample</name>
        <qualifiedname>CSMAESOpt::sample</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function samples a random population vector based on the current distribution, with feasibility guarantee.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">op</parametername>
</parameternamelist>
<parameterdescription>
<para>Resulting parameter vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/smaesopt.h" line="122" column="6" bodyfile="_fcmaescpp/include/smaesopt.h" bodystart="122" bodyend="153"/>
        <references refid="class_c_s_m_a_e_s_opt_1a65fddc11f5608ddba75e7994441a5a5c" compoundref="smaesopt_8h" startline="228" endline="241">isFeasible</references>
        <references refid="class_c_s_m_a_e_s_opt_1a9dcc2658933cb8f1689bd5bf55f4e4f3" compoundref="smaesopt_8h" startline="217">Ort</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" compoundref="biteaux_8h" startline="1819" endline="1850">CBiteOptBase&lt; double &gt;::wrapParamReal</references>
        <referencedby refid="class_c_s_m_a_e_s_opt_1ae6322c2f8523f5a70a5d5bac5b9baa43" compoundref="smaesopt_8h" startline="167" endline="214">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_s_m_a_e_s_opt_1ae6322c2f8523f5a70a5d5bac5b9baa43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CSMAESOpt::optimize</definition>
        <argsstring>(CBiteRnd &amp;rnd, double *const OutCost=NULL, double *const OutValues=NULL)</argsstring>
        <name>optimize</name>
        <qualifiedname>CSMAESOpt::optimize</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>OutCost</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>OutValues</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function performs the parameter optimization iteration that involves 1 objective function evaluation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">OutCost</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, pointer to variable that receives cost of the newly-evaluated solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">OutValues</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, pointer to array that receives a newly-evaluated parameter vector, in real scale, in real value bounds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of non-improving iterations so far. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/smaesopt.h" line="167" column="5" bodyfile="_fcmaescpp/include/smaesopt.h" bodystart="167" bodyend="214"/>
        <references refid="class_c_bite_opt_base_1acc0aa62d6125bd03d3baae22b0bf0467" compoundref="biteaux_8h" startline="1671">CBiteOptBase&lt; double &gt;::AvgCost</references>
        <references refid="class_c_bite_pop_1a57e751582761922bbabff1ddb7af277b" compoundref="biteaux_8h" startline="1241" endline="1244">CBitePop&lt; double &gt;::copyValues</references>
        <references refid="class_c_s_m_a_e_s_opt_1ad423ccfeb5d6b9ae4a6218dd10ab5892" compoundref="smaesopt_8h" startline="218">cure</references>
        <references refid="class_c_s_m_a_e_s_opt_1a17c264dd72b9ca488ce6cfb53a80b4fe" compoundref="smaesopt_8h" startline="220">curem</references>
        <references refid="class_c_bite_pop_1a0053ae41c70babe967c5931f491ea865" compoundref="biteaux_8h" startline="950" endline="953">CBitePop&lt; double &gt;::getCurParams</references>
        <references refid="class_c_bite_opt_base_1a48296b534db162fa0007ff83757cb84b" compoundref="biteaux_8h" startline="1669">CBiteOptBase&lt; double &gt;::HiBound</references>
        <references refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d">CBiteOptInterface::optcost</references>
        <references refid="class_c_s_m_a_e_s_opt_1a9dcc2658933cb8f1689bd5bf55f4e4f3" compoundref="smaesopt_8h" startline="217">Ort</references>
        <references refid="class_c_bite_pop_1a767519aa2fcc2667dc135a131bc9fd85" compoundref="biteaux_8h" startline="981" endline="990">CBitePop&lt; double &gt;::resetCurPopPos</references>
        <references refid="class_c_s_m_a_e_s_opt_1a278f47b6393fed2d1c9ccffee0bc05f9" compoundref="smaesopt_8h" startline="122" endline="153">sample</references>
        <references refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" compoundref="biteaux_8h" startline="1668">CBiteOptBase&lt; double &gt;::StallCount</references>
        <references refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" compoundref="biteaux_8h" startline="1779" endline="1793">CBiteOptBase&lt; double &gt;::updateBestCost</references>
        <references refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" compoundref="biteaux_8h" startline="1039" endline="1151">CBitePop&lt; double &gt;::updatePop</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_c_s_m_a_e_s_opt_1a65fddc11f5608ddba75e7994441a5a5c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CSMAESOpt::isFeasible</definition>
        <argsstring>(const double *const x) const</argsstring>
        <name>isFeasible</name>
        <qualifiedname>CSMAESOpt::isFeasible</qualifiedname>
        <param>
          <type>const double *const</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns &quot;true&quot; if the supplied vector is feasible.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/smaesopt.h" line="228" column="6" bodyfile="_fcmaescpp/include/smaesopt.h" bodystart="228" bodyend="241"/>
        <references refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" compoundref="biteaux_8h" startline="1661">CBiteOptBase&lt; double &gt;::MaxValues</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; double &gt;::MinValues</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <referencedby refid="class_c_s_m_a_e_s_opt_1a278f47b6393fed2d1c9ccffee0bc05f9" compoundref="smaesopt_8h" startline="122" endline="153">sample</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Sigma Adaptation Evolution Strategy class. Fundamentally similar to CMA-ES, but mainly focuses on sigma adaptation.</para>
<para>Description is available at <ulink url="https://github.com/avaneev/biteopt">https://github.com/avaneev/biteopt</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="9">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptBase&lt; double &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="7">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CBiteParPops&lt; double &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="5">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="1">
        <label>CSMAESOpt</label>
        <link refid="class_c_s_m_a_e_s_opt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptBase&lt; double &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="12">
        <label>CBiteOrt</label>
        <link refid="class_c_bite_ort"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CBiteParPops&lt; double &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#ParPops</edgelabel>
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="5">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="9">
        <label>CBiteSelBase</label>
        <link refid="class_c_bite_sel_base"/>
      </node>
      <node id="1">
        <label>CSMAESOpt</label>
        <link refid="class_c_s_m_a_e_s_opt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#Ort</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/smaesopt.h" line="45" column="1" bodyfile="_fcmaescpp/include/smaesopt.h" bodystart="46" bodyend="242"/>
    <listofallmembers>
      <member refid="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>addSel</name></member>
      <member refid="class_c_bite_opt_base_1a3922d6b29602643882d3212071a5e679" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>ApplySels</name></member>
      <member refid="class_c_bite_opt_base_1afc2d6ec2c61d8f41bd39bb99632cf12e" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>ApplySelsCount</name></member>
      <member refid="class_c_bite_opt_base_1a47acdb7a495f75170b0eb457e0dc950e" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>applySelsDecr</name></member>
      <member refid="class_c_bite_opt_base_1aa08dcfff8871910e4d01a94f261ee752" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>applySelsIncr</name></member>
      <member refid="class_c_bite_opt_base_1acc0aa62d6125bd03d3baae22b0bf0467" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>AvgCost</name></member>
      <member refid="class_c_bite_opt_base_1adc4dfe02978fd4ed460f49c7e9a01633" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>BestCost</name></member>
      <member refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>BestValues</name></member>
      <member refid="class_c_bite_pop_1ad4e3a3c5b7a25ad02ef0231bd3fe8388" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>calcLP1Coeff</name></member>
      <member refid="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" prot="private" virt="non-virtual"><scope>CSMAESOpt</scope><name>CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>CBiteOptInterface</name></member>
      <member refid="class_c_bite_par_pops_1a1d00195283da4d97f648da706e5c5cec" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>CBiteParPops</name></member>
      <member refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1a73402384f4b75abf6d956dc086ccf36e" prot="public" virt="non-virtual" ambiguityscope="CBiteParPops&lt; double &gt;::"><scope>CSMAESOpt</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1ab6dec63b0ee3955563c2a3f815614f31" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>CentLPC</name></member>
      <member refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>CentParams</name></member>
      <member refid="class_c_bite_pop_1a2bf725291723a8dcaa215496e3175471" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>CnsCount</name></member>
      <member refid="class_c_bite_pop_1a3fc2d887ae91be62fd9fc3100268e53c" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>copy</name></member>
      <member refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>copyParams</name></member>
      <member refid="class_c_bite_pop_1a57e751582761922bbabff1ddb7af277b" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>copyValues</name></member>
      <member refid="class_c_s_m_a_e_s_opt_1ad423ccfeb5d6b9ae4a6218dd10ab5892" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>cure</name></member>
      <member refid="class_c_s_m_a_e_s_opt_1a17c264dd72b9ca488ce6cfb53a80b4fe" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>curem</name></member>
      <member refid="class_c_bite_pop_1aa7c87b9148768d6104f8d3dfb5abebce" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>CurPopPos</name></member>
      <member refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>CurPopSize</name></member>
      <member refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>CurPopSize1</name></member>
      <member refid="class_c_bite_pop_1aa5105ca75379f9a760dc9f0b9ea30ea7" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>CurPopSizeI</name></member>
      <member refid="class_c_bite_pop_1a4656171c63f1944ae045d6f222d9d33a" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>decrCurPopSize</name></member>
      <member refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" prot="protected" virt="virtual"><scope>CSMAESOpt</scope><name>deleteBuffers</name></member>
      <member refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>DiffValues</name></member>
      <member refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>DiffValuesI</name></member>
      <member refid="class_c_bite_opt_base_1a4b2d3669723dbe251cf391cc10dd4f5c" prot="public" virt="virtual"><scope>CSMAESOpt</scope><name>getBestCost</name></member>
      <member refid="class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2" prot="public" virt="virtual"><scope>CSMAESOpt</scope><name>getBestParams</name></member>
      <member refid="class_c_bite_pop_1a5e6ccebb178353b084084f841b09042d" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getCentroid</name></member>
      <member refid="class_c_bite_pop_1ad38d886687357797479e69098759476a" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getCnsPtr</name></member>
      <member refid="class_c_bite_pop_1a0053ae41c70babe967c5931f491ea865" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getCurParams</name></member>
      <member refid="class_c_bite_pop_1a7e1fbb7f7e9aaf8f73eb865fa4610185" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getCurPopPos</name></member>
      <member refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getCurPopSize</name></member>
      <member refid="class_c_bite_pop_1aecaac61269e65bda93cb2dc1a3a26091" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>getGaussianInt</name></member>
      <member refid="class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d" prot="public" virt="pure-virtual"><scope>CSMAESOpt</scope><name>getMaxValues</name></member>
      <member refid="class_c_bite_par_pops_1afa8a97732cea882b664c2d0fbedf2289" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>getMinDistParPop</name></member>
      <member refid="class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d" prot="public" virt="pure-virtual"><scope>CSMAESOpt</scope><name>getMinValues</name></member>
      <member refid="class_c_bite_pop_1ad6cbe6cfbf9954dcb6f8a223a5e1f36b" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getObjPtr</name></member>
      <member refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getParamsOrdered</name></member>
      <member refid="class_c_bite_pop_1ac2a01e9eb6b884a0b318e4b914273acf" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getPopParams</name></member>
      <member refid="class_c_bite_pop_1aa4f3255c9607f72eff280f8c3c09143f" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getRankPtr</name></member>
      <member refid="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>getRealValue</name></member>
      <member refid="class_c_bite_opt_base_1a96f3b9e0a82d830bc34c17a5d0f8fa19" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getSelCount</name></member>
      <member refid="class_c_bite_opt_base_1afd1006a5d6154064115a205b54ecaa8c" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getSelNames</name></member>
      <member refid="class_c_bite_opt_base_1a2eaae4dd1761eaef42ead68546994c12" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>getSels</name></member>
      <member refid="class_c_bite_opt_base_1a48296b534db162fa0007ff83757cb84b" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>HiBound</name></member>
      <member refid="class_c_bite_pop_1a48d6ede5c82534c973e0458726e820dd" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>incrCurPopSize</name></member>
      <member refid="class_c_s_m_a_e_s_opt_1ae9526767119fdd032998923fdb4383aa" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>init</name></member>
      <member refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" prot="protected" virt="virtual"><scope>CSMAESOpt</scope><name>initBuffers</name></member>
      <member refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>initCommonVars</name></member>
      <member refid="class_c_bite_pop_1ac9adf8849ed7251dadd94815e20bdee8" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>IntMantBits</name></member>
      <member refid="class_c_bite_pop_1a27448c9be1bed517e4a48aa656ca4f76" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>IntMantMask</name></member>
      <member refid="class_c_bite_pop_1a1302e3c2e578dd650aedb57e18645092" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>IntMantMult</name></member>
      <member refid="class_c_bite_pop_1a8c64d2e83f225b034df818b06b09ecd2" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>IntMantMult2</name></member>
      <member refid="class_c_bite_pop_1aeba03d86b17ed01a97dc8225c5598b2d" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>IntMantMultM</name></member>
      <member refid="class_c_bite_pop_1a8009a96dd8a678daaefc9410ba2e0a76" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>IntOverBits</name></member>
      <member refid="class_c_s_m_a_e_s_opt_1a65fddc11f5608ddba75e7994441a5a5c" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>isFeasible</name></member>
      <member refid="class_c_bite_opt_base_1ab1e0b2f8caf76a2a75401e2f6bc913ba" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>MaxApplySels</name></member>
      <member refid="class_c_bite_par_pops_1a451f5fa8bb3503f9c344fe03f46ffcc9" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>MaxParPopCount</name></member>
      <member refid="class_c_bite_opt_base_1ad4c10c5958656e9ad5bb0073415b9c9f" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>MaxSelCount</name></member>
      <member refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>MaxValues</name></member>
      <member refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>MinValues</name></member>
      <member refid="class_c_bite_pop_1a41f29468becc588bea6ff3f842db93ea" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>NeedCentUpdate</name></member>
      <member refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>NewValues</name></member>
      <member refid="class_c_bite_pop_1a2f7c6a4707e23c21197ab32b71d900c7" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>ObjCount</name></member>
      <member refid="class_c_bite_opt_base_1a8b1b8265762299edcd1714553ce2104d" prot="private" virt="non-virtual"><scope>CSMAESOpt</scope><name>operator=</name></member>
      <member refid="class_c_bite_pop_1ab18cf322db6ab186db1e19b53e34c232" prot="public" virt="non-virtual" ambiguityscope="CBiteParPops&lt; double &gt;::"><scope>CSMAESOpt</scope><name>operator=</name></member>
      <member refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d" prot="public" virt="pure-virtual"><scope>CSMAESOpt</scope><name>optcost</name></member>
      <member refid="class_c_s_m_a_e_s_opt_1ae6322c2f8523f5a70a5d5bac5b9baa43" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>optimize</name></member>
      <member refid="class_c_s_m_a_e_s_opt_1a9dcc2658933cb8f1689bd5bf55f4e4f3" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>Ort</name></member>
      <member refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>ParamCount</name></member>
      <member refid="class_c_bite_pop_1a884c9ad4c0327aaa0110a23a89f5697a" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>ParamCountI</name></member>
      <member refid="class_c_bite_par_pops_1aea59bf6c1cf9894f944d07cec99882ee" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>ParPopCount</name></member>
      <member refid="class_c_bite_par_pops_1a79983cca58bd18a6ff73120e65a976dd" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>ParPops</name></member>
      <member refid="class_c_bite_pop_1a6d4a3479ca9e60de6cf4667d5b2937a5" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>PopCnsOffs</name></member>
      <member refid="class_c_bite_pop_1a3cdac0ad2cf5c8403f1f7676171f4e76" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>PopItemSize</name></member>
      <member refid="class_c_bite_pop_1a98e2af75120c4184b271c14d22acf9d4" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>PopObjOffs</name></member>
      <member refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>PopParams</name></member>
      <member refid="class_c_bite_pop_1ac69b014720b11a472509b22588eaf6c3" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>PopParamsBuf</name></member>
      <member refid="class_c_bite_pop_1a3ecc4ffcf1c6f3f9b4e4e5a873c481fe" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>PopRankOffs</name></member>
      <member refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>PopSize</name></member>
      <member refid="class_c_bite_pop_1a0b64743a84d5af143d44e7f6e9f02ada" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>PopSize1</name></member>
      <member refid="class_c_bite_pop_1a767519aa2fcc2667dc135a131bc9fd85" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>resetCurPopPos</name></member>
      <member refid="class_c_s_m_a_e_s_opt_1a278f47b6393fed2d1c9ccffee0bc05f9" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>sample</name></member>
      <member refid="class_c_bite_opt_base_1ae9b284aca73ab2f6784f12174e391f7b" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>SelCount</name></member>
      <member refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>select</name></member>
      <member refid="class_c_bite_opt_base_1a43d69538ae5aa7d78d8b3a3e821902b7" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>SelNames</name></member>
      <member refid="class_c_bite_opt_base_1aebc1904c883f8b4dafefeda608c4536b" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>Sels</name></member>
      <member refid="class_c_bite_par_pops_1a24cc3d1978b4dbe57fad8a6f6d7efd8a" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>setParPopCount</name></member>
      <member refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>StallCount</name></member>
      <member refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>TmpParams</name></member>
      <member refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>updateBestCost</name></member>
      <member refid="class_c_bite_pop_1a7850902dad276dcecea68559eaccc168" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>updateCentroid</name></member>
      <member refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>updateDiffValues</name></member>
      <member refid="class_c_s_m_a_e_s_opt_1a962bc70900bbe39b2997eb8bf3249013" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>updateDims</name></member>
      <member refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" prot="public" virt="non-virtual"><scope>CSMAESOpt</scope><name>updatePop</name></member>
      <member refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>wrapParam</name></member>
      <member refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>wrapParamReal</name></member>
      <member refid="class_c_bite_pop_1a0d5ab322641bb1a091df91ff7ee630c4" prot="protected" virt="non-virtual"><scope>CSMAESOpt</scope><name>zeroParams</name></member>
      <member refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" prot="public" virt="virtual"><scope>CSMAESOpt</scope><name>~CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce" prot="public" virt="virtual"><scope>CSMAESOpt</scope><name>~CBiteOptInterface</name></member>
      <member refid="class_c_bite_par_pops_1a772516362f17b8e5790596740ce355ba" prot="public" virt="virtual"><scope>CSMAESOpt</scope><name>~CBiteParPops</name></member>
      <member refid="class_c_bite_pop_1ac386e4638d6fc6bd5370eeae895347c3" prot="public" virt="virtual"><scope>CSMAESOpt</scope><name>~CBitePop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

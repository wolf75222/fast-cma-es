<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="damp_8py" kind="file" language="Python">
    <compoundname>damp.py</compoundname>
    <innerclass refid="classexamples_1_1damp_1_1fitness" prot="public">examples::damp::fitness</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1damp">examples::damp</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1damp_1aee5e7a2fc7de79849a207c78070823ee" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::damp.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.damp.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="26" column="1" bodyfile="examples/damp.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1damp_1ad9f3f1d785cc34c870cc15ee5622c308" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::damp.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.damp.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="26" column="1" bodyfile="examples/damp.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1damp_1a32a224ccf0ae4bf6b63cf635948a5b74" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::damp.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.damp.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="26" column="1" bodyfile="examples/damp.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1damp_1a172062e32b094696498aa4407e0d1164" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float examples::damp.max_alpha</definition>
        <argsstring></argsstring>
        <name>max_alpha</name>
        <qualifiedname>examples.damp.max_alpha</qualifiedname>
        <initializer>=  0.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="55" column="1" bodyfile="examples/damp.py" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1damp_1af0f3e235c844a34ba40537940b74051a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::damp.max_time</definition>
        <argsstring></argsstring>
        <name>max_time</name>
        <qualifiedname>examples.damp.max_time</qualifiedname>
        <initializer>=  40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="56" column="1" bodyfile="examples/damp.py" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1damp_1a20808bf28b9c96938a20ffc20c60a2ad" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::damp.integrateDamp_C</definition>
        <argsstring></argsstring>
        <name>integrateDamp_C</name>
        <qualifiedname>examples.damp.integrateDamp_C</qualifiedname>
        <initializer>=  libcmalib.integrateDamp_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="144" column="1" bodyfile="examples/damp.py" bodystart="144" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1damp_1ae2820d97b3059c42c2e26899fada5bae" compoundref="damp_8py" startline="45" endline="54">examples.damp.integrate_C</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1damp_1a5743df027c1a41a275daff76a57ace27" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::damp.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>examples.damp.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="145" column="1" bodyfile="examples/damp.py" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1damp_1a39244848ee7e782c96a1c058b81970c6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::damp.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>examples.damp.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="146" column="1" bodyfile="examples/damp.py" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1damp_1afb4a0fde354ff82618033ed7c3d845b8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::damp.freemem</definition>
        <argsstring></argsstring>
        <name>freemem</name>
        <qualifiedname>examples.damp.freemem</qualifiedname>
        <initializer>=  libcmalib.free_mem</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="147" column="1" bodyfile="examples/damp.py" bodystart="147" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1damp_1ae2820d97b3059c42c2e26899fada5bae" compoundref="damp_8py" startline="45" endline="54">examples.damp.integrate_C</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1damp_1a9431849b162e37e8131f56bdd7bc66a0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::damp.dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>examples.damp.dim</qualifiedname>
        <initializer>=  12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="151" column="1" bodyfile="examples/damp.py" bodystart="151" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1damp_1a120d80f0e9c27f43e15cf2b0f733842f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.damp.spring</definition>
        <argsstring>(t, y)</argsstring>
        <name>spring</name>
        <qualifiedname>examples.damp.spring</qualifiedname>
        <param>
          <type>t</type>
          <defname>t</defname>
        </param>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="30" column="1" bodyfile="examples/damp.py" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1damp_1aee7af86328f6a9a28f0ce52ff807f5e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.damp.integrator</definition>
        <argsstring>()</argsstring>
        <name>integrator</name>
        <qualifiedname>examples.damp.integrator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="34" column="1" bodyfile="examples/damp.py" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1damp_1abdb44c5b9f3ef91f23f856138800f22e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.damp.integrate</definition>
        <argsstring>(I, t)</argsstring>
        <name>integrate</name>
        <qualifiedname>examples.damp.integrate</qualifiedname>
        <param>
          <type>I</type>
          <defname>I</defname>
        </param>
        <param>
          <type>t</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="39" column="1" bodyfile="examples/damp.py" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1damp_1ae2820d97b3059c42c2e26899fada5bae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.damp.integrate_C</definition>
        <argsstring>(y, dt, alpha, step)</argsstring>
        <name>integrate_C</name>
        <qualifiedname>examples.damp.integrate_C</qualifiedname>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <param>
          <type>dt</type>
          <defname>dt</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>step</type>
          <defname>step</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="45" column="1" bodyfile="examples/damp.py" bodystart="45" bodyend="54"/>
        <references refid="namespaceexamples_1_1damp_1afb4a0fde354ff82618033ed7c3d845b8" compoundref="damp_8py" startline="147">examples.damp.freemem</references>
        <references refid="namespaceexamples_1_1damp_1a20808bf28b9c96938a20ffc20c60a2ad" compoundref="damp_8py" startline="144">examples.damp.integrateDamp_C</references>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1a182cdb7a5c25015336faa57a9afebef6" compoundref="damp_8py" startline="67" endline="76">examples.damp.fitness.__call__</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1damp_1ac57ba480422b498635e1a96503b7d82e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.damp.parallel_retry</definition>
        <argsstring>(dim, opt=De_cpp(20000))</argsstring>
        <name>parallel_retry</name>
        <qualifiedname>examples.damp.parallel_retry</qualifiedname>
        <param>
          <type>dim</type>
          <defname>dim</defname>
        </param>
        <param>
          <type>opt</type>
          <defname>opt</defname>
          <defval>De_cpp(20000)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="91" column="1" bodyfile="examples/damp.py" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1damp_1a2850a13c811fbfdfe69e7950e68377ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.damp.plot3d</definition>
        <argsstring>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</argsstring>
        <name>plot3d</name>
        <qualifiedname>examples.damp.plot3d</qualifiedname>
        <param>
          <type>ys</type>
          <defname>ys</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>xlabel</type>
          <defname>xlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>ylabel</type>
          <defname>ylabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>zlabel</type>
          <defname>zlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="95" column="1" bodyfile="examples/damp.py" bodystart="95" bodyend="108"/>
        <referencedby refid="namespaceexamples_1_1damp_1a56eb880b40f4b83f6f114f81b6427c0e" compoundref="damp_8py" startline="109" endline="128">examples.damp.plot_archive</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1damp_1a56eb880b40f4b83f6f114f81b6427c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.damp.plot_archive</definition>
        <argsstring>(problem, archive=None)</argsstring>
        <name>plot_archive</name>
        <qualifiedname>examples.damp.plot_archive</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>archive</type>
          <defname>archive</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="109" column="1" bodyfile="examples/damp.py" bodystart="109" bodyend="128"/>
        <references refid="namespaceexamples_1_1damp_1a2850a13c811fbfdfe69e7950e68377ac" compoundref="damp_8py" startline="95" endline="108">examples.damp.plot3d</references>
        <referencedby refid="namespaceexamples_1_1damp_1a7c1340c7c027e4ca57ce802c60670acc" compoundref="damp_8py" startline="129" endline="142">examples.damp.optimize_qd</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1damp_1a7c1340c7c027e4ca57ce802c60670acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.damp.optimize_qd</definition>
        <argsstring>(dim)</argsstring>
        <name>optimize_qd</name>
        <qualifiedname>examples.damp.optimize_qd</qualifiedname>
        <param>
          <type>dim</type>
          <defname>dim</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/damp.py" line="129" column="1" bodyfile="examples/damp.py" bodystart="129" bodyend="142"/>
        <references refid="namespaceexamples_1_1damp_1a56eb880b40f4b83f6f114f81b6427c0e" compoundref="damp_8py" startline="109" endline="128">examples.damp.plot_archive</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1damp" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/><sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Damp.adoc<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time,<sp/>sys,<sp/>warnings,<sp/>math</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>De_cpp,<sp/>wrapper</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>diversifier,<sp/>mapelites</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.integrate<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ode</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="26" refid="namespaceexamples_1_1damp_1ad9f3f1d785cc34c870cc15ee5622c308" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Numpy<sp/>based<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespaceexamples_1_1damp_1a120d80f0e9c27f43e15cf2b0f733842f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">spring(t,<sp/>y):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>x1,<sp/>x2,<sp/>alpha<sp/>=<sp/>y<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[x2,<sp/>-x1<sp/>+<sp/>alpha,<sp/>0]</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespaceexamples_1_1damp_1aee7af86328f6a9a28f0ce52ff807f5e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1damp_1aee7af86328f6a9a28f0ce52ff807f5e3" kindref="member">integrator</ref>():</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>I<sp/>=<sp/>ode(spring)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>I.set_integrator(</highlight><highlight class="stringliteral">&quot;dopri5&quot;</highlight><highlight class="normal">,<sp/>nsteps=1000,<sp/>rtol=1e-6,<sp/>atol=1e-6)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>I</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespaceexamples_1_1damp_1abdb44c5b9f3ef91f23f856138800f22e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1damp_1abdb44c5b9f3ef91f23f856138800f22e" kindref="member">integrate</ref>(I,<sp/>t):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>warnings.catch_warnings():</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warnings.simplefilter(</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>I.integrate(t)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">#<sp/>C-based<sp/>integration<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="namespaceexamples_1_1damp_1ae2820d97b3059c42c2e26899fada5bae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1damp_1ae2820d97b3059c42c2e26899fada5bae" kindref="member">integrate_C</ref>(y,<sp/>dt,<sp/>alpha,<sp/>step):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>y.size<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ry<sp/>=<sp/><ref refid="namespaceexamples_1_1damp_1a20808bf28b9c96938a20ffc20c60a2ad" kindref="member">integrateDamp_C</ref>(array_type(*y),<sp/>alpha,<sp/>dt,<sp/>step)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.array(np.fromiter(ry,<sp/>dtype=np.float64,<sp/>count=y.size))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1damp_1afb4a0fde354ff82618033ed7c3d845b8" kindref="member">freemem</ref>(ry)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="namespaceexamples_1_1damp_1a172062e32b094696498aa4407e0d1164" refkind="member"><highlight class="normal">max_alpha<sp/>=<sp/>0.1<sp/></highlight></codeline>
<codeline lineno="56" refid="namespaceexamples_1_1damp_1af0f3e235c844a34ba40537940b74051a" refkind="member"><highlight class="normal">max_time<sp/>=<sp/>40</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="classexamples_1_1damp_1_1fitness" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1damp_1_1fitness" kindref="compound">fitness</ref>(object):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classexamples_1_1damp_1_1fitness_1a7bdfce437aa4db20680c43739eb43be5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1damp_1_1fitness_1a7bdfce437aa4db20680c43739eb43be5" kindref="member">__init__</ref>(self,<sp/>dim):</highlight></codeline>
<codeline lineno="61" refid="classexamples_1_1damp_1_1fitness_1a9442ab7a67e53c7af403ae3380d126e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1damp_1_1fitness_1a9442ab7a67e53c7af403ae3380d126e2" kindref="member">dim</ref><sp/>=<sp/>dim<sp/></highlight></codeline>
<codeline lineno="62" refid="classexamples_1_1damp_1_1fitness_1a83ffb937421ee9b1f73bbd1cb8421dfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1damp_1_1fitness_1a83ffb937421ee9b1f73bbd1cb8421dfd" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight></codeline>
<codeline lineno="63" refid="classexamples_1_1damp_1_1fitness_1a221a43fe417289340272db9250b90f92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1damp_1_1fitness_1a221a43fe417289340272db9250b90f92" kindref="member">bounds</ref><sp/>=<sp/>Bounds([0]*dim,<sp/>[1]*dim)</highlight></codeline>
<codeline lineno="64" refid="classexamples_1_1damp_1_1fitness_1a0c02985bc005febd02d0d0501c35db07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1damp_1_1fitness_1a0c02985bc005febd02d0d0501c35db07" kindref="member">qd_dim</ref><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="65" refid="classexamples_1_1damp_1_1fitness_1aef5f8c2aac81732fac5237797ab0e3bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1damp_1_1fitness_1aef5f8c2aac81732fac5237797ab0e3bb" kindref="member">qd_bounds</ref><sp/>=<sp/>Bounds([10,<sp/>0.5],<sp/>[40,<sp/>1.5])</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classexamples_1_1damp_1_1fitness_1a182cdb7a5c25015336faa57a9afebef6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1damp_1_1fitness_1a182cdb7a5c25015336faa57a9afebef6" kindref="member">__call__</ref>(self,<sp/>X):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>int(self.<ref refid="classexamples_1_1damp_1_1fitness_1a9442ab7a67e53c7af403ae3380d126e2" kindref="member">dim</ref>/2)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>2*max_time/n</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dts<sp/>=<sp/>X[:n]*dt<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphas<sp/>=<sp/>X[n:]*2*max_alpha<sp/>-<sp/>max_alpha<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.array([1,0])</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="namespaceexamples_1_1damp_1ae2820d97b3059c42c2e26899fada5bae" kindref="member">integrate_C</ref>(y,<sp/>dts[i],<sp/>alphas[i],<sp/>0.1)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs(y[0])+abs(y[1])<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classexamples_1_1damp_1_1fitness_1af629821589f78858c6422998bcb02fe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1damp_1_1fitness_1af629821589f78858c6422998bcb02fe5" kindref="member">qd_fit</ref>(self,<sp/>x):<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>self(x)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>int(self.<ref refid="classexamples_1_1damp_1_1fitness_1a9442ab7a67e53c7af403ae3380d126e2" kindref="member">dim</ref>/2)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>2*max_time/n</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dts<sp/>=<sp/>x[:n]*dt<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alphas<sp/>=<sp/>x[n:]*2*max_alpha<sp/>-<sp/>max_alpha</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtsum<sp/>=<sp/>np.sum(dts)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>=<sp/>np.sum(np.multiply(dts,<sp/>abs(alphas)))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>np.array([dtsum,<sp/>energy])</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1damp_1_1fitness_1a83ffb937421ee9b1f73bbd1cb8421dfd" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1damp_1_1fitness_1a83ffb937421ee9b1f73bbd1cb8421dfd" kindref="member">best_y</ref>.value<sp/>=<sp/>y</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;{y:.3f}<sp/>{<sp/>list(b)<sp/>}&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y,<sp/>b<sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="namespaceexamples_1_1damp_1ac57ba480422b498635e1a96503b7d82e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1damp_1ac57ba480422b498635e1a96503b7d82e" kindref="member">parallel_retry</ref>(dim,<sp/>opt<sp/>=<sp/>De_cpp(20000)):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="classexamples_1_1damp_1_1fitness" kindref="compound">fitness</ref>(dim)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retry.minimize(<ref refid="classfcmaes_1_1optimizer_1_1wrapper" kindref="compound">wrapper</ref>(fit),<sp/>fit.bounds,<sp/>optimizer=opt,<sp/>num_retries=32)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="namespaceexamples_1_1damp_1a2850a13c811fbfdfe69e7950e68377ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1damp_1a2850a13c811fbfdfe69e7950e68377ac" kindref="member">plot3d</ref>(ys,<sp/>name,<sp/>xlabel=&apos;&apos;,<sp/>ylabel=&apos;&apos;,<sp/>zlabel=&apos;&apos;):</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>ys[:,<sp/>0];<sp/>y<sp/>=<sp/>ys[:,<sp/>1];<sp/>z<sp/>=<sp/>ys[:,<sp/>2]</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>plt.figure()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ax<sp/>=<sp/>fig.add_subplot()<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>img<sp/>=<sp/>ax.scatter(x,<sp/>y,<sp/>s=4,<sp/>c=z,<sp/>cmap=</highlight><highlight class="stringliteral">&apos;rainbow&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar<sp/>=<sp/>fig.colorbar(img)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(xlabel)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(ylabel)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar.set_label(zlabel)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figheight(8)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figwidth(8)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.savefig(name,<sp/>dpi=300)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="namespaceexamples_1_1damp_1a56eb880b40f4b83f6f114f81b6427c0e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1damp_1a56eb880b40f4b83f6f114f81b6427c0e" kindref="member">plot_archive</ref>(problem,<sp/>archive<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;damp_nd&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>archive<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>mapelites.load_archive(name,<sp/>problem.bounds,<sp/>problem.qd_bounds)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>si<sp/>=<sp/>archive.argsort()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>beh<sp/>=<sp/>archive.get_ds()[si]</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>archive.get_ys()[si]</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>lb<sp/>=<sp/>problem.qd_bounds.lb</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>ub<sp/>=<sp/>problem.qd_bounds.ub</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#xs<sp/>=<sp/>archive.get_xs()[si]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(si)):</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ys[i]<sp/>&lt;<sp/>1.0:<sp/></highlight><highlight class="comment">#<sp/>throw<sp/>out<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>beh[i]</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.any(np.greater(b,<sp/>ub))<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>np.any(np.greater(lb,<sp/>b)):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ysp.append([b[0],<sp/>b[1],<sp/>ys[i]])</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>np.array(ysp)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1damp_1a2850a13c811fbfdfe69e7950e68377ac" kindref="member">plot3d</ref>(ysp,<sp/>name,<sp/></highlight><highlight class="stringliteral">&apos;time&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;energy&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;amplitude&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="namespaceexamples_1_1damp_1a7c1340c7c027e4ca57ce802c60670acc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1damp_1a7c1340c7c027e4ca57ce802c60670acc" kindref="member">optimize_qd</ref>(dim):</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="classexamples_1_1damp_1_1fitness" kindref="compound">fitness</ref>(dim)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;damp_nd&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;elites&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:512}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#opt_params1<sp/>=<sp/>{&apos;solver&apos;:&apos;CRMFNES_CPP&apos;,<sp/>&apos;max_evals&apos;:4000,<sp/>&apos;popsize&apos;:32,<sp/>&apos;stall_criterion&apos;:3}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#opt_params1<sp/>=<sp/>{&apos;solver&apos;:&apos;DE_CPP&apos;,<sp/>&apos;max_evals&apos;:6000,<sp/>&apos;popsize&apos;:32,<sp/>&apos;stall_criterion&apos;:3}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#opt_params1<sp/>=<sp/>{&apos;solver&apos;:&apos;CMA_CPP&apos;,<sp/>&apos;max_evals&apos;:6000,<sp/>&apos;pnp.zeros(10)opsize&apos;:32,<sp/>&apos;stall_criterion&apos;:3}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>diversifier.minimize(</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1mapelites_1_1wrapper" kindref="compound">mapelites.wrapper</ref>(problem.qd_fit,<sp/>problem.qd_dim,<sp/>interval=200000,<sp/>save_interval=12000000),<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.bounds,<sp/>problem.qd_bounds,<sp/>opt_params=[opt_params0],<sp/>max_evals=30000000)<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;final<sp/>archive:&apos;</highlight><highlight class="normal">,<sp/>archive.info())</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>archive.save(name)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1damp_1a56eb880b40f4b83f6f114f81b6427c0e" kindref="member">plot_archive</ref>(problem,<sp/>archive)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1cmaescpp" kindref="compound">fcmaes.cmaescpp</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>libcmalib</highlight></codeline>
<codeline lineno="144" refid="namespaceexamples_1_1damp_1a20808bf28b9c96938a20ffc20c60a2ad" refkind="member"><highlight class="normal">integrateDamp_C<sp/>=<sp/>libcmalib.integrateDamp_C</highlight></codeline>
<codeline lineno="145" refid="namespaceexamples_1_1damp_1a5743df027c1a41a275daff76a57ace27" refkind="member"><highlight class="normal">integrateDamp_C.argtypes<sp/>=<sp/>[ct.POINTER(ct.c_double),<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double]</highlight></codeline>
<codeline lineno="146" refid="namespaceexamples_1_1damp_1a39244848ee7e782c96a1c058b81970c6" refkind="member"><highlight class="normal">integrateDamp_C.restype<sp/>=<sp/>ct.POINTER(ct.c_double)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147" refid="namespaceexamples_1_1damp_1afb4a0fde354ff82618033ed7c3d845b8" refkind="member"><highlight class="normal">freemem<sp/>=<sp/>libcmalib.free_mem</highlight></codeline>
<codeline lineno="148"><highlight class="normal">freemem.argtypes<sp/>=<sp/>[ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151" refid="namespaceexamples_1_1damp_1a9431849b162e37e8131f56bdd7bc66a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>12</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>apply<sp/>a<sp/>QD<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1damp_1a7c1340c7c027e4ca57ce802c60670acc" kindref="member">optimize_qd</ref>(dim)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plot<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1damp_1a56eb880b40f4b83f6f114f81b6427c0e" kindref="member">plot_archive</ref>(<ref refid="classexamples_1_1damp_1_1fitness" kindref="compound">fitness</ref>(dim))</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>lets<sp/>find<sp/>the<sp/>best<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>parallel_retry(dim)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/damp.py"/>
  </compounddef>
</doxygen>

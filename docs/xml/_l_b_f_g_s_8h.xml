<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_l_b_f_g_s_8h" kind="file" language="C++">
    <compoundname>LBFGS.h</compoundname>
    <includes local="no">Eigen/Core</includes>
    <includes local="yes">LBFGSpp/Param.h</includes>
    <includes local="yes">LBFGSpp/BFGSMat.h</includes>
    <includes local="yes">LBFGSpp/LineSearchBacktracking.h</includes>
    <includes local="yes">LBFGSpp/LineSearchBracketing.h</includes>
    <includes local="yes">LBFGSpp/LineSearchNocedalWright.h</includes>
    <incdepgraph>
      <node id="1">
        <label>_fcmaescpp/include/LBFGS.h</label>
        <link refid="_l_b_f_g_s_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Eigen/Core</label>
      </node>
      <node id="4">
        <label>LBFGSpp/BFGSMat.h</label>
      </node>
      <node id="5">
        <label>LBFGSpp/LineSearchBacktracking.h</label>
      </node>
      <node id="6">
        <label>LBFGSpp/LineSearchBracketing.h</label>
      </node>
      <node id="7">
        <label>LBFGSpp/LineSearchNocedalWright.h</label>
      </node>
      <node id="3">
        <label>LBFGSpp/Param.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver" prot="public">LBFGSpp::LBFGSSolver</innerclass>
    <innernamespace refid="namespace_l_b_f_g_spp">LBFGSpp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2016-2020<sp/>Yixuan<sp/>Qiu<sp/>&lt;yixuan.qiu@cos.name&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Under<sp/>MIT<sp/>license</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LBFGS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LBFGS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LBFGSpp/Param.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LBFGSpp/BFGSMat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LBFGSpp/LineSearchBacktracking.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LBFGSpp/LineSearchBracketing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LBFGSpp/LineSearchNocedalWright.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="namespace_l_b_f_g_spp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_l_b_f_g_spp" kindref="compound">LBFGSpp</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineSearch<sp/>=<sp/>LineSearchBacktracking<sp/>&gt;</highlight></codeline>
<codeline lineno="23" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a2a7734277fde68058fb37f73150e196e" kindref="member">LBFGSSolver</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab4864e0f16be346e255182c27b2fbaf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;Scalar,<sp/>Eigen::Dynamic,<sp/>1&gt;<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab4864e0f16be346e255182c27b2fbaf4" kindref="member">Vector</ref>;</highlight></codeline>
<codeline lineno="27" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a8a3350487e293b79093a0d6ffecd7dee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;Scalar,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic&gt;<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a8a3350487e293b79093a0d6ffecd7dee" kindref="member">Matrix</ref>;</highlight></codeline>
<codeline lineno="28" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a3f994e546dc2db71eba2117253b2ab4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Eigen::Map&lt;Vector&gt;<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a3f994e546dc2db71eba2117253b2ab4f" kindref="member">MapVec</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LBFGSParam&lt;Scalar&gt;&amp;<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Parameters<sp/>to<sp/>control<sp/>the<sp/>LBFGS<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a8f0425e17cbff685c1bcd98fd9d3d5ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BFGSMat&lt;Scalar&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a8f0425e17cbff685c1bcd98fd9d3d5ab" kindref="member">m_bfgs</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Approximation<sp/>to<sp/>the<sp/>Hessian<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aaa38eeb856f1382cbc539209a3bd719b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab4864e0f16be346e255182c27b2fbaf4" kindref="member">Vector</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aaa38eeb856f1382cbc539209a3bd719b" kindref="member">m_fx</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>History<sp/>of<sp/>the<sp/>objective<sp/>function<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1afd36125de4b725d1ace591491c2de97f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab4864e0f16be346e255182c27b2fbaf4" kindref="member">Vector</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1afd36125de4b725d1ace591491c2de97f" kindref="member">m_xp</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Old<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab4864e0f16be346e255182c27b2fbaf4" kindref="member">Vector</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" kindref="member">m_grad</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a57928834c3e888a053c7bfc621ebded0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab4864e0f16be346e255182c27b2fbaf4" kindref="member">Vector</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a57928834c3e888a053c7bfc621ebded0" kindref="member">m_gradp</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Old<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a9cecd4bcdb0ec5573c4f41f391f9d39d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab4864e0f16be346e255182c27b2fbaf4" kindref="member">Vector</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a9cecd4bcdb0ec5573c4f41f391f9d39d" kindref="member">m_drt</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moving<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>internal<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>n:<sp/>dimension<sp/>of<sp/>the<sp/>vector<sp/>to<sp/>be<sp/>optimized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a160bdb91edc2c2063ea8398eca3b6e98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a160bdb91edc2c2063ea8398eca3b6e98" kindref="member">reset</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.m;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a8f0425e17cbff685c1bcd98fd9d3d5ab" kindref="member">m_bfgs</ref>.reset(n,<sp/>m);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1afd36125de4b725d1ace591491c2de97f" kindref="member">m_xp</ref>.resize(n);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" kindref="member">m_grad</ref>.resize(n);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a57928834c3e888a053c7bfc621ebded0" kindref="member">m_gradp</ref>.resize(n);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a9cecd4bcdb0ec5573c4f41f391f9d39d" kindref="member">m_drt</ref>.resize(n);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.past<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aaa38eeb856f1382cbc539209a3bd719b" kindref="member">m_fx</ref>.resize(<ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.past);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a2a7734277fde68058fb37f73150e196e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a2a7734277fde68058fb37f73150e196e" kindref="member">LBFGSSolver</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LBFGSParam&lt;Scalar&gt;&amp;<sp/>param)<sp/>:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>(param)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.check_param();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Foo&gt;</highlight></codeline>
<codeline lineno="79" refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aa1961dc72e480cb35e7831ad18d772f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aa1961dc72e480cb35e7831ad18d772f8" kindref="member">minimize</ref>(Foo&amp;<sp/>f,<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab4864e0f16be346e255182c27b2fbaf4" kindref="member">Vector</ref>&amp;<sp/>x,<sp/>Scalar&amp;<sp/>fx)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::abs;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dimension<sp/>of<sp/>the<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>x.size();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a160bdb91edc2c2063ea8398eca3b6e98" kindref="member">reset</ref>(n);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>length<sp/>of<sp/>lag<sp/>for<sp/>objective<sp/>function<sp/>value<sp/>to<sp/>test<sp/>convergence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fpast<sp/>=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.past;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>function<sp/>and<sp/>compute<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fx<sp/>=<sp/>f(x,<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" kindref="member">m_grad</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scalar<sp/>gnorm<sp/>=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" kindref="member">m_grad</ref>.norm();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fpast<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aaa38eeb856f1382cbc539209a3bd719b" kindref="member">m_fx</ref>[0]<sp/>=<sp/>fx;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Early<sp/>exit<sp/>if<sp/>the<sp/>initial<sp/>x<sp/>is<sp/>already<sp/>a<sp/>minimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gnorm<sp/>&lt;=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.epsilon<sp/>||<sp/>gnorm<sp/>&lt;=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.epsilon_rel<sp/>*<sp/>x.norm())</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a9cecd4bcdb0ec5573c4f41f391f9d39d" kindref="member">m_drt</ref>.noalias()<sp/>=<sp/>-<ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" kindref="member">m_grad</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>step<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scalar<sp/>step<sp/>=<sp/>Scalar(1)<sp/>/<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a9cecd4bcdb0ec5573c4f41f391f9d39d" kindref="member">m_drt</ref>.norm();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>iterations<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>;<sp/>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>curent<sp/>x<sp/>and<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1afd36125de4b725d1ace591491c2de97f" kindref="member">m_xp</ref>.noalias()<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a57928834c3e888a053c7bfc621ebded0" kindref="member">m_gradp</ref>.noalias()<sp/>=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" kindref="member">m_grad</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Line<sp/>search<sp/>to<sp/>update<sp/>x,<sp/>fx<sp/>and<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LineSearch&lt;Scalar&gt;::LineSearch(f,<sp/>fx,<sp/>x,<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" kindref="member">m_grad</ref>,<sp/>step,<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a9cecd4bcdb0ec5573c4f41f391f9d39d" kindref="member">m_drt</ref>,<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1afd36125de4b725d1ace591491c2de97f" kindref="member">m_xp</ref>,<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>gradient<sp/>norm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gnorm<sp/>=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" kindref="member">m_grad</ref>.norm();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convergence<sp/>test<sp/>--<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gnorm<sp/>&lt;=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.epsilon<sp/>||<sp/>gnorm<sp/>&lt;=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.epsilon_rel<sp/>*<sp/>x.norm())</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convergence<sp/>test<sp/>--<sp/>objective<sp/>function<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fpast<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scalar<sp/>fxd<sp/>=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aaa38eeb856f1382cbc539209a3bd719b" kindref="member">m_fx</ref>[k<sp/>%<sp/>fpast];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k<sp/>&gt;=<sp/>fpast<sp/>&amp;&amp;<sp/>abs(fxd<sp/>-<sp/>fx)<sp/>&lt;=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.delta<sp/>*<sp/>std::max(std::max(abs(fx),<sp/>abs(fxd)),<sp/>Scalar(1)))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aaa38eeb856f1382cbc539209a3bd719b" kindref="member">m_fx</ref>[k<sp/>%<sp/>fpast]<sp/>=<sp/>fx;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>number<sp/>of<sp/>iterations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.max_iterations<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>k<sp/>&gt;=<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1aab9105ff5975bdc987b4244bf9c05853" kindref="member">m_param</ref>.max_iterations)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>s<sp/>and<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s_{k+1}<sp/>=<sp/>x_{k+1}<sp/>-<sp/>x_k</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y_{k+1}<sp/>=<sp/>g_{k+1}<sp/>-<sp/>g_k</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a8f0425e17cbff685c1bcd98fd9d3d5ab" kindref="member">m_bfgs</ref>.add_correction(x<sp/>-<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1afd36125de4b725d1ace591491c2de97f" kindref="member">m_xp</ref>,<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" kindref="member">m_grad</ref><sp/>-<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a57928834c3e888a053c7bfc621ebded0" kindref="member">m_gradp</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recursive<sp/>formula<sp/>to<sp/>compute<sp/>d<sp/>=<sp/>-H<sp/>*<sp/>g</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a8f0425e17cbff685c1bcd98fd9d3d5ab" kindref="member">m_bfgs</ref>.apply_Hv(<ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1ab2915f454f2b84d3e049ab1e30a15634" kindref="member">m_grad</ref>,<sp/>-Scalar(1),<sp/><ref refid="class_l_b_f_g_spp_1_1_l_b_f_g_s_solver_1a9cecd4bcdb0ec5573c4f41f391f9d39d" kindref="member">m_drt</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>step<sp/>=<sp/>1.0<sp/>as<sp/>initial<sp/>guess<sp/>for<sp/>the<sp/>next<sp/>line<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>Scalar(1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>LBFGSpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>LBFGS_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="_fcmaescpp/include/LBFGS.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_c_bite_opt_base" kind="class" language="C++" prot="public">
    <compoundname>CBiteOptBase</compoundname>
    <basecompoundref refid="class_c_bite_opt_interface" prot="public" virt="non-virtual">CBiteOptInterface</basecompoundref>
    <basecompoundref refid="class_c_bite_par_pops" prot="protected" virt="virtual">CBiteParPops&lt; ptype &gt;</basecompoundref>
    <includes refid="biteaux_8h" local="no">biteaux.h</includes>
    <templateparamlist>
      <param>
        <type>typename ptype</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_c_bite_opt_base_1ad4c10c5958656e9ad5bb0073415b9c9f" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int CBiteOptBase&lt; ptype &gt;::MaxSelCount</definition>
        <argsstring></argsstring>
        <name>MaxSelCount</name>
        <qualifiedname>CBiteOptBase::MaxSelCount</qualifiedname>
        <initializer>= 64</initializer>
        <briefdescription>
<para>that can be added to *this object (for static arrays). </para>
        </briefdescription>
        <detaileddescription>
<para>The maximal number of selectors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1624" column="18" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1624" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOptBase&lt; ptype &gt;::MinValues</definition>
        <argsstring></argsstring>
        <name>MinValues</name>
        <qualifiedname>CBiteOptBase::MinValues</qualifiedname>
        <briefdescription>
<para>Minimal parameter values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1660" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1660" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" compoundref="biteaux_8h" startline="1593" endline="1602">CBiteOptBase&lt; ptype &gt;::CBiteOptBase</referencedby>
        <referencedby refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" compoundref="biteaux_8h" startline="1698" endline="1708">CBiteOptBase&lt; ptype &gt;::deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" compoundref="biteaux_8h" startline="1803" endline="1806">CBiteOptBase&lt; ptype &gt;::getRealValue</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" compoundref="biteaux_8h" startline="1684" endline="1696">CBiteOptBase&lt; ptype &gt;::initBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; ptype &gt;::initCommonVars</referencedby>
        <referencedby refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" compoundref="biteaux_8h" startline="1744" endline="1766">CBiteOptBase&lt; ptype &gt;::updateDiffValues</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" compoundref="biteaux_8h" startline="1819" endline="1850">CBiteOptBase&lt; ptype &gt;::wrapParamReal</referencedby>
        <referencedby refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" compoundref="biteaux_8h" startline="1604" endline="1612">CBiteOptBase&lt; ptype &gt;::~CBiteOptBase</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOptBase&lt; ptype &gt;::MaxValues</definition>
        <argsstring></argsstring>
        <name>MaxValues</name>
        <qualifiedname>CBiteOptBase::MaxValues</qualifiedname>
        <briefdescription>
<para>Maximal parameter values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1661" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1661" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" compoundref="biteaux_8h" startline="1593" endline="1602">CBiteOptBase&lt; ptype &gt;::CBiteOptBase</referencedby>
        <referencedby refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" compoundref="biteaux_8h" startline="1698" endline="1708">CBiteOptBase&lt; ptype &gt;::deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" compoundref="biteaux_8h" startline="1684" endline="1696">CBiteOptBase&lt; ptype &gt;::initBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; ptype &gt;::initCommonVars</referencedby>
        <referencedby refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" compoundref="biteaux_8h" startline="1744" endline="1766">CBiteOptBase&lt; ptype &gt;::updateDiffValues</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" compoundref="biteaux_8h" startline="1819" endline="1850">CBiteOptBase&lt; ptype &gt;::wrapParamReal</referencedby>
        <referencedby refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" compoundref="biteaux_8h" startline="1604" endline="1612">CBiteOptBase&lt; ptype &gt;::~CBiteOptBase</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOptBase&lt; ptype &gt;::DiffValues</definition>
        <argsstring></argsstring>
        <name>DiffValues</name>
        <qualifiedname>CBiteOptBase::DiffValues</qualifiedname>
        <briefdescription>
<para>values. </para>
        </briefdescription>
        <detaileddescription>
<para>Difference between maximal and minimal parameter </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1662" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1662" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" compoundref="biteaux_8h" startline="1593" endline="1602">CBiteOptBase&lt; ptype &gt;::CBiteOptBase</referencedby>
        <referencedby refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" compoundref="biteaux_8h" startline="1698" endline="1708">CBiteOptBase&lt; ptype &gt;::deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" compoundref="biteaux_8h" startline="1803" endline="1806">CBiteOptBase&lt; ptype &gt;::getRealValue</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" compoundref="biteaux_8h" startline="1684" endline="1696">CBiteOptBase&lt; ptype &gt;::initBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" compoundref="biteaux_8h" startline="1744" endline="1766">CBiteOptBase&lt; ptype &gt;::updateDiffValues</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" compoundref="biteaux_8h" startline="1819" endline="1850">CBiteOptBase&lt; ptype &gt;::wrapParamReal</referencedby>
        <referencedby refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" compoundref="biteaux_8h" startline="1604" endline="1612">CBiteOptBase&lt; ptype &gt;::~CBiteOptBase</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOptBase&lt; ptype &gt;::DiffValuesI</definition>
        <argsstring></argsstring>
        <name>DiffValuesI</name>
        <qualifiedname>CBiteOptBase::DiffValuesI</qualifiedname>
        <briefdescription>
<para>Inverse DiffValues. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1664" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1664" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" compoundref="biteaux_8h" startline="1593" endline="1602">CBiteOptBase&lt; ptype &gt;::CBiteOptBase</referencedby>
        <referencedby refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" compoundref="biteaux_8h" startline="1698" endline="1708">CBiteOptBase&lt; ptype &gt;::deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" compoundref="biteaux_8h" startline="1684" endline="1696">CBiteOptBase&lt; ptype &gt;::initBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" compoundref="biteaux_8h" startline="1744" endline="1766">CBiteOptBase&lt; ptype &gt;::updateDiffValues</referencedby>
        <referencedby refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" compoundref="biteaux_8h" startline="1604" endline="1612">CBiteOptBase&lt; ptype &gt;::~CBiteOptBase</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOptBase&lt; ptype &gt;::BestValues</definition>
        <argsstring></argsstring>
        <name>BestValues</name>
        <qualifiedname>CBiteOptBase::BestValues</qualifiedname>
        <briefdescription>
<para>Best parameter vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1665" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1665" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" compoundref="biteaux_8h" startline="1593" endline="1602">CBiteOptBase&lt; ptype &gt;::CBiteOptBase</referencedby>
        <referencedby refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" compoundref="biteaux_8h" startline="1698" endline="1708">CBiteOptBase&lt; ptype &gt;::deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2" compoundref="biteaux_8h" startline="1614" endline="1617">CBiteOptBase&lt; ptype &gt;::getBestParams</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" compoundref="biteaux_8h" startline="1684" endline="1696">CBiteOptBase&lt; ptype &gt;::initBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" compoundref="biteaux_8h" startline="1779" endline="1793">CBiteOptBase&lt; ptype &gt;::updateBestCost</referencedby>
        <referencedby refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" compoundref="biteaux_8h" startline="1604" endline="1612">CBiteOptBase&lt; ptype &gt;::~CBiteOptBase</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1adc4dfe02978fd4ed460f49c7e9a01633" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOptBase&lt; ptype &gt;::BestCost</definition>
        <argsstring></argsstring>
        <name>BestCost</name>
        <qualifiedname>CBiteOptBase::BestCost</qualifiedname>
        <briefdescription>
<para>Cost of the best parameter vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1666" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1666" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1a4b2d3669723dbe251cf391cc10dd4f5c" compoundref="biteaux_8h" startline="1619" endline="1622">CBiteOptBase&lt; ptype &gt;::getBestCost</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; ptype &gt;::initCommonVars</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" compoundref="biteaux_8h" startline="1779" endline="1793">CBiteOptBase&lt; ptype &gt;::updateBestCost</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOptBase&lt; ptype &gt;::NewValues</definition>
        <argsstring></argsstring>
        <name>NewValues</name>
        <qualifiedname>CBiteOptBase::NewValues</qualifiedname>
        <briefdescription>
<para>Temporary new parameter buffer, with real values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1667" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1667" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" compoundref="biteaux_8h" startline="1593" endline="1602">CBiteOptBase&lt; ptype &gt;::CBiteOptBase</referencedby>
        <referencedby refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" compoundref="biteaux_8h" startline="1698" endline="1708">CBiteOptBase&lt; ptype &gt;::deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" compoundref="biteaux_8h" startline="1684" endline="1696">CBiteOptBase&lt; ptype &gt;::initBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" compoundref="biteaux_8h" startline="1604" endline="1612">CBiteOptBase&lt; ptype &gt;::~CBiteOptBase</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteOptBase&lt; ptype &gt;::StallCount</definition>
        <argsstring></argsstring>
        <name>StallCount</name>
        <qualifiedname>CBiteOptBase::StallCount</qualifiedname>
        <briefdescription>
<para>The number of iterations without improvement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1668" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1668" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; ptype &gt;::initCommonVars</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1a48296b534db162fa0007ff83757cb84b" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOptBase&lt; ptype &gt;::HiBound</definition>
        <argsstring></argsstring>
        <name>HiBound</name>
        <qualifiedname>CBiteOptBase::HiBound</qualifiedname>
        <briefdescription>
<para>be used by the optimizer. </para>
        </briefdescription>
        <detaileddescription>
<para>Higher cost bound, for StallCount estimation. May not </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1669" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1669" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; ptype &gt;::initCommonVars</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1acc0aa62d6125bd03d3baae22b0bf0467" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOptBase&lt; ptype &gt;::AvgCost</definition>
        <argsstring></argsstring>
        <name>AvgCost</name>
        <qualifiedname>CBiteOptBase::AvgCost</qualifiedname>
        <briefdescription>
<para>the optimizer. </para>
        </briefdescription>
        <detaileddescription>
<para>Average cost in the latest batch. May not be used by </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1671" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1671" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; ptype &gt;::initCommonVars</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1aebc1904c883f8b4dafefeda608c4536b" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel_base" kindref="compound">CBiteSelBase</ref> *</type>
        <definition>CBiteSelBase* CBiteOptBase&lt; ptype &gt;::Sels[MaxSelCount]</definition>
        <argsstring>[MaxSelCount]</argsstring>
        <name>Sels</name>
        <qualifiedname>CBiteOptBase::Sels</qualifiedname>
        <briefdescription>
<para>indexed access in some cases. </para>
        </briefdescription>
        <detaileddescription>
<para>Pointers to selector objects, for </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1673" column="14" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1673" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" compoundref="biteaux_8h" startline="1859" endline="1864">CBiteOptBase&lt; ptype &gt;::addSel</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a2eaae4dd1761eaef42ead68546994c12" compoundref="biteaux_8h" startline="1631" endline="1634">CBiteOptBase&lt; ptype &gt;::getSels</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; ptype &gt;::initCommonVars</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1a43d69538ae5aa7d78d8b3a3e821902b7" prot="protected" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* CBiteOptBase&lt; ptype &gt;::SelNames[MaxSelCount]</definition>
        <argsstring>[MaxSelCount]</argsstring>
        <name>SelNames</name>
        <qualifiedname>CBiteOptBase::SelNames</qualifiedname>
        <briefdescription>
<para>Selector names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1675" column="12" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1675" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" compoundref="biteaux_8h" startline="1859" endline="1864">CBiteOptBase&lt; ptype &gt;::addSel</referencedby>
        <referencedby refid="class_c_bite_opt_base_1afd1006a5d6154064115a205b54ecaa8c" compoundref="biteaux_8h" startline="1640" endline="1643">CBiteOptBase&lt; ptype &gt;::getSelNames</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1ae9b284aca73ab2f6784f12174e391f7b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteOptBase&lt; ptype &gt;::SelCount</definition>
        <argsstring></argsstring>
        <name>SelCount</name>
        <qualifiedname>CBiteOptBase::SelCount</qualifiedname>
        <briefdescription>
<para>The number of selectors in use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1676" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1676" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" compoundref="biteaux_8h" startline="1859" endline="1864">CBiteOptBase&lt; ptype &gt;::addSel</referencedby>
        <referencedby refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" compoundref="biteaux_8h" startline="1593" endline="1602">CBiteOptBase&lt; ptype &gt;::CBiteOptBase</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a96f3b9e0a82d830bc34c17a5d0f8fa19" compoundref="biteaux_8h" startline="1649" endline="1652">CBiteOptBase&lt; ptype &gt;::getSelCount</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; ptype &gt;::initCommonVars</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1a3922d6b29602643882d3212071a5e679" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel_base" kindref="compound">CBiteSelBase</ref> *</type>
        <definition>CBiteSelBase* CBiteOptBase&lt; ptype &gt;::ApplySels[MaxApplySels]</definition>
        <argsstring>[MaxApplySels]</argsstring>
        <name>ApplySels</name>
        <qualifiedname>CBiteOptBase::ApplySels</qualifiedname>
        <briefdescription>
<para><ref refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" kindref="member">select()</ref> function calls during the optimize() function call. </para>
        </briefdescription>
        <detaileddescription>
<para>Selectors that were used in </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1679" column="14" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1679" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1a47acdb7a495f75170b0eb457e0dc950e" compoundref="biteaux_8h" startline="1909" endline="1920">CBiteOptBase&lt; ptype &gt;::applySelsDecr</referencedby>
        <referencedby refid="class_c_bite_opt_base_1aa08dcfff8871910e4d01a94f261ee752" compoundref="biteaux_8h" startline="1890" endline="1901">CBiteOptBase&lt; ptype &gt;::applySelsIncr</referencedby>
        <referencedby refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; ptype &gt;::select</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_base_1afc2d6ec2c61d8f41bd39bb99632cf12e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteOptBase&lt; ptype &gt;::ApplySelsCount</definition>
        <argsstring></argsstring>
        <name>ApplySelsCount</name>
        <qualifiedname>CBiteOptBase::ApplySelsCount</qualifiedname>
        <briefdescription>
<para>optimize() function call. </para>
        </briefdescription>
        <detaileddescription>
<para>The number of <ref refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" kindref="member">select()</ref> calls performed during the </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1681" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1681" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_base_1a47acdb7a495f75170b0eb457e0dc950e" compoundref="biteaux_8h" startline="1909" endline="1920">CBiteOptBase&lt; ptype &gt;::applySelsDecr</referencedby>
        <referencedby refid="class_c_bite_opt_base_1aa08dcfff8871910e4d01a94f261ee752" compoundref="biteaux_8h" startline="1890" endline="1901">CBiteOptBase&lt; ptype &gt;::applySelsIncr</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; ptype &gt;::initCommonVars</referencedby>
        <referencedby refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; ptype &gt;::select</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_c_bite_opt_base_1ab1e0b2f8caf76a2a75401e2f6bc913ba" prot="protected" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int CBiteOptBase&lt; ptype &gt;::MaxApplySels</definition>
        <argsstring></argsstring>
        <name>MaxApplySels</name>
        <qualifiedname>CBiteOptBase::MaxApplySels</qualifiedname>
        <initializer>= 32</initializer>
        <briefdescription>
<para>that can be used during a single optimize() function call. </para>
        </briefdescription>
        <detaileddescription>
<para>The maximal number of selections </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1677" column="18" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1677" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBiteOptBase&lt; ptype &gt;::CBiteOptBase</definition>
        <argsstring>(const CBiteOptBase &amp;)</argsstring>
        <name>CBiteOptBase</name>
        <qualifiedname>CBiteOptBase::CBiteOptBase</qualifiedname>
        <param>
          <type>const <ref refid="class_c_bite_opt_base" kindref="compound">CBiteOptBase</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1581" column="1" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1581" bodyend="1584"/>
        <references refid="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" compoundref="biteaux_8h" startline="1581" endline="1584">CBiteOptBase&lt; ptype &gt;::CBiteOptBase</references>
        <referencedby refid="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" compoundref="biteaux_8h" startline="1581" endline="1584">CBiteOptBase&lt; ptype &gt;::CBiteOptBase</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a8b1b8265762299edcd1714553ce2104d" compoundref="biteaux_8h" startline="1586" endline="1590">CBiteOptBase&lt; ptype &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1a8b1b8265762299edcd1714553ce2104d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_bite_opt_base" kindref="compound">CBiteOptBase</ref> &amp;</type>
        <definition>CBiteOptBase &amp; CBiteOptBase&lt; ptype &gt;::operator=</definition>
        <argsstring>(const CBiteOptBase &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>CBiteOptBase::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_c_bite_opt_base" kindref="compound">CBiteOptBase</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1586" column="14" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1586" bodyend="1590"/>
        <references refid="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" compoundref="biteaux_8h" startline="1581" endline="1584">CBiteOptBase&lt; ptype &gt;::CBiteOptBase</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBiteOptBase&lt; ptype &gt;::CBiteOptBase</definition>
        <argsstring>()</argsstring>
        <name>CBiteOptBase</name>
        <qualifiedname>CBiteOptBase::CBiteOptBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1593" column="1" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1593" bodyend="1602"/>
        <references refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" compoundref="biteaux_8h" startline="1665">CBiteOptBase&lt; ptype &gt;::BestValues</references>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; ptype &gt;::DiffValues</references>
        <references refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" compoundref="biteaux_8h" startline="1664">CBiteOptBase&lt; ptype &gt;::DiffValuesI</references>
        <references refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" compoundref="biteaux_8h" startline="1661">CBiteOptBase&lt; ptype &gt;::MaxValues</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; ptype &gt;::MinValues</references>
        <references refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" compoundref="biteaux_8h" startline="1667">CBiteOptBase&lt; ptype &gt;::NewValues</references>
        <references refid="class_c_bite_opt_base_1ae9b284aca73ab2f6784f12174e391f7b" compoundref="biteaux_8h" startline="1676">CBiteOptBase&lt; ptype &gt;::SelCount</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CBiteOptBase&lt; ptype &gt;::~CBiteOptBase</definition>
        <argsstring>()</argsstring>
        <name>~CBiteOptBase</name>
        <qualifiedname>CBiteOptBase::~CBiteOptBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1604" column="9" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1604" bodyend="1612"/>
        <references refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" compoundref="biteaux_8h" startline="1665">CBiteOptBase&lt; ptype &gt;::BestValues</references>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; ptype &gt;::DiffValues</references>
        <references refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" compoundref="biteaux_8h" startline="1664">CBiteOptBase&lt; ptype &gt;::DiffValuesI</references>
        <references refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" compoundref="biteaux_8h" startline="1661">CBiteOptBase&lt; ptype &gt;::MaxValues</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; ptype &gt;::MinValues</references>
        <references refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" compoundref="biteaux_8h" startline="1667">CBiteOptBase&lt; ptype &gt;::NewValues</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const double *</type>
        <definition>virtual const double * CBiteOptBase&lt; ptype &gt;::getBestParams</definition>
        <argsstring>() const</argsstring>
        <name>getBestParams</name>
        <qualifiedname>CBiteOptBase::getBestParams</qualifiedname>
        <reimplements refid="class_c_bite_opt_interface_1a2da6e8d4cfb2ecc8380b0cd220d1aeac">getBestParams</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Best parameter vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1614" column="22" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1614" bodyend="1617"/>
        <references refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" compoundref="biteaux_8h" startline="1665">CBiteOptBase&lt; ptype &gt;::BestValues</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1a4b2d3669723dbe251cf391cc10dd4f5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double CBiteOptBase&lt; ptype &gt;::getBestCost</definition>
        <argsstring>() const</argsstring>
        <name>getBestCost</name>
        <qualifiedname>CBiteOptBase::getBestCost</qualifiedname>
        <reimplements refid="class_c_bite_opt_interface_1a79e5a8cdcdf2c9a12f16e4aeba49c75f">getBestCost</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Cost of the best parameter vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1619" column="16" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1619" bodyend="1622"/>
        <references refid="class_c_bite_opt_base_1adc4dfe02978fd4ed460f49c7e9a01633" compoundref="biteaux_8h" startline="1666">CBiteOptBase&lt; ptype &gt;::BestCost</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1a2eaae4dd1761eaef42ead68546994c12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_bite_sel_base" kindref="compound">CBiteSelBase</ref> **</type>
        <definition>CBiteSelBase ** CBiteOptBase&lt; ptype &gt;::getSels</definition>
        <argsstring>()</argsstring>
        <name>getSels</name>
        <qualifiedname>CBiteOptBase::getSels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns a pointer to an array of selectors in use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1631" column="14" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1631" bodyend="1634"/>
        <references refid="class_c_bite_opt_base_1aebc1904c883f8b4dafefeda608c4536b" compoundref="biteaux_8h" startline="1673">CBiteOptBase&lt; ptype &gt;::Sels</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1afd1006a5d6154064115a205b54ecaa8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char **</type>
        <definition>const char ** CBiteOptBase&lt; ptype &gt;::getSelNames</definition>
        <argsstring>() const</argsstring>
        <name>getSelNames</name>
        <qualifiedname>CBiteOptBase::getSelNames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns a pointer to an array of selector names. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1640" column="12" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1640" bodyend="1643"/>
        <references refid="class_c_bite_opt_base_1a43d69538ae5aa7d78d8b3a3e821902b7" compoundref="biteaux_8h" startline="1675">CBiteOptBase&lt; ptype &gt;::SelNames</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1a96f3b9e0a82d830bc34c17a5d0f8fa19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteOptBase&lt; ptype &gt;::getSelCount</definition>
        <argsstring>() const</argsstring>
        <name>getSelCount</name>
        <qualifiedname>CBiteOptBase::getSelCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns the number of selectors in use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1649" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1649" bodyend="1652"/>
        <references refid="class_c_bite_opt_base_1ae9b284aca73ab2f6784f12174e391f7b" compoundref="biteaux_8h" startline="1676">CBiteOptBase&lt; ptype &gt;::SelCount</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CBiteOptBase&lt; ptype &gt;::initBuffers</definition>
        <argsstring>(const int aParamCount, const int aPopSize, const int aCnsCount=0, const int aObjCount=1)</argsstring>
        <name>initBuffers</name>
        <qualifiedname>CBiteOptBase::initBuffers</qualifiedname>
        <reimplements refid="class_c_bite_pop_1a7488531e6b12accb61f068bbe654f580">initBuffers</reimplements>
        <reimplementedby refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f">initBuffers</reimplementedby>
        <reimplementedby refid="class_c_spher_opt_1a00c0facb71cb0ef24498e77ce68e6c04">initBuffers</reimplementedby>
        <param>
          <type>const int</type>
          <declname>aParamCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>aPopSize</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>aCnsCount</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>aObjCount</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes all common buffers, and &quot;PopSize&quot; variables. This function should be called when population&apos;s dimensions were changed. This function calls the <ref refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" kindref="member">deleteBuffers()</ref> function to release any derived classes&apos; allocated buffers. Allocates an additional vector for temporary use, which is at the same the last vector in the PopParams array. Derived classes should call this function of the base class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New parameter count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPopSize</parametername>
</parameternamelist>
<parameterdescription>
<para>New population size. If &lt;= 0, population buffers will not be allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCnsCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New constraint value count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aObjCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New objective value count. If equals 0, a rank element will not be auto-added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1684" column="14" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1684" bodyend="1696"/>
        <references refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" compoundref="biteaux_8h" startline="1665">CBiteOptBase&lt; ptype &gt;::BestValues</references>
        <references refid="class_c_bite_par_pops_1a1d00195283da4d97f648da706e5c5cec" compoundref="biteaux_8h" startline="1359" endline="1362">CBiteParPops&lt; ptype &gt;::CBiteParPops</references>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; ptype &gt;::DiffValues</references>
        <references refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" compoundref="biteaux_8h" startline="1664">CBiteOptBase&lt; ptype &gt;::DiffValuesI</references>
        <references refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" compoundref="biteaux_8h" startline="1661">CBiteOptBase&lt; ptype &gt;::MaxValues</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; ptype &gt;::MinValues</references>
        <references refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" compoundref="biteaux_8h" startline="1667">CBiteOptBase&lt; ptype &gt;::NewValues</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; ptype &gt;::ParamCount</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CBiteOptBase&lt; ptype &gt;::deleteBuffers</definition>
        <argsstring>()</argsstring>
        <name>deleteBuffers</name>
        <qualifiedname>CBiteOptBase::deleteBuffers</qualifiedname>
        <reimplements refid="class_c_bite_pop_1a47de1dedd30171e9fc9ae9475998d51d">deleteBuffers</reimplements>
        <reimplementedby refid="class_c_n_m_seq_opt_1a76ae39736ff317e9aa048d24872e7084">deleteBuffers</reimplementedby>
        <reimplementedby refid="class_c_spher_opt_1a6491915dd708c2791682a529005c035e">deleteBuffers</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function deletes buffers previously allocated via the <ref refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" kindref="member">initBuffers()</ref> function. Derived classes should call this function of the base class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1698" column="14" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1698" bodyend="1708"/>
        <references refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" compoundref="biteaux_8h" startline="1665">CBiteOptBase&lt; ptype &gt;::BestValues</references>
        <references refid="class_c_bite_par_pops_1a1d00195283da4d97f648da706e5c5cec" compoundref="biteaux_8h" startline="1359" endline="1362">CBiteParPops&lt; ptype &gt;::CBiteParPops</references>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; ptype &gt;::DiffValues</references>
        <references refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" compoundref="biteaux_8h" startline="1664">CBiteOptBase&lt; ptype &gt;::DiffValuesI</references>
        <references refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" compoundref="biteaux_8h" startline="1661">CBiteOptBase&lt; ptype &gt;::MaxValues</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; ptype &gt;::MinValues</references>
        <references refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" compoundref="biteaux_8h" startline="1667">CBiteOptBase&lt; ptype &gt;::NewValues</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOptBase&lt; ptype &gt;::initCommonVars</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>initCommonVars</name>
        <qualifiedname>CBiteOptBase::initCommonVars</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes or resets common variables used by optimizers, to their default values, including value bounds, registered selectors, calls the <ref refid="class_c_bite_pop_1a767519aa2fcc2667dc135a131bc9fd85" kindref="member">resetCurPopPos()</ref> and <ref refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" kindref="member">updateDiffValues()</ref> functions. This function is usually called in the init() function of an optimizer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1717" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1717" bodyend="1737"/>
        <references refid="class_c_bite_opt_base_1afc2d6ec2c61d8f41bd39bb99632cf12e" compoundref="biteaux_8h" startline="1681">CBiteOptBase&lt; ptype &gt;::ApplySelsCount</references>
        <references refid="class_c_bite_opt_base_1acc0aa62d6125bd03d3baae22b0bf0467" compoundref="biteaux_8h" startline="1671">CBiteOptBase&lt; ptype &gt;::AvgCost</references>
        <references refid="class_c_bite_opt_base_1adc4dfe02978fd4ed460f49c7e9a01633" compoundref="biteaux_8h" startline="1666">CBiteOptBase&lt; ptype &gt;::BestCost</references>
        <references refid="class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d">CBiteOptInterface::getMaxValues</references>
        <references refid="class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d">CBiteOptInterface::getMinValues</references>
        <references refid="class_c_bite_opt_base_1a48296b534db162fa0007ff83757cb84b" compoundref="biteaux_8h" startline="1669">CBiteOptBase&lt; ptype &gt;::HiBound</references>
        <references refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" compoundref="biteaux_8h" startline="1661">CBiteOptBase&lt; ptype &gt;::MaxValues</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; ptype &gt;::MinValues</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; ptype &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1a767519aa2fcc2667dc135a131bc9fd85" compoundref="biteaux_8h" startline="981" endline="990">CBitePop&lt; ptype &gt;::resetCurPopPos</references>
        <references refid="class_c_bite_opt_base_1ae9b284aca73ab2f6784f12174e391f7b" compoundref="biteaux_8h" startline="1676">CBiteOptBase&lt; ptype &gt;::SelCount</references>
        <references refid="class_c_bite_opt_base_1aebc1904c883f8b4dafefeda608c4536b" compoundref="biteaux_8h" startline="1673">CBiteOptBase&lt; ptype &gt;::Sels</references>
        <references refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" compoundref="biteaux_8h" startline="1668">CBiteOptBase&lt; ptype &gt;::StallCount</references>
        <references refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" compoundref="biteaux_8h" startline="1744" endline="1766">CBiteOptBase&lt; ptype &gt;::updateDiffValues</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOptBase&lt; ptype &gt;::updateDiffValues</definition>
        <argsstring>()</argsstring>
        <name>updateDiffValues</name>
        <qualifiedname>CBiteOptBase::updateDiffValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates values in the DiffValues array, based on values in the MinValues and MaxValues arrays. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1744" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1744" bodyend="1766"/>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; ptype &gt;::DiffValues</references>
        <references refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" compoundref="biteaux_8h" startline="1664">CBiteOptBase&lt; ptype &gt;::DiffValuesI</references>
        <references refid="class_c_bite_pop_1a1302e3c2e578dd650aedb57e18645092" compoundref="biteaux_8h" startline="1161">CBitePop&lt; ptype &gt;::IntMantMult</references>
        <references refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" compoundref="biteaux_8h" startline="1661">CBiteOptBase&lt; ptype &gt;::MaxValues</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; ptype &gt;::MinValues</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; ptype &gt;::ParamCount</references>
        <referencedby refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; ptype &gt;::initCommonVars</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOptBase&lt; ptype &gt;::updateBestCost</definition>
        <argsstring>(const double UpdCost, const double *const UpdValues, const int p=-1)</argsstring>
        <name>updateBestCost</name>
        <qualifiedname>CBiteOptBase::updateBestCost</qualifiedname>
        <param>
          <type>const double</type>
          <declname>UpdCost</declname>
        </param>
        <param>
          <type>const double *const</type>
          <declname>UpdValues</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>p</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates BestCost value and BestValues array, if the specified NewCost is better.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>UpdCost</parametername>
</parameternamelist>
<parameterdescription>
<para>New solution&apos;s cost. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UpdValues</parametername>
</parameternamelist>
<parameterdescription>
<para>New solution&apos;s values. The values should be in the &quot;real&quot; value range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>New solution&apos;s position within population. If &lt;0, position unknown, and the UpdCost should be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1779" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1779" bodyend="1793"/>
        <references refid="class_c_bite_opt_base_1adc4dfe02978fd4ed460f49c7e9a01633" compoundref="biteaux_8h" startline="1666">CBiteOptBase&lt; ptype &gt;::BestCost</references>
        <references refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" compoundref="biteaux_8h" startline="1665">CBiteOptBase&lt; ptype &gt;::BestValues</references>
        <references refid="class_c_bite_pop_1a57e751582761922bbabff1ddb7af277b" compoundref="biteaux_8h" startline="1241" endline="1244">CBitePop&lt; ptype &gt;::copyValues</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CBiteOptBase&lt; ptype &gt;::getRealValue</definition>
        <argsstring>(const ptype *const NormParams, const int i) const</argsstring>
        <name>getRealValue</name>
        <qualifiedname>CBiteOptBase::getRealValue</qualifiedname>
        <param>
          <type>const ptype *const</type>
          <declname>NormParams</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns specified parameter&apos;s value taking into account minimal and maximal value range.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NormParams</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter vector of interest, in normalized scale. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1803" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1803" bodyend="1806"/>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; ptype &gt;::DiffValues</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; ptype &gt;::MinValues</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CBiteOptBase&lt; ptype &gt;::wrapParamReal</definition>
        <argsstring>(CBiteRnd &amp;rnd, const double v, const int i) const</argsstring>
        <name>wrapParamReal</name>
        <qualifiedname>CBiteOptBase::wrapParamReal</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function wraps the specified parameter value so that it stays in the [MinValue; MaxValue] real range, by wrapping it over the boundaries using random operator. This operation improves convergence in comparison to clamping.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter value to wrap. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Wrapped parameter value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1819" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1819" bodyend="1850"/>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; ptype &gt;::DiffValues</references>
        <references refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">CBiteRnd::get</references>
        <references refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" compoundref="biteaux_8h" startline="1661">CBiteOptBase&lt; ptype &gt;::MaxValues</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; ptype &gt;::MinValues</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOptBase&lt; ptype &gt;::addSel</definition>
        <argsstring>(CBiteSelBase &amp;s, const char *const sname)</argsstring>
        <name>addSel</name>
        <qualifiedname>CBiteOptBase::addSel</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_sel_base" kindref="compound">CBiteSelBase</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>sname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function adds a selector to the Sels list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Selector object to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sname</parametername>
</parameternamelist>
<parameterdescription>
<para>Selector&apos;s name, should be a static constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1859" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1859" bodyend="1864"/>
        <references refid="class_c_bite_opt_base_1ae9b284aca73ab2f6784f12174e391f7b" compoundref="biteaux_8h" startline="1676">CBiteOptBase&lt; ptype &gt;::SelCount</references>
        <references refid="class_c_bite_opt_base_1a43d69538ae5aa7d78d8b3a3e821902b7" compoundref="biteaux_8h" startline="1675">CBiteOptBase&lt; ptype &gt;::SelNames</references>
        <references refid="class_c_bite_opt_base_1aebc1904c883f8b4dafefeda608c4536b" compoundref="biteaux_8h" startline="1673">CBiteOptBase&lt; ptype &gt;::Sels</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int CBiteOptBase&lt; ptype &gt;::select</definition>
        <argsstring>(T &amp;Sel, CBiteRnd &amp;rnd)</argsstring>
        <name>select</name>
        <qualifiedname>CBiteOptBase::select</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>Sel</declname>
        </param>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function performs choice selection based on the specified selector, and adds the selector to apply list.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Sel</parametername>
</parameternamelist>
<parameterdescription>
<para>Selector object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1875" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1875" bodyend="1881"/>
        <references refid="class_c_bite_opt_base_1a3922d6b29602643882d3212071a5e679" compoundref="biteaux_8h" startline="1679">CBiteOptBase&lt; ptype &gt;::ApplySels</references>
        <references refid="class_c_bite_opt_base_1afc2d6ec2c61d8f41bd39bb99632cf12e" compoundref="biteaux_8h" startline="1681">CBiteOptBase&lt; ptype &gt;::ApplySelsCount</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1aa08dcfff8871910e4d01a94f261ee752" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOptBase&lt; ptype &gt;::applySelsIncr</definition>
        <argsstring>(CBiteRnd &amp;rnd, const double v=1.0)</argsstring>
        <name>applySelsIncr</name>
        <qualifiedname>CBiteOptBase::applySelsIncr</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>v</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function applies selector increments on optimization success.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Increment value, [0; 1]. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1890" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1890" bodyend="1901"/>
        <references refid="class_c_bite_opt_base_1a3922d6b29602643882d3212071a5e679" compoundref="biteaux_8h" startline="1679">CBiteOptBase&lt; ptype &gt;::ApplySels</references>
        <references refid="class_c_bite_opt_base_1afc2d6ec2c61d8f41bd39bb99632cf12e" compoundref="biteaux_8h" startline="1681">CBiteOptBase&lt; ptype &gt;::ApplySelsCount</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_base_1a47acdb7a495f75170b0eb457e0dc950e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOptBase&lt; ptype &gt;::applySelsDecr</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>applySelsDecr</name>
        <qualifiedname>CBiteOptBase::applySelsDecr</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function applies selector decrements on optimization fail.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="1909" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1909" bodyend="1920"/>
        <references refid="class_c_bite_opt_base_1a3922d6b29602643882d3212071a5e679" compoundref="biteaux_8h" startline="1679">CBiteOptBase&lt; ptype &gt;::ApplySels</references>
        <references refid="class_c_bite_opt_base_1afc2d6ec2c61d8f41bd39bb99632cf12e" compoundref="biteaux_8h" startline="1681">CBiteOptBase&lt; ptype &gt;::ApplySelsCount</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The base class for optimizers of the &quot;biteopt&quot; project.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter value storage type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>CBiteOpt</label>
        <link refid="class_c_bite_opt"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>CBiteOpt::CParOpt&lt; CNMSeqOpt &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>CBiteOpt::CParOpt&lt; CSpherOpt &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>CBiteOptBase&lt; double &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>CBiteOptBase&lt; int64_t &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>CBiteOptDeep::CBiteOptWrap</label>
        <link refid="class_c_bite_opt_deep_1_1_c_bite_opt_wrap"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="3">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="8">
        <label>CDEOpt</label>
        <link refid="class_c_d_e_opt"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>CNMSeqOpt</label>
        <link refid="class_c_n_m_seq_opt"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>CSMAESOpt</label>
        <link refid="class_c_s_m_a_e_s_opt"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>CSpherOpt</label>
        <link refid="class_c_spher_opt"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="protected-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="3">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="5">
        <label>CBiteSelBase</label>
        <link refid="class_c_bite_sel_base"/>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/biteaux.h" line="1577" column="1" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="1579" bodyend="1921"/>
    <listofallmembers>
      <member refid="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>addSel</name></member>
      <member refid="class_c_bite_opt_base_1a3922d6b29602643882d3212071a5e679" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>ApplySels</name></member>
      <member refid="class_c_bite_opt_base_1afc2d6ec2c61d8f41bd39bb99632cf12e" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>ApplySelsCount</name></member>
      <member refid="class_c_bite_opt_base_1a47acdb7a495f75170b0eb457e0dc950e" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>applySelsDecr</name></member>
      <member refid="class_c_bite_opt_base_1aa08dcfff8871910e4d01a94f261ee752" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>applySelsIncr</name></member>
      <member refid="class_c_bite_opt_base_1acc0aa62d6125bd03d3baae22b0bf0467" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>AvgCost</name></member>
      <member refid="class_c_bite_opt_base_1adc4dfe02978fd4ed460f49c7e9a01633" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>BestCost</name></member>
      <member refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>BestValues</name></member>
      <member refid="class_c_bite_pop_1ad4e3a3c5b7a25ad02ef0231bd3fe8388" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>calcLP1Coeff</name></member>
      <member refid="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" prot="private" virt="non-virtual"><scope>CBiteOptBase</scope><name>CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" prot="public" virt="non-virtual"><scope>CBiteOptBase</scope><name>CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809" prot="public" virt="non-virtual"><scope>CBiteOptBase</scope><name>CBiteOptInterface</name></member>
      <member refid="class_c_bite_par_pops_1a1d00195283da4d97f648da706e5c5cec" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>CBiteParPops</name></member>
      <member refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1a73402384f4b75abf6d956dc086ccf36e" prot="protected" virt="non-virtual" ambiguityscope="CBiteParPops::"><scope>CBiteOptBase</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1ab6dec63b0ee3955563c2a3f815614f31" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>CentLPC</name></member>
      <member refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>CentParams</name></member>
      <member refid="class_c_bite_pop_1a2bf725291723a8dcaa215496e3175471" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>CnsCount</name></member>
      <member refid="class_c_bite_pop_1a3fc2d887ae91be62fd9fc3100268e53c" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>copy</name></member>
      <member refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>copyParams</name></member>
      <member refid="class_c_bite_pop_1a57e751582761922bbabff1ddb7af277b" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>copyValues</name></member>
      <member refid="class_c_bite_pop_1aa7c87b9148768d6104f8d3dfb5abebce" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>CurPopPos</name></member>
      <member refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>CurPopSize</name></member>
      <member refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>CurPopSize1</name></member>
      <member refid="class_c_bite_pop_1aa5105ca75379f9a760dc9f0b9ea30ea7" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>CurPopSizeI</name></member>
      <member refid="class_c_bite_pop_1a4656171c63f1944ae045d6f222d9d33a" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>decrCurPopSize</name></member>
      <member refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369" prot="protected" virt="virtual"><scope>CBiteOptBase</scope><name>deleteBuffers</name></member>
      <member refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>DiffValues</name></member>
      <member refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>DiffValuesI</name></member>
      <member refid="class_c_bite_opt_base_1a4b2d3669723dbe251cf391cc10dd4f5c" prot="public" virt="virtual"><scope>CBiteOptBase</scope><name>getBestCost</name></member>
      <member refid="class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2" prot="public" virt="virtual"><scope>CBiteOptBase</scope><name>getBestParams</name></member>
      <member refid="class_c_bite_pop_1a5e6ccebb178353b084084f841b09042d" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getCentroid</name></member>
      <member refid="class_c_bite_pop_1ad38d886687357797479e69098759476a" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getCnsPtr</name></member>
      <member refid="class_c_bite_pop_1a0053ae41c70babe967c5931f491ea865" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getCurParams</name></member>
      <member refid="class_c_bite_pop_1a7e1fbb7f7e9aaf8f73eb865fa4610185" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getCurPopPos</name></member>
      <member refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getCurPopSize</name></member>
      <member refid="class_c_bite_pop_1aecaac61269e65bda93cb2dc1a3a26091" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getGaussianInt</name></member>
      <member refid="class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d" prot="public" virt="pure-virtual"><scope>CBiteOptBase</scope><name>getMaxValues</name></member>
      <member refid="class_c_bite_par_pops_1afa8a97732cea882b664c2d0fbedf2289" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getMinDistParPop</name></member>
      <member refid="class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d" prot="public" virt="pure-virtual"><scope>CBiteOptBase</scope><name>getMinValues</name></member>
      <member refid="class_c_bite_pop_1ad6cbe6cfbf9954dcb6f8a223a5e1f36b" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getObjPtr</name></member>
      <member refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getParamsOrdered</name></member>
      <member refid="class_c_bite_pop_1ac2a01e9eb6b884a0b318e4b914273acf" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getPopParams</name></member>
      <member refid="class_c_bite_pop_1aa4f3255c9607f72eff280f8c3c09143f" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getRankPtr</name></member>
      <member refid="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>getRealValue</name></member>
      <member refid="class_c_bite_opt_base_1a96f3b9e0a82d830bc34c17a5d0f8fa19" prot="public" virt="non-virtual"><scope>CBiteOptBase</scope><name>getSelCount</name></member>
      <member refid="class_c_bite_opt_base_1afd1006a5d6154064115a205b54ecaa8c" prot="public" virt="non-virtual"><scope>CBiteOptBase</scope><name>getSelNames</name></member>
      <member refid="class_c_bite_opt_base_1a2eaae4dd1761eaef42ead68546994c12" prot="public" virt="non-virtual"><scope>CBiteOptBase</scope><name>getSels</name></member>
      <member refid="class_c_bite_opt_base_1a48296b534db162fa0007ff83757cb84b" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>HiBound</name></member>
      <member refid="class_c_bite_pop_1a48d6ede5c82534c973e0458726e820dd" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>incrCurPopSize</name></member>
      <member refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e" prot="protected" virt="virtual"><scope>CBiteOptBase</scope><name>initBuffers</name></member>
      <member refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>initCommonVars</name></member>
      <member refid="class_c_bite_pop_1ac9adf8849ed7251dadd94815e20bdee8" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>IntMantBits</name></member>
      <member refid="class_c_bite_pop_1a27448c9be1bed517e4a48aa656ca4f76" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>IntMantMask</name></member>
      <member refid="class_c_bite_pop_1a1302e3c2e578dd650aedb57e18645092" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>IntMantMult</name></member>
      <member refid="class_c_bite_pop_1a8c64d2e83f225b034df818b06b09ecd2" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>IntMantMult2</name></member>
      <member refid="class_c_bite_pop_1aeba03d86b17ed01a97dc8225c5598b2d" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>IntMantMultM</name></member>
      <member refid="class_c_bite_pop_1a8009a96dd8a678daaefc9410ba2e0a76" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>IntOverBits</name></member>
      <member refid="class_c_bite_opt_base_1ab1e0b2f8caf76a2a75401e2f6bc913ba" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>MaxApplySels</name></member>
      <member refid="class_c_bite_par_pops_1a451f5fa8bb3503f9c344fe03f46ffcc9" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>MaxParPopCount</name></member>
      <member refid="class_c_bite_opt_base_1ad4c10c5958656e9ad5bb0073415b9c9f" prot="public" virt="non-virtual"><scope>CBiteOptBase</scope><name>MaxSelCount</name></member>
      <member refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>MaxValues</name></member>
      <member refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>MinValues</name></member>
      <member refid="class_c_bite_pop_1a41f29468becc588bea6ff3f842db93ea" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>NeedCentUpdate</name></member>
      <member refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>NewValues</name></member>
      <member refid="class_c_bite_pop_1a2f7c6a4707e23c21197ab32b71d900c7" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>ObjCount</name></member>
      <member refid="class_c_bite_opt_base_1a8b1b8265762299edcd1714553ce2104d" prot="private" virt="non-virtual"><scope>CBiteOptBase</scope><name>operator=</name></member>
      <member refid="class_c_bite_pop_1ab18cf322db6ab186db1e19b53e34c232" prot="protected" virt="non-virtual" ambiguityscope="CBiteParPops::"><scope>CBiteOptBase</scope><name>operator=</name></member>
      <member refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d" prot="public" virt="pure-virtual"><scope>CBiteOptBase</scope><name>optcost</name></member>
      <member refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>ParamCount</name></member>
      <member refid="class_c_bite_pop_1a884c9ad4c0327aaa0110a23a89f5697a" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>ParamCountI</name></member>
      <member refid="class_c_bite_par_pops_1aea59bf6c1cf9894f944d07cec99882ee" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>ParPopCount</name></member>
      <member refid="class_c_bite_par_pops_1a79983cca58bd18a6ff73120e65a976dd" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>ParPops</name></member>
      <member refid="class_c_bite_pop_1a6d4a3479ca9e60de6cf4667d5b2937a5" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>PopCnsOffs</name></member>
      <member refid="class_c_bite_pop_1a3cdac0ad2cf5c8403f1f7676171f4e76" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>PopItemSize</name></member>
      <member refid="class_c_bite_pop_1a98e2af75120c4184b271c14d22acf9d4" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>PopObjOffs</name></member>
      <member refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>PopParams</name></member>
      <member refid="class_c_bite_pop_1ac69b014720b11a472509b22588eaf6c3" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>PopParamsBuf</name></member>
      <member refid="class_c_bite_pop_1a3ecc4ffcf1c6f3f9b4e4e5a873c481fe" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>PopRankOffs</name></member>
      <member refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>PopSize</name></member>
      <member refid="class_c_bite_pop_1a0b64743a84d5af143d44e7f6e9f02ada" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>PopSize1</name></member>
      <member refid="class_c_bite_pop_1a767519aa2fcc2667dc135a131bc9fd85" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>resetCurPopPos</name></member>
      <member refid="class_c_bite_opt_base_1ae9b284aca73ab2f6784f12174e391f7b" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>SelCount</name></member>
      <member refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>select</name></member>
      <member refid="class_c_bite_opt_base_1a43d69538ae5aa7d78d8b3a3e821902b7" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>SelNames</name></member>
      <member refid="class_c_bite_opt_base_1aebc1904c883f8b4dafefeda608c4536b" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>Sels</name></member>
      <member refid="class_c_bite_par_pops_1a24cc3d1978b4dbe57fad8a6f6d7efd8a" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>setParPopCount</name></member>
      <member refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>StallCount</name></member>
      <member refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>TmpParams</name></member>
      <member refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>updateBestCost</name></member>
      <member refid="class_c_bite_pop_1a7850902dad276dcecea68559eaccc168" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>updateCentroid</name></member>
      <member refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>updateDiffValues</name></member>
      <member refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>updatePop</name></member>
      <member refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>wrapParam</name></member>
      <member refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>wrapParamReal</name></member>
      <member refid="class_c_bite_pop_1a0d5ab322641bb1a091df91ff7ee630c4" prot="protected" virt="non-virtual"><scope>CBiteOptBase</scope><name>zeroParams</name></member>
      <member refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" prot="public" virt="virtual"><scope>CBiteOptBase</scope><name>~CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce" prot="public" virt="virtual"><scope>CBiteOptBase</scope><name>~CBiteOptInterface</name></member>
      <member refid="class_c_bite_par_pops_1a772516362f17b8e5790596740ce355ba" prot="protected" virt="virtual"><scope>CBiteOptBase</scope><name>~CBiteParPops</name></member>
      <member refid="class_c_bite_pop_1ac386e4638d6fc6bd5370eeae895347c3" prot="protected" virt="virtual"><scope>CBiteOptBase</scope><name>~CBitePop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

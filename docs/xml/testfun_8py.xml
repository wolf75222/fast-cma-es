<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="testfun_8py" kind="file" language="Python">
    <compoundname>testfun.py</compoundname>
    <innerclass refid="classfcmaes_1_1testfun_1_1_wrapper" prot="public">fcmaes::testfun::Wrapper</innerclass>
    <innerclass refid="classfcmaes_1_1testfun_1_1_rosen" prot="public">fcmaes::testfun::Rosen</innerclass>
    <innerclass refid="classfcmaes_1_1testfun_1_1_elli" prot="public">fcmaes::testfun::Elli</innerclass>
    <innerclass refid="classfcmaes_1_1testfun_1_1_cigar" prot="public">fcmaes::testfun::Cigar</innerclass>
    <innerclass refid="classfcmaes_1_1testfun_1_1_sphere" prot="public">fcmaes::testfun::Sphere</innerclass>
    <innerclass refid="classfcmaes_1_1testfun_1_1_rastrigin" prot="public">fcmaes::testfun::Rastrigin</innerclass>
    <innerclass refid="classfcmaes_1_1testfun_1_1_eggholder" prot="public">fcmaes::testfun::Eggholder</innerclass>
    <innerclass refid="classfcmaes_1_1testfun_1_1_rastrigin_mean" prot="public">fcmaes::testfun::RastriginMean</innerclass>
    <innerclass refid="classfcmaes_1_1testfun_1_1__testfun" prot="protected">fcmaes::testfun::_testfun</innerclass>
    <innernamespace refid="namespacefcmaes">fcmaes</innernamespace>
    <innernamespace refid="namespacefcmaes_1_1testfun">fcmaes::testfun</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacefcmaes_1_1testfun_1a73c5b2617f1f5e73c08b36611a54c9e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun._rosen</definition>
        <argsstring>(xs, alpha=1e2)</argsstring>
        <name>_rosen</name>
        <qualifiedname>fcmaes.testfun._rosen</qualifiedname>
        <param>
          <type>xs</type>
          <defname>xs</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
          <defval>1e2</defval>
        </param>
        <briefdescription>
<para>Computes the Rosenbrock function for the given input. </para>
        </briefdescription>
        <detaileddescription>
<para>The Rosenbrock function is a non-convex mathematical function often used as a performance test problem for optimization algorithms. This function takes a list of numerical inputs and evaluates the Rosenbrock polynomial for those inputs. It also supports handling scalars and will return outputs as either a scalar or a list depending on the input.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>A numerical iterable or scalar. The input values for which the Rosenbrock function is to be computed. If the first element of <computeroutput>xs</computeroutput> is scalar, it is treated as a single value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional numerical value. Represents the parameter to scale the quadratic term in the Rosenbrock function. Defaults to 1e2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float or list: The evaluated Rosenbrock function result. If the input is a scalar or a single list, it returns a scalar result. If the input is a list of multiple numerical iterables, it returns a list of computed results for each input iterable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="397" column="1" bodyfile="fcmaes/testfun.py" bodystart="397" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="namespacefcmaes_1_1testfun_1aabd797a31cba75eb6dcd83bd586bf3e3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun._rastrigin</definition>
        <argsstring>(x)</argsstring>
        <name>_rastrigin</name>
        <qualifiedname>fcmaes.testfun._rastrigin</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>Computes the <ref refid="classfcmaes_1_1testfun_1_1_rastrigin" kindref="compound">Rastrigin</ref> function value for a given input vector. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classfcmaes_1_1testfun_1_1_rastrigin" kindref="compound">Rastrigin</ref> function is commonly used as a non-convex test function for optimization algorithms. It is highly multimodal, meaning it has many local minima, which makes it a challenging benchmark for optimization techniques.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of input values on which the <ref refid="classfcmaes_1_1testfun_1_1_rastrigin" kindref="compound">Rastrigin</ref> function is evaluated. Must be convertible to a NumPy array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float The computed value of the <ref refid="classfcmaes_1_1testfun_1_1_rastrigin" kindref="compound">Rastrigin</ref> function for the input vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="419" column="1" bodyfile="fcmaes/testfun.py" bodystart="419" bodyend="423"/>
        <referencedby refid="namespacefcmaes_1_1testfun_1ad34b2d407175d3fa91535738b5193c88" compoundref="testfun_8py" startline="529" endline="535">fcmaes.testfun._rastrigin_mean</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacefcmaes_1_1testfun_1abac6eddc844a76e10f2f866c063c6ad7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun._cigar</definition>
        <argsstring>(x)</argsstring>
        <name>_cigar</name>
        <qualifiedname>fcmaes.testfun._cigar</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>Calculates the value of the &quot;cigar&quot; function for a given input array. </para>
        </briefdescription>
        <detaileddescription>
<para>The &quot;cigar&quot; function is a common benchmark function in optimization studies. It is designed to simulate an elliptical-shaped function with one dominant dimension. It is used to evaluate optimization algorithms in high-dimensional spaces.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array for which the &quot;cigar&quot; function value is to be computed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float Calculated &quot;cigar&quot; function value for the given input array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="441" column="1" bodyfile="fcmaes/testfun.py" bodystart="441" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="namespacefcmaes_1_1testfun_1a952a92ed97c6285612f56fa6a8f51fbd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun._sphere</definition>
        <argsstring>(x)</argsstring>
        <name>_sphere</name>
        <qualifiedname>fcmaes.testfun._sphere</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>Calculates the sum of squares of elements in an input array. </para>
        </briefdescription>
        <detaileddescription>
<para>This function computes the sum of the squares of each element in the input array. It is typically used in mathematical or optimization contexts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array or iterable whose squared elements will be summated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sum of the squares of the elements in the input array or iterable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="461" column="1" bodyfile="fcmaes/testfun.py" bodystart="461" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="namespacefcmaes_1_1testfun_1a0a7d3f710cd2e37748bfcefee390e92e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun._elli</definition>
        <argsstring>(x)</argsstring>
        <name>_elli</name>
        <qualifiedname>fcmaes.testfun._elli</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>Calculates the elliptic function value for the given input. </para>
        </briefdescription>
        <detaileddescription>
<para>The elliptic function is commonly used in optimization problems as a benchmark function. It is computed using the input array and a factor that exponentially grows based on the dimension of the input.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Input array representing the variables for which the elliptic function is calculated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float The computed value of the elliptic function for the input. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="481" column="1" bodyfile="fcmaes/testfun.py" bodystart="481" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="namespacefcmaes_1_1testfun_1abe5db8aa47b5d50d2100075d9600ba6c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun._modify</definition>
        <argsstring>(x, delta)</argsstring>
        <name>_modify</name>
        <qualifiedname>fcmaes.testfun._modify</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>delta</type>
          <defname>delta</defname>
        </param>
        <briefdescription>
<para>Applies a random modification to an array. </para>
        </briefdescription>
        <detaileddescription>
<para>This function takes an array as input, and applies a random modification to each of its elements using a Gaussian (normal) distribution scaled by a specified delta factor.</para>
<para><verbatim>   x (list or np.ndarray): Input array to be modified.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaling factor for the random noise to be added.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>list A new list containing the modified elements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="506" column="1" bodyfile="fcmaes/testfun.py" bodystart="506" bodyend="510"/>
        <referencedby refid="namespacefcmaes_1_1testfun_1ad34b2d407175d3fa91535738b5193c88" compoundref="testfun_8py" startline="529" endline="535">fcmaes.testfun._rastrigin_mean</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacefcmaes_1_1testfun_1ad34b2d407175d3fa91535738b5193c88" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun._rastrigin_mean</definition>
        <argsstring>(x, n)</argsstring>
        <name>_rastrigin_mean</name>
        <qualifiedname>fcmaes.testfun._rastrigin_mean</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
<para>Computes the mean output of the <ref refid="classfcmaes_1_1testfun_1_1_rastrigin" kindref="compound">Rastrigin</ref> function over <computeroutput>n</computeroutput> modifications of input <computeroutput>x</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function applies a slight modification to the input value <computeroutput>x</computeroutput> before passing it to <computeroutput>_rastrigin</computeroutput> and accumulates the results to compute the mean.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial input value for the <ref refid="classfcmaes_1_1testfun_1_1_rastrigin" kindref="compound">Rastrigin</ref> function that will be slightly modified for each iteration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of iterations or modifications of input <computeroutput>x</computeroutput> for computing the average.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mean result of the <ref refid="classfcmaes_1_1testfun_1_1_rastrigin" kindref="compound">Rastrigin</ref> function after applying it to <computeroutput>n</computeroutput> modified versions of the input <computeroutput>x</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="529" column="1" bodyfile="fcmaes/testfun.py" bodystart="529" bodyend="535"/>
        <references refid="namespacefcmaes_1_1testfun_1abe5db8aa47b5d50d2100075d9600ba6c" compoundref="testfun_8py" startline="506" endline="510">fcmaes.testfun._modify</references>
        <references refid="namespacefcmaes_1_1testfun_1aabd797a31cba75eb6dcd83bd586bf3e3" compoundref="testfun_8py" startline="419" endline="423">fcmaes.testfun._rastrigin</references>
        <referencedby refid="classfcmaes_1_1testfun_1_1_rastrigin_mean_1ab3de865f1a1c5a6969740d4be0a75b88" compoundref="testfun_8py" startline="328" endline="331">fcmaes.testfun.RastriginMean.__init__</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacefcmaes_1_1testfun_1a40a0037c26c1d47818ccdb151849b2c0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun._eggholder</definition>
        <argsstring>(x)</argsstring>
        <name>_eggholder</name>
        <qualifiedname>fcmaes.testfun._eggholder</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>Calculates the <ref refid="classfcmaes_1_1testfun_1_1_eggholder" kindref="compound">Eggholder</ref> function value for a given input. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classfcmaes_1_1testfun_1_1_eggholder" kindref="compound">Eggholder</ref> function is a complex mathematical function often used in optimization problems to test the performance of algorithms due to its multiple local minima.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>A list or array-like object with two elements representing the input values for the <ref refid="classfcmaes_1_1testfun_1_1_eggholder" kindref="compound">Eggholder</ref> function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float The result of evaluating the <ref refid="classfcmaes_1_1testfun_1_1_eggholder" kindref="compound">Eggholder</ref> function for the given input values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="553" column="1" bodyfile="fcmaes/testfun.py" bodystart="553" bodyend="558"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>============================================================================= </para>
    </briefdescription>
    <detaileddescription>
<para>Fast version 1.6.11</para>
<para>(c) 2025 – Dietmar Wolz (c) 2025 – Latitude</para>
<para>License MIT</para>
<para><itemizedlist>
<listitem><para><ref refid="testfun_8py" kindref="compound">testfun.py</ref></para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Description</title><para><itemizedlist>
<listitem><para>This module provides a set of test functions for optimization problems, including Rosenbrock, Rastrigin, Cigar, Sphere, and others.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="author"><para>:<itemizedlist>
<listitem><para>Dietmar Wolz <programlisting><codeline><highlight class="normal">-<sp/>romain.despoullains</highlight><highlight class="preprocessor">@latitude.eu</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">-<sp/>corentin.generet</highlight><highlight class="preprocessor">@latitude.eu</highlight></codeline>
</programlisting></para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>References</title><para><itemizedlist>
<listitem><para>[1] <ulink url="https://github.com/dietmarwo/fast-cma-es">https://github.com/dietmarwo/fast-cma-es</ulink></para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>Documentation</title><para><itemizedlist>
<listitem><para><hruler/>
 </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacefcmaes_1_1testfun" refkind="compound"><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">=============================================================================</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/>Fast<sp/>CMA-ES<sp/>-<sp/>version<sp/>1.6.11</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/>(c)<sp/>2025<sp/>–<sp/>Dietmar<sp/>Wolz</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/>(c)<sp/>2025<sp/>–<sp/>Latitude</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/>License:<sp/>MIT</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/>File:</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/>-<sp/>testfun.py</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/>Description:</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/>-<sp/>This<sp/>module<sp/>provides<sp/>a<sp/>set<sp/>of<sp/>test<sp/>functions<sp/>for<sp/>optimization</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>problems,<sp/>including<sp/>Rosenbrock,<sp/>Rastrigin,<sp/>Cigar,<sp/>Sphere,<sp/>and<sp/>others.</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/>Authors:</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/>-<sp/>Dietmar<sp/>Wolz</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/>-<sp/>romain.despoullains@latitude.eu</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/>-<sp/>corentin.generet@latitude.eu</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/>References:</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/>-<sp/>[1]<sp/>https://github.com/dietmarwo/fast-cma-es</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/>Documentation:</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/>-</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">=============================================================================</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_wrapper" kindref="compound">Wrapper</ref>(object):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Wrapper<sp/>for<sp/>parallel<sp/>computation<sp/>with<sp/>shared<sp/>state.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>acts<sp/>as<sp/>a<sp/>wrapper<sp/>to<sp/>provide<sp/>thread/process-safe<sp/>management</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>shared<sp/>variables<sp/>during<sp/>multiprocessing<sp/>operations.<sp/>It<sp/>enables</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>evaluation<sp/>of<sp/>a<sp/>function<sp/>and<sp/>maintains<sp/>the<sp/>best<sp/>result<sp/>(minimum<sp/>value</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>function<sp/>output)<sp/>along<sp/>with<sp/>a<sp/>counter<sp/>of<sp/>evaluations.</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>(Callable):<sp/>The<sp/>function<sp/>to<sp/>be<sp/>evaluated.</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_x<sp/>(mp.RawArray):<sp/>Shared<sp/>memory<sp/>array<sp/>to<sp/>store<sp/>the<sp/>inputs</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corresponding<sp/>to<sp/>the<sp/>best<sp/>function<sp/>output.</highlight></codeline>
<codeline lineno="53" refid="classfcmaes_1_1testfun_1_1_wrapper" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_y<sp/>(mp.RawValue):<sp/>Shared<sp/>memory<sp/>value<sp/>to<sp/>store<sp/>the<sp/>best<sp/>function</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>observed.</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>(mp.RawValue):<sp/>Shared<sp/>memory<sp/>counter<sp/>to<sp/>track<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>function<sp/>evaluations.</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_wrapper_1ae106b1f604bdb6e24937cee17b03e2d1" kindref="member">__init__</ref>(self,<sp/>fun,<sp/>dim):</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>instance<sp/>with<sp/>function<sp/>to<sp/>optimize<sp/>and<sp/>dimension<sp/>of<sp/>the<sp/>problem.</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun:<sp/>Callable<sp/>function<sp/>to<sp/>optimize.</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim:<sp/>int.<sp/>The<sp/>dimensionality<sp/>of<sp/>the<sp/>optimization<sp/>problem.</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func:<sp/>Callable.<sp/>The<sp/>function<sp/>to<sp/>optimize.</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statMutex:<sp/>multiprocessing.Lock.<sp/>A<sp/>lock<sp/>to<sp/>ensure<sp/>thread<sp/>safety.</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_x:<sp/>multiprocessing.Array.<sp/>Shared<sp/>array<sp/>storing<sp/>the<sp/>best<sp/>optimization</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution<sp/>found<sp/>so<sp/>far.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_y:<sp/>multiprocessing.Value.<sp/>Shared<sp/>value<sp/>storing<sp/>the<sp/>best<sp/>objective</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>found<sp/>so<sp/>far.</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count:<sp/>multiprocessing.Value.<sp/>Shared<sp/>value<sp/>counting<sp/>the<sp/>number<sp/>of<sp/>function</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evaluations.</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a672784c241ae3b65b49297a7e5669b3f" kindref="member">func</ref><sp/>=<sp/>fun</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a3dfee5cd0eb8f872c25bedf57ca02cf5" kindref="member">statMutex</ref><sp/>=<sp/>mp.Lock()<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a150ab1471fdda3ff21e3f4e29adf1225" kindref="member">best_x</ref><sp/>=<sp/>mp.RawArray(ct.c_double,<sp/>dim)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a676b9c1af1cf8c2b284854e792637541" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>sys.float_info.max)<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1af9bf5ba50b9b5c1e6a147711b56f9218" kindref="member">count</ref><sp/>=<sp/>mp.RawValue(ct.c_int,<sp/>0)<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" kindref="member">eval</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Evaluates<sp/>a<sp/>given<sp/>input<sp/>`x`<sp/>using<sp/>the<sp/>function<sp/>`func`,<sp/>updates<sp/>the<sp/>best<sp/>observed</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>and<sp/>corresponding<sp/>input<sp/>if<sp/>applicable,<sp/>and<sp/>increments<sp/>the<sp/>evaluation</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter.</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x:<sp/>Input<sp/>data<sp/>to<sp/>be<sp/>evaluated<sp/>by<sp/>the<sp/>function<sp/>`func`.</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="93" refid="classfcmaes_1_1testfun_1_1_wrapper_1ae106b1f604bdb6e24937cee17b03e2d1" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>of<sp/>evaluating<sp/>`x`<sp/>using<sp/>the<sp/>function<sp/>`func`.</highlight></codeline>
<codeline lineno="94" refid="classfcmaes_1_1testfun_1_1_wrapper_1a672784c241ae3b65b49297a7e5669b3f" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classfcmaes_1_1testfun_1_1_wrapper_1a3dfee5cd0eb8f872c25bedf57ca02cf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a672784c241ae3b65b49297a7e5669b3f" kindref="member">func</ref>(x)</highlight></codeline>
<codeline lineno="96" refid="classfcmaes_1_1testfun_1_1_wrapper_1a150ab1471fdda3ff21e3f4e29adf1225" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a3dfee5cd0eb8f872c25bedf57ca02cf5" kindref="member">statMutex</ref>:</highlight></codeline>
<codeline lineno="97" refid="classfcmaes_1_1testfun_1_1_wrapper_1a676b9c1af1cf8c2b284854e792637541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a676b9c1af1cf8c2b284854e792637541" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="98" refid="classfcmaes_1_1testfun_1_1_wrapper_1af9bf5ba50b9b5c1e6a147711b56f9218" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a676b9c1af1cf8c2b284854e792637541" kindref="member">best_y</ref>.value<sp/>=<sp/>y</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a150ab1471fdda3ff21e3f4e29adf1225" kindref="member">best_x</ref>[:]<sp/>=<sp/>x[:]</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(str(self.count.value)<sp/>+<sp/>&quot;<sp/>&quot;<sp/>+<sp/>str(y)<sp/>+<sp/>&quot;<sp/>&quot;<sp/>+<sp/>str(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1af9bf5ba50b9b5c1e6a147711b56f9218" kindref="member">count</ref>.value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_wrapper_1ad0135b00f2c165118000017b25b3bfa4" kindref="member">get_best_x</ref>(self):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>best_x<sp/>attribute.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>provides<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>`best_x`<sp/>attribute<sp/>to<sp/>ensure<sp/>the<sp/>original</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>remains<sp/>unaltered<sp/>and<sp/>secure<sp/>from<sp/>unintended<sp/>modifications.</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="111" refid="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list:<sp/>A<sp/>copy<sp/>of<sp/>the<sp/>best_x<sp/>attribute.</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a150ab1471fdda3ff21e3f4e29adf1225" kindref="member">best_x</ref>[:]</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_wrapper_1ab86f2d8e5df54c431b95a8dac9eb7c80" kindref="member">get_best_y</ref>(self):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Retrieves<sp/>the<sp/>value<sp/>of<sp/>the<sp/>best_y<sp/>attribute.</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>returns<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>`best_y`<sp/>attribute,<sp/>which<sp/>is<sp/>likely</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>as<sp/>a<sp/>part<sp/>of<sp/>an<sp/>optimization<sp/>process<sp/>or<sp/>to<sp/>represent<sp/>the<sp/>best-known<sp/>value</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>achieved<sp/>during<sp/>a<sp/>computation.</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Any:<sp/>The<sp/>value<sp/>of<sp/>the<sp/>`best_y`<sp/>attribute.</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a676b9c1af1cf8c2b284854e792637541" kindref="member">best_y</ref>.value</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_wrapper_1a4441f7cb86d2ff083093521f22c72784" kindref="member">get_count</ref>(self):</highlight></codeline>
<codeline lineno="130" refid="classfcmaes_1_1testfun_1_1_wrapper_1ad0135b00f2c165118000017b25b3bfa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fetches<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>count.</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>method<sp/>retrieves<sp/>the<sp/>current<sp/>value<sp/>associated<sp/>with<sp/>the<sp/>`count`<sp/>attribute.<sp/>The<sp/>returned</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>represents<sp/>the<sp/>current<sp/>count<sp/>stored<sp/>within<sp/>the<sp/>object.</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int:<sp/>The<sp/>current<sp/>value<sp/>of<sp/>the<sp/>count.</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classfcmaes_1_1testfun_1_1_wrapper_1af9bf5ba50b9b5c1e6a147711b56f9218" kindref="member">count</ref>.value</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_rosen" kindref="compound">Rosen</ref>(object):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="143" refid="classfcmaes_1_1testfun_1_1_wrapper_1ab86f2d8e5df54c431b95a8dac9eb7c80" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Represents<sp/>the<sp/>Rosen<sp/>class,<sp/>which<sp/>encapsulates<sp/>details<sp/>and<sp/>functionality</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>specific<sp/>to<sp/>Rosen<sp/>operations.</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>is<sp/>designed<sp/>to<sp/>initialize<sp/>and<sp/>handle<sp/>Rosen-related<sp/>computations</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>configurations.<sp/>It<sp/>sets<sp/>up<sp/>the<sp/>initial<sp/>parameters<sp/>based<sp/>on<sp/>given</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dimensions<sp/>to<sp/>facilitate<sp/>further<sp/>processes.</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>The<sp/>dimensionality<sp/>for<sp/>initializing<sp/>the<sp/>Rosen<sp/>computation.</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_wrapper_1ae106b1f604bdb6e24937cee17b03e2d1" kindref="member">__init__</ref>(self,<sp/>dim):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="155" refid="classfcmaes_1_1testfun_1_1_wrapper_1a4441f7cb86d2ff083093521f22c72784" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>class<sp/>with<sp/>a<sp/>given<sp/>dimensionality,<sp/>setting<sp/>up</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specific<sp/>bounds<sp/>and<sp/>objective<sp/>function.</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim:<sp/>The<sp/>dimensionality<sp/>of<sp/>the<sp/>problem.<sp/>Specifies<sp/>the<sp/>size<sp/>of<sp/>bounds<sp/>and</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other<sp/>configurations.</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_testfun.__init__(self,<sp/></highlight><highlight class="stringliteral">&apos;rosen&apos;</highlight><highlight class="normal">,<sp/>_rosen,<sp/>[-5]*dim,<sp/>[5]*dim)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_elli" kindref="compound">Elli</ref>(object):</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Represents<sp/>an<sp/>Elli<sp/>object.</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>is<sp/>used<sp/>to<sp/>initialize<sp/>and<sp/>manage<sp/>Elli<sp/>objects<sp/>with<sp/>specified</highlight></codeline>
<codeline lineno="168" refid="classfcmaes_1_1testfun_1_1_rosen" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dimensionality.<sp/>The<sp/>purpose<sp/>of<sp/>the<sp/>Elli<sp/>object<sp/>is<sp/>primarily<sp/>related<sp/>to<sp/>its</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>usage<sp/>with<sp/>a<sp/>range<sp/>of<sp/>defined<sp/>lower<sp/>and<sp/>upper<sp/>bounds.</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>The<sp/>dimensionality<sp/>of<sp/>the<sp/>Elli<sp/>object.</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_rosen_1a4cb77fdab714481708d2e1c4589cceaa" kindref="member">__init__</ref>(self,<sp/>dim):</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>class<sp/>and<sp/>sets<sp/>up<sp/>the<sp/>function<sp/>parameters.</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim:<sp/>The<sp/>dimensionality<sp/>of<sp/>the<sp/>input<sp/>space<sp/>for<sp/>the<sp/>function.</highlight></codeline>
<codeline lineno="180" refid="classfcmaes_1_1testfun_1_1_rosen_1a4cb77fdab714481708d2e1c4589cceaa" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_testfun.__init__(self,<sp/></highlight><highlight class="stringliteral">&apos;elli&apos;</highlight><highlight class="normal">,<sp/>_elli,<sp/>[-5]*dim,<sp/>[5]*dim)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_cigar" kindref="compound">Cigar</ref>(object):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_rosen_1a4cb77fdab714481708d2e1c4589cceaa" kindref="member">__init__</ref>(self,<sp/>dim):<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_testfun.__init__(self,<sp/></highlight><highlight class="stringliteral">&apos;cigar&apos;</highlight><highlight class="normal">,<sp/>_cigar,<sp/>[-5]*dim,<sp/>[5]*dim)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_sphere" kindref="compound">Sphere</ref>(object):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Represents<sp/>a<sp/>Sphere<sp/>object.</highlight></codeline>
<codeline lineno="191" refid="classfcmaes_1_1testfun_1_1_elli" refkind="compound"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>Sphere<sp/>object<sp/>serves<sp/>as<sp/>a<sp/>conceptual<sp/>representation<sp/>for<sp/>a<sp/>mathematical</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>sphere<sp/>within<sp/>a<sp/>certain<sp/>dimension.<sp/>It<sp/>defines<sp/>its<sp/>boundaries<sp/>and<sp/>provides</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>appropriate<sp/>initialization<sp/>for<sp/>creating<sp/>a<sp/>sphere.</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>The<sp/>dimensionality<sp/>of<sp/>the<sp/>sphere,<sp/>specifying<sp/>how<sp/>many</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimensions<sp/>the<sp/>sphere<sp/>spans.</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_elli_1ac187a52acd0202adc67ac36884b725d1" kindref="member">__init__</ref>(self,<sp/>dim):</highlight></codeline>
<codeline lineno="201" refid="classfcmaes_1_1testfun_1_1_elli_1ac187a52acd0202adc67ac36884b725d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>an<sp/>instance<sp/>with<sp/>given<sp/>dimensional<sp/>constraints<sp/>for<sp/>a<sp/>&apos;sphere&apos;<sp/>type<sp/>function.</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="204" refid="classfcmaes_1_1testfun_1_1_cigar" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>Dimensionality<sp/>of<sp/>the<sp/>space<sp/>to<sp/>be<sp/>initialized.</highlight></codeline>
<codeline lineno="206" refid="classfcmaes_1_1testfun_1_1_cigar_1a65186daa3dad8f1a6c93683bfa1e4dd4" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_testfun.__init__(self,<sp/></highlight><highlight class="stringliteral">&apos;sphere&apos;</highlight><highlight class="normal">,<sp/>_sphere,<sp/>[-5]*dim,<sp/>[5]*dim)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_rastrigin" kindref="compound">Rastrigin</ref>(object):</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Represents<sp/>the<sp/>Rastrigin<sp/>function<sp/>commonly<sp/>used<sp/>in<sp/>optimization<sp/>problems.</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>Rastrigin<sp/>function<sp/>is<sp/>a<sp/>non-convex<sp/>function<sp/>used<sp/>as<sp/>a<sp/>performance<sp/>test</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>problem<sp/>for<sp/>optimization<sp/>algorithms.<sp/>It<sp/>is<sp/>a<sp/>typical<sp/>example<sp/>of<sp/>non-linear</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>multimodal<sp/>functions<sp/>and<sp/>is<sp/>highly<sp/>multimodal,<sp/>meaning<sp/>it<sp/>has<sp/>many<sp/>local</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>minima.<sp/>This<sp/>class<sp/>initializes<sp/>the<sp/>Rastrigin<sp/>function<sp/>with<sp/>specified</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dimensionality<sp/>and<sp/>its<sp/>domain.<sp/>It<sp/>inherits<sp/>from<sp/>a<sp/>base<sp/>function<sp/>class.</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="219" refid="classfcmaes_1_1testfun_1_1_sphere" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>(str):<sp/>The<sp/>name<sp/>of<sp/>the<sp/>optimization<sp/>function.</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domain<sp/>(list<sp/>of<sp/>float):<sp/>The<sp/>lower<sp/>and<sp/>upper<sp/>bounds<sp/>for<sp/>each<sp/>dimension</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>input<sp/>domain.</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_sphere_1a49792538dd2f26d3904440b9d400733a" kindref="member">__init__</ref>(self,<sp/>dim):</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>given<sp/>object<sp/>configuration<sp/>for<sp/>the<sp/>&quot;rastrigin&quot;<sp/>function.</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="229" refid="classfcmaes_1_1testfun_1_1_sphere_1a49792538dd2f26d3904440b9d400733a" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>Dimensionality<sp/>of<sp/>the<sp/>function,<sp/>defining<sp/>the<sp/>number<sp/>of<sp/>variables</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>function<sp/>considers<sp/>during<sp/>evaluation.</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_testfun.__init__(self,<sp/></highlight><highlight class="stringliteral">&apos;rastrigin&apos;</highlight><highlight class="normal">,<sp/>_rastrigin,<sp/>[-5.12]*dim,<sp/>[5.12]*dim)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_eggholder" kindref="compound">Eggholder</ref>(object):</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Represents<sp/>the<sp/>Eggholder<sp/>optimization<sp/>function.</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>Eggholder<sp/>function<sp/>is<sp/>a<sp/>mathematical<sp/>function<sp/>commonly<sp/>used<sp/>for<sp/>testing</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>optimization<sp/>algorithms.<sp/>It<sp/>is<sp/>characterized<sp/>by<sp/>a<sp/>complex<sp/>surface<sp/>with</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>several<sp/>local<sp/>minima<sp/>and<sp/>a<sp/>global<sp/>minimum.<sp/>The<sp/>function<sp/>is<sp/>typically<sp/>used</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>within<sp/>the<sp/>specified<sp/>domain<sp/>and<sp/>is<sp/>considered<sp/>challenging<sp/>due<sp/>to<sp/>its<sp/>rugged</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>nature<sp/>and<sp/>numerous<sp/>local<sp/>optima.</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="245" refid="classfcmaes_1_1testfun_1_1_rastrigin" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>(str):<sp/>Name<sp/>of<sp/>the<sp/>function,<sp/>set<sp/>to<sp/>&apos;eggholder&apos;.</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>(callable):<sp/>The<sp/>mathematical<sp/>representation<sp/>of<sp/>the<sp/>Eggholder</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.</highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_bounds<sp/>(List[int]):<sp/>Lower<sp/>bounds<sp/>for<sp/>the<sp/>function&apos;s<sp/>domain,<sp/>set</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>[-512,<sp/>-512].</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_bounds<sp/>(List[int]):<sp/>Upper<sp/>bounds<sp/>for<sp/>the<sp/>function&apos;s<sp/>domain,<sp/>set</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>[512,<sp/>512].</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_rastrigin_1adc0d1a013ef3b19d8fa0b24bb67cbfb0" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>an<sp/>object<sp/>with<sp/>specific<sp/>function<sp/>parameters<sp/>and<sp/>bounds.</highlight></codeline>
<codeline lineno="256" refid="classfcmaes_1_1testfun_1_1_rastrigin_1adc0d1a013ef3b19d8fa0b24bb67cbfb0" refkind="member"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>constructor<sp/>calls<sp/>the<sp/>parent<sp/>class<sp/>initializer<sp/>and<sp/>sets<sp/>up<sp/>the</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters<sp/>for<sp/>a<sp/>specific<sp/>optimization<sp/>function,<sp/>including<sp/>its<sp/>name,</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>reference,<sp/>and<sp/>upper/lower<sp/>bounds.</highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>None</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>None</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_testfun.__init__(self,<sp/></highlight><highlight class="stringliteral">&apos;eggholder&apos;</highlight><highlight class="normal">,<sp/>_eggholder,<sp/>[-512]*2,<sp/>[512]*2)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_rastrigin_mean" kindref="compound">RastriginMean</ref>(object):</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="271" refid="classfcmaes_1_1testfun_1_1_eggholder" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Represents<sp/>a<sp/>Rastrigin<sp/>mean<sp/>test<sp/>function.</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>defines<sp/>a<sp/>Rastrigin<sp/>mean<sp/>function,<sp/>typically<sp/>used<sp/>as<sp/>a<sp/>benchmark</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>in<sp/>optimization<sp/>problems.<sp/>The<sp/>aim<sp/>of<sp/>this<sp/>function<sp/>is<sp/>to<sp/>evaluate</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>analyze<sp/>the<sp/>performance<sp/>of<sp/>optimization<sp/>algorithms.<sp/>It<sp/>initializes<sp/>the</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>with<sp/>a<sp/>given<sp/>dimension<sp/>and<sp/>a<sp/>specific<sp/>parameter<sp/>`n`.</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>The<sp/>dimension<sp/>of<sp/>the<sp/>function<sp/>space.</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>(int):<sp/>A<sp/>specific<sp/>parameter<sp/>that<sp/>influences<sp/>the<sp/>Rastrigin<sp/>mean<sp/>function.</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_eggholder_1abecdc4c5978776ec647f0b9424c6b90e" kindref="member">__init__</ref>(self,<sp/>dim,<sp/>n):</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>Rastrigin<sp/>mean<sp/>test<sp/>function.</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim:<sp/>Dimensionality<sp/>of<sp/>the<sp/>input<sp/>vector.</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n:<sp/>Number<sp/>of<sp/>components<sp/>used<sp/>in<sp/>calculating<sp/>the<sp/>mean.</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/><ref refid="namespacefcmaes_1_1testfun_1ad34b2d407175d3fa91535738b5193c88" kindref="member">_rastrigin_mean</ref>(x,<sp/>n)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_testfun.__init__(self,<sp/></highlight><highlight class="stringliteral">&apos;rastrigin_mean&apos;</highlight><highlight class="normal">,<sp/>fun,<sp/>[-5.12]*dim,<sp/>[5.12]*dim)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1__testfun" kindref="compound">_testfun</ref>(object):</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Represents<sp/>a<sp/>test<sp/>function,<sp/>its<sp/>name,<sp/>functional<sp/>implementation,<sp/>and<sp/>bounds.</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>encapsulates<sp/>information<sp/>about<sp/>a<sp/>test<sp/>function,<sp/>including<sp/>its</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>name,<sp/>the<sp/>function<sp/>itself,<sp/>its<sp/>variable<sp/>bounds,<sp/>and<sp/>its<sp/>wrapper<sp/>for</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>managing<sp/>execution.</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="301" refid="classfcmaes_1_1testfun_1_1_eggholder_1abecdc4c5978776ec647f0b9424c6b90e" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>(str):<sp/>Name<sp/>of<sp/>the<sp/>test<sp/>function.</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>(Callable):<sp/>The<sp/>functional<sp/>implementation<sp/>of<sp/>the<sp/>test<sp/>function.</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>(Bounds):<sp/>Boundaries<sp/>within<sp/>which<sp/>the<sp/>function<sp/>operates.</highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapper<sp/>(Wrapper):<sp/>Wrapper<sp/>object<sp/>for<sp/>managing<sp/>function<sp/>execution<sp/>and</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>handling.</highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1testfun_1_1_eggholder_1abecdc4c5978776ec647f0b9424c6b90e" kindref="member">__init__</ref>(self,<sp/>name,<sp/>fun,<sp/>lower,<sp/>upper):</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>class<sp/>with<sp/>a<sp/>name,<sp/>a<sp/>function,<sp/>and<sp/>bounds<sp/>for</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>variables.</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="314" refid="classfcmaes_1_1testfun_1_1_rastrigin_mean" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name:<sp/>str.<sp/>The<sp/>name<sp/>associated<sp/>with<sp/>the<sp/>instance.</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun:<sp/>Callable.<sp/>The<sp/>main<sp/>function<sp/>provided<sp/>as<sp/>input.</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower:<sp/>Sequence[float].<sp/>The<sp/>lower<sp/>bounds<sp/>for<sp/>the<sp/>function&apos;s<sp/>input<sp/>variables.</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper:<sp/>Sequence[float].<sp/>The<sp/>upper<sp/>bounds<sp/>for<sp/>the<sp/>function&apos;s<sp/>input<sp/>variables.</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.name<sp/>=<sp/>name<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fun<sp/>=<sp/>fun</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.bounds<sp/>=<sp/>Bounds(lower,<sp/>upper)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.wrapper<sp/>=<sp/><ref refid="classfcmaes_1_1testfun_1_1_wrapper" kindref="compound">Wrapper</ref>(self.fun,<sp/>len(lower))<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1testfun_1a73c5b2617f1f5e73c08b36611a54c9e9" kindref="member">_rosen</ref>(xs,<sp/>alpha=1e2):</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Computes<sp/>the<sp/>Rosenbrock<sp/>function<sp/>for<sp/>the<sp/>given<sp/>input.</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="328" refid="classfcmaes_1_1testfun_1_1_rastrigin_mean_1ab3de865f1a1c5a6969740d4be0a75b88" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>Rosenbrock<sp/>function<sp/>is<sp/>a<sp/>non-convex<sp/>mathematical<sp/>function<sp/>often<sp/>used</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>as<sp/>a<sp/>performance<sp/>test<sp/>problem<sp/>for<sp/>optimization<sp/>algorithms.<sp/>This<sp/>function</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>takes<sp/>a<sp/>list<sp/>of<sp/>numerical<sp/>inputs<sp/>and<sp/>evaluates<sp/>the<sp/>Rosenbrock<sp/>polynomial</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>those<sp/>inputs.<sp/>It<sp/>also<sp/>supports<sp/>handling<sp/>scalars<sp/>and<sp/>will<sp/>return<sp/>outputs</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>as<sp/>either<sp/>a<sp/>scalar<sp/>or<sp/>a<sp/>list<sp/>depending<sp/>on<sp/>the<sp/>input.</highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs:<sp/>A<sp/>numerical<sp/>iterable<sp/>or<sp/>scalar.<sp/>The<sp/>input<sp/>values<sp/>for<sp/>which<sp/>the</highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rosenbrock<sp/>function<sp/>is<sp/>to<sp/>be<sp/>computed.<sp/>If<sp/>the<sp/>first<sp/>element<sp/>of<sp/>`xs`</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>scalar,<sp/>it<sp/>is<sp/>treated<sp/>as<sp/>a<sp/>single<sp/>value.</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha:<sp/>An<sp/>optional<sp/>numerical<sp/>value.<sp/>Represents<sp/>the<sp/>parameter<sp/>to<sp/>scale</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>quadratic<sp/>term<sp/>in<sp/>the<sp/>Rosenbrock<sp/>function.<sp/>Defaults<sp/>to<sp/>1e2.</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>or<sp/>list:<sp/>The<sp/>evaluated<sp/>Rosenbrock<sp/>function<sp/>result.<sp/>If<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>a<sp/>scalar<sp/>or<sp/>a<sp/>single<sp/>list,<sp/>it<sp/>returns<sp/>a<sp/>scalar<sp/>result.<sp/>If<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="344" refid="classfcmaes_1_1testfun_1_1__testfun" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>a<sp/>list<sp/>of<sp/>multiple<sp/>numerical<sp/>iterables,<sp/>it<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>computed</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>for<sp/>each<sp/>input<sp/>iterable.</highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>[xs]<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.isscalar(xs[0])<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>xs<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>np.asarray(xs)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>=<sp/>[sum(alpha<sp/>*<sp/>(x[:-1]**2<sp/>-<sp/>x[1:])**2<sp/>+<sp/>(1.<sp/>-<sp/>x[:-1])**2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>xs]</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(f)<sp/>&gt;<sp/>1<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>f[0]<sp/><sp/></highlight><highlight class="comment">#<sp/>1-element-list<sp/>into<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1testfun_1aabd797a31cba75eb6dcd83bd586bf3e3" kindref="member">_rastrigin</ref>(x):</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Computes<sp/>the<sp/>Rastrigin<sp/>function<sp/>value<sp/>for<sp/>a<sp/>given<sp/>input<sp/>vector.</highlight></codeline>
<codeline lineno="355"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="356"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>Rastrigin<sp/>function<sp/>is<sp/>commonly<sp/>used<sp/>as<sp/>a<sp/>non-convex<sp/>test<sp/>function<sp/>for</highlight></codeline>
<codeline lineno="357"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>optimization<sp/>algorithms.<sp/>It<sp/>is<sp/>highly<sp/>multimodal,<sp/>meaning<sp/>it<sp/>has<sp/>many<sp/>local</highlight></codeline>
<codeline lineno="358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>minima,<sp/>which<sp/>makes<sp/>it<sp/>a<sp/>challenging<sp/>benchmark<sp/>for<sp/>optimization<sp/>techniques.</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>(array-like):<sp/>A<sp/>vector<sp/>of<sp/>input<sp/>values<sp/>on<sp/>which<sp/>the<sp/>Rastrigin<sp/>function</highlight></codeline>
<codeline lineno="362"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>evaluated.<sp/>Must<sp/>be<sp/>convertible<sp/>to<sp/>a<sp/>NumPy<sp/>array.</highlight></codeline>
<codeline lineno="363"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="365"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float:<sp/>The<sp/>computed<sp/>value<sp/>of<sp/>the<sp/>Rastrigin<sp/>function<sp/>for<sp/>the<sp/>input<sp/>vector.</highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="classfcmaes_1_1testfun_1_1__testfun_1ad0c92fbf3c99b9c97e09f54c7e89b98d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>len(x)</highlight></codeline>
<codeline lineno="368" refid="classfcmaes_1_1testfun_1_1__testfun_1ac5931d6aca99cc0486eedf5497e23865" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.asarray(x)</highlight></codeline>
<codeline lineno="369" refid="classfcmaes_1_1testfun_1_1__testfun_1a532e7ace39cc2314a98eab033e9b98d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10.0*dim<sp/>+<sp/>sum(x*x<sp/>-<sp/>10.0*np.cos(2.0*math.pi*x))</highlight></codeline>
<codeline lineno="370" refid="classfcmaes_1_1testfun_1_1__testfun_1a7f4c8475b3ecf6bd9583ffd472824782" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classfcmaes_1_1testfun_1_1__testfun_1a6b71269a55be7005a6e1af93c1eeeb0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1testfun_1abac6eddc844a76e10f2f866c063c6ad7" kindref="member">_cigar</ref>(x):</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Calculates<sp/>the<sp/>value<sp/>of<sp/>the<sp/>&quot;cigar&quot;<sp/>function<sp/>for<sp/>a<sp/>given<sp/>input<sp/>array.</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>&quot;cigar&quot;<sp/>function<sp/>is<sp/>a<sp/>common<sp/>benchmark<sp/>function<sp/>in<sp/>optimization<sp/>studies.</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>It<sp/>is<sp/>designed<sp/>to<sp/>simulate<sp/>an<sp/>elliptical-shaped<sp/>function<sp/>with<sp/>one<sp/>dominant</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dimension.<sp/>It<sp/>is<sp/>used<sp/>to<sp/>evaluate<sp/>optimization<sp/>algorithms<sp/>in<sp/>high-dimensional</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>spaces.</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>(array-like):<sp/>Input<sp/>array<sp/>for<sp/>which<sp/>the<sp/>&quot;cigar&quot;<sp/>function<sp/>value<sp/>is<sp/>to</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>computed.</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float:<sp/>Calculated<sp/>&quot;cigar&quot;<sp/>function<sp/>value<sp/>for<sp/>the<sp/>given<sp/>input<sp/>array.</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>1E6</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.asarray(x)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x[0]*x[0]<sp/>+<sp/>factor<sp/>*<sp/>sum(xi*xi<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>xi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1testfun_1a952a92ed97c6285612f56fa6a8f51fbd" kindref="member">_sphere</ref>(x):</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="393"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Calculates<sp/>the<sp/>sum<sp/>of<sp/>squares<sp/>of<sp/>elements<sp/>in<sp/>an<sp/>input<sp/>array.</highlight></codeline>
<codeline lineno="394"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="395"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>computes<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>squares<sp/>of<sp/>each<sp/>element<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="396"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>input<sp/>array.<sp/>It<sp/>is<sp/>typically<sp/>used<sp/>in<sp/>mathematical<sp/>or<sp/>optimization<sp/>contexts.</highlight></codeline>
<codeline lineno="397" refid="namespacefcmaes_1_1testfun_1a73c5b2617f1f5e73c08b36611a54c9e9" refkind="member"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x:<sp/>Input<sp/>array<sp/>or<sp/>iterable<sp/>whose<sp/>squared<sp/>elements<sp/>will<sp/>be<sp/>summated.</highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>sum<sp/>of<sp/>the<sp/>squares<sp/>of<sp/>the<sp/>elements<sp/>in<sp/>the<sp/>input<sp/>array<sp/>or<sp/>iterable.</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.asarray(x)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum(xi*xi<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>xi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1testfun_1a0a7d3f710cd2e37748bfcefee390e92e" kindref="member">_elli</ref>(x):</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Calculates<sp/>the<sp/>elliptic<sp/>function<sp/>value<sp/>for<sp/>the<sp/>given<sp/>input.</highlight></codeline>
<codeline lineno="411"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="412"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>elliptic<sp/>function<sp/>is<sp/>commonly<sp/>used<sp/>in<sp/>optimization<sp/>problems<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="413"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>benchmark<sp/>function.<sp/>It<sp/>is<sp/>computed<sp/>using<sp/>the<sp/>input<sp/>array<sp/>and<sp/>a<sp/>factor</highlight></codeline>
<codeline lineno="414"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>that<sp/>exponentially<sp/>grows<sp/>based<sp/>on<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>input.</highlight></codeline>
<codeline lineno="415"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="416"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>(array-like):<sp/>Input<sp/>array<sp/>representing<sp/>the<sp/>variables<sp/>for<sp/>which</highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>elliptic<sp/>function<sp/>is<sp/>calculated.</highlight></codeline>
<codeline lineno="419" refid="namespacefcmaes_1_1testfun_1aabd797a31cba75eb6dcd83bd586bf3e3" refkind="member"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="420"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="421"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float:<sp/>The<sp/>computed<sp/>value<sp/>of<sp/>the<sp/>elliptic<sp/>function<sp/>for<sp/>the<sp/>input.</highlight></codeline>
<codeline lineno="422"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>len(x)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.asarray(x)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>1E6</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(dim):</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>+=<sp/>factor<sp/>**<sp/>(i<sp/>/<sp/>(dim<sp/>-<sp/>1.))<sp/>*<sp/>x[i]<sp/>*<sp/>x[i]</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1testfun_1abe5db8aa47b5d50d2100075d9600ba6c" kindref="member">_modify</ref>(x,<sp/>delta):</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="433"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Applies<sp/>a<sp/>random<sp/>modification<sp/>to<sp/>an<sp/>array.</highlight></codeline>
<codeline lineno="434"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="435"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>takes<sp/>an<sp/>array<sp/>as<sp/>input,<sp/>and<sp/>applies<sp/>a<sp/>random<sp/>modification</highlight></codeline>
<codeline lineno="436"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>each<sp/>of<sp/>its<sp/>elements<sp/>using<sp/>a<sp/>Gaussian<sp/>(normal)<sp/>distribution<sp/>scaled</highlight></codeline>
<codeline lineno="437"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>by<sp/>a<sp/>specified<sp/>delta<sp/>factor.</highlight></codeline>
<codeline lineno="438"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="439"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="440"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>(list<sp/>or<sp/>np.ndarray):<sp/>Input<sp/>array<sp/>to<sp/>be<sp/>modified.</highlight></codeline>
<codeline lineno="441" refid="namespacefcmaes_1_1testfun_1abac6eddc844a76e10f2f866c063c6ad7" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>(float):<sp/>Scaling<sp/>factor<sp/>for<sp/>the<sp/>random<sp/>noise<sp/>to<sp/>be<sp/>added.</highlight></codeline>
<codeline lineno="442"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="443"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="444"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list:<sp/>A<sp/>new<sp/>list<sp/>containing<sp/>the<sp/>modified<sp/>elements.</highlight></codeline>
<codeline lineno="445"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>len(x)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>modified<sp/>=<sp/>np.asarray(x)<sp/>+<sp/>delta<sp/>*<sp/>np.random.randn(dim)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>modified.tolist()</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1testfun_1ad34b2d407175d3fa91535738b5193c88" kindref="member">_rastrigin_mean</ref>(x,<sp/>n):</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Computes<sp/>the<sp/>mean<sp/>output<sp/>of<sp/>the<sp/>Rastrigin<sp/>function<sp/>over<sp/>`n`<sp/>modifications<sp/>of</highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>input<sp/>`x`.<sp/>This<sp/>function<sp/>applies<sp/>a<sp/>slight<sp/>modification<sp/>to<sp/>the<sp/>input<sp/>value<sp/>`x`</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>before<sp/>passing<sp/>it<sp/>to<sp/>`_rastrigin`<sp/>and<sp/>accumulates<sp/>the<sp/>results<sp/>to<sp/>compute</highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>mean.</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="457"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="458"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x:<sp/>The<sp/>initial<sp/>input<sp/>value<sp/>for<sp/>the<sp/>Rastrigin<sp/>function<sp/>that<sp/>will<sp/>be<sp/>slightly</highlight></codeline>
<codeline lineno="459"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified<sp/>for<sp/>each<sp/>iteration.</highlight></codeline>
<codeline lineno="460"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n:<sp/>The<sp/>number<sp/>of<sp/>iterations<sp/>or<sp/>modifications<sp/>of<sp/>input<sp/>`x`<sp/>for<sp/>computing</highlight></codeline>
<codeline lineno="461" refid="namespacefcmaes_1_1testfun_1a952a92ed97c6285612f56fa6a8f51fbd" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>average.</highlight></codeline>
<codeline lineno="462"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="463"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="464"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>mean<sp/>result<sp/>of<sp/>the<sp/>Rastrigin<sp/>function<sp/>after<sp/>applying<sp/>it<sp/>to<sp/>`n`</highlight></codeline>
<codeline lineno="465"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified<sp/>versions<sp/>of<sp/>the<sp/>input<sp/>`x`.</highlight></codeline>
<codeline lineno="466"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>0.001</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>sumy<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumy<sp/>+=<sp/><ref refid="namespacefcmaes_1_1testfun_1aabd797a31cba75eb6dcd83bd586bf3e3" kindref="member">_rastrigin</ref>(<ref refid="namespacefcmaes_1_1testfun_1abe5db8aa47b5d50d2100075d9600ba6c" kindref="member">_modify</ref>(x,<sp/>delta))</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sumy<sp/>/<sp/>n</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1testfun_1a40a0037c26c1d47818ccdb151849b2c0" kindref="member">_eggholder</ref>(x):</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="475"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Calculates<sp/>the<sp/>Eggholder<sp/>function<sp/>value<sp/>for<sp/>a<sp/>given<sp/>input.<sp/>The<sp/>Eggholder</highlight></codeline>
<codeline lineno="476"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>is<sp/>a<sp/>complex<sp/>mathematical<sp/>function<sp/>often<sp/>used<sp/>in<sp/>optimization</highlight></codeline>
<codeline lineno="477"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>problems<sp/>to<sp/>test<sp/>the<sp/>performance<sp/>of<sp/>algorithms<sp/>due<sp/>to<sp/>its<sp/>multiple<sp/>local</highlight></codeline>
<codeline lineno="478"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>minima.</highlight></codeline>
<codeline lineno="479"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="480"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="481" refid="namespacefcmaes_1_1testfun_1a0a7d3f710cd2e37748bfcefee390e92e" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x:<sp/>A<sp/>list<sp/>or<sp/>array-like<sp/>object<sp/>with<sp/>two<sp/>elements<sp/>representing<sp/>the</highlight></codeline>
<codeline lineno="482"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>values<sp/>for<sp/>the<sp/>Eggholder<sp/>function.</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="485"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float:<sp/>The<sp/>result<sp/>of<sp/>evaluating<sp/>the<sp/>Eggholder<sp/>function<sp/>for<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="486"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>values.</highlight></codeline>
<codeline lineno="487"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="488"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-(x[1]<sp/>+<sp/>47.0)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>np.sin(np.sqrt(abs(x[0]/2.0<sp/>+<sp/>(x[1]<sp/>+<sp/>47.0))))</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>x[0]<sp/>*<sp/>np.sin(np.sqrt(abs(x[0]<sp/>-<sp/>(x[1]<sp/>+<sp/>47.0))))</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
    </programlisting>
    <location file="fcmaes/testfun.py"/>
  </compounddef>
</doxygen>

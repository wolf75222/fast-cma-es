<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classdual__annealing_1_1_fitness" kind="class" language="C++" prot="public">
    <compoundname>dual_annealing::Fitness</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d" prot="public" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec dual_annealing::Fitness::lower</definition>
        <argsstring></argsstring>
        <name>lower</name>
        <qualifiedname>dual_annealing::Fitness::lower</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="76" column="9" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="76" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8" compoundref="daoptimizer_8cpp" startline="143" endline="148">decode</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a288c5b34db28ee5a3c0e0916f6936d27" compoundref="daoptimizer_8cpp" startline="136" endline="141">encode</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8" compoundref="daoptimizer_8cpp" startline="79" endline="87">Fitness</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5" compoundref="daoptimizer_8cpp" startline="89" endline="94">getClosestFeasible</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7" compoundref="daoptimizer_8cpp" startline="103" endline="114">value</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1aca95b5772925f77987ea96b12004b7b6" prot="public" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec dual_annealing::Fitness::upper</definition>
        <argsstring></argsstring>
        <name>upper</name>
        <qualifiedname>dual_annealing::Fitness::upper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="77" column="9" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="77" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8" compoundref="daoptimizer_8cpp" startline="79" endline="87">Fitness</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1a6ca3b936412ade3edf4441e48f87a966" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double dual_annealing::Fitness::LS_MAXITER_RATIO</definition>
        <argsstring></argsstring>
        <name>LS_MAXITER_RATIO</name>
        <qualifiedname>dual_annealing::Fitness::LS_MAXITER_RATIO</qualifiedname>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="116" column="18" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="116" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710" compoundref="daoptimizer_8cpp" startline="120" endline="134">local_search</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1a88756554a52354b1c976854944f5db4b" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double dual_annealing::Fitness::LS_MAXITER_MIN</definition>
        <argsstring></argsstring>
        <name>LS_MAXITER_MIN</name>
        <qualifiedname>dual_annealing::Fitness::LS_MAXITER_MIN</qualifiedname>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="117" column="18" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="117" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710" compoundref="daoptimizer_8cpp" startline="120" endline="134">local_search</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1a6089fb532194afab1e05fac3e55c77c6" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double dual_annealing::Fitness::LS_MAXITER_MAX</definition>
        <argsstring></argsstring>
        <name>LS_MAXITER_MAX</name>
        <qualifiedname>dual_annealing::Fitness::LS_MAXITER_MAX</qualifiedname>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="118" column="18" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="118" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710" compoundref="daoptimizer_8cpp" startline="120" endline="134">local_search</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1a420fcefb28b5a9ba16b80cabba1d017f" prot="private" static="no" mutable="no">
        <type><ref refid="namespacedual__annealing_1acc0e4feae757283b161380c003152d7c" kindref="member">callback_type</ref></type>
        <definition>callback_type dual_annealing::Fitness::func</definition>
        <argsstring></argsstring>
        <name>func</name>
        <qualifiedname>dual_annealing::Fitness::func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="159" column="19" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="159" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5" compoundref="daoptimizer_8cpp" startline="96" endline="101">eval</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8" compoundref="daoptimizer_8cpp" startline="79" endline="87">Fitness</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long dual_annealing::Fitness::evaluationCounter</definition>
        <argsstring></argsstring>
        <name>evaluationCounter</name>
        <qualifiedname>dual_annealing::Fitness::evaluationCounter</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="160" column="10" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="160" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5" compoundref="daoptimizer_8cpp" startline="96" endline="101">eval</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a9abe3257d970e7fec842dedfeb409f37" compoundref="daoptimizer_8cpp" startline="150" endline="152">getEvaluations</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1aa8838720841139fdfbac2c37a4dc0548" compoundref="daoptimizer_8cpp" startline="154" endline="156">maxEvalReached</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1a6fb1053a249b16799a038672c59e915c" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long dual_annealing::Fitness::maxEvals</definition>
        <argsstring></argsstring>
        <name>maxEvals</name>
        <qualifiedname>dual_annealing::Fitness::maxEvals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="161" column="10" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="161" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8" compoundref="daoptimizer_8cpp" startline="79" endline="87">Fitness</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1aa8838720841139fdfbac2c37a4dc0548" compoundref="daoptimizer_8cpp" startline="154" endline="156">maxEvalReached</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec dual_annealing::Fitness::scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <qualifiedname>dual_annealing::Fitness::scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="162" column="9" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="162" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8" compoundref="daoptimizer_8cpp" startline="143" endline="148">decode</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a288c5b34db28ee5a3c0e0916f6936d27" compoundref="daoptimizer_8cpp" startline="136" endline="141">encode</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8" compoundref="daoptimizer_8cpp" startline="79" endline="87">Fitness</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double dual_annealing::Fitness::bestY</definition>
        <argsstring></argsstring>
        <name>bestY</name>
        <qualifiedname>dual_annealing::Fitness::bestY</qualifiedname>
        <initializer>= DBL_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="163" column="12" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="163" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710" compoundref="daoptimizer_8cpp" startline="120" endline="134">local_search</referencedby>
        <referencedby refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1aa298d4659787619babc9c7c0bbb98b74" compoundref="noisy__tsp_8py" startline="93" endline="99">examples.noisy_tsp.TSP.optimize_mo</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7" compoundref="daoptimizer_8cpp" startline="103" endline="114">value</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdual__annealing_1_1_fitness_1ab67b400f380bb926698cf02edd2f5ffa" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec dual_annealing::Fitness::bestX</definition>
        <argsstring></argsstring>
        <name>bestX</name>
        <qualifiedname>dual_annealing::Fitness::bestX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="164" column="9" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="164" bodyend="-1"/>
        <referencedby refid="classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710" compoundref="daoptimizer_8cpp" startline="120" endline="134">local_search</referencedby>
        <referencedby refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1aa298d4659787619babc9c7c0bbb98b74" compoundref="noisy__tsp_8py" startline="93" endline="99">examples.noisy_tsp.TSP.optimize_mo</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7" compoundref="daoptimizer_8cpp" startline="103" endline="114">value</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dual_annealing::Fitness::Fitness</definition>
        <argsstring>(callback_type pfunc, vec *lower_limit, vec *upper_limit, long maxEvals_)</argsstring>
        <name>Fitness</name>
        <qualifiedname>dual_annealing::Fitness::Fitness</qualifiedname>
        <param>
          <type><ref refid="namespacedual__annealing_1acc0e4feae757283b161380c003152d7c" kindref="member">callback_type</ref></type>
          <declname>pfunc</declname>
        </param>
        <param>
          <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> *</type>
          <declname>lower_limit</declname>
        </param>
        <param>
          <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> *</type>
          <declname>upper_limit</declname>
        </param>
        <param>
          <type>long</type>
          <declname>maxEvals_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="79" column="5" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="79" bodyend="87"/>
        <references refid="classdual__annealing_1_1_fitness_1a420fcefb28b5a9ba16b80cabba1d017f" compoundref="daoptimizer_8cpp" startline="159">func</references>
        <references refid="classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d" compoundref="daoptimizer_8cpp" startline="76">lower</references>
        <references refid="classdual__annealing_1_1_fitness_1a6fb1053a249b16799a038672c59e915c" compoundref="daoptimizer_8cpp" startline="161">maxEvals</references>
        <references refid="classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63" compoundref="daoptimizer_8cpp" startline="162">scale</references>
        <references refid="classdual__annealing_1_1_fitness_1aca95b5772925f77987ea96b12004b7b6" compoundref="daoptimizer_8cpp" startline="77">upper</references>
      </memberdef>
      <memberdef kind="function" id="classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec dual_annealing::Fitness::getClosestFeasible</definition>
        <argsstring>(const vec &amp;X) const</argsstring>
        <name>getClosestFeasible</name>
        <qualifiedname>dual_annealing::Fitness::getClosestFeasible</qualifiedname>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="89" column="9" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="89" bodyend="94"/>
        <references refid="classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d" compoundref="daoptimizer_8cpp" startline="76">lower</references>
        <referencedby refid="classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710" compoundref="daoptimizer_8cpp" startline="120" endline="134">local_search</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7" compoundref="daoptimizer_8cpp" startline="103" endline="114">value</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double dual_annealing::Fitness::eval</definition>
        <argsstring>(const vec &amp;X)</argsstring>
        <name>eval</name>
        <qualifiedname>dual_annealing::Fitness::eval</qualifiedname>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="96" column="12" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="96" bodyend="101"/>
        <references refid="classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42" compoundref="daoptimizer_8cpp" startline="160">evaluationCounter</references>
        <references refid="classdual__annealing_1_1_fitness_1a420fcefb28b5a9ba16b80cabba1d017f" compoundref="daoptimizer_8cpp" startline="159">func</references>
        <referencedby refid="classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7" compoundref="daoptimizer_8cpp" startline="103" endline="114">value</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double dual_annealing::Fitness::value</definition>
        <argsstring>(const vec &amp;X)</argsstring>
        <name>value</name>
        <qualifiedname>dual_annealing::Fitness::value</qualifiedname>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="103" column="12" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="103" bodyend="114"/>
        <references refid="classdual__annealing_1_1_fitness_1ab67b400f380bb926698cf02edd2f5ffa" compoundref="daoptimizer_8cpp" startline="164">bestX</references>
        <references refid="classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c" compoundref="daoptimizer_8cpp" startline="163">bestY</references>
        <references refid="classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8" compoundref="daoptimizer_8cpp" startline="143" endline="148">decode</references>
        <references refid="classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5" compoundref="daoptimizer_8cpp" startline="96" endline="101">eval</references>
        <references refid="classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5" compoundref="daoptimizer_8cpp" startline="89" endline="94">getClosestFeasible</references>
        <references refid="classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d" compoundref="daoptimizer_8cpp" startline="76">lower</references>
        <referencedby refid="classdual__annealing_1_1_energy_state_1a44539c22d2beaefdaf44bad69a84a570" compoundref="daoptimizer_8cpp" startline="369" endline="394">dual_annealing::EnergyState::reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double dual_annealing::Fitness::local_search</definition>
        <argsstring>(const vec &amp;x0, double currval, vec &amp;res)</argsstring>
        <name>local_search</name>
        <qualifiedname>dual_annealing::Fitness::local_search</qualifiedname>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>currval</declname>
        </param>
        <param>
          <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="120" column="12" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="120" bodyend="134"/>
        <references refid="classdual__annealing_1_1_fitness_1ab67b400f380bb926698cf02edd2f5ffa" compoundref="daoptimizer_8cpp" startline="164">bestX</references>
        <references refid="classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c" compoundref="daoptimizer_8cpp" startline="163">bestY</references>
        <references refid="classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5" compoundref="daoptimizer_8cpp" startline="89" endline="94">getClosestFeasible</references>
        <references refid="classdual__annealing_1_1_fitness_1a6089fb532194afab1e05fac3e55c77c6" compoundref="daoptimizer_8cpp" startline="118">LS_MAXITER_MAX</references>
        <references refid="classdual__annealing_1_1_fitness_1a88756554a52354b1c976854944f5db4b" compoundref="daoptimizer_8cpp" startline="117">LS_MAXITER_MIN</references>
        <references refid="classdual__annealing_1_1_fitness_1a6ca3b936412ade3edf4441e48f87a966" compoundref="daoptimizer_8cpp" startline="116">LS_MAXITER_RATIO</references>
        <references refid="namespacedual__annealing_1ac314c8e5c367afe5307f99a29a667f6b" compoundref="daoptimizer_8cpp" startline="210" endline="232">dual_annealing::minLBFGS</references>
      </memberdef>
      <memberdef kind="function" id="classdual__annealing_1_1_fitness_1a288c5b34db28ee5a3c0e0916f6936d27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec dual_annealing::Fitness::encode</definition>
        <argsstring>(const vec &amp;X) const</argsstring>
        <name>encode</name>
        <qualifiedname>dual_annealing::Fitness::encode</qualifiedname>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="136" column="9" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="136" bodyend="141"/>
        <references refid="classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d" compoundref="daoptimizer_8cpp" startline="76">lower</references>
        <references refid="classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63" compoundref="daoptimizer_8cpp" startline="162">scale</references>
        <referencedby refid="daoptimizer_8cpp_1aa097a54ac07d35740d86c465d2477195" compoundref="daoptimizer_8cpp" startline="655" endline="689">optimizeDA_C</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec dual_annealing::Fitness::decode</definition>
        <argsstring>(const vec &amp;X) const</argsstring>
        <name>decode</name>
        <qualifiedname>dual_annealing::Fitness::decode</qualifiedname>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="143" column="9" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="143" bodyend="148"/>
        <references refid="classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d" compoundref="daoptimizer_8cpp" startline="76">lower</references>
        <references refid="classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63" compoundref="daoptimizer_8cpp" startline="162">scale</references>
        <referencedby refid="daoptimizer_8cpp_1aa097a54ac07d35740d86c465d2477195" compoundref="daoptimizer_8cpp" startline="655" endline="689">optimizeDA_C</referencedby>
        <referencedby refid="classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7" compoundref="daoptimizer_8cpp" startline="103" endline="114">value</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdual__annealing_1_1_fitness_1a9abe3257d970e7fec842dedfeb409f37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int dual_annealing::Fitness::getEvaluations</definition>
        <argsstring>()</argsstring>
        <name>getEvaluations</name>
        <qualifiedname>dual_annealing::Fitness::getEvaluations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="150" column="9" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="150" bodyend="152"/>
        <references refid="classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42" compoundref="daoptimizer_8cpp" startline="160">evaluationCounter</references>
        <referencedby refid="daoptimizer_8cpp_1aa097a54ac07d35740d86c465d2477195" compoundref="daoptimizer_8cpp" startline="655" endline="689">optimizeDA_C</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdual__annealing_1_1_fitness_1aa8838720841139fdfbac2c37a4dc0548" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dual_annealing::Fitness::maxEvalReached</definition>
        <argsstring>()</argsstring>
        <name>maxEvalReached</name>
        <qualifiedname>dual_annealing::Fitness::maxEvalReached</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/daoptimizer.cpp" line="154" column="10" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="154" bodyend="156"/>
        <references refid="classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42" compoundref="daoptimizer_8cpp" startline="160">evaluationCounter</references>
        <references refid="classdual__annealing_1_1_fitness_1a6fb1053a249b16799a038672c59e915c" compoundref="daoptimizer_8cpp" startline="161">maxEvals</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dual_annealing::Fitness</label>
        <link refid="classdual__annealing_1_1_fitness"/>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/daoptimizer.cpp" line="72" column="1" bodyfile="_fcmaescpp/daoptimizer.cpp" bodystart="72" bodyend="165"/>
    <listofallmembers>
      <member refid="classdual__annealing_1_1_fitness_1ab67b400f380bb926698cf02edd2f5ffa" prot="private" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>bestX</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a59495a3cce1d7ed69a5ada5066911b7c" prot="private" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>bestY</name></member>
      <member refid="classdual__annealing_1_1_fitness_1ad5755fabd06c8e86de566687f40c55e8" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>decode</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a288c5b34db28ee5a3c0e0916f6936d27" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>encode</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a459c83b85fbfc02a5811a0f98d2ac7b5" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>eval</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a1f692ead51aa3fbd74d7df8d63e35e42" prot="private" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>evaluationCounter</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a4aeaf0549e22e464b769a52b97fd5cf8" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>Fitness</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a420fcefb28b5a9ba16b80cabba1d017f" prot="private" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>func</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a95a989c077c91a342b18f61125c2bea5" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>getClosestFeasible</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a9abe3257d970e7fec842dedfeb409f37" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>getEvaluations</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a0e4b28444de4d6951dfb416e8e7a8710" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>local_search</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a20221f76a8ea7ea803e29e716a35b40d" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>lower</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a6089fb532194afab1e05fac3e55c77c6" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>LS_MAXITER_MAX</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a88756554a52354b1c976854944f5db4b" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>LS_MAXITER_MIN</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a6ca3b936412ade3edf4441e48f87a966" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>LS_MAXITER_RATIO</name></member>
      <member refid="classdual__annealing_1_1_fitness_1aa8838720841139fdfbac2c37a4dc0548" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>maxEvalReached</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a6fb1053a249b16799a038672c59e915c" prot="private" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>maxEvals</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a48db5da79ec356d83901c6e264ef4c63" prot="private" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>scale</name></member>
      <member refid="classdual__annealing_1_1_fitness_1aca95b5772925f77987ea96b12004b7b6" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>upper</name></member>
      <member refid="classdual__annealing_1_1_fitness_1a02a57480e20f23ac3d1b9eab91f408f7" prot="public" virt="non-virtual"><scope>dual_annealing::Fitness</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="crypto_8py" kind="file" language="Python">
    <compoundname>crypto.py</compoundname>
    <innerclass refid="classexamples_1_1crypto_1_1fitness" prot="public">examples::crypto::fitness</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1crypto">examples::crypto</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1a6b5e9bcf79e1fc78cf493c28c73d7404" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::crypto.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.crypto.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="33" column="1" bodyfile="examples/crypto.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1a6973099c614186a0aaab015ae17aed7f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::crypto.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.crypto.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="33" column="1" bodyfile="examples/crypto.py" bodystart="33" bodyend="-1"/>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a5a933388f6d0303f80251156e30e6b9b" compoundref="crypto_8py" startline="145" endline="166">examples.crypto.fitness.fun</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1ae6b082b78a586ad18f44525f886f79f9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::crypto.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.crypto.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="33" column="1" bodyfile="examples/crypto.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1accaf5b53eed6cbec1e49d2a7292a15b1" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float examples::crypto.START_CASH</definition>
        <argsstring></argsstring>
        <name>START_CASH</name>
        <qualifiedname>examples.crypto.START_CASH</qualifiedname>
        <initializer>=  1000000.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="36" column="1" bodyfile="examples/crypto.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1a284d5c864a794e437544590cb282efac" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::crypto.bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <qualifiedname>examples.crypto.bounds</qualifiedname>
        <initializer>=  Bounds([20,50,10,10], [50,100,200,200])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="264" column="1" bodyfile="examples/crypto.py" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1a9fefe2b65764ffc2422e189b7674e66b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::crypto.ddim</definition>
        <argsstring></argsstring>
        <name>ddim</name>
        <qualifiedname>examples.crypto.ddim</qualifiedname>
        <initializer>=  4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="265" column="1" bodyfile="examples/crypto.py" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1a7b9a03eae92503954a62eb5a0510c852" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::crypto.qd_bounds</definition>
        <argsstring></argsstring>
        <name>qd_bounds</name>
        <qualifiedname>examples.crypto.qd_bounds</qualifiedname>
        <initializer>=  Bounds([0]*ddim, [4]*ddim)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="266" column="1" bodyfile="examples/crypto.py" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1a5eede08c19254c6895849bb97c9257a7" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::crypto.niche_num</definition>
        <argsstring></argsstring>
        <name>niche_num</name>
        <qualifiedname>examples.crypto.niche_num</qualifiedname>
        <initializer>=  1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="267" column="1" bodyfile="examples/crypto.py" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1a11fa498d14aab048b8ba856c68562161" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::crypto.tickers</definition>
        <argsstring></argsstring>
        <name>tickers</name>
        <qualifiedname>examples.crypto.tickers</qualifiedname>
        <initializer>=  [&apos;BTC-USD&apos;, &apos;ETH-USD&apos;, &apos;XRP-USD&apos;, &apos;ADA-USD&apos;]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="330" column="1" bodyfile="examples/crypto.py" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1a69a1d45fff78e42c6f6b970bdab95bd5" prot="public" static="no" mutable="no">
        <type>str</type>
        <definition>str examples::crypto.start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <qualifiedname>examples.crypto.start</qualifiedname>
        <initializer>= &quot;2019-01-01&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="333" column="1" bodyfile="examples/crypto.py" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1crypto_1a8a8f7983f4ea099719a5b299d1b22ef6" prot="public" static="no" mutable="no">
        <type>str</type>
        <definition>str examples::crypto.end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <qualifiedname>examples.crypto.end</qualifiedname>
        <initializer>= &quot;2030-04-30&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="334" column="1" bodyfile="examples/crypto.py" bodystart="334" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a2c916307beb743d28425fcd5c7568f01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.get_history</definition>
        <argsstring>(ticker, start, end)</argsstring>
        <name>get_history</name>
        <qualifiedname>examples.crypto.get_history</qualifiedname>
        <param>
          <type>ticker</type>
          <defname>ticker</defname>
        </param>
        <param>
          <type>start</type>
          <defname>start</defname>
        </param>
        <param>
          <type>end</type>
          <defname>end</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="39" column="1" bodyfile="examples/crypto.py" bodystart="39" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a38e3ca807ed30d1fa4d4a5cc478e1525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.get_ema</definition>
        <argsstring>(prices, period)</argsstring>
        <name>get_ema</name>
        <qualifiedname>examples.crypto.get_ema</qualifiedname>
        <param>
          <type>prices</type>
          <defname>prices</defname>
        </param>
        <param>
          <type>period</type>
          <defname>period</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="54" column="1" bodyfile="examples/crypto.py" bodystart="54" bodyend="57"/>
        <referencedby refid="namespaceexamples_1_1crypto_1a75d529296c6d83294ad1c37e55bd267f" compoundref="crypto_8py" startline="118" endline="123">examples.crypto.simulate</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a8fe56bb9960bb347eee6e2c39ddbd90f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.get_sma</definition>
        <argsstring>(prices, period)</argsstring>
        <name>get_sma</name>
        <qualifiedname>examples.crypto.get_sma</qualifiedname>
        <param>
          <type>prices</type>
          <defname>prices</defname>
        </param>
        <param>
          <type>period</type>
          <defname>period</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="58" column="1" bodyfile="examples/crypto.py" bodystart="58" bodyend="63"/>
        <referencedby refid="namespaceexamples_1_1crypto_1a75d529296c6d83294ad1c37e55bd267f" compoundref="crypto_8py" startline="118" endline="123">examples.crypto.simulate</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a54eb39bc81fed172b7d1d74dcec022c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.buy_all</definition>
        <argsstring>(cash, num_coins, price, date, logs)</argsstring>
        <name>buy_all</name>
        <qualifiedname>examples.crypto.buy_all</qualifiedname>
        <param>
          <type>cash</type>
          <defname>cash</defname>
        </param>
        <param>
          <type>num_coins</type>
          <defname>num_coins</defname>
        </param>
        <param>
          <type>price</type>
          <defname>price</defname>
        </param>
        <param>
          <type>date</type>
          <defname>date</defname>
        </param>
        <param>
          <type>logs</type>
          <defname>logs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="64" column="1" bodyfile="examples/crypto.py" bodystart="64" bodyend="73"/>
        <referencedby refid="namespaceexamples_1_1crypto_1a941dc0c737b40581bde98db6aef23525" compoundref="crypto_8py" startline="84" endline="90">examples.crypto.hodl</referencedby>
        <referencedby refid="namespaceexamples_1_1crypto_1a61f6c93fa62a257ed271a0aa1210f604" compoundref="crypto_8py" startline="91" endline="117">examples.crypto.strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a8e16e3bee50df8bd1b44e55fe8950e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.sell_all</definition>
        <argsstring>(cash, num_coins, price, date, logs)</argsstring>
        <name>sell_all</name>
        <qualifiedname>examples.crypto.sell_all</qualifiedname>
        <param>
          <type>cash</type>
          <defname>cash</defname>
        </param>
        <param>
          <type>num_coins</type>
          <defname>num_coins</defname>
        </param>
        <param>
          <type>price</type>
          <defname>price</defname>
        </param>
        <param>
          <type>date</type>
          <defname>date</defname>
        </param>
        <param>
          <type>logs</type>
          <defname>logs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="74" column="1" bodyfile="examples/crypto.py" bodystart="74" bodyend="83"/>
        <referencedby refid="namespaceexamples_1_1crypto_1a941dc0c737b40581bde98db6aef23525" compoundref="crypto_8py" startline="84" endline="90">examples.crypto.hodl</referencedby>
        <referencedby refid="namespaceexamples_1_1crypto_1a61f6c93fa62a257ed271a0aa1210f604" compoundref="crypto_8py" startline="91" endline="117">examples.crypto.strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a941dc0c737b40581bde98db6aef23525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.hodl</definition>
        <argsstring>(close, start_cash)</argsstring>
        <name>hodl</name>
        <qualifiedname>examples.crypto.hodl</qualifiedname>
        <param>
          <type>close</type>
          <defname>close</defname>
        </param>
        <param>
          <type>start_cash</type>
          <defname>start_cash</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="84" column="1" bodyfile="examples/crypto.py" bodystart="84" bodyend="90"/>
        <references refid="namespaceexamples_1_1crypto_1a54eb39bc81fed172b7d1d74dcec022c2" compoundref="crypto_8py" startline="64" endline="73">examples.crypto.buy_all</references>
        <references refid="namespaceexamples_1_1crypto_1a8e16e3bee50df8bd1b44e55fe8950e10" compoundref="crypto_8py" startline="74" endline="83">examples.crypto.sell_all</references>
        <referencedby refid="namespaceexamples_1_1crypto_1a61f6c93fa62a257ed271a0aa1210f604" compoundref="crypto_8py" startline="91" endline="117">examples.crypto.strategy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a61f6c93fa62a257ed271a0aa1210f604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.strategy</definition>
        <argsstring>(close, start_cash, ema, sma, wait_buy, wait_sell, dates)</argsstring>
        <name>strategy</name>
        <qualifiedname>examples.crypto.strategy</qualifiedname>
        <param>
          <type>close</type>
          <defname>close</defname>
        </param>
        <param>
          <type>start_cash</type>
          <defname>start_cash</defname>
        </param>
        <param>
          <type>ema</type>
          <defname>ema</defname>
        </param>
        <param>
          <type>sma</type>
          <defname>sma</defname>
        </param>
        <param>
          <type>wait_buy</type>
          <defname>wait_buy</defname>
        </param>
        <param>
          <type>wait_sell</type>
          <defname>wait_sell</defname>
        </param>
        <param>
          <type>dates</type>
          <defname>dates</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="91" column="1" bodyfile="examples/crypto.py" bodystart="91" bodyend="117"/>
        <references refid="namespaceexamples_1_1crypto_1a54eb39bc81fed172b7d1d74dcec022c2" compoundref="crypto_8py" startline="64" endline="73">examples.crypto.buy_all</references>
        <references refid="namespaceexamples_1_1crypto_1a941dc0c737b40581bde98db6aef23525" compoundref="crypto_8py" startline="84" endline="90">examples.crypto.hodl</references>
        <references refid="namespaceexamples_1_1crypto_1a8e16e3bee50df8bd1b44e55fe8950e10" compoundref="crypto_8py" startline="74" endline="83">examples.crypto.sell_all</references>
        <referencedby refid="namespaceexamples_1_1crypto_1a75d529296c6d83294ad1c37e55bd267f" compoundref="crypto_8py" startline="118" endline="123">examples.crypto.simulate</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a75d529296c6d83294ad1c37e55bd267f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.simulate</definition>
        <argsstring>(prices, ema_period, sma_period, wait_buy, wait_sell, dates=None)</argsstring>
        <name>simulate</name>
        <qualifiedname>examples.crypto.simulate</qualifiedname>
        <param>
          <type>prices</type>
          <defname>prices</defname>
        </param>
        <param>
          <type>ema_period</type>
          <defname>ema_period</defname>
        </param>
        <param>
          <type>sma_period</type>
          <defname>sma_period</defname>
        </param>
        <param>
          <type>wait_buy</type>
          <defname>wait_buy</defname>
        </param>
        <param>
          <type>wait_sell</type>
          <defname>wait_sell</defname>
        </param>
        <param>
          <type>dates</type>
          <defname>dates</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="118" column="1" bodyfile="examples/crypto.py" bodystart="118" bodyend="123"/>
        <references refid="namespaceexamples_1_1crypto_1a38e3ca807ed30d1fa4d4a5cc478e1525" compoundref="crypto_8py" startline="54" endline="57">examples.crypto.get_ema</references>
        <references refid="namespaceexamples_1_1crypto_1a8fe56bb9960bb347eee6e2c39ddbd90f" compoundref="crypto_8py" startline="58" endline="63">examples.crypto.get_sma</references>
        <references refid="namespaceexamples_1_1crypto_1a61f6c93fa62a257ed271a0aa1210f604" compoundref="crypto_8py" startline="91" endline="117">examples.crypto.strategy</references>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a5a933388f6d0303f80251156e30e6b9b" compoundref="crypto_8py" startline="145" endline="166">examples.crypto.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a92e26f20d8494227c6ef3ff4cf6cae71" compoundref="crypto_8py" startline="181" endline="196">examples.crypto.fitness.get_trades</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a7c596426791d1e3f74d126fdb08ec38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.optimize</definition>
        <argsstring>(tickers, start, end)</argsstring>
        <name>optimize</name>
        <qualifiedname>examples.crypto.optimize</qualifiedname>
        <param>
          <type>tickers</type>
          <defname>tickers</defname>
        </param>
        <param>
          <type>start</type>
          <defname>start</defname>
        </param>
        <param>
          <type>end</type>
          <defname>end</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="241" column="1" bodyfile="examples/crypto.py" bodystart="241" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a8de0d53fbf350d4ad637d00dfa9e3318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.optimize_mo</definition>
        <argsstring>(tickers, start, end, nsga_update=True)</argsstring>
        <name>optimize_mo</name>
        <qualifiedname>examples.crypto.optimize_mo</qualifiedname>
        <param>
          <type>tickers</type>
          <defname>tickers</defname>
        </param>
        <param>
          <type>start</type>
          <defname>start</defname>
        </param>
        <param>
          <type>end</type>
          <defname>end</defname>
        </param>
        <param>
          <type>nsga_update</type>
          <defname>nsga_update</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="248" column="1" bodyfile="examples/crypto.py" bodystart="248" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a832e3832c38bb9d153a7af1b37d2e24a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.bar</definition>
        <argsstring>(tickers, start, end)</argsstring>
        <name>bar</name>
        <qualifiedname>examples.crypto.bar</qualifiedname>
        <param>
          <type>tickers</type>
          <defname>tickers</defname>
        </param>
        <param>
          <type>start</type>
          <defname>start</defname>
        </param>
        <param>
          <type>end</type>
          <defname>end</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="269" column="1" bodyfile="examples/crypto.py" bodystart="269" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1crypto_1a89ff39f1a827fa14663f90898e5f3fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.crypto.optimize_nd</definition>
        <argsstring>(tickers, start, end)</argsstring>
        <name>optimize_nd</name>
        <qualifiedname>examples.crypto.optimize_nd</qualifiedname>
        <param>
          <type>tickers</type>
          <defname>tickers</defname>
        </param>
        <param>
          <type>start</type>
          <defname>start</defname>
        </param>
        <param>
          <type>end</type>
          <defname>end</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/crypto.py" line="304" column="1" bodyfile="examples/crypto.py" bodystart="304" bodyend="326"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1crypto" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/CryptoTrading.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Install<sp/>dependencies:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pip<sp/>install<sp/>yfinance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pip<sp/>install<sp/>finplot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>yfinance<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>yf</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>finplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>fplt</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math,<sp/>time</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pathlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Path</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry,<sp/>modecpp</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bite_cpp,<sp/>De_cpp,<sp/>dtime</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>njit</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba.typed<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>List</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="33" refid="namespaceexamples_1_1crypto_1a6973099c614186a0aaab015ae17aed7f" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespaceexamples_1_1crypto_1accaf5b53eed6cbec1e49d2a7292a15b1" refkind="member"><highlight class="normal">START_CASH<sp/>=<sp/>1000000.0</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">#<sp/>download<sp/>price<sp/>history<sp/>of<sp/>a<sp/>ticker<sp/>and<sp/>cache<sp/>result<sp/>into<sp/>a<sp/>csv<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespaceexamples_1_1crypto_1a2c916307beb743d28425fcd5c7568f01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a2c916307beb743d28425fcd5c7568f01" kindref="member">get_history</ref>(ticker,<sp/>start,<sp/>end):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>Path(</highlight><highlight class="stringliteral">&apos;ticker_cache&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>p.mkdir(exist_ok=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>fname<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;history_{ticker}_{start}_{end}.xz&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>files<sp/>=<sp/>p.glob(fname)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>file<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files:<sp/></highlight><highlight class="comment">#<sp/>if<sp/>cached<sp/>just<sp/>load<sp/>the<sp/>csv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>pd.read_csv(file,<sp/>compression=</highlight><highlight class="stringliteral">&apos;xz&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">]<sp/>=<sp/>pd.to_datetime(df[</highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>df.set_index(</highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>restore<sp/>date<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/>yf.download(ticker,<sp/>start=start,<sp/>end=end,<sp/>auto_adjust<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>df.to_csv(</highlight><highlight class="stringliteral">&apos;ticker_cache/&apos;</highlight><highlight class="normal"><sp/>+<sp/>fname,<sp/>compression=</highlight><highlight class="stringliteral">&apos;xz&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">#<sp/>save<sp/>history</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">#<sp/>compute<sp/>the<sp/>exponential<sp/>mean<sp/>average<sp/>of<sp/>a<sp/>time<sp/>series<sp/>of<sp/>prices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespaceexamples_1_1crypto_1a38e3ca807ed30d1fa4d4a5cc478e1525" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a38e3ca807ed30d1fa4d4a5cc478e1525" kindref="member">get_ema</ref>(prices,<sp/>period):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prices.ewm(span=period,min_periods=period,adjust=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,ignore_na=</highlight><highlight class="keyword">False</highlight><highlight class="normal">).mean().to_numpy()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">#<sp/>compute<sp/>the<sp/>simple<sp/>mean<sp/>average<sp/>of<sp/>a<sp/>time<sp/>series<sp/>of<sp/>prices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespaceexamples_1_1crypto_1a8fe56bb9960bb347eee6e2c39ddbd90f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a8fe56bb9960bb347eee6e2c39ddbd90f" kindref="member">get_sma</ref>(prices,<sp/>period):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prices.rolling(period).mean().to_numpy()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">#<sp/>use<sp/>numba<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>trading<sp/>simulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="namespaceexamples_1_1crypto_1a54eb39bc81fed172b7d1d74dcec022c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a54eb39bc81fed172b7d1d74dcec022c2" kindref="member">buy_all</ref>(cash,<sp/>num_coins,<sp/>price,<sp/>date,<sp/>logs):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>int(cash<sp/>/<sp/>price)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>date<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logs.append(date<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cash<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(int(cash))<sp/></highlight><highlight class="comment">#<sp/>no<sp/>string<sp/>formatting<sp/>in<sp/>numba<sp/>:-(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>buy<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(num)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>num_coins<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(num_coins)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>price<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(int(100*price))+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ct&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>see<sp/>https://github.com/numba/numba/issues/4758</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cash<sp/>-<sp/>num*price,<sp/>num_coins<sp/>+<sp/>num</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="namespaceexamples_1_1crypto_1a8e16e3bee50df8bd1b44e55fe8950e10" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a8e16e3bee50df8bd1b44e55fe8950e10" kindref="member">sell_all</ref>(cash,<sp/>num_coins,<sp/>price,<sp/>date,<sp/>logs):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>date<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logs.append(date<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cash<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(int(cash))<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sell<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(num_coins)<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>num_coins<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(num_coins)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>price<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(int(100*price))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ct&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cash<sp/>+<sp/>num_coins*price,<sp/>0</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">#<sp/>simulate<sp/>HODL<sp/>strategy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="namespaceexamples_1_1crypto_1a941dc0c737b40581bde98db6aef23525" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a941dc0c737b40581bde98db6aef23525" kindref="member">hodl</ref>(close,<sp/>start_cash):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>cash,<sp/>num_coins<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a54eb39bc81fed172b7d1d74dcec022c2" kindref="member">buy_all</ref>(start_cash,<sp/>0,<sp/>close[0],<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>buy<sp/>first<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>cash,<sp/>num_coins<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a8e16e3bee50df8bd1b44e55fe8950e10" kindref="member">sell_all</ref>(cash,<sp/>num_coins,<sp/>close[-1],<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>sell<sp/>last<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cash<sp/>/<sp/>start_cash<sp/></highlight><highlight class="comment">#<sp/>return<sp/>cash<sp/>gain<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">#<sp/>simulate<sp/>a<sp/>simple<sp/>crossing<sp/>EMA/SMA<sp/>trading<sp/>strategy,<sp/>return<sp/>the<sp/>resulting<sp/>cash<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="namespaceexamples_1_1crypto_1a61f6c93fa62a257ed271a0aa1210f604" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a61f6c93fa62a257ed271a0aa1210f604" kindref="member">strategy</ref>(close,<sp/>start_cash,<sp/>ema,<sp/>sma,<sp/>wait_buy,<sp/>wait_sell,<sp/>dates):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>cash<sp/>=<sp/>start_cash</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>num_coins<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>last_trade<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>logs<sp/>=<sp/>List();<sp/>logs.append(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>needs<sp/>to<sp/>be<sp/>String<sp/>typed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>num_trades<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>all<sp/>trading<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(close)):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_ema<sp/>=<sp/>ema[i];<sp/>c_sma<sp/>=<sp/>sma[i];<sp/>price<sp/>=<sp/>close[i]<sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>date<sp/>=<sp/>dates[i]<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>dates<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.isnan(c_ema)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>np.isnan(c_sma):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>buy<sp/>if<sp/>current<sp/>ema<sp/>&gt;<sp/>current<sp/>sma<sp/>and<sp/>&gt;<sp/>wait_buy<sp/>days<sp/>since<sp/>last<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num_coins<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>c_ema<sp/>&gt;<sp/>c_sma<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>i<sp/>&gt;<sp/>last_trade<sp/>+<sp/>wait_buy:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cash,<sp/>num_coins<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a54eb39bc81fed172b7d1d74dcec022c2" kindref="member">buy_all</ref>(cash,<sp/>num_coins,<sp/>price,<sp/>date,<sp/>logs)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_trade<sp/>=<sp/>i</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_trades<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sell<sp/>if<sp/>current<sp/>ema<sp/>&lt;<sp/>current<sp/>sma<sp/>and<sp/>&gt;<sp/>wait_sell<sp/>days<sp/>since<sp/>last<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>num_coins<sp/>&gt;<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>c_ema<sp/>&lt;<sp/>c_sma<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>i<sp/>&gt;<sp/>last_trade<sp/>+<sp/>wait_sell:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cash,<sp/>num_coins<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a8e16e3bee50df8bd1b44e55fe8950e10" kindref="member">sell_all</ref>(cash,<sp/>num_coins,<sp/>price,<sp/>date,<sp/>logs)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_trade<sp/>=<sp/>i</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_trades<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>cash,<sp/>num_coins<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a8e16e3bee50df8bd1b44e55fe8950e10" kindref="member">sell_all</ref>(cash,<sp/>num_coins,<sp/>price,<sp/>date,<sp/>logs)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>cash<sp/>gain<sp/>factor<sp/>compared<sp/>with<sp/>HODL<sp/>strategy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cash<sp/>/<sp/>start_cash<sp/>/<sp/><ref refid="namespaceexamples_1_1crypto_1a941dc0c737b40581bde98db6aef23525" kindref="member">hodl</ref>(close,<sp/>start_cash),<sp/>num_trades,<sp/>logs</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="namespaceexamples_1_1crypto_1a75d529296c6d83294ad1c37e55bd267f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a75d529296c6d83294ad1c37e55bd267f" kindref="member">simulate</ref>(prices,<sp/>ema_period,<sp/>sma_period,<sp/>wait_buy,<sp/>wait_sell,<sp/>dates=None):</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>close<sp/>=<sp/>prices.to_numpy()</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ema<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a38e3ca807ed30d1fa4d4a5cc478e1525" kindref="member">get_ema</ref>(prices,<sp/>ema_period)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>sma<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a8fe56bb9960bb347eee6e2c39ddbd90f" kindref="member">get_sma</ref>(prices,<sp/>sma_period)<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1crypto_1a61f6c93fa62a257ed271a0aa1210f604" kindref="member">strategy</ref>(close,<sp/>START_CASH,<sp/>ema,<sp/>sma,<sp/>wait_buy,<sp/>wait_sell,<sp/>dates)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classexamples_1_1crypto_1_1fitness" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1crypto_1_1fitness" kindref="compound">fitness</ref>(object):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classexamples_1_1crypto_1_1fitness_1ad9958db7a70ef673f3bcb9d5f5e5708b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1crypto_1_1fitness_1ad9958db7a70ef673f3bcb9d5f5e5708b" kindref="member">__init__</ref>(self,<sp/>tickers,<sp/>start,<sp/>end,<sp/>max_trades<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="127" refid="classexamples_1_1crypto_1_1fitness_1ae49c94306fd553fcf1163473d6db192d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1ae49c94306fd553fcf1163473d6db192d" kindref="member">evals</ref><sp/>=<sp/>mp.RawValue(ct.c_int,<sp/>0)<sp/></highlight></codeline>
<codeline lineno="128" refid="classexamples_1_1crypto_1_1fitness_1add3f7fd867bb662eb828f9ce44f7a9db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1add3f7fd867bb662eb828f9ce44f7a9db" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight></codeline>
<codeline lineno="129" refid="classexamples_1_1crypto_1_1fitness_1a2dc1e4fe20038b1eff24554fcc9a7b3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a2dc1e4fe20038b1eff24554fcc9a7b3b" kindref="member">t0</ref><sp/>=<sp/>time.perf_counter()</highlight></codeline>
<codeline lineno="130" refid="classexamples_1_1crypto_1_1fitness_1a9ffd824c461a915a2e1361a44428040e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a9ffd824c461a915a2e1361a44428040e" kindref="member">tickers</ref><sp/>=<sp/>tickers</highlight></codeline>
<codeline lineno="131" refid="classexamples_1_1crypto_1_1fitness_1a23a9ca5a0018097f299c6bbdb1463ec3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a23a9ca5a0018097f299c6bbdb1463ec3" kindref="member">max_trades</ref><sp/>=<sp/>max_trades</highlight></codeline>
<codeline lineno="132" refid="classexamples_1_1crypto_1_1fitness_1a996266cd94bc021d810079a4acaf9105" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a996266cd94bc021d810079a4acaf9105" kindref="member">histories</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="133" refid="classexamples_1_1crypto_1_1fitness_1abe072955ebed441ec3435097e2caf86b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1abe072955ebed441ec3435097e2caf86b" kindref="member">closes</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="134" refid="classexamples_1_1crypto_1_1fitness_1abe3f4d73b67a9b156c6188b9d644cec4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1abe3f4d73b67a9b156c6188b9d644cec4" kindref="member">dates</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="135" refid="classexamples_1_1crypto_1_1fitness_1a9c118b62e1b58bee262b99574abe0428" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a9c118b62e1b58bee262b99574abe0428" kindref="member">hodls</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ticker<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tickers:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a996266cd94bc021d810079a4acaf9105" kindref="member">histories</ref>[ticker]<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a2c916307beb743d28425fcd5c7568f01" kindref="member">get_history</ref>(ticker,<sp/>start=start,<sp/>end=end)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1abe072955ebed441ec3435097e2caf86b" kindref="member">closes</ref>[ticker]<sp/>=<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a996266cd94bc021d810079a4acaf9105" kindref="member">histories</ref>[ticker].Close</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1abe3f4d73b67a9b156c6188b9d644cec4" kindref="member">dates</ref>[ticker]<sp/>=<sp/>np.array([d.strftime(</highlight><highlight class="stringliteral">&apos;%Y.%m.%d&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a996266cd94bc021d810079a4acaf9105" kindref="member">histories</ref>[ticker].index])</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a9c118b62e1b58bee262b99574abe0428" kindref="member">hodls</ref>[ticker]<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a941dc0c737b40581bde98db6aef23525" kindref="member">hodl</ref>(self.<ref refid="classexamples_1_1crypto_1_1fitness_1abe072955ebed441ec3435097e2caf86b" kindref="member">closes</ref>[ticker].to_numpy(),<sp/>START_CASH)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hodls<sp/>=<sp/>list(self.<ref refid="classexamples_1_1crypto_1_1fitness_1a9c118b62e1b58bee262b99574abe0428" kindref="member">hodls</ref>.values())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;hodl<sp/>=<sp/>{0:.3f}<sp/>{1:s}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1crypto_1a6973099c614186a0aaab015ae17aed7f" kindref="member">format</ref>(np.prod(hodls)<sp/>**<sp/>(1.0/len(hodls)),<sp/>str([round(fi,1)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>fi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>hodls])))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145" refid="classexamples_1_1crypto_1_1fitness_1a5a933388f6d0303f80251156e30e6b9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1crypto_1_1fitness_1a5a933388f6d0303f80251156e30e6b9b" kindref="member">fun</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>simulate<sp/>the<sp/>EMS/SMA<sp/>strategy<sp/>for<sp/>all<sp/>tickers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factors<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_trades<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ticker<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a9ffd824c461a915a2e1361a44428040e" kindref="member">tickers</ref>:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>convert<sp/>the<sp/>optimization<sp/>variables<sp/>into<sp/>integers<sp/>and<sp/>use<sp/>them<sp/>to<sp/>configure<sp/>the<sp/>simulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f,<sp/>num,<sp/>_<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a75d529296c6d83294ad1c37e55bd267f" kindref="member">simulate</ref>(self.<ref refid="classexamples_1_1crypto_1_1fitness_1abe072955ebed441ec3435097e2caf86b" kindref="member">closes</ref>[ticker],<sp/>int(x[0]),<sp/>int(x[1]),<sp/>int(x[2]),<sp/>int(x[3]))</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factors.append(f)<sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_trades.append(num)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>np.prod(factors)<sp/>**<sp/>(1.0/len(factors))<sp/></highlight><highlight class="comment">#<sp/>normalize<sp/>the<sp/>accumulated<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-factor<sp/></highlight><highlight class="comment">#<sp/>our<sp/>optimization<sp/>algorithm<sp/>minimizes<sp/>the<sp/>resulting<sp/>value,<sp/>we<sp/>maximize<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>book<sp/>keeping<sp/>and<sp/>logging<sp/>for<sp/>parallel<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1ae49c94306fd553fcf1163473d6db192d" kindref="member">evals</ref>.value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1add3f7fd867bb662eb828f9ce44f7a9db" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1add3f7fd867bb662eb828f9ce44f7a9db" kindref="member">best_y</ref>.value<sp/>=<sp/>y<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;nsim<sp/>=<sp/>{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>fac<sp/>=<sp/>{2:.3f}<sp/>{3:s}<sp/>ntr<sp/>=<sp/>{4:s}<sp/>x<sp/>=<sp/>{5:s}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1crypto_1a6973099c614186a0aaab015ae17aed7f" kindref="member">format</ref>(self.<ref refid="classexamples_1_1crypto_1_1fitness_1ae49c94306fd553fcf1163473d6db192d" kindref="member">evals</ref>.value,<sp/>dtime(self.<ref refid="classexamples_1_1crypto_1_1fitness_1a2dc1e4fe20038b1eff24554fcc9a7b3b" kindref="member">t0</ref>),<sp/>-y,<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([round(fi,1)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>fi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>factors]),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(ntr)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ntr<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>num_trades]),<sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(xi)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>xi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x])))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y,<sp/>factors,<sp/>num_trades<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167" refid="classexamples_1_1crypto_1_1fitness_1ac24e8f7966063c3bc0cc215a561cbadb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1crypto_1_1fitness_1ac24e8f7966063c3bc0cc215a561cbadb" kindref="member">__call__</ref>(self,<sp/>x):<sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y,<sp/>_,<sp/>_<sp/>=<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a5a933388f6d0303f80251156e30e6b9b" kindref="member">fun</ref>(x)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171" refid="classexamples_1_1crypto_1_1fitness_1a1209aafc30c6a32427e2707c0bcadd22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1crypto_1_1fitness_1a1209aafc30c6a32427e2707c0bcadd22" kindref="member">mofun</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>factors,<sp/>num_trades<sp/>=<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a5a933388f6d0303f80251156e30e6b9b" kindref="member">fun</ref>(x)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>[-f<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>factors]<sp/></highlight><highlight class="comment">#<sp/>higher<sp/>factor<sp/>is<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraints<sp/>=<sp/>[ntr<sp/>-<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a23a9ca5a0018097f299c6bbdb1463ec3" kindref="member">max_trades</ref><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ntr<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>num_trades]<sp/></highlight><highlight class="comment">#<sp/>at<sp/>most<sp/>max_trades<sp/>trades</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array(ys<sp/>+<sp/>constraints)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177" refid="classexamples_1_1crypto_1_1fitness_1a3ba688bf0d5b34a2cc6268a2248dfaa0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1crypto_1_1fitness_1a3ba688bf0d5b34a2cc6268a2248dfaa0" kindref="member">ndfun</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y,<sp/>factors,<sp/>_<sp/>=<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a5a933388f6d0303f80251156e30e6b9b" kindref="member">fun</ref>(x)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5+y,<sp/>factors<sp/></highlight><highlight class="comment">#<sp/>we<sp/>need<sp/>positive<sp/>y<sp/>values<sp/>for<sp/>tracking<sp/>QD-Score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181" refid="classexamples_1_1crypto_1_1fitness_1a92e26f20d8494227c6ef3ff4cf6cae71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1crypto_1_1fitness_1a92e26f20d8494227c6ef3ff4cf6cae71" kindref="member">get_trades</ref>(self,<sp/>ticker,<sp/>x):</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>_,<sp/>log<sp/>=<sp/><ref refid="namespaceexamples_1_1crypto_1a75d529296c6d83294ad1c37e55bd267f" kindref="member">simulate</ref>(self.<ref refid="classexamples_1_1crypto_1_1fitness_1abe072955ebed441ec3435097e2caf86b" kindref="member">closes</ref>[ticker],<sp/>int(x[0]),<sp/>int(x[1]),<sp/>int(x[2]),<sp/>int(x[3]),<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1abe3f4d73b67a9b156c6188b9d644cec4" kindref="member">dates</ref>[ticker])</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trades<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,len(log)):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>log[i].split()</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trade<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;date&apos;</highlight><highlight class="normal">:<sp/>l[0],<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;cash&apos;</highlight><highlight class="normal">:<sp/>int(l[2]),<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/>l[3],</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;traded&apos;</highlight><highlight class="normal">:<sp/>int(l[4]),<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;num_coins&apos;</highlight><highlight class="normal">:<sp/>int(l[6]),<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;price&apos;</highlight><highlight class="normal">:<sp/>int(l[8])/1000}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trades.append(trade)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>+<sp/>ticker)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>log:<sp/>logger.info(l)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trades</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classexamples_1_1crypto_1_1fitness_1a052fc5adc7b09eb7f0613dc254699a5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1crypto_1_1fitness_1a052fc5adc7b09eb7f0613dc254699a5d" kindref="member">get_values</ref>(self,<sp/>ticker,<sp/>x):</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trades<sp/>=<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a92e26f20d8494227c6ef3ff4cf6cae71" kindref="member">get_trades</ref>(ticker,<sp/>x)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cash<sp/>=<sp/>START_CASH</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_coins<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closes<sp/>=<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1abe072955ebed441ec3435097e2caf86b" kindref="member">closes</ref>[ticker]</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dates<sp/>=<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1abe3f4d73b67a9b156c6188b9d644cec4" kindref="member">dates</ref>[ticker]</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>date,<sp/>price<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(dates,closes):</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trade<sp/>=<sp/>trades[i]</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdate<sp/>=<sp/>trade[</highlight><highlight class="stringliteral">&apos;date&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>date<sp/>==<sp/>tdate:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traded<sp/>=<sp/>trade[</highlight><highlight class="stringliteral">&apos;traded&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>trade[</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;buy&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_coins,<sp/>cash<sp/>=<sp/>num_coins<sp/>+<sp/>traded,<sp/>cash<sp/>-<sp/>traded*price</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_coins,<sp/>cash<sp/>=<sp/>num_coins<sp/>-<sp/>traded,<sp/>cash<sp/>+<sp/>traded*price<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(trade)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.append(cash<sp/>+<sp/>num_coins*price)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array(np.fromiter((v/START_CASH*closes[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values),<sp/>dtype=float))<sp/></highlight><highlight class="comment">#<sp/>adjust<sp/>to<sp/>initial<sp/>stock<sp/>price<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219" refid="classexamples_1_1crypto_1_1fitness_1af74be6f5f7cb7648d11cc9852fb1ea05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1crypto_1_1fitness_1af74be6f5f7cb7648d11cc9852fb1ea05" kindref="member">plot</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axs<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ema_period<sp/>=<sp/>int(x[0])</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sma_period<sp/>=<sp/>int(x[1])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ticker<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a9ffd824c461a915a2e1361a44428040e" kindref="member">tickers</ref>:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axs[ticker]<sp/>=<sp/>fplt.create_plot(ticker,<sp/>maximize=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history<sp/>=<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a996266cd94bc021d810079a4acaf9105" kindref="member">histories</ref>[ticker]</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candles<sp/>=<sp/>history[[</highlight><highlight class="stringliteral">&apos;Open&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Close&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;High&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Low&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fplt.candlestick_ochl(candles,<sp/>ax=axs[ticker])</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volumes<sp/>=<sp/>history[[</highlight><highlight class="stringliteral">&apos;Open&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Close&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Volume&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fplt.volume_ocv(volumes,<sp/>ax=axs[ticker].overlay())</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fplt.plot(history.Close.rolling(sma_period).mean(),<sp/>ax=axs[ticker])</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fplt.plot(history.Close.ewm(span=ema_period,min_periods=ema_period,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,ignore_na=</highlight><highlight class="keyword">False</highlight><highlight class="normal">).mean(),<sp/>ax=axs[ticker])</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>=<sp/>self.<ref refid="classexamples_1_1crypto_1_1fitness_1a052fc5adc7b09eb7f0613dc254699a5d" kindref="member">get_values</ref>(ticker,<sp/>x)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history[</highlight><highlight class="stringliteral">&apos;Value&apos;</highlight><highlight class="normal">]<sp/>=<sp/>values</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fplt.plot(values,<sp/>ax=axs[ticker])</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closes<sp/>=<sp/>history.Close.to_numpy()</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fplt.plot(closes,<sp/>ax=axs[ticker])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>history.to_csv(ticker<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.csv&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fplt.show()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241" refid="namespaceexamples_1_1crypto_1a7c596426791d1e3f74d126fdb08ec38f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a7c596426791d1e3f74d126fdb08ec38f" kindref="member">optimize</ref>(tickers,<sp/>start,<sp/>end):</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds([20,50,10,10],<sp/>[50,100,200,200])</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="classexamples_1_1crypto_1_1fitness" kindref="compound">fitness</ref>(tickers,<sp/>start,<sp/>end)<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>retry.minimize(fit,<sp/>bounds,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_retries=32,<sp/>optimizer=<ref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" kindref="compound">Bite_cpp</ref>(2000))</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.plot(ret.x)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248" refid="namespaceexamples_1_1crypto_1a8de0d53fbf350d4ad637d00dfa9e3318" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a8de0d53fbf350d4ad637d00dfa9e3318" kindref="member">optimize_mo</ref>(tickers,<sp/>start,<sp/>end,<sp/>nsga_update<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>nobj<sp/>=<sp/>len(tickers)<sp/></highlight><highlight class="comment">#<sp/>number<sp/>of<sp/>objectives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>ncon<sp/>=<sp/>nobj<sp/></highlight><highlight class="comment">#<sp/>number<sp/>of<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>max_trades<sp/>=<sp/>8</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="classexamples_1_1crypto_1_1fitness" kindref="compound">fitness</ref>(tickers,<sp/>start,<sp/>end,<sp/>max_trades)<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds([20,50,10,10],<sp/>[50,100,200,200])</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>xs,<sp/>front<sp/>=<sp/>modecpp.retry(fit.mofun,<sp/>len(tickers),<sp/>ncon,<sp/>bounds,<sp/>num_retries=24,<sp/>popsize<sp/>=<sp/>48,<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>16000,<sp/>nsga_update<sp/>=<sp/>nsga_update,<sp/>workers=24)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y,<sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(front,<sp/>xs):</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;fac<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str([-round(yi,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>yi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>y[:nobj]])<sp/>+<sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>trades<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str([int(max_trades+ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>y[nobj:]])<sp/>+<sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>x<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str([int(xi)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>xi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x]))</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>diversifier,<sp/>mapelites</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264" refid="namespaceexamples_1_1crypto_1a284d5c864a794e437544590cb282efac" refkind="member"><highlight class="normal">bounds<sp/>=<sp/>Bounds([20,50,10,10],<sp/>[50,100,200,200])</highlight></codeline>
<codeline lineno="265" refid="namespaceexamples_1_1crypto_1a9fefe2b65764ffc2422e189b7674e66b" refkind="member"><highlight class="normal">ddim<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="266" refid="namespaceexamples_1_1crypto_1a7b9a03eae92503954a62eb5a0510c852" refkind="member"><highlight class="normal">qd_bounds<sp/>=<sp/>Bounds([0]*ddim,<sp/>[4]*ddim)</highlight></codeline>
<codeline lineno="267" refid="namespaceexamples_1_1crypto_1a5eede08c19254c6895849bb97c9257a7" refkind="member"><highlight class="normal">niche_num<sp/>=<sp/>1000</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="namespaceexamples_1_1crypto_1a832e3832c38bb9d153a7af1b37d2e24a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a832e3832c38bb9d153a7af1b37d2e24a" kindref="member">bar</ref>(tickers,<sp/>start,<sp/>end):</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>mapelites.load_archive(</highlight><highlight class="stringliteral">&quot;crypto_min_cma&quot;</highlight><highlight class="normal">,<sp/>bounds,<sp/>qd_bounds,<sp/>niche_num)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>ys,<sp/>ds,<sp/>xs<sp/>=<sp/>archive.get_occupied_data()</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>5-ys</highlight><highlight class="comment">#<sp/>convert<sp/>back<sp/>to<sp/>real<sp/>ROI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len(xs)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>201</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>ws<sp/>=<sp/>np.zeros((4,<sp/>m))</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(4):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>int(xs[i][j])</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws[j][k]<sp/>+=<sp/>ys[i]</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>max<sp/>=<sp/>np.amax(ws,<sp/>axis=1)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>fig,<sp/>ax<sp/>=<sp/>plt.subplots()</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/>=<sp/>0.9</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>np.logical_or(ws[0]<sp/>&gt;<sp/>max[0]*0.1,<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.logical_or(ws[1]<sp/>&gt;<sp/>max[1]*0.05,<sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.logical_or(ws[2]<sp/>&gt;<sp/>max[2]*0.7,<sp/>ws[3]<sp/>&gt;<sp/>max[3]*0.7)))</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>indices<sp/>=<sp/>np.array([i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(m)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ok[i]])<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>labels<sp/>=<sp/>[str(i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>indices]<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.arange(len(labels))<sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>label<sp/>locations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(4):</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rects<sp/>=<sp/>ax.bar(x<sp/>+<sp/>(j-1.5)*width/4,<sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws[j][indices],<sp/>width/4,<sp/>label=</highlight><highlight class="stringliteral">&apos;parameter<sp/>&apos;</highlight><highlight class="normal">+<sp/>str(j))</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.bar_label(rects,<sp/>padding=3,<sp/>fmt=</highlight><highlight class="stringliteral">&apos;%d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_xticks(x,<sp/>labels)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_xlabel(</highlight><highlight class="stringliteral">&apos;Parameter<sp/>Setting&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_ylabel(</highlight><highlight class="stringliteral">&apos;Sum<sp/>of<sp/>ROI&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_yscale(</highlight><highlight class="stringliteral">&apos;log&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.set_title(</highlight><highlight class="stringliteral">&apos;Parameter<sp/>Setting<sp/>/<sp/>ROI&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>ax.legend()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.tight_layout()</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304" refid="namespaceexamples_1_1crypto_1a89ff39f1a827fa14663f90898e5f3fef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1crypto_1a89ff39f1a827fa14663f90898e5f3fef" kindref="member">optimize_nd</ref>(tickers,<sp/>start,<sp/>end):<sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="classexamples_1_1crypto_1_1fitness" kindref="compound">fitness</ref>(tickers,<sp/>start,<sp/>end,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;elites&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:1000}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;CMA_CPP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;max_evals&apos;</highlight><highlight class="normal">:10000,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:16,<sp/></highlight><highlight class="stringliteral">&apos;stall_criterion&apos;</highlight><highlight class="normal">:3}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>diversifier.minimize(</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1mapelites_1_1wrapper" kindref="compound">mapelites.wrapper</ref>(fit.ndfun,<sp/>ddim,<sp/>interval=10000,<sp/>save_interval=100000000),<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds,<sp/>qd_bounds,<sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt_params=[opt_params0,<sp/>opt_params1],<sp/>max_evals=500000,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>niche_num<sp/>=<sp/>niche_num,<sp/>samples_per_niche<sp/>=<sp/>20)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;final<sp/>archive:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>archive.info())</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>archive.save(</highlight><highlight class="stringliteral">&quot;crypto_min_cma&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>ysi<sp/>=<sp/>archive.argsort()</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>archive.get_ys()[ysi]</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ds<sp/>=<sp/>archive.get_ds()[ysi]</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>archive.get_xs()[ysi]</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>occupied<sp/>=<sp/>(ys<sp/>&lt;<sp/>np.inf)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>(y,<sp/>d,<sp/>x)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(zip(ys[occupied],<sp/>ds[occupied],<sp/>xs[occupied])):</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(str(i+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>y<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(round(5-y,2))<sp/>+<sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>fac<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str([round(di,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>di<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>d])<sp/>+<sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>x<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>str([int(xi)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>xi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x]))</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ticker<sp/>names:<sp/>https://finance.yahoo.com/lookup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="namespaceexamples_1_1crypto_1a11fa498d14aab048b8ba856c68562161" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>tickers<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;BTC-USD&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;ETH-USD&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;XRP-USD&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;ADA-USD&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#tickers<sp/>=<sp/>[&apos;BTC-USD&apos;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333" refid="namespaceexamples_1_1crypto_1a69a1d45fff78e42c6f6b970bdab95bd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>start=</highlight><highlight class="stringliteral">&quot;2019-01-01&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="namespaceexamples_1_1crypto_1a8a8f7983f4ea099719a5b299d1b22ef6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>end=</highlight><highlight class="stringliteral">&quot;2030-04-30&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1crypto_1a7c596426791d1e3f74d126fdb08ec38f" kindref="member">optimize</ref>(tickers,<sp/>start,<sp/>end)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#optimize_mo(tickers,<sp/>start,<sp/>end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#optimize_nd(tickers,<sp/>start,<sp/>end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#bar(tickers,<sp/>start,<sp/>end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fit<sp/>=<sp/>fitness(tickers,<sp/>start,<sp/>end)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fit.plot([20,60,10,10])</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/crypto.py"/>
  </compounddef>
</doxygen>

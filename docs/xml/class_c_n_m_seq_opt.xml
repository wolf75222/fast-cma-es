<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_c_n_m_seq_opt" kind="class" language="C++" prot="public">
    <compoundname>CNMSeqOpt</compoundname>
    <basecompoundref refid="class_c_bite_opt_base" prot="public" virt="non-virtual">CBiteOptBase&lt; double &gt;</basecompoundref>
    <derivedcompoundref refid="class_c_bite_opt_1_1_c_par_opt" prot="public" virt="non-virtual">CBiteOpt::CParOpt&lt; CNMSeqOpt &gt;</derivedcompoundref>
    <includes refid="nmsopt_8h" local="no">nmsopt.h</includes>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7" prot="private" static="no" strong="no">
        <type></type>
        <name>EState</name>
        <qualifiedname>CNMSeqOpt::EState</qualifiedname>
        <enumvalue id="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7a2882bfaa75c67e68fad7e1b31b752a6e" prot="private">
          <name>stReflection</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7a598ff65bb5323e300f4ba87a2155aac4" prot="private">
          <name>stExpansion</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7aa9847544ca4f0a439c38dff1d0f6db0a" prot="private">
          <name>stContraction</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7aeb70e74fc5104ae8c19bad1a162741c7" prot="private">
          <name>stReduction</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Algorithm&apos;s state automata states. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="347" column="1" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="348" bodyend="353"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1a61e71ca1c5282bcfab71d638613f8ff2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CNMSeqOpt::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <qualifiedname>CNMSeqOpt::N</qualifiedname>
        <briefdescription>
<para>The total number of internal parameter values in use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="325" column="5" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="325" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1abe5f0b09856d48eb312d0c3a8701fdcc" compoundref="nmsopt_8h" startline="409" endline="451">calccent</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a67aa8414c254cfb6a9b442450850987d" compoundref="nmsopt_8h" startline="461" endline="482">copy</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a1ef451e7a70db607e096c343dac37bb1" compoundref="nmsopt_8h" startline="496" endline="521">eval</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1aff1efaf9224552ae9a607a60f4ca17fc" compoundref="nmsopt_8h" startline="98" endline="153">init</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" compoundref="nmsopt_8h" startline="357" endline="368">initBuffers</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a0db683f79e6af131ffd6e59238a6df51" compoundref="nmsopt_8h" startline="69" endline="85">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1a7eae04524ddb0580b4657ab2d74f8837" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CNMSeqOpt::M</definition>
        <argsstring></argsstring>
        <name>M</name>
        <qualifiedname>CNMSeqOpt::M</qualifiedname>
        <briefdescription>
<para>The number of points in a simplex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="326" column="5" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="326" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1abe5f0b09856d48eb312d0c3a8701fdcc" compoundref="nmsopt_8h" startline="409" endline="451">calccent</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a2b301caae34520d6495dabb8fcfd5c63" compoundref="nmsopt_8h" startline="382" endline="402">findhi</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1aff1efaf9224552ae9a607a60f4ca17fc" compoundref="nmsopt_8h" startline="98" endline="153">init</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" compoundref="nmsopt_8h" startline="357" endline="368">initBuffers</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a0db683f79e6af131ffd6e59238a6df51" compoundref="nmsopt_8h" startline="69" endline="85">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1ac7358629418dff64bb5febd828f64f0e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CNMSeqOpt::M1</definition>
        <argsstring></argsstring>
        <name>M1</name>
        <qualifiedname>CNMSeqOpt::M1</qualifiedname>
        <briefdescription>
<para>= M - 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="327" column="5" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="327" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a0db683f79e6af131ffd6e59238a6df51" compoundref="nmsopt_8h" startline="69" endline="85">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1aff51e4e10e5089f3b8a1f8286f83010e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double CNMSeqOpt::M1i</definition>
        <argsstring></argsstring>
        <name>M1i</name>
        <qualifiedname>CNMSeqOpt::M1i</qualifiedname>
        <briefdescription>
<para>= 1.0 / ( M - 1 ). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="328" column="8" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="328" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1abe5f0b09856d48eb312d0c3a8701fdcc" compoundref="nmsopt_8h" startline="409" endline="451">calccent</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a67aa8414c254cfb6a9b442450850987d" compoundref="nmsopt_8h" startline="461" endline="482">copy</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a0db683f79e6af131ffd6e59238a6df51" compoundref="nmsopt_8h" startline="69" endline="85">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1a553e8ff44398fb272de572df3055c8a0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CNMSeqOpt::xlo</definition>
        <argsstring></argsstring>
        <name>xlo</name>
        <qualifiedname>CNMSeqOpt::xlo</qualifiedname>
        <briefdescription>
<para>Current lowest-cost parameter vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="329" column="5" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="329" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1aff1efaf9224552ae9a607a60f4ca17fc" compoundref="nmsopt_8h" startline="98" endline="153">init</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1a371cf09612300720f18981ae1e3aec9a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CNMSeqOpt::xhi</definition>
        <argsstring></argsstring>
        <name>xhi</name>
        <qualifiedname>CNMSeqOpt::xhi</qualifiedname>
        <briefdescription>
<para>Current highest-cost parameter vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="330" column="5" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="330" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1abe5f0b09856d48eb312d0c3a8701fdcc" compoundref="nmsopt_8h" startline="409" endline="451">calccent</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a67aa8414c254cfb6a9b442450850987d" compoundref="nmsopt_8h" startline="461" endline="482">copy</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a2b301caae34520d6495dabb8fcfd5c63" compoundref="nmsopt_8h" startline="382" endline="402">findhi</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1aa38748f581346e620b42202427ae7fd3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CNMSeqOpt::xhi2</definition>
        <argsstring></argsstring>
        <name>xhi2</name>
        <qualifiedname>CNMSeqOpt::xhi2</qualifiedname>
        <briefdescription>
<para>Current second-highest-cost parameter vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="331" column="5" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="331" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1a2b301caae34520d6495dabb8fcfd5c63" compoundref="nmsopt_8h" startline="382" endline="402">findhi</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1a356c7d926e3bc14c441622a19ab12df1" prot="private" static="no" mutable="no">
        <type>double **</type>
        <definition>double** CNMSeqOpt::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>CNMSeqOpt::x</qualifiedname>
        <briefdescription>
<para>Parameter vectors for all points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="332" column="8" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="332" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1abe5f0b09856d48eb312d0c3a8701fdcc" compoundref="nmsopt_8h" startline="409" endline="451">calccent</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a67aa8414c254cfb6a9b442450850987d" compoundref="nmsopt_8h" startline="461" endline="482">copy</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1aff1efaf9224552ae9a607a60f4ca17fc" compoundref="nmsopt_8h" startline="98" endline="153">init</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" compoundref="nmsopt_8h" startline="357" endline="368">initBuffers</referencedby>
        <referencedby refid="classexamples_1_1filter_1_1filter_1a903971b343ce5a832f74e1e25c1de308" compoundref="filter_8py" startline="56" endline="61">examples.filter.filter.learn</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1a49d787843631379aad7a4e096b4368e3" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CNMSeqOpt::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>CNMSeqOpt::y</qualifiedname>
        <briefdescription>
<para>Parameter vector costs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="333" column="8" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="333" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1a71ef10bfb9e6d7c852bb3e96156d3ed8" compoundref="nmsopt_8h" startline="49" endline="53">CNMSeqOpt</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a67aa8414c254cfb6a9b442450850987d" compoundref="nmsopt_8h" startline="461" endline="482">copy</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a76ae39736ff317e9aa048d24872e7084" compoundref="nmsopt_8h" startline="370" endline="376">deleteBuffers</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a2b301caae34520d6495dabb8fcfd5c63" compoundref="nmsopt_8h" startline="382" endline="402">findhi</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" compoundref="nmsopt_8h" startline="357" endline="368">initBuffers</referencedby>
        <referencedby refid="classexamples_1_1filter_1_1filter_1a903971b343ce5a832f74e1e25c1de308" compoundref="filter_8py" startline="56" endline="61">examples.filter.filter.learn</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a91ae0f70b98a4b34c31f86f483d23a31" compoundref="nmsopt_8h" startline="55" endline="59">~CNMSeqOpt</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1a752068f193d7b65015a3b3b1d34a2c84" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CNMSeqOpt::x0</definition>
        <argsstring></argsstring>
        <name>x0</name>
        <qualifiedname>CNMSeqOpt::x0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="334" column="8" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="334" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1abe5f0b09856d48eb312d0c3a8701fdcc" compoundref="nmsopt_8h" startline="409" endline="451">calccent</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a67aa8414c254cfb6a9b442450850987d" compoundref="nmsopt_8h" startline="461" endline="482">copy</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" compoundref="nmsopt_8h" startline="357" endline="368">initBuffers</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1ad1d9690201835708ecbf9e639e7a1a84" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CNMSeqOpt::x1</definition>
        <argsstring></argsstring>
        <name>x1</name>
        <qualifiedname>CNMSeqOpt::x1</qualifiedname>
        <briefdescription>
<para>Temporary parameter vector 1. Passed to stExpansion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="335" column="8" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="335" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" compoundref="nmsopt_8h" startline="357" endline="368">initBuffers</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1ac43a76bb5f3f4a5f059f17ad8e54d646" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double CNMSeqOpt::y1</definition>
        <argsstring></argsstring>
        <name>y1</name>
        <qualifiedname>CNMSeqOpt::y1</qualifiedname>
        <briefdescription>
<para>stExpansion. </para>
        </briefdescription>
        <detaileddescription>
<para>Cost of temporary parameter vector 1. Passed to </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="336" column="8" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="336" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1a22d3e10bba1fbfa50a458527d285d04b" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CNMSeqOpt::x2</definition>
        <argsstring></argsstring>
        <name>x2</name>
        <qualifiedname>CNMSeqOpt::x2</qualifiedname>
        <briefdescription>
<para>Temporary parameter vector 2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="338" column="8" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="338" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1a71ef10bfb9e6d7c852bb3e96156d3ed8" compoundref="nmsopt_8h" startline="49" endline="53">CNMSeqOpt</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a76ae39736ff317e9aa048d24872e7084" compoundref="nmsopt_8h" startline="370" endline="376">deleteBuffers</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" compoundref="nmsopt_8h" startline="357" endline="368">initBuffers</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a91ae0f70b98a4b34c31f86f483d23a31" compoundref="nmsopt_8h" startline="55" endline="59">~CNMSeqOpt</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1abc45d41e6ba582da381eb4c9999442ad" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CNMSeqOpt::rx</definition>
        <argsstring></argsstring>
        <name>rx</name>
        <qualifiedname>CNMSeqOpt::rx</qualifiedname>
        <briefdescription>
<para>Lowest-cost parameter vector used during reduction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="339" column="8" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="339" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1a71dd7363e56585f44ccf346c31bf031c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CNMSeqOpt::rj</definition>
        <argsstring></argsstring>
        <name>rj</name>
        <qualifiedname>CNMSeqOpt::rj</qualifiedname>
        <briefdescription>
<para>Current vector index during reduction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="340" column="5" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="340" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1af1e9f2a0229d5f931333d2285894434d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CNMSeqOpt::DoInitEvals</definition>
        <argsstring></argsstring>
        <name>DoInitEvals</name>
        <qualifiedname>CNMSeqOpt::DoInitEvals</qualifiedname>
        <briefdescription>
<para>&quot;True&quot; if initial evaluations should be performed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="341" column="6" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="341" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1aff1efaf9224552ae9a607a60f4ca17fc" compoundref="nmsopt_8h" startline="98" endline="153">init</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_n_m_seq_opt_1af55bab09410e2932dc2983c3646fba93" prot="private" static="no" mutable="no">
        <type><ref refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7" kindref="member">EState</ref></type>
        <definition>EState CNMSeqOpt::State</definition>
        <argsstring></argsstring>
        <name>State</name>
        <qualifiedname>CNMSeqOpt::State</qualifiedname>
        <briefdescription>
<para>Current optimization state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="355" column="8" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="355" bodyend="-1"/>
        <referencedby refid="class_c_n_m_seq_opt_1aff1efaf9224552ae9a607a60f4ca17fc" compoundref="nmsopt_8h" startline="98" endline="153">init</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_n_m_seq_opt_1a71ef10bfb9e6d7c852bb3e96156d3ed8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CNMSeqOpt::CNMSeqOpt</definition>
        <argsstring>()</argsstring>
        <name>CNMSeqOpt</name>
        <qualifiedname>CNMSeqOpt::CNMSeqOpt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="49" column="1" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="49" bodyend="53"/>
        <references refid="class_c_n_m_seq_opt_1a22d3e10bba1fbfa50a458527d285d04b" compoundref="nmsopt_8h" startline="338">x2</references>
        <references refid="class_c_n_m_seq_opt_1a49d787843631379aad7a4e096b4368e3" compoundref="nmsopt_8h" startline="333">y</references>
      </memberdef>
      <memberdef kind="function" id="class_c_n_m_seq_opt_1a91ae0f70b98a4b34c31f86f483d23a31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CNMSeqOpt::~CNMSeqOpt</definition>
        <argsstring>()</argsstring>
        <name>~CNMSeqOpt</name>
        <qualifiedname>CNMSeqOpt::~CNMSeqOpt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="55" column="9" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="55" bodyend="59"/>
        <references refid="class_c_n_m_seq_opt_1a22d3e10bba1fbfa50a458527d285d04b" compoundref="nmsopt_8h" startline="338">x2</references>
        <references refid="class_c_n_m_seq_opt_1a49d787843631379aad7a4e096b4368e3" compoundref="nmsopt_8h" startline="333">y</references>
      </memberdef>
      <memberdef kind="function" id="class_c_n_m_seq_opt_1a0db683f79e6af131ffd6e59238a6df51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CNMSeqOpt::updateDims</definition>
        <argsstring>(const int aParamCount, const int PopSize0=0)</argsstring>
        <name>updateDims</name>
        <qualifiedname>CNMSeqOpt::updateDims</qualifiedname>
        <param>
          <type>const int</type>
          <declname>aParamCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>PopSize0</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates dimensionality of *this object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of parameters being optimized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PopSize0</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements in population to use. If set to 0 or negative, the default formula will be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="69" column="6" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="69" bodyend="85"/>
        <references refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" compoundref="nmsopt_8h" startline="357" endline="368">initBuffers</references>
        <references refid="class_c_n_m_seq_opt_1a7eae04524ddb0580b4657ab2d74f8837" compoundref="nmsopt_8h" startline="326">M</references>
        <references refid="class_c_n_m_seq_opt_1ac7358629418dff64bb5febd828f64f0e" compoundref="nmsopt_8h" startline="327">M1</references>
        <references refid="class_c_n_m_seq_opt_1aff51e4e10e5089f3b8a1f8286f83010e" compoundref="nmsopt_8h" startline="328">M1i</references>
        <references refid="class_c_n_m_seq_opt_1a61e71ca1c5282bcfab71d638613f8ff2" compoundref="nmsopt_8h" startline="325">N</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" compoundref="biteaux_8h" startline="1172">CBitePop&lt; double &gt;::PopSize</references>
      </memberdef>
      <memberdef kind="function" id="class_c_n_m_seq_opt_1aff1efaf9224552ae9a607a60f4ca17fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CNMSeqOpt::init</definition>
        <argsstring>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</argsstring>
        <name>init</name>
        <qualifiedname>CNMSeqOpt::init</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const double *const</type>
          <declname>InitParams</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>InitRadius</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes *this optimizer. Performs N=PopSize objective function evaluations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitParams</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, initial parameter vector, also used as centroid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial radius, relative to the default value. Set to negative to use uniformly-random sampling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="98" column="6" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="98" bodyend="153"/>
        <references refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" compoundref="biteaux_8h" startline="1229" endline="1232">CBitePop&lt; double &gt;::copyParams</references>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; double &gt;::DiffValues</references>
        <references refid="class_c_n_m_seq_opt_1af1e9f2a0229d5f931333d2285894434d" compoundref="nmsopt_8h" startline="341">DoInitEvals</references>
        <references refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">CBiteRnd::get</references>
        <references refid="class_c_bite_rnd_1a3f6c22ff1f6f19de24f7c837530f31c4" compoundref="biteaux_8h" startline="282" endline="310">CBiteRnd::getGaussian</references>
        <references refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; double &gt;::initCommonVars</references>
        <references refid="class_c_n_m_seq_opt_1a7eae04524ddb0580b4657ab2d74f8837" compoundref="nmsopt_8h" startline="326">M</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; double &gt;::MinValues</references>
        <references refid="class_c_n_m_seq_opt_1a61e71ca1c5282bcfab71d638613f8ff2" compoundref="nmsopt_8h" startline="325">N</references>
        <references refid="class_c_n_m_seq_opt_1af55bab09410e2932dc2983c3646fba93" compoundref="nmsopt_8h" startline="355">State</references>
        <references refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7a2882bfaa75c67e68fad7e1b31b752a6e" compoundref="nmsopt_8h" startline="349">stReflection</references>
        <references refid="class_c_n_m_seq_opt_1a356c7d926e3bc14c441622a19ab12df1" compoundref="nmsopt_8h" startline="332">x</references>
        <references refid="class_c_n_m_seq_opt_1a553e8ff44398fb272de572df3055c8a0" compoundref="nmsopt_8h" startline="329">xlo</references>
      </memberdef>
      <memberdef kind="function" id="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CNMSeqOpt::optimize</definition>
        <argsstring>(CBiteRnd &amp;rnd, double *const OutCost=NULL, double *const OutValues=NULL)</argsstring>
        <name>optimize</name>
        <qualifiedname>CNMSeqOpt::optimize</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>OutCost</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>OutValues</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function performs the parameter optimization iteration that involves 1 objective function evaluation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">OutCost</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, pointer to variable that receives cost of the newly-evaluated solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">OutValues</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, pointer to array that receives newly-evaluated parameter vector, in real scale. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of non-improving iterations so far. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="167" column="5" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="167" bodyend="322"/>
        <references refid="class_c_n_m_seq_opt_1abe5f0b09856d48eb312d0c3a8701fdcc" compoundref="nmsopt_8h" startline="409" endline="451">calccent</references>
        <references refid="class_c_n_m_seq_opt_1a67aa8414c254cfb6a9b442450850987d" compoundref="nmsopt_8h" startline="461" endline="482">copy</references>
        <references refid="class_c_bite_pop_1aa7c87b9148768d6104f8d3dfb5abebce" compoundref="biteaux_8h" startline="1177">CBitePop&lt; double &gt;::CurPopPos</references>
        <references refid="class_c_n_m_seq_opt_1af1e9f2a0229d5f931333d2285894434d" compoundref="nmsopt_8h" startline="341">DoInitEvals</references>
        <references refid="class_c_n_m_seq_opt_1a1ef451e7a70db607e096c343dac37bb1" compoundref="nmsopt_8h" startline="496" endline="521">eval</references>
        <references refid="class_c_n_m_seq_opt_1a7eae04524ddb0580b4657ab2d74f8837" compoundref="nmsopt_8h" startline="326">M</references>
        <references refid="class_c_n_m_seq_opt_1ac7358629418dff64bb5febd828f64f0e" compoundref="nmsopt_8h" startline="327">M1</references>
        <references refid="class_c_n_m_seq_opt_1a61e71ca1c5282bcfab71d638613f8ff2" compoundref="nmsopt_8h" startline="325">N</references>
        <references refid="class_c_bite_pop_1a884c9ad4c0327aaa0110a23a89f5697a" compoundref="biteaux_8h" startline="1171">CBitePop&lt; double &gt;::ParamCountI</references>
        <references refid="class_c_n_m_seq_opt_1a71dd7363e56585f44ccf346c31bf031c" compoundref="nmsopt_8h" startline="340">rj</references>
        <references refid="class_c_n_m_seq_opt_1abc45d41e6ba582da381eb4c9999442ad" compoundref="nmsopt_8h" startline="339">rx</references>
        <references refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" compoundref="biteaux_8h" startline="1668">CBiteOptBase&lt; double &gt;::StallCount</references>
        <references refid="class_c_n_m_seq_opt_1af55bab09410e2932dc2983c3646fba93" compoundref="nmsopt_8h" startline="355">State</references>
        <references refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7aa9847544ca4f0a439c38dff1d0f6db0a" compoundref="nmsopt_8h" startline="351">stContraction</references>
        <references refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7a598ff65bb5323e300f4ba87a2155aac4" compoundref="nmsopt_8h" startline="350">stExpansion</references>
        <references refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7aeb70e74fc5104ae8c19bad1a162741c7" compoundref="nmsopt_8h" startline="352">stReduction</references>
        <references refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7a2882bfaa75c67e68fad7e1b31b752a6e" compoundref="nmsopt_8h" startline="349">stReflection</references>
        <references refid="class_c_n_m_seq_opt_1a356c7d926e3bc14c441622a19ab12df1" compoundref="nmsopt_8h" startline="332">x</references>
        <references refid="class_c_n_m_seq_opt_1a752068f193d7b65015a3b3b1d34a2c84" compoundref="nmsopt_8h" startline="334">x0</references>
        <references refid="class_c_n_m_seq_opt_1ad1d9690201835708ecbf9e639e7a1a84" compoundref="nmsopt_8h" startline="335">x1</references>
        <references refid="class_c_n_m_seq_opt_1a22d3e10bba1fbfa50a458527d285d04b" compoundref="nmsopt_8h" startline="338">x2</references>
        <references refid="class_c_n_m_seq_opt_1a371cf09612300720f18981ae1e3aec9a" compoundref="nmsopt_8h" startline="330">xhi</references>
        <references refid="class_c_n_m_seq_opt_1aa38748f581346e620b42202427ae7fd3" compoundref="nmsopt_8h" startline="331">xhi2</references>
        <references refid="class_c_n_m_seq_opt_1a553e8ff44398fb272de572df3055c8a0" compoundref="nmsopt_8h" startline="329">xlo</references>
        <references refid="class_c_n_m_seq_opt_1a49d787843631379aad7a4e096b4368e3" compoundref="nmsopt_8h" startline="333">y</references>
        <references refid="class_c_n_m_seq_opt_1ac43a76bb5f3f4a5f059f17ad8e54d646" compoundref="nmsopt_8h" startline="336">y1</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CNMSeqOpt::initBuffers</definition>
        <argsstring>(const int aParamCount, const int aPopSize, const int aCnsCount=0, const int aObjCount=1)</argsstring>
        <name>initBuffers</name>
        <qualifiedname>CNMSeqOpt::initBuffers</qualifiedname>
        <reimplements refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e">initBuffers</reimplements>
        <param>
          <type>const int</type>
          <declname>aParamCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>aPopSize</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>aCnsCount</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>aObjCount</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes all common buffers, and &quot;PopSize&quot; variables. This function should be called when population&apos;s dimensions were changed. This function calls the <ref refid="class_c_n_m_seq_opt_1a76ae39736ff317e9aa048d24872e7084" kindref="member">deleteBuffers()</ref> function to release any derived classes&apos; allocated buffers. Allocates an additional vector for temporary use, which is at the same the last vector in the PopParams array. Derived classes should call this function of the base class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New parameter count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPopSize</parametername>
</parameternamelist>
<parameterdescription>
<para>New population size. If &lt;= 0, population buffers will not be allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCnsCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New constraint value count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aObjCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New objective value count. If equals 0, a rank element will not be auto-added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="357" column="14" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="357" bodyend="368"/>
        <references refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" compoundref="biteaux_8h" startline="1193">CBitePop&lt; double &gt;::CentParams</references>
        <references refid="class_c_n_m_seq_opt_1a7eae04524ddb0580b4657ab2d74f8837" compoundref="nmsopt_8h" startline="326">M</references>
        <references refid="class_c_n_m_seq_opt_1a61e71ca1c5282bcfab71d638613f8ff2" compoundref="nmsopt_8h" startline="325">N</references>
        <references refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" compoundref="biteaux_8h" startline="1182">CBitePop&lt; double &gt;::PopParams</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; double &gt;::TmpParams</references>
        <references refid="class_c_n_m_seq_opt_1a356c7d926e3bc14c441622a19ab12df1" compoundref="nmsopt_8h" startline="332">x</references>
        <references refid="class_c_n_m_seq_opt_1a752068f193d7b65015a3b3b1d34a2c84" compoundref="nmsopt_8h" startline="334">x0</references>
        <references refid="class_c_n_m_seq_opt_1ad1d9690201835708ecbf9e639e7a1a84" compoundref="nmsopt_8h" startline="335">x1</references>
        <references refid="class_c_n_m_seq_opt_1a22d3e10bba1fbfa50a458527d285d04b" compoundref="nmsopt_8h" startline="338">x2</references>
        <references refid="class_c_n_m_seq_opt_1a49d787843631379aad7a4e096b4368e3" compoundref="nmsopt_8h" startline="333">y</references>
        <referencedby refid="class_c_n_m_seq_opt_1a0db683f79e6af131ffd6e59238a6df51" compoundref="nmsopt_8h" startline="69" endline="85">updateDims</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_n_m_seq_opt_1a76ae39736ff317e9aa048d24872e7084" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CNMSeqOpt::deleteBuffers</definition>
        <argsstring>()</argsstring>
        <name>deleteBuffers</name>
        <qualifiedname>CNMSeqOpt::deleteBuffers</qualifiedname>
        <reimplements refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369">deleteBuffers</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function deletes buffers previously allocated via the <ref refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" kindref="member">initBuffers()</ref> function. Derived classes should call this function of the base class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="370" column="14" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="370" bodyend="376"/>
        <references refid="class_c_n_m_seq_opt_1a22d3e10bba1fbfa50a458527d285d04b" compoundref="nmsopt_8h" startline="338">x2</references>
        <references refid="class_c_n_m_seq_opt_1a49d787843631379aad7a4e096b4368e3" compoundref="nmsopt_8h" startline="333">y</references>
      </memberdef>
      <memberdef kind="function" id="class_c_n_m_seq_opt_1a2b301caae34520d6495dabb8fcfd5c63" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CNMSeqOpt::findhi</definition>
        <argsstring>()</argsstring>
        <name>findhi</name>
        <qualifiedname>CNMSeqOpt::findhi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function finds the highest-cost vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="382" column="6" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="382" bodyend="402"/>
        <references refid="class_c_n_m_seq_opt_1a7eae04524ddb0580b4657ab2d74f8837" compoundref="nmsopt_8h" startline="326">M</references>
        <references refid="class_c_n_m_seq_opt_1a371cf09612300720f18981ae1e3aec9a" compoundref="nmsopt_8h" startline="330">xhi</references>
        <references refid="class_c_n_m_seq_opt_1aa38748f581346e620b42202427ae7fd3" compoundref="nmsopt_8h" startline="331">xhi2</references>
        <references refid="class_c_n_m_seq_opt_1a49d787843631379aad7a4e096b4368e3" compoundref="nmsopt_8h" startline="333">y</references>
        <referencedby refid="class_c_n_m_seq_opt_1abe5f0b09856d48eb312d0c3a8701fdcc" compoundref="nmsopt_8h" startline="409" endline="451">calccent</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1a67aa8414c254cfb6a9b442450850987d" compoundref="nmsopt_8h" startline="461" endline="482">copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_n_m_seq_opt_1abe5f0b09856d48eb312d0c3a8701fdcc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CNMSeqOpt::calccent</definition>
        <argsstring>()</argsstring>
        <name>calccent</name>
        <qualifiedname>CNMSeqOpt::calccent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function calculates the centroid vector that excludes a highest-cost parameter vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="409" column="6" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="409" bodyend="451"/>
        <references refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" compoundref="biteaux_8h" startline="1229" endline="1232">CBitePop&lt; double &gt;::copyParams</references>
        <references refid="class_c_n_m_seq_opt_1a2b301caae34520d6495dabb8fcfd5c63" compoundref="nmsopt_8h" startline="382" endline="402">findhi</references>
        <references refid="class_c_n_m_seq_opt_1a7eae04524ddb0580b4657ab2d74f8837" compoundref="nmsopt_8h" startline="326">M</references>
        <references refid="class_c_n_m_seq_opt_1aff51e4e10e5089f3b8a1f8286f83010e" compoundref="nmsopt_8h" startline="328">M1i</references>
        <references refid="class_c_n_m_seq_opt_1a61e71ca1c5282bcfab71d638613f8ff2" compoundref="nmsopt_8h" startline="325">N</references>
        <references refid="class_c_n_m_seq_opt_1a356c7d926e3bc14c441622a19ab12df1" compoundref="nmsopt_8h" startline="332">x</references>
        <references refid="class_c_n_m_seq_opt_1a752068f193d7b65015a3b3b1d34a2c84" compoundref="nmsopt_8h" startline="334">x0</references>
        <references refid="class_c_n_m_seq_opt_1a371cf09612300720f18981ae1e3aec9a" compoundref="nmsopt_8h" startline="330">xhi</references>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_n_m_seq_opt_1a67aa8414c254cfb6a9b442450850987d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CNMSeqOpt::copy</definition>
        <argsstring>(const double *const ip, const double Cost)</argsstring>
        <name>copy</name>
        <qualifiedname>CNMSeqOpt::copy</qualifiedname>
        <param>
          <type>const double *const</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>Cost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function replaces the highest-cost vector with a new vector. Function also resets the StallCount to 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Cost</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vector&apos;s cost. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="461" column="6" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="461" bodyend="482"/>
        <references refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" compoundref="biteaux_8h" startline="1229" endline="1232">CBitePop&lt; double &gt;::copyParams</references>
        <references refid="class_c_n_m_seq_opt_1a2b301caae34520d6495dabb8fcfd5c63" compoundref="nmsopt_8h" startline="382" endline="402">findhi</references>
        <references refid="class_c_n_m_seq_opt_1aff51e4e10e5089f3b8a1f8286f83010e" compoundref="nmsopt_8h" startline="328">M1i</references>
        <references refid="class_c_n_m_seq_opt_1a61e71ca1c5282bcfab71d638613f8ff2" compoundref="nmsopt_8h" startline="325">N</references>
        <references refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" compoundref="biteaux_8h" startline="1668">CBiteOptBase&lt; double &gt;::StallCount</references>
        <references refid="class_c_n_m_seq_opt_1a356c7d926e3bc14c441622a19ab12df1" compoundref="nmsopt_8h" startline="332">x</references>
        <references refid="class_c_n_m_seq_opt_1a752068f193d7b65015a3b3b1d34a2c84" compoundref="nmsopt_8h" startline="334">x0</references>
        <references refid="class_c_n_m_seq_opt_1a371cf09612300720f18981ae1e3aec9a" compoundref="nmsopt_8h" startline="330">xhi</references>
        <references refid="class_c_n_m_seq_opt_1a49d787843631379aad7a4e096b4368e3" compoundref="nmsopt_8h" startline="333">y</references>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_n_m_seq_opt_1a1ef451e7a70db607e096c343dac37bb1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CNMSeqOpt::eval</definition>
        <argsstring>(CBiteRnd &amp;rnd, const double *const Params, double *const OutCost=NULL, double *const OutValues=NULL)</argsstring>
        <name>eval</name>
        <qualifiedname>CNMSeqOpt::eval</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const double *const</type>
          <declname>Params</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>OutCost</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>OutValues</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function evaluates parameter vector and applies value range wrapping, also records a new best solution.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Params</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter vector to evaluate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">OutCost</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, pointer to variable that receives cost of the newly-evaluated solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">OutValues</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, pointer to array that receives newly-evaluated parameter vector, in real scale. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/nmsopt.h" line="496" column="8" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="496" bodyend="521"/>
        <references refid="class_c_bite_pop_1a57e751582761922bbabff1ddb7af277b" compoundref="biteaux_8h" startline="1241" endline="1244">CBitePop&lt; double &gt;::copyValues</references>
        <references refid="class_c_n_m_seq_opt_1a61e71ca1c5282bcfab71d638613f8ff2" compoundref="nmsopt_8h" startline="325">N</references>
        <references refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" compoundref="biteaux_8h" startline="1667">CBiteOptBase&lt; double &gt;::NewValues</references>
        <references refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d">CBiteOptInterface::optcost</references>
        <references refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" compoundref="biteaux_8h" startline="1779" endline="1793">CBiteOptBase&lt; double &gt;::updateBestCost</references>
        <references refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" compoundref="biteaux_8h" startline="1819" endline="1850">CBiteOptBase&lt; double &gt;::wrapParamReal</references>
        <referencedby refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" compoundref="nmsopt_8h" startline="167" endline="322">optimize</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Sequential Nelder-Mead simplex method. Features custom coefficients tuned to provide better convergence at higher dimensions. Also implements various algorithmic optimizations.</para>
<para>Description is available at <ulink url="https://github.com/avaneev/biteopt">https://github.com/avaneev/biteopt</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="11">
        <label>CBiteOpt::CParOpt&lt; CNMSeqOpt &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptBase&lt; double &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="7">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CBiteParPops&lt; double &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="5">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="1">
        <label>CNMSeqOpt</label>
        <link refid="class_c_n_m_seq_opt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptBase&lt; double &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="7">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CBiteParPops&lt; double &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#ParPops</edgelabel>
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="5">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="9">
        <label>CBiteSelBase</label>
        <link refid="class_c_bite_sel_base"/>
      </node>
      <node id="1">
        <label>CNMSeqOpt</label>
        <link refid="class_c_n_m_seq_opt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/nmsopt.h" line="46" column="1" bodyfile="_fcmaescpp/include/nmsopt.h" bodystart="47" bodyend="522"/>
    <listofallmembers>
      <member refid="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>addSel</name></member>
      <member refid="class_c_bite_opt_base_1a3922d6b29602643882d3212071a5e679" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>ApplySels</name></member>
      <member refid="class_c_bite_opt_base_1afc2d6ec2c61d8f41bd39bb99632cf12e" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>ApplySelsCount</name></member>
      <member refid="class_c_bite_opt_base_1a47acdb7a495f75170b0eb457e0dc950e" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>applySelsDecr</name></member>
      <member refid="class_c_bite_opt_base_1aa08dcfff8871910e4d01a94f261ee752" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>applySelsIncr</name></member>
      <member refid="class_c_bite_opt_base_1acc0aa62d6125bd03d3baae22b0bf0467" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>AvgCost</name></member>
      <member refid="class_c_bite_opt_base_1adc4dfe02978fd4ed460f49c7e9a01633" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>BestCost</name></member>
      <member refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>BestValues</name></member>
      <member refid="class_c_n_m_seq_opt_1abe5f0b09856d48eb312d0c3a8701fdcc" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>calccent</name></member>
      <member refid="class_c_bite_pop_1ad4e3a3c5b7a25ad02ef0231bd3fe8388" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>calcLP1Coeff</name></member>
      <member refid="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CBiteOptInterface</name></member>
      <member refid="class_c_bite_par_pops_1a1d00195283da4d97f648da706e5c5cec" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CBiteParPops</name></member>
      <member refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1a73402384f4b75abf6d956dc086ccf36e" prot="public" virt="non-virtual" ambiguityscope="CBiteParPops&lt; double &gt;::"><scope>CNMSeqOpt</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1ab6dec63b0ee3955563c2a3f815614f31" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CentLPC</name></member>
      <member refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CentParams</name></member>
      <member refid="class_c_n_m_seq_opt_1a71ef10bfb9e6d7c852bb3e96156d3ed8" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CNMSeqOpt</name></member>
      <member refid="class_c_bite_pop_1a2bf725291723a8dcaa215496e3175471" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CnsCount</name></member>
      <member refid="class_c_n_m_seq_opt_1a67aa8414c254cfb6a9b442450850987d" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>copy</name></member>
      <member refid="class_c_bite_pop_1a3fc2d887ae91be62fd9fc3100268e53c" prot="public" virt="non-virtual" ambiguityscope="CBiteOptBase&lt; double &gt;::"><scope>CNMSeqOpt</scope><name>copy</name></member>
      <member refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>copyParams</name></member>
      <member refid="class_c_bite_pop_1a57e751582761922bbabff1ddb7af277b" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>copyValues</name></member>
      <member refid="class_c_bite_pop_1aa7c87b9148768d6104f8d3dfb5abebce" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CurPopPos</name></member>
      <member refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CurPopSize</name></member>
      <member refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CurPopSize1</name></member>
      <member refid="class_c_bite_pop_1aa5105ca75379f9a760dc9f0b9ea30ea7" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>CurPopSizeI</name></member>
      <member refid="class_c_bite_pop_1a4656171c63f1944ae045d6f222d9d33a" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>decrCurPopSize</name></member>
      <member refid="class_c_n_m_seq_opt_1a76ae39736ff317e9aa048d24872e7084" prot="private" virt="virtual"><scope>CNMSeqOpt</scope><name>deleteBuffers</name></member>
      <member refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>DiffValues</name></member>
      <member refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>DiffValuesI</name></member>
      <member refid="class_c_n_m_seq_opt_1af1e9f2a0229d5f931333d2285894434d" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>DoInitEvals</name></member>
      <member refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>EState</name></member>
      <member refid="class_c_n_m_seq_opt_1a1ef451e7a70db607e096c343dac37bb1" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>eval</name></member>
      <member refid="class_c_n_m_seq_opt_1a2b301caae34520d6495dabb8fcfd5c63" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>findhi</name></member>
      <member refid="class_c_bite_opt_base_1a4b2d3669723dbe251cf391cc10dd4f5c" prot="public" virt="virtual"><scope>CNMSeqOpt</scope><name>getBestCost</name></member>
      <member refid="class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2" prot="public" virt="virtual"><scope>CNMSeqOpt</scope><name>getBestParams</name></member>
      <member refid="class_c_bite_pop_1a5e6ccebb178353b084084f841b09042d" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getCentroid</name></member>
      <member refid="class_c_bite_pop_1ad38d886687357797479e69098759476a" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getCnsPtr</name></member>
      <member refid="class_c_bite_pop_1a0053ae41c70babe967c5931f491ea865" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getCurParams</name></member>
      <member refid="class_c_bite_pop_1a7e1fbb7f7e9aaf8f73eb865fa4610185" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getCurPopPos</name></member>
      <member refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getCurPopSize</name></member>
      <member refid="class_c_bite_pop_1aecaac61269e65bda93cb2dc1a3a26091" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getGaussianInt</name></member>
      <member refid="class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d" prot="public" virt="pure-virtual"><scope>CNMSeqOpt</scope><name>getMaxValues</name></member>
      <member refid="class_c_bite_par_pops_1afa8a97732cea882b664c2d0fbedf2289" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getMinDistParPop</name></member>
      <member refid="class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d" prot="public" virt="pure-virtual"><scope>CNMSeqOpt</scope><name>getMinValues</name></member>
      <member refid="class_c_bite_pop_1ad6cbe6cfbf9954dcb6f8a223a5e1f36b" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getObjPtr</name></member>
      <member refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getParamsOrdered</name></member>
      <member refid="class_c_bite_pop_1ac2a01e9eb6b884a0b318e4b914273acf" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getPopParams</name></member>
      <member refid="class_c_bite_pop_1aa4f3255c9607f72eff280f8c3c09143f" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getRankPtr</name></member>
      <member refid="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getRealValue</name></member>
      <member refid="class_c_bite_opt_base_1a96f3b9e0a82d830bc34c17a5d0f8fa19" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getSelCount</name></member>
      <member refid="class_c_bite_opt_base_1afd1006a5d6154064115a205b54ecaa8c" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getSelNames</name></member>
      <member refid="class_c_bite_opt_base_1a2eaae4dd1761eaef42ead68546994c12" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>getSels</name></member>
      <member refid="class_c_bite_opt_base_1a48296b534db162fa0007ff83757cb84b" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>HiBound</name></member>
      <member refid="class_c_bite_pop_1a48d6ede5c82534c973e0458726e820dd" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>incrCurPopSize</name></member>
      <member refid="class_c_n_m_seq_opt_1aff1efaf9224552ae9a607a60f4ca17fc" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>init</name></member>
      <member refid="class_c_n_m_seq_opt_1a523bc7d383b7a2cfeef8d2a4edc12b5f" prot="private" virt="virtual"><scope>CNMSeqOpt</scope><name>initBuffers</name></member>
      <member refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>initCommonVars</name></member>
      <member refid="class_c_bite_pop_1ac9adf8849ed7251dadd94815e20bdee8" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>IntMantBits</name></member>
      <member refid="class_c_bite_pop_1a27448c9be1bed517e4a48aa656ca4f76" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>IntMantMask</name></member>
      <member refid="class_c_bite_pop_1a1302e3c2e578dd650aedb57e18645092" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>IntMantMult</name></member>
      <member refid="class_c_bite_pop_1a8c64d2e83f225b034df818b06b09ecd2" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>IntMantMult2</name></member>
      <member refid="class_c_bite_pop_1aeba03d86b17ed01a97dc8225c5598b2d" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>IntMantMultM</name></member>
      <member refid="class_c_bite_pop_1a8009a96dd8a678daaefc9410ba2e0a76" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>IntOverBits</name></member>
      <member refid="class_c_n_m_seq_opt_1a7eae04524ddb0580b4657ab2d74f8837" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>M</name></member>
      <member refid="class_c_n_m_seq_opt_1ac7358629418dff64bb5febd828f64f0e" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>M1</name></member>
      <member refid="class_c_n_m_seq_opt_1aff51e4e10e5089f3b8a1f8286f83010e" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>M1i</name></member>
      <member refid="class_c_bite_opt_base_1ab1e0b2f8caf76a2a75401e2f6bc913ba" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>MaxApplySels</name></member>
      <member refid="class_c_bite_par_pops_1a451f5fa8bb3503f9c344fe03f46ffcc9" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>MaxParPopCount</name></member>
      <member refid="class_c_bite_opt_base_1ad4c10c5958656e9ad5bb0073415b9c9f" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>MaxSelCount</name></member>
      <member refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>MaxValues</name></member>
      <member refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>MinValues</name></member>
      <member refid="class_c_n_m_seq_opt_1a61e71ca1c5282bcfab71d638613f8ff2" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>N</name></member>
      <member refid="class_c_bite_pop_1a41f29468becc588bea6ff3f842db93ea" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>NeedCentUpdate</name></member>
      <member refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>NewValues</name></member>
      <member refid="class_c_bite_pop_1a2f7c6a4707e23c21197ab32b71d900c7" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>ObjCount</name></member>
      <member refid="class_c_bite_opt_base_1a8b1b8265762299edcd1714553ce2104d" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>operator=</name></member>
      <member refid="class_c_bite_pop_1ab18cf322db6ab186db1e19b53e34c232" prot="public" virt="non-virtual" ambiguityscope="CBiteParPops&lt; double &gt;::"><scope>CNMSeqOpt</scope><name>operator=</name></member>
      <member refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d" prot="public" virt="pure-virtual"><scope>CNMSeqOpt</scope><name>optcost</name></member>
      <member refid="class_c_n_m_seq_opt_1a7acf8fee1b87f954b19f8a4313e58b7d" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>optimize</name></member>
      <member refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>ParamCount</name></member>
      <member refid="class_c_bite_pop_1a884c9ad4c0327aaa0110a23a89f5697a" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>ParamCountI</name></member>
      <member refid="class_c_bite_par_pops_1aea59bf6c1cf9894f944d07cec99882ee" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>ParPopCount</name></member>
      <member refid="class_c_bite_par_pops_1a79983cca58bd18a6ff73120e65a976dd" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>ParPops</name></member>
      <member refid="class_c_bite_pop_1a6d4a3479ca9e60de6cf4667d5b2937a5" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>PopCnsOffs</name></member>
      <member refid="class_c_bite_pop_1a3cdac0ad2cf5c8403f1f7676171f4e76" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>PopItemSize</name></member>
      <member refid="class_c_bite_pop_1a98e2af75120c4184b271c14d22acf9d4" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>PopObjOffs</name></member>
      <member refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>PopParams</name></member>
      <member refid="class_c_bite_pop_1ac69b014720b11a472509b22588eaf6c3" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>PopParamsBuf</name></member>
      <member refid="class_c_bite_pop_1a3ecc4ffcf1c6f3f9b4e4e5a873c481fe" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>PopRankOffs</name></member>
      <member refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>PopSize</name></member>
      <member refid="class_c_bite_pop_1a0b64743a84d5af143d44e7f6e9f02ada" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>PopSize1</name></member>
      <member refid="class_c_bite_pop_1a767519aa2fcc2667dc135a131bc9fd85" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>resetCurPopPos</name></member>
      <member refid="class_c_n_m_seq_opt_1a71dd7363e56585f44ccf346c31bf031c" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>rj</name></member>
      <member refid="class_c_n_m_seq_opt_1abc45d41e6ba582da381eb4c9999442ad" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>rx</name></member>
      <member refid="class_c_bite_opt_base_1ae9b284aca73ab2f6784f12174e391f7b" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>SelCount</name></member>
      <member refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>select</name></member>
      <member refid="class_c_bite_opt_base_1a43d69538ae5aa7d78d8b3a3e821902b7" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>SelNames</name></member>
      <member refid="class_c_bite_opt_base_1aebc1904c883f8b4dafefeda608c4536b" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>Sels</name></member>
      <member refid="class_c_bite_par_pops_1a24cc3d1978b4dbe57fad8a6f6d7efd8a" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>setParPopCount</name></member>
      <member refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>StallCount</name></member>
      <member refid="class_c_n_m_seq_opt_1af55bab09410e2932dc2983c3646fba93" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>State</name></member>
      <member refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7aa9847544ca4f0a439c38dff1d0f6db0a" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>stContraction</name></member>
      <member refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7a598ff65bb5323e300f4ba87a2155aac4" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>stExpansion</name></member>
      <member refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7aeb70e74fc5104ae8c19bad1a162741c7" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>stReduction</name></member>
      <member refid="class_c_n_m_seq_opt_1a1f81889f90eb0c0e9b5f9ee1b9e1faa7a2882bfaa75c67e68fad7e1b31b752a6e" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>stReflection</name></member>
      <member refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>TmpParams</name></member>
      <member refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>updateBestCost</name></member>
      <member refid="class_c_bite_pop_1a7850902dad276dcecea68559eaccc168" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>updateCentroid</name></member>
      <member refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>updateDiffValues</name></member>
      <member refid="class_c_n_m_seq_opt_1a0db683f79e6af131ffd6e59238a6df51" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>updateDims</name></member>
      <member refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" prot="public" virt="non-virtual"><scope>CNMSeqOpt</scope><name>updatePop</name></member>
      <member refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>wrapParam</name></member>
      <member refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>wrapParamReal</name></member>
      <member refid="class_c_n_m_seq_opt_1a356c7d926e3bc14c441622a19ab12df1" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>x</name></member>
      <member refid="class_c_n_m_seq_opt_1a752068f193d7b65015a3b3b1d34a2c84" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>x0</name></member>
      <member refid="class_c_n_m_seq_opt_1ad1d9690201835708ecbf9e639e7a1a84" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>x1</name></member>
      <member refid="class_c_n_m_seq_opt_1a22d3e10bba1fbfa50a458527d285d04b" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>x2</name></member>
      <member refid="class_c_n_m_seq_opt_1a371cf09612300720f18981ae1e3aec9a" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>xhi</name></member>
      <member refid="class_c_n_m_seq_opt_1aa38748f581346e620b42202427ae7fd3" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>xhi2</name></member>
      <member refid="class_c_n_m_seq_opt_1a553e8ff44398fb272de572df3055c8a0" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>xlo</name></member>
      <member refid="class_c_n_m_seq_opt_1a49d787843631379aad7a4e096b4368e3" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>y</name></member>
      <member refid="class_c_n_m_seq_opt_1ac43a76bb5f3f4a5f059f17ad8e54d646" prot="private" virt="non-virtual"><scope>CNMSeqOpt</scope><name>y1</name></member>
      <member refid="class_c_bite_pop_1a0d5ab322641bb1a091df91ff7ee630c4" prot="protected" virt="non-virtual"><scope>CNMSeqOpt</scope><name>zeroParams</name></member>
      <member refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" prot="public" virt="virtual"><scope>CNMSeqOpt</scope><name>~CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce" prot="public" virt="virtual"><scope>CNMSeqOpt</scope><name>~CBiteOptInterface</name></member>
      <member refid="class_c_bite_par_pops_1a772516362f17b8e5790596740ce355ba" prot="public" virt="virtual"><scope>CNMSeqOpt</scope><name>~CBiteParPops</name></member>
      <member refid="class_c_bite_pop_1ac386e4638d6fc6bd5370eeae895347c3" prot="public" virt="virtual"><scope>CNMSeqOpt</scope><name>~CBitePop</name></member>
      <member refid="class_c_n_m_seq_opt_1a91ae0f70b98a4b34c31f86f483d23a31" prot="public" virt="virtual"><scope>CNMSeqOpt</scope><name>~CNMSeqOpt</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

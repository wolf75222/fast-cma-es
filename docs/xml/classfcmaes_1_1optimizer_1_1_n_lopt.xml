<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1optimizer_1_1_n_lopt" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::optimizer::NLopt</compoundname>
    <basecompoundref refid="classfcmaes_1_1optimizer_1_1_optimizer" prot="public" virt="non-virtual">fcmaes.optimizer.Optimizer</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_n_lopt_1a33c832c03b0c4372a3c3274a007e4afe" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.NLopt::algo</definition>
        <argsstring></argsstring>
        <name>algo</name>
        <qualifiedname>fcmaes.optimizer.NLopt.algo</qualifiedname>
        <initializer>=  algo</initializer>
        <briefdescription>
<para>The <ref refid="classfcmaes_1_1optimizer_1_1_n_lopt" kindref="compound">NLopt</ref> algorithm object that defines the optimization algorithm to use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="3246" column="1" bodyfile="fcmaes/optimizer.py" bodystart="3246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_n_lopt_1a87532d607570bf7ca347eb50dcbf18cb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.NLopt::fun</definition>
        <argsstring></argsstring>
        <name>fun</name>
        <qualifiedname>fcmaes.optimizer.NLopt.fun</qualifiedname>
        <initializer>=  fun</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="3282" column="1" bodyfile="fcmaes/optimizer.py" bodystart="3282" bodyend="-1"/>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1ac24e8f7966063c3bc0cc215a561cbadb" compoundref="crypto_8py" startline="167" endline="170">examples.crypto.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1add29e0fd221efd5ffa3ce2f0933b633f" compoundref="harvesting_8py" startline="211" endline="214">examples.harvesting.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a65088d25d52805209f6dfec80ed1aa9f" compoundref="jobshop_8py" startline="252" endline="255">examples.jobshop.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a8b05705866c5de83931191324a4e1311" compoundref="benchmark__gtop__pygmo_8py" startline="46" endline="48">examples.benchmark_gtop_pygmo.pygmo_udp.fitness</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a1209aafc30c6a32427e2707c0bcadd22" compoundref="crypto_8py" startline="171" endline="176">examples.crypto.fitness.mofun</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a3ba688bf0d5b34a2cc6268a2248dfaa0" compoundref="crypto_8py" startline="177" endline="180">examples.crypto.fitness.ndfun</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a02628583a11cb998eba4aa6f9b499f76" compoundref="optimizer_8py" startline="3307" endline="3313">fcmaes.optimizer.NLopt.nlfunc</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_n_lopt_1a4801e08b9462c55ccc3239a41bd117f4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.NLopt::nlfunc</definition>
        <argsstring></argsstring>
        <name>nlfunc</name>
        <qualifiedname>fcmaes.optimizer.NLopt.nlfunc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="3284" column="1" bodyfile="fcmaes/optimizer.py" bodystart="3284" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_n_lopt_1aa14e61b3608c3de70f42e3bc7bfce31f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.NLopt.__init__</definition>
        <argsstring>(self, algo, max_evaluations=50000, store=None)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.optimizer.NLopt.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a33c832c03b0c4372a3c3274a007e4afe" kindref="member">algo</ref></type>
          <defname>algo</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" kindref="member">max_evaluations</ref></type>
          <defname>max_evaluations</defname>
          <defval>50000</defval>
        </param>
        <param>
          <type>store</type>
          <defname>store</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Initializes the optimizer with the specified algorithm, maximum evaluation limit, and storage option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>algo</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance of the optimization algorithm to be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of evaluations to perform during optimization. Defaults to 50000. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameter for storage of intermediate results. Defaults to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>None.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="3244" column="1" bodyfile="fcmaes/optimizer.py" bodystart="3244" bodyend="3247"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_n_lopt_1aca63a2312668db8238a4d71819fa437f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[np.ndarray, float, int]</type>
        <definition> Tuple[np.ndarray, float, int] fcmaes.optimizer.NLopt.minimize</definition>
        <argsstring>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.optimizer.NLopt.minimize</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>guess</defname>
          <array>[Bounds]</array>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <defname>sdevs</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>sdevs</declname>
          <defname>rg</defname>
          <array>[float]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>rg</type>
          <defname>store</defname>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>store</type>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Minimizes an objective function within given bounds using an optimizer object. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method leverages the optimization algorithm set on the optimizer object
   to minimize the provided objective function. It also allows setting initial
   guess values and configuration through the specified parameters.


       fun (Callable[[ArrayLike], float]): The objective function that takes an
           array-like input and returns a float as its value to be minimized.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The bounds for the optimization. It defines the lower and upper limits for the parameters of the target function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess values for the optimization parameters. If not provided, a random guess within bounds will be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sdevs</parametername>
</parameternamelist>
<parameterdescription>
<para>Standard deviation initial step size for the optimizer. This parameter may not always be utilized and is ignored in this method. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator instance for generating random initial guesses if <computeroutput>guess</computeroutput> is not provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional object to store information during the evaluation process. This parameter may affect the behavior of <computeroutput>max_eval_num</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple[np.ndarray, float, int]: A tuple containing the optimal parameter values (array-like), the function value at the minimum, and the number of function evaluations performed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="3275" column="1" bodyfile="fcmaes/optimizer.py" bodystart="3281" bodyend="3294"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_n_lopt_1a02628583a11cb998eba4aa6f9b499f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.NLopt.nlfunc</definition>
        <argsstring>(self, x, _)</argsstring>
        <name>nlfunc</name>
        <qualifiedname>fcmaes.optimizer.NLopt.nlfunc</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>_</type>
          <defname>_</defname>
        </param>
        <briefdescription>
<para>Executes a computation using the provided function. </para>
        </briefdescription>
        <detaileddescription>
<para>If an exception occurs during execution, it returns the maximum float value from sys.float_info.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Input value passed to the function for computation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_</parametername>
</parameternamelist>
<parameterdescription>
<para>Unused parameter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function computation if successful, or the maximum float value from sys.float_info in case of an exception. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="3307" column="1" bodyfile="fcmaes/optimizer.py" bodystart="3307" bodyend="3313"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5" compoundref="advretry_8py" startline="303">fcmaes.advretry.Store.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_astrofun_1a09c240962ab5a0efcdc4bd91487fae2a" compoundref="astro_8py" startline="107">fcmaes.astro.Astrofun.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_cassini1minlp_1a1cbd83402656701b417eb6d8766727fd" compoundref="astro_8py" startline="651">fcmaes.astro.Cassini1minlp.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_cassini1multi_1abc0c4735a3014c94fe6934f96c7a2b84" compoundref="astro_8py" startline="602">fcmaes.astro.Cassini1multi.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_gtoc1_1a144ad84d1ad2a646e794e87808f1f6b9" compoundref="astro_8py" startline="224">fcmaes.astro.Gtoc1.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_tandem_1a7289ad20163a2b464e987587daa2fd90" compoundref="astro_8py" startline="451">fcmaes.astro.Tandem.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_tandem__minlp_1ab4f58a6afc6358ae6c4004395eb94ade" compoundref="astro_8py" startline="525">fcmaes.astro.Tandem_minlp.fun</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1ad346a5d42fbaec4c0fa1eed13ca09757" compoundref="de_8py" startline="601">fcmaes.de.DE.fun</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1af7c0600358aeaeefc43be1935db00c49" compoundref="evaluator_8py" startline="412">fcmaes.evaluator._fitness.fun</references>
        <references refid="classfcmaes_1_1evaluator_1_1callback_1af1faa34e6c01adde25dc4c8daadf66a9" compoundref="evaluator_8py" startline="702">fcmaes.evaluator.callback.fun</references>
        <references refid="classfcmaes_1_1evaluator_1_1callback__mo_1a01e0e70f0c77c72a78f24eec3f26e97d" compoundref="evaluator_8py" startline="857">fcmaes.evaluator.callback_mo.fun</references>
        <references refid="classfcmaes_1_1evaluator_1_1callback__par_1ab00135869a09e7af34a5a3f27c639d25" compoundref="evaluator_8py" startline="922">fcmaes.evaluator.callback_par.fun</references>
        <references refid="classfcmaes_1_1evaluator_1_1callback__so_1a1df2acbb4dae1a64687b5b231a2d169a" compoundref="evaluator_8py" startline="771">fcmaes.evaluator.callback_so.fun</references>
        <references refid="classfcmaes_1_1evaluator_1_1_evaluator_1ae5b016e0ced992bbb7b07073a7df5a4c" compoundref="evaluator_8py" startline="206">fcmaes.evaluator.Evaluator.fun</references>
        <references refid="classfcmaes_1_1mode_1_1wrapper_1a3a69785db0897b0c68286388b7916276" compoundref="mode_8py" startline="1346">fcmaes.mode.wrapper.fun</references>
        <references refid="classfcmaes_1_1moretry_1_1mo__wrapper_1a28cf58191f93203c9fea6eeddb561b73" compoundref="moretry_8py" startline="309">fcmaes.moretry.mo_wrapper.fun</references>
        <references refid="classfcmaes_1_1multiretry_1_1problem__stats_1aa692dda9e8785372877087a37861e73e" compoundref="multiretry_8py" startline="160">fcmaes.multiretry.problem_stats.fun</references>
        <references refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a87532d607570bf7ca347eb50dcbf18cb" compoundref="optimizer_8py" startline="3282">fcmaes.optimizer.NLopt.fun</references>
        <references refid="classfcmaes_1_1optimizer_1_1single__objective_1ae90ac92d0397e40020c7c7c8ea9b1cef" compoundref="optimizer_8py" startline="3195">fcmaes.optimizer.single_objective.fun</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="classfcmaes_1_1optimizer_1_1_optimizer" kindref="compound">Optimizer</ref> class utilizing <ref refid="classfcmaes_1_1optimizer_1_1_n_lopt" kindref="compound">NLopt</ref> algorithms for optimization tasks. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is designed to perform optimization using the <ref refid="classfcmaes_1_1optimizer_1_1_n_lopt" kindref="compound">NLopt</ref> library, which provides algorithms for nonlinear optimization with constraints and bounds. The <ref refid="classfcmaes_1_1optimizer_1_1_n_lopt" kindref="compound">NLopt</ref> optimizer supports various optimization algorithms and is utilized through this wrapper to interact with objective functions, bounds, and initial guess settings. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fcmaes.optimizer.NLopt</label>
        <link refid="classfcmaes_1_1optimizer_1_1_n_lopt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.optimizer.NLopt</label>
        <link refid="classfcmaes_1_1optimizer_1_1_n_lopt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/optimizer.py" line="3229" column="1" bodyfile="fcmaes/optimizer.py" bodystart="3229" bodyend="3313"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1optimizer_1_1_n_lopt_1aa14e61b3608c3de70f42e3bc7bfce31f" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::NLopt</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a33c832c03b0c4372a3c3274a007e4afe" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::NLopt</scope><name>algo</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a87532d607570bf7ca347eb50dcbf18cb" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::NLopt</scope><name>fun</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::NLopt</scope><name>get_count_runs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::NLopt</scope><name>max_eval_num</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::NLopt</scope><name>max_evaluations</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_n_lopt_1aca63a2312668db8238a4d71819fa437f" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::NLopt</scope><name>minimize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::NLopt</scope><name>name</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a4801e08b9462c55ccc3239a41bd117f4" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::NLopt</scope><name>nlfunc</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a02628583a11cb998eba4aa6f9b499f76" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::NLopt</scope><name>nlfunc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

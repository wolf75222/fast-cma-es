<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1optimizer_1_1_cma__cpp" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::optimizer::Cma_cpp</compoundname>
    <basecompoundref refid="classfcmaes_1_1optimizer_1_1_optimizer" prot="public" virt="non-virtual">fcmaes.optimizer.Optimizer</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_cpp::popsize</definition>
        <argsstring></argsstring>
        <name>popsize</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.popsize</qualifiedname>
        <initializer>=  popsize</initializer>
        <briefdescription>
<para>The population size for the optimization process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1359" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1359" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" compoundref="benchmark__gtop__pygmo_8py" startline="103" endline="118">examples.benchmark_gtop_pygmo.Cma_pyg.minimize</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" compoundref="benchmark__gtop__pygmo_8py" startline="127" endline="137">examples.benchmark_gtop_pygmo.De_pyg.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a" compoundref="optimizer_8py" startline="1647" endline="1679">fcmaes.optimizer.Cma_lw.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0" compoundref="optimizer_8py" startline="1520" endline="1552">fcmaes.optimizer.Cma_orig.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388" compoundref="optimizer_8py" startline="2418" endline="2431">fcmaes.optimizer.De_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" compoundref="optimizer_8py" startline="2858" endline="2864">fcmaes.optimizer.Differential_evolution.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1ae7c8ca1a9885411036279c8990bada8e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_cpp::stop_fitness</definition>
        <argsstring></argsstring>
        <name>stop_fitness</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.stop_fitness</qualifiedname>
        <initializer>=  stop_fitness</initializer>
        <briefdescription>
<para><ref refid="class_fitness" kindref="compound">Fitness</ref> value threshold for stopping the optimization process early. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1360" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1360" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1ad8ae4d6852922d2037677886a6e47081" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_cpp::stop_hist</definition>
        <argsstring></argsstring>
        <name>stop_hist</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.stop_hist</qualifiedname>
        <initializer>=  stop_hist</initializer>
        <briefdescription>
<para>Number of recent fitness values considered for convergence checks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1361" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1361" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_cpp::guess</definition>
        <argsstring></argsstring>
        <name>guess</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.guess</qualifiedname>
        <initializer>=  guess</initializer>
        <briefdescription>
<para>Initial guess for the optimization variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1362" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1362" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a" compoundref="optimizer_8py" startline="1647" endline="1679">fcmaes.optimizer.Cma_lw.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0" compoundref="optimizer_8py" startline="1520" endline="1552">fcmaes.optimizer.Cma_orig.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" compoundref="optimizer_8py" startline="2596" endline="2603">fcmaes.optimizer.Da_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_cpp::sdevs</definition>
        <argsstring></argsstring>
        <name>sdevs</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.sdevs</qualifiedname>
        <initializer>=  sdevs</initializer>
        <briefdescription>
<para>Initial standard deviations for the distribution used in CMA-ES. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1363" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1363" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0" compoundref="optimizer_8py" startline="1520" endline="1552">fcmaes.optimizer.Cma_orig.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1a30083184aacba7ca41b7a96e06ba164c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_cpp::update_gap</definition>
        <argsstring></argsstring>
        <name>update_gap</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.update_gap</qualifiedname>
        <initializer>=  update_gap</initializer>
        <briefdescription>
<para>Interval (in terms of generations) between updates to the distribution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1364" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1364" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1ab75f2eed9cd3127b7174cc45f7ede81d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_cpp::delayed_update</definition>
        <argsstring></argsstring>
        <name>delayed_update</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.delayed_update</qualifiedname>
        <initializer>=  delayed_update</initializer>
        <briefdescription>
<para>Indicates whether updates to the distribution are delayed until. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1365" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1365" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1a7d425626d29af5e5e323d059572b9931" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_cpp::normalize</definition>
        <argsstring></argsstring>
        <name>normalize</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.normalize</qualifiedname>
        <initializer>=  normalize</initializer>
        <briefdescription>
<para>Specifies whether the input parameters should be normalized for the. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1366" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1366" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1ada69629e32dd255e9ae77bdc81803f7e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_cpp::workers</definition>
        <argsstring></argsstring>
        <name>workers</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.workers</qualifiedname>
        <initializer>=  workers</initializer>
        <briefdescription>
<para>The number of workers used to parallelize computations and evaluations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1367" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1367" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a" compoundref="optimizer_8py" startline="1647" endline="1679">fcmaes.optimizer.Cma_lw.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1a9d071c64c65735fdf51ec4f744397e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.Cma_cpp.__init__</definition>
        <argsstring>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[float] sdevs=None, Optional[int] workers=None, Optional[int] update_gap=None, Optional[bool] normalize=True, Optional[bool] delayed_update=True, Optional[int] stop_hist=-1)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <array>[int]</array>
          <defval>50000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <array>[int]</array>
          <defval>31</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>sdevs</declname>
          <array>[float]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>workers</declname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>update_gap</declname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>normalize</declname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>delayed_update</declname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_hist</declname>
          <array>[int]</array>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Initializes the CMA-ES optimization algorithm with the specified parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This method extends an existing optimizer by incorporating properties specific to CMA-ES. It allows fine-tuning of the optimization process through various parameters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of evaluations allowed for the optimizer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>The population size for the optimization process. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess for the optimization variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_fitness" kindref="compound">Fitness</ref> value threshold for stopping the optimization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sdevs</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial standard deviations for the distribution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workers</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of workers to parallelize computations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>update_gap</parametername>
</parameternamelist>
<parameterdescription>
<para>Interval (in terms of generations) between updates to the distribution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies whether the input parameters should be normalized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delayed_update</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether updates to the distribution are delayed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_hist</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of recent fitness values to consider for convergence checks. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1347" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1357" bodyend="1368"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[np.ndarray, float, int]</type>
        <definition> Tuple[np.ndarray, float, int] fcmaes.optimizer.Cma_cpp.minimize</definition>
        <argsstring>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike, Callable]] sdevs=0.1, rg=Generator(PCG64DXSM()), store=None)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.optimizer.Cma_cpp.minimize</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>guess</defname>
          <array>[Bounds]</array>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <defname>sdevs</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional]</type>
          <declname>sdevs</declname>
          <defname>rg</defname>
          <array>[Union[float, ArrayLike, Callable]</array>
          <defval>0.1</defval>
        </param>
        <param>
          <type>rg</type>
          <defname>store</defname>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>store</type>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Minimizes an objective function using the CMA-ES optimization algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method utilizes the CMA-ES (Covariance Matrix Adaptation Evolution Strategy) to
   find the minima of the given objective function within specified bounds. The algorithm
   supports customizable standard deviations for mutations, an optional random number generator,
   and the ability to store optimization progress.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>A callable objective function to minimize. It accepts an array-like object as input and returns a scalar value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The bounds within which the optimization will be performed. This is optional and can be used to constrain the search space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess for the optimization. If not provided, a default initial guess is used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sdevs</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional standard deviations for mutations. It can be provided as a float, an array-like object, or a callable. Default is 0.1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>A random number generator instance. By default, it uses a generator from the PCG64DXSM </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>algorithm.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional. A store to save progress or retrieve optimization state.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple[np.ndarray, float, int]:<itemizedlist>
<listitem><para>The first element is the array containing the optimal solution.</para>
</listitem><listitem><para>The second element is the corresponding minimum function value.</para>
</listitem><listitem><para>The third element is the number of function evaluations performed. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1396" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1402" bodyend="1416"/>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ab75f2eed9cd3127b7174cc45f7ede81d" compoundref="optimizer_8py" startline="1365">fcmaes.optimizer.Cma_cpp.delayed_update</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61" compoundref="advretry_8py" startline="784" endline="786">fcmaes.advretry.Store.get_count_runs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" compoundref="optimizer_8py" startline="320" endline="323">fcmaes.optimizer.Optimizer.get_count_runs</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1ad60e13f5cfc1f2c51e12bc24507708e9" compoundref="cmaes_8py" startline="204">fcmaes.cmaes.Cmaes.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c" compoundref="optimizer_8py" startline="1362">fcmaes.optimizer.Cma_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a" compoundref="optimizer_8py" startline="1233">fcmaes.optimizer.Cma_python.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1af4d308e51cb40add76e8a257dc54e634" compoundref="optimizer_8py" startline="902">fcmaes.optimizer.Crfmnes.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a01fc558e855be7732876a6e5facf3d1c" compoundref="optimizer_8py" startline="1003">fcmaes.optimizer.Crfmnes_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a3acb28558e183337fbc25d0f30dfc2a0" compoundref="optimizer_8py" startline="1116">fcmaes.optimizer.Pgpe_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" compoundref="optimizer_8py" startline="304" endline="307">fcmaes.optimizer.Optimizer.max_eval_num</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e" compoundref="evaluator_8py" startline="415">fcmaes.evaluator._fitness.normalize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a7d425626d29af5e5e323d059572b9931" compoundref="optimizer_8py" startline="1366">fcmaes.optimizer.Cma_cpp.normalize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a3ba6830a8e6ee037faaa309c2e68dce0" compoundref="optimizer_8py" startline="1235">fcmaes.optimizer.Cma_python.normalize</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df" compoundref="cmaes_8py" startline="223">fcmaes.cmaes.Cmaes.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" compoundref="cmaescpp_8py" startline="238">fcmaes.cmaescpp.ACMA_C.popsize</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" compoundref="crfmnescpp_8py" startline="221">fcmaes.crfmnescpp.CRFMNES_C.popsize</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1ac57257a177f51fb2637120cc3bf7ac55" compoundref="de_8py" startline="305">fcmaes.de.DE.popsize</references>
        <references refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad122a7d34bd51afeb06228ad811f85ce" compoundref="decpp_8py" startline="293">fcmaes.decpp.DE_C.popsize</references>
        <references refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6" compoundref="mode_8py" startline="487">fcmaes.mode.MODE.popsize</references>
        <references refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ac85826131061fe5596f9420ff628f582" compoundref="modecpp_8py" startline="404">fcmaes.modecpp.MODE_C.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578" compoundref="optimizer_8py" startline="1359">fcmaes.optimizer.Cma_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371" compoundref="optimizer_8py" startline="1230">fcmaes.optimizer.Cma_python.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1abf110ededa79f1101d0acefadef018f8" compoundref="optimizer_8py" startline="900">fcmaes.optimizer.Crfmnes.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1adf8a89f1eba94649ba1fbafd89e68ba8" compoundref="optimizer_8py" startline="1001">fcmaes.optimizer.Crfmnes_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1ad8bb83e394a209e90761b1d77b424e47" compoundref="optimizer_8py" startline="1114">fcmaes.optimizer.Pgpe_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120" compoundref="optimizer_8py" startline="1363">fcmaes.optimizer.Cma_cpp.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c" compoundref="optimizer_8py" startline="1234">fcmaes.optimizer.Cma_python.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1ac325129f209caae80b300744683acf34" compoundref="optimizer_8py" startline="903">fcmaes.optimizer.Crfmnes.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a87d76bc7c9ce8d7cce77354a5bd3415b" compoundref="optimizer_8py" startline="1004">fcmaes.optimizer.Crfmnes_cpp.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a32af3f567e2852891077542f09c90ec1" compoundref="optimizer_8py" startline="1117">fcmaes.optimizer.Pgpe_cpp.sdevs</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1ab77d778b85b64826f6a8e7c004387f35" compoundref="cmaes_8py" startline="244">fcmaes.cmaes.Cmaes.stop_fitness</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1a22676b41ab3ab0d910bda941601cb9c4" compoundref="de_8py" startline="306">fcmaes.de.DE.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ae7c8ca1a9885411036279c8990bada8e" compoundref="optimizer_8py" startline="1360">fcmaes.optimizer.Cma_cpp.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f" compoundref="optimizer_8py" startline="1231">fcmaes.optimizer.Cma_python.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1a784caafbf6afcebd51d20067ead7aaae" compoundref="optimizer_8py" startline="901">fcmaes.optimizer.Crfmnes.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a241df60d5265b688e9959feca89318fb" compoundref="optimizer_8py" startline="1002">fcmaes.optimizer.Crfmnes_cpp.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8927d734b23546a18e42e14ade1569e5" compoundref="optimizer_8py" startline="1115">fcmaes.optimizer.Pgpe_cpp.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ad8ae4d6852922d2037677886a6e47081" compoundref="optimizer_8py" startline="1361">fcmaes.optimizer.Cma_cpp.stop_hist</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a30083184aacba7ca41b7a96e06ba164c" compoundref="optimizer_8py" startline="1364">fcmaes.optimizer.Cma_cpp.update_gap</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a22a6511d0a158b47ceb15c09119ce9f7" compoundref="optimizer_8py" startline="1232">fcmaes.optimizer.Cma_python.update_gap</references>
        <references refid="classfcmaes_1_1evaluator_1_1_evaluator_1ae804d4d3f546dd5277b8592560a820db" compoundref="evaluator_8py" startline="220">fcmaes.evaluator.Evaluator.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ada69629e32dd255e9ae77bdc81803f7e" compoundref="optimizer_8py" startline="1367">fcmaes.optimizer.Cma_cpp.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca" compoundref="optimizer_8py" startline="1236">fcmaes.optimizer.Cma_python.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1a3dbb8d59213de71c0f3b5b9b74c3751b" compoundref="optimizer_8py" startline="904">fcmaes.optimizer.Crfmnes.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a8407a495267d4a58ad2b1364eb49b79e" compoundref="optimizer_8py" startline="1005">fcmaes.optimizer.Crfmnes_cpp.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8862c3af607ca2bb3c07bbef226691aa" compoundref="optimizer_8py" startline="1118">fcmaes.optimizer.Pgpe_cpp.workers</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This class implements the CMA-ES optimization algorithm with customization options. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classfcmaes_1_1optimizer_1_1_cma__cpp" kindref="compound">Cma_cpp</ref> class extends the functionality of a generic optimizer by introducing CMA-ES specific features. This includes options for population size, convergence criteria, standard deviations for mutations, and the ability to parallelize the optimization process. It is designed for optimizing objective functions with or without constraints. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fcmaes.optimizer.Cma_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__cpp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.optimizer.Cma_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__cpp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/optimizer.py" line="1297" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1297" bodyend="1428"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a9d071c64c65735fdf51ec4f744397e29" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ab75f2eed9cd3127b7174cc45f7ede81d" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>delayed_update</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>get_count_runs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>guess</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>max_eval_num</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>max_evaluations</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>minimize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>name</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a7d425626d29af5e5e323d059572b9931" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>normalize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>popsize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>sdevs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ae7c8ca1a9885411036279c8990bada8e" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>stop_fitness</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ad8ae4d6852922d2037677886a6e47081" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>stop_hist</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a30083184aacba7ca41b7a96e06ba164c" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>update_gap</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ada69629e32dd255e9ae77bdc81803f7e" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_cpp</scope><name>workers</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

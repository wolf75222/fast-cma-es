<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_p_v_thrust" kind="struct" language="C++" prot="public">
    <compoundname>PVThrust</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_p_v_thrust_1ae8a9c89ffadcb3ee34c8a73cc1915a02" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double PVThrust::_veff</definition>
        <argsstring></argsstring>
        <name>_veff</name>
        <qualifiedname>PVThrust::_veff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/ascent.cpp" line="22" column="12" bodyfile="_fcmaescpp/ascent.cpp" bodystart="22" bodyend="-1"/>
        <referencedby refid="ascent_8cpp_1ad82324920dbdc173d7bc71c3e8ebf7c8" compoundref="ascent_8cpp" startline="53" endline="103">integratePVthrust</referencedby>
        <referencedby refid="struct_p_v_thrust_1a6eb2b209c427f2d8477af8e066c7fe07" compoundref="ascent_8cpp" startline="29" endline="49">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_p_v_thrust_1aff57ae6be1d59ba76d1d5cb20ab3f7a8" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double PVThrust::_mu</definition>
        <argsstring></argsstring>
        <name>_mu</name>
        <qualifiedname>PVThrust::_mu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/ascent.cpp" line="23" column="12" bodyfile="_fcmaescpp/ascent.cpp" bodystart="23" bodyend="-1"/>
        <referencedby refid="ascent_8cpp_1ad82324920dbdc173d7bc71c3e8ebf7c8" compoundref="ascent_8cpp" startline="53" endline="103">integratePVthrust</referencedby>
        <referencedby refid="struct_p_v_thrust_1a6eb2b209c427f2d8477af8e066c7fe07" compoundref="ascent_8cpp" startline="29" endline="49">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_p_v_thrust_1a7c9b6042921c8a1f6ea50625739f4e77" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double PVThrust::_ux</definition>
        <argsstring></argsstring>
        <name>_ux</name>
        <qualifiedname>PVThrust::_ux</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/ascent.cpp" line="24" column="12" bodyfile="_fcmaescpp/ascent.cpp" bodystart="24" bodyend="-1"/>
        <referencedby refid="ascent_8cpp_1ad82324920dbdc173d7bc71c3e8ebf7c8" compoundref="ascent_8cpp" startline="53" endline="103">integratePVthrust</referencedby>
        <referencedby refid="struct_p_v_thrust_1a6eb2b209c427f2d8477af8e066c7fe07" compoundref="ascent_8cpp" startline="29" endline="49">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_p_v_thrust_1a1aabd4508e41926e63411a74fbab4b19" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double PVThrust::_uy</definition>
        <argsstring></argsstring>
        <name>_uy</name>
        <qualifiedname>PVThrust::_uy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/ascent.cpp" line="25" column="12" bodyfile="_fcmaescpp/ascent.cpp" bodystart="25" bodyend="-1"/>
        <referencedby refid="ascent_8cpp_1ad82324920dbdc173d7bc71c3e8ebf7c8" compoundref="ascent_8cpp" startline="53" endline="103">integratePVthrust</referencedby>
        <referencedby refid="struct_p_v_thrust_1a6eb2b209c427f2d8477af8e066c7fe07" compoundref="ascent_8cpp" startline="29" endline="49">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_p_v_thrust_1a07f93fb87261c551035e907d7ba133eb" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double PVThrust::_uz</definition>
        <argsstring></argsstring>
        <name>_uz</name>
        <qualifiedname>PVThrust::_uz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/ascent.cpp" line="26" column="12" bodyfile="_fcmaescpp/ascent.cpp" bodystart="26" bodyend="-1"/>
        <referencedby refid="ascent_8cpp_1ad82324920dbdc173d7bc71c3e8ebf7c8" compoundref="ascent_8cpp" startline="53" endline="103">integratePVthrust</referencedby>
        <referencedby refid="struct_p_v_thrust_1a6eb2b209c427f2d8477af8e066c7fe07" compoundref="ascent_8cpp" startline="29" endline="49">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_p_v_thrust_1afc970af5b54428f05ed1e14b32fe00e1" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double PVThrust::_unorm</definition>
        <argsstring></argsstring>
        <name>_unorm</name>
        <qualifiedname>PVThrust::_unorm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/ascent.cpp" line="27" column="12" bodyfile="_fcmaescpp/ascent.cpp" bodystart="27" bodyend="-1"/>
        <referencedby refid="ascent_8cpp_1ad82324920dbdc173d7bc71c3e8ebf7c8" compoundref="ascent_8cpp" startline="53" endline="103">integratePVthrust</referencedby>
        <referencedby refid="struct_p_v_thrust_1a6eb2b209c427f2d8477af8e066c7fe07" compoundref="ascent_8cpp" startline="29" endline="49">operator()</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_p_v_thrust_1a6eb2b209c427f2d8477af8e066c7fe07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PVThrust::operator()</definition>
        <argsstring>(const state_t &amp;pv, state_t &amp;yDot, const double)</argsstring>
        <name>operator()</name>
        <qualifiedname>PVThrust::operator()</qualifiedname>
        <param>
          <type>const state_t &amp;</type>
          <declname>pv</declname>
        </param>
        <param>
          <type>state_t &amp;</type>
          <declname>yDot</declname>
        </param>
        <param>
          <type>const double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/ascent.cpp" line="29" column="10" bodyfile="_fcmaescpp/ascent.cpp" bodystart="29" bodyend="49"/>
        <references refid="struct_p_v_thrust_1aff57ae6be1d59ba76d1d5cb20ab3f7a8" compoundref="ascent_8cpp" startline="23">_mu</references>
        <references refid="struct_p_v_thrust_1afc970af5b54428f05ed1e14b32fe00e1" compoundref="ascent_8cpp" startline="27">_unorm</references>
        <references refid="struct_p_v_thrust_1a7c9b6042921c8a1f6ea50625739f4e77" compoundref="ascent_8cpp" startline="24">_ux</references>
        <references refid="struct_p_v_thrust_1a1aabd4508e41926e63411a74fbab4b19" compoundref="ascent_8cpp" startline="25">_uy</references>
        <references refid="struct_p_v_thrust_1a07f93fb87261c551035e907d7ba133eb" compoundref="ascent_8cpp" startline="26">_uz</references>
        <references refid="struct_p_v_thrust_1ae8a9c89ffadcb3ee34c8a73cc1915a02" compoundref="ascent_8cpp" startline="22">_veff</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>PVThrust</label>
        <link refid="struct_p_v_thrust"/>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/ascent.cpp" line="20" column="1" bodyfile="_fcmaescpp/ascent.cpp" bodystart="20" bodyend="50"/>
    <listofallmembers>
      <member refid="struct_p_v_thrust_1aff57ae6be1d59ba76d1d5cb20ab3f7a8" prot="public" virt="non-virtual"><scope>PVThrust</scope><name>_mu</name></member>
      <member refid="struct_p_v_thrust_1afc970af5b54428f05ed1e14b32fe00e1" prot="public" virt="non-virtual"><scope>PVThrust</scope><name>_unorm</name></member>
      <member refid="struct_p_v_thrust_1a7c9b6042921c8a1f6ea50625739f4e77" prot="public" virt="non-virtual"><scope>PVThrust</scope><name>_ux</name></member>
      <member refid="struct_p_v_thrust_1a1aabd4508e41926e63411a74fbab4b19" prot="public" virt="non-virtual"><scope>PVThrust</scope><name>_uy</name></member>
      <member refid="struct_p_v_thrust_1a07f93fb87261c551035e907d7ba133eb" prot="public" virt="non-virtual"><scope>PVThrust</scope><name>_uz</name></member>
      <member refid="struct_p_v_thrust_1ae8a9c89ffadcb3ee34c8a73cc1915a02" prot="public" virt="non-virtual"><scope>PVThrust</scope><name>_veff</name></member>
      <member refid="struct_p_v_thrust_1a6eb2b209c427f2d8477af8e066c7fe07" prot="public" virt="non-virtual"><scope>PVThrust</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="vessel_8py" kind="file" language="Python">
    <compoundname>vessel.py</compoundname>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1vessel">examples::vessel</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1vessel_1a7223d98a0308c7b38977d830242cd5f9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::vessel.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.vessel.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="38" column="1" bodyfile="examples/vessel.py" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1vessel_1a0c4af533fa7c354d642eaf31de503db6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::vessel.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.vessel.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="38" column="1" bodyfile="examples/vessel.py" bodystart="38" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" compoundref="vessel_8py" startline="89" endline="97">examples.vessel.print_result</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1vessel_1a2855cb5c6258f5f244c42bff42bed308" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::vessel.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.vessel.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="38" column="1" bodyfile="examples/vessel.py" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1vessel_1a3cd8872c36b8452b5186f2074bbccb0d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float examples::vessel.fac</definition>
        <argsstring></argsstring>
        <name>fac</name>
        <qualifiedname>examples.vessel.fac</qualifiedname>
        <initializer>=  0.0625</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="41" column="1" bodyfile="examples/vessel.py" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1vessel_1aee86003cb6bbb331c8c6c5484c0f6d91" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::vessel.bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <qualifiedname>examples.vessel.bounds</qualifiedname>
        <initializer>=  Bounds([1.1, 0.6, 0, 0], [240, 240, 240, 240])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="42" column="1" bodyfile="examples/vessel.py" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1vessel_1a75936765aaa289c75f230ba4fa2dbb4b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::vessel.t0</definition>
        <argsstring></argsstring>
        <name>t0</name>
        <qualifiedname>examples.vessel.t0</qualifiedname>
        <initializer>=  time.perf_counter();</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="116" column="1" bodyfile="examples/vessel.py" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1vessel_1a2720db2f81c03590516dd5482790f916" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::vessel.ret</definition>
        <argsstring></argsstring>
        <name>ret</name>
        <qualifiedname>examples.vessel.ret</qualifiedname>
        <initializer>=  advretry.minimize(feasable_cost_penalty, bounds, num_retries=320)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="117" column="1" bodyfile="examples/vessel.py" bodystart="117" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1a9b9b7d9b525b0e32dec4a679dd25fb79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.discrete</definition>
        <argsstring>(x)</argsstring>
        <name>discrete</name>
        <qualifiedname>examples.vessel.discrete</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="45" column="1" bodyfile="examples/vessel.py" bodystart="45" bodyend="50"/>
        <referencedby refid="namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca" compoundref="vessel_8py" startline="51" endline="56">examples.vessel._feasible</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel._feasible</definition>
        <argsstring>(x)</argsstring>
        <name>_feasible</name>
        <qualifiedname>examples.vessel._feasible</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="51" column="1" bodyfile="examples/vessel.py" bodystart="51" bodyend="56"/>
        <references refid="namespaceexamples_1_1vessel_1a9b9b7d9b525b0e32dec4a679dd25fb79" compoundref="vessel_8py" startline="45" endline="50">examples.vessel.discrete</references>
        <referencedby refid="namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8" compoundref="vessel_8py" startline="69" endline="72">examples.vessel.feasable_cost</referencedby>
        <referencedby refid="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" compoundref="vessel_8py" startline="89" endline="97">examples.vessel.print_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1acf59dad747a84939ba5b8e0da39d030b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.constraint_ineq</definition>
        <argsstring>(x)</argsstring>
        <name>constraint_ineq</name>
        <qualifiedname>examples.vessel.constraint_ineq</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="57" column="1" bodyfile="examples/vessel.py" bodystart="57" bodyend="61"/>
        <referencedby refid="namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af" compoundref="vessel_8py" startline="66" endline="68">examples.vessel.penalty</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.weight</definition>
        <argsstring>(x)</argsstring>
        <name>weight</name>
        <qualifiedname>examples.vessel.weight</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="62" column="1" bodyfile="examples/vessel.py" bodystart="62" bodyend="65"/>
        <referencedby refid="namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8" compoundref="vessel_8py" startline="69" endline="72">examples.vessel.feasable_cost</referencedby>
        <referencedby refid="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" compoundref="vessel_8py" startline="89" endline="97">examples.vessel.print_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.penalty</definition>
        <argsstring>(x)</argsstring>
        <name>penalty</name>
        <qualifiedname>examples.vessel.penalty</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="66" column="1" bodyfile="examples/vessel.py" bodystart="66" bodyend="68"/>
        <references refid="namespaceexamples_1_1vessel_1acf59dad747a84939ba5b8e0da39d030b" compoundref="vessel_8py" startline="57" endline="61">examples.vessel.constraint_ineq</references>
        <referencedby refid="namespaceexamples_1_1vessel_1a95a5805807fc62c2224ce037be72bee4" compoundref="vessel_8py" startline="73" endline="75">examples.vessel.feasable_cost_penalty</referencedby>
        <referencedby refid="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" compoundref="vessel_8py" startline="89" endline="97">examples.vessel.print_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.feasable_cost</definition>
        <argsstring>(x)</argsstring>
        <name>feasable_cost</name>
        <qualifiedname>examples.vessel.feasable_cost</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="69" column="1" bodyfile="examples/vessel.py" bodystart="69" bodyend="72"/>
        <references refid="namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca" compoundref="vessel_8py" startline="51" endline="56">examples.vessel._feasible</references>
        <references refid="namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc" compoundref="vessel_8py" startline="62" endline="65">examples.vessel.weight</references>
        <referencedby refid="namespaceexamples_1_1vessel_1afff096102e6cd9739381cfac25c0e450" compoundref="vessel_8py" startline="86" endline="88">examples.vessel.cost_int_penalty</referencedby>
        <referencedby refid="namespaceexamples_1_1vessel_1a95a5805807fc62c2224ce037be72bee4" compoundref="vessel_8py" startline="73" endline="75">examples.vessel.feasable_cost_penalty</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1a95a5805807fc62c2224ce037be72bee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.feasable_cost_penalty</definition>
        <argsstring>(x)</argsstring>
        <name>feasable_cost_penalty</name>
        <qualifiedname>examples.vessel.feasable_cost_penalty</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="73" column="1" bodyfile="examples/vessel.py" bodystart="73" bodyend="75"/>
        <references refid="namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8" compoundref="vessel_8py" startline="69" endline="72">examples.vessel.feasable_cost</references>
        <references refid="namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af" compoundref="vessel_8py" startline="66" endline="68">examples.vessel.penalty</references>
        <referencedby refid="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" compoundref="vessel_8py" startline="89" endline="97">examples.vessel.print_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1abe6b8db835b58ffb639eac1a6de1172f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.penalty_int</definition>
        <argsstring>(x)</argsstring>
        <name>penalty_int</name>
        <qualifiedname>examples.vessel.penalty_int</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="76" column="1" bodyfile="examples/vessel.py" bodystart="76" bodyend="82"/>
        <referencedby refid="namespaceexamples_1_1vessel_1a1b1d80a77c03ba9019a2ab8f7820a471" compoundref="vessel_8py" startline="83" endline="85">examples.vessel.penalty_int_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1a1b1d80a77c03ba9019a2ab8f7820a471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.penalty_int_all</definition>
        <argsstring>(x)</argsstring>
        <name>penalty_int_all</name>
        <qualifiedname>examples.vessel.penalty_int_all</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="83" column="1" bodyfile="examples/vessel.py" bodystart="83" bodyend="85"/>
        <references refid="namespaceexamples_1_1vessel_1abe6b8db835b58ffb639eac1a6de1172f" compoundref="vessel_8py" startline="76" endline="82">examples.vessel.penalty_int</references>
        <referencedby refid="namespaceexamples_1_1vessel_1afff096102e6cd9739381cfac25c0e450" compoundref="vessel_8py" startline="86" endline="88">examples.vessel.cost_int_penalty</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1afff096102e6cd9739381cfac25c0e450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.cost_int_penalty</definition>
        <argsstring>(x)</argsstring>
        <name>cost_int_penalty</name>
        <qualifiedname>examples.vessel.cost_int_penalty</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="86" column="1" bodyfile="examples/vessel.py" bodystart="86" bodyend="88"/>
        <references refid="namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8" compoundref="vessel_8py" startline="69" endline="72">examples.vessel.feasable_cost</references>
        <references refid="namespaceexamples_1_1vessel_1a1b1d80a77c03ba9019a2ab8f7820a471" compoundref="vessel_8py" startline="83" endline="85">examples.vessel.penalty_int_all</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.print_result</definition>
        <argsstring>(ret, best, t0, i)</argsstring>
        <name>print_result</name>
        <qualifiedname>examples.vessel.print_result</qualifiedname>
        <param>
          <type>ret</type>
          <defname>ret</defname>
        </param>
        <param>
          <type>best</type>
          <defname>best</defname>
        </param>
        <param>
          <type>t0</type>
          <defname>t0</defname>
        </param>
        <param>
          <type>i</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="89" column="1" bodyfile="examples/vessel.py" bodystart="89" bodyend="97"/>
        <references refid="namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca" compoundref="vessel_8py" startline="51" endline="56">examples.vessel._feasible</references>
        <references refid="namespaceexamples_1_1vessel_1a95a5805807fc62c2224ce037be72bee4" compoundref="vessel_8py" startline="73" endline="75">examples.vessel.feasable_cost_penalty</references>
        <references refid="namespaceexamples_1_1vessel_1a0c4af533fa7c354d642eaf31de503db6" compoundref="vessel_8py" startline="38">examples.vessel.format</references>
        <references refid="namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af" compoundref="vessel_8py" startline="66" endline="68">examples.vessel.penalty</references>
        <references refid="namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc" compoundref="vessel_8py" startline="62" endline="65">examples.vessel.weight</references>
        <referencedby refid="namespaceexamples_1_1vessel_1a876eb8e7aeeebb524d51f11ef3ecc488" compoundref="vessel_8py" startline="98" endline="108">examples.vessel.test_minimize_SLSQP</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1vessel_1a876eb8e7aeeebb524d51f11ef3ecc488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.vessel.test_minimize_SLSQP</definition>
        <argsstring>(fun, num)</argsstring>
        <name>test_minimize_SLSQP</name>
        <qualifiedname>examples.vessel.test_minimize_SLSQP</qualifiedname>
        <param>
          <type>fun</type>
          <defname>fun</defname>
        </param>
        <param>
          <type>num</type>
          <defname>num</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/vessel.py" line="98" column="1" bodyfile="examples/vessel.py" bodystart="98" bodyend="108"/>
        <references refid="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" compoundref="vessel_8py" startline="89" endline="97">examples.vessel.print_result</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1vessel" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>cylindrical<sp/>vessel<sp/>is<sp/>capped<sp/>at<sp/>both<sp/>ends<sp/>by<sp/>hemispherical<sp/>heads.<sp/>The<sp/>objective<sp/>is<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>minimize<sp/>the<sp/>total<sp/>weight,<sp/>including<sp/>the<sp/>weight<sp/>of<sp/>material,<sp/>forming<sp/>and<sp/>welding.<sp/>There<sp/>are<sp/>four<sp/>design<sp/>variables:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>x1:<sp/>thickness<sp/>of<sp/>the<sp/>shell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>x2:<sp/>thickness<sp/>of<sp/>the<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>x3:<sp/>inner<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>x4<sp/>length<sp/>of<sp/>cylindrical<sp/>section<sp/>of<sp/>the<sp/>vessel,<sp/>not<sp/>including<sp/>the<sp/>head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>x1<sp/>and<sp/>x2<sp/>are<sp/>integer<sp/>multiples<sp/>of<sp/>0.0625<sp/>inch,<sp/>witch<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>available<sp/>thickness<sp/>of<sp/>rolled<sp/>steel<sp/>plates,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>and<sp/>x3<sp/>and<sp/>x4<sp/>are<sp/>continuous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>x1<sp/>and<sp/>x2<sp/>are<sp/>made<sp/>discrete<sp/>by<sp/>calling<sp/>&apos;_feasible(x)&apos;<sp/>in<sp/>the<sp/>objective<sp/>function<sp/>&apos;feasable_cost_penalty()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>works<sp/>well<sp/>with<sp/>derivative<sp/>free<sp/>optimizers,<sp/>but<sp/>never<sp/>do<sp/>this<sp/>with<sp/>scipy.minimize.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Try<sp/>&apos;test_minimize_SLSQP&apos;<sp/>to<sp/>see<sp/>why.<sp/>But<sp/>this<sp/>can<sp/>be<sp/>fixed<sp/>by<sp/>using<sp/>&apos;cost_int_penalty&apos;<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>objective<sp/>function<sp/>which<sp/>adds<sp/>a<sp/>penalty<sp/>for<sp/>the<sp/>&quot;multiples<sp/>of<sp/>0.0625&quot;<sp/>violation.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>With<sp/>fcmaes<sp/>retry<sp/>usually<sp/>you<sp/>can<sp/>just<sp/>&quot;discretize&quot;<sp/>arguments.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>example<sp/>is<sp/>taken<sp/>from<sp/>https://www.sciencedirect.com/science/article/abs/pii/S0096300306015098</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds,<sp/>minimize</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry,<sp/>advretry</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dtime,<sp/>random_x,<sp/>logger</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="38" refid="namespaceexamples_1_1vessel_1a0c4af533fa7c354d642eaf31de503db6" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="namespaceexamples_1_1vessel_1a3cd8872c36b8452b5186f2074bbccb0d" refkind="member"><highlight class="normal">fac<sp/>=<sp/>0.0625</highlight></codeline>
<codeline lineno="42" refid="namespaceexamples_1_1vessel_1aee86003cb6bbb331c8c6c5484c0f6d91" refkind="member"><highlight class="normal">bounds<sp/>=<sp/>Bounds([1.1,<sp/>0.6,<sp/>0,<sp/>0],<sp/>[240,<sp/>240,<sp/>240,<sp/>240])<sp/></highlight><highlight class="comment">#<sp/>six<sp/>inequalities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">#bounds<sp/>=<sp/>Bounds([0,<sp/>0,<sp/>0,<sp/>0],<sp/>[240,<sp/>240,<sp/>240,<sp/>240])<sp/>#<sp/>four<sp/>inequalities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="namespaceexamples_1_1vessel_1a9b9b7d9b525b0e32dec4a679dd25fb79" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1a9b9b7d9b525b0e32dec4a679dd25fb79" kindref="member">discrete</ref>(x):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>feasible_x<sp/>=<sp/>x<sp/>-<sp/>x<sp/>%<sp/>fac</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>feasible_x<sp/>&lt;<sp/>bounds.lb[0]:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feasible_x<sp/>+=<sp/>fac</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feasible_x</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca" kindref="member">_feasible</ref>(x):</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.array(x)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/><ref refid="namespaceexamples_1_1vessel_1a9b9b7d9b525b0e32dec4a679dd25fb79" kindref="member">discrete</ref>(x[0])</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>x[1]<sp/>=<sp/><ref refid="namespaceexamples_1_1vessel_1a9b9b7d9b525b0e32dec4a679dd25fb79" kindref="member">discrete</ref>(x[1])</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.maximum(np.minimum(x,<sp/>bounds.ub),<sp/>bounds.lb)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespaceexamples_1_1vessel_1acf59dad747a84939ba5b8e0da39d030b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1acf59dad747a84939ba5b8e0da39d030b" kindref="member">constraint_ineq</ref>(x):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[x[0]<sp/>-<sp/>0.0193*x[2],</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1]<sp/>-<sp/>0.00954*x[2],</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>math.pi*x[2]**2<sp/>*<sp/>x[3]<sp/>+<sp/>(4/3)*math.pi*x[2]**3<sp/>-<sp/>1296000]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc" kindref="member">weight</ref>(x):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.6224*x[0]*x[2]*x[3]<sp/>+<sp/>1.7781*x[1]*x[2]**2<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>3.1661<sp/>*<sp/>x[0]**2<sp/>*<sp/>x[3]<sp/>+<sp/>19.84*x[0]**2<sp/>*<sp/>x[2]</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af" kindref="member">penalty</ref>(x):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-np.sum(np.minimum(<ref refid="namespaceexamples_1_1vessel_1acf59dad747a84939ba5b8e0da39d030b" kindref="member">constraint_ineq</ref>(x),<sp/>0))</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8" kindref="member">feasable_cost</ref>(x):<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca" kindref="member">_feasible</ref>(x)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc" kindref="member">weight</ref>(x)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="namespaceexamples_1_1vessel_1a95a5805807fc62c2224ce037be72bee4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1a95a5805807fc62c2224ce037be72bee4" kindref="member">feasable_cost_penalty</ref>(x):<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8" kindref="member">feasable_cost</ref>(x)<sp/>+<sp/>100000*<ref refid="namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af" kindref="member">penalty</ref>(x)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespaceexamples_1_1vessel_1abe6b8db835b58ffb639eac1a6de1172f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1abe6b8db835b58ffb639eac1a6de1172f" kindref="member">penalty_int</ref>(x):</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>feasible_x<sp/>=<sp/>x<sp/>-<sp/>x<sp/>%<sp/>fac</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x<sp/>-<sp/>feasible_x<sp/>&lt;<sp/>0.5<sp/>*<sp/>fac:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>-<sp/>feasible_x</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feasible_x<sp/>+<sp/>fac<sp/>-<sp/>x</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="namespaceexamples_1_1vessel_1a1b1d80a77c03ba9019a2ab8f7820a471" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1a1b1d80a77c03ba9019a2ab8f7820a471" kindref="member">penalty_int_all</ref>(x):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1vessel_1abe6b8db835b58ffb639eac1a6de1172f" kindref="member">penalty_int</ref>(x[0])<sp/>+<sp/><ref refid="namespaceexamples_1_1vessel_1abe6b8db835b58ffb639eac1a6de1172f" kindref="member">penalty_int</ref>(x[1])</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="namespaceexamples_1_1vessel_1afff096102e6cd9739381cfac25c0e450" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1afff096102e6cd9739381cfac25c0e450" kindref="member">cost_int_penalty</ref>(x):<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1vessel_1a68aa194637f52a545cb4d8e1f552f3f8" kindref="member">feasable_cost</ref>(x)<sp/>+<sp/>100000*<ref refid="namespaceexamples_1_1vessel_1a1b1d80a77c03ba9019a2ab8f7820a471" kindref="member">penalty_int_all</ref>(x)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" kindref="member">print_result</ref>(ret,<sp/>best,<sp/>t0,<sp/>i):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="namespaceexamples_1_1vessel_1a95a5805807fc62c2224ce037be72bee4" kindref="member">feasable_cost_penalty</ref>(ret.x)<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="namespaceexamples_1_1vessel_1aa26c59f34fa12f86c197263f10fd1dca" kindref="member">_feasible</ref>(ret.x)<sp/></highlight><highlight class="comment">#<sp/>make<sp/>sure<sp/>result<sp/>is<sp/>_feasible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>val<sp/>&lt;<sp/>best:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>val</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>best<sp/>=<sp/>{2:.8f}<sp/>f(xmin)<sp/>=<sp/>{3:.5f}<sp/>ineq<sp/>=<sp/>{4:.8f}<sp/>x<sp/>=<sp/>{5:s}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1vessel_1a0c4af533fa7c354d642eaf31de503db6" kindref="member">format</ref>(i+1,<sp/>dtime(t0),<sp/>best,<sp/><ref refid="namespaceexamples_1_1vessel_1adda1cdd4b5189fb2a4b564572cdf0dcc" kindref="member">weight</ref>(x),<sp/><ref refid="namespaceexamples_1_1vessel_1a8adc06d6d9db18a2bfac93d6483c23af" kindref="member">penalty</ref>(x),<sp/>str(x)))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="namespaceexamples_1_1vessel_1a876eb8e7aeeebb524d51f11ef3ecc488" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1vessel_1a876eb8e7aeeebb524d51f11ef3ecc488" kindref="member">test_minimize_SLSQP</ref>(fun,<sp/>num):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ineq_cons<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ineq&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fun&apos;</highlight><highlight class="normal"><sp/>:<sp/>constraint_ineq}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>best<sp/>=<sp/>np.inf</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>time.perf_counter();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess<sp/>=<sp/>random_x(bounds.lb,<sp/>bounds.ub)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>minimize(fun,<sp/>x0<sp/>=<sp/>guess,<sp/>bounds<sp/>=<sp/>bounds,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method=</highlight><highlight class="stringliteral">&apos;SLSQP&apos;</highlight><highlight class="normal">,<sp/>constraints=[ineq_cons])</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ret.success:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/><ref refid="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" kindref="member">print_result</ref>(ret,<sp/>best,<sp/>t0,<sp/>i)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>try<sp/>as<sp/>alternative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>test_minimize_SLSQP(feasable_cost,<sp/>10000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>works<sp/>much<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>test_minimize_SLSQP(cost_int_penalty,<sp/>10000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="namespaceexamples_1_1vessel_1a75936765aaa289c75f230ba4fa2dbb4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>time.perf_counter();</highlight></codeline>
<codeline lineno="117" refid="namespaceexamples_1_1vessel_1a2720db2f81c03590516dd5482790f916" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>advretry.minimize(feasable_cost_penalty,<sp/>bounds,<sp/>num_retries=320)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>retry.minimize(feasable_cost_penalty,<sp/>bounds,<sp/>logger<sp/>=<sp/>logger(),<sp/>num_retries=32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1vessel_1aa3edc89d9a8061a39a6985e4a588ec96" kindref="member">print_result</ref>(ret,<sp/>10000,<sp/>t0,<sp/>0)</highlight></codeline>
    </programlisting>
    <location file="examples/vessel.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1optimizer_1_1_cma__python" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::optimizer::Cma_python</compoundname>
    <basecompoundref refid="classfcmaes_1_1optimizer_1_1_optimizer" prot="public" virt="non-virtual">fcmaes.optimizer.Optimizer</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_python::popsize</definition>
        <argsstring></argsstring>
        <name>popsize</name>
        <qualifiedname>fcmaes.optimizer.Cma_python.popsize</qualifiedname>
        <initializer>=  popsize</initializer>
        <briefdescription>
<para>Population size used by the optimization algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1230" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1230" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" compoundref="benchmark__gtop__pygmo_8py" startline="103" endline="118">examples.benchmark_gtop_pygmo.Cma_pyg.minimize</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" compoundref="benchmark__gtop__pygmo_8py" startline="127" endline="137">examples.benchmark_gtop_pygmo.De_pyg.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a" compoundref="optimizer_8py" startline="1647" endline="1679">fcmaes.optimizer.Cma_lw.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0" compoundref="optimizer_8py" startline="1520" endline="1552">fcmaes.optimizer.Cma_orig.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388" compoundref="optimizer_8py" startline="2418" endline="2431">fcmaes.optimizer.De_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" compoundref="optimizer_8py" startline="2858" endline="2864">fcmaes.optimizer.Differential_evolution.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_python::stop_fitness</definition>
        <argsstring></argsstring>
        <name>stop_fitness</name>
        <qualifiedname>fcmaes.optimizer.Cma_python.stop_fitness</qualifiedname>
        <initializer>=  stop_fitness</initializer>
        <briefdescription>
<para>Target fitness value. </para>
        </briefdescription>
        <detaileddescription>
<para>If reached, the optimization </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1231" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1231" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__python_1a22a6511d0a158b47ceb15c09119ce9f7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_python::update_gap</definition>
        <argsstring></argsstring>
        <name>update_gap</name>
        <qualifiedname>fcmaes.optimizer.Cma_python.update_gap</qualifiedname>
        <initializer>=  update_gap</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1232" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1232" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_python::guess</definition>
        <argsstring></argsstring>
        <name>guess</name>
        <qualifiedname>fcmaes.optimizer.Cma_python.guess</qualifiedname>
        <initializer>=  guess</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1233" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1233" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a" compoundref="optimizer_8py" startline="1647" endline="1679">fcmaes.optimizer.Cma_lw.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0" compoundref="optimizer_8py" startline="1520" endline="1552">fcmaes.optimizer.Cma_orig.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" compoundref="optimizer_8py" startline="2596" endline="2603">fcmaes.optimizer.Da_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_python::sdevs</definition>
        <argsstring></argsstring>
        <name>sdevs</name>
        <qualifiedname>fcmaes.optimizer.Cma_python.sdevs</qualifiedname>
        <initializer>=  sdevs</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1234" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1234" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0" compoundref="optimizer_8py" startline="1520" endline="1552">fcmaes.optimizer.Cma_orig.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__python_1a3ba6830a8e6ee037faaa309c2e68dce0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_python::normalize</definition>
        <argsstring></argsstring>
        <name>normalize</name>
        <qualifiedname>fcmaes.optimizer.Cma_python.normalize</qualifiedname>
        <initializer>=  normalize</initializer>
        <briefdescription>
<para>Whether to normalize input data during the optimization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1235" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1235" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_python::workers</definition>
        <argsstring></argsstring>
        <name>workers</name>
        <qualifiedname>fcmaes.optimizer.Cma_python.workers</qualifiedname>
        <initializer>=  workers</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1236" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1236" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a" compoundref="optimizer_8py" startline="1647" endline="1679">fcmaes.optimizer.Cma_lw.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_cma__python_1a82643dd56a018e574b60be0a2dfae303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.Cma_python.__init__</definition>
        <argsstring>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[float] sdevs=None, Optional[int] workers=None, Optional[int] update_gap=None, Optional[bool] normalize=True)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.optimizer.Cma_python.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <array>[int]</array>
          <defval>50000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <array>[int]</array>
          <defval>31</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>sdevs</declname>
          <array>[float]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>workers</declname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>update_gap</declname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>normalize</declname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <briefdescription>
<para>Initializes the CMA-ES optimizer with its configuration parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method sets up the optimizer by initializing its key attributes based on the
   user-specified or default values. It inherits the generic optimizer functionality
   and extends it with CMA-ES-specific parameters.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional maximum number of evaluations allowed (default 50000). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional population size for the CMA-ES algorithm (default 31). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial guess for the solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional fitness value at which optimization stops (default -inf). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sdevs</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional standard deviations for the distribution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workers</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional number of workers for parallel evaluations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>update_gap</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional number of generations between updates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional boolean to enable normalization of input parameters (default True). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1220" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1228" bodyend="1237"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[np.ndarray, float, int]</type>
        <definition> Tuple[np.ndarray, float, int] fcmaes.optimizer.Cma_python.minimize</definition>
        <argsstring>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike, Callable]] sdevs=0.1, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.optimizer.Cma_python.minimize</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>guess</defname>
          <array>[Bounds]</array>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <defname>sdevs</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional]</type>
          <declname>sdevs</declname>
          <defname>rg</defname>
          <array>[Union[float, ArrayLike, Callable]</array>
          <defval>0.1</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>rg</declname>
          <defname>store</defname>
          <array>[Generator]</array>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>store</type>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Minimizes a provided objective function using the CMA-ES optimization algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method utilizes the Covariance Matrix Adaptation Evolution Strategy (CMA-ES)
   to perform function minimization. It supports optional parameters such as bounds,
   initial guesses, and standard deviations for sampling, among others. The method
   returns the optimal solution, the corresponding function value, and the number
   of function evaluations performed.


       fun (Callable[[ArrayLike], float]): The objective function to be minimized. It
           should take an input array and return a scalar function value.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The bounds within which the solution is searched. Can be None for unbounded optimization. guess (Optional[ArrayLike], optional): The initial guess for the solution. If not provided, an internal guess will be used. sdevs (Optional[Union[float, ArrayLike, Callable]], optional): The standard deviations used for sampling around the guess. Defaults to 0.1. rg (Optional[Generator], optional): The random number generator for the optimization process. Defaults to Generator(PCG64DXSM()). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional object used for storing additional metadata or state during optimization.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple[np.ndarray, float, int]: A tuple containing:<itemizedlist>
<listitem><para>The optimal solution as an array.</para>
</listitem><listitem><para>The minimum function value achieved.</para>
</listitem><listitem><para>The number of function evaluations performed. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1267" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1273" bodyend="1285"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61" compoundref="advretry_8py" startline="784" endline="786">fcmaes.advretry.Store.get_count_runs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" compoundref="optimizer_8py" startline="320" endline="323">fcmaes.optimizer.Optimizer.get_count_runs</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1ad60e13f5cfc1f2c51e12bc24507708e9" compoundref="cmaes_8py" startline="204">fcmaes.cmaes.Cmaes.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a" compoundref="optimizer_8py" startline="1233">fcmaes.optimizer.Cma_python.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1af4d308e51cb40add76e8a257dc54e634" compoundref="optimizer_8py" startline="902">fcmaes.optimizer.Crfmnes.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a01fc558e855be7732876a6e5facf3d1c" compoundref="optimizer_8py" startline="1003">fcmaes.optimizer.Crfmnes_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a3acb28558e183337fbc25d0f30dfc2a0" compoundref="optimizer_8py" startline="1116">fcmaes.optimizer.Pgpe_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" compoundref="optimizer_8py" startline="304" endline="307">fcmaes.optimizer.Optimizer.max_eval_num</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e" compoundref="evaluator_8py" startline="415">fcmaes.evaluator._fitness.normalize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a3ba6830a8e6ee037faaa309c2e68dce0" compoundref="optimizer_8py" startline="1235">fcmaes.optimizer.Cma_python.normalize</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df" compoundref="cmaes_8py" startline="223">fcmaes.cmaes.Cmaes.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" compoundref="cmaescpp_8py" startline="238">fcmaes.cmaescpp.ACMA_C.popsize</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" compoundref="crfmnescpp_8py" startline="221">fcmaes.crfmnescpp.CRFMNES_C.popsize</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1ac57257a177f51fb2637120cc3bf7ac55" compoundref="de_8py" startline="305">fcmaes.de.DE.popsize</references>
        <references refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad122a7d34bd51afeb06228ad811f85ce" compoundref="decpp_8py" startline="293">fcmaes.decpp.DE_C.popsize</references>
        <references refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6" compoundref="mode_8py" startline="487">fcmaes.mode.MODE.popsize</references>
        <references refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ac85826131061fe5596f9420ff628f582" compoundref="modecpp_8py" startline="404">fcmaes.modecpp.MODE_C.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371" compoundref="optimizer_8py" startline="1230">fcmaes.optimizer.Cma_python.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1abf110ededa79f1101d0acefadef018f8" compoundref="optimizer_8py" startline="900">fcmaes.optimizer.Crfmnes.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1adf8a89f1eba94649ba1fbafd89e68ba8" compoundref="optimizer_8py" startline="1001">fcmaes.optimizer.Crfmnes_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1ad8bb83e394a209e90761b1d77b424e47" compoundref="optimizer_8py" startline="1114">fcmaes.optimizer.Pgpe_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c" compoundref="optimizer_8py" startline="1234">fcmaes.optimizer.Cma_python.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1ac325129f209caae80b300744683acf34" compoundref="optimizer_8py" startline="903">fcmaes.optimizer.Crfmnes.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a87d76bc7c9ce8d7cce77354a5bd3415b" compoundref="optimizer_8py" startline="1004">fcmaes.optimizer.Crfmnes_cpp.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a32af3f567e2852891077542f09c90ec1" compoundref="optimizer_8py" startline="1117">fcmaes.optimizer.Pgpe_cpp.sdevs</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1ab77d778b85b64826f6a8e7c004387f35" compoundref="cmaes_8py" startline="244">fcmaes.cmaes.Cmaes.stop_fitness</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1a22676b41ab3ab0d910bda941601cb9c4" compoundref="de_8py" startline="306">fcmaes.de.DE.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f" compoundref="optimizer_8py" startline="1231">fcmaes.optimizer.Cma_python.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1a784caafbf6afcebd51d20067ead7aaae" compoundref="optimizer_8py" startline="901">fcmaes.optimizer.Crfmnes.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a241df60d5265b688e9959feca89318fb" compoundref="optimizer_8py" startline="1002">fcmaes.optimizer.Crfmnes_cpp.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8927d734b23546a18e42e14ade1569e5" compoundref="optimizer_8py" startline="1115">fcmaes.optimizer.Pgpe_cpp.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a22a6511d0a158b47ceb15c09119ce9f7" compoundref="optimizer_8py" startline="1232">fcmaes.optimizer.Cma_python.update_gap</references>
        <references refid="classfcmaes_1_1evaluator_1_1_evaluator_1ae804d4d3f546dd5277b8592560a820db" compoundref="evaluator_8py" startline="220">fcmaes.evaluator.Evaluator.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca" compoundref="optimizer_8py" startline="1236">fcmaes.optimizer.Cma_python.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1a3dbb8d59213de71c0f3b5b9b74c3751b" compoundref="optimizer_8py" startline="904">fcmaes.optimizer.Crfmnes.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a8407a495267d4a58ad2b1364eb49b79e" compoundref="optimizer_8py" startline="1005">fcmaes.optimizer.Crfmnes_cpp.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8862c3af607ca2bb3c07bbef226691aa" compoundref="optimizer_8py" startline="1118">fcmaes.optimizer.Pgpe_cpp.workers</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="classfcmaes_1_1optimizer_1_1_cma__python" kindref="compound">Cma_python</ref> optimizer class. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements the CMA-ES optimization algorithm with additional customizable parameters. It is designed to minimize objective functions within provided bounds and constraints.</para>
<para><verbatim>   workers (int or None): Number of workers for parallelized evaluations.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fcmaes.optimizer.Cma_python</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__python"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.optimizer.Cma_python</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__python"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/optimizer.py" line="1177" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1177" bodyend="1285"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__python_1a82643dd56a018e574b60be0a2dfae303" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>get_count_runs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>guess</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>max_eval_num</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>max_evaluations</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>minimize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>name</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__python_1a3ba6830a8e6ee037faaa309c2e68dce0" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>normalize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>popsize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>sdevs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>stop_fitness</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__python_1a22a6511d0a158b47ceb15c09119ce9f7" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>update_gap</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_python</scope><name>workers</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

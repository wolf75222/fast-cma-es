<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1optimizer_1_1_optimizer" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::optimizer::Optimizer</compoundname>
    <derivedcompoundref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg" prot="public" virt="non-virtual">examples.benchmark_gtop_pygmo.Cma_pyg</derivedcompoundref>
    <derivedcompoundref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg" prot="public" virt="non-virtual">examples.benchmark_gtop_pygmo.De_pyg</derivedcompoundref>
    <derivedcompoundref refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a" prot="public" virt="non-virtual">examples.maxcut.fcmaes_SPSA</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_basin__hopping" prot="public" virt="non-virtual">fcmaes.optimizer.Basin_hopping</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" prot="public" virt="non-virtual">fcmaes.optimizer.Bite_cpp</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_choice" prot="public" virt="non-virtual">fcmaes.optimizer.Choice</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell" prot="public" virt="non-virtual">fcmaes.optimizer.Cma_ask_tell</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_cma__awm" prot="public" virt="non-virtual">fcmaes.optimizer.Cma_awm</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_cma__cpp" prot="public" virt="non-virtual">fcmaes.optimizer.Cma_cpp</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_cma__lw" prot="public" virt="non-virtual">fcmaes.optimizer.Cma_lw</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_cma__orig" prot="public" virt="non-virtual">fcmaes.optimizer.Cma_orig</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_cma__python" prot="public" virt="non-virtual">fcmaes.optimizer.Cma_python</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_cma__sep" prot="public" virt="non-virtual">fcmaes.optimizer.Cma_sep</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_crfmnes" prot="public" virt="non-virtual">fcmaes.optimizer.Crfmnes</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp" prot="public" virt="non-virtual">fcmaes.optimizer.Crfmnes_cpp</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_da__cpp" prot="public" virt="non-virtual">fcmaes.optimizer.Da_cpp</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_de__ask__tell" prot="public" virt="non-virtual">fcmaes.optimizer.De_ask_tell</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_de__cpp" prot="public" virt="non-virtual">fcmaes.optimizer.De_cpp</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_de__python" prot="public" virt="non-virtual">fcmaes.optimizer.De_python</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_differential__evolution" prot="public" virt="non-virtual">fcmaes.optimizer.Differential_evolution</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_dual__annealing" prot="public" virt="non-virtual">fcmaes.optimizer.Dual_annealing</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_minimize" prot="public" virt="non-virtual">fcmaes.optimizer.Minimize</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_n_lopt" prot="public" virt="non-virtual">fcmaes.optimizer.NLopt</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp" prot="public" virt="non-virtual">fcmaes.optimizer.Pgpe_cpp</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_sequence" prot="public" virt="non-virtual">fcmaes.optimizer.Sequence</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1_shgo" prot="public" virt="non-virtual">fcmaes.optimizer.Shgo</derivedcompoundref>
    <derivedcompoundref refid="classfcmaes_1_1optimizer_1_1random__search" prot="public" virt="non-virtual">fcmaes.optimizer.random_search</derivedcompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Optimizer::max_evaluations</definition>
        <argsstring></argsstring>
        <name>max_evaluations</name>
        <qualifiedname>fcmaes.optimizer.Optimizer.max_evaluations</qualifiedname>
        <initializer>=  max_evaluations</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="290" column="1" bodyfile="fcmaes/optimizer.py" bodystart="290" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" compoundref="optimizer_8py" startline="304" endline="307">fcmaes.optimizer.Optimizer.max_eval_num</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a" compoundref="optimizer_8py" startline="1647" endline="1679">fcmaes.optimizer.Cma_lw.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Optimizer::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>fcmaes.optimizer.Optimizer.name</qualifiedname>
        <initializer>=  name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="291" column="1" bodyfile="fcmaes/optimizer.py" bodystart="291" bodyend="-1"/>
        <referencedby refid="classexamples_1_1reproblem_1_1re__problem_1aaa502e5bfc8d1a94d57be0856676919c" compoundref="reproblem_8py" startline="83" endline="86">examples.reproblem.re_problem.fun</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.Optimizer.__init__</definition>
        <argsstring>(self, Optional[int] max_evaluations=50000, Optional[str] name=&apos;&apos;)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.optimizer.Optimizer.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <array>[int]</array>
          <defval>50000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>name</declname>
          <array>[str]</array>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
<para>Initializes the class with specific parameters including the maximum number of evaluations and the name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional[int]. The maximum number of evaluations allowed. Defaults to 50000. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional[str]. The name or identifier for the instance. Defaults to an empty string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="287" column="1" bodyfile="fcmaes/optimizer.py" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.Optimizer.max_eval_num</definition>
        <argsstring>(self, store=None)</argsstring>
        <name>max_eval_num</name>
        <qualifiedname>fcmaes.optimizer.Optimizer.max_eval_num</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>store</type>
          <defname>store</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Evaluates and returns the maximum number of evaluations based on the provided store or the object&apos;s default value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>A store object that provides the <computeroutput>eval_num</computeroutput> method.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>int The maximum number of evaluations, as determined by the store if provided, or the object&apos;s default maximum evaluations value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="304" column="1" bodyfile="fcmaes/optimizer.py" bodystart="304" bodyend="307"/>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1ae9bf236b9972f1dbb22e45c0938591b3" compoundref="cmaes_8py" startline="241">fcmaes.cmaes.Cmaes.max_evaluations</references>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" compoundref="optimizer_8py" startline="290">fcmaes.optimizer.Optimizer.max_evaluations</references>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" compoundref="benchmark__gtop__pygmo_8py" startline="103" endline="118">examples.benchmark_gtop_pygmo.Cma_pyg.minimize</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" compoundref="benchmark__gtop__pygmo_8py" startline="127" endline="137">examples.benchmark_gtop_pygmo.De_pyg.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_basin__hopping_1ab665db39cdee947aae4959f7d2f7b13c" compoundref="optimizer_8py" startline="2987" endline="2999">fcmaes.optimizer.Basin_hopping.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0" compoundref="optimizer_8py" startline="1520" endline="1552">fcmaes.optimizer.Cma_orig.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_crfmnes_1aeaf53b0b1cef69245496384c9c5569fb" compoundref="optimizer_8py" startline="939" endline="949">fcmaes.optimizer.Crfmnes.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a28a1d5e195fa924386bd76c29a9f682d" compoundref="optimizer_8py" startline="1044" endline="1054">fcmaes.optimizer.Crfmnes_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" compoundref="optimizer_8py" startline="2596" endline="2603">fcmaes.optimizer.Da_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388" compoundref="optimizer_8py" startline="2418" endline="2431">fcmaes.optimizer.De_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" compoundref="optimizer_8py" startline="2858" endline="2864">fcmaes.optimizer.Differential_evolution.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_dual__annealing_1aae221326dd0bd3d5b646badbf6a59133" compoundref="optimizer_8py" startline="2787" endline="2794">fcmaes.optimizer.Dual_annealing.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a15393a3e9dbb73be5cf8e5c9cc6f8c2d" compoundref="optimizer_8py" startline="1156" endline="1166">fcmaes.optimizer.Pgpe_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1random__search_1a32252573912d707c4725f05041d70db1" compoundref="optimizer_8py" startline="2491" endline="2506">fcmaes.optimizer.random_search.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_shgo_1a58c5c9135b6b975bbbb07c8bbed731e2" compoundref="optimizer_8py" startline="3143" endline="3147">fcmaes.optimizer.Shgo.minimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.Optimizer.get_count_runs</definition>
        <argsstring>(self, store=None)</argsstring>
        <name>get_count_runs</name>
        <qualifiedname>fcmaes.optimizer.Optimizer.get_count_runs</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>store</type>
          <defname>store</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Gets the count of runs from the provided store. </para>
        </briefdescription>
        <detaileddescription>
<para>If no store is provided, returns 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>An object with a method <computeroutput>get_count_runs</computeroutput>. If None, the method returns 0.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>int The count of runs retrieved from the store, or 0 if the store is not provided. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="320" column="1" bodyfile="fcmaes/optimizer.py" bodystart="320" bodyend="323"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_crfmnes_1aeaf53b0b1cef69245496384c9c5569fb" compoundref="optimizer_8py" startline="939" endline="949">fcmaes.optimizer.Crfmnes.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a28a1d5e195fa924386bd76c29a9f682d" compoundref="optimizer_8py" startline="1044" endline="1054">fcmaes.optimizer.Crfmnes_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" compoundref="optimizer_8py" startline="2596" endline="2603">fcmaes.optimizer.Da_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a15393a3e9dbb73be5cf8e5c9cc6f8c2d" compoundref="optimizer_8py" startline="1156" endline="1166">fcmaes.optimizer.Pgpe_cpp.minimize</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Provides functionalities for optimization tasks. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is designed to handle optimization operations, allowing users to set a maximum number of evaluations and assign a specific name to the optimizer. It also has methods for retrieving the maximum evaluation number and counting runs, optionally integrating with a <computeroutput>store</computeroutput> object.</para>
<para><verbatim>   max_evaluations (int, optional): Maximum number of evaluations allowed for
       the optimizer. Default is 50000.
   name (str, optional): The name assigned to the optimizer. Default is an
       empty string.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>examples.benchmark_gtop_pygmo.Cma_pyg</label>
        <link refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>examples.benchmark_gtop_pygmo.De_pyg</label>
        <link refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>examples.maxcut.fcmaes_SPSA</label>
        <link refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
      <node id="5">
        <label>fcmaes.optimizer.Basin_hopping</label>
        <link refid="classfcmaes_1_1optimizer_1_1_basin__hopping"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>fcmaes.optimizer.Bite_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_bite__cpp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>fcmaes.optimizer.Choice</label>
        <link refid="classfcmaes_1_1optimizer_1_1_choice"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>fcmaes.optimizer.Cma_ask_tell</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>fcmaes.optimizer.Cma_awm</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__awm"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>fcmaes.optimizer.Cma_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__cpp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>fcmaes.optimizer.Cma_lw</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__lw"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>fcmaes.optimizer.Cma_orig</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__orig"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>fcmaes.optimizer.Cma_python</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__python"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>fcmaes.optimizer.Cma_sep</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__sep"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>fcmaes.optimizer.Crfmnes</label>
        <link refid="classfcmaes_1_1optimizer_1_1_crfmnes"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>fcmaes.optimizer.Crfmnes_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>fcmaes.optimizer.Da_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_da__cpp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>fcmaes.optimizer.De_ask_tell</label>
        <link refid="classfcmaes_1_1optimizer_1_1_de__ask__tell"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>fcmaes.optimizer.De_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_de__cpp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>fcmaes.optimizer.De_python</label>
        <link refid="classfcmaes_1_1optimizer_1_1_de__python"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>fcmaes.optimizer.Differential_evolution</label>
        <link refid="classfcmaes_1_1optimizer_1_1_differential__evolution"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>fcmaes.optimizer.Dual_annealing</label>
        <link refid="classfcmaes_1_1optimizer_1_1_dual__annealing"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>fcmaes.optimizer.Minimize</label>
        <link refid="classfcmaes_1_1optimizer_1_1_minimize"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>fcmaes.optimizer.NLopt</label>
        <link refid="classfcmaes_1_1optimizer_1_1_n_lopt"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>fcmaes.optimizer.Pgpe_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>fcmaes.optimizer.Sequence</label>
        <link refid="classfcmaes_1_1optimizer_1_1_sequence"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>fcmaes.optimizer.Shgo</label>
        <link refid="classfcmaes_1_1optimizer_1_1_shgo"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>fcmaes.optimizer.random_search</label>
        <link refid="classfcmaes_1_1optimizer_1_1random__search"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/optimizer.py" line="277" column="1" bodyfile="fcmaes/optimizer.py" bodystart="277" bodyend="323"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1a51efe265d8e041b095d8210878d7d7c1" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Optimizer</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Optimizer</scope><name>get_count_runs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Optimizer</scope><name>max_eval_num</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Optimizer</scope><name>max_evaluations</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Optimizer</scope><name>name</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

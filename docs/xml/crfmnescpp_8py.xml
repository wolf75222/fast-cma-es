<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="crfmnescpp_8py" kind="file" language="Python">
    <compoundname>crfmnescpp.py</compoundname>
    <innerclass refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c" prot="public">fcmaes::crfmnescpp::CRFMNES_C</innerclass>
    <innernamespace refid="namespacefcmaes">fcmaes</innernamespace>
    <innernamespace refid="namespacefcmaes_1_1crfmnescpp">fcmaes::crfmnescpp</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1ab1e7635b7e619545987ebfc9380c88e4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.optimizeCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>optimizeCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.optimizeCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.optimizeCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="356" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="356" bodyend="-1"/>
        <referencedby refid="namespacefcmaes_1_1crfmnescpp_1ae1a2ee01cfe0465cbd01fbb78c4fbb89" compoundref="crfmnescpp_8py" startline="108" endline="144">fcmaes.crfmnescpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1abc206b02ad5c66cfa53e924f992c530e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>fcmaes.crfmnescpp.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="357" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a9084cdfaf4cdbde49738fac2a361d8a1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.initCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>initCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.initCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.initCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="363" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a854e412144de71ef17b09d594acbd0e9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>fcmaes.crfmnescpp.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="370" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a2049b510a55914b1482f4f4b188e557f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.destroyCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>destroyCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.destroyCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.destroyCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="372" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="372" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a8108ee1a2f3dd941e1105a3491269572" compoundref="crfmnescpp_8py" startline="237" endline="239">fcmaes.crfmnescpp.CRFMNES_C.__del__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a0414b501fcc51390ff9f8dfe00b73910" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.askCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>askCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.askCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.askCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="375" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="375" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" compoundref="crfmnescpp_8py" startline="253" endline="267">fcmaes.crfmnescpp.CRFMNES_C.ask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1aa685b7d7f9e93560a1f6f08a3984a2f1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.tellCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>tellCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.tellCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.tellCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="378" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="378" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a30327c6b3f1ecc4add777f4a74e83533" compoundref="crfmnescpp_8py" startline="282" endline="289">fcmaes.crfmnescpp.CRFMNES_C.tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a4c655199ab31427cfb2afbdcdcd8dc68" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.populationCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>populationCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.populationCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.populationCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="382" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="382" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" compoundref="crfmnescpp_8py" startline="307" endline="321">fcmaes.crfmnescpp.CRFMNES_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a248d281b148a66ee941821abcdb364c4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.resultCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>resultCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.resultCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.resultCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="385" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="385" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" compoundref="crfmnescpp_8py" startline="339" endline="353">fcmaes.crfmnescpp.CRFMNES_C.result</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacefcmaes_1_1crfmnescpp_1ae1a2ee01cfe0465cbd01fbb78c4fbb89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OptimizeResult</type>
        <definition> OptimizeResult fcmaes.crfmnescpp.minimize</definition>
        <argsstring>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, input_sigma=0.3, popsize=32, max_evaluations=100000, workers=None, stop_fitness=-np.inf, rg=Generator(PCG64DXSM()), runid=0, normalize=False, use_constraint_violation=True, penalty_coef=1E5)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.crfmnescpp.minimize</qualifiedname>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>x0</defname>
          <array>[Bounds]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>x0</declname>
          <defname>input_sigma</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>input_sigma</type>
          <defname>popsize</defname>
          <defval>0.3</defval>
        </param>
        <param>
          <type>popsize</type>
          <defname>max_evaluations</defname>
          <defval>32</defval>
        </param>
        <param>
          <type>max_evaluations</type>
          <defname>workers</defname>
          <defval>100000</defval>
        </param>
        <param>
          <type>workers</type>
          <defname>stop_fitness</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>stop_fitness</type>
          <defname>rg</defname>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>rg</type>
          <defname>runid</defname>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>runid</type>
          <defname>normalize</defname>
          <defval>0</defval>
        </param>
        <param>
          <type>normalize</type>
          <defname>use_constraint_violation</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>use_constraint_violation</type>
          <defname>penalty_coef</defname>
          <defval>True</defval>
        </param>
        <param>
          <type>penalty_coef</type>
          <defval>1E5</defval>
        </param>
        <briefdescription>
<para>Minimizes a given objective function using the Covariance Matrix Adaptation Evolution Strategy with Constraint Handling (CR-FM-NES). </para>
        </briefdescription>
        <detaileddescription>
<para>The optimization adjusts variables within the provided bounds to achieve the minimum value of the given objective function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>The objective function to be minimized. It should be a callable that takes an array-like structure as input and returns a float value as output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional bounds for the variables as a <computeroutput>Bounds</computeroutput> object. If not specified, the search is unbounded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial guess for the independent variables as an array-like structure. If not provided, it is created randomly within the bounds. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input_sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial step size(s) for the search. It can be a float or callable providing an initial sigma value. If multi-dimensional, the mean is used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>The population size for the evolution. Must be an even number. If not specified, defaults to 32. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of function evaluations allowed during optimization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workers</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of parallel workers to use for evaluation. If <computeroutput>None</computeroutput> or <computeroutput>workers</computeroutput> &lt;= 1, no parallelism is applied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>The fitness value at which the optimization halts if surpassed. Default is negative infinity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>A random generator to control stochastic behavior. Defaults to an instance of <computeroutput>Generator</computeroutput> with a <computeroutput>PCG64DXSM</computeroutput> bit generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runid</parametername>
</parameternamelist>
<parameterdescription>
<para>An identifier for this particular optimization run. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to normalize the variables to the [0, 1] range during optimization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_constraint_violation</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to apply penalty-based handling for constraint violations during optimization. Defaults to True. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>penalty_coef</parametername>
</parameternamelist>
<parameterdescription>
<para>Penalty coefficient for constraint violation handling. Default is 1E5.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>OptimizeResult An object containing the optimization results, such as the optimized variables (<computeroutput>x</computeroutput>), the function value at the solution (<computeroutput>fun</computeroutput>), the number of function evaluations performed (<computeroutput>nfev</computeroutput>), the number of iterations (<computeroutput>nit</computeroutput>), the exit status code (<computeroutput>status</computeroutput>), and whether the optimization was successful (<computeroutput>success</computeroutput>).</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Raises an exception if the optimization failed, and an empty `OptimizeResult` is returned with default attributes indicating failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="95" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="108" bodyend="144"/>
        <references refid="namespacefcmaes_1_1crfmnescpp_1ab1e7635b7e619545987ebfc9380c88e4" compoundref="crfmnescpp_8py" startline="356">fcmaes.crfmnescpp.optimizeCRFMNES_C</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>============================================================================= </para>
    </briefdescription>
    <detaileddescription>
<para>Fast version 1.6.11</para>
<para>(c) 2025 – Dietmar Wolz (c) 2025 – Latitude</para>
<para>License MIT</para>
<para><itemizedlist>
<listitem><para><ref refid="crfmnescpp_8py" kindref="compound">crfmnescpp.py</ref></para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Description</title><para><itemizedlist>
<listitem><para>Eigen based implementation of Fast Moving Natural Evolution Strategy for High-Dimensional Problems (CR-FM-NES), see [2].</para>
</listitem><listitem><para>Derived from [3].</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="author"><para>:<itemizedlist>
<listitem><para>Dietmar Wolz <programlisting><codeline><highlight class="normal">-<sp/>romain.despoullains</highlight><highlight class="preprocessor">@latitude.eu</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">-<sp/>corentin.generet</highlight><highlight class="preprocessor">@latitude.eu</highlight></codeline>
</programlisting></para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>References</title><para><itemizedlist>
<listitem><para>[1] <ulink url="https://github.com/dietmarwo/fast-cma-es">https://github.com/dietmarwo/fast-cma-es</ulink></para>
</listitem><listitem><para>[2] <ulink url="https://arxiv.org/abs/2201.11422">https://arxiv.org/abs/2201.11422</ulink></para>
</listitem><listitem><para>[3] <ulink url="https://github.com/nomuramasahir0/crfmnes">https://github.com/nomuramasahir0/crfmnes</ulink></para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>Documentation</title><para><itemizedlist>
<listitem></listitem></itemizedlist>
</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacefcmaes_1_1crfmnescpp" refkind="compound"><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">=============================================================================</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/>Fast<sp/>CMA-ES<sp/>-<sp/>version<sp/>1.6.11</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/>(c)<sp/>2025<sp/>–<sp/>Dietmar<sp/>Wolz</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/>(c)<sp/>2025<sp/>–<sp/>Latitude</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/>License:<sp/>MIT</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/>File:</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/>-<sp/>crfmnescpp.py</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/>Description:</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/>-<sp/>Eigen<sp/>based<sp/>implementation<sp/>of<sp/>Fast<sp/>Moving<sp/>Natural<sp/>Evolution<sp/>Strategy</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>High-Dimensional<sp/>Problems<sp/>(CR-FM-NES),<sp/>see<sp/>[2].</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/>-<sp/>Derived<sp/>from<sp/>[3].</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/>Authors:</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/>-<sp/>Dietmar<sp/>Wolz</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/>-<sp/>romain.despoullains@latitude.eu</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/>-<sp/>corentin.generet@latitude.eu</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/>References:</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/>-<sp/>[1]<sp/>https://github.com/dietmarwo/fast-cma-es</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/>-<sp/>[2]<sp/>https://arxiv.org/abs/2201.11422</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/>-<sp/>[3]<sp/>https://github.com/nomuramasahir0/crfmnes</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/>Documentation:</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/>-</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">=============================================================================</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.random<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PCG64DXSM,<sp/>Generator</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OptimizeResult,<sp/>Bounds</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1evaluator" kindref="compound">fcmaes.evaluator</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>_check_bounds,<sp/>_get_bounds,<sp/>callback_par,<sp/>parallel,<sp/>call_back_par,<sp/>libcmalib</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Optional,<sp/>Callable,<sp/>Union</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ArrayLike</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">os.environ[</highlight><highlight class="stringliteral">&apos;MKL_DEBUG_CPU_TYPE&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;5&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1crfmnescpp_1ae1a2ee01cfe0465cbd01fbb78c4fbb89" kindref="member">minimize</ref>(fun:<sp/>Callable[[ArrayLike],<sp/>float],<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional[Bounds]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0:<sp/>Optional[ArrayLike]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>=<sp/>0.3,<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>32,<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>100000,<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness<sp/>=<sp/>-np.inf,<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg<sp/>=<sp/>Generator(PCG64DXSM()),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid=0,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_constraint_violation<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>penalty_coef<sp/>=<sp/>1E5</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>OptimizeResult:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Minimizes<sp/>a<sp/>given<sp/>objective<sp/>function<sp/>using<sp/>the<sp/>Covariance<sp/>Matrix<sp/>Adaptation<sp/>Evolution</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Strategy<sp/>with<sp/>Constraint<sp/>Handling<sp/>(CR-FM-NES).<sp/>The<sp/>optimization<sp/>adjusts<sp/>variables<sp/>within<sp/>the</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>provided<sp/>bounds<sp/>to<sp/>achieve<sp/>the<sp/>minimum<sp/>value<sp/>of<sp/>the<sp/>given<sp/>objective<sp/>function.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun:<sp/>The<sp/>objective<sp/>function<sp/>to<sp/>be<sp/>minimized.<sp/>It<sp/>should<sp/>be<sp/>a<sp/>callable<sp/>that<sp/>takes<sp/>an</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array-like<sp/>structure<sp/>as<sp/>input<sp/>and<sp/>returns<sp/>a<sp/>float<sp/>value<sp/>as<sp/>output.</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional<sp/>bounds<sp/>for<sp/>the<sp/>variables<sp/>as<sp/>a<sp/>`Bounds`<sp/>object.<sp/>If<sp/>not<sp/>specified,</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>search<sp/>is<sp/>unbounded.</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0:<sp/>Optional<sp/>initial<sp/>guess<sp/>for<sp/>the<sp/>independent<sp/>variables<sp/>as<sp/>an<sp/>array-like<sp/>structure.</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>not<sp/>provided,<sp/>it<sp/>is<sp/>created<sp/>randomly<sp/>within<sp/>the<sp/>bounds.</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma:<sp/>Initial<sp/>step<sp/>size(s)<sp/>for<sp/>the<sp/>search.<sp/>It<sp/>can<sp/>be<sp/>a<sp/>float<sp/>or<sp/>callable</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>providing<sp/>an<sp/>initial<sp/>sigma<sp/>value.<sp/>If<sp/>multi-dimensional,<sp/>the<sp/>mean<sp/>is<sp/>used.</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize:<sp/>The<sp/>population<sp/>size<sp/>for<sp/>the<sp/>evolution.<sp/>Must<sp/>be<sp/>an<sp/>even<sp/>number.<sp/>If<sp/>not</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specified,<sp/>defaults<sp/>to<sp/>32.</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations:<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>function<sp/>evaluations<sp/>allowed<sp/>during<sp/>optimization.</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers:<sp/>Number<sp/>of<sp/>parallel<sp/>workers<sp/>to<sp/>use<sp/>for<sp/>evaluation.<sp/>If<sp/>`None`<sp/>or<sp/>`workers`<sp/>&lt;=<sp/>1,</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>parallelism<sp/>is<sp/>applied.</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness:<sp/>The<sp/>fitness<sp/>value<sp/>at<sp/>which<sp/>the<sp/>optimization<sp/>halts<sp/>if<sp/>surpassed.</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default<sp/>is<sp/>negative<sp/>infinity.</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg:<sp/>A<sp/>random<sp/>generator<sp/>to<sp/>control<sp/>stochastic<sp/>behavior.<sp/>Defaults<sp/>to<sp/>an<sp/>instance<sp/>of</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`Generator`<sp/>with<sp/>a<sp/>`PCG64DXSM`<sp/>bit<sp/>generator.</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid:<sp/>An<sp/>identifier<sp/>for<sp/>this<sp/>particular<sp/>optimization<sp/>run.</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize:<sp/>A<sp/>boolean<sp/>indicating<sp/>whether<sp/>to<sp/>normalize<sp/>the<sp/>variables<sp/>to<sp/>the<sp/>[0,<sp/>1]<sp/>range</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>during<sp/>optimization.</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_constraint_violation:<sp/>Whether<sp/>to<sp/>apply<sp/>penalty-based<sp/>handling<sp/>for<sp/>constraint</highlight></codeline>
<codeline lineno="95" refid="namespacefcmaes_1_1crfmnescpp_1ae1a2ee01cfe0465cbd01fbb78c4fbb89" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>violations<sp/>during<sp/>optimization.<sp/>Defaults<sp/>to<sp/>True.</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>penalty_coef:<sp/>Penalty<sp/>coefficient<sp/>for<sp/>constraint<sp/>violation<sp/>handling.<sp/>Default<sp/>is<sp/>1E5.</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizeResult:<sp/>An<sp/>object<sp/>containing<sp/>the<sp/>optimization<sp/>results,<sp/>such<sp/>as<sp/>the<sp/>optimized</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables<sp/>(`x`),<sp/>the<sp/>function<sp/>value<sp/>at<sp/>the<sp/>solution<sp/>(`fun`),<sp/>the<sp/>number<sp/>of<sp/>function</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evaluations<sp/>performed<sp/>(`nfev`),<sp/>the<sp/>number<sp/>of<sp/>iterations<sp/>(`nit`),<sp/>the<sp/>exit<sp/>status<sp/>code</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(`status`),<sp/>and<sp/>whether<sp/>the<sp/>optimization<sp/>was<sp/>successful<sp/>(`success`).</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>Raises<sp/>an<sp/>exception<sp/>if<sp/>the<sp/>optimization<sp/>failed,<sp/>and<sp/>an<sp/>empty<sp/>`OptimizeResult`</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>returned<sp/>with<sp/>default<sp/>attributes<sp/>indicating<sp/>failure.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>lower,<sp/>upper,<sp/>guess<sp/>=<sp/>_check_bounds(bounds,<sp/>x0,<sp/>rg)<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>guess.size<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>popsize<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>32<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>popsize<sp/>%<sp/>2<sp/>==<sp/>1:<sp/></highlight><highlight class="comment">#<sp/>requires<sp/>even<sp/>popsize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>callable(input_sigma):</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma=input_sigma()</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.ndim(input_sigma)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>=<sp/>np.mean(input_sigma)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>dim<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>parfun<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(workers<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>workers<sp/>&lt;=<sp/>1)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="classfcmaes_1_1evaluator_1_1parallel" kindref="compound">parallel</ref>(fun,<sp/>workers)<sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>c_callback_par<sp/>=<sp/>call_back_par(<ref refid="classfcmaes_1_1evaluator_1_1callback__par" kindref="compound">callback_par</ref>(fun,<sp/>parfun))</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(dim+4)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1crfmnescpp_1ab1e7635b7e619545987ebfc9380c88e4" kindref="member">optimizeCRFMNES_C</ref>(runid,<sp/>c_callback_par,<sp/>dim,<sp/>array_type(*guess),<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lower<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*lower),<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>upper<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*upper),<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma,<sp/>max_evaluations,<sp/>stop_fitness,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize,<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1)),<sp/>penalty_coef,<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_constraint_violation,<sp/>normalize,<sp/>res_p)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>res[:dim]</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>res[dim]</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>int(res[dim+1])</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>int(res[dim+2])</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>int(res[dim+3])</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=x,<sp/>fun=val,<sp/>nfev=evals,<sp/>nit=iterations,<sp/>status=stop,<sp/>success=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>fun=sys.float_info.max,<sp/>nfev=0,<sp/>nit=0,<sp/>status=-1,<sp/>success=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>parfun<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parfun.stop()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c" kindref="compound">CRFMNES_C</ref>:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Minimization<sp/>of<sp/>a<sp/>scalar<sp/>function<sp/>of<sp/>one<sp/>or<sp/>more<sp/>variables<sp/>using<sp/>a<sp/>C++<sp/>CR-FM-NES</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>implementation,<sp/>interfaced<sp/>via<sp/>Python<sp/>using<sp/>ctypes.</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>implements<sp/>the<sp/>Covariance<sp/>Matrix<sp/>Adaptation<sp/>Evolution<sp/>Strategy</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(CR-FM-NES)<sp/>algorithm<sp/>for<sp/>numerical<sp/>optimization<sp/>problems.<sp/>It<sp/>relies<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>underlying<sp/>C++<sp/>implementation<sp/>for<sp/>the<sp/>actual<sp/>optimization<sp/>and<sp/>provides<sp/>a<sp/>Python</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>wrapper<sp/>for<sp/>convenient<sp/>usage.<sp/>The<sp/>algorithm<sp/>aims<sp/>to<sp/>find<sp/>the<sp/>minimum<sp/>of<sp/>a<sp/>scalar</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>objective<sp/>function<sp/>and<sp/>supports<sp/>various<sp/>configurations<sp/>like<sp/>bounds<sp/>on<sp/>variables,</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>initialization<sp/>parameters,<sp/>and<sp/>constraint<sp/>handling.</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>(ctypes.POINTER):<sp/>Pointer<sp/>to<sp/>the<sp/>underlying<sp/>C++<sp/>object<sp/>handling<sp/>the<sp/>optimization.</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(int):<sp/>Population<sp/>size<sp/>used<sp/>by<sp/>the<sp/>CMA-ES<sp/>algorithm.</highlight></codeline>
<codeline lineno="158" refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>Dimension<sp/>of<sp/>the<sp/>decision<sp/>variable<sp/>vector<sp/>being<sp/>optimized.</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ace27ab32b6fd227caa1a9877c52f54d1" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim:<sp/>int,<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional[Bounds]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0:<sp/>Optional[ArrayLike]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma:<sp/>Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]<sp/>=<sp/>0.3,<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize:<sp/>Optional[int]<sp/>=<sp/>32,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg:<sp/>Optional[Generator]<sp/>=<sp/>Generator(PCG64DXSM()),</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid:<sp/>Optional[int]<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize:<sp/>Optional[bool]<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_constraint_violation:<sp/>Optional[bool]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>penalty_coef:<sp/>Optional[float]<sp/>=<sp/>1E5</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>an<sp/>evolutionary<sp/>optimization<sp/>algorithm<sp/>with<sp/>constrained<sp/>bounds<sp/>and<sp/>penalty-based<sp/>constraint</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handling.<sp/>Uses<sp/>randomized<sp/>initial<sp/>guess<sp/>for<sp/>optimization<sp/>and<sp/>allows<sp/>configuration<sp/>of<sp/>the<sp/>population<sp/>size</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>mutation<sp/>parameters.</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>The<sp/>dimensionality<sp/>of<sp/>the<sp/>optimization<sp/>problem.</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>(Optional[Bounds]):<sp/>The<sp/>search<sp/>space<sp/>boundaries.<sp/>If<sp/>not<sp/>specified,<sp/>no<sp/>limits<sp/>are<sp/>imposed.</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>(Optional[ArrayLike]):<sp/>Initial<sp/>guess<sp/>for<sp/>the<sp/>optimization<sp/>problem.<sp/>If<sp/>None,<sp/>a<sp/>random<sp/>guess<sp/>is<sp/>used.</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>(Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]):<sp/>Initial<sp/>distribution<sp/>width<sp/>for<sp/>mutation.</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default<sp/>is<sp/>0.3.<sp/>Callable<sp/>functions<sp/>are<sp/>invoked<sp/>and<sp/>their<sp/>result<sp/>used.</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(Optional[int]):<sp/>Size<sp/>of<sp/>the<sp/>population.<sp/>Default<sp/>is<sp/>32.<sp/>If<sp/>an<sp/>odd<sp/>value<sp/>is<sp/>provided,<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incremented<sp/>to<sp/>ensure<sp/>compatibility.</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg<sp/>(Optional[Generator]):<sp/>Random<sp/>generator<sp/>for<sp/>sampling.<sp/>Default<sp/>is<sp/>Generator(PCG64DXSM()).</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid<sp/>(Optional[int]):<sp/>Unique<sp/>identifier<sp/>for<sp/>the<sp/>optimization<sp/>run.<sp/>Default<sp/>is<sp/>0.</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize<sp/>(Optional[bool]):<sp/>Indicates<sp/>whether<sp/>the<sp/>search<sp/>space<sp/>should<sp/>be<sp/>normalized.<sp/>Default<sp/>is<sp/>False.</highlight></codeline>
<codeline lineno="189" refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ace27ab32b6fd227caa1a9877c52f54d1" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_constraint_violation<sp/>(Optional[bool]):<sp/>Enables<sp/>constraint<sp/>violation<sp/>handling<sp/>during<sp/>optimization.</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default<sp/>is<sp/>True.</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>penalty_coef<sp/>(Optional[float]):<sp/>Coefficient<sp/>of<sp/>the<sp/>penalty<sp/>term<sp/>for<sp/>constraints.<sp/>Default<sp/>is<sp/>1E5.</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower,<sp/>upper,<sp/>guess<sp/>=<sp/>_get_bounds(dim,<sp/>bounds,<sp/>x0,<sp/>rg)<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>popsize<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>32<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>popsize<sp/>%<sp/>2<sp/>==<sp/>1:<sp/></highlight><highlight class="comment">#<sp/>requires<sp/>even<sp/>popsize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lower<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>[0]*dim</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>[0]*dim</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>callable(input_sigma):</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma=input_sigma()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.ndim(input_sigma)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>=<sp/>np.mean(input_sigma)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>dim<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" kindref="member">ptr</ref><sp/>=<sp/><ref refid="namespacefcmaes_1_1crfmnescpp_1a9084cdfaf4cdbde49738fac2a361d8a1" kindref="member">initCRFMNES_C</ref>(runid,<sp/>dim,<sp/>array_type(*guess),<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type(*lower),<sp/>array_type(*upper),<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma,<sp/>popsize,<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1)),<sp/>penalty_coef,<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_constraint_violation,<sp/>normalize)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" kindref="member">popsize</ref><sp/>=<sp/>popsize</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" kindref="member">dim</ref><sp/>=<sp/>dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="217" refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a8108ee1a2f3dd941e1105a3491269572" kindref="member">__del__</ref>(self):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="221" refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroys<sp/>the<sp/>current<sp/>instance<sp/>and<sp/>releases<sp/>associated<sp/>resources.</highlight></codeline>
<codeline lineno="222" refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" refkind="member"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>destructor<sp/>is<sp/>called<sp/>when<sp/>the<sp/>object<sp/>is<sp/>deleted,<sp/>or<sp/>goes<sp/>out<sp/>of<sp/>scope</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>ensure<sp/>proper<sp/>cleanup<sp/>of<sp/>resources<sp/>tied<sp/>to<sp/>the<sp/>object.</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Any<sp/>destruction-related<sp/>error<sp/>that<sp/>may<sp/>arise<sp/>during<sp/>the<sp/>resource</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>release<sp/>process.</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1crfmnescpp_1a2049b510a55914b1482f4f4b188e557f" kindref="member">destroyCRFMNES_C</ref>(self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" kindref="member">ptr</ref>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" kindref="member">ask</ref>(self)<sp/>-&gt;<sp/>np.ndarray:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generates<sp/>a<sp/>population<sp/>of<sp/>candidate<sp/>solutions<sp/>using<sp/>the<sp/>CR-FM-NES<sp/>algorithm.</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>computes<sp/>a<sp/>new<sp/>set<sp/>of<sp/>candidate<sp/>solutions<sp/>for<sp/>the<sp/>optimization</highlight></codeline>
<codeline lineno="237" refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a8108ee1a2f3dd941e1105a3491269572" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem<sp/>using<sp/>internal<sp/>state<sp/>and<sp/>algorithm<sp/>properties.<sp/>It<sp/>uses<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>population<sp/>size<sp/>and<sp/>dimensionality<sp/>of<sp/>the<sp/>problem.</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.ndarray:<sp/>A<sp/>2D<sp/>array<sp/>where<sp/>each<sp/>row<sp/>corresponds<sp/>to<sp/>a<sp/>candidate<sp/>solution.</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>there<sp/>is<sp/>an<sp/>error<sp/>while<sp/>generating<sp/>the<sp/>candidate<sp/>solutions.</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lamb<sp/>=<sp/>self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" kindref="member">popsize</ref></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" kindref="member">dim</ref></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(lamb*n)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1crfmnescpp_1a0414b501fcc51390ff9f8dfe00b73910" kindref="member">askCRFMNES_C</ref>(self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>np.empty((lamb,<sp/>n))</highlight></codeline>
<codeline lineno="253" refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(lamb):</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p,:]<sp/>=<sp/>res[p*n<sp/>:<sp/>(p+1)*n]</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xs</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a30327c6b3f1ecc4add777f4a74e83533" kindref="member">tell</ref>(self,<sp/>ys:<sp/>np.ndarray):</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Provides<sp/>functionality<sp/>to<sp/>send<sp/>an<sp/>array<sp/>of<sp/>numerical<sp/>values<sp/>to<sp/>a<sp/>specific<sp/>C-based<sp/>function,<sp/>with<sp/>error</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handling<sp/>in<sp/>place<sp/>to<sp/>detect<sp/>and<sp/>notify<sp/>when<sp/>issues<sp/>occur<sp/>during<sp/>execution.<sp/>This<sp/>method<sp/>is<sp/>particularly</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useful<sp/>for<sp/>communicating<sp/>with<sp/>lower-level<sp/>systems<sp/>or<sp/>libraries<sp/>that<sp/>require<sp/>data<sp/>in<sp/>specific<sp/>formats.</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>(np.ndarray):<sp/>An<sp/>array<sp/>of<sp/>numerical<sp/>values<sp/>to<sp/>be<sp/>sent<sp/>to<sp/>the<sp/>underlying<sp/>C<sp/>function.</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int:<sp/>Returns<sp/>the<sp/>result<sp/>from<sp/>the<sp/>C<sp/>function<sp/>upon<sp/>successful<sp/>execution,<sp/>or<sp/>-1<sp/>if<sp/>an<sp/>exception<sp/>occurs.</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>Captures<sp/>and<sp/>prints<sp/>the<sp/>exception<sp/>message<sp/>when<sp/>an<sp/>error<sp/>is<sp/>encountered<sp/>during<sp/>operation.</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type_ys<sp/>=<sp/>ct.c_double<sp/>*<sp/>len(ys)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1crfmnescpp_1aa685b7d7f9e93560a1f6f08a3984a2f1" kindref="member">tellCRFMNES_C</ref>(self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" kindref="member">ptr</ref>,<sp/>array_type_ys(*ys))</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a30327c6b3f1ecc4add777f4a74e83533" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" kindref="member">population</ref>(self)<sp/>-&gt;<sp/>np.ndarray:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generates<sp/>and<sp/>retrieves<sp/>the<sp/>current<sp/>population<sp/>of<sp/>candidate<sp/>solutions.</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>computes<sp/>the<sp/>population<sp/>of<sp/>candidate<sp/>solutions<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem<sp/>space<sp/>using<sp/>the<sp/>`populationCRFMNES_C`<sp/>function.<sp/>The<sp/>population</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>is<sp/>organized<sp/>as<sp/>a<sp/>two-dimensional<sp/>NumPy<sp/>array<sp/>where<sp/>each<sp/>row</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>represents<sp/>a<sp/>candidate<sp/>solution.</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.ndarray:<sp/>A<sp/>two-dimensional<sp/>array<sp/>where<sp/>each<sp/>row<sp/>corresponds<sp/>to</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>candidate<sp/>solution<sp/>in<sp/>the<sp/>population.<sp/>Returns<sp/>`None`<sp/>in<sp/>case</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>an<sp/>exception.</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>an<sp/>error<sp/>occurs<sp/>during<sp/>computation<sp/>or<sp/>while<sp/>calling</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`populationCRFMNES_C`.</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lamb<sp/>=<sp/>self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" kindref="member">popsize</ref></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" kindref="member">dim</ref></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(lamb*n)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1crfmnescpp_1a4c655199ab31427cfb2afbdcdcd8dc68" kindref="member">populationCRFMNES_C</ref>(self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>np.array(lamb,<sp/>n)</highlight></codeline>
<codeline lineno="307" refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(lamb):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p]<sp/>=<sp/>res[p*n<sp/>:<sp/>(p+1)*n]</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xs</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" kindref="member">result</ref>(self)<sp/>-&gt;<sp/>OptimizeResult:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Computes<sp/>the<sp/>optimization<sp/>result<sp/>and<sp/>returns<sp/>it<sp/>as<sp/>an<sp/>`OptimizeResult`<sp/>object.</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>retrieves<sp/>the<sp/>optimization<sp/>output,<sp/>including<sp/>the<sp/>optimized<sp/>variables,<sp/>function<sp/>value,</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>evaluations,<sp/>number<sp/>of<sp/>iterations,<sp/>and<sp/>the<sp/>status<sp/>of<sp/>the<sp/>optimization.<sp/>If<sp/>an<sp/>error</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>occurs<sp/>during<sp/>the<sp/>computation,<sp/>an<sp/>`OptimizeResult`<sp/>object<sp/>indicating<sp/>failure<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizeResult:<sp/>An<sp/>object<sp/>containing<sp/>details<sp/>of<sp/>the<sp/>optimization<sp/>result,<sp/>including<sp/>the</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimized<sp/>variables<sp/>(`x`),<sp/>the<sp/>function<sp/>value<sp/>at<sp/>the<sp/>optimized<sp/>point<sp/>(`fun`),<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>function<sp/>evaluations<sp/>(`nfev`),<sp/>the<sp/>number<sp/>of<sp/>iterations<sp/>performed<sp/>(`nit`),<sp/>the<sp/>optimization</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>(`status`),<sp/>and<sp/>whether<sp/>the<sp/>optimization<sp/>was<sp/>successful<sp/>(`success`).</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>an<sp/>error<sp/>occurs<sp/>during<sp/>the<sp/>computation<sp/>process,<sp/>leading<sp/>to<sp/>the<sp/>creation<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failure<sp/>`OptimizeResult`.</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" kindref="member">dim</ref>+4)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1crfmnescpp_1a248d281b148a66ee941821abcdb364c4" kindref="member">resultCRFMNES_C</ref>(self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>res[:self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" kindref="member">dim</ref>]</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>res[self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" kindref="member">dim</ref>]</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" kindref="member">dim</ref>+1])</highlight></codeline>
<codeline lineno="339" refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" kindref="member">dim</ref>+2])</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" kindref="member">dim</ref>+3])</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=x,<sp/>fun=val,<sp/>nfev=evals,<sp/>nit=iterations,<sp/>status=stop,<sp/>success=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>fun=sys.float_info.max,<sp/>nfev=0,<sp/>nit=0,<sp/>status=-1,<sp/>success=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>libcmalib<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizeCRFMNES_C<sp/>=<sp/>libcmalib.optimizeCRFMNES_C</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizeCRFMNES_C.argtypes<sp/>=<sp/>[ct.c_long,<sp/>call_back_par,<sp/>ct.c_int,<sp/>\</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>\</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_double,<sp/>ct.c_int,<sp/>ct.c_double,<sp/>ct.c_int,<sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_long,<sp/>ct.c_double,<sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_bool,<sp/>ct.c_bool,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>initCRFMNES_C<sp/>=<sp/>libcmalib.initCRFMNES_C</highlight></codeline>
<codeline lineno="356" refid="namespacefcmaes_1_1crfmnescpp_1ab1e7635b7e619545987ebfc9380c88e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>initCRFMNES_C.argtypes<sp/>=<sp/>[ct.c_long,<sp/>ct.c_int,<sp/>\</highlight></codeline>
<codeline lineno="357" refid="namespacefcmaes_1_1crfmnescpp_1abc206b02ad5c66cfa53e924f992c530e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_double,<sp/>ct.c_int,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_long,<sp/>ct.c_double,<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_bool,<sp/>ct.c_bool]</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>initCRFMNES_C.restype<sp/>=<sp/>ct.c_void_p<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363" refid="namespacefcmaes_1_1crfmnescpp_1a9084cdfaf4cdbde49738fac2a361d8a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>destroyCRFMNES_C<sp/>=<sp/>libcmalib.destroyCRFMNES_C</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>destroyCRFMNES_C.argtypes<sp/>=<sp/>[ct.c_void_p]</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>askCRFMNES_C<sp/>=<sp/>libcmalib.askCRFMNES_C</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>askCRFMNES_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370" refid="namespacefcmaes_1_1crfmnescpp_1a854e412144de71ef17b09d594acbd0e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>tellCRFMNES_C<sp/>=<sp/>libcmalib.tellCRFMNES_C</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>tellCRFMNES_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="372" refid="namespacefcmaes_1_1crfmnescpp_1a2049b510a55914b1482f4f4b188e557f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>tellCRFMNES_C.restype<sp/>=<sp/>ct.c_int</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>populationCRFMNES_C<sp/>=<sp/>libcmalib.populationCRFMNES_C</highlight></codeline>
<codeline lineno="375" refid="namespacefcmaes_1_1crfmnescpp_1a0414b501fcc51390ff9f8dfe00b73910" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>populationCRFMNES_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>resultCRFMNES_C<sp/>=<sp/>libcmalib.resultCRFMNES_C</highlight></codeline>
<codeline lineno="378" refid="namespacefcmaes_1_1crfmnescpp_1aa685b7d7f9e93560a1f6f08a3984a2f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>resultCRFMNES_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
    </programlisting>
    <location file="fcmaes/crfmnescpp.py"/>
  </compounddef>
</doxygen>

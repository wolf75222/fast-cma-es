<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="fbcover_8py" kind="file" language="Python">
    <compoundname>fbcover.py</compoundname>
    <innerclass refid="classfbcover_1_1fb__graph" prot="public">fbcover::fb_graph</innerclass>
    <innerclass refid="classfbcover_1_1problem__fb" prot="public">fbcover::problem_fb</innerclass>
    <innernamespace refid="namespacefbcover">fbcover</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacefbcover_1ad511d1b0457ecda9bd63e836ad69a028" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fbcover.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>fbcover.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="25" column="1" bodyfile="examples/fb/fbcover.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefbcover_1ade1a6852398323e88dbb93b4ed1a39c6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fbcover.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>fbcover.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="25" column="1" bodyfile="examples/fb/fbcover.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefbcover_1a62f998cdce7ff217860cfd4877c609d4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fbcover.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>fbcover.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="25" column="1" bodyfile="examples/fb/fbcover.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefbcover_1aed8dd649424e36ced41d00ad9b7c8128" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fbcover.g</definition>
        <argsstring></argsstring>
        <name>g</name>
        <qualifiedname>fbcover.g</qualifiedname>
        <initializer>=  parse_fb(&quot;1912.edges&quot;, &quot;1912.circles&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="175" column="1" bodyfile="examples/fb/fbcover.py" bodystart="175" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacefbcover_1a6e0f66764bcc9b581187a2526b81dc3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fbcover.num_true</definition>
        <argsstring>(nodes)</argsstring>
        <name>num_true</name>
        <qualifiedname>fbcover.num_true</qualifiedname>
        <param>
          <type>nodes</type>
          <defname>nodes</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="29" column="1" bodyfile="examples/fb/fbcover.py" bodystart="29" bodyend="36"/>
        <referencedby refid="classfbcover_1_1problem__fb_1aafca7fa77a778148b4e8f81fc10f5607" compoundref="fbcover_8py" startline="140" endline="151">fbcover.problem_fb.fitness_so</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacefbcover_1a8588994a104cf05c867efc5ad768ada4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fbcover.sum_weights</definition>
        <argsstring>(nodes, weights)</argsstring>
        <name>sum_weights</name>
        <qualifiedname>fbcover.sum_weights</qualifiedname>
        <param>
          <type>nodes</type>
          <defname>nodes</defname>
        </param>
        <param>
          <type>weights</type>
          <defname>weights</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="37" column="1" bodyfile="examples/fb/fbcover.py" bodystart="37" bodyend="43"/>
        <referencedby refid="classfbcover_1_1problem__fb_1afdb76f1a3d3d8545c2190561bd1905e4" compoundref="fbcover_8py" startline="127" endline="133">fbcover.problem_fb.cost</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacefbcover_1ae2eb6efa5043c4651cf81eba28f9459f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fbcover.add_vertice</definition>
        <argsstring>(v, vmap)</argsstring>
        <name>add_vertice</name>
        <qualifiedname>fbcover.add_vertice</qualifiedname>
        <param>
          <type>v</type>
          <defname>v</defname>
        </param>
        <param>
          <type>vmap</type>
          <defname>vmap</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="44" column="1" bodyfile="examples/fb/fbcover.py" bodystart="44" bodyend="51"/>
        <referencedby refid="namespacefbcover_1aea05a7e0ef43a61707f165fddb3ee1ce" compoundref="fbcover_8py" startline="75" endline="95">fbcover.parse_fb</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacefbcover_1a45600a27fa97dcb1f89854158921ef04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fbcover.circles_arr</definition>
        <argsstring>(circs)</argsstring>
        <name>circles_arr</name>
        <qualifiedname>fbcover.circles_arr</qualifiedname>
        <param>
          <type>circs</type>
          <defname>circs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="52" column="1" bodyfile="examples/fb/fbcover.py" bodystart="52" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespacefbcover_1aea05a7e0ef43a61707f165fddb3ee1ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fbcover.parse_fb</definition>
        <argsstring>(edge_file, circle_file)</argsstring>
        <name>parse_fb</name>
        <qualifiedname>fbcover.parse_fb</qualifiedname>
        <param>
          <type>edge_file</type>
          <defname>edge_file</defname>
        </param>
        <param>
          <type>circle_file</type>
          <defname>circle_file</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="75" column="1" bodyfile="examples/fb/fbcover.py" bodystart="75" bodyend="95"/>
        <references refid="namespacefbcover_1ae2eb6efa5043c4651cf81eba28f9459f" compoundref="fbcover_8py" startline="44" endline="51">fbcover.add_vertice</references>
      </memberdef>
      <memberdef kind="function" id="namespacefbcover_1a1d37d0da59730aab39af8760119dc8c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fbcover.fb_covered</definition>
        <argsstring>(source, target, circles, circle_size, nds)</argsstring>
        <name>fb_covered</name>
        <qualifiedname>fbcover.fb_covered</qualifiedname>
        <param>
          <type>source</type>
          <defname>source</defname>
        </param>
        <param>
          <type>target</type>
          <defname>target</defname>
        </param>
        <param>
          <type>circles</type>
          <defname>circles</defname>
        </param>
        <param>
          <type>circle_size</type>
          <defname>circle_size</defname>
        </param>
        <param>
          <type>nds</type>
          <defname>nds</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="96" column="1" bodyfile="examples/fb/fbcover.py" bodystart="96" bodyend="111"/>
        <referencedby refid="classfbcover_1_1problem__fb_1afdb76f1a3d3d8545c2190561bd1905e4" compoundref="fbcover_8py" startline="127" endline="133">fbcover.problem_fb.cost</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacefbcover_1aef0e4896abc75b367cfae486326fd280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fbcover.nodes</definition>
        <argsstring>(x)</argsstring>
        <name>nodes</name>
        <qualifiedname>fbcover.nodes</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="112" column="1" bodyfile="examples/fb/fbcover.py" bodystart="112" bodyend="117"/>
        <referencedby refid="classfbcover_1_1problem__fb_1afdb76f1a3d3d8545c2190561bd1905e4" compoundref="fbcover_8py" startline="127" endline="133">fbcover.problem_fb.cost</referencedby>
        <referencedby refid="classfbcover_1_1problem__fb_1aafca7fa77a778148b4e8f81fc10f5607" compoundref="fbcover_8py" startline="140" endline="151">fbcover.problem_fb.fitness_so</referencedby>
        <referencedby refid="namespacefbcover_1ac30f20ffc7b04c1a995b554b5b960d5c" compoundref="fbcover_8py" startline="163" endline="173">fbcover.opt_so</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacefbcover_1a96d70e845cfb879830051d512a70da2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fbcover.opt_mo</definition>
        <argsstring>(g)</argsstring>
        <name>opt_mo</name>
        <qualifiedname>fbcover.opt_mo</qualifiedname>
        <param>
          <type>g</type>
          <defname>g</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="152" column="1" bodyfile="examples/fb/fbcover.py" bodystart="152" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="namespacefbcover_1ac30f20ffc7b04c1a995b554b5b960d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fbcover.opt_so</definition>
        <argsstring>(g)</argsstring>
        <name>opt_so</name>
        <qualifiedname>fbcover.opt_so</qualifiedname>
        <param>
          <type>g</type>
          <defname>g</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/fb/fbcover.py" line="163" column="1" bodyfile="examples/fb/fbcover.py" bodystart="163" bodyend="173"/>
        <references refid="namespacefbcover_1aef0e4896abc75b367cfae486326fd280" compoundref="fbcover_8py" startline="112" endline="117">fbcover.nodes</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacefbcover" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Media.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>njit</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numba</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>De_cpp,<sp/>wrapper</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry,<sp/>moretry,<sp/>modecpp,<sp/>mode</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Pool</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="25" refid="namespacefbcover_1ade1a6852398323e88dbb93b4ed1a39c6" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="namespacefbcover_1a6e0f66764bcc9b581187a2526b81dc3d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefbcover_1a6e0f66764bcc9b581187a2526b81dc3d" kindref="member">num_true</ref>(nodes):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nodes:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>b:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespacefbcover_1a8588994a104cf05c867efc5ad768ada4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefbcover_1a8588994a104cf05c867efc5ad768ada4" kindref="member">sum_weights</ref>(nodes,<sp/>weights):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(nodes)):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nodes[i]:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>weights[i]</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="namespacefbcover_1ae2eb6efa5043c4651cf81eba28f9459f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefbcover_1ae2eb6efa5043c4651cf81eba28f9459f" kindref="member">add_vertice</ref>(v,<sp/>vmap):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vmap:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vmap[v]</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>len(vmap)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmap[v]<sp/>=<sp/>i</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="namespacefbcover_1a45600a27fa97dcb1f89854158921ef04" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefbcover_1a45600a27fa97dcb1f89854158921ef04" kindref="member">circles_arr</ref>(circs):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>max_circ<sp/>=<sp/>max([len(c)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>circs])</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>acircs<sp/>=<sp/>np.empty((len(circs),<sp/>max_circ),<sp/>dtype=int)<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(circs)):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>circ<sp/>=<sp/>circs[c]</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(circ)):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acircs[c,<sp/>i]<sp/>=<sp/>circ[i]</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acircs</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="classfbcover_1_1fb__graph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfbcover_1_1fb__graph" kindref="compound">fb_graph</ref>():</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="classfbcover_1_1fb__graph_1ac9f413e30a964761b7ee73619535824e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfbcover_1_1fb__graph_1ac9f413e30a964761b7ee73619535824e" kindref="member">__init__</ref>(self,<sp/>vmap,<sp/>source,<sp/>target,<sp/>circs):</highlight></codeline>
<codeline lineno="64" refid="classfbcover_1_1fb__graph_1a571cc96c0169cd09090ae239e72a91ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1fb__graph_1a571cc96c0169cd09090ae239e72a91ee" kindref="member">nodes</ref><sp/>=<sp/>np.array(list(vmap.values()),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="65" refid="classfbcover_1_1fb__graph_1a8bf663c203943e8da53d605d8cb48ee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1fb__graph_1a8bf663c203943e8da53d605d8cb48ee4" kindref="member">source</ref><sp/>=<sp/>source</highlight></codeline>
<codeline lineno="66" refid="classfbcover_1_1fb__graph_1a130c542b8575e6137bf833f673c39fac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1fb__graph_1a130c542b8575e6137bf833f673c39fac" kindref="member">target</ref><sp/>=<sp/>target<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="classfbcover_1_1fb__graph_1a159b30e89ef87e5d336319a75a10ca1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1fb__graph_1a159b30e89ef87e5d336319a75a10ca1f" kindref="member">nnodes</ref><sp/>=<sp/>len(vmap)</highlight></codeline>
<codeline lineno="68" refid="classfbcover_1_1fb__graph_1ab1a35bba6549551618f52ec5323a193a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1fb__graph_1ab1a35bba6549551618f52ec5323a193a" kindref="member">ncircles</ref><sp/>=<sp/>len(circs)</highlight></codeline>
<codeline lineno="69" refid="classfbcover_1_1fb__graph_1ae9237286301dd0588cede06eee394312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1fb__graph_1ae9237286301dd0588cede06eee394312" kindref="member">circs</ref><sp/>=<sp/>circs</highlight></codeline>
<codeline lineno="70" refid="classfbcover_1_1fb__graph_1a1e745c777619e839bd9a65a8dbcf29f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1fb__graph_1a1e745c777619e839bd9a65a8dbcf29f4" kindref="member">acircles</ref><sp/>=<sp/><ref refid="namespacefbcover_1a45600a27fa97dcb1f89854158921ef04" kindref="member">circles_arr</ref>(circs)</highlight></codeline>
<codeline lineno="71" refid="classfbcover_1_1fb__graph_1a7652a24a76570690972a83f262c3efeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1fb__graph_1a7652a24a76570690972a83f262c3efeb" kindref="member">circle_size</ref><sp/>=<sp/>np.array([len(circ)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>circ<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>circs])</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rng<sp/>=<sp/>np.random.default_rng(601)<sp/></highlight><highlight class="comment">#<sp/>use<sp/>seeded<sp/>random<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classfbcover_1_1fb__graph_1a82843813051418f329b0241c14a45dcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1fb__graph_1a82843813051418f329b0241c14a45dcb" kindref="member">weights</ref><sp/>=<sp/>rng.random(self.<ref refid="classfbcover_1_1fb__graph_1a159b30e89ef87e5d336319a75a10ca1f" kindref="member">nnodes</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="namespacefbcover_1aea05a7e0ef43a61707f165fddb3ee1ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefbcover_1aea05a7e0ef43a61707f165fddb3ee1ce" kindref="member">parse_fb</ref>(edge_file,<sp/>circle_file):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>open(edge_file,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">).readlines()</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>source<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>target<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>vmap<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vs<sp/>=<sp/>line.split()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source.append(<ref refid="namespacefbcover_1ae2eb6efa5043c4651cf81eba28f9459f" kindref="member">add_vertice</ref>(vs[0],<sp/>vmap))</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.append(<ref refid="namespacefbcover_1ae2eb6efa5043c4651cf81eba28f9459f" kindref="member">add_vertice</ref>(vs[1],<sp/>vmap))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>open(circle_file,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">).readlines()<sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>circs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vs<sp/>=<sp/>line.split()[1:]</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(vs)<sp/>&gt;<sp/>1:<sp/></highlight><highlight class="comment">#drop<sp/>circles<sp/>of<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vs:<sp/></highlight><highlight class="comment">#<sp/>add<sp/>circ<sp/>nodes<sp/>to<sp/>vmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefbcover_1ae2eb6efa5043c4651cf81eba28f9459f" kindref="member">add_vertice</ref>(v,<sp/>vmap)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>circs.append([vmap[v]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vs])</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classfbcover_1_1fb__graph" kindref="compound">fb_graph</ref>(vmap,<sp/>np.array(source,<sp/>dtype=int),<sp/>np.array(target,<sp/>dtype=int),<sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>circs)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="namespacefbcover_1a1d37d0da59730aab39af8760119dc8c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefbcover_1a1d37d0da59730aab39af8760119dc8c8" kindref="member">fb_covered</ref>(source,<sp/>target,<sp/>circles,<sp/>circle_size,<sp/>nds):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>num<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>nedges<sp/>=<sp/>len(source)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nedges):<sp/></highlight><highlight class="comment">#<sp/>check<sp/>all<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nds[source[i]]<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>nds[target[i]]:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>+=<sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(circle_size)):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>circle<sp/>=<sp/>circles[i]<sp/></highlight><highlight class="comment">#<sp/>check<sp/>all<sp/>circle<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>circle_size[i]</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(size-1):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(j+1,<sp/>size):<sp/></highlight><highlight class="comment">#<sp/>add<sp/>if<sp/>both<sp/>are<sp/>covered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nds[circle[j]]<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>nds[circle[k]]:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>+=<sp/>1.0/math.sqrt(size)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="namespacefbcover_1aef0e4896abc75b367cfae486326fd280" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefbcover_1aef0e4896abc75b367cfae486326fd280" kindref="member">nodes</ref>(x):<sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>nds<sp/>=<sp/>np.empty(len(x),<sp/>dtype=numba.boolean)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(x)):</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nds[i]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x[i]<sp/>&gt;<sp/>0.5<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nds</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classfbcover_1_1problem__fb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfbcover_1_1problem__fb" kindref="compound">problem_fb</ref>():</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120" refid="classfbcover_1_1problem__fb_1a738fdebee24a1ec0993b28d2f447d61e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfbcover_1_1problem__fb_1a738fdebee24a1ec0993b28d2f447d61e" kindref="member">__init__</ref>(self,<sp/>g):</highlight></codeline>
<codeline lineno="121" refid="classfbcover_1_1problem__fb_1a38bb90d353f1dcd4e045e2dd55870909" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1problem__fb_1a38bb90d353f1dcd4e045e2dd55870909" kindref="member">dim</ref><sp/>=<sp/>g.nnodes</highlight></codeline>
<codeline lineno="122" refid="classfbcover_1_1problem__fb_1a6da63b58d421497ed5f538e9ab9ae1a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1problem__fb_1a6da63b58d421497ed5f538e9ab9ae1a0" kindref="member">bounds</ref><sp/>=<sp/>Bounds([0]*self.<ref refid="classfbcover_1_1problem__fb_1a38bb90d353f1dcd4e045e2dd55870909" kindref="member">dim</ref>,<sp/>[1.99999]*self.<ref refid="classfbcover_1_1problem__fb_1a38bb90d353f1dcd4e045e2dd55870909" kindref="member">dim</ref>)<sp/><sp/></highlight></codeline>
<codeline lineno="123" refid="classfbcover_1_1problem__fb_1a7f470e8c99d290e4c199ca78f3f850f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1problem__fb_1a7f470e8c99d290e4c199ca78f3f850f2" kindref="member">g</ref><sp/>=<sp/>g<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="classfbcover_1_1problem__fb_1afc7ab8dcb02a6c186221899a0cc09ebd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1problem__fb_1afc7ab8dcb02a6c186221899a0cc09ebd" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight></codeline>
<codeline lineno="125" refid="classfbcover_1_1problem__fb_1aebceee07ffeaa078cc29aca5d20e1971" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1problem__fb_1aebceee07ffeaa078cc29aca5d20e1971" kindref="member">max_cost</ref>,<sp/>self.<ref refid="classfbcover_1_1problem__fb_1a1fca4ef0d827ce916d4b4ab58037567c" kindref="member">max_cov</ref><sp/>=<sp/>self.<ref refid="classfbcover_1_1problem__fb_1afdb76f1a3d3d8545c2190561bd1905e4" kindref="member">cost</ref>(np.array([1]*self.<ref refid="classfbcover_1_1problem__fb_1a38bb90d353f1dcd4e045e2dd55870909" kindref="member">dim</ref>))<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="classfbcover_1_1problem__fb_1afdb76f1a3d3d8545c2190561bd1905e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfbcover_1_1problem__fb_1afdb76f1a3d3d8545c2190561bd1905e4" kindref="member">cost</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nds<sp/>=<sp/><ref refid="namespacefbcover_1aef0e4896abc75b367cfae486326fd280" kindref="member">nodes</ref>(x.astype(int))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov<sp/>=<sp/><ref refid="namespacefbcover_1a1d37d0da59730aab39af8760119dc8c8" kindref="member">fb_covered</ref>(self.<ref refid="classfbcover_1_1problem__fb_1a7f470e8c99d290e4c199ca78f3f850f2" kindref="member">g</ref>.source,<sp/>self.<ref refid="classfbcover_1_1problem__fb_1a7f470e8c99d290e4c199ca78f3f850f2" kindref="member">g</ref>.target,<sp/>self.<ref refid="classfbcover_1_1problem__fb_1a7f470e8c99d290e4c199ca78f3f850f2" kindref="member">g</ref>.acircles,<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1problem__fb_1a7f470e8c99d290e4c199ca78f3f850f2" kindref="member">g</ref>.circle_size,<sp/>nds)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cost<sp/>=<sp/><ref refid="namespacefbcover_1a8588994a104cf05c867efc5ad768ada4" kindref="member">sum_weights</ref>(nds,<sp/>self.<ref refid="classfbcover_1_1problem__fb_1a7f470e8c99d290e4c199ca78f3f850f2" kindref="member">g</ref>.weights)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cost,<sp/>cov<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134" refid="classfbcover_1_1problem__fb_1aaee0bd1064a102d1c0b08531a924bebc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfbcover_1_1problem__fb_1aaee0bd1064a102d1c0b08531a924bebc" kindref="member">fitness</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cost,<sp/>cov<sp/>=<sp/>self.<ref refid="classfbcover_1_1problem__fb_1afdb76f1a3d3d8545c2190561bd1905e4" kindref="member">cost</ref>(x)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cost<sp/>/=<sp/>self.<ref refid="classfbcover_1_1problem__fb_1aebceee07ffeaa078cc29aca5d20e1971" kindref="member">max_cost</ref><sp/></highlight><highlight class="comment">#<sp/>to<sp/>be<sp/>minimized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov<sp/>/=<sp/>-self.<ref refid="classfbcover_1_1problem__fb_1a1fca4ef0d827ce916d4b4ab58037567c" kindref="member">max_cov</ref><sp/></highlight><highlight class="comment">#<sp/>to<sp/>be<sp/>maximized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[cost,<sp/>cov]</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classfbcover_1_1problem__fb_1aafca7fa77a778148b4e8f81fc10f5607" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfbcover_1_1problem__fb_1aafca7fa77a778148b4e8f81fc10f5607" kindref="member">fitness_so</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cost,<sp/>cov<sp/>=<sp/>self.<ref refid="classfbcover_1_1problem__fb_1afdb76f1a3d3d8545c2190561bd1905e4" kindref="member">cost</ref>(x)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cost<sp/>/=<sp/>self.<ref refid="classfbcover_1_1problem__fb_1aebceee07ffeaa078cc29aca5d20e1971" kindref="member">max_cost</ref><sp/></highlight><highlight class="comment">#<sp/>to<sp/>be<sp/>minimized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cov<sp/>/=<sp/>-self.<ref refid="classfbcover_1_1problem__fb_1a1fca4ef0d827ce916d4b4ab58037567c" kindref="member">max_cov</ref><sp/></highlight><highlight class="comment">#<sp/>to<sp/>be<sp/>maximized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cost<sp/>=<sp/>max(0.3,<sp/>cost)<sp/></highlight><highlight class="comment">#<sp/>target<sp/>30%<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>2*cost<sp/>+<sp/>cov</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classfbcover_1_1problem__fb_1afc7ab8dcb02a6c186221899a0cc09ebd" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfbcover_1_1problem__fb_1afc7ab8dcb02a6c186221899a0cc09ebd" kindref="member">best_y</ref>.value<sp/>=<sp/>y</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nds<sp/>=<sp/><ref refid="namespacefbcover_1aef0e4896abc75b367cfae486326fd280" kindref="member">nodes</ref>(x.astype(int))</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;n,cov&quot;</highlight><highlight class="normal">,<sp/>cost,<sp/>cov,<sp/><ref refid="namespacefbcover_1a6e0f66764bcc9b581187a2526b81dc3d" kindref="member">num_true</ref>(nds),<sp/>len(nds))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152" refid="namespacefbcover_1a96d70e845cfb879830051d512a70da2a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefbcover_1a96d70e845cfb879830051d512a70da2a" kindref="member">opt_mo</ref>(g):<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/><ref refid="classfbcover_1_1problem__fb" kindref="compound">problem_fb</ref>(g)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>pname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fb1912_mo500k.256.32.de&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>x,<sp/>y<sp/>=<sp/>modecpp.retry(<ref refid="classfcmaes_1_1mode_1_1wrapper" kindref="compound">mode.wrapper</ref>(prob.fitness,<sp/>2),<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>0,<sp/>prob.bounds,<sp/>popsize<sp/>=<sp/>256,<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>500000,<sp/>ints<sp/>=<sp/>[</highlight><highlight class="keyword">True</highlight><highlight class="normal">]*prob.dim,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsga_update=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>num_retries<sp/>=<sp/>32,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers=32)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>np.savez_compressed(pname,<sp/>xs=x,<sp/>ys=y)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>moretry.plot(pname,<sp/>0,<sp/>x,<sp/>y,<sp/>all=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163" refid="namespacefbcover_1ac30f20ffc7b04c1a995b554b5b960d5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefbcover_1ac30f20ffc7b04c1a995b554b5b960d5c" kindref="member">opt_so</ref>(g):<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/><ref refid="classfbcover_1_1problem__fb" kindref="compound">problem_fb</ref>(g)<sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>pname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fb1912_so3000k.512.32.de&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>retry.minimize_plot(pname,<sp/><ref refid="classfcmaes_1_1optimizer_1_1_de__cpp" kindref="compound">De_cpp</ref>(3000000,<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>512,<sp/>ints<sp/>=<sp/>[</highlight><highlight class="keyword">True</highlight><highlight class="normal">]*prob.dim),<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1optimizer_1_1wrapper" kindref="compound">wrapper</ref>(prob.fitness_so),<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob.bounds,<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_retries=32)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(<ref refid="namespacefbcover_1aef0e4896abc75b367cfae486326fd280" kindref="member">nodes</ref>(res.x.astype(int)))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175" refid="namespacefbcover_1aed8dd649424e36ced41d00ad9b7c8128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/><ref refid="namespacefbcover_1aea05a7e0ef43a61707f165fddb3ee1ce" kindref="member">parse_fb</ref>(</highlight><highlight class="stringliteral">&quot;1912.edges&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1912.circles&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#opt_so(g)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacefbcover_1a96d70e845cfb879830051d512a70da2a" kindref="member">opt_mo</ref>(g)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/fb/fbcover.py"/>
  </compounddef>
</doxygen>

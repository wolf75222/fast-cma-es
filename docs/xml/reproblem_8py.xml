<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="reproblem_8py" kind="file" language="Python">
    <compoundname>reproblem.py</compoundname>
    <innerclass refid="classexamples_1_1reproblem_1_1re__problem" prot="public">examples::reproblem::re_problem</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1reproblem">examples::reproblem</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1reproblem_1a67ddb3e7cc602ad548fc8a455a7fff6e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::reproblem.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.reproblem.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="25" column="1" bodyfile="examples/reproblem.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1reproblem_1a1ec84fb6aaafdabfdef64e2248356b7c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::reproblem.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.reproblem.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="25" column="1" bodyfile="examples/reproblem.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1reproblem_1ae599bda27de440044f1369b00b0190a4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::reproblem.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.reproblem.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="25" column="1" bodyfile="examples/reproblem.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1reproblem_1aad1bcf928c7cac4e8a77ec7ed972879d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::reproblem.basepath</definition>
        <argsstring></argsstring>
        <name>basepath</name>
        <qualifiedname>examples.reproblem.basepath</qualifiedname>
        <initializer>=  os.path.dirname(os.path.abspath(__file__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="28" column="1" bodyfile="examples/reproblem.py" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1reproblem_1ae9e391de35d99b16b69e0cc83d0fb399" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::reproblem.libcmalib</definition>
        <argsstring></argsstring>
        <name>libcmalib</name>
        <qualifiedname>examples.reproblem.libcmalib</qualifiedname>
        <initializer>=  ct.cdll.LoadLibrary(basepath + &apos;/../fcmaes/lib/libacmalib.so&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="30" column="1" bodyfile="examples/reproblem.py" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1reproblem_1a58085290ecd79262dab3ddbc05f0a43e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::reproblem.objectives_re_C</definition>
        <argsstring></argsstring>
        <name>objectives_re_C</name>
        <qualifiedname>examples.reproblem.objectives_re_C</qualifiedname>
        <initializer>=  libcmalib.objectives_re_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="37" column="1" bodyfile="examples/reproblem.py" bodystart="37" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1reproblem_1ae65e9bff5a0a5413fed20efe2babdead" compoundref="reproblem_8py" startline="50" endline="59">examples.reproblem.objectives_re</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1reproblem_1aeb83fc4a8ed17c713ae4f96afda33d64" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::reproblem.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>examples.reproblem.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="38" column="1" bodyfile="examples/reproblem.py" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1reproblem_1a71807d466129b8abb25bd7c0c32b90a2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::reproblem.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>examples.reproblem.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="40" column="1" bodyfile="examples/reproblem.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1reproblem_1a53004170ed8c799a80259975b54c71b4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::reproblem.bounds_re_C</definition>
        <argsstring></argsstring>
        <name>bounds_re_C</name>
        <qualifiedname>examples.reproblem.bounds_re_C</qualifiedname>
        <initializer>=  libcmalib.bounds_re_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="42" column="1" bodyfile="examples/reproblem.py" bodystart="42" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820" compoundref="reproblem_8py" startline="60" endline="72">examples.reproblem.bounds_re</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1reproblem_1a7bf6d7281b617beb32bb6369c2be3905" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::reproblem.freemem</definition>
        <argsstring></argsstring>
        <name>freemem</name>
        <qualifiedname>examples.reproblem.freemem</qualifiedname>
        <initializer>=  libcmalib.free_mem</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="47" column="1" bodyfile="examples/reproblem.py" bodystart="47" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820" compoundref="reproblem_8py" startline="60" endline="72">examples.reproblem.bounds_re</referencedby>
        <referencedby refid="namespaceexamples_1_1reproblem_1ae65e9bff5a0a5413fed20efe2babdead" compoundref="reproblem_8py" startline="50" endline="59">examples.reproblem.objectives_re</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1reproblem_1ae65e9bff5a0a5413fed20efe2babdead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.reproblem.objectives_re</definition>
        <argsstring>(name, x, numVars, numObjs)</argsstring>
        <name>objectives_re</name>
        <qualifiedname>examples.reproblem.objectives_re</qualifiedname>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>numVars</type>
          <defname>numVars</defname>
        </param>
        <param>
          <type>numObjs</type>
          <defname>numObjs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="50" column="1" bodyfile="examples/reproblem.py" bodystart="50" bodyend="59"/>
        <references refid="namespaceexamples_1_1reproblem_1a7bf6d7281b617beb32bb6369c2be3905" compoundref="reproblem_8py" startline="47">examples.reproblem.freemem</references>
        <references refid="namespaceexamples_1_1reproblem_1a58085290ecd79262dab3ddbc05f0a43e" compoundref="reproblem_8py" startline="37">examples.reproblem.objectives_re_C</references>
        <referencedby refid="classexamples_1_1reproblem_1_1re__problem_1aaa502e5bfc8d1a94d57be0856676919c" compoundref="reproblem_8py" startline="83" endline="86">examples.reproblem.re_problem.fun</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.reproblem.bounds_re</definition>
        <argsstring>(name)</argsstring>
        <name>bounds_re</name>
        <qualifiedname>examples.reproblem.bounds_re</qualifiedname>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="60" column="1" bodyfile="examples/reproblem.py" bodystart="60" bodyend="72"/>
        <references refid="namespaceexamples_1_1reproblem_1a53004170ed8c799a80259975b54c71b4" compoundref="reproblem_8py" startline="42">examples.reproblem.bounds_re_C</references>
        <references refid="namespaceexamples_1_1reproblem_1a7bf6d7281b617beb32bb6369c2be3905" compoundref="reproblem_8py" startline="47">examples.reproblem.freemem</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1reproblem_1a172e76e02ef5848a37c7e17b07e0d159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.reproblem.minimize_plot</definition>
        <argsstring>(problem, opt, name, exp=2.0, num_retries=1024, value_limits=None)</argsstring>
        <name>minimize_plot</name>
        <qualifiedname>examples.reproblem.minimize_plot</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>exp</type>
          <defname>exp</defname>
          <defval>2.0</defval>
        </param>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>1024</defval>
        </param>
        <param>
          <type>value_limits</type>
          <defname>value_limits</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="90" column="1" bodyfile="examples/reproblem.py" bodystart="90" bodyend="94"/>
        <referencedby refid="namespaceexamples_1_1reproblem_1ad84f6c59065eaf6c3871238ac9efc1be" compoundref="reproblem_8py" startline="100" endline="107">examples.reproblem.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1reproblem_1a5cf58ca88bffce73f658f62ae55daefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.reproblem.adv_minimize_plot</definition>
        <argsstring>(problem, opt, name, value_limit=np.inf, num_retries=10240)</argsstring>
        <name>adv_minimize_plot</name>
        <qualifiedname>examples.reproblem.adv_minimize_plot</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>value_limit</type>
          <defname>value_limit</defname>
          <defval>np.inf</defval>
        </param>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>10240</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="95" column="1" bodyfile="examples/reproblem.py" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1reproblem_1ad84f6c59065eaf6c3871238ac9efc1be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.reproblem.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <qualifiedname>examples.reproblem.main</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/reproblem.py" line="100" column="1" bodyfile="examples/reproblem.py" bodystart="100" bodyend="107"/>
        <references refid="namespaceexamples_1_1reproblem_1ad84f6c59065eaf6c3871238ac9efc1be" compoundref="reproblem_8py" startline="100" endline="107">examples.reproblem.main</references>
        <references refid="namespaceexamples_1_1reproblem_1a172e76e02ef5848a37c7e17b07e0d159" compoundref="reproblem_8py" startline="90" endline="94">examples.reproblem.minimize_plot</references>
        <referencedby refid="namespaceexamples_1_1reproblem_1ad84f6c59065eaf6c3871238ac9efc1be" compoundref="reproblem_8py" startline="100" endline="107">examples.reproblem.main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1reproblem" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Provides<sp/>a<sp/>Python<sp/>wrapper<sp/>to<sp/>the<sp/>C-version<sp/>of<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>&quot;Easy-to-use<sp/>Real-world<sp/>Multi-objective<sp/>Optimization<sp/>Problem<sp/>Suite&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/ryojitanabe/reproblems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/ryojitanabe/reproblems/blob/master/doc/re-supplementary_file.pdf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://arxiv.org/abs/2009.12867</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="25" refid="namespaceexamples_1_1reproblem_1a1ec84fb6aaafdabfdef64e2248356b7c" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespaceexamples_1_1reproblem_1aad1bcf928c7cac4e8a77ec7ed972879d" refkind="member"><highlight class="normal">basepath<sp/>=<sp/>os.path.dirname(os.path.abspath(__file__))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.platform.startswith(</highlight><highlight class="stringliteral">&apos;linux&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="30" refid="namespaceexamples_1_1reproblem_1ae9e391de35d99b16b69e0cc83d0fb399" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>libcmalib<sp/>=<sp/>ct.cdll.LoadLibrary(basepath<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/../fcmaes/lib/libacmalib.so&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;mac&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sys.platform:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>libcmalib<sp/>=<sp/>ct.cdll.LoadLibrary(basepath<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/../fcmaes/lib/libacmalib.dylib&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>os.environ[</highlight><highlight class="stringliteral">&apos;PATH&apos;</highlight><highlight class="normal">]<sp/>=<sp/>(basepath<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/lib&apos;</highlight><highlight class="normal">)<sp/>+<sp/>os.pathsep<sp/>+<sp/>os.environ[</highlight><highlight class="stringliteral">&apos;PATH&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>libcmalib<sp/>=<sp/>ct.cdll.LoadLibrary(basepath<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/../fcmaes/lib/libacmalib.dll&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespaceexamples_1_1reproblem_1a58085290ecd79262dab3ddbc05f0a43e" refkind="member"><highlight class="normal">objectives_re_C<sp/>=<sp/>libcmalib.objectives_re_C</highlight></codeline>
<codeline lineno="38" refid="namespaceexamples_1_1reproblem_1aeb83fc4a8ed17c713ae4f96afda33d64" refkind="member"><highlight class="normal">objectives_re_C.argtypes<sp/>=<sp/>[ct.c_char_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="namespaceexamples_1_1reproblem_1a71807d466129b8abb25bd7c0c32b90a2" refkind="member"><highlight class="normal">objectives_re_C.restype<sp/>=<sp/>ct.POINTER(ct.c_double)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="namespaceexamples_1_1reproblem_1a53004170ed8c799a80259975b54c71b4" refkind="member"><highlight class="normal">bounds_re_C<sp/>=<sp/>libcmalib.bounds_re_C</highlight></codeline>
<codeline lineno="43"><highlight class="normal">bounds_re_C.argtypes<sp/>=<sp/>[ct.c_char_p]</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">bounds_re_C.restype<sp/>=<sp/>ct.POINTER(ct.c_double)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="namespaceexamples_1_1reproblem_1a7bf6d7281b617beb32bb6369c2be3905" refkind="member"><highlight class="normal">freemem<sp/>=<sp/>libcmalib.free_mem</highlight></codeline>
<codeline lineno="48"><highlight class="normal">freemem.argtypes<sp/>=<sp/>[ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="namespaceexamples_1_1reproblem_1ae65e9bff5a0a5413fed20efe2babdead" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1reproblem_1ae65e9bff5a0a5413fed20efe2babdead" kindref="member">objectives_re</ref>(name,<sp/>x,<sp/>numVars,<sp/>numObjs):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>numVars<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="namespaceexamples_1_1reproblem_1a58085290ecd79262dab3ddbc05f0a43e" kindref="member">objectives_re_C</ref>(ct.create_string_buffer(name.encode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)),<sp/>array_type(*x))</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.array(np.fromiter(res,<sp/>dtype=np.float64,<sp/>count=numObjs))</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1reproblem_1a7bf6d7281b617beb32bb6369c2be3905" kindref="member">freemem</ref>(res)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820" kindref="member">bounds_re</ref>(name):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="namespaceexamples_1_1reproblem_1a53004170ed8c799a80259975b54c71b4" kindref="member">bounds_re_C</ref>(ct.create_string_buffer(name.encode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numVars<sp/>=<sp/>int(res[0])</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numObjs<sp/>=<sp/>int(res[1])</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numConstr<sp/>=<sp/>int(res[2])</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>np.array(res[3:3+numVars])</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>np.array(res[3+numVars:3+2*numVars])</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1reproblem_1a7bf6d7281b617beb32bb6369c2be3905" kindref="member">freemem</ref>(res)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numVars,<sp/>numObjs,<sp/>numConstr,<sp/>lower,<sp/>upper</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="classexamples_1_1reproblem_1_1re__problem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1reproblem_1_1re__problem" kindref="compound">re_problem</ref>(object):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="classexamples_1_1reproblem_1_1re__problem_1ad88a821be41b01aa8c32b77c4d6e4d2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1reproblem_1_1re__problem_1ad88a821be41b01aa8c32b77c4d6e4d2d" kindref="member">__init__</ref>(self,<sp/>name,<sp/>weight_bounds<sp/>=<sp/>Bounds([0,<sp/>0],<sp/>[1,<sp/>1])):</highlight></codeline>
<codeline lineno="76" refid="classexamples_1_1reproblem_1_1re__problem_1a48fb9610ac3b577460fb1ca8bd2d0d8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1reproblem_1_1re__problem_1a48fb9610ac3b577460fb1ca8bd2d0d8b" kindref="member">name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820" kindref="member">bounds_re</ref>(name)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;re<sp/>function<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79" refid="classexamples_1_1reproblem_1_1re__problem_1a7111b338d81341160ae9609699f4b438" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1reproblem_1_1re__problem_1a127ae7d067abfa91bdf7c5f3d9bc3694" kindref="member">numVars</ref>,<sp/>self.<ref refid="classexamples_1_1reproblem_1_1re__problem_1a67857fd3321a5fd02bb0fe48cca8c9d5" kindref="member">numObjs</ref>,<sp/>self.<ref refid="classexamples_1_1reproblem_1_1re__problem_1a7111b338d81341160ae9609699f4b438" kindref="member">numConstr</ref>,<sp/>lower,<sp/>upper<sp/>=<sp/><ref refid="namespaceexamples_1_1reproblem_1ac4ecb3cc994643348717fe767901a820" kindref="member">bounds_re</ref>(name)</highlight></codeline>
<codeline lineno="80" refid="classexamples_1_1reproblem_1_1re__problem_1acbac7ed28a50c8a838e0efd7349f3e65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1reproblem_1_1re__problem_1acbac7ed28a50c8a838e0efd7349f3e65" kindref="member">bounds</ref><sp/>=<sp/>Bounds(lower,<sp/>upper)</highlight></codeline>
<codeline lineno="81" refid="classexamples_1_1reproblem_1_1re__problem_1a074dc85532d8d477049f2073daca7bf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1reproblem_1_1re__problem_1a074dc85532d8d477049f2073daca7bf0" kindref="member">weight_bounds</ref><sp/>=<sp/>weight_bounds<sp/></highlight><highlight class="comment">#<sp/>weighting<sp/>of<sp/>objectives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="83" refid="classexamples_1_1reproblem_1_1re__problem_1aaa502e5bfc8d1a94d57be0856676919c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1reproblem_1_1re__problem_1aaa502e5bfc8d1a94d57be0856676919c" kindref="member">fun</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="namespaceexamples_1_1reproblem_1ae65e9bff5a0a5413fed20efe2babdead" kindref="member">objectives_re</ref>(self.<ref refid="classexamples_1_1reproblem_1_1re__problem_1a48fb9610ac3b577460fb1ca8bd2d0d8b" kindref="member">name</ref>,<sp/>x,<sp/>self.<ref refid="classexamples_1_1reproblem_1_1re__problem_1a127ae7d067abfa91bdf7c5f3d9bc3694" kindref="member">numVars</ref>,<sp/>self.<ref refid="classexamples_1_1reproblem_1_1re__problem_1a67857fd3321a5fd02bb0fe48cca8c9d5" kindref="member">numObjs</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>de_cma,<sp/>Bite_cpp,<sp/>Cma_cpp,<sp/>dtime,<sp/>logger</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>moretry,<sp/>advretry</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="namespaceexamples_1_1reproblem_1a172e76e02ef5848a37c7e17b07e0d159" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1reproblem_1a172e76e02ef5848a37c7e17b07e0d159" kindref="member">minimize_plot</ref>(problem,<sp/>opt,<sp/>name,<sp/>exp<sp/>=<sp/>2.0,<sp/>num_retries<sp/>=<sp/>1024,<sp/>value_limits=None):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>moretry.minimize_plot(problem.name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal"><sp/>+<sp/>name,<sp/>opt,<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.fun,<sp/>problem.bounds,<sp/>problem.weight_bounds,<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_retries<sp/>=<sp/>num_retries,<sp/>exp<sp/>=<sp/>exp,<sp/>value_limits<sp/>=<sp/>value_limits)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="namespaceexamples_1_1reproblem_1a5cf58ca88bffce73f658f62ae55daefc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1reproblem_1a5cf58ca88bffce73f658f62ae55daefc" kindref="member">adv_minimize_plot</ref>(problem,<sp/>opt,<sp/>name,<sp/>value_limit<sp/>=<sp/>np.inf,<sp/>num_retries<sp/>=<sp/>10240):</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>moretry.adv_minimize_plot(problem.name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal"><sp/>+<sp/>name,<sp/>opt,<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.fun,<sp/>problem.bounds,<sp/>value_limit<sp/>=<sp/>value_limit,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_retries<sp/>=<sp/>num_retries)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="namespaceexamples_1_1reproblem_1ad84f6c59065eaf6c3871238ac9efc1be" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1reproblem_1ad84f6c59065eaf6c3871238ac9efc1be" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#numVars,<sp/>numObjs,<sp/>numConstr,<sp/>lower,<sp/>upper<sp/>=<sp/>bounds_re(&apos;RE21&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#rep<sp/>=<sp/>re_problem(&apos;RE21&apos;,<sp/>weight_bounds<sp/>=<sp/>Bounds([0,<sp/>10],<sp/>[0.001,<sp/>100])<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#rep<sp/>=<sp/>re_problem(&apos;RE31&apos;,<sp/>weight_bounds<sp/>=<sp/>Bounds([0.1,<sp/>0.0001,<sp/>0.1],<sp/>[1,<sp/>0.001,<sp/>1])<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#rep<sp/>=<sp/>re_problem(&apos;RE24&apos;,<sp/>weight_bounds<sp/>=<sp/>Bounds([0.1,<sp/>0.1],<sp/>[1,<sp/>1])<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>rep<sp/>=<sp/><ref refid="classexamples_1_1reproblem_1_1re__problem" kindref="compound">re_problem</ref>(</highlight><highlight class="stringliteral">&apos;RE42&apos;</highlight><highlight class="normal">,<sp/>weight_bounds<sp/>=<sp/>Bounds([0.2,<sp/>0.2,<sp/>0.2,<sp/>1000],<sp/>[1,<sp/>1,<sp/>1,<sp/>1000])<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1reproblem_1a172e76e02ef5848a37c7e17b07e0d159" kindref="member">minimize_plot</ref>(rep,<sp/>de_cma(1000),<sp/></highlight><highlight class="stringliteral">&apos;_decma&apos;</highlight><highlight class="normal">,<sp/>num_retries<sp/>=<sp/>320,<sp/>exp<sp/>=<sp/>2.0)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1reproblem_1ad84f6c59065eaf6c3871238ac9efc1be" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/reproblem.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="anpcp_8py" kind="file" language="Python">
    <compoundname>anpcp.py</compoundname>
    <innerclass refid="classanpcp_1_1_a_n_p_c_p" prot="public">anpcp::ANPCP</innerclass>
    <innernamespace refid="namespaceanpcp">anpcp</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceanpcp_1ad7bc2e2f3677bce618daccaada98f522" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcp.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>anpcp.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="25" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcp_1a60d184d80ec29d14dabb704da3b15e34" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcp.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>anpcp.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="25" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcp_1a100643474ed134a9d313019112a2fd43" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcp.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>anpcp.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="25" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcp_1a3d4fcfcfe8fbbb5aae7993b6bbeb6312" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcp.anpcp</definition>
        <argsstring></argsstring>
        <name>anpcp</name>
        <qualifiedname>anpcp.anpcp</qualifiedname>
        <initializer>=  ANPCP(12, 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="123" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcp_1a37fca338ec24c25c87790d168e80cd38" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int anpcp.popsize</definition>
        <argsstring></argsstring>
        <name>popsize</name>
        <qualifiedname>anpcp.popsize</qualifiedname>
        <initializer>=  7 + 12*anpcp.dim</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="125" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcp_1af0b0b587e0ebbedb6364482103b76548" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int anpcp.max_evaluations</definition>
        <argsstring></argsstring>
        <name>max_evaluations</name>
        <qualifiedname>anpcp.max_evaluations</qualifiedname>
        <initializer>=  300000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="126" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcp_1a726f529bf80b17eeb6c009a2c4d0669b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcp.opt</definition>
        <argsstring></argsstring>
        <name>opt</name>
        <qualifiedname>anpcp.opt</qualifiedname>
        <initializer>=  Bite_cpp(max_evaluations, popsize=popsize, M=8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="127" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcp_1a82746ac1bef745db3de2e55aed299998" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcp.num_retries</definition>
        <argsstring></argsstring>
        <name>num_retries</name>
        <qualifiedname>anpcp.num_retries</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="128" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="128" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceanpcp_1a1633c5905b3d9dfa0816c7193e554322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>anpcp.next_free_</definition>
        <argsstring>(used, p)</argsstring>
        <name>next_free_</name>
        <qualifiedname>anpcp.next_free_</qualifiedname>
        <param>
          <type>used</type>
          <defname>used</defname>
        </param>
        <param>
          <type>p</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="29" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="29" bodyend="35"/>
        <referencedby refid="namespaceanpcp_1ad1c73ca9e8ad8f9a6b51cf5738b5ddf9" compoundref="anpcp_8py" startline="36" endline="43">anpcp.selection_</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceanpcp_1ad1c73ca9e8ad8f9a6b51cf5738b5ddf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>anpcp.selection_</definition>
        <argsstring>(s, n)</argsstring>
        <name>selection_</name>
        <qualifiedname>anpcp.selection_</qualifiedname>
        <param>
          <type>s</type>
          <defname>s</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="36" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="36" bodyend="43"/>
        <references refid="namespaceanpcp_1a1633c5905b3d9dfa0816c7193e554322" compoundref="anpcp_8py" startline="29" endline="35">anpcp.next_free_</references>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a36e56d4bbe8efd193c8f57419b2eeb87" compoundref="anpcp_8py" startline="106" endline="109">anpcp.ANPCP.fitness</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a98d874863228ee290ddd16d9063cc2b2" compoundref="anpcp_8py" startline="103" endline="105">anpcp.ANPCP.get_selection</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceanpcp_1a4db012d42b40fde3133917da7bae5a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>anpcp.calc_distance_</definition>
        <argsstring>(users, facilities)</argsstring>
        <name>calc_distance_</name>
        <qualifiedname>anpcp.calc_distance_</qualifiedname>
        <param>
          <type>users</type>
          <defname>users</defname>
        </param>
        <param>
          <type>facilities</type>
          <defname>facilities</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="44" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="44" bodyend="53"/>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" compoundref="anpcp_8py" startline="78" endline="98">anpcp.ANPCP.init_tsp</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceanpcp_1af7f3f87b0283565d269d0f86ddcc0a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>anpcp.fitness_</definition>
        <argsstring>(selection, distance, alpha)</argsstring>
        <name>fitness_</name>
        <qualifiedname>anpcp.fitness_</qualifiedname>
        <param>
          <type>selection</type>
          <defname>selection</defname>
        </param>
        <param>
          <type>distance</type>
          <defname>distance</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="54" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="54" bodyend="60"/>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a36e56d4bbe8efd193c8f57419b2eeb87" compoundref="anpcp_8py" startline="106" endline="109">anpcp.ANPCP.fitness</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceanpcp_1a5aca052fb7d52bf72b7d2533d4d3e17e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>anpcp.optimize</definition>
        <argsstring>(anpcp, opt, num_retries=32)</argsstring>
        <name>optimize</name>
        <qualifiedname>anpcp.optimize</qualifiedname>
        <param>
          <type>anpcp</type>
          <defname>anpcp</defname>
        </param>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>32</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcp.py" line="110" column="1" bodyfile="examples/anpcp/anpcp.py" bodystart="110" bodyend="116"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceanpcp" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/netotz/alpha-neighbor-p-center-problem/blob/main/README.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://www.researchgate.net/publication/257196448_Optimal_algorithms_for_the_a-neighbor_p-center_problem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>implements<sp/>the<sp/>original<sp/>variant<sp/>of<sp/>the<sp/>problem<sp/>using<sp/>continuous<sp/>optimization<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>a<sp/>variant<sp/>(commented<sp/>out)<sp/>where<sp/>instead<sp/>of<sp/>the<sp/>alpha-best<sp/>we<sp/>use<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>best<sp/>alpha<sp/>distances.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Users<sp/>and<sp/>facilities<sp/>are<sp/>taken<sp/>from<sp/>TSP/JSON<sp/>files.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Service.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json,<sp/>sys</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>njit</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numba</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bite_cpp,<sp/>wrapper,<sp/>logger</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds<sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="25" refid="namespaceanpcp_1a60d184d80ec29d14dabb704da3b15e34" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="29" refid="namespaceanpcp_1a1633c5905b3d9dfa0816c7193e554322" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceanpcp_1a1633c5905b3d9dfa0816c7193e554322" kindref="member">next_free_</ref>(used,<sp/>p):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>used[p]:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(p<sp/>+<sp/>1)<sp/>%<sp/>used.size</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>used[p]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="36" refid="namespaceanpcp_1ad1c73ca9e8ad8f9a6b51cf5738b5ddf9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceanpcp_1ad1c73ca9e8ad8f9a6b51cf5738b5ddf9" kindref="member">selection_</ref>(s,<sp/>n):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>disjoined_s<sp/>=<sp/>np.zeros(s.size,<sp/>dtype=numba.int32)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>used<sp/>=<sp/>np.zeros(n,<sp/>dtype=numba.boolean)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(s.size):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disjoined_s[i]<sp/>=<sp/><ref refid="namespaceanpcp_1a1633c5905b3d9dfa0816c7193e554322" kindref="member">next_free_</ref>(used,<sp/>s[i])</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>disjoined_s</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="namespaceanpcp_1a4db012d42b40fde3133917da7bae5a1b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceanpcp_1a4db012d42b40fde3133917da7bae5a1b" kindref="member">calc_distance_</ref>(users,<sp/>facilities):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>np.zeros((len(users),<sp/>len(facilities)),<sp/>dtype=numba.int32)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(users)):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(facilities)):<sp/></highlight><highlight class="comment">#<sp/>round<sp/>to<sp/>next<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>users[i,0]<sp/>-<sp/>facilities[j,0]</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>users[i,1]<sp/>-<sp/>facilities[j,1]</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance[i,j]<sp/>=<sp/>int(round(np.sqrt(dx*dx<sp/>+<sp/>dy*dy),<sp/>0))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distance<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="54" refid="namespaceanpcp_1af7f3f87b0283565d269d0f86ddcc0a55" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceanpcp_1af7f3f87b0283565d269d0f86ddcc0a55" kindref="member">fitness_</ref>(selection,<sp/>distance,<sp/>alpha):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>selected<sp/>=<sp/>distance[:,selection]<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>partitioned<sp/>=<sp/>np.partition(selected,<sp/>alpha)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max([max(d[:alpha])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>partitioned])</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>variant<sp/>where<sp/>instead<sp/>of<sp/>the<sp/>alpha-best<sp/>we<sp/>use<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>best<sp/>alpha<sp/>distances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>max([np.sum(d[:alpha])<sp/>for<sp/>d<sp/>in<sp/>partitioned])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classanpcp_1_1_a_n_p_c_p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classanpcp_1_1_a_n_p_c_p" kindref="compound">ANPCP</ref>():</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="classanpcp_1_1_a_n_p_c_p_1aeebe77132f494b774eba4273ad3be49e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcp_1_1_a_n_p_c_p_1aeebe77132f494b774eba4273ad3be49e" kindref="member">__init__</ref>(self,<sp/>p,<sp/>alpha):</highlight></codeline>
<codeline lineno="64" refid="classanpcp_1_1_a_n_p_c_p_1a57104cbb130606227a207d9591ad2f37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a57104cbb130606227a207d9591ad2f37" kindref="member">p</ref><sp/>=<sp/>p</highlight></codeline>
<codeline lineno="65" refid="classanpcp_1_1_a_n_p_c_p_1ac63cb4563071220aaa37c5d13abc07c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1ac63cb4563071220aaa37c5d13abc07c4" kindref="member">alpha</ref><sp/>=<sp/>alpha</highlight></codeline>
<codeline lineno="66" refid="classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9" kindref="member">dim</ref><sp/>=<sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a57104cbb130606227a207d9591ad2f37" kindref="member">p</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="classanpcp_1_1_a_n_p_c_p_1a9c595cb6e1239841522bd6317d374aee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcp_1_1_a_n_p_c_p_1a9c595cb6e1239841522bd6317d374aee" kindref="member">init_json</ref>(self,<sp/>json_file):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(json_file)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>json_file:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anpcp<sp/>=<sp/>json.load(json_file)<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022" kindref="member">facilities</ref><sp/>=<sp/>anpcp[</highlight><highlight class="stringliteral">&apos;facilities&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="72" refid="classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913" kindref="member">users</ref><sp/>=<sp/>anpcp[</highlight><highlight class="stringliteral">&apos;users&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="73" refid="classanpcp_1_1_a_n_p_c_p_1af7aa4956b4756967dcad6dd9090c8dc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1af7aa4956b4756967dcad6dd9090c8dc7" kindref="member">distance</ref><sp/>=<sp/>np.array(anpcp[</highlight><highlight class="stringliteral">&apos;distances&apos;</highlight><highlight class="normal">],<sp/>dtype<sp/>=<sp/>int)</highlight></codeline>
<codeline lineno="74" refid="classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78" kindref="member">fnum</ref><sp/>=<sp/>len(self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022" kindref="member">facilities</ref>)</highlight></codeline>
<codeline lineno="75" refid="classanpcp_1_1_a_n_p_c_p_1ae394c2bbfe5ed510784d96994ab1099c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1ae394c2bbfe5ed510784d96994ab1099c" kindref="member">unum</ref><sp/>=<sp/>len(self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913" kindref="member">users</ref>)</highlight></codeline>
<codeline lineno="76" refid="classanpcp_1_1_a_n_p_c_p_1a379e8b5b8533d857a0fe348aade6d67a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a379e8b5b8533d857a0fe348aade6d67a" kindref="member">bounds</ref><sp/>=<sp/>Bounds([0]*self.<ref refid="classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9" kindref="member">dim</ref>,<sp/>[self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78" kindref="member">fnum</ref>-1E-9]*self.<ref refid="classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9" kindref="member">dim</ref>)<sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" kindref="member">init_tsp</ref>(self,<sp/>tsp_file):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(tsp_file)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>csvfile:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>csvfile.readlines()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>users<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facilities<sp/>=<sp/>[]<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>line.split()</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(row)<sp/>!=<sp/>4<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>row[0][0].isdigit():</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/>np.array([float(row[1]),<sp/>float(row[2])])</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>row[3]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facilities.append(coords)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>users.append(coords)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913" kindref="member">users</ref><sp/>=<sp/>np.array(users)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022" kindref="member">facilities</ref><sp/>=<sp/>np.array(facilities)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1ae394c2bbfe5ed510784d96994ab1099c" kindref="member">unum</ref><sp/>=<sp/>len(self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913" kindref="member">users</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78" kindref="member">fnum</ref><sp/>=<sp/>len(self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022" kindref="member">facilities</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1af7aa4956b4756967dcad6dd9090c8dc7" kindref="member">distance</ref><sp/>=<sp/><ref refid="namespaceanpcp_1a4db012d42b40fde3133917da7bae5a1b" kindref="member">calc_distance_</ref>(self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a1cebe6ad05d38bba15a5e292faabe913" kindref="member">users</ref>,<sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a47e51305ef2432d9307c4d637cc64022" kindref="member">facilities</ref>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a379e8b5b8533d857a0fe348aade6d67a" kindref="member">bounds</ref><sp/>=<sp/>Bounds([0]*self.<ref refid="classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9" kindref="member">dim</ref>,<sp/>[self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78" kindref="member">fnum</ref>-1E-9]*self.<ref refid="classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9" kindref="member">dim</ref>)<sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="classanpcp_1_1_a_n_p_c_p_1a27cdaec6181e9866758aaf02adcd2943" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcp_1_1_a_n_p_c_p_1a27cdaec6181e9866758aaf02adcd2943" kindref="member">random_x</ref>(self,<sp/>seed<sp/>=<sp/>123):</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rng<sp/>=<sp/>np.random.default_rng(seed)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rng.integers(0,<sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78" kindref="member">fnum</ref>,<sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1ae8c1d88d0800b842d51da0b9f756d7d9" kindref="member">dim</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classanpcp_1_1_a_n_p_c_p_1a98d874863228ee290ddd16d9063cc2b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcp_1_1_a_n_p_c_p_1a98d874863228ee290ddd16d9063cc2b2" kindref="member">get_selection</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceanpcp_1ad1c73ca9e8ad8f9a6b51cf5738b5ddf9" kindref="member">selection_</ref>(x.astype(int),<sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78" kindref="member">fnum</ref>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classanpcp_1_1_a_n_p_c_p_1a36e56d4bbe8efd193c8f57419b2eeb87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcp_1_1_a_n_p_c_p_1a36e56d4bbe8efd193c8f57419b2eeb87" kindref="member">fitness</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selection<sp/>=<sp/><ref refid="namespaceanpcp_1ad1c73ca9e8ad8f9a6b51cf5738b5ddf9" kindref="member">selection_</ref>(x.astype(int),<sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1a635a7c63b9307c9d8459998899dafe78" kindref="member">fnum</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceanpcp_1af7f3f87b0283565d269d0f86ddcc0a55" kindref="member">fitness_</ref>(selection,<sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1af7aa4956b4756967dcad6dd9090c8dc7" kindref="member">distance</ref>,<sp/>self.<ref refid="classanpcp_1_1_a_n_p_c_p_1ac63cb4563071220aaa37c5d13abc07c4" kindref="member">alpha</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110" refid="namespaceanpcp_1a5aca052fb7d52bf72b7d2533d4d3e17e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceanpcp_1a5aca052fb7d52bf72b7d2533d4d3e17e" kindref="member">optimize</ref>(anpcp,<sp/>opt,<sp/>num_retries<sp/>=<sp/>32):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>retry.minimize(<ref refid="classfcmaes_1_1optimizer_1_1wrapper" kindref="compound">wrapper</ref>(anpcp.fitness),<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anpcp.bounds,<sp/>num_retries<sp/>=<sp/>num_retries,<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer=opt)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;selection<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>anpcp.get_selection(ret.x))</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;value<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>ret.fun)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>anpcp<sp/>=<sp/>ANPCP(6,<sp/>2)<sp/>#<sp/>p<sp/>=<sp/>6,<sp/>alpha<sp/>=<sp/>2<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>anpcp.init_tsp(&apos;data/att48_36_12_4.anpcp.tsp&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>anpcp<sp/>=<sp/>ANPCP(12,<sp/>2)<sp/>#<sp/>p<sp/>=<sp/>12,<sp/>alpha<sp/>=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>anpcp.init_tsp(&apos;data/rat783_588_195_4.anpcp.tsp&apos;)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="namespaceanpcp_1a3d4fcfcfe8fbbb5aae7993b6bbeb6312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>anpcp<sp/>=<sp/><ref refid="classanpcp_1_1_a_n_p_c_p" kindref="compound">ANPCP</ref>(12,<sp/>2)<sp/></highlight><highlight class="comment">#<sp/>p<sp/>=<sp/>12,<sp/>alpha<sp/>=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>anpcp.init_tsp(</highlight><highlight class="stringliteral">&apos;data/rl1323_993_330_4.anpcp.tsp&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125" refid="namespaceanpcp_1a37fca338ec24c25c87790d168e80cd38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>7<sp/>+<sp/>12*anpcp.dim</highlight></codeline>
<codeline lineno="126" refid="namespaceanpcp_1af0b0b587e0ebbedb6364482103b76548" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>300000</highlight></codeline>
<codeline lineno="127" refid="namespaceanpcp_1a726f529bf80b17eeb6c009a2c4d0669b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>opt<sp/>=<sp/><ref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" kindref="compound">Bite_cpp</ref>(max_evaluations,<sp/>popsize=popsize,<sp/>M=8)</highlight></codeline>
<codeline lineno="128" refid="namespaceanpcp_1a82746ac1bef745db3de2e55aed299998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceanpcp_1a5aca052fb7d52bf72b7d2533d4d3e17e" kindref="member">optimize</ref>(anpcp,<sp/>opt,<sp/>num_retries<sp/>=<sp/>32)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/anpcp/anpcp.py"/>
  </compounddef>
</doxygen>

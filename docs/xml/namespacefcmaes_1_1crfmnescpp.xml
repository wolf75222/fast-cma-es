<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespacefcmaes_1_1crfmnescpp" kind="namespace" language="Python">
    <compoundname>fcmaes::crfmnescpp</compoundname>
    <innerclass refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c" prot="public">fcmaes::crfmnescpp::CRFMNES_C</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1ab1e7635b7e619545987ebfc9380c88e4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.optimizeCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>optimizeCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.optimizeCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.optimizeCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="356" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="356" bodyend="-1"/>
        <referencedby refid="namespacefcmaes_1_1crfmnescpp_1ae1a2ee01cfe0465cbd01fbb78c4fbb89" compoundref="crfmnescpp_8py" startline="108" endline="144">fcmaes.crfmnescpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1abc206b02ad5c66cfa53e924f992c530e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>fcmaes.crfmnescpp.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="357" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a9084cdfaf4cdbde49738fac2a361d8a1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.initCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>initCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.initCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.initCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="363" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a854e412144de71ef17b09d594acbd0e9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>fcmaes.crfmnescpp.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="370" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a2049b510a55914b1482f4f4b188e557f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.destroyCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>destroyCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.destroyCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.destroyCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="372" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="372" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a8108ee1a2f3dd941e1105a3491269572" compoundref="crfmnescpp_8py" startline="237" endline="239">fcmaes.crfmnescpp.CRFMNES_C.__del__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a0414b501fcc51390ff9f8dfe00b73910" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.askCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>askCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.askCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.askCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="375" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="375" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" compoundref="crfmnescpp_8py" startline="253" endline="267">fcmaes.crfmnescpp.CRFMNES_C.ask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1aa685b7d7f9e93560a1f6f08a3984a2f1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.tellCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>tellCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.tellCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.tellCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="378" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="378" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a30327c6b3f1ecc4add777f4a74e83533" compoundref="crfmnescpp_8py" startline="282" endline="289">fcmaes.crfmnescpp.CRFMNES_C.tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a4c655199ab31427cfb2afbdcdcd8dc68" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.populationCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>populationCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.populationCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.populationCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="382" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="382" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" compoundref="crfmnescpp_8py" startline="307" endline="321">fcmaes.crfmnescpp.CRFMNES_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1crfmnescpp_1a248d281b148a66ee941821abcdb364c4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::crfmnescpp.resultCRFMNES_C</definition>
        <argsstring></argsstring>
        <name>resultCRFMNES_C</name>
        <qualifiedname>fcmaes.crfmnescpp.resultCRFMNES_C</qualifiedname>
        <initializer>=  libcmalib.resultCRFMNES_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="385" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="385" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" compoundref="crfmnescpp_8py" startline="339" endline="353">fcmaes.crfmnescpp.CRFMNES_C.result</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacefcmaes_1_1crfmnescpp_1ae1a2ee01cfe0465cbd01fbb78c4fbb89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OptimizeResult</type>
        <definition> OptimizeResult fcmaes.crfmnescpp.minimize</definition>
        <argsstring>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, input_sigma=0.3, popsize=32, max_evaluations=100000, workers=None, stop_fitness=-np.inf, rg=Generator(PCG64DXSM()), runid=0, normalize=False, use_constraint_violation=True, penalty_coef=1E5)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.crfmnescpp.minimize</qualifiedname>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>x0</defname>
          <array>[Bounds]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>x0</declname>
          <defname>input_sigma</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>input_sigma</type>
          <defname>popsize</defname>
          <defval>0.3</defval>
        </param>
        <param>
          <type>popsize</type>
          <defname>max_evaluations</defname>
          <defval>32</defval>
        </param>
        <param>
          <type>max_evaluations</type>
          <defname>workers</defname>
          <defval>100000</defval>
        </param>
        <param>
          <type>workers</type>
          <defname>stop_fitness</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>stop_fitness</type>
          <defname>rg</defname>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>rg</type>
          <defname>runid</defname>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>runid</type>
          <defname>normalize</defname>
          <defval>0</defval>
        </param>
        <param>
          <type>normalize</type>
          <defname>use_constraint_violation</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>use_constraint_violation</type>
          <defname>penalty_coef</defname>
          <defval>True</defval>
        </param>
        <param>
          <type>penalty_coef</type>
          <defval>1E5</defval>
        </param>
        <briefdescription>
<para>Minimizes a given objective function using the Covariance Matrix Adaptation Evolution Strategy with Constraint Handling (CR-FM-NES). </para>
        </briefdescription>
        <detaileddescription>
<para>The optimization adjusts variables within the provided bounds to achieve the minimum value of the given objective function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>The objective function to be minimized. It should be a callable that takes an array-like structure as input and returns a float value as output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional bounds for the variables as a <computeroutput>Bounds</computeroutput> object. If not specified, the search is unbounded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial guess for the independent variables as an array-like structure. If not provided, it is created randomly within the bounds. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input_sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial step size(s) for the search. It can be a float or callable providing an initial sigma value. If multi-dimensional, the mean is used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>The population size for the evolution. Must be an even number. If not specified, defaults to 32. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of function evaluations allowed during optimization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workers</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of parallel workers to use for evaluation. If <computeroutput>None</computeroutput> or <computeroutput>workers</computeroutput> &lt;= 1, no parallelism is applied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>The fitness value at which the optimization halts if surpassed. Default is negative infinity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>A random generator to control stochastic behavior. Defaults to an instance of <computeroutput>Generator</computeroutput> with a <computeroutput>PCG64DXSM</computeroutput> bit generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runid</parametername>
</parameternamelist>
<parameterdescription>
<para>An identifier for this particular optimization run. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether to normalize the variables to the [0, 1] range during optimization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_constraint_violation</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to apply penalty-based handling for constraint violations during optimization. Defaults to True. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>penalty_coef</parametername>
</parameternamelist>
<parameterdescription>
<para>Penalty coefficient for constraint violation handling. Default is 1E5.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>OptimizeResult An object containing the optimization results, such as the optimized variables (<computeroutput>x</computeroutput>), the function value at the solution (<computeroutput>fun</computeroutput>), the number of function evaluations performed (<computeroutput>nfev</computeroutput>), the number of iterations (<computeroutput>nit</computeroutput>), the exit status code (<computeroutput>status</computeroutput>), and whether the optimization was successful (<computeroutput>success</computeroutput>).</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Raises an exception if the optimization failed, and an empty `OptimizeResult` is returned with default attributes indicating failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="95" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="108" bodyend="144"/>
        <references refid="namespacefcmaes_1_1crfmnescpp_1ab1e7635b7e619545987ebfc9380c88e4" compoundref="crfmnescpp_8py" startline="356">fcmaes.crfmnescpp.optimizeCRFMNES_C</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="fcmaes/crfmnescpp.py" line="1" column="1"/>
  </compounddef>
</doxygen>

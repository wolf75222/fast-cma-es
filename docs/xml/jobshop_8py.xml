<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="jobshop_8py" kind="file" language="Python">
    <compoundname>jobshop.py</compoundname>
    <innerclass refid="classexamples_1_1jobshop_1_1fitness" prot="public">examples::jobshop::fitness</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1jobshop">examples::jobshop</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1jobshop_1ad414b941ea67d277248d598fd522b491" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::jobshop.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.jobshop.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="39" column="1" bodyfile="examples/jobshop.py" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1jobshop_1ae54cecc127c4cbd68811b9d513a1fdd1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::jobshop.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.jobshop.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="39" column="1" bodyfile="examples/jobshop.py" bodystart="39" bodyend="-1"/>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a38ad69646f0c310cddd2d489743c2837" compoundref="jobshop_8py" startline="232" endline="251">examples.jobshop.fitness.fun</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1jobshop_1aa4e2a964fa28bd08b9d3ce76f481fc8a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::jobshop.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.jobshop.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="39" column="1" bodyfile="examples/jobshop.py" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1a6346fe9e3884169bb758fec8c703bec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.read_fjs</definition>
        <argsstring>(filename)</argsstring>
        <name>read_fjs</name>
        <qualifiedname>examples.jobshop.read_fjs</qualifiedname>
        <param>
          <type>filename</type>
          <defname>filename</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="42" column="1" bodyfile="examples/jobshop.py" bodystart="42" bodyend="81"/>
        <referencedby refid="namespaceexamples_1_1jobshop_1ab7d20451a09c85673eb6f79306479319" compoundref="jobshop_8py" startline="260" endline="283">examples.jobshop.optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1aeffe05b3358ef00e6271d4eed4eb540f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.gantt</definition>
        <argsstring>(data)</argsstring>
        <name>gantt</name>
        <qualifiedname>examples.jobshop.gantt</qualifiedname>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="82" column="1" bodyfile="examples/jobshop.py" bodystart="82" bodyend="111"/>
        <referencedby refid="namespaceexamples_1_1jobshop_1abb824d6bc21e433ddb4298dd88d9ca28" compoundref="jobshop_8py" startline="132" endline="137">examples.jobshop.chart</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1a3673511507c121e07cc4fbdb1a8241ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.scheduling</definition>
        <argsstring>(tasks, n_jobs, n_machines)</argsstring>
        <name>scheduling</name>
        <qualifiedname>examples.jobshop.scheduling</qualifiedname>
        <param>
          <type>tasks</type>
          <defname>tasks</defname>
        </param>
        <param>
          <type>n_jobs</type>
          <defname>n_jobs</defname>
        </param>
        <param>
          <type>n_machines</type>
          <defname>n_machines</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="112" column="1" bodyfile="examples/jobshop.py" bodystart="112" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1abb824d6bc21e433ddb4298dd88d9ca28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.chart</definition>
        <argsstring>(tasks, n_jobs, n_machines)</argsstring>
        <name>chart</name>
        <qualifiedname>examples.jobshop.chart</qualifiedname>
        <param>
          <type>tasks</type>
          <defname>tasks</defname>
        </param>
        <param>
          <type>n_jobs</type>
          <defname>n_jobs</defname>
        </param>
        <param>
          <type>n_machines</type>
          <defname>n_machines</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="132" column="1" bodyfile="examples/jobshop.py" bodystart="132" bodyend="137"/>
        <references refid="namespaceexamples_1_1jobshop_1aeffe05b3358ef00e6271d4eed4eb540f" compoundref="jobshop_8py" startline="82" endline="111">examples.jobshop.gantt</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1a4189c2c7b394fe5aa8a0e4b244443333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.job_indices</definition>
        <argsstring>(tasks)</argsstring>
        <name>job_indices</name>
        <qualifiedname>examples.jobshop.job_indices</qualifiedname>
        <param>
          <type>tasks</type>
          <defname>tasks</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="138" column="1" bodyfile="examples/jobshop.py" bodystart="138" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1a51c2115b043ef1e6627c7e92383cb656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.reorder</definition>
        <argsstring>(tasks, order, n_operations, job_ids, job_indices)</argsstring>
        <name>reorder</name>
        <qualifiedname>examples.jobshop.reorder</qualifiedname>
        <param>
          <type>tasks</type>
          <defname>tasks</defname>
        </param>
        <param>
          <type>order</type>
          <defname>order</defname>
        </param>
        <param>
          <type>n_operations</type>
          <defname>n_operations</defname>
        </param>
        <param>
          <type>job_ids</type>
          <defname>job_ids</defname>
        </param>
        <param>
          <type>job_indices</type>
          <defname>job_indices</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="156" column="1" bodyfile="examples/jobshop.py" bodystart="156" bodyend="167"/>
        <referencedby refid="namespaceexamples_1_1jobshop_1aa5e76ed2d482c6572421cff829f9da68" compoundref="jobshop_8py" startline="204" endline="209">examples.jobshop.filtered_tasks</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1a3bfeb2d540dcef3a8111193fd5990f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.exec_tasks</definition>
        <argsstring>(tasks, n_jobs, n_machines)</argsstring>
        <name>exec_tasks</name>
        <qualifiedname>examples.jobshop.exec_tasks</qualifiedname>
        <param>
          <type>tasks</type>
          <defname>tasks</defname>
        </param>
        <param>
          <type>n_jobs</type>
          <defname>n_jobs</defname>
        </param>
        <param>
          <type>n_machines</type>
          <defname>n_machines</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="168" column="1" bodyfile="examples/jobshop.py" bodystart="168" bodyend="184"/>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a38ad69646f0c310cddd2d489743c2837" compoundref="jobshop_8py" startline="232" endline="251">examples.jobshop.fitness.fun</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1a750acc4c674962244544953c8738f08a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.filter_tasks</definition>
        <argsstring>(x, tasks, n_operations, n_machines)</argsstring>
        <name>filter_tasks</name>
        <qualifiedname>examples.jobshop.filter_tasks</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>tasks</type>
          <defname>tasks</defname>
        </param>
        <param>
          <type>n_operations</type>
          <defname>n_operations</defname>
        </param>
        <param>
          <type>n_machines</type>
          <defname>n_machines</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="185" column="1" bodyfile="examples/jobshop.py" bodystart="185" bodyend="203"/>
        <referencedby refid="namespaceexamples_1_1jobshop_1aa5e76ed2d482c6572421cff829f9da68" compoundref="jobshop_8py" startline="204" endline="209">examples.jobshop.filtered_tasks</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1aa5e76ed2d482c6572421cff829f9da68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.filtered_tasks</definition>
        <argsstring>(x, task_data, n_operations, n_machines, job_indices, job_ids)</argsstring>
        <name>filtered_tasks</name>
        <qualifiedname>examples.jobshop.filtered_tasks</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>task_data</type>
          <defname>task_data</defname>
        </param>
        <param>
          <type>n_operations</type>
          <defname>n_operations</defname>
        </param>
        <param>
          <type>n_machines</type>
          <defname>n_machines</defname>
        </param>
        <param>
          <type>job_indices</type>
          <defname>job_indices</defname>
        </param>
        <param>
          <type>job_ids</type>
          <defname>job_ids</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="204" column="1" bodyfile="examples/jobshop.py" bodystart="204" bodyend="209"/>
        <references refid="namespaceexamples_1_1jobshop_1a750acc4c674962244544953c8738f08a" compoundref="jobshop_8py" startline="185" endline="203">examples.jobshop.filter_tasks</references>
        <references refid="namespaceexamples_1_1jobshop_1a51c2115b043ef1e6627c7e92383cb656" compoundref="jobshop_8py" startline="156" endline="167">examples.jobshop.reorder</references>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1ac15543b2da616ca5c0286391fe3c7b3a" compoundref="jobshop_8py" startline="227" endline="231">examples.jobshop.fitness.chart</referencedby>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a38ad69646f0c310cddd2d489743c2837" compoundref="jobshop_8py" startline="232" endline="251">examples.jobshop.fitness.fun</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1a3ce73ee1f522f98827b73e440f09683d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.optall</definition>
        <argsstring>(multi_objective=True)</argsstring>
        <name>optall</name>
        <qualifiedname>examples.jobshop.optall</qualifiedname>
        <param>
          <type>multi_objective</type>
          <defname>multi_objective</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="256" column="1" bodyfile="examples/jobshop.py" bodystart="256" bodyend="259"/>
        <references refid="namespaceexamples_1_1jobshop_1ab7d20451a09c85673eb6f79306479319" compoundref="jobshop_8py" startline="260" endline="283">examples.jobshop.optimize</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1ab7d20451a09c85673eb6f79306479319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.optimize</definition>
        <argsstring>(bi, multi_objective=True)</argsstring>
        <name>optimize</name>
        <qualifiedname>examples.jobshop.optimize</qualifiedname>
        <param>
          <type>bi</type>
          <defname>bi</defname>
        </param>
        <param>
          <type>multi_objective</type>
          <defname>multi_objective</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="260" column="1" bodyfile="examples/jobshop.py" bodystart="260" bodyend="283"/>
        <references refid="namespaceexamples_1_1jobshop_1a6346fe9e3884169bb758fec8c703bec4" compoundref="jobshop_8py" startline="42" endline="81">examples.jobshop.read_fjs</references>
        <referencedby refid="namespaceexamples_1_1jobshop_1a01494c8d6d33a9c47a72cda71efcd5e2" compoundref="jobshop_8py" startline="284" endline="288">examples.jobshop.main</referencedby>
        <referencedby refid="namespaceexamples_1_1jobshop_1a3ce73ee1f522f98827b73e440f09683d" compoundref="jobshop_8py" startline="256" endline="259">examples.jobshop.optall</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1jobshop_1a01494c8d6d33a9c47a72cda71efcd5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.jobshop.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <qualifiedname>examples.jobshop.main</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/jobshop.py" line="284" column="1" bodyfile="examples/jobshop.py" bodystart="284" bodyend="288"/>
        <references refid="namespaceexamples_1_1jobshop_1a01494c8d6d33a9c47a72cda71efcd5e2" compoundref="jobshop_8py" startline="284" endline="288">examples.jobshop.main</references>
        <references refid="namespaceexamples_1_1jobshop_1ab7d20451a09c85673eb6f79306479319" compoundref="jobshop_8py" startline="260" endline="283">examples.jobshop.optimize</references>
        <referencedby refid="namespaceexamples_1_1jobshop_1a01494c8d6d33a9c47a72cda71efcd5e2" compoundref="jobshop_8py" startline="284" endline="288">examples.jobshop.main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1jobshop" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>code<sp/>implements<sp/>the<sp/>multi<sp/>objective<sp/>flexible<sp/>job<sp/>shop<sp/>problem.<sp/>It<sp/>supports<sp/>both<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>multiobjective<sp/>and<sp/>the<sp/>single<sp/>objective<sp/>variant<sp/>utilizing<sp/>Numba<sp/>and<sp/>the<sp/>optimizers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/_fcmaescpp/modeoptimizer.cpp<sp/>(MO)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/_fcmaescpp/include/biteopt.h<sp/>(SO).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>FJSP<sp/>is<sp/>to<sp/>determine<sp/>the<sp/>most<sp/>appropriate<sp/>machine<sp/>for<sp/>each<sp/>operation<sp/>(called<sp/>machine<sp/>selection)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>and<sp/>the<sp/>sequence<sp/>of<sp/>the<sp/>operations<sp/>on<sp/>machines<sp/>(called<sp/>operation<sp/>sequencing).<sp/>The<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>objective<sp/>of<sp/>the<sp/>FJSP<sp/>is<sp/>to<sp/>minimize<sp/>some<sp/>indicators,<sp/>e.g.<sp/>makespan,<sp/>maximum<sp/>tardiness<sp/>and<sp/>total<sp/>flow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://www.honda-ri.de/pubs/pdf/3949.pdf<sp/>for<sp/>an<sp/>alternative<sp/>implementation<sp/>of<sp/>the<sp/>same<sp/>problem.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/JobShop.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys,<sp/>math,<sp/>time</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pathlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Path</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry,<sp/>advretry,<sp/>mode,<sp/>modecpp,<sp/>moretry</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bite_cpp,<sp/>Cma_cpp,<sp/>De_cpp,<sp/>de_cma,<sp/>dtime,<sp/>Differential_evolution</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>njit,<sp/>numba</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>seaborn<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>sns</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="39" refid="namespaceexamples_1_1jobshop_1ae54cecc127c4cbd68811b9d513a1fdd1" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="namespaceexamples_1_1jobshop_1a6346fe9e3884169bb758fec8c703bec4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1a6346fe9e3884169bb758fec8c703bec4" kindref="member">read_fjs</ref>(filename):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>inf<sp/>=<sp/>1000000</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(filename)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>f.readlines()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>first_line<sp/>=<sp/>lines[0].split()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>n_jobs<sp/>=<sp/>int(first_line[0])</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>n_machines<sp/>=<sp/>int(first_line[1])</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_operations<sp/>=<sp/>[int(lines[j<sp/>+<sp/>1].split()[0])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_jobs)]</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>n_operations<sp/>=<sp/>np.sum(nb_operations)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_tasks<sp/>=<sp/>sum(nb_operations[j]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_jobs))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>processing_time<sp/>=<sp/>[[inf<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_machines)]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nb_tasks)]</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>each<sp/>job,<sp/>for<sp/>each<sp/>operation,<sp/>the<sp/>corresponding<sp/>task<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>operation_task<sp/>=<sp/>[[0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nb_operations[j])]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_jobs)]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>sum_time<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>id<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_jobs):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>lines[j<sp/>+<sp/>1].split()</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nb_operations[j]):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_machines_operation<sp/>=<sp/>int(line[tmp<sp/>+<sp/>o<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_machines_operation):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine<sp/>=<sp/>int(line[tmp<sp/>+<sp/>o<sp/>+<sp/>2<sp/>*<sp/>i<sp/>+<sp/>2])<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>int(line[tmp<sp/>+<sp/>o<sp/>+<sp/>2<sp/>*<sp/>i<sp/>+<sp/>3])</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processing_time[id][machine]<sp/>=<sp/>time</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_time<sp/>+=<sp/>time</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operation_task[j][o]<sp/>=<sp/>id</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>2<sp/>*<sp/>n_machines_operation</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>tasks<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>job<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_jobs):</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jtasks<sp/>=<sp/>operation_task[job]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>task<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>jtasks:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times<sp/>=<sp/>processing_time[task]</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>machine<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_machines):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>times[machine]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>time<sp/>&lt;<sp/>inf:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tasks.append((job,<sp/>task,<sp/>machine,<sp/>time))</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array(tasks),<sp/>n_jobs,<sp/>n_machines,<sp/>n_operations,<sp/>sum_time</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="namespaceexamples_1_1jobshop_1aeffe05b3358ef00e6271d4eed4eb540f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1aeffe05b3358ef00e6271d4eed4eb540f" kindref="member">gantt</ref>(data):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/>pd.DataFrame.from_dict(data)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;duration&apos;</highlight><highlight class="normal">]=df.end-df.start<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>p_start=df.start.min()</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>p_end=df.end.max()</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>p_duration=(p_end-p_start+1)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>df[</highlight><highlight class="stringliteral">&apos;rel_start&apos;</highlight><highlight class="normal">]=df.start.apply(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>(x-p_start))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>x_ticks=[i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(int(p_duration+1))]</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>x_labels=[(p_start+i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_ticks]<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.figure(figsize=(8,4))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>cols<sp/>=<sp/>sns.color_palette()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>machines<sp/>=<sp/>list(df.machine)<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>mi<sp/>=<sp/>np.argsort(machines)<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/>machines[mi[0]]</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mi:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>machines[i]<sp/>!=<sp/>last:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>machines[i]</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.barh(y=</highlight><highlight class="stringliteral">&apos;M&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(machines[i]),<sp/>left=df.rel_start[i],<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width=df.duration[i],<sp/><sp/>color=cols[df.job[i]<sp/>%<sp/>len(cols)])</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.text(x=df.rel_start[i],<sp/>y=y,<sp/>s<sp/>=<sp/>str(df.task[i]))</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.gca().invert_yaxis()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xticks(ticks=x_ticks,<sp/>labels=x_labels)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&apos;Gantt<sp/>Chart&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xticks(rotation=60)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.grid(axis=</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/>alpha=0.5)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.savefig(</highlight><highlight class="stringliteral">&apos;gantt.png&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="namespaceexamples_1_1jobshop_1a3673511507c121e07cc4fbdb1a8241ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">scheduling(tasks,<sp/>n_jobs,<sp/>n_machines):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>machine_time<sp/>=<sp/>np.zeros(n_machines)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>job_time<sp/>=<sp/>np.zeros(n_jobs)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>solution<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;machine&apos;</highlight><highlight class="normal">:<sp/>[],<sp/></highlight><highlight class="stringliteral">&apos;start&apos;</highlight><highlight class="normal">:<sp/>[],<sp/></highlight><highlight class="stringliteral">&apos;end&apos;</highlight><highlight class="normal">:<sp/>[],<sp/></highlight><highlight class="stringliteral">&apos;job&apos;</highlight><highlight class="normal">:<sp/>[],<sp/></highlight><highlight class="stringliteral">&apos;task&apos;</highlight><highlight class="normal">:[]}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>task<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tasks:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>job<sp/>=<sp/>int(task[0])</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine<sp/>=<sp/>int(task[2])</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>task[3]</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>previous<sp/>task<sp/>needs<sp/>to<sp/>be<sp/>finished<sp/>and<sp/>machine<sp/>needs<sp/>to<sp/>be<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>max(machine_time[machine],<sp/>job_time[job])</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>start<sp/>+<sp/>time</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine_time[machine]<sp/>=<sp/>end</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>job_time[job]<sp/>=<sp/>end<sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution[</highlight><highlight class="stringliteral">&apos;machine&apos;</highlight><highlight class="normal">].append(int(machine))</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution[</highlight><highlight class="stringliteral">&apos;start&apos;</highlight><highlight class="normal">].append(int(start))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution[</highlight><highlight class="stringliteral">&apos;end&apos;</highlight><highlight class="normal">].append(int(end))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution[</highlight><highlight class="stringliteral">&apos;job&apos;</highlight><highlight class="normal">].append(int(job))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution[</highlight><highlight class="stringliteral">&apos;task&apos;</highlight><highlight class="normal">].append(int(task[1]))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="namespaceexamples_1_1jobshop_1abb824d6bc21e433ddb4298dd88d9ca28" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1abb824d6bc21e433ddb4298dd88d9ca28" kindref="member">chart</ref>(tasks,<sp/>n_jobs,<sp/>n_machines):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>solution<sp/>=<sp/>scheduling(tasks,<sp/>n_jobs,<sp/>n_machines)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(solution)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1jobshop_1aeffe05b3358ef00e6271d4eed4eb540f" kindref="member">gantt</ref>(solution)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138" refid="namespaceexamples_1_1jobshop_1a4189c2c7b394fe5aa8a0e4b244443333" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1a4189c2c7b394fe5aa8a0e4b244443333" kindref="member">job_indices</ref>(tasks):</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>indices<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ids<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>tasks.shape[0]</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/>tasks[0]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>indices.append(j)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n+1):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>n<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>tasks[i][0]<sp/>!=<sp/>last[0]<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>tasks[i][1]<sp/>!=<sp/>last[1]:<sp/></highlight><highlight class="comment">#<sp/>new<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ids.append(last[0])</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>n<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>tasks[i][0]<sp/>!=<sp/>last[0]):</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.append(j+1)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>n:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>tasks[i]</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array(indices),<sp/>np.array(ids)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="156" refid="namespaceexamples_1_1jobshop_1a51c2115b043ef1e6627c7e92383cb656" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1a51c2115b043ef1e6627c7e92383cb656" kindref="member">reorder</ref>(tasks,<sp/>order,<sp/>n_operations,<sp/>job_ids,<sp/>job_indices):</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>ids<sp/>=<sp/>job_ids[order]</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>ordered<sp/>=<sp/>np.empty((n_operations,4))</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>op_index<sp/>=<sp/>np.zeros(n_operations,<sp/>dtype=numba.int32)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_operations):</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine<sp/>=<sp/>ids[i]</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>job_indices[machine]<sp/>+<sp/>op_index[machine]</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_index[machine]<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ordered[i]<sp/>=<sp/>tasks[index]</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ordered</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="168" refid="namespaceexamples_1_1jobshop_1a3bfeb2d540dcef3a8111193fd5990f23" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1a3bfeb2d540dcef3a8111193fd5990f23" kindref="member">exec_tasks</ref>(tasks,<sp/>n_jobs,<sp/>n_machines):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>machine_time<sp/>=<sp/>np.zeros(n_machines)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>machine_work_time<sp/>=<sp/>np.zeros(n_machines)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>job_time<sp/>=<sp/>np.zeros(n_jobs)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>task<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tasks:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>job<sp/>=<sp/>int(task[0])</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine<sp/>=<sp/>int(task[2])</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>task[3]</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>previous<sp/>task<sp/>needs<sp/>to<sp/>be<sp/>finished<sp/>and<sp/>machine<sp/>needs<sp/>to<sp/>be<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_time<sp/>=<sp/>max(machine_time[machine],<sp/>job_time[job])<sp/>+<sp/>time</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine_time[machine]<sp/>=<sp/>end_time</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>job_time[job]<sp/>=<sp/>end_time<sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine_work_time[machine]<sp/>+=<sp/>time</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&quot;exec<sp/>job<sp/>{0}<sp/>task<sp/>{1}<sp/>machine<sp/>{2}<sp/>start<sp/>{3}<sp/>end<sp/>{4}&quot;.format(job,<sp/>int(task[1]),<sp/>machine,<sp/>end_time-time,<sp/>end_time))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>machine_time,<sp/>job_time,<sp/>machine_work_time</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="185" refid="namespaceexamples_1_1jobshop_1a750acc4c674962244544953c8738f08a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1a750acc4c674962244544953c8738f08a" kindref="member">filter_tasks</ref>(x,<sp/>tasks,<sp/>n_operations,<sp/>n_machines):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>tasks.shape[0]</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>operations<sp/>=<sp/>np.empty((n_operations,4))</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/>tasks[0]</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>last_i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n+1):</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>n<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>tasks[i][0]<sp/>!=<sp/>last[0]<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>tasks[i][1]<sp/>!=<sp/>last[1]:<sp/></highlight><highlight class="comment">#<sp/>new<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>i<sp/>-<sp/>last_i</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel_i<sp/>=<sp/>int(x[j]*10*n_machines)<sp/>%<sp/>m</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected<sp/>=<sp/>tasks[last_i<sp/>+<sp/>sel_i]</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operations[j,:]<sp/>=<sp/>selected</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_i<sp/>=<sp/>i</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>n:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>tasks[i]</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operations</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="namespaceexamples_1_1jobshop_1aa5e76ed2d482c6572421cff829f9da68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1aa5e76ed2d482c6572421cff829f9da68" kindref="member">filtered_tasks</ref>(x,<sp/>task_data,<sp/>n_operations,<sp/>n_machines,<sp/>job_indices,<sp/>job_ids):</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>operations<sp/>=<sp/><ref refid="namespaceexamples_1_1jobshop_1a750acc4c674962244544953c8738f08a" kindref="member">filter_tasks</ref>(x,<sp/>task_data,<sp/>n_operations,<sp/>n_machines)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>order<sp/>=<sp/>np.argsort(x[n_operations:])</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>tasks<sp/>=<sp/><ref refid="namespaceexamples_1_1jobshop_1a51c2115b043ef1e6627c7e92383cb656" kindref="member">reorder</ref>(operations,<sp/>order,<sp/>n_operations,<sp/>job_ids,<sp/>job_indices)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tasks</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="classexamples_1_1jobshop_1_1fitness" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1jobshop_1_1fitness" kindref="compound">fitness</ref>:<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classexamples_1_1jobshop_1_1fitness_1a36837d685fafe51e15b3485ffab58eff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1jobshop_1_1fitness_1a36837d685fafe51e15b3485ffab58eff" kindref="member">__init__</ref>(self,<sp/>task_data,<sp/>bounds,<sp/>n_jobs,<sp/>n_operations,<sp/>n_machines,<sp/>name):</highlight></codeline>
<codeline lineno="213" refid="classexamples_1_1jobshop_1_1fitness_1aef018505894519a72df356d42c4c6d72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1aef018505894519a72df356d42c4c6d72" kindref="member">evals</ref><sp/>=<sp/>mp.RawValue(ct.c_long,<sp/>0)<sp/><sp/></highlight><highlight class="comment">#<sp/>writable<sp/>across<sp/>python<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classexamples_1_1jobshop_1_1fitness_1a0983086fe5e1ad65b0705e7eef52cf57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a0983086fe5e1ad65b0705e7eef52cf57" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight><highlight class="comment">#<sp/>writable<sp/>across<sp/>python<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classexamples_1_1jobshop_1_1fitness_1acc27d0fb31438fceefb1222643e315ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1acc27d0fb31438fceefb1222643e315ad" kindref="member">t0</ref><sp/>=<sp/>time.perf_counter()</highlight></codeline>
<codeline lineno="216" refid="classexamples_1_1jobshop_1_1fitness_1a7e2c5c07d96ad3f5ca01911202bc31fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a7e2c5c07d96ad3f5ca01911202bc31fb" kindref="member">task_data</ref><sp/>=<sp/>task_data<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217" refid="classexamples_1_1jobshop_1_1fitness_1a58dda2b3cc271437a42e1c25fbbd8d79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a58dda2b3cc271437a42e1c25fbbd8d79" kindref="member">n_jobs</ref><sp/>=<sp/>n_jobs</highlight></codeline>
<codeline lineno="218" refid="classexamples_1_1jobshop_1_1fitness_1a03d0bc2d19ef688e81badc24e828f0d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a03d0bc2d19ef688e81badc24e828f0d3" kindref="member">n_operations</ref><sp/>=<sp/>n_operations</highlight></codeline>
<codeline lineno="219" refid="classexamples_1_1jobshop_1_1fitness_1a91b1681ba789472a1e6a8a628a386582" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a91b1681ba789472a1e6a8a628a386582" kindref="member">n_machines</ref><sp/>=<sp/>n_machines<sp/></highlight></codeline>
<codeline lineno="220" refid="classexamples_1_1jobshop_1_1fitness_1af2a6fe9d692d05db14d4256d583af5c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1af2a6fe9d692d05db14d4256d583af5c4" kindref="member">bounds</ref><sp/>=<sp/>bounds</highlight></codeline>
<codeline lineno="221" refid="classexamples_1_1jobshop_1_1fitness_1a0077590ffb70ed4a4311f3abfc2ec156" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a0077590ffb70ed4a4311f3abfc2ec156" kindref="member">name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="222" refid="classexamples_1_1jobshop_1_1fitness_1acaf99377698f869f95b80ce6856dab34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1acaf99377698f869f95b80ce6856dab34" kindref="member">nobj</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="223" refid="classexamples_1_1jobshop_1_1fitness_1a1b2e2aff8fad66c46ac50a13938ea994" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a1b2e2aff8fad66c46ac50a13938ea994" kindref="member">ncon</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="224" refid="classexamples_1_1jobshop_1_1fitness_1a87dcab98144aaa1557e230f89e710a6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a87dcab98144aaa1557e230f89e710a6f" kindref="member">weights</ref><sp/>=<sp/>np.array([1.0,<sp/>0.02,<sp/>0.001])<sp/></highlight><highlight class="comment">#<sp/>only<sp/>used<sp/>for<sp/>single<sp/>objective<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classexamples_1_1jobshop_1_1fitness_1a3e1ed42a68b5e6fbe96b7507db888a14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a2b3febf6797fd4b041a9b940237da76f" kindref="member">job_indices</ref>,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a3e1ed42a68b5e6fbe96b7507db888a14" kindref="member">job_ids</ref><sp/>=<sp/><ref refid="classexamples_1_1jobshop_1_1fitness_1a2b3febf6797fd4b041a9b940237da76f" kindref="member">job_indices</ref>(task_data)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227" refid="classexamples_1_1jobshop_1_1fitness_1ac15543b2da616ca5c0286391fe3c7b3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1jobshop_1_1fitness_1ac15543b2da616ca5c0286391fe3c7b3a" kindref="member">chart</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tasks<sp/>=<sp/><ref refid="namespaceexamples_1_1jobshop_1aa5e76ed2d482c6572421cff829f9da68" kindref="member">filtered_tasks</ref>(x,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a7e2c5c07d96ad3f5ca01911202bc31fb" kindref="member">task_data</ref>,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a03d0bc2d19ef688e81badc24e828f0d3" kindref="member">n_operations</ref>,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a91b1681ba789472a1e6a8a628a386582" kindref="member">n_machines</ref>,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a2b3febf6797fd4b041a9b940237da76f" kindref="member">job_indices</ref>,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a3e1ed42a68b5e6fbe96b7507db888a14" kindref="member">job_ids</ref>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classexamples_1_1jobshop_1_1fitness_1ac15543b2da616ca5c0286391fe3c7b3a" kindref="member">chart</ref>(tasks,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a58dda2b3cc271437a42e1c25fbbd8d79" kindref="member">n_jobs</ref>,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a91b1681ba789472a1e6a8a628a386582" kindref="member">n_machines</ref>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232" refid="classexamples_1_1jobshop_1_1fitness_1a38ad69646f0c310cddd2d489743c2837" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1jobshop_1_1fitness_1a38ad69646f0c310cddd2d489743c2837" kindref="member">fun</ref>(self,<sp/>x):<sp/></highlight><highlight class="comment">#<sp/>multi<sp/>objective<sp/>function<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tasks<sp/>=<sp/><ref refid="namespaceexamples_1_1jobshop_1aa5e76ed2d482c6572421cff829f9da68" kindref="member">filtered_tasks</ref>(x,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a7e2c5c07d96ad3f5ca01911202bc31fb" kindref="member">task_data</ref>,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a03d0bc2d19ef688e81badc24e828f0d3" kindref="member">n_operations</ref>,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a91b1681ba789472a1e6a8a628a386582" kindref="member">n_machines</ref>,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a2b3febf6797fd4b041a9b940237da76f" kindref="member">job_indices</ref>,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a3e1ed42a68b5e6fbe96b7507db888a14" kindref="member">job_ids</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine_time,<sp/>job_time,<sp/>machine_work_time<sp/>=<sp/><ref refid="namespaceexamples_1_1jobshop_1a3bfeb2d540dcef3a8111193fd5990f23" kindref="member">exec_tasks</ref>(tasks,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a58dda2b3cc271437a42e1c25fbbd8d79" kindref="member">n_jobs</ref>,<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a91b1681ba789472a1e6a8a628a386582" kindref="member">n_machines</ref>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span<sp/>=<sp/>np.amax(machine_time)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>=<sp/>np.sum(machine_work_time)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wmax<sp/>=<sp/>np.amax(machine_work_time)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>np.array([span,<sp/>work,<sp/>wmax])<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>sum(self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a87dcab98144aaa1557e230f89e710a6f" kindref="member">weights</ref>*ys)<sp/></highlight><highlight class="comment">#<sp/>weighted<sp/>sum<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1aef018505894519a72df356d42c4c6d72" kindref="member">evals</ref>.value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a0983086fe5e1ad65b0705e7eef52cf57" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a0983086fe5e1ad65b0705e7eef52cf57" kindref="member">best_y</ref>.value<sp/>=<sp/>y<sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;evals<sp/>=<sp/>{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>y<sp/>=<sp/>{2:.2f}<sp/>s<sp/>=<sp/>{3:.0f}<sp/>w<sp/>=<sp/>{4:.0f}<sp/>m<sp/>=<sp/>{5:.0f}<sp/>m=<sp/>{6:s}<sp/>j=<sp/>{7:s}<sp/>w=<sp/>{8:s}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1jobshop_1ae54cecc127c4cbd68811b9d513a1fdd1" kindref="member">format</ref>(self.<ref refid="classexamples_1_1jobshop_1_1fitness_1aef018505894519a72df356d42c4c6d72" kindref="member">evals</ref>.value,<sp/>dtime(self.<ref refid="classexamples_1_1jobshop_1_1fitness_1acc27d0fb31438fceefb1222643e315ad" kindref="member">t0</ref>),<sp/>y,<sp/>span,<sp/>work,<sp/>wmax,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(si)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>si<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>machine_time]),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(oi)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>oi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>job_time]),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(oi)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>oi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>machine_work_time]),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ys<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="classexamples_1_1jobshop_1_1fitness_1a65088d25d52805209f6dfec80ed1aa9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1jobshop_1_1fitness_1a65088d25d52805209f6dfec80ed1aa9f" kindref="member">__call__</ref>(self,<sp/>x):<sp/></highlight><highlight class="comment">#<sp/>single<sp/>objective<sp/>function<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a38ad69646f0c310cddd2d489743c2837" kindref="member">fun</ref>(x)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum(self.<ref refid="classexamples_1_1jobshop_1_1fitness_1a87dcab98144aaa1557e230f89e710a6f" kindref="member">weights</ref>*ys)<sp/></highlight><highlight class="comment">#<sp/>weighted<sp/>sum<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="256" refid="namespaceexamples_1_1jobshop_1a3ce73ee1f522f98827b73e440f09683d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1a3ce73ee1f522f98827b73e440f09683d" kindref="member">optall</ref>(multi_objective<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,16):</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1jobshop_1ab7d20451a09c85673eb6f79306479319" kindref="member">optimize</ref>(i,<sp/>multi_objective)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="namespaceexamples_1_1jobshop_1ab7d20451a09c85673eb6f79306479319" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1ab7d20451a09c85673eb6f79306479319" kindref="member">optimize</ref>(bi,<sp/>multi_objective<sp/>=<sp/>True):<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BrandimarteMk&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(bi)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>tasks,<sp/>n_jobs,<sp/>n_machines,<sp/>n_operations,<sp/>_<sp/>=<sp/><ref refid="namespaceexamples_1_1jobshop_1a6346fe9e3884169bb758fec8c703bec4" kindref="member">read_fjs</ref>(</highlight><highlight class="stringliteral">&quot;data/1_Brandimarte/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.fjs&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>2*n_operations</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>lower_bound<sp/>=<sp/>np.zeros(dim)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>lower_bound[:]<sp/>=<sp/>0.0000001<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_bound<sp/>=<sp/>np.zeros(dim)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_bound[:]<sp/>=<sp/>0.9999999</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds(lower_bound,<sp/>upper_bound)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="classexamples_1_1jobshop_1_1fitness" kindref="compound">fitness</ref>(tasks,<sp/>bounds,<sp/>n_jobs,<sp/>n_operations,<sp/>n_machines,<sp/>name)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>multi_objective:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs,<sp/>front<sp/>=<sp/>modecpp.retry(fit.fun,<sp/>fit.nobj,<sp/>fit.ncon,<sp/>fit.bounds,<sp/>num_retries=32,<sp/>popsize<sp/>=<sp/>48,<sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>960000,<sp/>nsga_update<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>workers=16)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>modecpp.retry(num_retries=32,<sp/>popsize<sp/>=<sp/>48,<sp/>max_evals<sp/>=<sp/>960000,<sp/>nsga_update<sp/>=<sp/>True,<sp/>workers=16&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(str([tuple(y)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>front]))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store<sp/>=<sp/><ref refid="classfcmaes_1_1retry_1_1_store" kindref="compound">retry.Store</ref>(fit,<sp/>bounds)<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Bite_cpp(960000,M=1).minimize,<sp/>num_retries=256)&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry.retry(store,<sp/><ref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" kindref="compound">Bite_cpp</ref>(960000,M=1).minimize,<sp/>num_retries=256)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fit,<sp/>xs</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284" refid="namespaceexamples_1_1jobshop_1a01494c8d6d33a9c47a72cda71efcd5e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1jobshop_1a01494c8d6d33a9c47a72cda71efcd5e2" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#optall(multi_objective<sp/>=<sp/>True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>fit,<sp/>xs<sp/>=<sp/><ref refid="namespaceexamples_1_1jobshop_1ab7d20451a09c85673eb6f79306479319" kindref="member">optimize</ref>(1,<sp/>multi_objective<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.chart(xs[0])<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1jobshop_1a01494c8d6d33a9c47a72cda71efcd5e2" kindref="member">main</ref>()</highlight></codeline>
    </programlisting>
    <location file="examples/jobshop.py"/>
  </compounddef>
</doxygen>

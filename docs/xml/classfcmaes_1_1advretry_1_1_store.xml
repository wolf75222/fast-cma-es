<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1advretry_1_1_store" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::advretry::Store</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::fun</definition>
        <argsstring></argsstring>
        <name>fun</name>
        <qualifiedname>fcmaes.advretry.Store.fun</qualifiedname>
        <initializer>=  fun</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="303" column="1" bodyfile="fcmaes/advretry.py" bodystart="303" bodyend="-1"/>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1ac24e8f7966063c3bc0cc215a561cbadb" compoundref="crypto_8py" startline="167" endline="170">examples.crypto.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1add29e0fd221efd5ffa3ce2f0933b633f" compoundref="harvesting_8py" startline="211" endline="214">examples.harvesting.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a65088d25d52805209f6dfec80ed1aa9f" compoundref="jobshop_8py" startline="252" endline="255">examples.jobshop.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback_1a2725c10a3383f79e36a236de01c56c53" compoundref="evaluator_8py" startline="723" endline="729">fcmaes.evaluator.callback.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__mo_1a99eab2bafd1186fff0be59544a596443" compoundref="evaluator_8py" startline="880" endline="893">fcmaes.evaluator.callback_mo.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__par_1a2cc5592287f3feddcda3e51dcf38054b" compoundref="evaluator_8py" startline="950" endline="969">fcmaes.evaluator.callback_par.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__so_1a91b3f73bc6c6999748aaf8bfb94cdd39" compoundref="evaluator_8py" startline="795" endline="809">fcmaes.evaluator.callback_so.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1wrapper_1a3da595496f0fa1e7a64955db25dec429" compoundref="mode_8py" startline="1370" endline="1403">fcmaes.mode.wrapper.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a4f28f983cc8d831a834065b9ad762dc1" compoundref="de_8py" startline="567" endline="579">fcmaes.de.DE.apply_fun</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a2d6eb4d91b58018e74be863ecf71862b" compoundref="de_8py" startline="658" endline="693">fcmaes.de.DE.do_optimize_delayed_update</referencedby>
        <referencedby refid="classfcmaes_1_1moretry_1_1mo__wrapper_1a9f091a54dc6f2c2fefb4c6a90ab108a2" compoundref="moretry_8py" startline="327" endline="335">fcmaes.moretry.mo_wrapper.eval</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a8b05705866c5de83931191324a4e1311" compoundref="benchmark__gtop__pygmo_8py" startline="46" endline="48">examples.benchmark_gtop_pygmo.pygmo_udp.fitness</referencedby>
        <referencedby refid="classfcmaes_1_1moretry_1_1mo__wrapper_1a9dbf1252c03ebe42925abe561e556598" compoundref="moretry_8py" startline="346" endline="348">fcmaes.moretry.mo_wrapper.mo_eval</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a1209aafc30c6a32427e2707c0bcadd22" compoundref="crypto_8py" startline="171" endline="176">examples.crypto.fitness.mofun</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a3ba688bf0d5b34a2cc6268a2248dfaa0" compoundref="crypto_8py" startline="177" endline="180">examples.crypto.fitness.ndfun</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a02628583a11cb998eba4aa6f9b499f76" compoundref="optimizer_8py" startline="3307" endline="3313">fcmaes.optimizer.NLopt.nlfunc</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1aa36396c7701eed3f5d8e84a14a111104" compoundref="evaluator_8py" startline="433" endline="437">fcmaes.evaluator._fitness.values</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa" compoundref="advretry_8py" startline="360" endline="375">fcmaes.advretry.Store.wrapper</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::lower</definition>
        <argsstring></argsstring>
        <name>lower</name>
        <qualifiedname>fcmaes.advretry.Store.lower</qualifiedname>
        <briefdescription>
<para>The lower bounds for the optimization problem. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="304" column="1" bodyfile="fcmaes/advretry.py" bodystart="304" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1ac3453c9ebcc0897aedb6a53a8b93ffcd" compoundref="de_8py" startline="797" endline="802">fcmaes.de.DE._feasible</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1aa3f08e7e3d5e33149762ebf261b6c719" compoundref="mode_8py" startline="819" endline="824">fcmaes.mode.MODE._feasible</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a61072489f9cd73c41286fbaf8d89357b" compoundref="de_8py" startline="820" endline="831">fcmaes.de.DE._modifier</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab6f842a65bbcbab7bc6821c25737d0aa" compoundref="mode_8py" startline="838" endline="849">fcmaes.mode.MODE._modifier</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1adf6645de9d62c0900bad93d5a6934a4b" compoundref="de_8py" startline="775" endline="783">fcmaes.de.DE._sample</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a8eb775858ef6da65ce5d71629503e622" compoundref="mode_8py" startline="799" endline="804">fcmaes.mode.MODE._sample</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a763742cf075aeb82ff147ef85a40c7a0" compoundref="evaluator_8py" startline="452" endline="460">fcmaes.evaluator._fitness.closestFeasible</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591" compoundref="advretry_8py" startline="529" endline="546">fcmaes.advretry.Store.limits</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a29791dbcb2e070361529475630de2052" compoundref="mode_8py" startline="694" endline="731">fcmaes.mode.MODE.pop_update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a8d112bb91cc58f032a0bb929c236fd8e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::upper</definition>
        <argsstring></argsstring>
        <name>upper</name>
        <qualifiedname>fcmaes.advretry.Store.upper</qualifiedname>
        <initializer>=  _convertBounds(bounds)</initializer>
        <briefdescription>
<para>The upper bounds for the optimization problem. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="304" column="1" bodyfile="fcmaes/advretry.py" bodystart="304" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1ac3453c9ebcc0897aedb6a53a8b93ffcd" compoundref="de_8py" startline="797" endline="802">fcmaes.de.DE._feasible</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1aa3f08e7e3d5e33149762ebf261b6c719" compoundref="mode_8py" startline="819" endline="824">fcmaes.mode.MODE._feasible</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a61072489f9cd73c41286fbaf8d89357b" compoundref="de_8py" startline="820" endline="831">fcmaes.de.DE._modifier</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab6f842a65bbcbab7bc6821c25737d0aa" compoundref="mode_8py" startline="838" endline="849">fcmaes.mode.MODE._modifier</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1adf6645de9d62c0900bad93d5a6934a4b" compoundref="de_8py" startline="775" endline="783">fcmaes.de.DE._sample</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a8eb775858ef6da65ce5d71629503e622" compoundref="mode_8py" startline="799" endline="804">fcmaes.mode.MODE._sample</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a763742cf075aeb82ff147ef85a40c7a0" compoundref="evaluator_8py" startline="452" endline="460">fcmaes.evaluator._fitness.closestFeasible</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591" compoundref="advretry_8py" startline="529" endline="546">fcmaes.advretry.Store.limits</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a29791dbcb2e070361529475630de2052" compoundref="mode_8py" startline="694" endline="731">fcmaes.mode.MODE.pop_update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1ad2d1513e8146883a75bab3f55fb4be95" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <qualifiedname>fcmaes.advretry.Store.delta</qualifiedname>
        <initializer>=  self.upper - self.lower</initializer>
        <briefdescription>
<para>The difference between upper and lower bounds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="305" column="1" bodyfile="fcmaes/advretry.py" bodystart="305" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a00ab052ea8b184b7344875122481b623" compoundref="advretry_8py" startline="561" endline="563">fcmaes.advretry.Store.distance</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591" compoundref="advretry_8py" startline="529" endline="546">fcmaes.advretry.Store.limits</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::capacity</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <qualifiedname>fcmaes.advretry.Store.capacity</qualifiedname>
        <initializer>=  capacity</initializer>
        <briefdescription>
<para>Maximum storage capacity for evaluated results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="306" column="1" bodyfile="fcmaes/advretry.py" bodystart="306" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1store_1a215371084a0bff8b1368d27a91495fb5" compoundref="mode_8py" startline="276" endline="290">fcmaes.mode.store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1store_1aac282e295578d049a156da83056e25fe" compoundref="mode_8py" startline="303" endline="318">fcmaes.mode.store.add_results</referencedby>
        <referencedby refid="classexamples_1_1routing_1_1_routing_1a15358173d0f3864be3de5ae2213baf66" compoundref="routing_8py" startline="78" endline="106">examples.routing.Routing.dump</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a0bcd8007cc5cf709da8ccc42aa2c46eb" compoundref="mapelites_8py" startline="1262" endline="1269">fcmaes.mapelites.Archive.dump</referencedby>
        <referencedby refid="classvrptw_1_1_v_r_p_t_w_1a824ddbcad6207e8d14f8a41809c1b3f2" compoundref="vrptw_8py" startline="105" endline="149">vrptw.VRPTW.dump</referencedby>
        <referencedby refid="classexamples_1_1routing_1_1_routing_1abd93168d87b5678e916b090c6bcd080a" compoundref="routing_8py" startline="68" endline="70">examples.routing.Routing.fitness</referencedby>
        <referencedby refid="classvrptw_1_1_v_r_p_t_w_1a6857cddbe741acf9b5980c793dd2b540" compoundref="vrptw_8py" startline="100" endline="104">vrptw.VRPTW.fitness</referencedby>
        <referencedby refid="classexamples_1_1routing_1_1_routing_1a2ec29234dfaac9bd2805420c2efc8479" compoundref="routing_8py" startline="75" endline="77">examples.routing.Routing.fitness_so</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a9884e6696809729e69a167c91d245464" compoundref="mapelites_8py" startline="1090" endline="1092">fcmaes.mapelites.Archive.get_cs</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1abf4f2d32b118fa044a6eb99d9b508c1f" compoundref="mapelites_8py" startline="1104" endline="1106">fcmaes.mapelites.Archive.get_cs_decoded</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1ab4f4023cb427da5cbedcf919c4641bfa" compoundref="mapelites_8py" startline="739" endline="744">fcmaes.mapelites.Archive.index_of_niches</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a62da9c6f511c298d1ef06d6af7600196" compoundref="mapelites_8py" startline="707" endline="728">fcmaes.mapelites.Archive.load</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a5721ccf23e8de4509bc3a9e996e1861a" compoundref="mapelites_8py" startline="1208" endline="1213">fcmaes.mapelites.Archive.random_xs</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1ac6ff35da8231cd4aedb488427841aa3b" compoundref="retry_8py" startline="648" endline="657">fcmaes.retry.Store.sort</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a4c08da826f59305eaa14d6bbdbaa6b1d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::num_retries</definition>
        <argsstring></argsstring>
        <name>num_retries</name>
        <qualifiedname>fcmaes.advretry.Store.num_retries</qualifiedname>
        <initializer>=  num_retries</initializer>
        <briefdescription>
<para>Maximum number of retries during the optimization process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="314" column="1" bodyfile="fcmaes/advretry.py" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1aebbd407d5af1334e38fbdc5a8ba36d3f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::eval_fac_incr</definition>
        <argsstring></argsstring>
        <name>eval_fac_incr</name>
        <qualifiedname>fcmaes.advretry.Store.eval_fac_incr</qualifiedname>
        <initializer>=  <ref refid="classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538" kindref="member">max_eval_fac</ref> / (<ref refid="classfcmaes_1_1advretry_1_1_store_1a4c08da826f59305eaa14d6bbdbaa6b1d" kindref="member">num_retries</ref>/<ref refid="classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae" kindref="member">check_interval</ref>)</initializer>
        <briefdescription>
<para>Increment factor for evaluation adjustments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="316" column="1" bodyfile="fcmaes/advretry.py" bodystart="316" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df" compoundref="advretry_8py" startline="826" endline="837">fcmaes.advretry.Store.get_runs_compare_incr</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::max_eval_fac</definition>
        <argsstring></argsstring>
        <name>max_eval_fac</name>
        <qualifiedname>fcmaes.advretry.Store.max_eval_fac</qualifiedname>
        <initializer>=  max_eval_fac</initializer>
        <briefdescription>
<para>Maximum evaluation factor throughout the retries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="317" column="1" bodyfile="fcmaes/advretry.py" bodystart="317" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df" compoundref="advretry_8py" startline="826" endline="837">fcmaes.advretry.Store.get_runs_compare_incr</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int fcmaes.advretry.Store::check_interval</definition>
        <argsstring></argsstring>
        <name>check_interval</name>
        <qualifiedname>fcmaes.advretry.Store.check_interval</qualifiedname>
        <initializer>=  check_interval</initializer>
        <briefdescription>
<para>Interval for sorting the evaluation store. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="318" column="1" bodyfile="fcmaes/advretry.py" bodystart="318" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df" compoundref="advretry_8py" startline="826" endline="837">fcmaes.advretry.Store.get_runs_compare_incr</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a440b834ab3066810ed77da1c5093fa49" compoundref="retry_8py" startline="853" endline="857">fcmaes.retry.Store.incr_count_evals</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" prot="public" static="no" mutable="no">
        <type>(pid+1) *self.dim]</type>
        <definition>fcmaes.advretry.Store::dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>fcmaes.advretry.Store.dim</qualifiedname>
        <initializer>=  len(self.lower)</initializer>
        <briefdescription>
<para>Dimension of the optimization problem based on bounds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="319" column="1" bodyfile="fcmaes/advretry.py" bodystart="319" bodyend="-1"/>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1a182cdb7a5c25015336faa57a9afebef6" compoundref="damp_8py" startline="67" endline="76">examples.damp.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__so_1a91b3f73bc6c6999748aaf8bfb94cdd39" compoundref="evaluator_8py" startline="795" endline="809">fcmaes.evaluator.callback_so.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ad7ca82faa65b471b66977e2f18676025" compoundref="cmaescpp_8py" startline="277" endline="291">fcmaes.cmaescpp.ACMA_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" compoundref="crfmnescpp_8py" startline="253" endline="267">fcmaes.crfmnescpp.CRFMNES_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ac938731f80bce720692af9b7b84e41d0" compoundref="decpp_8py" startline="329" endline="343">fcmaes.decpp.DE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ae42863ed67ebbb8f39a488a9caecebc1" compoundref="modecpp_8py" startline="471" endline="485">fcmaes.modecpp.MODE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1ab89a6f59ef9aafbe855a9547c80669f5" compoundref="cmaes_8py" startline="432" endline="437">fcmaes.cmaes.Cmaes.ask_one</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a00ab052ea8b184b7344875122481b623" compoundref="advretry_8py" startline="561" endline="563">fcmaes.advretry.Store.distance</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a4a9c0d92560064a154b7bbcf1d537480" compoundref="mapelites_8py" startline="1146" endline="1149">fcmaes.mapelites.Archive.get_stat</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b" compoundref="advretry_8py" startline="702" endline="704">fcmaes.advretry.Store.get_x</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a12befeeecf65003f61a073520070a4d7" compoundref="mapelites_8py" startline="882" endline="889">fcmaes.mapelites.Archive.get_x_stdev</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" compoundref="anpcp_8py" startline="78" endline="98">anpcp.ANPCP.init_tsp</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a62da9c6f511c298d1ef06d6af7600196" compoundref="mapelites_8py" startline="707" endline="728">fcmaes.mapelites.Archive.load</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1aff1c6aff205dfd66b677b1237f3566e7" compoundref="cmaes_8py" startline="498" endline="503">fcmaes.cmaes.Cmaes.newArgs</referencedby>
        <referencedby refid="classexamples_1_1siemens_1_1_plant_1a1e32e624120cf855722e347ed941b77f" compoundref="siemens_8py" startline="108" endline="118">examples.siemens.Plant.next_product</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a96c79aee6dab29a25fd28b0b383f1916" compoundref="employee_8py" startline="241" endline="250">examples.employee.problem.optimize</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a451356183bd266ec5feb44a1b9cf92ef" compoundref="employee_8py" startline="251" endline="268">examples.employee.problem.optimize_mo</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a348ca090a0116efc16fce6a4bd180871" compoundref="cmaescpp_8py" startline="361" endline="375">fcmaes.cmaescpp.ACMA_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" compoundref="crfmnescpp_8py" startline="307" endline="321">fcmaes.crfmnescpp.CRFMNES_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ae6321ea6313c6ef9bf44d492aaa619f8" compoundref="decpp_8py" startline="385" endline="399">fcmaes.decpp.DE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3433826fba507128212dc6dd455a7227" compoundref="modecpp_8py" startline="569" endline="583">fcmaes.modecpp.MODE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1af629821589f78858c6422998bcb02fe5" compoundref="damp_8py" startline="77" endline="90">examples.damp.fitness.qd_fit</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a27cdaec6181e9866758aaf02adcd2943" compoundref="anpcp_8py" startline="99" endline="102">anpcp.ANPCP.random_x</referencedby>
        <referencedby refid="classanpcpc_1_1_a_n_p_c_p_c_1ac4f58722e70806a92094828b839f084e" compoundref="anpcpc_8py" startline="86" endline="89">anpcpc.ANPCPC.random_x</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1aaf2e40c524b9a8b328decb0b798bd695" compoundref="cmaescpp_8py" startline="390" endline="404">fcmaes.cmaescpp.ACMA_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" compoundref="crfmnescpp_8py" startline="339" endline="353">fcmaes.crfmnescpp.CRFMNES_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1a2f794b6d8709f5b14d5f56695bb8d8ff" compoundref="decpp_8py" startline="416" endline="430">fcmaes.decpp.DE_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e" compoundref="pgpecpp_8py" startline="393" endline="407">fcmaes.pgpecpp.PGPE_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a574aed6e61fc20fb94b479cb8fd5fc55" compoundref="mapelites_8py" startline="1175" endline="1178">fcmaes.mapelites.Archive.set_stat</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a732636cd5ab3c40b878ef2e0274b1d1b" compoundref="advretry_8py" startline="798" endline="800">fcmaes.advretry.Store.set_x</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1ac7cbecf8b29fb1048bd4cc7ec900692c" compoundref="cmaes_8py" startline="455" endline="487">fcmaes.cmaes.Cmaes.tell_one</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1ae26e42639fa8cb28b64c1fe1bcd7109c" compoundref="cmaes_8py" startline="776" endline="807">fcmaes.cmaes.Cmaes.updateBD</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1a7dada2c399890feafb59c01d1f424ee5" compoundref="cmaes_8py" startline="604" endline="677">fcmaes.cmaes.Cmaes.updateCMA</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1afd8b8665d87f14c53cd60da16c932336" compoundref="cmaes_8py" startline="726" endline="766">fcmaes.cmaes.Cmaes.updateCovariance</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1ae3fd3fbe79efd9509bb8462382d63bdd" compoundref="cmaes_8py" startline="695" endline="706">fcmaes.cmaes.Cmaes.updateEvolutionPaths</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a3353add8a5c4d01dd02a8a56890c1036" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::t0</definition>
        <argsstring></argsstring>
        <name>t0</name>
        <qualifiedname>fcmaes.advretry.Store.t0</qualifiedname>
        <initializer>=  time.perf_counter()</initializer>
        <briefdescription>
<para>Timestamp indicating the start of evaluations (used for timing statistics). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="320" column="1" bodyfile="fcmaes/advretry.py" bodystart="320" bodyend="-1"/>
        <referencedby refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a820f00764aca30493d15b5fbaab1f558" compoundref="noisy__tsp_8py" startline="63" endline="73">examples.noisy_tsp.TSP.__call__</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" compoundref="scheduling_8py" startline="113" endline="137">examples.scheduling.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" compoundref="advretry_8py" startline="852" endline="863">fcmaes.advretry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a0049736307028e256c038d8a8c1723d2" compoundref="retry_8py" startline="871" endline="884">fcmaes.retry.Store.dump</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a5a933388f6d0303f80251156e30e6b9b" compoundref="crypto_8py" startline="145" endline="166">examples.crypto.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1f8_1_1f8__problem_1a017bafba8cac9022a8683804494191ad" compoundref="f8_8py" startline="115" endline="125">examples.f8.f8_problem.fun</referencedby>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1ac9d51d3f1b4b38e405e5cce9fdd48b7d" compoundref="harvesting_8py" startline="185" endline="210">examples.harvesting.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1house_1_1cv__problem_1a10c3ff3227c149ee1be4501cb49caa23" compoundref="house_8py" startline="165" endline="177">examples.house.cv_problem.fun</referencedby>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a38ad69646f0c310cddd2d489743c2837" compoundref="jobshop_8py" startline="232" endline="251">examples.jobshop.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa" compoundref="advretry_8py" startline="360" endline="375">fcmaes.advretry.Store.wrapper</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::statistic_num</definition>
        <argsstring></argsstring>
        <name>statistic_num</name>
        <qualifiedname>fcmaes.advretry.Store.statistic_num</qualifiedname>
        <initializer>=  statistic_num</initializer>
        <briefdescription>
<para>Number of statistical points maintained for tracking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="321" column="1" bodyfile="fcmaes/advretry.py" bodystart="321" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa" compoundref="advretry_8py" startline="360" endline="375">fcmaes.advretry.Store.wrapper</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a4a5af1d8a29594eff250c931f481d146" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::datafile</definition>
        <argsstring></argsstring>
        <name>datafile</name>
        <qualifiedname>fcmaes.advretry.Store.datafile</qualifiedname>
        <initializer>=  datafile</initializer>
        <briefdescription>
<para>Path to file for saving and loading data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="322" column="1" bodyfile="fcmaes/advretry.py" bodystart="322" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::rg</definition>
        <argsstring></argsstring>
        <name>rg</name>
        <qualifiedname>fcmaes.advretry.Store.rg</qualifiedname>
        <initializer>=  random.Random()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="323" column="1" bodyfile="fcmaes/advretry.py" bodystart="323" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a61072489f9cd73c41286fbaf8d89357b" compoundref="de_8py" startline="820" endline="831">fcmaes.de.DE._modifier</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab6f842a65bbcbab7bc6821c25737d0aa" compoundref="mode_8py" startline="838" endline="849">fcmaes.mode.MODE._modifier</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1adf6645de9d62c0900bad93d5a6934a4b" compoundref="de_8py" startline="775" endline="783">fcmaes.de.DE._sample</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a8eb775858ef6da65ce5d71629503e622" compoundref="mode_8py" startline="799" endline="804">fcmaes.mode.MODE._sample</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a879e1014d958865e37c48d5d271c8dc6" compoundref="advretry_8py" startline="592" endline="608">fcmaes.advretry.Store.crossover</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591" compoundref="advretry_8py" startline="529" endline="546">fcmaes.advretry.Store.limits</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a29791dbcb2e070361529475630de2052" compoundref="mode_8py" startline="694" endline="731">fcmaes.mode.MODE.pop_update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::add_mutex</definition>
        <argsstring></argsstring>
        <name>add_mutex</name>
        <qualifiedname>fcmaes.advretry.Store.add_mutex</qualifiedname>
        <initializer>=  mp.Lock()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="328" column="1" bodyfile="fcmaes/advretry.py" bodystart="328" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1store_1a215371084a0bff8b1368d27a91495fb5" compoundref="mode_8py" startline="276" endline="290">fcmaes.mode.store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1store_1aac282e295578d049a156da83056e25fe" compoundref="mode_8py" startline="303" endline="318">fcmaes.mode.store.add_results</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df" compoundref="advretry_8py" startline="826" endline="837">fcmaes.advretry.Store.get_runs_compare_incr</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a45f5a4eb953f48b845388d985ccc8737" compoundref="retry_8py" startline="835" endline="842">fcmaes.retry.Store.get_runs_compare_incr</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591" compoundref="advretry_8py" startline="529" endline="546">fcmaes.advretry.Store.limits</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a784de4dd2241f0d45a199379be53532d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::check_mutex</definition>
        <argsstring></argsstring>
        <name>check_mutex</name>
        <qualifiedname>fcmaes.advretry.Store.check_mutex</qualifiedname>
        <initializer>=  mp.Lock()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="329" column="1" bodyfile="fcmaes/advretry.py" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::xs</definition>
        <argsstring></argsstring>
        <name>xs</name>
        <qualifiedname>fcmaes.advretry.Store.xs</qualifiedname>
        <initializer>=  mp.RawArray(ct.c_double, <ref refid="classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30" kindref="member">capacity</ref> * self.dim)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="330" column="1" bodyfile="fcmaes/advretry.py" bodystart="330" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1journal_1_1journal__wrapper_1ad219e74b48d4588e84683ec326143a48" compoundref="journal_8py" startline="643" endline="668">fcmaes.journal.journal_wrapper.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b" compoundref="advretry_8py" startline="702" endline="704">fcmaes.advretry.Store.get_x</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a052f1f8d58ffc784ec8ee16aca535a14" compoundref="mapelites_8py" startline="981" endline="983">fcmaes.mapelites.Archive.get_xs</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1store_1ac474104fcfc6ca9dce6a873a95af0204" compoundref="mode_8py" startline="253" endline="255">fcmaes.mode.store.get_xs</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1ae65b46bea16b6e50a3af24254cf4a2a8" compoundref="retry_8py" startline="734" endline="736">fcmaes.retry.Store.get_xs</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a62da9c6f511c298d1ef06d6af7600196" compoundref="mapelites_8py" startline="707" endline="728">fcmaes.mapelites.Archive.load</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a732636cd5ab3c40b878ef2e0274b1d1b" compoundref="advretry_8py" startline="798" endline="800">fcmaes.advretry.Store.set_x</referencedby>
        <referencedby refid="classfcmaes_1_1journal_1_1journal__wrapper_1a5adc885590326f2a0989cbef083646e2" compoundref="journal_8py" startline="608" endline="613">fcmaes.journal.journal_wrapper.store_x</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::ys</definition>
        <argsstring></argsstring>
        <name>ys</name>
        <qualifiedname>fcmaes.advretry.Store.ys</qualifiedname>
        <initializer>=  mp.RawArray(ct.c_double, <ref refid="classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30" kindref="member">capacity</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="331" column="1" bodyfile="fcmaes/advretry.py" bodystart="331" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1journal_1_1journal__wrapper_1ad219e74b48d4588e84683ec326143a48" compoundref="journal_8py" startline="643" endline="668">fcmaes.journal.journal_wrapper.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f" compoundref="advretry_8py" startline="734" endline="736">fcmaes.advretry.Store.get_y</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1ac9390a3bfd798bdb09d79476ed6c6584" compoundref="mapelites_8py" startline="1005" endline="1007">fcmaes.mapelites.Archive.get_y</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a8ef8c822668e6ddb6da277082513e323" compoundref="retry_8py" startline="746" endline="748">fcmaes.retry.Store.get_y</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77" compoundref="advretry_8py" startline="747" endline="749">fcmaes.advretry.Store.get_ys</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a91c9f1ac5485896833fc7b9859b85af1" compoundref="mapelites_8py" startline="1017" endline="1019">fcmaes.mapelites.Archive.get_ys</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1store_1ae794481869c1d681838a181c6f1976fe" compoundref="mode_8py" startline="265" endline="267">fcmaes.mode.store.get_ys</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1af199095a120a26f0a77d0a263785d4f3" compoundref="retry_8py" startline="770" endline="772">fcmaes.retry.Store.get_ys</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a12d96e54629b449293d2aabf5542ddc1" compoundref="advretry_8py" startline="812" endline="814">fcmaes.advretry.Store.set_y</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1afc25798d5b07a1addd68fc50cec1f3e5" compoundref="mapelites_8py" startline="1051" endline="1053">fcmaes.mapelites.Archive.set_y</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1ac6ff35da8231cd4aedb488427841aa3b" compoundref="retry_8py" startline="648" endline="657">fcmaes.retry.Store.sort</referencedby>
        <referencedby refid="classfcmaes_1_1journal_1_1journal__wrapper_1a36307cef398f9219427d7c4802c7079a" compoundref="journal_8py" startline="623" endline="625">fcmaes.journal.journal_wrapper.store_y</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::eval_fac</definition>
        <argsstring></argsstring>
        <name>eval_fac</name>
        <qualifiedname>fcmaes.advretry.Store.eval_fac</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_double, 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="332" column="1" bodyfile="fcmaes/advretry.py" bodystart="332" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" compoundref="advretry_8py" startline="852" endline="863">fcmaes.advretry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1acb6d9b590c7c36a83fa8b764d6e15f7e" compoundref="advretry_8py" startline="505" endline="507">fcmaes.advretry.Store.eval_num</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df" compoundref="advretry_8py" startline="826" endline="837">fcmaes.advretry.Store.get_runs_compare_incr</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::count_evals</definition>
        <argsstring></argsstring>
        <name>count_evals</name>
        <qualifiedname>fcmaes.advretry.Store.count_evals</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_long, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="333" column="1" bodyfile="fcmaes/advretry.py" bodystart="333" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" compoundref="advretry_8py" startline="852" endline="863">fcmaes.advretry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a0049736307028e256c038d8a8c1723d2" compoundref="retry_8py" startline="871" endline="884">fcmaes.retry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a0e6a826522ffacef8ab24249fc4127b4" compoundref="advretry_8py" startline="772" endline="774">fcmaes.advretry.Store.get_count_evals</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1ae2f03d71d58da349826b6d0249a66e61" compoundref="retry_8py" startline="813" endline="815">fcmaes.retry.Store.get_count_evals</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a440b834ab3066810ed77da1c5093fa49" compoundref="retry_8py" startline="853" endline="857">fcmaes.retry.Store.incr_count_evals</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::count_runs</definition>
        <argsstring></argsstring>
        <name>count_runs</name>
        <qualifiedname>fcmaes.advretry.Store.count_runs</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_int, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="334" column="1" bodyfile="fcmaes/advretry.py" bodystart="334" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" compoundref="advretry_8py" startline="852" endline="863">fcmaes.advretry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a0049736307028e256c038d8a8c1723d2" compoundref="retry_8py" startline="871" endline="884">fcmaes.retry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61" compoundref="advretry_8py" startline="784" endline="786">fcmaes.advretry.Store.get_count_runs</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a1dcbf34a7eb52ea3463469e7e2eaa8bb" compoundref="retry_8py" startline="822" endline="824">fcmaes.retry.Store.get_count_runs</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df" compoundref="advretry_8py" startline="826" endline="837">fcmaes.advretry.Store.get_runs_compare_incr</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a45f5a4eb953f48b845388d985ccc8737" compoundref="retry_8py" startline="835" endline="842">fcmaes.retry.Store.get_runs_compare_incr</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a440b834ab3066810ed77da1c5093fa49" compoundref="retry_8py" startline="853" endline="857">fcmaes.retry.Store.incr_count_evals</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::num_stored</definition>
        <argsstring></argsstring>
        <name>num_stored</name>
        <qualifiedname>fcmaes.advretry.Store.num_stored</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_int, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="335" column="1" bodyfile="fcmaes/advretry.py" bodystart="335" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1store_1a215371084a0bff8b1368d27a91495fb5" compoundref="mode_8py" startline="276" endline="290">fcmaes.mode.store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1store_1aac282e295578d049a156da83056e25fe" compoundref="mode_8py" startline="303" endline="318">fcmaes.mode.store.add_results</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a879e1014d958865e37c48d5d271c8dc6" compoundref="advretry_8py" startline="592" endline="608">fcmaes.advretry.Store.crossover</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" compoundref="advretry_8py" startline="852" endline="863">fcmaes.advretry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1store_1a1ffd4596004d9c4a84a094883dccdbfa" compoundref="mode_8py" startline="356" endline="359">fcmaes.mode.store.get_content</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7" compoundref="advretry_8py" startline="413" endline="421">fcmaes.advretry.Store.get_data</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1store_1a1f2b11c0242f454020e72bc15d12625d" compoundref="mode_8py" startline="332" endline="343">fcmaes.mode.store.get_front</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2" compoundref="advretry_8py" startline="715" endline="717">fcmaes.advretry.Store.get_xs</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1ae65b46bea16b6e50a3af24254cf4a2a8" compoundref="retry_8py" startline="734" endline="736">fcmaes.retry.Store.get_xs</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77" compoundref="advretry_8py" startline="747" endline="749">fcmaes.advretry.Store.get_ys</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1af199095a120a26f0a77d0a263785d4f3" compoundref="retry_8py" startline="770" endline="772">fcmaes.retry.Store.get_ys</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3" compoundref="advretry_8py" startline="434" endline="443">fcmaes.advretry.Store.set_data</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1ac6ff35da8231cd4aedb488427841aa3b" compoundref="retry_8py" startline="648" endline="657">fcmaes.retry.Store.sort</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::best_y</definition>
        <argsstring></argsstring>
        <name>best_y</name>
        <qualifiedname>fcmaes.advretry.Store.best_y</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_double, np.inf)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="336" column="1" bodyfile="fcmaes/advretry.py" bodystart="336" bodyend="-1"/>
        <referencedby refid="classexamples_1_1arm_1_1fitness_1ac275bc61471d8757c126d150d47ce202" compoundref="arm_8py" startline="78" endline="88">examples.arm.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a820f00764aca30493d15b5fbaab1f558" compoundref="noisy__tsp_8py" startline="63" endline="73">examples.noisy_tsp.TSP.__call__</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" compoundref="scheduling_8py" startline="113" endline="137">examples.scheduling.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1wrapper_1aef447c485c8dad313f64e3df4768218e" compoundref="mapelites_8py" startline="1352" endline="1378">fcmaes.mapelites.wrapper.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1wrapper_1a3da595496f0fa1e7a64955db25dec429" compoundref="mode_8py" startline="1370" endline="1403">fcmaes.mode.wrapper.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1wrapper_1a430bf153bd7cabe32d29db369f16b53e" compoundref="optimizer_8py" startline="248" endline="262">fcmaes.optimizer.wrapper.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" compoundref="advretry_8py" startline="852" endline="863">fcmaes.advretry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a0049736307028e256c038d8a8c1723d2" compoundref="retry_8py" startline="871" endline="884">fcmaes.retry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" compoundref="testfun_8py" startline="111" endline="120">fcmaes.testfun.Wrapper.eval</referencedby>
        <referencedby refid="classfbcover_1_1problem__fb_1aafca7fa77a778148b4e8f81fc10f5607" compoundref="fbcover_8py" startline="140" endline="151">fbcover.problem_fb.fitness_so</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a5a933388f6d0303f80251156e30e6b9b" compoundref="crypto_8py" startline="145" endline="166">examples.crypto.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1f8_1_1f8__problem_1a017bafba8cac9022a8683804494191ad" compoundref="f8_8py" startline="115" endline="125">examples.f8.f8_problem.fun</referencedby>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1ac9d51d3f1b4b38e405e5cce9fdd48b7d" compoundref="harvesting_8py" startline="185" endline="210">examples.harvesting.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1house_1_1cv__problem_1a10c3ff3227c149ee1be4501cb49caa23" compoundref="house_8py" startline="165" endline="177">examples.house.cv_problem.fun</referencedby>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a38ad69646f0c310cddd2d489743c2837" compoundref="jobshop_8py" startline="232" endline="251">examples.jobshop.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1ab86f2d8e5df54c431b95a8dac9eb7c80" compoundref="testfun_8py" startline="143" endline="145">fcmaes.testfun.Wrapper.get_best_y</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a" compoundref="advretry_8py" startline="759" endline="761">fcmaes.advretry.Store.get_y_best</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a6f2490b0d579f6766b663fccd8c557b5" compoundref="retry_8py" startline="758" endline="760">fcmaes.retry.Store.get_y_best</referencedby>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1af629821589f78858c6422998bcb02fe5" compoundref="damp_8py" startline="77" endline="90">examples.damp.fitness.qd_fit</referencedby>
        <referencedby refid="classhbv_1_1hbv_1a89aea998d9546dc3465bf46fbee95689" compoundref="hbv_8py" startline="81" endline="90">hbv.hbv.qd_fitness</referencedby>
        <referencedby refid="classlrgv_1_1lrgv_1a527b9b7a7927721b5320ab433bf75aea" compoundref="lrgv_8py" startline="73" endline="86">lrgv.lrgv.qd_fitness</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3" compoundref="advretry_8py" startline="434" endline="443">fcmaes.advretry.Store.set_data</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1ac7cbecf8b29fb1048bd4cc7ec900692c" compoundref="cmaes_8py" startline="455" endline="487">fcmaes.cmaes.Cmaes.tell_one</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1afefa9194fbf5ada1b23dcd45ed3e48f3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::worst_y</definition>
        <argsstring></argsstring>
        <name>worst_y</name>
        <qualifiedname>fcmaes.advretry.Store.worst_y</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_double, np.inf)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="337" column="1" bodyfile="fcmaes/advretry.py" bodystart="337" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" compoundref="advretry_8py" startline="852" endline="863">fcmaes.advretry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::best_x</definition>
        <argsstring></argsstring>
        <name>best_x</name>
        <qualifiedname>fcmaes.advretry.Store.best_x</qualifiedname>
        <initializer>=  mp.RawArray(ct.c_double, self.dim)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="338" column="1" bodyfile="fcmaes/advretry.py" bodystart="338" bodyend="-1"/>
        <referencedby refid="classexamples_1_1trappist__delivery_1_1fitness_1a9c1664f5b2f23d74d40c0d36262af5b4" compoundref="trappist__delivery_8py" startline="893" endline="903">examples.trappist_delivery.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a2d6eb4d91b58018e74be863ecf71862b" compoundref="de_8py" startline="658" endline="693">fcmaes.de.DE.do_optimize_delayed_update</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1a974188898932b9c2ecacb33387c08fd8" compoundref="cmaes_8py" startline="576" endline="590">fcmaes.cmaes.Cmaes.doOptimize</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" compoundref="advretry_8py" startline="852" endline="863">fcmaes.advretry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a0049736307028e256c038d8a8c1723d2" compoundref="retry_8py" startline="871" endline="884">fcmaes.retry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" compoundref="testfun_8py" startline="111" endline="120">fcmaes.testfun.Wrapper.eval</referencedby>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1ad0135b00f2c165118000017b25b3bfa4" compoundref="testfun_8py" startline="130" endline="132">fcmaes.testfun.Wrapper.get_best_x</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558" compoundref="advretry_8py" startline="690" endline="692">fcmaes.advretry.Store.get_x_best</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1ae078fd3c0dfc87aabde92b937cb2fa91" compoundref="retry_8py" startline="706" endline="708">fcmaes.retry.Store.get_x_best</referencedby>
        <referencedby refid="classexamples_1_1trappist__delivery_1_1fitness_1ad25284f2ed9bbb5897ec7ca711e5fa17" compoundref="trappist__delivery_8py" startline="944" endline="954">examples.trappist_delivery.fitness.optimize</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1a5c6955cf059c16dfea867a214b485501" compoundref="cmaes_8py" startline="413" endline="417">fcmaes.cmaes.Cmaes.result</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1ab58df13ca3623bcce727576e5d354bbc" compoundref="de_8py" startline="420" endline="424">fcmaes.de.DE.result</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3" compoundref="advretry_8py" startline="434" endline="443">fcmaes.advretry.Store.set_data</referencedby>
        <referencedby refid="classfcmaes_1_1cmaes_1_1_cmaes_1a7dada2c399890feafb59c01d1f424ee5" compoundref="cmaes_8py" startline="604" endline="677">fcmaes.cmaes.Cmaes.updateCMA</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::time</definition>
        <argsstring></argsstring>
        <name>time</name>
        <qualifiedname>fcmaes.advretry.Store.time</qualifiedname>
        <initializer>=  mp.RawArray(ct.c_double, self.statistic_num)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="342" column="1" bodyfile="fcmaes/advretry.py" bodystart="342" bodyend="-1"/>
        <referencedby refid="classexamples_1_1siemens_1_1_machine_1a6581c31f45a3d7ef036ef0291c2804eb" compoundref="siemens_8py" startline="56" endline="58">examples.siemens.Machine.available</referencedby>
        <referencedby refid="classexamples_1_1siemens_1_1_machine_1acf96c3492bc4e9b03bb5d1e175096165" compoundref="siemens_8py" startline="53" endline="55">examples.siemens.Machine.finished</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1afda8cdd53cf9e0c3160f59bb623becba" compoundref="advretry_8py" startline="454" endline="456">fcmaes.advretry.Store.get_improvements</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a300771cb56317ceb78cb7cd4a79ce0ec" compoundref="retry_8py" startline="570" endline="572">fcmaes.retry.Store.get_improvements</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a6ccfce173196171f999e4a3c4531f01f" compoundref="advretry_8py" startline="477" endline="491">fcmaes.advretry.Store.get_statistics</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1abd99f307cd4d6cf478e8c8201ee15f59" compoundref="retry_8py" startline="590" endline="604">fcmaes.retry.Store.get_statistics</referencedby>
        <referencedby refid="classexamples_1_1siemens_1_1_machine_1aecd32c1f18e3ac7977e9a86b4e8f1012" compoundref="siemens_8py" startline="39" endline="46">examples.siemens.Machine.process</referencedby>
        <referencedby refid="classexamples_1_1kepler_1_1resonance_1_1resonance_1a6b7565150846c8f66997053d6a5fb009" compoundref="resonance_8py" startline="39" endline="52">examples.kepler.resonance.resonance.select_resonance</referencedby>
        <referencedby refid="classexamples_1_1siemens_1_1_plant_1a4570217ffc213f931499ca5ca147819c" compoundref="siemens_8py" startline="142" endline="148">examples.siemens.Plant.simulate</referencedby>
        <referencedby refid="classexamples_1_1siemens_1_1_plant_1ad8b1d9faabe8e2a82ea8eae1e98ce1c5" compoundref="siemens_8py" startline="119" endline="141">examples.siemens.Plant.tick</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa" compoundref="advretry_8py" startline="360" endline="375">fcmaes.advretry.Store.wrapper</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::val</definition>
        <argsstring></argsstring>
        <name>val</name>
        <qualifiedname>fcmaes.advretry.Store.val</qualifiedname>
        <initializer>=  mp.RawArray(ct.c_double, self.statistic_num)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="343" column="1" bodyfile="fcmaes/advretry.py" bodystart="343" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1afda8cdd53cf9e0c3160f59bb623becba" compoundref="advretry_8py" startline="454" endline="456">fcmaes.advretry.Store.get_improvements</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a300771cb56317ceb78cb7cd4a79ce0ec" compoundref="retry_8py" startline="570" endline="572">fcmaes.retry.Store.get_improvements</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a6ccfce173196171f999e4a3c4531f01f" compoundref="advretry_8py" startline="477" endline="491">fcmaes.advretry.Store.get_statistics</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1abd99f307cd4d6cf478e8c8201ee15f59" compoundref="retry_8py" startline="590" endline="604">fcmaes.retry.Store.get_statistics</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa" compoundref="advretry_8py" startline="360" endline="375">fcmaes.advretry.Store.wrapper</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::si</definition>
        <argsstring></argsstring>
        <name>si</name>
        <qualifiedname>fcmaes.advretry.Store.si</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_int, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="344" column="1" bodyfile="fcmaes/advretry.py" bodystart="344" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1afda8cdd53cf9e0c3160f59bb623becba" compoundref="advretry_8py" startline="454" endline="456">fcmaes.advretry.Store.get_improvements</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a300771cb56317ceb78cb7cd4a79ce0ec" compoundref="retry_8py" startline="570" endline="572">fcmaes.retry.Store.get_improvements</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a6ccfce173196171f999e4a3c4531f01f" compoundref="advretry_8py" startline="477" endline="491">fcmaes.advretry.Store.get_statistics</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1abd99f307cd4d6cf478e8c8201ee15f59" compoundref="retry_8py" startline="590" endline="604">fcmaes.retry.Store.get_statistics</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a5721ccf23e8de4509bc3a9e996e1861a" compoundref="mapelites_8py" startline="1208" endline="1213">fcmaes.mapelites.Archive.random_xs</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa" compoundref="advretry_8py" startline="360" endline="375">fcmaes.advretry.Store.wrapper</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1ab1505fe94e716ee8645e7e694f69efbc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::sevals</definition>
        <argsstring></argsstring>
        <name>sevals</name>
        <qualifiedname>fcmaes.advretry.Store.sevals</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_long, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="345" column="1" bodyfile="fcmaes/advretry.py" bodystart="345" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa" compoundref="advretry_8py" startline="360" endline="375">fcmaes.advretry.Store.wrapper</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1advretry_1_1_store_1a44fe2e19ed26797a80dd27ee7c1a6b50" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.advretry.Store::bval</definition>
        <argsstring></argsstring>
        <name>bval</name>
        <qualifiedname>fcmaes.advretry.Store.bval</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_double, np.inf)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="346" column="1" bodyfile="fcmaes/advretry.py" bodystart="346" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa" compoundref="advretry_8py" startline="360" endline="375">fcmaes.advretry.Store.wrapper</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a1dfb9b034380f6ca44583ab26014d0ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.advretry.Store.__init__</definition>
        <argsstring>(self, Callable[[ArrayLike], float] fun, Bounds bounds, Optional[int] max_eval_fac=None, Optional[int] check_interval=100, Optional[int] capacity=500, Optional[int] num_retries=None, Optional[int] statistic_num=0, Optional[str] datafile=None)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.advretry.Store.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Bounds</type>
          <declname>bounds</declname>
          <defname>max_eval_fac</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_eval_fac</declname>
          <defname>check_interval</defname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>check_interval</declname>
          <defname>capacity</defname>
          <array>[int]</array>
          <defval>100</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>capacity</declname>
          <defname>num_retries</defname>
          <array>[int]</array>
          <defval>500</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>num_retries</declname>
          <defname>statistic_num</defname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>statistic_num</declname>
          <defname>datafile</defname>
          <array>[int]</array>
          <defval>0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>datafile</declname>
          <array>[str]</array>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Initializes an instance of the class with parameters and attributes required for managing function optimization within specified bounds using shared multiprocessing resources. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets up the evaluation store, statistic tracking, and random generator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>A fitness function to be optimized. It takes an array-like input and returns a float value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>Bounds of the objective function arguments defined as an instance of the Bounds class. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_eval_fac</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Maximum number of evaluations factor. Defaults to None. If None, it is calculated based on <computeroutput>num_retries</computeroutput> and <computeroutput>check_interval</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check_interval</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Number of iterations after which the evaluation store is sorted. Defaults to 100. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Capacity of the evaluation store. Defaults to 500. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_retries</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Maximum number of retries allowed. If None, it is calculated based on <computeroutput>max_eval_fac</computeroutput> and <computeroutput>check_interval</computeroutput>. Defaults to None. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>statistic_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Number of statistics points to be maintained for tracking. Set to 0 to disable statistics. Defaults to 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>datafile</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Path to a file for saving/loading relevant data. Defaults to None. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="293" column="1" bodyfile="fcmaes/advretry.py" bodystart="302" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition> float fcmaes.advretry.Store.wrapper</definition>
        <argsstring>(self, ArrayLike x)</argsstring>
        <name>wrapper</name>
        <qualifiedname>fcmaes.advretry.Store.wrapper</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>ArrayLike</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Wrapper function to evaluate a given function, update statistics, and log the results. </para>
        </briefdescription>
        <detaileddescription>
<para>It is typically used in optimization procedures to monitor evaluations and track progress over iterations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The input array to evaluate the function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float The evaluated function output for the given input array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="360" column="1" bodyfile="fcmaes/advretry.py" bodystart="360" bodyend="375"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a44fe2e19ed26797a80dd27ee7c1a6b50" compoundref="advretry_8py" startline="346">fcmaes.advretry.Store.bval</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5" compoundref="advretry_8py" startline="303">fcmaes.advretry.Store.fun</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ab1505fe94e716ee8645e7e694f69efbc" compoundref="advretry_8py" startline="345">fcmaes.advretry.Store.sevals</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4" compoundref="advretry_8py" startline="344">fcmaes.advretry.Store.si</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f" compoundref="advretry_8py" startline="321">fcmaes.advretry.Store.statistic_num</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a3353add8a5c4d01dd02a8a56890c1036" compoundref="advretry_8py" startline="320">fcmaes.advretry.Store.t0</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d" compoundref="advretry_8py" startline="342">fcmaes.advretry.Store.time</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2" compoundref="advretry_8py" startline="343">fcmaes.advretry.Store.val</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a19b9d6c0787fb06a2b00e595f487bf37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.advretry.Store.save</definition>
        <argsstring>(self, str name)</argsstring>
        <name>save</name>
        <qualifiedname>fcmaes.advretry.Store.save</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>str</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Saves the current data of the instance to a compressed file using bz2 and cPickle modules. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   The method compresses and serializes the data obtained from `get_data` and saves
   it to a file with the specified name appended by the &apos;.pbz2&apos; extension.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired name for the output file, excluding the extension. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="386" column="1" bodyfile="fcmaes/advretry.py" bodystart="386" bodyend="389"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7" compoundref="advretry_8py" startline="413" endline="421">fcmaes.advretry.Store.get_data</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1adc9b28c43aee9110aef2fad53f30a077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.advretry.Store.load</definition>
        <argsstring>(self, str name)</argsstring>
        <name>load</name>
        <qualifiedname>fcmaes.advretry.Store.load</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>str</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Loads and processes data from a compressed file. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method allows loading data from a file compressed with BZ2 and serialized
   with cPickle. After loading, the data is processed or assigned using the
   `set_data` method of the instance.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file (without extension) to load data from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="399" column="1" bodyfile="fcmaes/advretry.py" bodystart="399" bodyend="402"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3" compoundref="advretry_8py" startline="434" endline="443">fcmaes.advretry.Store.set_data</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>List</type>
        <definition> List fcmaes.advretry.Store.get_data</definition>
        <argsstring>(self)</argsstring>
        <name>get_data</name>
        <qualifiedname>fcmaes.advretry.Store.get_data</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Retrieves and aggregates data from various attributes and methods. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method gathers data by calling several other methods and accessing a specific
   attribute. It consolidates these pieces of data into a single list and returns it.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>List A list containing data from <computeroutput><ref refid="classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2" kindref="member">get_xs()</ref></computeroutput>, <computeroutput><ref refid="classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77" kindref="member">get_ys()</ref></computeroutput>, <computeroutput><ref refid="classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558" kindref="member">get_x_best()</ref></computeroutput>, <computeroutput><ref refid="classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a" kindref="member">get_y_best()</ref></computeroutput> methods, and the <computeroutput>num_stored.value</computeroutput> attribute. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="413" column="1" bodyfile="fcmaes/advretry.py" bodystart="413" bodyend="421"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558" compoundref="advretry_8py" startline="690" endline="692">fcmaes.advretry.Store.get_x_best</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2" compoundref="advretry_8py" startline="715" endline="717">fcmaes.advretry.Store.get_xs</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a" compoundref="advretry_8py" startline="759" endline="761">fcmaes.advretry.Store.get_y_best</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77" compoundref="advretry_8py" startline="747" endline="749">fcmaes.advretry.Store.get_ys</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497" compoundref="advretry_8py" startline="335">fcmaes.advretry.Store.num_stored</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a19b9d6c0787fb06a2b00e595f487bf37" compoundref="advretry_8py" startline="386" endline="389">fcmaes.advretry.Store.save</referencedby>
        <referencedby refid="classfcmaes_1_1multiretry_1_1multiretry_1a68046c0b4cc7c281cec9dfa673ce58fb" compoundref="multiretry_8py" startline="370" endline="376">fcmaes.multiretry.multiretry.save</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.advretry.Store.set_data</definition>
        <argsstring>(self, ArrayLike data)</argsstring>
        <name>set_data</name>
        <qualifiedname>fcmaes.advretry.Store.set_data</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>ArrayLike</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Sets the data for an internal storage structure and processes it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A multi-dimensional array-like structure containing:<itemizedlist>
<listitem><para>data[0]: The x-coordinates.</para>
</listitem><listitem><para>data[1]: The y-coordinates.</para>
</listitem><listitem><para>data[2]: A subset of best x-coordinates.</para>
</listitem><listitem><para>data[3]: The best y-coordinate.</para>
</listitem><listitem><para>data[4]: The total count of stored elements. </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="434" column="1" bodyfile="fcmaes/advretry.py" bodystart="434" bodyend="443"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57" compoundref="advretry_8py" startline="338">fcmaes.advretry.Store.best_x</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a" compoundref="advretry_8py" startline="336">fcmaes.advretry.Store.best_y</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497" compoundref="advretry_8py" startline="335">fcmaes.advretry.Store.num_stored</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9" compoundref="advretry_8py" startline="575" endline="578">fcmaes.advretry.Store.replace</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1adc9b28c43aee9110aef2fad53f30a077" compoundref="advretry_8py" startline="399" endline="402">fcmaes.advretry.Store.load</referencedby>
        <referencedby refid="classfcmaes_1_1multiretry_1_1multiretry_1a34c47ed6cd26370e8c8d5227791921b8" compoundref="multiretry_8py" startline="391" endline="397">fcmaes.multiretry.multiretry.load</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1afda8cdd53cf9e0c3160f59bb623becba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>np.ndarray</type>
        <definition> np.ndarray fcmaes.advretry.Store.get_improvements</definition>
        <argsstring>(self)</argsstring>
        <name>get_improvements</name>
        <qualifiedname>fcmaes.advretry.Store.get_improvements</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Calculates and returns an array of improvements based on stored time and value data. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   The method processes the time and value attributes up to the index defined by `si.value`
   and combines them into a structured NumPy array. It allows extracting the corresponding
   values and improvements over the determined slice of the data.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>np A NumPy array containing pairs of time and value up to <computeroutput>si.value</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="454" column="1" bodyfile="fcmaes/advretry.py" bodystart="454" bodyend="456"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4" compoundref="advretry_8py" startline="344">fcmaes.advretry.Store.si</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d" compoundref="advretry_8py" startline="342">fcmaes.advretry.Store.time</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2" compoundref="advretry_8py" startline="343">fcmaes.advretry.Store.val</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a6ccfce173196171f999e4a3c4531f01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>List</type>
        <definition> List fcmaes.advretry.Store.get_statistics</definition>
        <argsstring>(self, int num)</argsstring>
        <name>get_statistics</name>
        <qualifiedname>fcmaes.advretry.Store.get_statistics</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Calculates and returns a list of statistics determined by evenly dividing the provided time series data into a specified number of segments. </para>
        </briefdescription>
        <detaileddescription>
<para>This function processes time series and value arrays to calculate specific statistics based on the distribution of data over a fixed number of intervals. It uses the time array to sample the values array at designated points, ensuring that the result represents data distributed across the defined segments.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of segments into which the time series data will be divided.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>List A list containing the computed statistics based on the segmented intervals of the time series data.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IndexError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the number of segments exceeds the number of available data points. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="477" column="1" bodyfile="fcmaes/advretry.py" bodystart="477" bodyend="491"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4" compoundref="advretry_8py" startline="344">fcmaes.advretry.Store.si</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d" compoundref="advretry_8py" startline="342">fcmaes.advretry.Store.time</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2" compoundref="advretry_8py" startline="343">fcmaes.advretry.Store.val</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1acb6d9b590c7c36a83fa8b764d6e15f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition> int fcmaes.advretry.Store.eval_num</definition>
        <argsstring>(self, int max_evals)</argsstring>
        <name>eval_num</name>
        <qualifiedname>fcmaes.advretry.Store.eval_num</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>int</type>
          <declname>max_evals</declname>
        </param>
        <briefdescription>
<para>Calculates the evaluation number based on a multiplier and maximum evaluations. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method computes the product of a multiplier (`eval_fac.value`) and the
   provided maximum evaluations (`max_evals`). The result is cast to an integer
   and returned.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_evals</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of evaluations.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>int The calculated evaluation number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="505" column="1" bodyfile="fcmaes/advretry.py" bodystart="505" bodyend="507"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c" compoundref="advretry_8py" startline="332">fcmaes.advretry.Store.eval_fac</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[float, np.ndarray, np.ndarray, np.ndarray, np.ndarray]</type>
        <definition> Tuple[float, np.ndarray, np.ndarray, np.ndarray, np.ndarray] fcmaes.advretry.Store.limits</definition>
        <argsstring>(self)</argsstring>
        <name>limits</name>
        <qualifiedname>fcmaes.advretry.Store.limits</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Returns the limits and other related calculations used for determining bounds during operations like crossover and mutation. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates adjusted bounds, scaled deviations, and other factors based on the input variables, making use of random factors and mutex locks for thread safety.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple[float, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]: A tuple containing the following elements:<itemizedlist>
<listitem><para>A float value representing the initial target point y0.</para>
</listitem><listitem><para>A NumPy array representing the point x1 selected for crossover.</para>
</listitem><listitem><para>A NumPy array representing the calculated lower bounds for crossover.</para>
</listitem><listitem><para>A NumPy array representing the calculated upper bounds for crossover.</para>
</listitem><listitem><para>A NumPy array representing the scaled standard deviations for crossover.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="529" column="1" bodyfile="fcmaes/advretry.py" bodystart="529" bodyend="546"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce" compoundref="advretry_8py" startline="328">fcmaes.advretry.Store.add_mutex</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a879e1014d958865e37c48d5d271c8dc6" compoundref="advretry_8py" startline="592" endline="608">fcmaes.advretry.Store.crossover</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ad2d1513e8146883a75bab3f55fb4be95" compoundref="advretry_8py" startline="305">fcmaes.advretry.Store.delta</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b" compoundref="advretry_8py" startline="702" endline="704">fcmaes.advretry.Store.get_x</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f" compoundref="advretry_8py" startline="734" endline="736">fcmaes.advretry.Store.get_y</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678" compoundref="advretry_8py" startline="304">fcmaes.advretry.Store.lower</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8" compoundref="advretry_8py" startline="323">fcmaes.advretry.Store.rg</references>
        <references refid="evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593" compoundref="evaluator_8h" startline="110" endline="114">uniform</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a8d112bb91cc58f032a0bb929c236fd8e" compoundref="advretry_8py" startline="304">fcmaes.advretry.Store.upper</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a00ab052ea8b184b7344875122481b623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition> float fcmaes.advretry.Store.distance</definition>
        <argsstring>(self, np.ndarray xprev, np.ndarray x)</argsstring>
        <name>distance</name>
        <qualifiedname>fcmaes.advretry.Store.distance</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>np.ndarray</type>
          <declname>xprev</declname>
        </param>
        <param>
          <type>np.ndarray</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Calculates the normalized distance between two points in a Euclidean space. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   The distance is normalized based on the difference between two points, scaled
   by a pre-defined parameter `delta`, and divided by the square root of the
   number of dimensions (`dim`).
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xprev</parametername>
</parameternamelist>
<parameterdescription>
<para>A numpy array representing the previous point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>A numpy array representing the current point.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float The normalized distance between <computeroutput>xprev</computeroutput> and <computeroutput>x</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="561" column="1" bodyfile="fcmaes/advretry.py" bodystart="561" bodyend="563"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ad2d1513e8146883a75bab3f55fb4be95" compoundref="advretry_8py" startline="305">fcmaes.advretry.Store.delta</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" compoundref="advretry_8py" startline="319">fcmaes.advretry.Store.dim</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.advretry.Store.replace</definition>
        <argsstring>(self, int i, float y, np.ndarray x)</argsstring>
        <name>replace</name>
        <qualifiedname>fcmaes.advretry.Store.replace</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>np.ndarray</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Replaces the y and x values at a specified index. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method updates the y and x values in the object&apos;s internal data structure at the index
   provided by the user.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index at which to set the new y and x values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value for y to be set at the specified index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value for x to be set at the specified index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="575" column="1" bodyfile="fcmaes/advretry.py" bodystart="575" bodyend="578"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a732636cd5ab3c40b878ef2e0274b1d1b" compoundref="advretry_8py" startline="798" endline="800">fcmaes.advretry.Store.set_x</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a12d96e54629b449293d2aabf5542ddc1" compoundref="advretry_8py" startline="812" endline="814">fcmaes.advretry.Store.set_y</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3" compoundref="advretry_8py" startline="434" endline="443">fcmaes.advretry.Store.set_data</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a879e1014d958865e37c48d5d271c8dc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[int, int]</type>
        <definition> Tuple[int,int] fcmaes.advretry.Store.crossover</definition>
        <argsstring>(self)</argsstring>
        <name>crossover</name>
        <qualifiedname>fcmaes.advretry.Store.crossover</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Selects two good entries for recombination based on a probabilistic threshold. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method attempts to choose two distinct indices from a pool based on a
   random limit derived from the current number of stored entries. The method
   performs several attempts to identify these indices under the defined constraints.
   If successful, it returns the selected indices; otherwise, it returns default
   values indicating no valid selection.
</verbatim></para>
<para><simplesect kind="return"><para>Tuple[int, int]: A tuple containing two indices selected for recombination. If the selection fails, returns (-1, -1). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="592" column="1" bodyfile="fcmaes/advretry.py" bodystart="592" bodyend="608"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497" compoundref="advretry_8py" startline="335">fcmaes.advretry.Store.num_stored</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8" compoundref="advretry_8py" startline="323">fcmaes.advretry.Store.rg</references>
        <references refid="evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593" compoundref="evaluator_8h" startline="110" endline="114">uniform</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591" compoundref="advretry_8py" startline="529" endline="546">fcmaes.advretry.Store.limits</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition> int fcmaes.advretry.Store.sort</definition>
        <argsstring>(self)</argsstring>
        <name>sort</name>
        <qualifiedname>fcmaes.advretry.Store.sort</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Sorts and updates stored data based on the given criteria. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   The method sorts the stored data `ys` in ascending order of their values. It ensures
   diversity by selecting specific data points that meet the distance threshold from the
   two most recently added elements. It then updates the stored data to retain only the
   best 90% of the sorted elements up to the storage capacity.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>int The updated number of stored elements.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ValueError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the number of stored elements is less than 2. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="623" column="1" bodyfile="fcmaes/advretry.py" bodystart="623" bodyend="646"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30" compoundref="advretry_8py" startline="306">fcmaes.advretry.Store.capacity</references>
        <references refid="classanpcp_1_1_a_n_p_c_p_1af7aa4956b4756967dcad6dd9090c8dc7" compoundref="anpcp_8py" startline="73">anpcp.ANPCP.distance</references>
        <references refid="classexamples_1_1routing_1_1_routing_1adf6658107ab5418cf8580de44d3ac8db" compoundref="routing_8py" startline="63">examples.routing.Routing.distance</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a00ab052ea8b184b7344875122481b623" compoundref="advretry_8py" startline="561" endline="563">fcmaes.advretry.Store.distance</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b" compoundref="advretry_8py" startline="702" endline="704">fcmaes.advretry.Store.get_x</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f" compoundref="advretry_8py" startline="734" endline="736">fcmaes.advretry.Store.get_y</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497" compoundref="advretry_8py" startline="335">fcmaes.advretry.Store.num_stored</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9" compoundref="advretry_8py" startline="575" endline="578">fcmaes.advretry.Store.replace</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1afefa9194fbf5ada1b23dcd45ed3e48f3" compoundref="advretry_8py" startline="337">fcmaes.advretry.Store.worst_y</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100" compoundref="advretry_8py" startline="331">fcmaes.advretry.Store.ys</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df" compoundref="advretry_8py" startline="826" endline="837">fcmaes.advretry.Store.get_runs_compare_incr</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a440b834ab3066810ed77da1c5093fa49" compoundref="retry_8py" startline="853" endline="857">fcmaes.retry.Store.incr_count_evals</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3" compoundref="advretry_8py" startline="434" endline="443">fcmaes.advretry.Store.set_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.advretry.Store.add_result</definition>
        <argsstring>(self, float y, np.ndarray x, int evals, Optional[float] limit=np.inf)</argsstring>
        <name>add_result</name>
        <qualifiedname>fcmaes.advretry.Store.add_result</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>np.ndarray</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>evals</declname>
        </param>
        <param>
          <type>Optional</type>
          <declname>limit</declname>
          <array>[float]</array>
          <defval>np.inf</defval>
        </param>
        <briefdescription>
<para>Adds a result to the current optimization process, updating the best result if necessary and storing the new result in the internal data structure. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is designed to handle updates in a thread-safe manner. It increments the number of evaluations, checks if the new result is within the given limit, and updates the best result as well as the storage if the criteria are met. If the storage reaches its capacity, it triggers a sorting operation to maintain order.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The result value to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The array representing input parameters corresponding to the result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evals</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of evaluations associated with this result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The threshold value. Results with a value greater than this limit are ignored. Defaults to infinity. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="663" column="1" bodyfile="fcmaes/advretry.py" bodystart="663" bodyend="679"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce" compoundref="advretry_8py" startline="328">fcmaes.advretry.Store.add_mutex</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57" compoundref="advretry_8py" startline="338">fcmaes.advretry.Store.best_x</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a" compoundref="advretry_8py" startline="336">fcmaes.advretry.Store.best_y</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30" compoundref="advretry_8py" startline="306">fcmaes.advretry.Store.capacity</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98" compoundref="advretry_8py" startline="333">fcmaes.advretry.Store.count_evals</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a4a5af1d8a29594eff250c931f481d146" compoundref="advretry_8py" startline="322">fcmaes.advretry.Store.datafile</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" compoundref="advretry_8py" startline="852" endline="863">fcmaes.advretry.Store.dump</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497" compoundref="advretry_8py" startline="335">fcmaes.advretry.Store.num_stored</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9" compoundref="advretry_8py" startline="575" endline="578">fcmaes.advretry.Store.replace</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a19b9d6c0787fb06a2b00e595f487bf37" compoundref="advretry_8py" startline="386" endline="389">fcmaes.advretry.Store.save</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>np.ndarray</type>
        <definition> np.ndarray fcmaes.advretry.Store.get_x_best</definition>
        <argsstring>(self)</argsstring>
        <name>get_x_best</name>
        <qualifiedname>fcmaes.advretry.Store.get_x_best</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Returns a copy of the best solutions stored in the internal state. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method retrieves the best solution(s) found, which are stored
   internally, and returns a copy of the data to avoid unintentional
   modifications to the original data.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>np A numpy array containing the best solution(s). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="690" column="1" bodyfile="fcmaes/advretry.py" bodystart="690" bodyend="692"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57" compoundref="advretry_8py" startline="338">fcmaes.advretry.Store.best_x</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7" compoundref="advretry_8py" startline="413" endline="421">fcmaes.advretry.Store.get_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>np.ndarray</type>
        <definition> np.ndarray fcmaes.advretry.Store.get_x</definition>
        <argsstring>(self, pid)</argsstring>
        <name>get_x</name>
        <qualifiedname>fcmaes.advretry.Store.get_x</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>pid</type>
          <defname>pid</defname>
        </param>
        <briefdescription>
<para>Retrieves a segment of the <computeroutput>xs</computeroutput> array corresponding to the provided <computeroutput>pid</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>Index used to calculate the segment.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>np The segment of the <computeroutput>xs</computeroutput> array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="702" column="1" bodyfile="fcmaes/advretry.py" bodystart="702" bodyend="704"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" compoundref="advretry_8py" startline="319">fcmaes.advretry.Store.dim</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89" compoundref="advretry_8py" startline="330">fcmaes.advretry.Store.xs</references>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a0bcd8007cc5cf709da8ccc42aa2c46eb" compoundref="mapelites_8py" startline="1262" endline="1269">fcmaes.mapelites.Archive.dump</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2" compoundref="advretry_8py" startline="715" endline="717">fcmaes.advretry.Store.get_xs</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591" compoundref="advretry_8py" startline="529" endline="546">fcmaes.advretry.Store.limits</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a691e8315e1b9c8d92b67520216c72cdf" compoundref="mapelites_8py" startline="1232" endline="1235">fcmaes.mapelites.Archive.random_xs_one</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>np.ndarray</type>
        <definition> np.ndarray fcmaes.advretry.Store.get_xs</definition>
        <argsstring>(self)</argsstring>
        <name>get_xs</name>
        <qualifiedname>fcmaes.advretry.Store.get_xs</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Builds and returns an array of x values stored in the object. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method iterates over the number of stored x values and retrieves each
   value using the `get_x` method. The retrieved values are then compiled into
   a NumPy array, which is returned.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>np A NumPy array containing the retrieved x values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="715" column="1" bodyfile="fcmaes/advretry.py" bodystart="715" bodyend="717"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b" compoundref="advretry_8py" startline="702" endline="704">fcmaes.advretry.Store.get_x</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497" compoundref="advretry_8py" startline="335">fcmaes.advretry.Store.num_stored</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7" compoundref="advretry_8py" startline="413" endline="421">fcmaes.advretry.Store.get_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition> float fcmaes.advretry.Store.get_y</definition>
        <argsstring>(self, int pid)</argsstring>
        <name>get_y</name>
        <qualifiedname>fcmaes.advretry.Store.get_y</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>int</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Fetches a value for a given ID from a dictionary of float values. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method retrieves a corresponding float value from the `ys` dictionary
   based on the provided integer ID. The dictionary `ys` maps integer IDs to
   float values. The function returns the float value associated with the
   supplied `pid`.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The unique identifier used to fetch a value from the <computeroutput>ys</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dictionary.</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float The value corresponding to the provided <computeroutput>pid</computeroutput> from the <computeroutput>ys</computeroutput> </para>
</simplesect>
<simplesect kind="return"><para>dictionary. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="734" column="1" bodyfile="fcmaes/advretry.py" bodystart="734" bodyend="736"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100" compoundref="advretry_8py" startline="331">fcmaes.advretry.Store.ys</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591" compoundref="advretry_8py" startline="529" endline="546">fcmaes.advretry.Store.limits</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a691e8315e1b9c8d92b67520216c72cdf" compoundref="mapelites_8py" startline="1232" endline="1235">fcmaes.mapelites.Archive.random_xs_one</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a82cd0403d58fbb41ef29c2cfb6ac74f7" compoundref="mapelites_8py" startline="781" endline="792">fcmaes.mapelites.Archive.set</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>np.ndarray</type>
        <definition> np.ndarray fcmaes.advretry.Store.get_ys</definition>
        <argsstring>(self)</argsstring>
        <name>get_ys</name>
        <qualifiedname>fcmaes.advretry.Store.get_ys</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Gets the stored y-values up to the specified count. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method retrieves the portion of the y-values list that corresponds to
   the count determined by `num_stored.value`. The result is returned as a
   NumPy array.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>np A NumPy array containing the stored y-values up to the specified count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="747" column="1" bodyfile="fcmaes/advretry.py" bodystart="747" bodyend="749"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497" compoundref="advretry_8py" startline="335">fcmaes.advretry.Store.num_stored</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100" compoundref="advretry_8py" startline="331">fcmaes.advretry.Store.ys</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" compoundref="advretry_8py" startline="852" endline="863">fcmaes.advretry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a0bcd8007cc5cf709da8ccc42aa2c46eb" compoundref="mapelites_8py" startline="1262" endline="1269">fcmaes.mapelites.Archive.dump</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a0049736307028e256c038d8a8c1723d2" compoundref="retry_8py" startline="871" endline="884">fcmaes.retry.Store.dump</referencedby>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7" compoundref="advretry_8py" startline="413" endline="421">fcmaes.advretry.Store.get_data</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1ad4060a6948b61fe981b124afc8c12ba4" compoundref="mapelites_8py" startline="639" endline="643">fcmaes.mapelites.Archive.get_occupied_data</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a50c9e9bac3b339e4158614dad396bb18" compoundref="mapelites_8py" startline="1030" endline="1043">fcmaes.mapelites.Archive.get_qd_score</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a4299111d24891cea4a03c19f28360923" compoundref="mapelites_8py" startline="1283" endline="1289">fcmaes.mapelites.Archive.info</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a62da9c6f511c298d1ef06d6af7600196" compoundref="mapelites_8py" startline="707" endline="728">fcmaes.mapelites.Archive.load</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1aedbfd9567b2d8da13a94da232465aa42" compoundref="mapelites_8py" startline="683" endline="692">fcmaes.mapelites.Archive.save</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition> float fcmaes.advretry.Store.get_y_best</definition>
        <argsstring>(self)</argsstring>
        <name>get_y_best</name>
        <qualifiedname>fcmaes.advretry.Store.get_y_best</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Returns the best value of y stored in the <computeroutput>best_y</computeroutput> attribute. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   The function accesses the `best_y` attribute and retrieves its value
   as a float.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float The best value of y. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="759" column="1" bodyfile="fcmaes/advretry.py" bodystart="759" bodyend="761"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a" compoundref="advretry_8py" startline="336">fcmaes.advretry.Store.best_y</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7" compoundref="advretry_8py" startline="413" endline="421">fcmaes.advretry.Store.get_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a0e6a826522ffacef8ab24249fc4127b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition> int fcmaes.advretry.Store.get_count_evals</definition>
        <argsstring>(self)</argsstring>
        <name>get_count_evals</name>
        <qualifiedname>fcmaes.advretry.Store.get_count_evals</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Retrieves the value of the evaluation count. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method accesses the `count_evals` attribute and returns its integer
   value. It is primarily intended to report the current count of evaluations
   stored in the `count_evals` attribute.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>int The current evaluation count stored in <computeroutput>count_evals</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="772" column="1" bodyfile="fcmaes/advretry.py" bodystart="772" bodyend="774"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98" compoundref="advretry_8py" startline="333">fcmaes.advretry.Store.count_evals</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition> int fcmaes.advretry.Store.get_count_runs</definition>
        <argsstring>(self)</argsstring>
        <name>get_count_runs</name>
        <qualifiedname>fcmaes.advretry.Store.get_count_runs</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Retrieves the count of runs. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method returns the value of the `count_runs` attribute, representing
   the total count of runs made.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>int The value of the <computeroutput>count_runs</computeroutput> attribute. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="784" column="1" bodyfile="fcmaes/advretry.py" bodystart="784" bodyend="786"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f" compoundref="advretry_8py" startline="334">fcmaes.advretry.Store.count_runs</references>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_crfmnes_1aeaf53b0b1cef69245496384c9c5569fb" compoundref="optimizer_8py" startline="939" endline="949">fcmaes.optimizer.Crfmnes.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a28a1d5e195fa924386bd76c29a9f682d" compoundref="optimizer_8py" startline="1044" endline="1054">fcmaes.optimizer.Crfmnes_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" compoundref="optimizer_8py" startline="2596" endline="2603">fcmaes.optimizer.Da_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a15393a3e9dbb73be5cf8e5c9cc6f8c2d" compoundref="optimizer_8py" startline="1156" endline="1166">fcmaes.optimizer.Pgpe_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a732636cd5ab3c40b878ef2e0274b1d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.advretry.Store.set_x</definition>
        <argsstring>(self, pid, xs)</argsstring>
        <name>set_x</name>
        <qualifiedname>fcmaes.advretry.Store.set_x</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>pid</type>
          <defname>pid</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89" kindref="member">xs</ref></type>
          <defname>xs</defname>
        </param>
        <briefdescription>
<para>Sets a subset of the <computeroutput>xs</computeroutput> list for a specific process ID. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This function updates a section of the `xs` attribute corresponding to a
   particular process ID (`pid`) based on the provided input values.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>Process ID whose section in <computeroutput>xs</computeroutput> is to be updated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>List of values to update in the specific section of <computeroutput>xs</computeroutput> for the given process ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="798" column="1" bodyfile="fcmaes/advretry.py" bodystart="798" bodyend="800"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" compoundref="advretry_8py" startline="319">fcmaes.advretry.Store.dim</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89" compoundref="advretry_8py" startline="330">fcmaes.advretry.Store.xs</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9" compoundref="advretry_8py" startline="575" endline="578">fcmaes.advretry.Store.replace</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a42807f223ababda1171ddc055df0bbd1" compoundref="retry_8py" startline="632" endline="635">fcmaes.retry.Store.replace</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a12d96e54629b449293d2aabf5542ddc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.advretry.Store.set_y</definition>
        <argsstring>(self, pid, y)</argsstring>
        <name>set_y</name>
        <qualifiedname>fcmaes.advretry.Store.set_y</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>pid</type>
          <defname>pid</defname>
        </param>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <briefdescription>
<para>Sets the value of y for a given pid within the &apos;ys&apos; mapping. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   Modifies the associated value of y in the dictionary &apos;ys&apos; for the
   provided process identifier (pid). This method stores or updates
   the y value tied to a specific pid.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for the process whose y value is being set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to associate with the given pid in the &apos;ys&apos; mapping. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="812" column="1" bodyfile="fcmaes/advretry.py" bodystart="812" bodyend="814"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100" compoundref="advretry_8py" startline="331">fcmaes.advretry.Store.ys</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9" compoundref="advretry_8py" startline="575" endline="578">fcmaes.advretry.Store.replace</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1a42807f223ababda1171ddc055df0bbd1" compoundref="retry_8py" startline="632" endline="635">fcmaes.retry.Store.replace</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a82cd0403d58fbb41ef29c2cfb6ac74f7" compoundref="mapelites_8py" startline="781" endline="792">fcmaes.mapelites.Archive.set</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a06c36a088a4f1f50b63e7d0cdf1dcc40" compoundref="mapelites_8py" startline="1061" endline="1064">fcmaes.mapelites.Archive.set_ys</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition> bool fcmaes.advretry.Store.get_runs_compare_incr</definition>
        <argsstring>(self, float limit)</argsstring>
        <name>get_runs_compare_incr</name>
        <qualifiedname>fcmaes.advretry.Store.get_runs_compare_incr</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>float</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Compares the current count of runs against a specified limit and increments internal counters accordingly if the limit is not exceeded. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper threshold to compare against the current count of runs.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>bool True if the current count is less than the limit and the increment operation was performed. False otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="826" column="1" bodyfile="fcmaes/advretry.py" bodystart="826" bodyend="837"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce" compoundref="advretry_8py" startline="328">fcmaes.advretry.Store.add_mutex</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae" compoundref="advretry_8py" startline="318">fcmaes.advretry.Store.check_interval</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f" compoundref="advretry_8py" startline="334">fcmaes.advretry.Store.count_runs</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c" compoundref="advretry_8py" startline="332">fcmaes.advretry.Store.eval_fac</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aebbd407d5af1334e38fbdc5a8ba36d3f" compoundref="advretry_8py" startline="316">fcmaes.advretry.Store.eval_fac_incr</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538" compoundref="advretry_8py" startline="317">fcmaes.advretry.Store.max_eval_fac</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" compoundref="advretry_8py" startline="623" endline="646">fcmaes.advretry.Store.sort</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.advretry.Store.dump</definition>
        <argsstring>(self)</argsstring>
        <name>dump</name>
        <qualifiedname>fcmaes.advretry.Store.dump</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Logs a summary of the execution metrics and current status. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method collects relevant metrics about the execution process and generates a
   formatted log message to provide insights into the current state. Metrics such as
   evaluation counts, best and worst outcomes, and a snapshot of the best solutions are
   included in the message.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/advretry.py" line="852" column="1" bodyfile="fcmaes/advretry.py" bodystart="852" bodyend="863"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57" compoundref="advretry_8py" startline="338">fcmaes.advretry.Store.best_x</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a" compoundref="advretry_8py" startline="336">fcmaes.advretry.Store.best_y</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98" compoundref="advretry_8py" startline="333">fcmaes.advretry.Store.count_evals</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f" compoundref="advretry_8py" startline="334">fcmaes.advretry.Store.count_runs</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c" compoundref="advretry_8py" startline="332">fcmaes.advretry.Store.eval_fac</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77" compoundref="advretry_8py" startline="747" endline="749">fcmaes.advretry.Store.get_ys</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497" compoundref="advretry_8py" startline="335">fcmaes.advretry.Store.num_stored</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a3353add8a5c4d01dd02a8a56890c1036" compoundref="advretry_8py" startline="320">fcmaes.advretry.Store.t0</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1afefa9194fbf5ada1b23dcd45ed3e48f3" compoundref="advretry_8py" startline="337">fcmaes.advretry.Store.worst_y</references>
        <referencedby refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" compoundref="advretry_8py" startline="663" endline="679">fcmaes.advretry.Store.add_result</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aed35531d1489fd7b28d69dc3c9794508" compoundref="retry_8py" startline="674" endline="699">fcmaes.retry.Store.add_result</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Manages the storing, evaluation, and tracking of data in an optimization problem. </para>
    </briefdescription>
    <detaileddescription>
<para>The class enables handling function evaluations and implements tools for statistics tracking, result persistence, and multiprocessing compatibility. It facilitates managing optimization tasks with specific bounds, ensuring efficient computational resource usage and tracking statistical progress over iterations.</para>
<para><verbatim>   fun (Callable[[ArrayLike], float]): The fitness function to be optimized.
</verbatim> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.advretry.Store</label>
        <link refid="classfcmaes_1_1advretry_1_1_store"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/advretry.py" line="234" column="1" bodyfile="fcmaes/advretry.py" bodystart="234" bodyend="863"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a1dfb9b034380f6ca44583ab26014d0ba" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1ae73944a21ee51902dfdc93403dadc8ce" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>add_mutex</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a7dfa5440d1d295083cef68ea37be60fe" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>add_result</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>best_x</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>best_y</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a44fe2e19ed26797a80dd27ee7c1a6b50" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>bval</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1ac02358030591fcfa40acde3b27f6ee30" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>capacity</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a3dc00b6f12a508d7e3537e4869bae3ae" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>check_interval</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a784de4dd2241f0d45a199379be53532d" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>check_mutex</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1af0db304f4763604809335265782f7d98" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>count_evals</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a073e21184da6081e7a868fb615bfa55f" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>count_runs</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a879e1014d958865e37c48d5d271c8dc6" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>crossover</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a4a5af1d8a29594eff250c931f481d146" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>datafile</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1ad2d1513e8146883a75bab3f55fb4be95" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>delta</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>dim</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a00ab052ea8b184b7344875122481b623" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>distance</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a03953d817f7ad4b1c13818e1f133a6da" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>dump</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1aca1758cb0a6f2a0033b311b9cc89684c" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>eval_fac</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1aebbd407d5af1334e38fbdc5a8ba36d3f" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>eval_fac_incr</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1acb6d9b590c7c36a83fa8b764d6e15f7e" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>eval_num</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>fun</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a0e6a826522ffacef8ab24249fc4127b4" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_count_evals</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_count_runs</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1aabe26248085adae1ad80a9b17202e5b7" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_data</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1afda8cdd53cf9e0c3160f59bb623becba" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_improvements</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1ac1a185da0fdff01550d275b4635f73df" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_runs_compare_incr</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a6ccfce173196171f999e4a3c4531f01f" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_statistics</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a97e407315b2e0c802b9d5b4414f3f91b" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_x</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a95e2b65e516214df91625c67e4ebe558" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_x_best</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a2df2e37a5663c3e12c22c4b97f2549a2" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_xs</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a907617cde0def7276f1f609d7690335f" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_y</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a801f488c7741c549ab3212f5ce52803a" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_y_best</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a3cc073975313c4893de761cfc9771d77" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>get_ys</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1ab543494f5cc2e6a7f877ca8cb0e35591" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>limits</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1adc9b28c43aee9110aef2fad53f30a077" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>load</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>lower</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a943e1c9111fc75a8c7aad94b9feb5538" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>max_eval_fac</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a4c08da826f59305eaa14d6bbdbaa6b1d" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>num_retries</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a35cab48a8942fed186c0a6bd88b90497" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>num_stored</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a0ae90f35f58deb629c18747fbf9b1cc9" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>replace</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1af869a404006e773c0f7fd0744d3733f8" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>rg</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a19b9d6c0787fb06a2b00e595f487bf37" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>save</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1acff238ba31618eab7787f5204b5676f3" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>set_data</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a732636cd5ab3c40b878ef2e0274b1d1b" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>set_x</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a12d96e54629b449293d2aabf5542ddc1" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>set_y</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1ab1505fe94e716ee8645e7e694f69efbc" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>sevals</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a3d944cda44a59bf02cef0cd0b68cc4c4" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>si</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1aa5c9f7209b6bfb5bf079ad940a84eea4" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>sort</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1ae5d9ac54fe3531077bedd2945298073f" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>statistic_num</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a3353add8a5c4d01dd02a8a56890c1036" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>t0</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a9f708b7ec4308e915d2600f357ae7a1d" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>time</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a8d112bb91cc58f032a0bb929c236fd8e" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>upper</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1a72b4b6c231e9e44a77a30dec5c731db2" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>val</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1afefa9194fbf5ada1b23dcd45ed3e48f3" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>worst_y</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1abd78c63348eaf496e00df2bc0d3711aa" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>wrapper</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1adcc4bcd2b2d9dd72a7d315ac273def89" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>xs</name></member>
      <member refid="classfcmaes_1_1advretry_1_1_store_1ac058ac776acb3ce2891ddb0fe7a15100" prot="public" virt="non-virtual"><scope>fcmaes::advretry::Store</scope><name>ys</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

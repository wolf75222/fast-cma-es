<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1optimizer_1_1_bite__cpp" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::optimizer::Bite_cpp</compoundname>
    <basecompoundref refid="classfcmaes_1_1optimizer_1_1_optimizer" prot="public" virt="non-virtual">fcmaes.optimizer.Optimizer</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_bite__cpp_1a900a36ee4e9e471f164fddc18f5af8ff" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Bite_cpp::guess</definition>
        <argsstring></argsstring>
        <name>guess</name>
        <qualifiedname>fcmaes.optimizer.Bite_cpp.guess</qualifiedname>
        <initializer>=  guess</initializer>
        <briefdescription>
<para>Initial guess for the optimization process. </para>
        </briefdescription>
        <detaileddescription>
<para>If None, </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2661" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2661" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_bite__cpp_1ae2a0167e0a1282da6cbc91cef6528e03" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Bite_cpp::stop_fitness</definition>
        <argsstring></argsstring>
        <name>stop_fitness</name>
        <qualifiedname>fcmaes.optimizer.Bite_cpp.stop_fitness</qualifiedname>
        <initializer>=  stop_fitness</initializer>
        <briefdescription>
<para>Target fitness value at which the optimization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2662" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2662" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_bite__cpp_1a862c3e5d3d277ef587b91c91e022b760" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int fcmaes.optimizer.Bite_cpp::M</definition>
        <argsstring></argsstring>
        <name>M</name>
        <qualifiedname>fcmaes.optimizer.Bite_cpp.M</qualifiedname>
        <initializer>=  1 if M is None else M</initializer>
        <briefdescription>
<para>Optional parameter for algorithm-specific settings. </para>
        </briefdescription>
        <detaileddescription>
<para>Defaults to 1 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2663" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2663" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_bite__cpp_1a3c2b1016ec0c7132bd1aaf249a0606e2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int fcmaes.optimizer.Bite_cpp::popsize</definition>
        <argsstring></argsstring>
        <name>popsize</name>
        <qualifiedname>fcmaes.optimizer.Bite_cpp.popsize</qualifiedname>
        <initializer>=  0 if popsize is None else popsize</initializer>
        <briefdescription>
<para>Population size used by the optimization algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para>Defaults </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2664" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2664" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" compoundref="benchmark__gtop__pygmo_8py" startline="103" endline="118">examples.benchmark_gtop_pygmo.Cma_pyg.minimize</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" compoundref="benchmark__gtop__pygmo_8py" startline="127" endline="137">examples.benchmark_gtop_pygmo.De_pyg.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" compoundref="optimizer_8py" startline="2858" endline="2864">fcmaes.optimizer.Differential_evolution.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_bite__cpp_1ad30512cc226b83fb569ad1a46aa1e208" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int fcmaes.optimizer.Bite_cpp::stall_criterion</definition>
        <argsstring></argsstring>
        <name>stall_criterion</name>
        <qualifiedname>fcmaes.optimizer.Bite_cpp.stall_criterion</qualifiedname>
        <initializer>=  0 if stall_criterion is None else stall_criterion</initializer>
        <briefdescription>
<para>Number of iterations over which lack of improvement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2665" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2665" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_bite__cpp_1ae9c52b6c377c3ac1a7b235db2f307d74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.Bite_cpp.__init__</definition>
        <argsstring>(self, Optional[int] max_evaluations=50000, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[int] M=None, Optional[int] popsize=None, Optional[int] stall_criterion=None)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.optimizer.Bite_cpp.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <array>[int]</array>
          <defval>50000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>M</declname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stall_criterion</declname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Initializes the optimization algorithm with parameters specific to the optimization process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Maximum number of evaluations allowed for the optimizer to perform. Default is 50000. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Initial guess for the optimization process. Default is None. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; <ref refid="class_fitness" kindref="compound">Fitness</ref> value at which to stop the optimization. Default is negative infinity (-np.inf). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Parameter related to the optimization configuration. Default value is 1 if not provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Population size for the optimization process. Default value is 0 if not provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stall_criterion</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; Criterion related to the stall condition in optimization. Default value is 0 if not provided. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2653" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2659" bodyend="2666"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[np.ndarray, float, int]</type>
        <definition> Tuple[np.ndarray, float, int] fcmaes.optimizer.Bite_cpp.minimize</definition>
        <argsstring>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.optimizer.Bite_cpp.minimize</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>guess</defname>
          <array>[Bounds]</array>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <defname>sdevs</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>sdevs</declname>
          <defname>rg</defname>
          <array>[float]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>rg</type>
          <defname>store</defname>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>store</type>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Minimizes a scalar function of multiple variables using a given optimization algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method applies an algorithm to minimize the objective function `fun` within the
   specified bounds. It optionally uses an initial guess for the solution, random generator
   for sampling, and allows storing intermediate results. The function is particularly
   designed to handle optimization tasks efficiently with various configuration options.


       fun (Callable[[ArrayLike], float]): Objective function to be minimized.
           It should accept an array-like input and return a float value.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>Bounds for the optimization variables. Specifies the range of the variables during optimization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess for the solution. If None, the default guess will be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sdevs</parametername>
</parameternamelist>
<parameterdescription>
<para>Ignored. Value provided to this parameter will have no effect. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>Random generator instance for sampling during the optimization process. Default is Generator(PCG64DXSM()). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional storage for storing intermediate results such as run history or diagnostics information.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple[np.ndarray, float, int]: A tuple containing:<itemizedlist>
<listitem><para>The optimized solution as a NumPy array.</para>
</listitem><listitem><para>The value of the objective function at the optimized solution.</para>
</listitem><listitem><para>The total number of function evaluations performed. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2695" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2701" bodyend="2709"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61" compoundref="advretry_8py" startline="784" endline="786">fcmaes.advretry.Store.get_count_runs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" compoundref="optimizer_8py" startline="320" endline="323">fcmaes.optimizer.Optimizer.get_count_runs</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1ad60e13f5cfc1f2c51e12bc24507708e9" compoundref="cmaes_8py" startline="204">fcmaes.cmaes.Cmaes.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1a900a36ee4e9e471f164fddc18f5af8ff" compoundref="optimizer_8py" startline="2661">fcmaes.optimizer.Bite_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a3c87ed72ee15e5bcd89e0e484ef980c8" compoundref="optimizer_8py" startline="2255">fcmaes.optimizer.Cma_ask_tell.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1adcd113e9905647601dc5c7539a6eb4cb" compoundref="optimizer_8py" startline="1749">fcmaes.optimizer.Cma_awm.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c" compoundref="optimizer_8py" startline="1362">fcmaes.optimizer.Cma_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__lw_1abd9e72f56c6e5b5b1fbe57bd16691589" compoundref="optimizer_8py" startline="1611">fcmaes.optimizer.Cma_lw.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a91b1661ab6194b9f03f1bc5eb95195e0" compoundref="optimizer_8py" startline="1473">fcmaes.optimizer.Cma_orig.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a" compoundref="optimizer_8py" startline="1233">fcmaes.optimizer.Cma_python.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a4357690ffebc7f4f1467a31db2371194" compoundref="optimizer_8py" startline="1895">fcmaes.optimizer.Cma_sep.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1af4d308e51cb40add76e8a257dc54e634" compoundref="optimizer_8py" startline="902">fcmaes.optimizer.Crfmnes.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a01fc558e855be7732876a6e5facf3d1c" compoundref="optimizer_8py" startline="1003">fcmaes.optimizer.Crfmnes_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_da__cpp_1adb6bcafec8f433b6d7971da3c9bad807" compoundref="optimizer_8py" startline="2559">fcmaes.optimizer.Da_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a8a7c5c4f984128d0bf719d2042b5b6e4" compoundref="optimizer_8py" startline="2032">fcmaes.optimizer.De_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a3acb28558e183337fbc25d0f30dfc2a0" compoundref="optimizer_8py" startline="1116">fcmaes.optimizer.Pgpe_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1a862c3e5d3d277ef587b91c91e022b760" compoundref="optimizer_8py" startline="2663">fcmaes.optimizer.Bite_cpp.M</references>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" compoundref="optimizer_8py" startline="304" endline="307">fcmaes.optimizer.Optimizer.max_eval_num</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df" compoundref="cmaes_8py" startline="223">fcmaes.cmaes.Cmaes.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" compoundref="cmaescpp_8py" startline="238">fcmaes.cmaescpp.ACMA_C.popsize</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" compoundref="crfmnescpp_8py" startline="221">fcmaes.crfmnescpp.CRFMNES_C.popsize</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1ac57257a177f51fb2637120cc3bf7ac55" compoundref="de_8py" startline="305">fcmaes.de.DE.popsize</references>
        <references refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad122a7d34bd51afeb06228ad811f85ce" compoundref="decpp_8py" startline="293">fcmaes.decpp.DE_C.popsize</references>
        <references refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6" compoundref="mode_8py" startline="487">fcmaes.mode.MODE.popsize</references>
        <references refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ac85826131061fe5596f9420ff628f582" compoundref="modecpp_8py" startline="404">fcmaes.modecpp.MODE_C.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1a3c2b1016ec0c7132bd1aaf249a0606e2" compoundref="optimizer_8py" startline="2664">fcmaes.optimizer.Bite_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a2a32bf4b1974985835c6fe4d78efbfa0" compoundref="optimizer_8py" startline="2253">fcmaes.optimizer.Cma_ask_tell.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1adfed8224a61810107b7df8908a1872cb" compoundref="optimizer_8py" startline="1747">fcmaes.optimizer.Cma_awm.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578" compoundref="optimizer_8py" startline="1359">fcmaes.optimizer.Cma_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a1861ff82b2a8709da57f19cb75a483ce" compoundref="optimizer_8py" startline="1609">fcmaes.optimizer.Cma_lw.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a90f09477ed9000f2c20750fa9ac73ed5" compoundref="optimizer_8py" startline="1471">fcmaes.optimizer.Cma_orig.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371" compoundref="optimizer_8py" startline="1230">fcmaes.optimizer.Cma_python.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__sep_1abddd49200f8a013f6fb55ce8698dd111" compoundref="optimizer_8py" startline="1893">fcmaes.optimizer.Cma_sep.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1abf110ededa79f1101d0acefadef018f8" compoundref="optimizer_8py" startline="900">fcmaes.optimizer.Crfmnes.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1adf8a89f1eba94649ba1fbafd89e68ba8" compoundref="optimizer_8py" startline="1001">fcmaes.optimizer.Crfmnes_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__ask__tell_1ad7be76f5ffe7fc538f9d630e8ebf4137" compoundref="optimizer_8py" startline="2373">fcmaes.optimizer.De_ask_tell.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__cpp_1aeee0354a9a88e72a8de9a14518e0b631" compoundref="optimizer_8py" startline="2031">fcmaes.optimizer.De_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__python_1a69e1e5d4ef59774da8d311e5414f423b" compoundref="optimizer_8py" startline="2147">fcmaes.optimizer.De_python.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1ad8bb83e394a209e90761b1d77b424e47" compoundref="optimizer_8py" startline="1114">fcmaes.optimizer.Pgpe_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1ad30512cc226b83fb569ad1a46aa1e208" compoundref="optimizer_8py" startline="2665">fcmaes.optimizer.Bite_cpp.stall_criterion</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1ab77d778b85b64826f6a8e7c004387f35" compoundref="cmaes_8py" startline="244">fcmaes.cmaes.Cmaes.stop_fitness</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1a22676b41ab3ab0d910bda941601cb9c4" compoundref="de_8py" startline="306">fcmaes.de.DE.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1ae2a0167e0a1282da6cbc91cef6528e03" compoundref="optimizer_8py" startline="2662">fcmaes.optimizer.Bite_cpp.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a7d349b5034ba57f809452070bc13b7c8" compoundref="optimizer_8py" startline="2254">fcmaes.optimizer.Cma_ask_tell.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1a9244263d6e7b2315ffa2f09b7fde5aac" compoundref="optimizer_8py" startline="1748">fcmaes.optimizer.Cma_awm.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ae7c8ca1a9885411036279c8990bada8e" compoundref="optimizer_8py" startline="1360">fcmaes.optimizer.Cma_cpp.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a93cdf2e5be18ff6b6ba1de0fe2ca3faf" compoundref="optimizer_8py" startline="1610">fcmaes.optimizer.Cma_lw.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__orig_1aa3e54c6b1d49bf087f1afcb4e4d92f13" compoundref="optimizer_8py" startline="1472">fcmaes.optimizer.Cma_orig.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a581873b49ad570adbcdef9fc9ceff19f" compoundref="optimizer_8py" startline="1231">fcmaes.optimizer.Cma_python.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a6bcb1fd525cca55a937381532eaab1d8" compoundref="optimizer_8py" startline="1894">fcmaes.optimizer.Cma_sep.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1a784caafbf6afcebd51d20067ead7aaae" compoundref="optimizer_8py" startline="901">fcmaes.optimizer.Crfmnes.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a241df60d5265b688e9959feca89318fb" compoundref="optimizer_8py" startline="1002">fcmaes.optimizer.Crfmnes_cpp.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_da__cpp_1a1ee5e02f5bdc6f640595c081eb01c230" compoundref="optimizer_8py" startline="2557">fcmaes.optimizer.Da_cpp.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__ask__tell_1aa94dd4195cc987dcedf14f4c483c1b51" compoundref="optimizer_8py" startline="2374">fcmaes.optimizer.De_ask_tell.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__cpp_1ac215b9338b1e36507d52f271011f2623" compoundref="optimizer_8py" startline="2033">fcmaes.optimizer.De_cpp.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__python_1add6597366425631f6da2437eeaf81068" compoundref="optimizer_8py" startline="2148">fcmaes.optimizer.De_python.stop_fitness</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8927d734b23546a18e42e14ade1569e5" compoundref="optimizer_8py" startline="1115">fcmaes.optimizer.Pgpe_cpp.stop_fitness</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fcmaes.optimizer.Bite_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_bite__cpp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.optimizer.Bite_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_bite__cpp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/optimizer.py" line="2617" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2617" bodyend="2709"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1ae9c52b6c377c3ac1a7b235db2f307d74" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>get_count_runs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1a900a36ee4e9e471f164fddc18f5af8ff" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>guess</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1a862c3e5d3d277ef587b91c91e022b760" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>M</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>max_eval_num</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>max_evaluations</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>minimize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>name</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1a3c2b1016ec0c7132bd1aaf249a0606e2" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>popsize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1ad30512cc226b83fb569ad1a46aa1e208" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>stall_criterion</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1ae2a0167e0a1282da6cbc91cef6528e03" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Bite_cpp</scope><name>stop_fitness</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

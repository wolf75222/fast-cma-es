<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_c_spher_opt" kind="class" language="C++" prot="public">
    <compoundname>CSpherOpt</compoundname>
    <basecompoundref refid="class_c_bite_opt_base" prot="public" virt="non-virtual">CBiteOptBase&lt; double &gt;</basecompoundref>
    <derivedcompoundref refid="class_c_bite_opt_1_1_c_par_opt" prot="public" virt="non-virtual">CBiteOpt::CParOpt&lt; CSpherOpt &gt;</derivedcompoundref>
    <includes refid="spheropt_8h" local="no">spheropt.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_spher_opt_1a5f268cc854a7de1995a54e9b73f87e2a" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CSpherOpt::WPopCent</definition>
        <argsstring></argsstring>
        <name>WPopCent</name>
        <qualifiedname>CSpherOpt::WPopCent</qualifiedname>
        <briefdescription>
<para>Weighting coefficients for centroid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="243" column="8" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="243" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a3ff6a1a07d0c5f3ac9c133b021b190ac" compoundref="spheropt_8h" startline="47" endline="54">CSpherOpt</referencedby>
        <referencedby refid="class_c_spher_opt_1a6491915dd708c2791682a529005c035e" compoundref="spheropt_8h" startline="267" endline="273">deleteBuffers</referencedby>
        <referencedby refid="class_c_spher_opt_1a00c0facb71cb0ef24498e77ce68e6c04" compoundref="spheropt_8h" startline="257" endline="265">initBuffers</referencedby>
        <referencedby refid="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" compoundref="spheropt_8h" startline="281" endline="353">update</referencedby>
        <referencedby refid="class_c_spher_opt_1a8b6557f101813e721289a7c8edecf349" compoundref="spheropt_8h" startline="56" endline="60">~CSpherOpt</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1a2598f95d32a6dcb9c25366f89f795912" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CSpherOpt::WPopRad</definition>
        <argsstring></argsstring>
        <name>WPopRad</name>
        <qualifiedname>CSpherOpt::WPopRad</qualifiedname>
        <briefdescription>
<para>Weighting coefficients for radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="244" column="8" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="244" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a3ff6a1a07d0c5f3ac9c133b021b190ac" compoundref="spheropt_8h" startline="47" endline="54">CSpherOpt</referencedby>
        <referencedby refid="class_c_spher_opt_1a6491915dd708c2791682a529005c035e" compoundref="spheropt_8h" startline="267" endline="273">deleteBuffers</referencedby>
        <referencedby refid="class_c_spher_opt_1a00c0facb71cb0ef24498e77ce68e6c04" compoundref="spheropt_8h" startline="257" endline="265">initBuffers</referencedby>
        <referencedby refid="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" compoundref="spheropt_8h" startline="281" endline="353">update</referencedby>
        <referencedby refid="class_c_spher_opt_1a8b6557f101813e721289a7c8edecf349" compoundref="spheropt_8h" startline="56" endline="60">~CSpherOpt</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1adb82e9f193684e7b21d60e35bd38237f" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CSpherOpt::JitMult</definition>
        <argsstring></argsstring>
        <name>JitMult</name>
        <qualifiedname>CSpherOpt::JitMult</qualifiedname>
        <briefdescription>
<para>Jitter multiplier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="245" column="8" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="245" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" compoundref="spheropt_8h" startline="142" endline="240">optimize</referencedby>
        <referencedby refid="class_c_spher_opt_1a0be21abe1246b154cb848bd338bf1723" compoundref="spheropt_8h" startline="70" endline="83">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1ae8093a1a0cab7fae9e8762ff306c4827" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CSpherOpt::JitOffs</definition>
        <argsstring></argsstring>
        <name>JitOffs</name>
        <qualifiedname>CSpherOpt::JitOffs</qualifiedname>
        <briefdescription>
<para>Jitter multiplier offset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="246" column="8" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="246" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" compoundref="spheropt_8h" startline="142" endline="240">optimize</referencedby>
        <referencedby refid="class_c_spher_opt_1a0be21abe1246b154cb848bd338bf1723" compoundref="spheropt_8h" startline="70" endline="83">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1a28e10a5d2dad5244fb97197e7e85095d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CSpherOpt::Radius</definition>
        <argsstring></argsstring>
        <name>Radius</name>
        <qualifiedname>CSpherOpt::Radius</qualifiedname>
        <briefdescription>
<para>Current radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="247" column="8" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="247" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a84b141fe50be3806222b2ad3d0846aaf" compoundref="spheropt_8h" startline="95" endline="128">init</referencedby>
        <referencedby refid="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" compoundref="spheropt_8h" startline="142" endline="240">optimize</referencedby>
        <referencedby refid="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" compoundref="spheropt_8h" startline="281" endline="353">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1a92e80374efa3c695155056dc9bed3001" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CSpherOpt::EvalFac</definition>
        <argsstring></argsstring>
        <name>EvalFac</name>
        <qualifiedname>CSpherOpt::EvalFac</qualifiedname>
        <briefdescription>
<para>Evaluations factor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="248" column="8" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="248" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a84b141fe50be3806222b2ad3d0846aaf" compoundref="spheropt_8h" startline="95" endline="128">init</referencedby>
        <referencedby refid="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" compoundref="spheropt_8h" startline="142" endline="240">optimize</referencedby>
        <referencedby refid="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" compoundref="spheropt_8h" startline="281" endline="353">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1a0d833587909f28ade47110ec158b0d9b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CSpherOpt::cure</definition>
        <argsstring></argsstring>
        <name>cure</name>
        <qualifiedname>CSpherOpt::cure</qualifiedname>
        <briefdescription>
<para>Current evaluation index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="249" column="5" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="249" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a84b141fe50be3806222b2ad3d0846aaf" compoundref="spheropt_8h" startline="95" endline="128">init</referencedby>
        <referencedby refid="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" compoundref="spheropt_8h" startline="142" endline="240">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1ae47ab981059bd16abc005b6c35c90259" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CSpherOpt::curem</definition>
        <argsstring></argsstring>
        <name>curem</name>
        <qualifiedname>CSpherOpt::curem</qualifiedname>
        <briefdescription>
<para>&quot;cure&quot; value threshold. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="250" column="5" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="250" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a84b141fe50be3806222b2ad3d0846aaf" compoundref="spheropt_8h" startline="95" endline="128">init</referencedby>
        <referencedby refid="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" compoundref="spheropt_8h" startline="142" endline="240">optimize</referencedby>
        <referencedby refid="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" compoundref="spheropt_8h" startline="281" endline="353">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1a3d0802a35e4655fc88d6082df144c20b" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CSpherOpt::DoCentEval</definition>
        <argsstring></argsstring>
        <name>DoCentEval</name>
        <qualifiedname>CSpherOpt::DoCentEval</qualifiedname>
        <briefdescription>
<para>at centroid point is required. </para>
        </briefdescription>
        <detaileddescription>
<para>&quot;True&quot; if an initial objective function evaluation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="251" column="6" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="251" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a84b141fe50be3806222b2ad3d0846aaf" compoundref="spheropt_8h" startline="95" endline="128">init</referencedby>
        <referencedby refid="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" compoundref="spheropt_8h" startline="142" endline="240">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1a03ab19cfd5185229176166ccc011f160" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CSpherOpt::CentPowSel</definition>
        <argsstring></argsstring>
        <name>CentPowSel</name>
        <qualifiedname>CSpherOpt::CentPowSel</qualifiedname>
        <briefdescription>
<para>Centroid power factor selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="253" column="10" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="253" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a3ff6a1a07d0c5f3ac9c133b021b190ac" compoundref="spheropt_8h" startline="47" endline="54">CSpherOpt</referencedby>
        <referencedby refid="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" compoundref="spheropt_8h" startline="281" endline="353">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1a29f0077440e7edc368830ae2582181ac" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 4 &gt;</type>
        <definition>CBiteSel&lt; 4 &gt; CSpherOpt::RadPowSel</definition>
        <argsstring></argsstring>
        <name>RadPowSel</name>
        <qualifiedname>CSpherOpt::RadPowSel</qualifiedname>
        <briefdescription>
<para>Radius power factor selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="254" column="10" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="254" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a3ff6a1a07d0c5f3ac9c133b021b190ac" compoundref="spheropt_8h" startline="47" endline="54">CSpherOpt</referencedby>
        <referencedby refid="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" compoundref="spheropt_8h" startline="281" endline="353">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_spher_opt_1adb977f181df718708fe31cce2f7ee20b" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_sel" kindref="compound">CBiteSel</ref>&lt; 3 &gt;</type>
        <definition>CBiteSel&lt; 3 &gt; CSpherOpt::EvalFacSel</definition>
        <argsstring></argsstring>
        <name>EvalFacSel</name>
        <qualifiedname>CSpherOpt::EvalFacSel</qualifiedname>
        <briefdescription>
<para>EvalFac selector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="255" column="10" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="255" bodyend="-1"/>
        <referencedby refid="class_c_spher_opt_1a3ff6a1a07d0c5f3ac9c133b021b190ac" compoundref="spheropt_8h" startline="47" endline="54">CSpherOpt</referencedby>
        <referencedby refid="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" compoundref="spheropt_8h" startline="281" endline="353">update</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_spher_opt_1a3ff6a1a07d0c5f3ac9c133b021b190ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CSpherOpt::CSpherOpt</definition>
        <argsstring>()</argsstring>
        <name>CSpherOpt</name>
        <qualifiedname>CSpherOpt::CSpherOpt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="47" column="1" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="47" bodyend="54"/>
        <references refid="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" compoundref="biteaux_8h" startline="1859" endline="1864">CBiteOptBase&lt; double &gt;::addSel</references>
        <references refid="class_c_spher_opt_1a03ab19cfd5185229176166ccc011f160" compoundref="spheropt_8h" startline="253">CentPowSel</references>
        <references refid="class_c_spher_opt_1adb977f181df718708fe31cce2f7ee20b" compoundref="spheropt_8h" startline="255">EvalFacSel</references>
        <references refid="class_c_spher_opt_1a29f0077440e7edc368830ae2582181ac" compoundref="spheropt_8h" startline="254">RadPowSel</references>
        <references refid="class_c_spher_opt_1a5f268cc854a7de1995a54e9b73f87e2a" compoundref="spheropt_8h" startline="243">WPopCent</references>
        <references refid="class_c_spher_opt_1a2598f95d32a6dcb9c25366f89f795912" compoundref="spheropt_8h" startline="244">WPopRad</references>
      </memberdef>
      <memberdef kind="function" id="class_c_spher_opt_1a8b6557f101813e721289a7c8edecf349" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CSpherOpt::~CSpherOpt</definition>
        <argsstring>()</argsstring>
        <name>~CSpherOpt</name>
        <qualifiedname>CSpherOpt::~CSpherOpt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="56" column="9" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="56" bodyend="60"/>
        <references refid="class_c_spher_opt_1a5f268cc854a7de1995a54e9b73f87e2a" compoundref="spheropt_8h" startline="243">WPopCent</references>
        <references refid="class_c_spher_opt_1a2598f95d32a6dcb9c25366f89f795912" compoundref="spheropt_8h" startline="244">WPopRad</references>
      </memberdef>
      <memberdef kind="function" id="class_c_spher_opt_1a0be21abe1246b154cb848bd338bf1723" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSpherOpt::updateDims</definition>
        <argsstring>(const int aParamCount, const int PopSize0=0)</argsstring>
        <name>updateDims</name>
        <qualifiedname>CSpherOpt::updateDims</qualifiedname>
        <param>
          <type>const int</type>
          <declname>aParamCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>PopSize0</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates dimensionality of *this object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of parameters being optimized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PopSize0</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements in population to use. If set to 0 or negative, the default formula will be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="70" column="6" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="70" bodyend="83"/>
        <references refid="class_c_spher_opt_1a00c0facb71cb0ef24498e77ce68e6c04" compoundref="spheropt_8h" startline="257" endline="265">initBuffers</references>
        <references refid="class_c_spher_opt_1adb82e9f193684e7b21d60e35bd38237f" compoundref="spheropt_8h" startline="245">JitMult</references>
        <references refid="class_c_spher_opt_1ae8093a1a0cab7fae9e8762ff306c4827" compoundref="spheropt_8h" startline="246">JitOffs</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1a884c9ad4c0327aaa0110a23a89f5697a" compoundref="biteaux_8h" startline="1171">CBitePop&lt; double &gt;::ParamCountI</references>
        <references refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" compoundref="biteaux_8h" startline="1172">CBitePop&lt; double &gt;::PopSize</references>
      </memberdef>
      <memberdef kind="function" id="class_c_spher_opt_1a84b141fe50be3806222b2ad3d0846aaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSpherOpt::init</definition>
        <argsstring>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</argsstring>
        <name>init</name>
        <qualifiedname>CSpherOpt::init</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const double *const</type>
          <declname>InitParams</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>InitRadius</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes *this optimizer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitParams</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, initial parameter vector, also used as centroid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial radius, multiplier relative to the default sigma value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="95" column="6" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="95" bodyend="128"/>
        <references refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" compoundref="biteaux_8h" startline="1193">CBitePop&lt; double &gt;::CentParams</references>
        <references refid="class_c_spher_opt_1a0d833587909f28ade47110ec158b0d9b" compoundref="spheropt_8h" startline="249">cure</references>
        <references refid="class_c_spher_opt_1ae47ab981059bd16abc005b6c35c90259" compoundref="spheropt_8h" startline="250">curem</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; double &gt;::CurPopSize</references>
        <references refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" compoundref="biteaux_8h" startline="1662">CBiteOptBase&lt; double &gt;::DiffValues</references>
        <references refid="class_c_spher_opt_1a3d0802a35e4655fc88d6082df144c20b" compoundref="spheropt_8h" startline="251">DoCentEval</references>
        <references refid="class_c_spher_opt_1a92e80374efa3c695155056dc9bed3001" compoundref="spheropt_8h" startline="248">EvalFac</references>
        <references refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" compoundref="biteaux_8h" startline="1717" endline="1737">CBiteOptBase&lt; double &gt;::initCommonVars</references>
        <references refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" compoundref="biteaux_8h" startline="1660">CBiteOptBase&lt; double &gt;::MinValues</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_spher_opt_1a28e10a5d2dad5244fb97197e7e85095d" compoundref="spheropt_8h" startline="247">Radius</references>
        <references refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" compoundref="biteaux_8h" startline="1256" endline="1307">CBitePop&lt; double &gt;::wrapParam</references>
      </memberdef>
      <memberdef kind="function" id="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CSpherOpt::optimize</definition>
        <argsstring>(CBiteRnd &amp;rnd, double *const OutCost=NULL, double *const OutValues=NULL)</argsstring>
        <name>optimize</name>
        <qualifiedname>CSpherOpt::optimize</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>OutCost</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>OutValues</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function performs the parameter optimization iteration that involves 1 objective function evaluation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">OutCost</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, pointer to variable that receives cost of the newly-evaluated solution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">OutValues</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, pointer to array that receives a newly-evaluated parameter vector, in real scale, in real value bounds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of non-improving iterations so far. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="142" column="5" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="142" bodyend="240"/>
        <references refid="class_c_bite_opt_base_1a47acdb7a495f75170b0eb457e0dc950e" compoundref="biteaux_8h" startline="1909" endline="1920">CBiteOptBase&lt; double &gt;::applySelsDecr</references>
        <references refid="class_c_bite_opt_base_1aa08dcfff8871910e4d01a94f261ee752" compoundref="biteaux_8h" startline="1890" endline="1901">CBiteOptBase&lt; double &gt;::applySelsIncr</references>
        <references refid="class_c_bite_opt_base_1acc0aa62d6125bd03d3baae22b0bf0467" compoundref="biteaux_8h" startline="1671">CBiteOptBase&lt; double &gt;::AvgCost</references>
        <references refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" compoundref="biteaux_8h" startline="1193">CBitePop&lt; double &gt;::CentParams</references>
        <references refid="class_c_bite_pop_1a57e751582761922bbabff1ddb7af277b" compoundref="biteaux_8h" startline="1241" endline="1244">CBitePop&lt; double &gt;::copyValues</references>
        <references refid="class_c_spher_opt_1a0d833587909f28ade47110ec158b0d9b" compoundref="spheropt_8h" startline="249">cure</references>
        <references refid="class_c_spher_opt_1ae47ab981059bd16abc005b6c35c90259" compoundref="spheropt_8h" startline="250">curem</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; double &gt;::CurPopSize</references>
        <references refid="class_c_spher_opt_1a3d0802a35e4655fc88d6082df144c20b" compoundref="spheropt_8h" startline="251">DoCentEval</references>
        <references refid="class_c_spher_opt_1a92e80374efa3c695155056dc9bed3001" compoundref="spheropt_8h" startline="248">EvalFac</references>
        <references refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">CBiteRnd::get</references>
        <references refid="class_c_bite_pop_1a0053ae41c70babe967c5931f491ea865" compoundref="biteaux_8h" startline="950" endline="953">CBitePop&lt; double &gt;::getCurParams</references>
        <references refid="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" compoundref="biteaux_8h" startline="1803" endline="1806">CBiteOptBase&lt; double &gt;::getRealValue</references>
        <references refid="class_c_bite_opt_base_1a48296b534db162fa0007ff83757cb84b" compoundref="biteaux_8h" startline="1669">CBiteOptBase&lt; double &gt;::HiBound</references>
        <references refid="class_c_spher_opt_1adb82e9f193684e7b21d60e35bd38237f" compoundref="spheropt_8h" startline="245">JitMult</references>
        <references refid="class_c_spher_opt_1ae8093a1a0cab7fae9e8762ff306c4827" compoundref="spheropt_8h" startline="246">JitOffs</references>
        <references refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" compoundref="biteaux_8h" startline="1667">CBiteOptBase&lt; double &gt;::NewValues</references>
        <references refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d">CBiteOptInterface::optcost</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_spher_opt_1a28e10a5d2dad5244fb97197e7e85095d" compoundref="spheropt_8h" startline="247">Radius</references>
        <references refid="class_c_bite_pop_1a767519aa2fcc2667dc135a131bc9fd85" compoundref="biteaux_8h" startline="981" endline="990">CBitePop&lt; double &gt;::resetCurPopPos</references>
        <references refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" compoundref="biteaux_8h" startline="1668">CBiteOptBase&lt; double &gt;::StallCount</references>
        <references refid="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" compoundref="spheropt_8h" startline="281" endline="353">update</references>
        <references refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" compoundref="biteaux_8h" startline="1779" endline="1793">CBiteOptBase&lt; double &gt;::updateBestCost</references>
        <references refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" compoundref="biteaux_8h" startline="1039" endline="1151">CBitePop&lt; double &gt;::updatePop</references>
        <references refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" compoundref="biteaux_8h" startline="1256" endline="1307">CBitePop&lt; double &gt;::wrapParam</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_c_spher_opt_1a00c0facb71cb0ef24498e77ce68e6c04" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CSpherOpt::initBuffers</definition>
        <argsstring>(const int aParamCount, const int aPopSize, const int aCnsCount=0, const int aObjCount=1)</argsstring>
        <name>initBuffers</name>
        <qualifiedname>CSpherOpt::initBuffers</qualifiedname>
        <reimplements refid="class_c_bite_opt_base_1a5c53a8eb3a4269a746d990282452d71e">initBuffers</reimplements>
        <param>
          <type>const int</type>
          <declname>aParamCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>aPopSize</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>aCnsCount</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>aObjCount</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes all common buffers, and &quot;PopSize&quot; variables. This function should be called when population&apos;s dimensions were changed. This function calls the <ref refid="class_c_spher_opt_1a6491915dd708c2791682a529005c035e" kindref="member">deleteBuffers()</ref> function to release any derived classes&apos; allocated buffers. Allocates an additional vector for temporary use, which is at the same the last vector in the PopParams array. Derived classes should call this function of the base class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New parameter count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPopSize</parametername>
</parameternamelist>
<parameterdescription>
<para>New population size. If &lt;= 0, population buffers will not be allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCnsCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New constraint value count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aObjCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New objective value count. If equals 0, a rank element will not be auto-added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="257" column="14" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="257" bodyend="265"/>
        <references refid="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" compoundref="biteaux_8h" startline="1581" endline="1584">CBiteOptBase&lt; double &gt;::CBiteOptBase</references>
        <references refid="class_c_spher_opt_1a5f268cc854a7de1995a54e9b73f87e2a" compoundref="spheropt_8h" startline="243">WPopCent</references>
        <references refid="class_c_spher_opt_1a2598f95d32a6dcb9c25366f89f795912" compoundref="spheropt_8h" startline="244">WPopRad</references>
        <referencedby refid="class_c_spher_opt_1a0be21abe1246b154cb848bd338bf1723" compoundref="spheropt_8h" startline="70" endline="83">updateDims</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_spher_opt_1a6491915dd708c2791682a529005c035e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CSpherOpt::deleteBuffers</definition>
        <argsstring>()</argsstring>
        <name>deleteBuffers</name>
        <qualifiedname>CSpherOpt::deleteBuffers</qualifiedname>
        <reimplements refid="class_c_bite_opt_base_1aed59421f7102fb6921e4af39acfb8369">deleteBuffers</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function deletes buffers previously allocated via the <ref refid="class_c_spher_opt_1a00c0facb71cb0ef24498e77ce68e6c04" kindref="member">initBuffers()</ref> function. Derived classes should call this function of the base class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="267" column="14" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="267" bodyend="273"/>
        <references refid="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" compoundref="biteaux_8h" startline="1581" endline="1584">CBiteOptBase&lt; double &gt;::CBiteOptBase</references>
        <references refid="class_c_spher_opt_1a5f268cc854a7de1995a54e9b73f87e2a" compoundref="spheropt_8h" startline="243">WPopCent</references>
        <references refid="class_c_spher_opt_1a2598f95d32a6dcb9c25366f89f795912" compoundref="spheropt_8h" startline="244">WPopRad</references>
      </memberdef>
      <memberdef kind="function" id="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CSpherOpt::update</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>update</name>
        <qualifiedname>CSpherOpt::update</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates centroid and radius.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/spheropt.h" line="281" column="6" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="281" bodyend="353"/>
        <references refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" compoundref="biteaux_8h" startline="1193">CBitePop&lt; double &gt;::CentParams</references>
        <references refid="class_c_spher_opt_1a03ab19cfd5185229176166ccc011f160" compoundref="spheropt_8h" startline="253">CentPowSel</references>
        <references refid="class_c_spher_opt_1ae47ab981059bd16abc005b6c35c90259" compoundref="spheropt_8h" startline="250">curem</references>
        <references refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" compoundref="biteaux_8h" startline="1174">CBitePop&lt; double &gt;::CurPopSize</references>
        <references refid="class_c_spher_opt_1a92e80374efa3c695155056dc9bed3001" compoundref="spheropt_8h" startline="248">EvalFac</references>
        <references refid="class_c_spher_opt_1adb977f181df718708fe31cce2f7ee20b" compoundref="spheropt_8h" startline="255">EvalFacSel</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" compoundref="biteaux_8h" startline="1182">CBitePop&lt; double &gt;::PopParams</references>
        <references refid="class_c_spher_opt_1a28e10a5d2dad5244fb97197e7e85095d" compoundref="spheropt_8h" startline="247">Radius</references>
        <references refid="class_c_spher_opt_1a29f0077440e7edc368830ae2582181ac" compoundref="spheropt_8h" startline="254">RadPowSel</references>
        <references refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" compoundref="biteaux_8h" startline="1875" endline="1881">CBiteOptBase&lt; double &gt;::select</references>
        <references refid="class_c_spher_opt_1a5f268cc854a7de1995a54e9b73f87e2a" compoundref="spheropt_8h" startline="243">WPopCent</references>
        <references refid="class_c_spher_opt_1a2598f95d32a6dcb9c25366f89f795912" compoundref="spheropt_8h" startline="244">WPopRad</references>
        <referencedby refid="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" compoundref="spheropt_8h" startline="142" endline="240">optimize</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>&quot;Converging hyper-spheroid&quot; optimizer class. Simple, converges quite fast.</para>
<para>Description is available at <ulink url="https://github.com/avaneev/biteopt">https://github.com/avaneev/biteopt</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="11">
        <label>CBiteOpt::CParOpt&lt; CSpherOpt &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptBase&lt; double &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="7">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CBiteParPops&lt; double &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="5">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="1">
        <label>CSpherOpt</label>
        <link refid="class_c_spher_opt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptBase&lt; double &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="protected-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="7">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CBiteParPops&lt; double &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#ParPops</edgelabel>
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="5">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="13">
        <label>CBiteSel&lt; tCount &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>CBiteSel&lt; 3 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>CBiteSel&lt; 4 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; 4 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>CBiteSelBase</label>
        <link refid="class_c_bite_sel_base"/>
      </node>
      <node id="1">
        <label>CSpherOpt</label>
        <link refid="class_c_spher_opt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#CentPowSel</edgelabel>
          <edgelabel>#RadPowSel</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>#EvalFacSel</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/spheropt.h" line="44" column="1" bodyfile="_fcmaescpp/include/spheropt.h" bodystart="45" bodyend="354"/>
    <listofallmembers>
      <member refid="class_c_bite_opt_base_1a5d8710f00b828beca21c0d2699ae340d" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>addSel</name></member>
      <member refid="class_c_bite_opt_base_1a3922d6b29602643882d3212071a5e679" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>ApplySels</name></member>
      <member refid="class_c_bite_opt_base_1afc2d6ec2c61d8f41bd39bb99632cf12e" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>ApplySelsCount</name></member>
      <member refid="class_c_bite_opt_base_1a47acdb7a495f75170b0eb457e0dc950e" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>applySelsDecr</name></member>
      <member refid="class_c_bite_opt_base_1aa08dcfff8871910e4d01a94f261ee752" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>applySelsIncr</name></member>
      <member refid="class_c_bite_opt_base_1acc0aa62d6125bd03d3baae22b0bf0467" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>AvgCost</name></member>
      <member refid="class_c_bite_opt_base_1adc4dfe02978fd4ed460f49c7e9a01633" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>BestCost</name></member>
      <member refid="class_c_bite_opt_base_1a0fbab700b9d9c5c36d5ef664540efad0" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>BestValues</name></member>
      <member refid="class_c_bite_pop_1ad4e3a3c5b7a25ad02ef0231bd3fe8388" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>calcLP1Coeff</name></member>
      <member refid="class_c_bite_opt_base_1a424395289a687d98b8d27cbd828dbc6c" prot="private" virt="non-virtual"><scope>CSpherOpt</scope><name>CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_base_1af11515f00a0a685516aa9cc3daf7f603" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>CBiteOptInterface</name></member>
      <member refid="class_c_bite_par_pops_1a1d00195283da4d97f648da706e5c5cec" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>CBiteParPops</name></member>
      <member refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1a73402384f4b75abf6d956dc086ccf36e" prot="public" virt="non-virtual" ambiguityscope="CBiteParPops&lt; double &gt;::"><scope>CSpherOpt</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1ab6dec63b0ee3955563c2a3f815614f31" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>CentLPC</name></member>
      <member refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>CentParams</name></member>
      <member refid="class_c_spher_opt_1a03ab19cfd5185229176166ccc011f160" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>CentPowSel</name></member>
      <member refid="class_c_bite_pop_1a2bf725291723a8dcaa215496e3175471" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>CnsCount</name></member>
      <member refid="class_c_bite_pop_1a3fc2d887ae91be62fd9fc3100268e53c" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>copy</name></member>
      <member refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>copyParams</name></member>
      <member refid="class_c_bite_pop_1a57e751582761922bbabff1ddb7af277b" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>copyValues</name></member>
      <member refid="class_c_spher_opt_1a3ff6a1a07d0c5f3ac9c133b021b190ac" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>CSpherOpt</name></member>
      <member refid="class_c_spher_opt_1a0d833587909f28ade47110ec158b0d9b" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>cure</name></member>
      <member refid="class_c_spher_opt_1ae47ab981059bd16abc005b6c35c90259" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>curem</name></member>
      <member refid="class_c_bite_pop_1aa7c87b9148768d6104f8d3dfb5abebce" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>CurPopPos</name></member>
      <member refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>CurPopSize</name></member>
      <member refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>CurPopSize1</name></member>
      <member refid="class_c_bite_pop_1aa5105ca75379f9a760dc9f0b9ea30ea7" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>CurPopSizeI</name></member>
      <member refid="class_c_bite_pop_1a4656171c63f1944ae045d6f222d9d33a" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>decrCurPopSize</name></member>
      <member refid="class_c_spher_opt_1a6491915dd708c2791682a529005c035e" prot="protected" virt="virtual"><scope>CSpherOpt</scope><name>deleteBuffers</name></member>
      <member refid="class_c_bite_opt_base_1a70f5211fb9521491b0e6a336e21dd7bc" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>DiffValues</name></member>
      <member refid="class_c_bite_opt_base_1ad5c0fe9c5312847158a6df8f4639de23" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>DiffValuesI</name></member>
      <member refid="class_c_spher_opt_1a3d0802a35e4655fc88d6082df144c20b" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>DoCentEval</name></member>
      <member refid="class_c_spher_opt_1a92e80374efa3c695155056dc9bed3001" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>EvalFac</name></member>
      <member refid="class_c_spher_opt_1adb977f181df718708fe31cce2f7ee20b" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>EvalFacSel</name></member>
      <member refid="class_c_bite_opt_base_1a4b2d3669723dbe251cf391cc10dd4f5c" prot="public" virt="virtual"><scope>CSpherOpt</scope><name>getBestCost</name></member>
      <member refid="class_c_bite_opt_base_1abbed35653d8765915efc675204c19bb2" prot="public" virt="virtual"><scope>CSpherOpt</scope><name>getBestParams</name></member>
      <member refid="class_c_bite_pop_1a5e6ccebb178353b084084f841b09042d" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getCentroid</name></member>
      <member refid="class_c_bite_pop_1ad38d886687357797479e69098759476a" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getCnsPtr</name></member>
      <member refid="class_c_bite_pop_1a0053ae41c70babe967c5931f491ea865" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getCurParams</name></member>
      <member refid="class_c_bite_pop_1a7e1fbb7f7e9aaf8f73eb865fa4610185" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getCurPopPos</name></member>
      <member refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getCurPopSize</name></member>
      <member refid="class_c_bite_pop_1aecaac61269e65bda93cb2dc1a3a26091" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>getGaussianInt</name></member>
      <member refid="class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d" prot="public" virt="pure-virtual"><scope>CSpherOpt</scope><name>getMaxValues</name></member>
      <member refid="class_c_bite_par_pops_1afa8a97732cea882b664c2d0fbedf2289" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>getMinDistParPop</name></member>
      <member refid="class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d" prot="public" virt="pure-virtual"><scope>CSpherOpt</scope><name>getMinValues</name></member>
      <member refid="class_c_bite_pop_1ad6cbe6cfbf9954dcb6f8a223a5e1f36b" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getObjPtr</name></member>
      <member refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getParamsOrdered</name></member>
      <member refid="class_c_bite_pop_1ac2a01e9eb6b884a0b318e4b914273acf" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getPopParams</name></member>
      <member refid="class_c_bite_pop_1aa4f3255c9607f72eff280f8c3c09143f" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getRankPtr</name></member>
      <member refid="class_c_bite_opt_base_1a7b849dbede3dc6be555a4197541fad51" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>getRealValue</name></member>
      <member refid="class_c_bite_opt_base_1a96f3b9e0a82d830bc34c17a5d0f8fa19" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getSelCount</name></member>
      <member refid="class_c_bite_opt_base_1afd1006a5d6154064115a205b54ecaa8c" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getSelNames</name></member>
      <member refid="class_c_bite_opt_base_1a2eaae4dd1761eaef42ead68546994c12" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>getSels</name></member>
      <member refid="class_c_bite_opt_base_1a48296b534db162fa0007ff83757cb84b" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>HiBound</name></member>
      <member refid="class_c_bite_pop_1a48d6ede5c82534c973e0458726e820dd" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>incrCurPopSize</name></member>
      <member refid="class_c_spher_opt_1a84b141fe50be3806222b2ad3d0846aaf" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>init</name></member>
      <member refid="class_c_spher_opt_1a00c0facb71cb0ef24498e77ce68e6c04" prot="protected" virt="virtual"><scope>CSpherOpt</scope><name>initBuffers</name></member>
      <member refid="class_c_bite_opt_base_1a768362da5c773eea5a8649d44676eeed" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>initCommonVars</name></member>
      <member refid="class_c_bite_pop_1ac9adf8849ed7251dadd94815e20bdee8" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>IntMantBits</name></member>
      <member refid="class_c_bite_pop_1a27448c9be1bed517e4a48aa656ca4f76" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>IntMantMask</name></member>
      <member refid="class_c_bite_pop_1a1302e3c2e578dd650aedb57e18645092" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>IntMantMult</name></member>
      <member refid="class_c_bite_pop_1a8c64d2e83f225b034df818b06b09ecd2" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>IntMantMult2</name></member>
      <member refid="class_c_bite_pop_1aeba03d86b17ed01a97dc8225c5598b2d" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>IntMantMultM</name></member>
      <member refid="class_c_bite_pop_1a8009a96dd8a678daaefc9410ba2e0a76" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>IntOverBits</name></member>
      <member refid="class_c_spher_opt_1adb82e9f193684e7b21d60e35bd38237f" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>JitMult</name></member>
      <member refid="class_c_spher_opt_1ae8093a1a0cab7fae9e8762ff306c4827" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>JitOffs</name></member>
      <member refid="class_c_bite_opt_base_1ab1e0b2f8caf76a2a75401e2f6bc913ba" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>MaxApplySels</name></member>
      <member refid="class_c_bite_par_pops_1a451f5fa8bb3503f9c344fe03f46ffcc9" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>MaxParPopCount</name></member>
      <member refid="class_c_bite_opt_base_1ad4c10c5958656e9ad5bb0073415b9c9f" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>MaxSelCount</name></member>
      <member refid="class_c_bite_opt_base_1a9b100a7afa3bdcb3684383ff2df7867a" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>MaxValues</name></member>
      <member refid="class_c_bite_opt_base_1a07d5b7c3007f79c7dc1f6106d9832dc6" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>MinValues</name></member>
      <member refid="class_c_bite_pop_1a41f29468becc588bea6ff3f842db93ea" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>NeedCentUpdate</name></member>
      <member refid="class_c_bite_opt_base_1a0a97be5c42eed6fbaffba04c8720e6ce" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>NewValues</name></member>
      <member refid="class_c_bite_pop_1a2f7c6a4707e23c21197ab32b71d900c7" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>ObjCount</name></member>
      <member refid="class_c_bite_opt_base_1a8b1b8265762299edcd1714553ce2104d" prot="private" virt="non-virtual"><scope>CSpherOpt</scope><name>operator=</name></member>
      <member refid="class_c_bite_pop_1ab18cf322db6ab186db1e19b53e34c232" prot="public" virt="non-virtual" ambiguityscope="CBiteParPops&lt; double &gt;::"><scope>CSpherOpt</scope><name>operator=</name></member>
      <member refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d" prot="public" virt="pure-virtual"><scope>CSpherOpt</scope><name>optcost</name></member>
      <member refid="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>optimize</name></member>
      <member refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>ParamCount</name></member>
      <member refid="class_c_bite_pop_1a884c9ad4c0327aaa0110a23a89f5697a" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>ParamCountI</name></member>
      <member refid="class_c_bite_par_pops_1aea59bf6c1cf9894f944d07cec99882ee" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>ParPopCount</name></member>
      <member refid="class_c_bite_par_pops_1a79983cca58bd18a6ff73120e65a976dd" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>ParPops</name></member>
      <member refid="class_c_bite_pop_1a6d4a3479ca9e60de6cf4667d5b2937a5" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>PopCnsOffs</name></member>
      <member refid="class_c_bite_pop_1a3cdac0ad2cf5c8403f1f7676171f4e76" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>PopItemSize</name></member>
      <member refid="class_c_bite_pop_1a98e2af75120c4184b271c14d22acf9d4" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>PopObjOffs</name></member>
      <member refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>PopParams</name></member>
      <member refid="class_c_bite_pop_1ac69b014720b11a472509b22588eaf6c3" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>PopParamsBuf</name></member>
      <member refid="class_c_bite_pop_1a3ecc4ffcf1c6f3f9b4e4e5a873c481fe" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>PopRankOffs</name></member>
      <member refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>PopSize</name></member>
      <member refid="class_c_bite_pop_1a0b64743a84d5af143d44e7f6e9f02ada" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>PopSize1</name></member>
      <member refid="class_c_spher_opt_1a28e10a5d2dad5244fb97197e7e85095d" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>Radius</name></member>
      <member refid="class_c_spher_opt_1a29f0077440e7edc368830ae2582181ac" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>RadPowSel</name></member>
      <member refid="class_c_bite_pop_1a767519aa2fcc2667dc135a131bc9fd85" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>resetCurPopPos</name></member>
      <member refid="class_c_bite_opt_base_1ae9b284aca73ab2f6784f12174e391f7b" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>SelCount</name></member>
      <member refid="class_c_bite_opt_base_1abf93d2e584756812ad210f86e4f84a69" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>select</name></member>
      <member refid="class_c_bite_opt_base_1a43d69538ae5aa7d78d8b3a3e821902b7" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>SelNames</name></member>
      <member refid="class_c_bite_opt_base_1aebc1904c883f8b4dafefeda608c4536b" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>Sels</name></member>
      <member refid="class_c_bite_par_pops_1a24cc3d1978b4dbe57fad8a6f6d7efd8a" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>setParPopCount</name></member>
      <member refid="class_c_bite_opt_base_1ab756659a8ba09ba42ffa3d207564fdd8" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>StallCount</name></member>
      <member refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>TmpParams</name></member>
      <member refid="class_c_spher_opt_1a9bda67c2fee53ca92fc6f90bd99b459d" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>update</name></member>
      <member refid="class_c_bite_opt_base_1a9e49b98f5f6a2470d060282b2fd26a53" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>updateBestCost</name></member>
      <member refid="class_c_bite_pop_1a7850902dad276dcecea68559eaccc168" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>updateCentroid</name></member>
      <member refid="class_c_bite_opt_base_1ac2ee22488c24887a922a30dd15d898e6" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>updateDiffValues</name></member>
      <member refid="class_c_spher_opt_1a0be21abe1246b154cb848bd338bf1723" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>updateDims</name></member>
      <member refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" prot="public" virt="non-virtual"><scope>CSpherOpt</scope><name>updatePop</name></member>
      <member refid="class_c_spher_opt_1a5f268cc854a7de1995a54e9b73f87e2a" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>WPopCent</name></member>
      <member refid="class_c_spher_opt_1a2598f95d32a6dcb9c25366f89f795912" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>WPopRad</name></member>
      <member refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>wrapParam</name></member>
      <member refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>wrapParamReal</name></member>
      <member refid="class_c_bite_pop_1a0d5ab322641bb1a091df91ff7ee630c4" prot="protected" virt="non-virtual"><scope>CSpherOpt</scope><name>zeroParams</name></member>
      <member refid="class_c_bite_opt_base_1abc6be9a0740c36dfadb4ec3508dc0d65" prot="public" virt="virtual"><scope>CSpherOpt</scope><name>~CBiteOptBase</name></member>
      <member refid="class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce" prot="public" virt="virtual"><scope>CSpherOpt</scope><name>~CBiteOptInterface</name></member>
      <member refid="class_c_bite_par_pops_1a772516362f17b8e5790596740ce355ba" prot="public" virt="virtual"><scope>CSpherOpt</scope><name>~CBiteParPops</name></member>
      <member refid="class_c_bite_pop_1ac386e4638d6fc6bd5370eeae895347c3" prot="public" virt="virtual"><scope>CSpherOpt</scope><name>~CBitePop</name></member>
      <member refid="class_c_spher_opt_1a8b6557f101813e721289a7c8edecf349" prot="public" virt="virtual"><scope>CSpherOpt</scope><name>~CSpherOpt</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="scheduling_8py" kind="file" language="Python">
    <compoundname>scheduling.py</compoundname>
    <innerclass refid="classexamples_1_1scheduling_1_1fitness" prot="public">examples::scheduling::fitness</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1scheduling">examples::scheduling</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1aa4d70ee05aa50eb56fc778db9b2e603c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::scheduling.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.scheduling.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="24" column="1" bodyfile="examples/scheduling.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1a6a224f324c4b0255a7c9ee2e0b3ecb56" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::scheduling.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.scheduling.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="24" column="1" bodyfile="examples/scheduling.py" bodystart="24" bodyend="-1"/>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" compoundref="scheduling_8py" startline="113" endline="137">examples.scheduling.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1ad6bb7f30e415965f2865c6021d84757a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::scheduling.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.scheduling.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="24" column="1" bodyfile="examples/scheduling.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1a0de8c3a22eac606b2f5fe7f33205ee70" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::scheduling.STATION_NUM</definition>
        <argsstring></argsstring>
        <name>STATION_NUM</name>
        <qualifiedname>examples.scheduling.STATION_NUM</qualifiedname>
        <initializer>=  12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="27" column="1" bodyfile="examples/scheduling.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1a7fc878ed92cb500572e6876821c5d97f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::scheduling.TRAJECTORY_NUM</definition>
        <argsstring></argsstring>
        <name>TRAJECTORY_NUM</name>
        <qualifiedname>examples.scheduling.TRAJECTORY_NUM</qualifiedname>
        <initializer>=  50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="28" column="1" bodyfile="examples/scheduling.py" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1a66fa9995c0ca0abe7c130eb32ed75377" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::scheduling.ASTEROID_NUM</definition>
        <argsstring></argsstring>
        <name>ASTEROID_NUM</name>
        <qualifiedname>examples.scheduling.ASTEROID_NUM</qualifiedname>
        <initializer>=  83454</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="29" column="1" bodyfile="examples/scheduling.py" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1acc865effb06c5acf64afac6c28f1b1c4" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float examples::scheduling.MAX_TIME</definition>
        <argsstring></argsstring>
        <name>MAX_TIME</name>
        <qualifiedname>examples.scheduling.MAX_TIME</qualifiedname>
        <initializer>=  20.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="31" column="1" bodyfile="examples/scheduling.py" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1a93fb6ce388e505e50c12697e2ada8c48" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::scheduling.WAIT_TIME</definition>
        <argsstring></argsstring>
        <name>WAIT_TIME</name>
        <qualifiedname>examples.scheduling.WAIT_TIME</qualifiedname>
        <initializer>=  90/365.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="32" column="1" bodyfile="examples/scheduling.py" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1a7cd5df9eeb21860bc32419ff89843345" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float examples::scheduling.ALPHA</definition>
        <argsstring></argsstring>
        <name>ALPHA</name>
        <qualifiedname>examples.scheduling.ALPHA</qualifiedname>
        <initializer>=  6.0e-9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="33" column="1" bodyfile="examples/scheduling.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1a81964c0fe65663ecb8a640ebf2980c59" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float examples::scheduling.A_DYSON</definition>
        <argsstring></argsstring>
        <name>A_DYSON</name>
        <qualifiedname>examples.scheduling.A_DYSON</qualifiedname>
        <initializer>=  1.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="35" column="1" bodyfile="examples/scheduling.py" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1a238c380bbe3791fa8b45aa7e25f561d3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::scheduling.DAY</definition>
        <argsstring></argsstring>
        <name>DAY</name>
        <qualifiedname>examples.scheduling.DAY</qualifiedname>
        <initializer>=  24 * 3600</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="37" column="1" bodyfile="examples/scheduling.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1scheduling_1a643ae9a76a6aace4f82709ea70110912" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::scheduling.YEAR</definition>
        <argsstring></argsstring>
        <name>YEAR</name>
        <qualifiedname>examples.scheduling.YEAR</qualifiedname>
        <initializer>=  DAY*365.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="38" column="1" bodyfile="examples/scheduling.py" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.select</definition>
        <argsstring>(asteroid, station, trajectory, mass, transfer_start, transfer_time, x)</argsstring>
        <name>select</name>
        <qualifiedname>examples.scheduling.select</qualifiedname>
        <param>
          <type>asteroid</type>
          <defname>asteroid</defname>
        </param>
        <param>
          <type>station</type>
          <defname>station</defname>
        </param>
        <param>
          <type>trajectory</type>
          <defname>trajectory</defname>
        </param>
        <param>
          <type>mass</type>
          <defname>mass</defname>
        </param>
        <param>
          <type>transfer_start</type>
          <defname>transfer_start</defname>
        </param>
        <param>
          <type>transfer_time</type>
          <defname>transfer_time</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="41" column="1" bodyfile="examples/scheduling.py" bodystart="41" bodyend="94"/>
        <references refid="namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53" compoundref="scheduling_8py" startline="433" endline="438">examples.scheduling.dyson_stations</references>
        <references refid="namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102" compoundref="scheduling_8py" startline="423" endline="432">examples.scheduling.timings</references>
        <references refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" compoundref="scheduling_8py" startline="439" endline="445">examples.scheduling.trajectory_selection</references>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" compoundref="scheduling_8py" startline="113" endline="137">examples.scheduling.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6" compoundref="scheduling_8py" startline="187" endline="192">examples.scheduling.fitness.score</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a692cea66b0bddb89af116d021965b1f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.check_pymoo</definition>
        <argsstring>(dim, fit, lb, ub, is_MO)</argsstring>
        <name>check_pymoo</name>
        <qualifiedname>examples.scheduling.check_pymoo</qualifiedname>
        <param>
          <type>dim</type>
          <defname>dim</defname>
        </param>
        <param>
          <type>fit</type>
          <defname>fit</defname>
        </param>
        <param>
          <type>lb</type>
          <defname>lb</defname>
        </param>
        <param>
          <type>ub</type>
          <defname>ub</defname>
        </param>
        <param>
          <type>is_MO</type>
          <defname>is_MO</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="193" column="1" bodyfile="examples/scheduling.py" bodystart="193" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a59d0a8a992360512d79106e3e3a51eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.check_de_update</definition>
        <argsstring>(dim, fit)</argsstring>
        <name>check_de_update</name>
        <qualifiedname>examples.scheduling.check_de_update</qualifiedname>
        <param>
          <type>dim</type>
          <defname>dim</defname>
        </param>
        <param>
          <type>fit</type>
          <defname>fit</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="267" column="1" bodyfile="examples/scheduling.py" bodystart="267" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.get_fitness</definition>
        <argsstring>()</argsstring>
        <name>get_fitness</name>
        <qualifiedname>examples.scheduling.get_fitness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="276" column="1" bodyfile="examples/scheduling.py" bodystart="276" bodyend="301"/>
        <referencedby refid="namespaceexamples_1_1scheduling_1a6556fae25bdbd6c39503674979477c1d" compoundref="scheduling_8py" startline="385" endline="407">examples.scheduling.nd_optimize</referencedby>
        <referencedby refid="namespaceexamples_1_1scheduling_1aee3b215ee9f014805933d7f107793261" compoundref="scheduling_8py" startline="302" endline="349">examples.scheduling.optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1aee3b215ee9f014805933d7f107793261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.optimize</definition>
        <argsstring>()</argsstring>
        <name>optimize</name>
        <qualifiedname>examples.scheduling.optimize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="302" column="1" bodyfile="examples/scheduling.py" bodystart="302" bodyend="349"/>
        <references refid="namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486" compoundref="scheduling_8py" startline="276" endline="301">examples.scheduling.get_fitness</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a446a90f88f19e750f2a8c52f98660ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.plot3d</definition>
        <argsstring>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</argsstring>
        <name>plot3d</name>
        <qualifiedname>examples.scheduling.plot3d</qualifiedname>
        <param>
          <type>ys</type>
          <defname>ys</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>xlabel</type>
          <defname>xlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>ylabel</type>
          <defname>ylabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>zlabel</type>
          <defname>zlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="352" column="1" bodyfile="examples/scheduling.py" bodystart="352" bodyend="365"/>
        <referencedby refid="namespaceexamples_1_1scheduling_1a61f08d3370844ad2267d011c37260ad2" compoundref="scheduling_8py" startline="366" endline="384">examples.scheduling.plot_archive</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a61f08d3370844ad2267d011c37260ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.plot_archive</definition>
        <argsstring>(archive, problem)</argsstring>
        <name>plot_archive</name>
        <qualifiedname>examples.scheduling.plot_archive</qualifiedname>
        <param>
          <type>archive</type>
          <defname>archive</defname>
        </param>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="366" column="1" bodyfile="examples/scheduling.py" bodystart="366" bodyend="384"/>
        <references refid="namespaceexamples_1_1scheduling_1a446a90f88f19e750f2a8c52f98660ee4" compoundref="scheduling_8py" startline="352" endline="365">examples.scheduling.plot3d</references>
        <referencedby refid="namespaceexamples_1_1scheduling_1a6556fae25bdbd6c39503674979477c1d" compoundref="scheduling_8py" startline="385" endline="407">examples.scheduling.nd_optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a6556fae25bdbd6c39503674979477c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.nd_optimize</definition>
        <argsstring>()</argsstring>
        <name>nd_optimize</name>
        <qualifiedname>examples.scheduling.nd_optimize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="385" column="1" bodyfile="examples/scheduling.py" bodystart="385" bodyend="407"/>
        <references refid="namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486" compoundref="scheduling_8py" startline="276" endline="301">examples.scheduling.get_fitness</references>
        <references refid="namespaceexamples_1_1scheduling_1a61f08d3370844ad2267d011c37260ad2" compoundref="scheduling_8py" startline="366" endline="384">examples.scheduling.plot_archive</references>
        <referencedby refid="namespaceexamples_1_1scheduling_1a9714bb5daa021b51c31c14cf8584c0d1" compoundref="scheduling_8py" startline="489" endline="492">examples.scheduling.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a171925bee0250e0755f9521ef6756bc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.next_free</definition>
        <argsstring>(used, p)</argsstring>
        <name>next_free</name>
        <qualifiedname>examples.scheduling.next_free</qualifiedname>
        <param>
          <type>used</type>
          <defname>used</defname>
        </param>
        <param>
          <type>p</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="408" column="1" bodyfile="examples/scheduling.py" bodystart="408" bodyend="414"/>
        <referencedby refid="namespaceexamples_1_1scheduling_1a9b78175a9bd193289a2db7a992840231" compoundref="scheduling_8py" startline="415" endline="422">examples.scheduling.disjoined</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a9b78175a9bd193289a2db7a992840231" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.disjoined</definition>
        <argsstring>(s, n)</argsstring>
        <name>disjoined</name>
        <qualifiedname>examples.scheduling.disjoined</qualifiedname>
        <param>
          <type>s</type>
          <defname>s</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="415" column="1" bodyfile="examples/scheduling.py" bodystart="415" bodyend="422"/>
        <references refid="namespaceexamples_1_1scheduling_1a171925bee0250e0755f9521ef6756bc7" compoundref="scheduling_8py" startline="408" endline="414">examples.scheduling.next_free</references>
        <referencedby refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" compoundref="scheduling_8py" startline="439" endline="445">examples.scheduling.trajectory_selection</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.timings</definition>
        <argsstring>(x, n)</argsstring>
        <name>timings</name>
        <qualifiedname>examples.scheduling.timings</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="423" column="1" bodyfile="examples/scheduling.py" bodystart="423" bodyend="432"/>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" compoundref="scheduling_8py" startline="113" endline="137">examples.scheduling.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
        <referencedby refid="namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b" compoundref="scheduling_8py" startline="41" endline="94">examples.scheduling.select</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.dyson_stations</definition>
        <argsstring>(x, n)</argsstring>
        <name>dyson_stations</name>
        <qualifiedname>examples.scheduling.dyson_stations</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="433" column="1" bodyfile="examples/scheduling.py" bodystart="433" bodyend="438"/>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" compoundref="scheduling_8py" startline="113" endline="137">examples.scheduling.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
        <referencedby refid="namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b" compoundref="scheduling_8py" startline="41" endline="94">examples.scheduling.select</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.trajectory_selection</definition>
        <argsstring>(x, n)</argsstring>
        <name>trajectory_selection</name>
        <qualifiedname>examples.scheduling.trajectory_selection</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="439" column="1" bodyfile="examples/scheduling.py" bodystart="439" bodyend="445"/>
        <references refid="namespaceexamples_1_1scheduling_1a9b78175a9bd193289a2db7a992840231" compoundref="scheduling_8py" startline="415" endline="422">examples.scheduling.disjoined</references>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" compoundref="scheduling_8py" startline="113" endline="137">examples.scheduling.fitness.__call__</referencedby>
        <referencedby refid="namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11" compoundref="scheduling_8py" startline="480" endline="488">examples.scheduling.ast_num</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
        <referencedby refid="namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b" compoundref="scheduling_8py" startline="41" endline="94">examples.scheduling.select</referencedby>
        <referencedby refid="namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6" compoundref="scheduling_8py" startline="472" endline="479">examples.scheduling.select_dvs</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1aa1884a671e4ac02c8cc86173c911794c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.score</definition>
        <argsstring>(min_mass, trajectory_dv)</argsstring>
        <name>score</name>
        <qualifiedname>examples.scheduling.score</qualifiedname>
        <param>
          <type>min_mass</type>
          <defname>min_mass</defname>
        </param>
        <param>
          <type>trajectory_dv</type>
          <defname>trajectory_dv</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="446" column="1" bodyfile="examples/scheduling.py" bodystart="446" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1abce02ddc9637c49f7152ef997c3db2eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.score_vals</definition>
        <argsstring>(min_mass, trajectory_dv)</argsstring>
        <name>score_vals</name>
        <qualifiedname>examples.scheduling.score_vals</qualifiedname>
        <param>
          <type>min_mass</type>
          <defname>min_mass</defname>
        </param>
        <param>
          <type>trajectory_dv</type>
          <defname>trajectory_dv</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="454" column="1" bodyfile="examples/scheduling.py" bodystart="454" bodyend="461"/>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1abae88677822865f44d0e0124ca35f438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.trajectory_dv</definition>
        <argsstring>(asteroid, trajectory, delta_v)</argsstring>
        <name>trajectory_dv</name>
        <qualifiedname>examples.scheduling.trajectory_dv</qualifiedname>
        <param>
          <type>asteroid</type>
          <defname>asteroid</defname>
        </param>
        <param>
          <type>trajectory</type>
          <defname>trajectory</defname>
        </param>
        <param>
          <type>delta_v</type>
          <defname>delta_v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="462" column="1" bodyfile="examples/scheduling.py" bodystart="462" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.select_dvs</definition>
        <argsstring>(bdv, x)</argsstring>
        <name>select_dvs</name>
        <qualifiedname>examples.scheduling.select_dvs</qualifiedname>
        <param>
          <type>bdv</type>
          <defname>bdv</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="472" column="1" bodyfile="examples/scheduling.py" bodystart="472" bodyend="479"/>
        <references refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" compoundref="scheduling_8py" startline="439" endline="445">examples.scheduling.trajectory_selection</references>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" compoundref="scheduling_8py" startline="113" endline="137">examples.scheduling.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6" compoundref="scheduling_8py" startline="187" endline="192">examples.scheduling.fitness.score</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.ast_num</definition>
        <argsstring>(x, asteroid, trajectory)</argsstring>
        <name>ast_num</name>
        <qualifiedname>examples.scheduling.ast_num</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>asteroid</type>
          <defname>asteroid</defname>
        </param>
        <param>
          <type>trajectory</type>
          <defname>trajectory</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="480" column="1" bodyfile="examples/scheduling.py" bodystart="480" bodyend="488"/>
        <references refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" compoundref="scheduling_8py" startline="439" endline="445">examples.scheduling.trajectory_selection</references>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" compoundref="scheduling_8py" startline="113" endline="137">examples.scheduling.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1scheduling_1a9714bb5daa021b51c31c14cf8584c0d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.scheduling.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <qualifiedname>examples.scheduling.main</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/scheduling.py" line="489" column="1" bodyfile="examples/scheduling.py" bodystart="489" bodyend="492"/>
        <references refid="namespaceexamples_1_1scheduling_1a9714bb5daa021b51c31c14cf8584c0d1" compoundref="scheduling_8py" startline="489" endline="492">examples.scheduling.main</references>
        <references refid="namespaceexamples_1_1scheduling_1a6556fae25bdbd6c39503674979477c1d" compoundref="scheduling_8py" startline="385" endline="407">examples.scheduling.nd_optimize</references>
        <referencedby refid="namespaceexamples_1_1scheduling_1a9714bb5daa021b51c31c14cf8584c0d1" compoundref="scheduling_8py" startline="489" endline="492">examples.scheduling.main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1scheduling" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Scheduling.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math,<sp/>time</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry,<sp/>advretry,<sp/>mode,<sp/>modecpp</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bite_cpp,<sp/>Cma_cpp,<sp/>De_cpp,<sp/>de_cma,<sp/>dtime,<sp/>Dual_annealing,<sp/>Differential_evolution,<sp/>Minimize</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>njit,<sp/>numba</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="24" refid="namespaceexamples_1_1scheduling_1a6a224f324c4b0255a7c9ee2e0b3ecb56" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespaceexamples_1_1scheduling_1a0de8c3a22eac606b2f5fe7f33205ee70" refkind="member"><highlight class="normal">STATION_NUM<sp/>=<sp/>12<sp/></highlight><highlight class="comment">#<sp/>number<sp/>of<sp/>dyson<sp/>ring<sp/>stations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespaceexamples_1_1scheduling_1a7fc878ed92cb500572e6876821c5d97f" refkind="member"><highlight class="normal">TRAJECTORY_NUM<sp/>=<sp/>50<sp/></highlight><highlight class="comment">#<sp/>we<sp/>select<sp/>10<sp/>mothership<sp/>trajectories<sp/>from<sp/>these<sp/>trajectories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="namespaceexamples_1_1scheduling_1a66fa9995c0ca0abe7c130eb32ed75377" refkind="member"><highlight class="normal">ASTEROID_NUM<sp/>=<sp/>83454<sp/></highlight><highlight class="comment">#<sp/>number<sp/>of<sp/>asteroids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespaceexamples_1_1scheduling_1acc865effb06c5acf64afac6c28f1b1c4" refkind="member"><highlight class="normal">MAX_TIME<sp/>=<sp/>20.0<sp/></highlight><highlight class="comment">#<sp/>mission<sp/>time<sp/>in<sp/>years</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespaceexamples_1_1scheduling_1a93fb6ce388e505e50c12697e2ada8c48" refkind="member"><highlight class="normal">WAIT_TIME<sp/>=<sp/>90/365.25<sp/></highlight><highlight class="comment">#<sp/>years,<sp/>after<sp/>arrival<sp/>wait<sp/>until<sp/>construction<sp/>may<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="namespaceexamples_1_1scheduling_1a7cd5df9eeb21860bc32419ff89843345" refkind="member"><highlight class="normal">ALPHA<sp/>=<sp/>6.0e-9<sp/></highlight><highlight class="comment">#<sp/>conversion<sp/>factor<sp/>time<sp/>of<sp/>flight<sp/>-&gt;<sp/>arrival<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">#A_DYSON<sp/>=<sp/>1.3197946923098154<sp/>#<sp/>ESAs<sp/>dyson<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="namespaceexamples_1_1scheduling_1a81964c0fe65663ecb8a640ebf2980c59" refkind="member"><highlight class="normal">A_DYSON<sp/>=<sp/>1.1<sp/></highlight><highlight class="comment">#<sp/>Tsinhuas<sp/>dyson<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespaceexamples_1_1scheduling_1a238c380bbe3791fa8b45aa7e25f561d3" refkind="member"><highlight class="normal">DAY<sp/>=<sp/>24<sp/>*<sp/>3600</highlight></codeline>
<codeline lineno="38" refid="namespaceexamples_1_1scheduling_1a643ae9a76a6aace4f82709ea70110912" refkind="member"><highlight class="normal">YEAR<sp/>=<sp/>DAY*365.25</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b" kindref="member">select</ref>(asteroid,<sp/>station,<sp/>trajectory,<sp/>mass,<sp/>transfer_start,<sp/>transfer_time,<sp/>x):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectories<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" kindref="member">trajectory_selection</ref>(x,<sp/>TRAJECTORY_NUM)[1]<sp/></highlight><highlight class="comment">#<sp/>select<sp/>10<sp/>trajectories<sp/>representing<sp/>the<sp/>10<sp/>mothership<sp/>trajectories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>stations<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53" kindref="member">dyson_stations</ref>(x,<sp/>STATION_NUM)<sp/></highlight><highlight class="comment">#<sp/>derive<sp/>dyson_stations<sp/>targeted<sp/>at<sp/>time<sp/>slots<sp/>from<sp/>argument<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>times<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102" kindref="member">timings</ref>(x,<sp/>STATION_NUM)<sp/></highlight><highlight class="comment">#<sp/>derive<sp/>station<sp/>build<sp/>time<sp/>slot<sp/>boundaries<sp/>from<sp/>argument<sp/>vector<sp/>(in<sp/>years)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>slot_mass<sp/>=<sp/>np.zeros(STATION_NUM)<sp/></highlight><highlight class="comment">#<sp/>mass<sp/>sum<sp/>per<sp/>time<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>ast_val<sp/>=<sp/>np.zeros(ASTEROID_NUM)<sp/></highlight><highlight class="comment">#<sp/>deployed<sp/>mass<sp/>for<sp/>asteroid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>ast_slot<sp/>=<sp/>np.zeros(ASTEROID_NUM,<sp/>dtype=numba.int32)<sp/></highlight><highlight class="comment">#<sp/>build<sp/>time<sp/>slot<sp/>used<sp/>for<sp/>asteroid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(asteroid.size):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/>int(trajectory[i])<sp/></highlight><highlight class="comment">#<sp/>current<sp/>trajectory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>trajectories[tr]<sp/>==<sp/>0:<sp/></highlight><highlight class="comment">#<sp/>trajectory<sp/>not<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ast_id<sp/>=<sp/>int(asteroid[i])<sp/></highlight><highlight class="comment">#<sp/>asteroid<sp/>transferred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/>int(station[i])<sp/></highlight><highlight class="comment">#<sp/>dyson<sp/>sphere<sp/>station<sp/>targeted<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>mass[i]<sp/></highlight><highlight class="comment">#<sp/>estimated<sp/>asteroid<sp/>mass<sp/>at<sp/>arrival<sp/>time<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_of_flight<sp/>=<sp/>transfer_time[i]<sp/></highlight><highlight class="comment">#<sp/>TOF<sp/>of<sp/>asteroid<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrival_time<sp/>=<sp/>transfer_start[i]<sp/>+<sp/>transfer_time[i]<sp/></highlight><highlight class="comment">#<sp/>arrival<sp/>time<sp/>of<sp/>asteroid<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>which<sp/>station<sp/>time<sp/>slot<sp/>?<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>slot<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(STATION_NUM):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_time<sp/>=<sp/>times[slot+1]<sp/></highlight><highlight class="comment">#<sp/>time<sp/>interval<sp/>of<sp/>time<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot_time<sp/>=<sp/>times[slot]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_time<sp/>=<sp/>slot_time<sp/>+<sp/>WAIT_TIME<sp/></highlight><highlight class="comment">#<sp/>we<sp/>have<sp/>to<sp/>wait<sp/>90<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>min_time<sp/>&gt;=<sp/>MAX_TIME:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>arrival_time<sp/>&gt;=<sp/>slot_time<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>arrival_time<sp/>&lt;=<sp/>max_time:<sp/></highlight><highlight class="comment">#<sp/>inside<sp/>time<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stat<sp/>==<sp/>stations[slot]:<sp/></highlight><highlight class="comment">#<sp/>does<sp/>the<sp/>station<sp/>fit?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tof<sp/>=<sp/>time_of_flight<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>we<sp/>have<sp/>to<sp/>fly<sp/>a<sp/>non<sp/>optimal<sp/>transfer,<sp/>arrival<sp/>mass<sp/>is<sp/>reduced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>arrival_time<sp/>&lt;<sp/>min_time:<sp/></highlight><highlight class="comment">#<sp/>90<sp/>DAYS<sp/>are<sp/>not<sp/>yet<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_add<sp/>=<sp/>min_time<sp/>-<sp/>arrival_time<sp/></highlight><highlight class="comment">#<sp/>add<sp/>time<sp/>difference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_add<sp/>*=<sp/>math.sqrt(1<sp/>+<sp/>to_add/WAIT_TIME)<sp/></highlight><highlight class="comment">#<sp/>add<sp/>some<sp/>more<sp/>time<sp/>to<sp/>enable<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tof<sp/>+=<sp/>to_add</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mval<sp/>=<sp/>(1.0<sp/>-<sp/>YEAR*tof*ALPHA)<sp/>*<sp/>m<sp/></highlight><highlight class="comment">#<sp/>estimated<sp/>asteroid<sp/>mass<sp/>at<sp/>arrival<sp/>time<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ast_val[ast_id]<sp/>&gt;<sp/>0:<sp/></highlight><highlight class="comment">#<sp/>asteroid<sp/>already<sp/>transferred<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_slot<sp/>=<sp/>ast_slot[ast_id]</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_mass<sp/>=<sp/>np.amin(slot_mass)<sp/></highlight><highlight class="comment">#<sp/>greedily<sp/>replace<sp/>if<sp/>current<sp/>mass<sp/>is<sp/>higher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_mass<sp/>=<sp/>slot_mass[old_slot]<sp/></highlight><highlight class="comment">#<sp/>but<sp/>never<sp/>replace<sp/>at<sp/>a<sp/>nearly<sp/>minimal<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_slot<sp/>==<sp/>slot<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>min_mass<sp/>&lt;<sp/>0.99*old_mass)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ast_val[ast_id]<sp/>&lt;<sp/>mval:<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>replace<sp/>with<sp/>actual<sp/>transfer,<sp/>remove<sp/>old<sp/>asteroid<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot_mass[old_slot]<sp/>-=<sp/>ast_val[ast_id]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">#<sp/>keep<sp/>old<sp/>transfer,<sp/>don&apos;t<sp/>use<sp/>the<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mval<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mval<sp/>&gt;<sp/>0:<sp/><sp/></highlight><highlight class="comment">#<sp/>register<sp/>actual<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot_mass[slot]<sp/>+=<sp/>mval</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ast_val[ast_id]<sp/>=<sp/>mval</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ast_slot[ast_id]<sp/>=<sp/>slot<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>slot_mass.sort()</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>min_mass<sp/>=<sp/>slot_mass[0]</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>slot_mass:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>help<sp/>the<sp/>optimizer<sp/>in<sp/>case<sp/>the<sp/>minimum<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_mass<sp/>+=<sp/>f*m</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>*=<sp/>0.5</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_mass,<sp/>slot_mass</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classexamples_1_1scheduling_1_1fitness" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1scheduling_1_1fitness" kindref="compound">fitness</ref>(object):<sp/></highlight><highlight class="comment">#<sp/>the<sp/>objective<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classexamples_1_1scheduling_1_1fitness_1a4ef1711a34383984fe05eb4c41a6161e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1scheduling_1_1fitness_1a4ef1711a34383984fe05eb4c41a6161e" kindref="member">__init__</ref>(self,<sp/>transfers):</highlight></codeline>
<codeline lineno="98" refid="classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce" kindref="member">evals</ref><sp/>=<sp/>mp.RawValue(ct.c_long,<sp/>0)<sp/><sp/></highlight><highlight class="comment">#<sp/>writable<sp/>across<sp/>python<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight><highlight class="comment">#<sp/>writable<sp/>across<sp/>python<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classexamples_1_1scheduling_1_1fitness_1a128eb9a2d9dc7afccae971d4357976eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a128eb9a2d9dc7afccae971d4357976eb" kindref="member">t0</ref><sp/>=<sp/>time.perf_counter()</highlight></codeline>
<codeline lineno="101" refid="classexamples_1_1scheduling_1_1fitness_1a06815cb664a05b50f3ee6594d9b5ff94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a06815cb664a05b50f3ee6594d9b5ff94" kindref="member">transfers</ref><sp/>=<sp/>transfers</highlight></codeline>
<codeline lineno="102" refid="classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7" kindref="member">asteroid</ref><sp/>=<sp/>transfers[</highlight><highlight class="stringliteral">&quot;asteroid&quot;</highlight><highlight class="normal">].to_numpy()</highlight></codeline>
<codeline lineno="103" refid="classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044" kindref="member">station</ref><sp/>=<sp/>transfers[</highlight><highlight class="stringliteral">&quot;station&quot;</highlight><highlight class="normal">].to_numpy()<sp/><sp/></highlight></codeline>
<codeline lineno="104" refid="classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87" kindref="member">trajectory</ref><sp/>=<sp/>transfers[</highlight><highlight class="stringliteral">&quot;trajectory&quot;</highlight><highlight class="normal">].to_numpy()</highlight></codeline>
<codeline lineno="105" refid="classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5" kindref="member">transfer_start</ref><sp/>=<sp/>transfers[</highlight><highlight class="stringliteral">&quot;transfer_start&quot;</highlight><highlight class="normal">].to_numpy()<sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c" kindref="member">transfer_time</ref><sp/>=<sp/>transfers[</highlight><highlight class="stringliteral">&quot;transfer_time&quot;</highlight><highlight class="normal">].to_numpy()</highlight></codeline>
<codeline lineno="107" refid="classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e" kindref="member">mass</ref><sp/>=<sp/>transfers[</highlight><highlight class="stringliteral">&quot;mass&quot;</highlight><highlight class="normal">].to_numpy()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108" refid="classexamples_1_1scheduling_1_1fitness_1af376623fb6066a93517e1be01d8f7cb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af376623fb6066a93517e1be01d8f7cb6" kindref="member">dv</ref><sp/>=<sp/>transfers[</highlight><highlight class="stringliteral">&quot;dv&quot;</highlight><highlight class="normal">].to_numpy()<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6" kindref="member">trajectory_dv</ref><sp/>=<sp/><ref refid="classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6" kindref="member">trajectory_dv</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7" kindref="member">asteroid</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87" kindref="member">trajectory</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af376623fb6066a93517e1be01d8f7cb6" kindref="member">dv</ref>)</highlight></codeline>
<codeline lineno="110" refid="classexamples_1_1scheduling_1_1fitness_1a9fcd9faba20dabb88e8396d21e2bd6ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a9fcd9faba20dabb88e8396d21e2bd6ea" kindref="member">nobj</ref><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="111" refid="classexamples_1_1scheduling_1_1fitness_1a0c832c38c4d5e650792b17323418d2f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a0c832c38c4d5e650792b17323418d2f5" kindref="member">ncon</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113" refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" kindref="member">__call__</ref>(self,<sp/>x):<sp/></highlight><highlight class="comment">#<sp/>single<sp/>objective<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>determine<sp/>the<sp/>minimal<sp/>station<sp/>mass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_mass,<sp/>slot_mass<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b" kindref="member">select</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7" kindref="member">asteroid</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044" kindref="member">station</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87" kindref="member">trajectory</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e" kindref="member">mass</ref>,<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5" kindref="member">transfer_start</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c" kindref="member">transfer_time</ref>,<sp/>x)<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdv<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6" kindref="member">select_dvs</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6" kindref="member">trajectory_dv</ref>,<sp/>x)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-<ref refid="classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6" kindref="member">score</ref>(min_mass,<sp/>sdv)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce" kindref="member">evals</ref>.value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e" kindref="member">best_y</ref>.value<sp/>=<sp/>y<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trajectories<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" kindref="member">trajectory_selection</ref>(x,<sp/>TRAJECTORY_NUM)[0]<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stations<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53" kindref="member">dyson_stations</ref>(x,<sp/>STATION_NUM)<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102" kindref="member">timings</ref>(x,<sp/>STATION_NUM)<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc<sp/>=<sp/><ref refid="classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6" kindref="member">score</ref>(np.amin(slot_mass),<sp/>sdv)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger().info(</highlight><highlight class="stringliteral">&quot;evals<sp/>=<sp/>{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>s<sp/>=<sp/>{2:.0f}<sp/>a<sp/>=<sp/>{3:.0f}<sp/>t<sp/>=<sp/>{4:s}<sp/>s<sp/>=<sp/>{5:s}<sp/>b<sp/>=<sp/>{6:s}<sp/>m<sp/>=<sp/>{7:s}<sp/>dv<sp/>=<sp/>{8:s}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1scheduling_1a6a224f324c4b0255a7c9ee2e0b3ecb56" kindref="member">format</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce" kindref="member">evals</ref>.value,<sp/>dtime(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a128eb9a2d9dc7afccae971d4357976eb" kindref="member">t0</ref>),<sp/>sc,<sp/><ref refid="namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11" kindref="member">ast_num</ref>(x,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7" kindref="member">asteroid</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87" kindref="member">trajectory</ref>),<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([round(ti,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ti<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>times[1:-1]]),<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(si)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>si<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stations]),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(ti)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ti<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>trajectories]),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([round(mi,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>mi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>slot_mass*1E-15]),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([round(di,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>di<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sdv])</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138" refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" kindref="member">fun</ref>(self,<sp/>x):<sp/></highlight><highlight class="comment">#<sp/>multiple<sp/>objectives<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_mass,<sp/>slot_mass<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b" kindref="member">select</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7" kindref="member">asteroid</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044" kindref="member">station</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87" kindref="member">trajectory</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e" kindref="member">mass</ref>,<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5" kindref="member">transfer_start</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c" kindref="member">transfer_time</ref>,<sp/>x)<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdv<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6" kindref="member">select_dvs</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6" kindref="member">trajectory_dv</ref>,<sp/>x)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scr,<sp/>dv_val<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1abce02ddc9637c49f7152ef997c3db2eb" kindref="member">score_vals</ref>(np.amin(slot_mass),<sp/>sdv)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-scr</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>[-min_mass*1E-10,<sp/>dv_val]</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce" kindref="member">evals</ref>.value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e" kindref="member">best_y</ref>.value<sp/>=<sp/>y<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trajectories<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" kindref="member">trajectory_selection</ref>(x,<sp/>TRAJECTORY_NUM)[0]<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stations<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53" kindref="member">dyson_stations</ref>(x,<sp/>STATION_NUM)<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102" kindref="member">timings</ref>(x,<sp/>STATION_NUM)<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc<sp/>=<sp/><ref refid="classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6" kindref="member">score</ref>(np.amin(slot_mass),<sp/>sdv)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger().info(</highlight><highlight class="stringliteral">&quot;evals<sp/>=<sp/>{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>s<sp/>=<sp/>{2:.0f}<sp/>a<sp/>=<sp/>{3:.0f}<sp/>t<sp/>=<sp/>{4:s}<sp/>s<sp/>=<sp/>{5:s}<sp/>b<sp/>=<sp/>{6:s}<sp/>m<sp/>=<sp/>{7:s}<sp/>dv<sp/>=<sp/>{8:s}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1scheduling_1a6a224f324c4b0255a7c9ee2e0b3ecb56" kindref="member">format</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce" kindref="member">evals</ref>.value,<sp/>dtime(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a128eb9a2d9dc7afccae971d4357976eb" kindref="member">t0</ref>),<sp/>-self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e" kindref="member">best_y</ref>.value,<sp/><ref refid="namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11" kindref="member">ast_num</ref>(x,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7" kindref="member">asteroid</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87" kindref="member">trajectory</ref>),<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([round(ti,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ti<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>times[1:-1]]),<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(si)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>si<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stations]),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(ti)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ti<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>trajectories]),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([round(mi,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>mi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>slot_mass*1E-15]),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([round(di,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>di<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sdv])</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ys<sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163" refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" kindref="member">qd_fun</ref>(self,<sp/>x):<sp/></highlight><highlight class="comment">#<sp/>quality<sp/>diversity<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>slot_mass<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b" kindref="member">select</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7" kindref="member">asteroid</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044" kindref="member">station</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87" kindref="member">trajectory</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e" kindref="member">mass</ref>,<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5" kindref="member">transfer_start</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c" kindref="member">transfer_time</ref>,<sp/>x)<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdv<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6" kindref="member">select_dvs</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6" kindref="member">trajectory_dv</ref>,<sp/>x)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>dv_val<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1abce02ddc9637c49f7152ef997c3db2eb" kindref="member">score_vals</ref>(np.amin(slot_mass),<sp/>sdv)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc<sp/>=<sp/><ref refid="classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6" kindref="member">score</ref>(np.amin(slot_mass),<sp/>sdv)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-sc</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce" kindref="member">evals</ref>.value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>np.array([np.amin(slot_mass)*1E-15,<sp/>dv_val])<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e" kindref="member">best_y</ref>.value<sp/>=<sp/>y<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trajectories<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" kindref="member">trajectory_selection</ref>(x,<sp/>TRAJECTORY_NUM)[0]<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stations<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53" kindref="member">dyson_stations</ref>(x,<sp/>STATION_NUM)<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102" kindref="member">timings</ref>(x,<sp/>STATION_NUM)<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger().info(</highlight><highlight class="stringliteral">&quot;evals<sp/>=<sp/>{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>s<sp/>=<sp/>{2:.0f}<sp/>a<sp/>=<sp/>{3:.0f}<sp/>t<sp/>=<sp/>{4:s}<sp/>s<sp/>=<sp/>{5:s}<sp/>b<sp/>=<sp/>{6:s}<sp/>m<sp/>=<sp/>{7:s}<sp/>dv<sp/>=<sp/>{8:s}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1scheduling_1a6a224f324c4b0255a7c9ee2e0b3ecb56" kindref="member">format</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a2db366aa7d2903b1f35990720f5e68ce" kindref="member">evals</ref>.value,<sp/>dtime(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a128eb9a2d9dc7afccae971d4357976eb" kindref="member">t0</ref>),<sp/>-self.<ref refid="classexamples_1_1scheduling_1_1fitness_1af3bdc7333faccce3e1ecb566a025e06e" kindref="member">best_y</ref>.value,<sp/><ref refid="namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11" kindref="member">ast_num</ref>(x,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7" kindref="member">asteroid</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87" kindref="member">trajectory</ref>),<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([round(ti,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ti<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>times[1:-1]]),<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(si)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>si<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stations]),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(ti)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ti<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>trajectories]),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([round(mi,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>mi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>slot_mass*1E-15]),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([round(di,2)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>di<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sdv])</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y,<sp/>d<sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6" kindref="member">score</ref>(self,<sp/>x):<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>slot_mass<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1af71d892a26a7cf4e51f3d0c28dd3d93b" kindref="member">select</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a3c6e38b77d942c1e65224859181be8c7" kindref="member">asteroid</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1acf65c26ee59887b44569adfe6b91c044" kindref="member">station</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ac179b7f4bfdd438553c69ecd3a68ea87" kindref="member">trajectory</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a4d559c6afd6b519e383a389b1b667a6e" kindref="member">mass</ref>,<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1ad1224cbf70121fb902845afc4b2e93d5" kindref="member">transfer_start</ref>,<sp/>self.<ref refid="classexamples_1_1scheduling_1_1fitness_1a24c80a2210c454aab20b8dfea66c812c" kindref="member">transfer_time</ref>,<sp/>x)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdv<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6" kindref="member">select_dvs</ref>(self.<ref refid="classexamples_1_1scheduling_1_1fitness_1acbb8393cc721e22d4964ad94685f15c6" kindref="member">trajectory_dv</ref>,<sp/>x)<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1scheduling_1_1fitness_1a0dcc50199c64159aae9a5a89326d1cc6" kindref="member">score</ref>(np.amin(slot_mass),<sp/>sdv)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193" refid="namespaceexamples_1_1scheduling_1a692cea66b0bddb89af116d021965b1f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a692cea66b0bddb89af116d021965b1f1" kindref="member">check_pymoo</ref>(dim,<sp/>fit,<sp/>lb,<sp/>ub,<sp/>is_MO):</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.core.problem<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ElementwiseProblem<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.algorithms.moo.nsga2<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NSGA2</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.algorithms.soo.nonconvex.de<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DE</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.factory<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_sampling,<sp/>get_crossover,<sp/>get_mutation<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.factory<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_termination</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.operators.mixed_variable_operator<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MixedVariableSampling,<sp/>MixedVariableMutation,<sp/>MixedVariableCrossover</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.core.problem<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>starmap_parallelized_eval</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>multiprocessing.pool<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ThreadPool</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_MO:<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[:10]<sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[:10]<sp/>=<sp/>TRAJECTORY_NUM-1<sp/></highlight><highlight class="comment">#<sp/>integer<sp/>variables<sp/>include<sp/>upper<sp/>bound<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MyProblem(ElementwiseProblem):</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().__init__(n_var=dim,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_obj=2,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_constr=0,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xl=np.array(lb),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xu=np.array(ub),<sp/>**kwargs)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_evaluate(self,<sp/>x,<sp/>out,<sp/>*args,<sp/>**kwargs):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_MO:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fit.fun(x.astype(float))<sp/></highlight><highlight class="comment">#<sp/>numba<sp/>requires<sp/>all<sp/>floats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fit(x.astype(float))<sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>fit<sp/>returns<sp/>the<sp/>score<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>pool<sp/>=<sp/>ThreadPool(16)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/>MyProblem(runner=pool.starmap,<sp/>func_eval=starmap_parallelized_eval)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">]*10+[</highlight><highlight class="stringliteral">&quot;real&quot;</highlight><highlight class="normal">]*(dim-10)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>sampling<sp/>=<sp/>MixedVariableSampling(mask,<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;real&quot;</highlight><highlight class="normal">:<sp/>get_sampling(</highlight><highlight class="stringliteral">&quot;real_random&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">:<sp/>get_sampling(</highlight><highlight class="stringliteral">&quot;int_random&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>crossover<sp/>=<sp/>MixedVariableCrossover(mask,<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;real&quot;</highlight><highlight class="normal">:<sp/>get_crossover(</highlight><highlight class="stringliteral">&quot;real_sbx&quot;</highlight><highlight class="normal">,<sp/>prob=0.9,<sp/>eta=15),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">:<sp/>get_crossover(</highlight><highlight class="stringliteral">&quot;int_sbx&quot;</highlight><highlight class="normal">,<sp/>prob=0.9,<sp/>eta=15)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>mutation<sp/>=<sp/>MixedVariableMutation(mask,<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;real&quot;</highlight><highlight class="normal">:<sp/>get_mutation(</highlight><highlight class="stringliteral">&quot;real_pm&quot;</highlight><highlight class="normal">,<sp/>eta=20),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">:<sp/>get_mutation(</highlight><highlight class="stringliteral">&quot;int_pm&quot;</highlight><highlight class="normal">,<sp/>eta=20)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_MO:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithm<sp/>=<sp/>NSGA2(</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_size=256,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_offsprings=10,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampling=sampling,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crossover=crossover,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutation=mutation,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eliminate_duplicates=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithm<sp/>=<sp/>DE(</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_size=100,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variant=</highlight><highlight class="stringliteral">&quot;DE/rand/1/bin&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CR=0.3,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dither=</highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>minimize</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>minimize(problem,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithm,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_termination(</highlight><highlight class="stringliteral">&quot;n_gen&quot;</highlight><highlight class="normal">,<sp/>500000),</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbose=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="namespaceexamples_1_1scheduling_1a59d0a8a992360512d79106e3e3a51eeb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a59d0a8a992360512d79106e3e3a51eeb" kindref="member">check_de_update</ref>(dim,<sp/>fit):</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.bounds.lb[:10]<sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.bounds.ub[:10]<sp/>=<sp/>TRAJECTORY_NUM-1<sp/></highlight><highlight class="comment">#<sp/>integer<sp/>variables<sp/>include<sp/>upper<sp/>bound<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mixed<sp/>integer<sp/>multi<sp/>objective<sp/>optimization<sp/>&apos;modecpp&apos;<sp/>multi<sp/>threaded,<sp/>DE<sp/>population<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>xs,<sp/>front<sp/>=<sp/>modecpp.retry(fit.fun,<sp/>fit.nobj,<sp/>fit.ncon,<sp/>fit.bounds,<sp/>num_retries=640,<sp/>popsize<sp/>=<sp/>128,<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>3000000,<sp/>nsga_update<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger<sp/>=<sp/>logger(),<sp/>workers=16,<sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ints=[</highlight><highlight class="keyword">True</highlight><highlight class="normal">]*10+[</highlight><highlight class="keyword">False</highlight><highlight class="normal">]*(dim-10))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486" kindref="member">get_fitness</ref>():</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;tsin3000.60&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>60<sp/>trajectories<sp/>to<sp/>choose<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>name<sp/>=<sp/>&apos;tsin3000.10&apos;<sp/>#<sp/>10<sp/>fixed<sp/>trajectories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>transfers<sp/>=<sp/>pd.read_csv(</highlight><highlight class="stringliteral">&apos;data/&apos;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.xz&apos;</highlight><highlight class="normal">,<sp/>sep=</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>usecols=[1,2,3,4,5,6,7],<sp/>compression=</highlight><highlight class="stringliteral">&apos;xz&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names=[</highlight><highlight class="stringliteral">&apos;asteroid&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;station&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;trajectory&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;mass&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;dv&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;transfer_start&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;transfer_time&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>uncomment<sp/>to<sp/>write<sp/>a<sp/>clear<sp/>text<sp/>csv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>transfers.to_csv(&apos;data/&apos;<sp/>+<sp/>name<sp/>+<sp/>&apos;.txt&apos;,<sp/>sep=&apos;<sp/>&apos;,<sp/>header=False)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>TRAJECTORY_NUM,<sp/>ASTEROID_NUM<sp/></highlight><highlight class="comment">#<sp/>adjust<sp/>number<sp/>of<sp/>asteroids<sp/>/<sp/>trajectories<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>TRAJECTORY_NUM<sp/>=<sp/>int(np.amax(transfers[</highlight><highlight class="stringliteral">&quot;trajectory&quot;</highlight><highlight class="normal">])<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>ASTEROID_NUM<sp/>=<sp/>int(np.amax(transfers[</highlight><highlight class="stringliteral">&quot;asteroid&quot;</highlight><highlight class="normal">])<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>bounds<sp/>for<sp/>the<sp/>objective<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>10+2*STATION_NUM-1</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>lower_bound<sp/>=<sp/>np.zeros(dim)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>lower_bound[10+STATION_NUM:dim]<sp/>=<sp/>0.00001<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_bound<sp/>=<sp/>np.zeros(dim)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>lower_bound[:]<sp/>=<sp/>0.0000001<sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_bound[10:]<sp/>=<sp/>0.9999999</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_bound[:10]<sp/>=<sp/>TRAJECTORY_NUM-0.00001<sp/></highlight><highlight class="comment">#<sp/>trajectory<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds(lower_bound,<sp/>upper_bound)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="classexamples_1_1scheduling_1_1fitness" kindref="compound">fitness</ref>(transfers)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.bounds<sp/>=<sp/>bounds</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fit</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="namespaceexamples_1_1scheduling_1aee3b215ee9f014805933d7f107793261" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1aee3b215ee9f014805933d7f107793261" kindref="member">optimize</ref>():<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486" kindref="member">get_fitness</ref>()</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check_pymoo(dim,<sp/>fit,<sp/>lower_bound,<sp/>upper_bound,<sp/>False)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check_de_update(dim,<sp/>fit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>multi<sp/>objective<sp/>optimization<sp/>&apos;modecpp&apos;<sp/>multi<sp/>threaded,<sp/>NSGA-II<sp/>population<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>xs,<sp/>front<sp/>=<sp/>modecpp.retry(fit.fun,<sp/>fit.nobj,<sp/>fit.ncon,<sp/>fit.bounds,<sp/>num_retries=640,<sp/>popsize<sp/>=<sp/>96,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>3000000,<sp/>nsga_update<sp/>=<sp/>True,<sp/>logger<sp/>=<sp/>logger(),<sp/>workers=16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>smart<sp/>boundary<sp/>management<sp/>(SMB)<sp/>with<sp/>DE-&gt;CMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>=<sp/>advretry.Store(fitness(transfers),<sp/>bounds,<sp/>num_retries=10000,<sp/>max_eval_fac=5.0)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>advretry.retry(store,<sp/>de_cma(10000).minimize)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>smart<sp/>boundary<sp/>management<sp/>(SMB)<sp/>with<sp/>CMA-ES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>=<sp/>advretry.Store(fitness(transfers),<sp/>bounds,<sp/>num_retries=10000,<sp/>max_eval_fac=5.0)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>advretry.retry(store,<sp/>Cma_cpp(10000).minimize)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>BiteOpt<sp/>algorithm<sp/>multi<sp/>threaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>store<sp/>=<sp/><ref refid="classfcmaes_1_1retry_1_1_store" kindref="compound">retry.Store</ref>(<ref refid="classexamples_1_1scheduling_1_1fitness" kindref="compound">fitness</ref>(transfers),<sp/>bounds)<sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>retry.retry(store,<sp/><ref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" kindref="compound">Bite_cpp</ref>(1000000,<sp/>M=1).minimize,<sp/>num_retries=3200)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CMA-ES<sp/>multi<sp/>threaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>=<sp/>retry.Store(fitness(transfers),<sp/>bounds)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>retry.retry(store,<sp/>Cma_cpp(1000000).minimize,<sp/>num_retries=3200)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scipy<sp/>minimize<sp/>algorithm<sp/>multi<sp/>threaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>=<sp/>retry.Store(fitness(transfers),<sp/>bounds)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>retry.retry(store,<sp/>Minimize(1000000).minimize,<sp/>num_retries=3200)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fcmaes<sp/>differential<sp/>evolution<sp/>multi<sp/>threaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>=<sp/>retry.Store(fitness(transfers),<sp/>bounds)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>retry.retry(store,<sp/>De_cpp(1000000).minimize,<sp/>num_retries=3200)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scipy<sp/>differential<sp/>evolution<sp/>multi<sp/>threaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>=<sp/>retry.Store(fitness(transfers),<sp/>bounds)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>retry.retry(store,<sp/>Differential_evolution(1000000).minimize,<sp/>num_retries=3200)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scipy<sp/>dual<sp/>annealing<sp/>multi<sp/>threaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>=<sp/>retry.Store(fitness(transfers),<sp/>bounds)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>retry.retry(store,<sp/>Dual_annealing(1000000).minimize,<sp/>num_retries=3200)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scipy<sp/>differential<sp/>evolution<sp/>single<sp/>threaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>=<sp/>retry.Store(fitness(transfers),<sp/>bounds)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>retry.retry(store,<sp/>Differential_evolution(1000000).minimize,<sp/>num_retries=320,<sp/>workers=1)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">#<sp/>quality<sp/>diversity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>diversifier,<sp/>mapelites</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="namespaceexamples_1_1scheduling_1a446a90f88f19e750f2a8c52f98660ee4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a446a90f88f19e750f2a8c52f98660ee4" kindref="member">plot3d</ref>(ys,<sp/>name,<sp/>xlabel=&apos;&apos;,<sp/>ylabel=&apos;&apos;,<sp/>zlabel=&apos;&apos;):</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>ys[:,<sp/>0];<sp/>y<sp/>=<sp/>ys[:,<sp/>1];<sp/>z<sp/>=<sp/>ys[:,<sp/>2]</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>plt.figure()</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>ax<sp/>=<sp/>fig.add_subplot()<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>img<sp/>=<sp/>ax.scatter(x,<sp/>y,<sp/>s=4,<sp/>c=z,<sp/>cmap=</highlight><highlight class="stringliteral">&apos;rainbow&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar<sp/>=<sp/>fig.colorbar(img)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(xlabel)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(ylabel)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar.set_label(zlabel)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figheight(8)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figwidth(8)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.savefig(name,<sp/>dpi=300)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="namespaceexamples_1_1scheduling_1a61f08d3370844ad2267d011c37260ad2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a61f08d3370844ad2267d011c37260ad2" kindref="member">plot_archive</ref>(archive,<sp/>problem):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>si<sp/>=<sp/>archive.argsort()</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>archive.get_ys()[si]</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>archive.get_xs()[si]</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>ds<sp/>=<sp/>archive.get_ds()[si]</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>si<sp/>=<sp/>np.argsort(ys)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(si)):</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ys[i]<sp/>&lt;<sp/>np.inf:<sp/></highlight><highlight class="comment">#<sp/>throw<sp/>out<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_mass<sp/>=<sp/>ds[i][0]</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv_val<sp/>=<sp/>ds[i][1]</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>problem.score(xs[i])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ysp.append([min_mass,<sp/>dv_val,<sp/>score])</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>score<sp/>&gt;<sp/>5000:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(score,<sp/>min_mass,<sp/>dv_val)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>np.array(ysp)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>print(len(ysp))</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1scheduling_1a446a90f88f19e750f2a8c52f98660ee4" kindref="member">plot3d</ref>(ysp,<sp/></highlight><highlight class="stringliteral">&quot;scheduling_nd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;min<sp/>mass&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;dv<sp/>val&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;score&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385" refid="namespaceexamples_1_1scheduling_1a6556fae25bdbd6c39503674979477c1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a6556fae25bdbd6c39503674979477c1d" kindref="member">nd_optimize</ref>():</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a1bf9ac13dfe55503a90073b1ca96d486" kindref="member">get_fitness</ref>()</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.qd_dim<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.qd_bounds<sp/>=<sp/>Bounds([1.0,15],[2.2,24])</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>niche_num<sp/>=<sp/>10000<sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;scheduler_nd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>arch<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mapelites.load_archive(&apos;scheduler_nd&apos;,<sp/>problem.bounds,<sp/>problem.qd_bounds,<sp/>niche_num)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;elites&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:200}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;BITE_CPP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;max_evals&apos;</highlight><highlight class="normal">:1000000,<sp/></highlight><highlight class="stringliteral">&apos;stall_criterion&apos;</highlight><highlight class="normal">:3}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>arch<sp/>=<sp/>diversifier.minimize(</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1mapelites_1_1wrapper" kindref="compound">mapelites.wrapper</ref>(problem.qd_fun,<sp/>2,<sp/>interval=100000,<sp/>save_interval=200000000),<sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.bounds,<sp/>problem.qd_bounds,<sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers<sp/>=<sp/>32,<sp/>opt_params=[opt_params0,<sp/>opt_params1],<sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evals=100000000,<sp/>archive<sp/>=<sp/>arch,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>niche_num<sp/>=<sp/>niche_num,<sp/>samples_per_niche<sp/>=<sp/>20)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;final<sp/>archive:&apos;</highlight><highlight class="normal">,<sp/>arch.info())</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>arch.save(name)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1scheduling_1a61f08d3370844ad2267d011c37260ad2" kindref="member">plot_archive</ref>(arch,<sp/>problem)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">#<sp/>utility<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="408" refid="namespaceexamples_1_1scheduling_1a171925bee0250e0755f9521ef6756bc7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a171925bee0250e0755f9521ef6756bc7" kindref="member">next_free</ref>(used,<sp/>p):</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>used[p]:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(p<sp/>+<sp/>1)<sp/>%<sp/>used.size</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>used[p]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="415" refid="namespaceexamples_1_1scheduling_1a9b78175a9bd193289a2db7a992840231" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a9b78175a9bd193289a2db7a992840231" kindref="member">disjoined</ref>(s,<sp/>n):</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>disjoined_s<sp/>=<sp/>np.zeros(s.size,<sp/>dtype=numba.int32)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>used<sp/>=<sp/>np.zeros(n,<sp/>dtype=numba.boolean)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(s.size):</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disjoined_s[i]<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a171925bee0250e0755f9521ef6756bc7" kindref="member">next_free</ref>(used,<sp/>s[i])</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>disjoined_s,<sp/>used</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="423" refid="namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a5473acc487e865227b4f1d9ac06d8102" kindref="member">timings</ref>(x,<sp/>n):</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>times<sp/>=<sp/>np.zeros(n+1)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n-1):</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times[i]<sp/>=<sp/>MAX_TIME<sp/>*<sp/>x[10+STATION_NUM+i]</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>times[n-1]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>times[n]<sp/>=<sp/>MAX_TIME</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>times.sort()</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>times</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="433" refid="namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1afe388874c2fafb820cc0d1a456332d53" kindref="member">dyson_stations</ref>(x,<sp/>n):</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>stations<sp/>=<sp/>np.argsort(x[10:10+n])</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>station<sp/>numbers<sp/>start<sp/>with<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array([s+1<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>stations])</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="439" refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" kindref="member">trajectory_selection</ref>(x,<sp/>n):</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectories<sp/>=<sp/>np.zeros(10,<sp/>dtype=numba.int32)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(10):</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trajectories[i]<sp/>=<sp/>int(x[i])</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1scheduling_1a9b78175a9bd193289a2db7a992840231" kindref="member">disjoined</ref>(trajectories,<sp/>n)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="446" refid="namespaceexamples_1_1scheduling_1aa1884a671e4ac02c8cc86173c911794c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1aa1884a671e4ac02c8cc86173c911794c" kindref="member">score</ref>(min_mass,<sp/>trajectory_dv):</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>mass_val<sp/>=<sp/>min_mass<sp/>*<sp/>1E-10</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>dv_val<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dv<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>trajectory_dv:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv_val<sp/>+=<sp/>(1.0<sp/>+<sp/>dv/50.0)**2</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mass_val<sp/>/<sp/>(A_DYSON<sp/>*<sp/>A_DYSON<sp/>*<sp/>dv_val)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="454" refid="namespaceexamples_1_1scheduling_1abce02ddc9637c49f7152ef997c3db2eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1abce02ddc9637c49f7152ef997c3db2eb" kindref="member">score_vals</ref>(min_mass,<sp/>trajectory_dv):</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>mass_val<sp/>=<sp/>min_mass<sp/>*<sp/>1E-10</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>dv_val<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dv<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>trajectory_dv:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv_val<sp/>+=<sp/>(1.0<sp/>+<sp/>dv/50.0)**2</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mass_val<sp/>/<sp/>(A_DYSON<sp/>*<sp/>A_DYSON<sp/>*<sp/>dv_val),<sp/>dv_val</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462" refid="namespaceexamples_1_1scheduling_1abae88677822865f44d0e0124ca35f438" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1abae88677822865f44d0e0124ca35f438" kindref="member">trajectory_dv</ref>(asteroid,<sp/>trajectory,<sp/>delta_v):</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>ast_dv<sp/>=<sp/>np.zeros((TRAJECTORY_NUM,ASTEROID_NUM))</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(asteroid.size):<sp/><sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ast_id<sp/>=<sp/>int(asteroid[i])<sp/></highlight><highlight class="comment">#<sp/>asteroid<sp/>transferred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/>trajectory[i]<sp/></highlight><highlight class="comment">#<sp/>current<sp/>trajectory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ast_dv[tr,<sp/>ast_id]<sp/>=<sp/>delta_v[i]<sp/></highlight><highlight class="comment">#<sp/>mothership<sp/>delta<sp/>velocity<sp/>to<sp/>reach<sp/>the<sp/>asteroid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectory_dv<sp/>=<sp/>np.sum(ast_dv,<sp/>axis=1)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trajectory_dv</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472" refid="namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1aef8d4dd874790f032aa9f541c3c199a6" kindref="member">select_dvs</ref>(bdv,<sp/>x):</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectories<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" kindref="member">trajectory_selection</ref>(x,<sp/>TRAJECTORY_NUM)[0]</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>sdv<sp/>=<sp/>np.zeros(10)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(10):</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdv[i]<sp/>=<sp/>bdv[int(trajectories[i])]</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sdv</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480" refid="namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1ad2889b9007308a61135c1b5faeca5d11" kindref="member">ast_num</ref>(x,<sp/>asteroid,<sp/>trajectory):</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>asts<sp/>=<sp/>np.zeros((ASTEROID_NUM))</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>trajectories<sp/>=<sp/><ref refid="namespaceexamples_1_1scheduling_1a65b621b377aebb2c8a0b9af590aa280d" kindref="member">trajectory_selection</ref>(x,<sp/>TRAJECTORY_NUM)[1]</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(asteroid.size):</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>trajectories[trajectory[i]]:<sp/></highlight><highlight class="comment">#<sp/>trajectory<sp/>not<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asts[int(asteroid[i])]<sp/>=<sp/>1<sp/></highlight><highlight class="comment">#<sp/>asteroid<sp/>transferred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.sum(asts)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="namespaceexamples_1_1scheduling_1a9714bb5daa021b51c31c14cf8584c0d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1scheduling_1a9714bb5daa021b51c31c14cf8584c0d1" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#optimize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1scheduling_1a6556fae25bdbd6c39503674979477c1d" kindref="member">nd_optimize</ref>()</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1scheduling_1a9714bb5daa021b51c31c14cf8584c0d1" kindref="member">main</ref>()</highlight></codeline>
    </programlisting>
    <location file="examples/scheduling.py"/>
  </compounddef>
</doxygen>

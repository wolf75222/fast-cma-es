<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="arm_8py" kind="file" language="Python">
    <compoundname>arm.py</compoundname>
    <innerclass refid="classexamples_1_1arm_1_1fitness" prot="public">examples::arm::fitness</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1arm">examples::arm</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1arm_1aa790fea54dc39525fea8af48171d2f2f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::arm.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.arm.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arm.py" line="45" column="1" bodyfile="examples/arm.py" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1arm_1a2eaf9a24499a0fdf7f802a05b4390276" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::arm.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.arm.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arm.py" line="45" column="1" bodyfile="examples/arm.py" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1arm_1a462e31a71600d1808a3b4b2f6ae80542" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::arm.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.arm.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arm.py" line="45" column="1" bodyfile="examples/arm.py" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1arm_1ab0903e0bb39e1e1d1041b6e350f6d207" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::arm.dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>examples.arm.dim</qualifiedname>
        <initializer>=  300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arm.py" line="140" column="1" bodyfile="examples/arm.py" bodystart="140" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1arm_1a80e778de36aaf3dc8e17664107b0e7d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.arm.forward_kinematics</definition>
        <argsstring>(q)</argsstring>
        <name>forward_kinematics</name>
        <qualifiedname>examples.arm.forward_kinematics</qualifiedname>
        <param>
          <type>q</type>
          <defname>q</defname>
        </param>
        <briefdescription>
<para>Calculates links positions given joint angles. </para>
        </briefdescription>
        <detaileddescription>
<sect1 id="namespaceexamples_1_1arm_1autotoc_md25_1s1"><sect2 id="namespaceexamples_1_1arm_1autotoc_md25">
<title>Parameters</title><para>q numpy.ndarray (n_links,) array of angles in radians</para>
<para>adapted from <ulink url="https://github.com/tsitsimis/planar-robot/blob/master/planarobot/planar_arm.py">https://github.com/tsitsimis/planar-robot/blob/master/planarobot/planar_arm.py</ulink> </para>
</sect2></sect1>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arm.py" line="57" column="1" bodyfile="examples/arm.py" bodystart="57" bodyend="68"/>
        <referencedby refid="classexamples_1_1arm_1_1fitness_1ac275bc61471d8757c126d150d47ce202" compoundref="arm_8py" startline="78" endline="88">examples.arm.fitness.__call__</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1arm_1a733ceee264c14eb2f7d1ff13f4829d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.arm.plot3d</definition>
        <argsstring>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</argsstring>
        <name>plot3d</name>
        <qualifiedname>examples.arm.plot3d</qualifiedname>
        <param>
          <type>ys</type>
          <defname>ys</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>xlabel</type>
          <defname>xlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>ylabel</type>
          <defname>ylabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>zlabel</type>
          <defname>zlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arm.py" line="89" column="1" bodyfile="examples/arm.py" bodystart="89" bodyend="103"/>
        <referencedby refid="namespaceexamples_1_1arm_1a934c10606d0d0eb7affe392052060dbd" compoundref="arm_8py" startline="104" endline="123">examples.arm.plot_archive</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1arm_1a934c10606d0d0eb7affe392052060dbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.arm.plot_archive</definition>
        <argsstring>(problem, archive=None)</argsstring>
        <name>plot_archive</name>
        <qualifiedname>examples.arm.plot_archive</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>archive</type>
          <defname>archive</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arm.py" line="104" column="1" bodyfile="examples/arm.py" bodystart="104" bodyend="123"/>
        <references refid="namespaceexamples_1_1arm_1a733ceee264c14eb2f7d1ff13f4829d2c" compoundref="arm_8py" startline="89" endline="103">examples.arm.plot3d</references>
        <referencedby refid="namespaceexamples_1_1arm_1ab7dbff077d5f4d9cced586ea8549c068" compoundref="arm_8py" startline="124" endline="138">examples.arm.optimize_qd</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1arm_1ab7dbff077d5f4d9cced586ea8549c068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.arm.optimize_qd</definition>
        <argsstring>(dim)</argsstring>
        <name>optimize_qd</name>
        <qualifiedname>examples.arm.optimize_qd</qualifiedname>
        <param>
          <type>dim</type>
          <defname>dim</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/arm.py" line="124" column="1" bodyfile="examples/arm.py" bodystart="124" bodyend="138"/>
        <references refid="namespaceexamples_1_1arm_1a934c10606d0d0eb7affe392052060dbd" compoundref="arm_8py" startline="104" endline="123">examples.arm.plot_archive</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1arm" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">Basic<sp/>example<sp/>for<sp/>quality<sp/>diversity<sp/>optimization:</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">A<sp/>planar<sp/>robotic<sp/>arm<sp/>consists<sp/>of<sp/>dim+1<sp/>=<sp/>21<sp/>segments<sp/>with<sp/>dim=20<sp/>joints.<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">For<sp/>each<sp/>reachable<sp/>position<sp/>minimize<sp/>either:</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">-<sp/>the<sp/>standard<sp/>deviation<sp/>of<sp/>the<sp/>joint-angles</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">-<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>joint-angles</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">-<sp/>the<sp/>maximal<sp/>joint-angle</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">Since<sp/>all<sp/>results<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>ND<sp/>archive<sp/>finally<sp/>we<sp/>know<sp/>for<sp/>all<sp/>target<sp/>positions</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">how<sp/>to<sp/>adjust<sp/>all<sp/>the<sp/>joint-angles<sp/>to<sp/>meet<sp/>the<sp/>objective<sp/>without<sp/>any<sp/>further<sp/>optimization.<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">On<sp/>a<sp/>modern<sp/>16<sp/>core<sp/>CPU<sp/>the<sp/>whole<sp/>optimization<sp/>takes<sp/>about<sp/>30<sp/>seconds.<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Play<sp/>around<sp/>with<sp/>the<sp/>parameters<sp/>of<sp/>the<sp/>experiment:</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">-<sp/>select<sp/>different<sp/>opt_params<sp/>(optimization<sp/>algorithms<sp/>+<sp/>their<sp/>configurations)</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">-<sp/>select<sp/>different<sp/>objectives</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">-<sp/>change<sp/>the<sp/>dimension<sp/>dim<sp/>-<sp/>the<sp/>number<sp/>of<sp/>joint-angles</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">-<sp/>in<sp/>mapelites.wrapper<sp/>set<sp/>optional<sp/>parameter<sp/>workers=1<sp/>to<sp/>switch<sp/>to<sp/>single<sp/>thread<sp/>execution</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">and<sp/>check<sp/>the<sp/>resulting<sp/>plot.<sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>diversifier,<sp/>mapelites</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="45" refid="namespaceexamples_1_1arm_1a2eaf9a24499a0fdf7f802a05b4390276" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1arm_1a80e778de36aaf3dc8e17664107b0e7d3" kindref="member">forward_kinematics</ref>(q):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Calculates<sp/>links<sp/>positions<sp/>given<sp/>joint<sp/>angles</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>q<sp/>:<sp/>numpy.ndarray</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(n_links,)<sp/>array<sp/>of<sp/>angles<sp/>in<sp/>radians</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapted<sp/>from<sp/>https://github.com/tsitsimis/planar-robot/blob/master/planarobot/planar_arm.py</highlight></codeline>
<codeline lineno="57" refid="namespaceexamples_1_1arm_1a80e778de36aaf3dc8e17664107b0e7d3" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>n_links<sp/>=<sp/>len(q)<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>base_pos<sp/>=<sp/>(0,0)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>links<sp/>=<sp/>np.full(n_links,<sp/>1)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>np.zeros((n_links,<sp/>2))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>pos[0,<sp/>:]<sp/>=<sp/>base_pos<sp/>+<sp/>np.array([[links[0]<sp/>*<sp/>np.cos(q[0]),<sp/>links[0]<sp/>*<sp/>np.sin(q[0])]])</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>n_links):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_pos<sp/>=<sp/>np.array([links[i]<sp/>*<sp/>np.cos(np.sum(q[0:i+1])),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>links[i]<sp/>*<sp/>np.sin(np.sum(q[0:i+1]))])</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos[i,<sp/>:]<sp/>=<sp/>pos[i<sp/>-<sp/>1,<sp/>:]<sp/>+<sp/>delta_pos</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classexamples_1_1arm_1_1fitness" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1arm_1_1fitness" kindref="compound">fitness</ref>(object):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classexamples_1_1arm_1_1fitness_1a2e9a0e628d84c0a64cfac7f728d471d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1arm_1_1fitness_1a2e9a0e628d84c0a64cfac7f728d471d3" kindref="member">__init__</ref>(self,<sp/>dim):</highlight></codeline>
<codeline lineno="72" refid="classexamples_1_1arm_1_1fitness_1a43de0eb2d82f09570a5ba603554941af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1arm_1_1fitness_1a43de0eb2d82f09570a5ba603554941af" kindref="member">dim</ref><sp/>=<sp/>dim<sp/></highlight></codeline>
<codeline lineno="73" refid="classexamples_1_1arm_1_1fitness_1ace8bbe4933daa16876a6bdb5a8a21e87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1arm_1_1fitness_1ace8bbe4933daa16876a6bdb5a8a21e87" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight></codeline>
<codeline lineno="74" refid="classexamples_1_1arm_1_1fitness_1a27977796e35fd10742d6f7a40a491331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1arm_1_1fitness_1a27977796e35fd10742d6f7a40a491331" kindref="member">bounds</ref><sp/>=<sp/>Bounds([-np.pi]*dim,<sp/>[np.pi]*dim)</highlight></codeline>
<codeline lineno="75" refid="classexamples_1_1arm_1_1fitness_1adfc933dd815ec5c03324c50ed9e09ec2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1arm_1_1fitness_1adfc933dd815ec5c03324c50ed9e09ec2" kindref="member">qd_dim</ref><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="76" refid="classexamples_1_1arm_1_1fitness_1a66f828c9d1374236606561a2abe054df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1arm_1_1fitness_1a66f828c9d1374236606561a2abe054df" kindref="member">qd_bounds</ref><sp/>=<sp/>Bounds([-dim-1,<sp/>-dim-1],<sp/>[dim+1,<sp/>dim+1])</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classexamples_1_1arm_1_1fitness_1ac275bc61471d8757c126d150d47ce202" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1arm_1_1fitness_1ac275bc61471d8757c126d150d47ce202" kindref="member">__call__</ref>(self,<sp/>X):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/><ref refid="namespaceexamples_1_1arm_1a80e778de36aaf3dc8e17664107b0e7d3" kindref="member">forward_kinematics</ref>(X)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#y<sp/>=<sp/>np.amax(np.abs(X))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#y<sp/>=<sp/>np.sum(np.abs(X))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.std(X)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>pos[-1]</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1arm_1_1fitness_1ace8bbe4933daa16876a6bdb5a8a21e87" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1arm_1_1fitness_1ace8bbe4933daa16876a6bdb5a8a21e87" kindref="member">best_y</ref>.value<sp/>=<sp/>y</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;{y:.3f}<sp/>{<sp/>list(b)<sp/>}&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y,<sp/>b<sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="namespaceexamples_1_1arm_1a733ceee264c14eb2f7d1ff13f4829d2c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1arm_1a733ceee264c14eb2f7d1ff13f4829d2c" kindref="member">plot3d</ref>(ys,<sp/>name,<sp/>xlabel=&apos;&apos;,<sp/>ylabel=&apos;&apos;,<sp/>zlabel=&apos;&apos;):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>ys[:,<sp/>0];<sp/>y<sp/>=<sp/>ys[:,<sp/>1];<sp/>z<sp/>=<sp/>ys[:,<sp/>2]</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>plt.figure()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ax<sp/>=<sp/>fig.add_subplot()<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>img<sp/>=<sp/>ax.scatter(x,<sp/>y,<sp/>s=4,<sp/>c=z,<sp/>cmap=</highlight><highlight class="stringliteral">&apos;rainbow&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar<sp/>=<sp/>fig.colorbar(img)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(xlabel)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(ylabel)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.grid(</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>linestyle=</highlight><highlight class="stringliteral">&apos;dashed&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar.set_label(zlabel)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figheight(8)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figwidth(8)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.savefig(name,<sp/>dpi=300)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="namespaceexamples_1_1arm_1a934c10606d0d0eb7affe392052060dbd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1arm_1a934c10606d0d0eb7affe392052060dbd" kindref="member">plot_archive</ref>(problem,<sp/>archive<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;arm_nd&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>archive<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>mapelites.load_archive(name,<sp/>problem.bounds,<sp/>problem.qd_bounds)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>si<sp/>=<sp/>archive.argsort()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>beh<sp/>=<sp/>archive.get_ds()[si]</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>archive.get_ys()[si]</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>lb<sp/>=<sp/>problem.qd_bounds.lb</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ub<sp/>=<sp/>problem.qd_bounds.ub</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(si)):</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>ys[i]<sp/>&lt;<sp/>5.0:<sp/>#<sp/>use<sp/>for<sp/>y<sp/>=<sp/>np.sum(np.abs(X))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ys[i]<sp/>&lt;<sp/>0.2:<sp/></highlight><highlight class="comment">#<sp/>use<sp/>for<sp/>y<sp/>=<sp/>np.std(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>beh[i]</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.any(np.greater(b,<sp/>ub))<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>np.any(np.greater(lb,<sp/>b)):</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ysp.append([b[0],<sp/>b[1],<sp/>ys[i]])</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>np.array(ysp)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1arm_1a733ceee264c14eb2f7d1ff13f4829d2c" kindref="member">plot3d</ref>(ysp,<sp/>name,<sp/></highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;objective&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="namespaceexamples_1_1arm_1ab7dbff077d5f4d9cced586ea8549c068" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1arm_1ab7dbff077d5f4d9cced586ea8549c068" kindref="member">optimize_qd</ref>(dim):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="classexamples_1_1arm_1_1fitness" kindref="compound">fitness</ref>(dim)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;arm_nd&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;elites&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:512}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;CRMFNES_CPP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;max_evals&apos;</highlight><highlight class="normal">:4000,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:32,<sp/></highlight><highlight class="stringliteral">&apos;stall_criterion&apos;</highlight><highlight class="normal">:3}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#opt_params1<sp/>=<sp/>{&apos;solver&apos;:&apos;CRMFNES_CPP&apos;,<sp/>&apos;max_evals&apos;:4000,<sp/>&apos;popsize&apos;:32,<sp/>&apos;sigma&apos;:0.2,<sp/>&apos;stall_criterion&apos;:3}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params2<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;DE_CPP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;max_evals&apos;</highlight><highlight class="normal">:4000,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:32,<sp/></highlight><highlight class="stringliteral">&apos;stall_criterion&apos;</highlight><highlight class="normal">:3}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params3<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;CMA_CPP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;max_evals&apos;</highlight><highlight class="normal">:4000,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:32,<sp/></highlight><highlight class="stringliteral">&apos;stall_criterion&apos;</highlight><highlight class="normal">:3}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>diversifier.minimize(</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1mapelites_1_1wrapper" kindref="compound">mapelites.wrapper</ref>(problem,<sp/>problem.qd_dim,<sp/>interval=200000,<sp/>save_interval=12000000),<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.bounds,<sp/>problem.qd_bounds,<sp/>opt_params=[opt_params0,<sp/>opt_params3],<sp/>max_evals=3000000)<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;final<sp/>archive:&apos;</highlight><highlight class="normal">,<sp/>archive.info())</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>archive.save(name)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1arm_1a934c10606d0d0eb7affe392052060dbd" kindref="member">plot_archive</ref>(problem,<sp/>archive)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140" refid="namespaceexamples_1_1arm_1ab0903e0bb39e1e1d1041b6e350f6d207" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>300</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>apply<sp/>a<sp/>QD<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1arm_1ab7dbff077d5f4d9cced586ea8549c068" kindref="member">optimize_qd</ref>(dim)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plot<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1arm_1a934c10606d0d0eb7affe392052060dbd" kindref="member">plot_archive</ref>(<ref refid="classexamples_1_1arm_1_1fitness" kindref="compound">fitness</ref>(dim))</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/arm.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="maxcut_8py" kind="file" language="Python">
    <compoundname>maxcut.py</compoundname>
    <innerclass refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a" prot="public">examples::maxcut::fcmaes_SPSA</innerclass>
    <innerclass refid="classexamples_1_1maxcut_1_1fcmaes___optimizer" prot="public">examples::maxcut::fcmaes_Optimizer</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1maxcut">examples::maxcut</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1maxcut_1a6c87169a72c531f0678f435c7b0b770e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::maxcut.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.maxcut.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/maxcut.py" line="57" column="1" bodyfile="examples/maxcut.py" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1maxcut_1aa3cc5f1ee347c061fa4829906787318b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::maxcut.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.maxcut.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/maxcut.py" line="57" column="1" bodyfile="examples/maxcut.py" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1maxcut_1ab5255a81e0455d4e83265e3ec8a517b7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::maxcut.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.maxcut.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/maxcut.py" line="57" column="1" bodyfile="examples/maxcut.py" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1maxcut_1a9bc9ad3cda5a76da69f8968aa644b3eb" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::maxcut.n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <qualifiedname>examples.maxcut.n</qualifiedname>
        <initializer>=  16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/maxcut.py" line="196" column="1" bodyfile="examples/maxcut.py" bodystart="196" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1maxcut_1a401b3e4e3b71951161d316bc933160e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.maxcut.maxcut</definition>
        <argsstring>(optimizer, n=13, backend_name=&quot;aer_simulator&quot;, add_noise=False)</argsstring>
        <name>maxcut</name>
        <qualifiedname>examples.maxcut.maxcut</qualifiedname>
        <param>
          <type>optimizer</type>
          <defname>optimizer</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
          <defval>13</defval>
        </param>
        <param>
          <type>backend_name</type>
          <defname>backend_name</defname>
          <defval>&quot;aer_simulator&quot;</defval>
        </param>
        <param>
          <type>add_noise</type>
          <defname>add_noise</defname>
          <defval>False</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/maxcut.py" line="132" column="1" bodyfile="examples/maxcut.py" bodystart="136" bodyend="194"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1maxcut" refkind="compound"><highlight class="stringliteral">&apos;&apos;&apos;<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">Tests<sp/>performance<sp/>of<sp/>CR-FM-NES<sp/>and<sp/>SPSA<sp/>using<sp/>parallel<sp/>optimization<sp/>retry<sp/>for<sp/>the<sp/>quantum</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">implementation<sp/>of<sp/>maxcut<sp/>by<sp/>optimizing<sp/>the<sp/>parameters<sp/>of<sp/>a<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">VQE<sp/>(variational<sp/>quantum<sp/>eigensolver)</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">This<sp/>code<sp/>is<sp/>adapted<sp/>from</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">https://qiskit.org/documentation/optimization/tutorials/06_examples_max_cut_and_tsp.html</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">https://qiskit.org/documentation/tutorials/algorithms/03_vqe_simulation_with_noise.html</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">Changes:</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">qiskit<sp/>was<sp/>largely<sp/>refactored<sp/>lately,<sp/>a<sp/>lot<sp/>of<sp/>imports<sp/>needed<sp/>to<sp/>be<sp/>changed</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">Added<sp/>two<sp/>optimizer<sp/>wrappers:</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">-<sp/>wrapped<sp/>SPSA<sp/>as<sp/>fcmaes<sp/>optimizer<sp/>(fcmaes_SPSA)</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">-<sp/>wrapped<sp/>fcmaes<sp/>optimizers<sp/>+<sp/>parallel<sp/>retry<sp/>as<sp/>qiskit<sp/>optimizer</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">These<sp/>packages<sp/>need<sp/>to<sp/>be<sp/>installed<sp/>before<sp/>executing<sp/>the<sp/>code:</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">pip<sp/>install<sp/>quiskit</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">pip<sp/>install<sp/>quiskit-optimization</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">pip<sp/>install<sp/>-U<sp/>qiskit-aer</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">pip<sp/>install<sp/>fcmaes</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Quant.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>networkx<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>nx</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Aer</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit.circuit.library<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TwoLocal</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit_optimization.applications<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Maxcut,<sp/>Tsp</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit.algorithms<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>VQE,<sp/>NumPyMinimumEigensolver</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit.algorithms.optimizers<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SPSA</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>QuantumInstance</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit.providers.aer<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>QasmSimulator</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit.providers.aer.noise<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NoiseModel</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit.providers.fake_provider<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>FakeVigo</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit.algorithms<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>optimizers</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit.algorithms.optimizers<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OptimizerSupportLevel,<sp/>OptimizerResult</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>qiskit.algorithms.optimizers.optimizer<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>POINT</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Optional,<sp/>Callable,<sp/>List,<sp/>Dict,<sp/>Any,<sp/>Tuple</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threadpoolctl</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Optimizer,<sp/>Crfmnes_cpp,<sp/>Crfmnes,<sp/>Cma_python,<sp/>wrapper,<sp/>logger<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="57" refid="namespaceexamples_1_1maxcut_1aa3cc5f1ee347c061fa4829906787318b" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">#<sp/>wraps<sp/>SPSA<sp/>as<sp/>fcmaes<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a" kindref="compound">fcmaes_SPSA</ref>(<ref refid="classfcmaes_1_1optimizer_1_1_optimizer" kindref="compound">Optimizer</ref>):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a0cb3788055eab2918241a2d216ca629e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a0cb3788055eab2918241a2d216ca629e" kindref="member">__init__</ref>(self,<sp/>maxiter=1000):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Optimizer.__init__(self,<sp/>maxiter,<sp/></highlight><highlight class="stringliteral">&apos;SPSA&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65" refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a6d0c5f60a7a6da494656f103acf9c3d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a6d0c5f60a7a6da494656f103acf9c3d5" kindref="member">opt</ref><sp/>=<sp/>SPSA(maxiter=maxiter)<sp/></highlight><highlight class="comment">#<sp/>guessing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a1b0cb9b532604387d1521da09efccb50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a1b0cb9b532604387d1521da09efccb50" kindref="member">minimize</ref>(self,<sp/>fun,<sp/>bounds,<sp/>guess=None,<sp/>sdevs=None,<sp/>rg=None,<sp/>store=None):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>guess<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">#<sp/>necessary<sp/>for<sp/>parallel<sp/>retry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess<sp/>=<sp/>np.random.uniform(bounds.lb,<sp/>bounds.ub)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rg<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg.uniform(bounds.lb,<sp/>bounds.ub)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a6d0c5f60a7a6da494656f103acf9c3d5" kindref="member">opt</ref>.<ref refid="classexamples_1_1maxcut_1_1fcmaes___s_p_s_a_1a1b0cb9b532604387d1521da09efccb50" kindref="member">minimize</ref>(fun,<sp/>guess,<sp/>bounds=[t<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(bounds.lb,<sp/>bounds.ub)])</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret.x,<sp/>ret.fun,<sp/>ret.nfev</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">#<sp/>wraps<sp/>fcmaes<sp/>optimizers<sp/>+<sp/>parallel<sp/>retry<sp/>as<sp/>qiskit<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer" kindref="compound">fcmaes_Optimizer</ref>(optimizers.Optimizer):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a13d3b711374425e7bedd9936d1be1940" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a13d3b711374425e7bedd9936d1be1940" kindref="member">__init__</ref>(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer,<sp/></highlight><highlight class="comment">#<sp/>used<sp/>qiskit<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional[Bounds]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">#<sp/>variable<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_retries:<sp/>int<sp/>=<sp/>1,<sp/></highlight><highlight class="comment">#<sp/>number<sp/>of<sp/>parallel<sp/>optimization<sp/>retries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers:<sp/>int<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">#<sp/>maximal<sp/>number<sp/>of<sp/>parallel<sp/>workers,<sp/>if<sp/>None<sp/>uses<sp/>all<sp/>physical<sp/>available<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_wrapper<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">#<sp/>monitors<sp/>optimization<sp/>progress</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>monitors<sp/>parallel<sp/>retry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a48e3eb5669742b003aaaae8b7fffdf5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a48e3eb5669742b003aaaae8b7fffdf5f" kindref="member">_optimizer</ref><sp/>=<sp/>optimizer</highlight></codeline>
<codeline lineno="88" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a88871f75c30a3e71cffe3ea0b879a27d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a88871f75c30a3e71cffe3ea0b879a27d" kindref="member">_bounds</ref><sp/>=<sp/>bounds</highlight></codeline>
<codeline lineno="89" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1ac57441ef830353ad6ffe5fd961061306" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1ac57441ef830353ad6ffe5fd961061306" kindref="member">_max_retries</ref><sp/>=<sp/>max_retries</highlight></codeline>
<codeline lineno="90" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a4fe72093883bd0b7d751079443408b42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a4fe72093883bd0b7d751079443408b42" kindref="member">_workers</ref><sp/>=<sp/>mp.cpu_count()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>workers<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>workers<sp/></highlight></codeline>
<codeline lineno="91" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1aedc181d6c63eaafb9ef7c405e9410736" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1aedc181d6c63eaafb9ef7c405e9410736" kindref="member">_use_wrapper</ref><sp/>=<sp/>use_wrapper</highlight></codeline>
<codeline lineno="92" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a05197bc618bc1f6d313a13c508db7a64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a05197bc618bc1f6d313a13c508db7a64" kindref="member">_logger</ref><sp/>=<sp/>logger</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a055f54dac3620d222a29f8790baef305" kindref="member">get_support_level</ref>(self):</highlight></codeline>
<codeline lineno="95" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a055f54dac3620d222a29f8790baef305" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>support<sp/>level<sp/>dictionary.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;gradient&quot;</highlight><highlight class="normal">:<sp/>OptimizerSupportLevel.ignored,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bounds&quot;</highlight><highlight class="normal">:<sp/>OptimizerSupportLevel.required,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;initial_point&quot;</highlight><highlight class="normal">:<sp/>OptimizerSupportLevel.supported,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1af6557da6fed6cbe613e7eb5d3a2a2bfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1af6557da6fed6cbe613e7eb5d3a2a2bfb" kindref="member">settings</ref>(self)<sp/>-&gt;<sp/>Dict[str,<sp/>Any]:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&quot;optimizer&quot;</highlight><highlight class="normal">:<sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a48e3eb5669742b003aaaae8b7fffdf5f" kindref="member">_optimizer</ref>.name,<sp/></highlight><highlight class="stringliteral">&quot;_max_retries&quot;</highlight><highlight class="normal">:<sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1ac57441ef830353ad6ffe5fd961061306" kindref="member">_max_retries</ref>}</highlight></codeline>
<codeline lineno="105" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a1bb4080dbf712f3009acb3fa02544943" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1af1011c9cb8dfae55ebe5c7d63cd74e40" kindref="member">minimize</ref>(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,</highlight></codeline>
<codeline lineno="108" refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1af1011c9cb8dfae55ebe5c7d63cd74e40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun:<sp/>Callable[[POINT],<sp/>float],</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0:<sp/>POINT,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jac:<sp/>Optional[Callable[[POINT],<sp/>POINT]]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional[List[Tuple[float,<sp/>float]]]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>OptimizerResult:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnds<sp/>=<sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a88871f75c30a3e71cffe3ea0b879a27d" kindref="member">_bounds</ref><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bounds<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Bounds([b[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bounds],<sp/>[b[1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bounds])</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1aedc181d6c63eaafb9ef7c405e9410736" kindref="member">_use_wrapper</ref>:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>=<sp/><ref refid="classfcmaes_1_1optimizer_1_1wrapper" kindref="compound">wrapper</ref>(fun)<sp/></highlight><highlight class="comment">#<sp/>monitors<sp/>progress<sp/>for<sp/>all<sp/>parallel<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>OptimizerResult()</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1ac57441ef830353ad6ffe5fd961061306" kindref="member">_max_retries</ref><sp/>&lt;=<sp/>1:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>nfev<sp/>=<sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a48e3eb5669742b003aaaae8b7fffdf5f" kindref="member">_optimizer</ref>.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1af1011c9cb8dfae55ebe5c7d63cd74e40" kindref="member">minimize</ref>(fun,<sp/>bnds,<sp/>guess=x0)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.x<sp/>=<sp/>x</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.fun<sp/>=<sp/>y</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.nfev<sp/>=<sp/>nfev</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>retry.minimize(fun,<sp/>bnds,<sp/>num_retries=self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1ac57441ef830353ad6ffe5fd961061306" kindref="member">_max_retries</ref>,<sp/>workers<sp/>=<sp/>self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a4fe72093883bd0b7d751079443408b42" kindref="member">_workers</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer=self.<ref refid="classexamples_1_1maxcut_1_1fcmaes___optimizer_1a48e3eb5669742b003aaaae8b7fffdf5f" kindref="member">_optimizer</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.x<sp/>=<sp/>ret.x</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.fun<sp/>=<sp/>ret.fun</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.nfev<sp/>=<sp/>ret.nfev</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">maxcut(optimizer,<sp/></highlight><highlight class="comment">#<sp/>used<sp/>quiskit<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>13,<sp/></highlight><highlight class="comment">#<sp/>number<sp/>of<sp/>nodes<sp/>in<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="namespaceexamples_1_1maxcut_1a401b3e4e3b71951161d316bc933160e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backend_name<sp/>=<sp/>&quot;aer_simulator&quot;,<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_noise=False,<sp/></highlight><highlight class="comment">#<sp/>add<sp/>noise<sp/>to<sp/>simulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>G<sp/>=<sp/>nx.dense_gnm_random_graph(n,<sp/>2*n,<sp/>seed=123)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(u,<sp/>v)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>G.edges():</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G.edges[u,v][</highlight><highlight class="stringliteral">&apos;weight&apos;</highlight><highlight class="normal">]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>np.zeros([n,<sp/>n])</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>G.get_edge_data(i,<sp/>j,<sp/>default=0)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>temp<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w[i,<sp/>j]<sp/>=<sp/>temp[</highlight><highlight class="stringliteral">&quot;weight&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>print(w)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>max_cut<sp/>=<sp/>Maxcut(w)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>qp<sp/>=<sp/>max_cut.to_quadratic_program()</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>print(qp.prettyprint())</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>qubitOp,<sp/>offset<sp/>=<sp/>qp.to_ising()</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Offset:&quot;</highlight><highlight class="normal">,<sp/>offset)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Using<sp/>Hamiltonian:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>print(str(qubitOp))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>ee<sp/>=<sp/>NumPyMinimumEigensolver()<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ee.compute_minimum_eigenvalue(qubitOp)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>max_cut.sample_most_likely(result.eigenstate)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;energy:&quot;</highlight><highlight class="normal">,<sp/>result.eigenvalue.real)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;max-cut<sp/>objective:&quot;</highlight><highlight class="normal">,<sp/>result.eigenvalue.real<sp/>+<sp/>offset)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;solution:&quot;</highlight><highlight class="normal">,<sp/>x)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;solution<sp/>objective:&quot;</highlight><highlight class="normal">,<sp/>qp.objective.evaluate(x))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>backend<sp/>=<sp/>Aer.get_backend(backend_name)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>add_noise:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device_backend<sp/>=<sp/>FakeVigo()</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device<sp/>=<sp/>QasmSimulator.from_backend(device_backend)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_model<sp/>=<sp/>NoiseModel.from_backend(device)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(noise_model)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quantum_instance<sp/>=<sp/>QuantumInstance(backend,<sp/>noise_model=noise_model)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quantum_instance<sp/>=<sp/>QuantumInstance(backend)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>backend.set_options(max_parallel_threads=1)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>ry<sp/>=<sp/>TwoLocal(qubitOp.num_qubits,<sp/></highlight><highlight class="stringliteral">&quot;ry&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cz&quot;</highlight><highlight class="normal">,<sp/>reps=5,<sp/>entanglement=</highlight><highlight class="stringliteral">&quot;linear&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>vqe<sp/>=<sp/>VQE(ry,<sp/>optimizer=optimizer,<sp/>quantum_instance=quantum_instance)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>vqe.ansatz.num_parameters</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>vqe.ansatz.parameter_bounds<sp/>=<sp/>[(-2<sp/>*<sp/>np.pi,<sp/>2<sp/>*<sp/>np.pi)]*dim</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>run<sp/>VQE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>threadpoolctl.threadpool_limits(limits=1,<sp/>user_api=</highlight><highlight class="stringliteral">&quot;blas&quot;</highlight><highlight class="normal">):<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>blas<sp/>threading<sp/>restriction,<sp/>speeds<sp/>up<sp/>&quot;aer_simulator_statevector&quot;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>vqe.compute_minimum_eigenvalue(qubitOp)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>max_cut.sample_most_likely(result.eigenstate)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;energy:&quot;</highlight><highlight class="normal">,<sp/>result.eigenvalue.real)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;time:&quot;</highlight><highlight class="normal">,<sp/>result.optimizer_time)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;max-cut<sp/>objective:&quot;</highlight><highlight class="normal">,<sp/>result.eigenvalue.real<sp/>+<sp/>offset)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;solution:&quot;</highlight><highlight class="normal">,<sp/>x)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;solution<sp/>objective:&quot;</highlight><highlight class="normal">,<sp/>qp.objective.evaluate(x))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>16<sp/></highlight><highlight class="comment">#<sp/>number<sp/>of<sp/>nodes<sp/>in<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196" refid="namespaceexamples_1_1maxcut_1a9bc9ad3cda5a76da69f8968aa644b3eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1<sp/>run<sp/>SPSA<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>maxcut(SPSA(maxiter=6000),<sp/>n,<sp/></highlight><highlight class="stringliteral">&quot;aer_simulator&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1<sp/>run<sp/>SPSA<sp/>with<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>maxcut(SPSA(maxiter=6000),<sp/>n,<sp/>&quot;aer_simulator&quot;,<sp/>add_noise=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1<sp/>run<sp/>CR-FM-NES<sp/>parallel<sp/>fitness<sp/>evaluation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,<sp/>popsize=16,<sp/>workers=16),<sp/>use_wrapper=True),<sp/>n,<sp/>&quot;aer_simulator&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1<sp/>run<sp/>CR-FM-NES<sp/>parallel<sp/>fitness<sp/>evaluation<sp/>with<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,<sp/>popsize=16,<sp/>workers=16),<sp/>use_wrapper=True),<sp/>n,<sp/>&quot;aer_simulator&quot;,<sp/>add_noise=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>32<sp/>parallel<sp/>runs<sp/>SPSA<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>maxcut(fcmaes_Optimizer(fcmaes_SPSA(6000),<sp/>max_retries<sp/>=<sp/>32,<sp/>use_wrapper=True),<sp/>n,<sp/>&quot;aer_simulator&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>32<sp/>parallel<sp/>runs<sp/>CR-FM-NES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,<sp/>popsize=16),<sp/>max_retries<sp/>=<sp/>16,<sp/>use_wrapper=True),<sp/>n,<sp/>&quot;aer_simulator&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>32<sp/>parallel<sp/>runs<sp/>CR-FM-NES<sp/>increased<sp/>population<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,<sp/>popsize=24),<sp/>max_retries<sp/>=<sp/>16,<sp/>use_wrapper=True),<sp/>n,<sp/>&quot;aer_simulator&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>32<sp/>parallel<sp/>runs<sp/>SPSA<sp/>with<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>maxcut(fcmaes_Optimizer(fcmaes_SPSA(6000),<sp/>max_retries<sp/>=<sp/>32,<sp/>use_wrapper=True),<sp/>n,<sp/>&quot;aer_simulator&quot;,<sp/>add_noise=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>32<sp/>parallel<sp/>runs<sp/>CR-FM-NES<sp/>with<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,<sp/>popsize=16),<sp/>max_retries<sp/>=<sp/>32,<sp/>use_wrapper=True),<sp/>n,<sp/>&quot;aer_simulator&quot;,<sp/>add_noise=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>32<sp/>parallel<sp/>runs<sp/>CR-FM-NES<sp/>increased<sp/>population<sp/>size<sp/>with<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>maxcut(fcmaes_Optimizer(Crfmnes_cpp(12000,<sp/>popsize=24),<sp/>max_retries<sp/>=<sp/>32,<sp/>use_wrapper=True),<sp/>n,<sp/>&quot;aer_simulator&quot;,<sp/>add_noise=True)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/maxcut.py"/>
  </compounddef>
</doxygen>

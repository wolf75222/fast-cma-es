<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1optimizer_1_1_check_bounds" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::optimizer::CheckBounds</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_check_bounds_1aed2f7dfc674ae70d6e768e4b6415ae7f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.CheckBounds::bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <qualifiedname>fcmaes.optimizer.CheckBounds.bounds</qualifiedname>
        <initializer>=  bounds</initializer>
        <briefdescription>
<para>The boundary constraints, containing the upper (<computeroutput>ub</computeroutput>) </para>
        </briefdescription>
        <detaileddescription>
<para>The bounds object specifying spatial or defined boundaries.</para>
<para>Represents an object with defined bounds. <verbatim>   This class encapsulates an object that requires bounds, likely for geometric
   or spatial calculations. It is initialized with a Bounds instance.
   The Bounds parameter describes the necessary spatial boundary details to
   construct the object.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2894" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2894" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_check_bounds_1a85adee224b45c4a645b251017c1d604b" compoundref="optimizer_8py" startline="2905" endline="2910">fcmaes.optimizer.CheckBounds.__call__</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a41d3b087b32923f75cbe401f3f2419e3" compoundref="benchmark__gtop__pygmo_8py" startline="49" endline="51">examples.benchmark_gtop_pygmo.pygmo_udp.get_bounds</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" compoundref="anpcp_8py" startline="78" endline="98">anpcp.ANPCP.init_tsp</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a96c79aee6dab29a25fd28b0b383f1916" compoundref="employee_8py" startline="241" endline="250">examples.employee.problem.optimize</referencedby>
        <referencedby refid="classexamples_1_1trappist__delivery_1_1fitness_1ad25284f2ed9bbb5897ec7ca711e5fa17" compoundref="trappist__delivery_8py" startline="944" endline="954">examples.trappist_delivery.fitness.optimize</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a451356183bd266ec5feb44a1b9cf92ef" compoundref="employee_8py" startline="251" endline="268">examples.employee.problem.optimize_mo</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_check_bounds_1a21fd59a9771e5e58340921efd952eadd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.CheckBounds.__init__</definition>
        <argsstring>(self, Bounds bounds)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.optimizer.CheckBounds.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Bounds</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2893" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2893" bodyend="2895"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_check_bounds_1a85adee224b45c4a645b251017c1d604b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.CheckBounds.__call__</definition>
        <argsstring>(self, **kwargs)</argsstring>
        <name>__call__</name>
        <qualifiedname>fcmaes.optimizer.CheckBounds.__call__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
<para>Checks if the given &apos;x_new&apos; value falls within the defined bounds. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>       **kwargs: Arbitrary keyword arguments.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>bool True if &apos;x_new&apos; is within bounds, False otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2905" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2905" bodyend="2910"/>
        <references refid="classfcmaes_1_1astro_1_1_astrofun_1a7304b3306a33a7e8b5dc8780a8b18e27" compoundref="astro_8py" startline="106">fcmaes.astro.Astrofun.bounds</references>
        <references refid="classfcmaes_1_1astro_1_1python__fun_1a120709c7a954843ad0f8bb32da5a6658" compoundref="astro_8py" startline="809">fcmaes.astro.python_fun.bounds</references>
        <references refid="classfcmaes_1_1astro_1_1_tandem_1a78eef598c2b6d4c782c8c3f29e4c1752" compoundref="astro_8py" startline="452">fcmaes.astro.Tandem.bounds</references>
        <references refid="classfcmaes_1_1astro_1_1_tandem__minlp_1a95a182a6b93b36922e8d3e120345e0e2" compoundref="astro_8py" startline="526">fcmaes.astro.Tandem_minlp.bounds</references>
        <references refid="classfcmaes_1_1journal_1_1journal__wrapper_1a6153c4a1a7f4a645d276c3ddaf08b069" compoundref="journal_8py" startline="557">fcmaes.journal.journal_wrapper.bounds</references>
        <references refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ab5837c03082fdd02b53bb829e538a094" compoundref="modecpp_8py" startline="408">fcmaes.modecpp.MODE_C.bounds</references>
        <references refid="classfcmaes_1_1optimizer_1_1_check_bounds_1aed2f7dfc674ae70d6e768e4b6415ae7f" compoundref="optimizer_8py" startline="2894">fcmaes.optimizer.CheckBounds.bounds</references>
        <referencedby refid="classhbv_1_1hbv_1a89aea998d9546dc3465bf46fbee95689" compoundref="hbv_8py" startline="81" endline="90">hbv.hbv.qd_fitness</referencedby>
        <referencedby refid="classlrgv_1_1lrgv_1a527b9b7a7927721b5320ab433bf75aea" compoundref="lrgv_8py" startline="73" endline="86">lrgv.lrgv.qd_fitness</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Validates whether a given set of values falls within specified bounds. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is designed to check if a new set of parameters provided fits within the upper and lower bounds defined. It can be called with keyword arguments to perform the validation. Primarily useful in optimization problems or parameter validations where constraints on variable limits are required.</para>
<para><verbatim>       and lower (`lb`) bounds used for validation.
</verbatim> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.optimizer.CheckBounds</label>
        <link refid="classfcmaes_1_1optimizer_1_1_check_bounds"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/optimizer.py" line="2877" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2877" bodyend="2910"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1optimizer_1_1_check_bounds_1a85adee224b45c4a645b251017c1d604b" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::CheckBounds</scope><name>__call__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_check_bounds_1a21fd59a9771e5e58340921efd952eadd" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::CheckBounds</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_check_bounds_1aed2f7dfc674ae70d6e768e4b6415ae7f" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::CheckBounds</scope><name>bounds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

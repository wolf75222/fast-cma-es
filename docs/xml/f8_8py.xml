<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="f8_8py" kind="file" language="Python">
    <compoundname>f8.py</compoundname>
    <innerclass refid="classexamples_1_1f8_1_1f8__problem" prot="public">examples::f8::f8_problem</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1f8">examples::f8</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1aeecd475268eaac3ca5c1d83937692528" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::f8.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.f8.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="36" column="1" bodyfile="examples/f8.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1a917b1d90c79f5928cbc8c3e8f5ef2b8e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::f8.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.f8.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="36" column="1" bodyfile="examples/f8.py" bodystart="36" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1f8_1a545ccc620ffe0e15b26bb49f9d996fd4" compoundref="f8_8py" startline="153" endline="163">examples.f8.test_cma_parallel_eval</referencedby>
        <referencedby refid="namespaceexamples_1_1f8_1aa52e358a5531d1b2f59aba6b73d9f9fc" compoundref="f8_8py" startline="140" endline="152">examples.f8.test_de_cma_parallel_retry</referencedby>
        <referencedby refid="namespaceexamples_1_1f8_1a2761e37ad7f9424dcd775492ddac1aed" compoundref="f8_8py" startline="164" endline="176">examples.f8.test_gclde_parallel_eval</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1a836d0a9be20bf394ffda3586abe75926" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::f8.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.f8.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="36" column="1" bodyfile="examples/f8.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1a37a9fc6c4c6dcc77c32f318d9ecb919c" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float examples::f8.ksi</definition>
        <argsstring></argsstring>
        <name>ksi</name>
        <qualifiedname>examples.f8.ksi</qualifiedname>
        <initializer>=  0.05236</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="39" column="1" bodyfile="examples/f8.py" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1a828783438a580b58c72837e17d5d61a5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::f8.integrateF8_C</definition>
        <argsstring></argsstring>
        <name>integrateF8_C</name>
        <qualifiedname>examples.f8.integrateF8_C</qualifiedname>
        <initializer>=  libcmalib.integrateF8_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="177" column="1" bodyfile="examples/f8.py" bodystart="177" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1f8_1a45311ef62008dabd7031405663afdf13" compoundref="f8_8py" startline="82" endline="103">examples.f8.obj_f_c</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1a178c95a5c2a21ca72d34dbbbbf583f42" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::f8.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>examples.f8.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="178" column="1" bodyfile="examples/f8.py" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1a1429a567c0d4eebe634d377059f5fab4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::f8.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>examples.f8.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="179" column="1" bodyfile="examples/f8.py" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1ae14e6ef9056e9877368a539a519f0f01" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::f8.freemem</definition>
        <argsstring></argsstring>
        <name>freemem</name>
        <qualifiedname>examples.f8.freemem</qualifiedname>
        <initializer>=  libcmalib.free_mem</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="180" column="1" bodyfile="examples/f8.py" bodystart="180" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1f8_1a45311ef62008dabd7031405663afdf13" compoundref="f8_8py" startline="82" endline="103">examples.f8.obj_f_c</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1a62aa26911a48985ff9145ba7afa2ea92" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::f8.dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>examples.f8.dim</qualifiedname>
        <initializer>=  6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="185" column="1" bodyfile="examples/f8.py" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1a681305358ccb77100f5c4fc48f6d0f43" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::f8.problem</definition>
        <argsstring></argsstring>
        <name>problem</name>
        <qualifiedname>examples.f8.problem</qualifiedname>
        <initializer>=  f8_problem(dim, obj_f_c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="186" column="1" bodyfile="examples/f8.py" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1f8_1a5c0f72dba186ef86a69efc09ded23449" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::f8.ret</definition>
        <argsstring></argsstring>
        <name>ret</name>
        <qualifiedname>examples.f8.ret</qualifiedname>
        <initializer>=  test_de_cma_parallel_retry(problem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="192" column="1" bodyfile="examples/f8.py" bodystart="192" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1f8_1abb430cf22cc5d886ed57d2779f95f939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.f8.f8</definition>
        <argsstring>(t, y, w)</argsstring>
        <name>f8</name>
        <qualifiedname>examples.f8.f8</qualifiedname>
        <param>
          <type>t</type>
          <defname>t</defname>
        </param>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <param>
          <type>w</type>
          <defname>w</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="41" column="1" bodyfile="examples/f8.py" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1f8_1a16f2b5368959427f3eeacb0d09f89301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.f8.bounds</definition>
        <argsstring>(n)</argsstring>
        <name>bounds</name>
        <qualifiedname>examples.f8.bounds</qualifiedname>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="52" column="1" bodyfile="examples/f8.py" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1f8_1aa56ebe4417be7da0b50032e27a949ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.f8.obj_f</definition>
        <argsstring>(X)</argsstring>
        <name>obj_f</name>
        <qualifiedname>examples.f8.obj_f</qualifiedname>
        <param>
          <type>X</type>
          <defname>X</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="57" column="1" bodyfile="examples/f8.py" bodystart="57" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1f8_1a45311ef62008dabd7031405663afdf13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.f8.obj_f_c</definition>
        <argsstring>(X)</argsstring>
        <name>obj_f_c</name>
        <qualifiedname>examples.f8.obj_f_c</qualifiedname>
        <param>
          <type>X</type>
          <defname>X</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="82" column="1" bodyfile="examples/f8.py" bodystart="82" bodyend="103"/>
        <references refid="namespaceexamples_1_1f8_1ae14e6ef9056e9877368a539a519f0f01" compoundref="f8_8py" startline="180">examples.f8.freemem</references>
        <references refid="namespaceexamples_1_1f8_1a828783438a580b58c72837e17d5d61a5" compoundref="f8_8py" startline="177">examples.f8.integrateF8_C</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1f8_1ac15e3164294c973c8525b747e5612388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.f8.test_default_cordinated_retry</definition>
        <argsstring>(problem)</argsstring>
        <name>test_default_cordinated_retry</name>
        <qualifiedname>examples.f8.test_default_cordinated_retry</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="126" column="1" bodyfile="examples/f8.py" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1f8_1a90e66176c39820d24606c1803a21a682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.f8.test_gclde_cordinated_retry</definition>
        <argsstring>(problem)</argsstring>
        <name>test_gclde_cordinated_retry</name>
        <qualifiedname>examples.f8.test_gclde_cordinated_retry</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="130" column="1" bodyfile="examples/f8.py" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1f8_1a0c7c9dd2bf41f65d59684df70361018a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.f8.test_cma_cordinated_retry</definition>
        <argsstring>(dim=6)</argsstring>
        <name>test_cma_cordinated_retry</name>
        <qualifiedname>examples.f8.test_cma_cordinated_retry</qualifiedname>
        <param>
          <type>dim</type>
          <defname>dim</defname>
          <defval>6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="135" column="1" bodyfile="examples/f8.py" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1f8_1aa52e358a5531d1b2f59aba6b73d9f9fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.f8.test_de_cma_parallel_retry</definition>
        <argsstring>(problem)</argsstring>
        <name>test_de_cma_parallel_retry</name>
        <qualifiedname>examples.f8.test_de_cma_parallel_retry</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="140" column="1" bodyfile="examples/f8.py" bodystart="140" bodyend="152"/>
        <references refid="namespaceexamples_1_1f8_1a917b1d90c79f5928cbc8c3e8f5ef2b8e" compoundref="f8_8py" startline="36">examples.f8.format</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1f8_1a545ccc620ffe0e15b26bb49f9d996fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.f8.test_cma_parallel_eval</definition>
        <argsstring>(problem)</argsstring>
        <name>test_cma_parallel_eval</name>
        <qualifiedname>examples.f8.test_cma_parallel_eval</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="153" column="1" bodyfile="examples/f8.py" bodystart="153" bodyend="163"/>
        <references refid="namespaceexamples_1_1f8_1a917b1d90c79f5928cbc8c3e8f5ef2b8e" compoundref="f8_8py" startline="36">examples.f8.format</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1f8_1a2761e37ad7f9424dcd775492ddac1aed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.f8.test_gclde_parallel_eval</definition>
        <argsstring>(problem)</argsstring>
        <name>test_gclde_parallel_eval</name>
        <qualifiedname>examples.f8.test_gclde_parallel_eval</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/f8.py" line="164" column="1" bodyfile="examples/f8.py" bodystart="164" bodyend="176"/>
        <references refid="namespaceexamples_1_1f8_1a917b1d90c79f5928cbc8c3e8f5ef2b8e" compoundref="f8_8py" startline="36">examples.f8.format</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1f8" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>example<sp/>is<sp/>taken<sp/>from<sp/>https://mintoc.de/index.php/F-8_aircraft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>F-8<sp/>aircraft<sp/>control<sp/>problem<sp/>is<sp/>based<sp/>on<sp/>a<sp/>very<sp/>simple<sp/>aircraft<sp/>model.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>control<sp/>problem<sp/>was<sp/>introduced<sp/>by<sp/>Kaya<sp/>and<sp/>Noakes<sp/>and<sp/>aims<sp/>at<sp/>controlling<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>an<sp/>aircraft<sp/>in<sp/>a<sp/>time-optimal<sp/>way<sp/>from<sp/>an<sp/>initial<sp/>state<sp/>to<sp/>a<sp/>terminal<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Uses<sp/>compiled<sp/>differential<sp/>equations<sp/>based<sp/>on<sp/>the<sp/>Ascent<sp/>library<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/AnyarInc/Ascent<sp/>see<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/_fcmaescpp/ascent.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Compare<sp/>with<sp/>the<sp/>F8<sp/>results<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>given<sp/>in<sp/>http://www.midaco-solver.com/data/pub/The_Oracle_Penalty_Method.pdf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.integrate<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ode</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>warnings</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Sequence,<sp/>Cma_cpp,<sp/>GCLDE_cpp,<sp/>de_cma,<sp/>dtime</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>advretry,<sp/>retry,<sp/>gcldecpp,<sp/>csmacpp</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1cmaescpp" kindref="compound">fcmaes.cmaescpp</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>libcmalib</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="36" refid="namespaceexamples_1_1f8_1a917b1d90c79f5928cbc8c3e8f5ef2b8e" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespaceexamples_1_1f8_1a37a9fc6c4c6dcc77c32f318d9ecb919c" refkind="member"><highlight class="normal">ksi<sp/>=<sp/>0.05236</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="namespaceexamples_1_1f8_1abb430cf22cc5d886ed57d2779f95f939" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">f8(t,<sp/>y,<sp/>w):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.877*y[0]<sp/>+<sp/>y[2]<sp/>-<sp/>0.088*y[0]*y[2]<sp/>+<sp/>0.47*y[0]**2<sp/>-<sp/>0.019*y[1]**2<sp/>-<sp/>y[0]**2*y[2]<sp/>+<sp/>3.846*y[0]**3<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+0.215*ksi<sp/>-<sp/>0.28*y[0]**2*ksi<sp/>+<sp/>0.47*y[0]*ksi**2<sp/>-<sp/>0.63*ksi**3<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(0.215*ksi<sp/>-<sp/>0.28*y[0]**2*ksi<sp/>-<sp/>0.63*ksi**3)*2*w,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[2],</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-4.208*y[0]<sp/>-<sp/>0.396*y[2]<sp/>-<sp/>0.47*y[0]**2<sp/>-<sp/>3.564*y[0]**3</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+20.967*ksi<sp/>-<sp/>6.265*y[0]**2*ksi<sp/>+<sp/>46*y[0]*ksi**2<sp/>-61.4*ksi**3</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(20.967*ksi<sp/>-<sp/>6.265*y[0]**2*ksi<sp/>-<sp/>61.4*ksi**3)*2*w</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="52" refid="namespaceexamples_1_1f8_1a16f2b5368959427f3eeacb0d09f89301" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1f8_1a16f2b5368959427f3eeacb0d09f89301" kindref="member">bounds</ref>(n):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>lb<sp/>=<sp/>[0]*n</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ub<sp/>=<sp/>[2]*n</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Bounds(lb,ub)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespaceexamples_1_1f8_1aa56ebe4417be7da0b50032e27a949ee2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1f8_1aa56ebe4417be7da0b50032e27a949ee2" kindref="member">obj_f</ref>(X):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>[0.4655,<sp/>0.,<sp/>0.]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>=<sp/>ode(f8)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I.set_integrator(</highlight><highlight class="stringliteral">&quot;dopri5&quot;</highlight><highlight class="normal">,<sp/>nsteps=10**6,<sp/>rtol=1E-8,<sp/>atol=1E-8)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I.set_initial_value(y,<sp/>t)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len(X)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>X[i]<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>bang-bang<sp/>type<sp/>switches<sp/>starting<sp/>with<sp/>w(t)<sp/>=<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>(i<sp/>+<sp/>1)<sp/>%<sp/>2</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>X[i]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I.set_f_params(w)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>warnings.catch_warnings():</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warnings.simplefilter(</highlight><highlight class="stringliteral">&quot;ignore&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>I.integrate(t)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val0<sp/>=<sp/>np.sum(X)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>penalty<sp/>=<sp/>np.sum(np.abs(y))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>estimated<sp/>fixed<sp/>weight<sp/>for<sp/>penalty<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.1*val0<sp/>+<sp/>penalty</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1E10<sp/></highlight><highlight class="comment">#<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="namespaceexamples_1_1f8_1a45311ef62008dabd7031405663afdf13" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1f8_1a45311ef62008dabd7031405663afdf13" kindref="member">obj_f_c</ref>(X):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.asarray([0.4655,<sp/>0.,<sp/>0.])</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>y.size<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len(X)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>X[i]<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>bang-bang<sp/>type<sp/>switches<sp/>starting<sp/>with<sp/>w(t)<sp/>=<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>(i<sp/>+<sp/>1)<sp/>%<sp/>2</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ry<sp/>=<sp/><ref refid="namespaceexamples_1_1f8_1a828783438a580b58c72837e17d5d61a5" kindref="member">integrateF8_C</ref>(array_type(*y),<sp/>w,<sp/>X[i],<sp/>0.1)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.array(np.fromiter(ry,<sp/>dtype=np.float64,<sp/>count=y.size))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1f8_1ae14e6ef9056e9877368a539a519f0f01" kindref="member">freemem</ref>(ry)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val0<sp/>=<sp/>np.sum(X)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>penalty<sp/>=<sp/>np.sum(np.abs(y))</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>estimated<sp/>fixed<sp/>weight<sp/>for<sp/>penalty<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.1*val0<sp/>+<sp/>penalty</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1E10<sp/></highlight><highlight class="comment">#<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classexamples_1_1f8_1_1f8__problem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1f8_1_1f8__problem" kindref="compound">f8_problem</ref>(object):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classexamples_1_1f8_1_1f8__problem_1a24954c3c927370c687c8a0f536b6baec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1f8_1_1f8__problem_1a24954c3c927370c687c8a0f536b6baec" kindref="member">__init__</ref>(self,<sp/>dim,<sp/>f8fun):</highlight></codeline>
<codeline lineno="107" refid="classexamples_1_1f8_1_1f8__problem_1a9f78672934045515f966ee9473cd6e50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1a9f78672934045515f966ee9473cd6e50" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;f8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classexamples_1_1f8_1_1f8__problem_1af883608e630d0b5fa77e6e83969d1c75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1af883608e630d0b5fa77e6e83969d1c75" kindref="member">dim</ref><sp/>=<sp/>dim</highlight></codeline>
<codeline lineno="109" refid="classexamples_1_1f8_1_1f8__problem_1aa91c8816778e52136ee226f78f80871e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1aa91c8816778e52136ee226f78f80871e" kindref="member">f8fun</ref><sp/>=<sp/>f8fun</highlight></codeline>
<codeline lineno="110" refid="classexamples_1_1f8_1_1f8__problem_1ae5169f3001021958f15c094b840839c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1ae5169f3001021958f15c094b840839c1" kindref="member">bounds</ref><sp/>=<sp/><ref refid="classexamples_1_1f8_1_1f8__problem_1ae5169f3001021958f15c094b840839c1" kindref="member">bounds</ref>(dim)</highlight></codeline>
<codeline lineno="111" refid="classexamples_1_1f8_1_1f8__problem_1a5233f87deea69fbf743214613e56b464" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1a5233f87deea69fbf743214613e56b464" kindref="member">evals</ref><sp/>=<sp/>mp.RawValue(ct.c_int,<sp/>0)<sp/></highlight></codeline>
<codeline lineno="112" refid="classexamples_1_1f8_1_1f8__problem_1ae8bd2dc13afc2e441a458f57d758388f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1ae8bd2dc13afc2e441a458f57d758388f" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight></codeline>
<codeline lineno="113" refid="classexamples_1_1f8_1_1f8__problem_1ad485f749b59b2b7c3338426f3a0b25af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1ad485f749b59b2b7c3338426f3a0b25af" kindref="member">t0</ref><sp/>=<sp/>time.perf_counter()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classexamples_1_1f8_1_1f8__problem_1a017bafba8cac9022a8683804494191ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1f8_1_1f8__problem_1a017bafba8cac9022a8683804494191ad" kindref="member">fun</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1a5233f87deea69fbf743214613e56b464" kindref="member">evals</ref>.value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1aa91c8816778e52136ee226f78f80871e" kindref="member">f8fun</ref>(x)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1ae8bd2dc13afc2e441a458f57d758388f" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1f8_1_1f8__problem_1ae8bd2dc13afc2e441a458f57d758388f" kindref="member">best_y</ref>.value<sp/>=<sp/>y</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(str(dtime(self.<ref refid="classexamples_1_1f8_1_1f8__problem_1ad485f749b59b2b7c3338426f3a0b25af" kindref="member">t0</ref>))<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/><sp/>+<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str(self.<ref refid="classexamples_1_1f8_1_1f8__problem_1a5233f87deea69fbf743214613e56b464" kindref="member">evals</ref>.value)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str(self.<ref refid="classexamples_1_1f8_1_1f8__problem_1ae8bd2dc13afc2e441a458f57d758388f" kindref="member">best_y</ref>.value)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str(list(x)))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="namespaceexamples_1_1f8_1ac15e3164294c973c8525b747e5612388" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1f8_1ac15e3164294c973c8525b747e5612388" kindref="member">test_default_cordinated_retry</ref>(problem):</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>coordinated<sp/>retry<sp/>with<sp/>default<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>advretry.minimize(problem.fun,<sp/>problem.bounds)<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="namespaceexamples_1_1f8_1a90e66176c39820d24606c1803a21a682" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1f8_1a90e66176c39820d24606c1803a21a682" kindref="member">test_gclde_cordinated_retry</ref>(problem):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>coordinated<sp/>retry<sp/>with<sp/>GCLDE-&gt;CMA<sp/>sequence<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>advretry.minimize(problem.fun,<sp/>problem.bounds,<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer=<ref refid="classfcmaes_1_1optimizer_1_1_sequence" kindref="compound">Sequence</ref>([GCLDE_cpp(750),<sp/><ref refid="classfcmaes_1_1optimizer_1_1_cma__cpp" kindref="compound">Cma_cpp</ref>(750,<sp/>popsize=13)]))<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="namespaceexamples_1_1f8_1a0c7c9dd2bf41f65d59684df70361018a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1f8_1a0c7c9dd2bf41f65d59684df70361018a" kindref="member">test_cma_cordinated_retry</ref>(dim<sp/>=<sp/>6):</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>coordinated<sp/>retry<sp/>with<sp/>CMA-ES<sp/>optimizer<sp/>with<sp/>reduced<sp/>popsize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>faster<sp/>for<sp/>small<sp/>dimension,<sp/>use<sp/>default<sp/>for<sp/>dim<sp/>&gt;<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>advretry.minimize(problem.fun,<sp/>problem.bounds,<sp/>optimizer=<ref refid="classfcmaes_1_1optimizer_1_1_cma__cpp" kindref="compound">Cma_cpp</ref>(2000,<sp/>popsize=13))</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140" refid="namespaceexamples_1_1f8_1aa52e358a5531d1b2f59aba6b73d9f9fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1f8_1aa52e358a5531d1b2f59aba6b73d9f9fc" kindref="member">test_de_cma_parallel_retry</ref>(problem):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>parallel<sp/>optimization<sp/>retry<sp/>using<sp/>a<sp/>DE<sp/>-&gt;<sp/>CMA-ES<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>time.perf_counter();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1000):</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>retry.minimize(problem.fun,<sp/>problem.bounds,<sp/>optimizer=de_cma(50000),<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_limit<sp/>=<sp/>10)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>+=<sp/>ret.nfev</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>fun<sp/>=<sp/>{2:.3f}<sp/>nfev<sp/>=<sp/>{3}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1f8_1a917b1d90c79f5928cbc8c3e8f5ef2b8e" kindref="member">format</ref>(i+1,<sp/>dtime(t0),<sp/>ret.fun,<sp/>evals))<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="namespaceexamples_1_1f8_1a545ccc620ffe0e15b26bb49f9d996fd4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1f8_1a545ccc620ffe0e15b26bb49f9d996fd4" kindref="member">test_cma_parallel_eval</ref>(problem):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>parallel<sp/>function<sp/>evaluation<sp/>using<sp/>CMA-ES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>time.perf_counter();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1000):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>csmacpp.minimize(problem.fun,<sp/>problem.bounds,<sp/>popsize=32,<sp/>max_evaluations<sp/>=<sp/>50000,<sp/>workers<sp/>=<sp/>mp.cpu_count())</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>+=<sp/>ret.nfev</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>fun<sp/>=<sp/>{2:.3f}<sp/>nfev<sp/>=<sp/>{3}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1f8_1a917b1d90c79f5928cbc8c3e8f5ef2b8e" kindref="member">format</ref>(i+1,<sp/>dtime(t0),<sp/>ret.fun,<sp/>evals))<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="namespaceexamples_1_1f8_1a2761e37ad7f9424dcd775492ddac1aed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1f8_1a2761e37ad7f9424dcd775492ddac1aed" kindref="member">test_gclde_parallel_eval</ref>(problem):</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>parallel<sp/>function<sp/>evaluation<sp/>using<sp/>GCL_DE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>time.perf_counter();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(100000):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gcldecpp.minimize(problem.fun,<sp/>problem.bounds,<sp/>popsize=256,<sp/>max_evaluations<sp/>=<sp/>200000,<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers<sp/>=<sp/>mp.cpu_count())</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>+=<sp/>ret.nfev</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>fun<sp/>=<sp/>{2:.3f}<sp/>nfev<sp/>=<sp/>{3}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1f8_1a917b1d90c79f5928cbc8c3e8f5ef2b8e" kindref="member">format</ref>(i+1,<sp/>dtime(t0),<sp/>ret.fun,<sp/>evals))<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="namespaceexamples_1_1f8_1a828783438a580b58c72837e17d5d61a5" refkind="member"><highlight class="normal">integrateF8_C<sp/>=<sp/>libcmalib.integrateF8_C</highlight></codeline>
<codeline lineno="178" refid="namespaceexamples_1_1f8_1a178c95a5c2a21ca72d34dbbbbf583f42" refkind="member"><highlight class="normal">integrateF8_C.argtypes<sp/>=<sp/>[ct.POINTER(ct.c_double),<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double]</highlight></codeline>
<codeline lineno="179" refid="namespaceexamples_1_1f8_1a1429a567c0d4eebe634d377059f5fab4" refkind="member"><highlight class="normal">integrateF8_C.restype<sp/>=<sp/>ct.POINTER(ct.c_double)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180" refid="namespaceexamples_1_1f8_1ae14e6ef9056e9877368a539a519f0f01" refkind="member"><highlight class="normal">freemem<sp/>=<sp/>libcmalib.free_mem</highlight></codeline>
<codeline lineno="181"><highlight class="normal">freemem.argtypes<sp/>=<sp/>[ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185" refid="namespaceexamples_1_1f8_1a62aa26911a48985ff9145ba7afa2ea92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>6</highlight></codeline>
<codeline lineno="186" refid="namespaceexamples_1_1f8_1a681305358ccb77100f5c4fc48f6d0f43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="classexamples_1_1f8_1_1f8__problem" kindref="compound">f8_problem</ref>(dim,<sp/>obj_f_c)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#problem<sp/>=<sp/>f8_problem(dim,<sp/>obj_f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>test_default_cordinated_retry(problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>test_gclde_cordinated_retry(problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>test_cma_cordinated_retry(problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="namespaceexamples_1_1f8_1a5c0f72dba186ef86a69efc09ded23449" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="namespaceexamples_1_1f8_1aa52e358a5531d1b2f59aba6b73d9f9fc" kindref="member">test_de_cma_parallel_retry</ref>(problem)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>test_cma_parallel_eval(problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>test_gclde_parallel_eval(problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/f8.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classdifferential__evolution_1_1_de_optimizer" kind="class" language="C++" prot="public">
    <compoundname>differential_evolution::DeOptimizer</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a1b66dc0c337d6bab9b3235c7eeeb49af" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long differential_evolution::DeOptimizer::runid</definition>
        <argsstring></argsstring>
        <name>runid</name>
        <qualifiedname>differential_evolution::DeOptimizer::runid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="406" column="10" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="406" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463" prot="private" static="no" mutable="no">
        <type><ref refid="class_fitness" kindref="compound">Fitness</ref> *</type>
        <definition>Fitness* differential_evolution::DeOptimizer::fitfun</definition>
        <argsstring></argsstring>
        <name>fitfun</name>
        <qualifiedname>differential_evolution::DeOptimizer::fitfun</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="407" column="13" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="407" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" compoundref="deoptimizer_8cpp" startline="312" endline="351">do_optimize_delayed_update</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ab5aa75486c266ec520613a4e00c2ad52" compoundref="deoptimizer_8cpp" startline="384" endline="386">getFitfun</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1aff18de19791b75f799d4aa5e9c60b5fa" compoundref="deoptimizer_8cpp" startline="157" endline="161">next_improve</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" compoundref="deoptimizer_8cpp" startline="105" endline="110">sample</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67" compoundref="deoptimizer_8cpp" startline="112" endline="117">sample_i</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::popsize</definition>
        <argsstring></argsstring>
        <name>popsize</name>
        <qualifiedname>differential_evolution::DeOptimizer::popsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="408" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="408" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" compoundref="deoptimizer_8cpp" startline="178" endline="192">ask</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0dcd44cbcddd9e0dde1ccd2ea5fbf96d" compoundref="deoptimizer_8cpp" startline="225" endline="234">askAll</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" compoundref="deoptimizer_8cpp" startline="312" endline="351">do_optimize_delayed_update</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a7c4a14f47ad8a07a84cad2132661b004" compoundref="deoptimizer_8cpp" startline="400" endline="402">getPopsize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" compoundref="benchmark__gtop__pygmo_8py" startline="103" endline="118">examples.benchmark_gtop_pygmo.Cma_pyg.minimize</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" compoundref="benchmark__gtop__pygmo_8py" startline="127" endline="137">examples.benchmark_gtop_pygmo.De_pyg.minimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1aa1d0f0d9ddbb192cb30b470d8c3c1af0" compoundref="deoptimizer_8cpp" startline="236" endline="242">tellAll</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>differential_evolution::DeOptimizer::dim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="409" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="409" bodyend="-1"/>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1a182cdb7a5c25015336faa57a9afebef6" compoundref="damp_8py" startline="67" endline="76">examples.damp.fitness.__call__</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1aa3653941bc72f8c6e32688f1e09ba76b" compoundref="deoptimizer_8cpp" startline="388" endline="390">getDim</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" compoundref="anpcp_8py" startline="78" endline="98">anpcp.ANPCP.init_tsp</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" compoundref="deoptimizer_8cpp" startline="163" endline="176">modify</referencedby>
        <referencedby refid="classexamples_1_1siemens_1_1_plant_1a1e32e624120cf855722e347ed941b77f" compoundref="siemens_8py" startline="108" endline="118">examples.siemens.Plant.next_product</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a96c79aee6dab29a25fd28b0b383f1916" compoundref="employee_8py" startline="241" endline="250">examples.employee.problem.optimize</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a451356183bd266ec5feb44a1b9cf92ef" compoundref="employee_8py" startline="251" endline="268">examples.employee.problem.optimize_mo</referencedby>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1af629821589f78858c6422998bcb02fe5" compoundref="damp_8py" startline="77" endline="90">examples.damp.fitness.qd_fit</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a27cdaec6181e9866758aaf02adcd2943" compoundref="anpcp_8py" startline="99" endline="102">anpcp.ANPCP.random_x</referencedby>
        <referencedby refid="classanpcpc_1_1_a_n_p_c_p_c_1ac4f58722e70806a92094828b839f084e" compoundref="anpcpc_8py" startline="86" endline="89">anpcpc.ANPCPC.random_x</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" compoundref="deoptimizer_8cpp" startline="105" endline="110">sample</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a4c5093a5bde2ba68233dcaf789fe69f2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::maxEvaluations</definition>
        <argsstring></argsstring>
        <name>maxEvaluations</name>
        <qualifiedname>differential_evolution::DeOptimizer::maxEvaluations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="410" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="410" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" compoundref="deoptimizer_8cpp" startline="312" endline="351">do_optimize_delayed_update</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a232a3e2545baae1701e76f0a2c6eeec8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::keep</definition>
        <argsstring></argsstring>
        <name>keep</name>
        <qualifiedname>differential_evolution::DeOptimizer::keep</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="411" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="411" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a657515bc56ba9827a222186364996c13" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::stopfitness</definition>
        <argsstring></argsstring>
        <name>stopfitness</name>
        <qualifiedname>differential_evolution::DeOptimizer::stopfitness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="412" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="412" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" compoundref="deoptimizer_8cpp" startline="312" endline="351">do_optimize_delayed_update</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1aa98729ab4bc1be4fa22a3a7340a1ea3f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::iterations</definition>
        <argsstring></argsstring>
        <name>iterations</name>
        <qualifiedname>differential_evolution::DeOptimizer::iterations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="413" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="413" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" compoundref="deoptimizer_8cpp" startline="312" endline="351">do_optimize_delayed_update</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ab8e8cfb1d04f3cd8dd5c82978f425eb1" compoundref="deoptimizer_8cpp" startline="380" endline="382">getIterations</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a9fa4859d97afa85e9c3f8452cc0d6b65" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::bestY</definition>
        <argsstring></argsstring>
        <name>bestY</name>
        <qualifiedname>differential_evolution::DeOptimizer::bestY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="414" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="414" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" compoundref="deoptimizer_8cpp" startline="312" endline="351">do_optimize_delayed_update</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a9588f30973550e4b1083fd67641dadbb" compoundref="deoptimizer_8cpp" startline="376" endline="378">getBestValue</referencedby>
        <referencedby refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1aa298d4659787619babc9c7c0bbb98b74" compoundref="noisy__tsp_8py" startline="93" endline="99">examples.noisy_tsp.TSP.optimize_mo</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a7576298bacac75697507e4f90fc59c33" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::bestX</definition>
        <argsstring></argsstring>
        <name>bestX</name>
        <qualifiedname>differential_evolution::DeOptimizer::bestX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="415" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="415" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1af3cb231427f53598ae45ba8c320b1231" compoundref="deoptimizer_8cpp" startline="372" endline="374">getBestX</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1aa298d4659787619babc9c7c0bbb98b74" compoundref="noisy__tsp_8py" startline="93" endline="99">examples.noisy_tsp.TSP.optimize_mo</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1ac23f0d4e38b52955528bf2cbe349992f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::bestI</definition>
        <argsstring></argsstring>
        <name>bestI</name>
        <qualifiedname>differential_evolution::DeOptimizer::bestI</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="416" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="416" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" compoundref="deoptimizer_8cpp" startline="178" endline="192">ask</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a3ee567dd0543a9e7cbd7735746ac3f99" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::stop</definition>
        <argsstring></argsstring>
        <name>stop</name>
        <qualifiedname>differential_evolution::DeOptimizer::stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="417" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="417" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" compoundref="deoptimizer_8cpp" startline="312" endline="351">do_optimize_delayed_update</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4cf73cd0c13cf54880eb91edb58db9a9" compoundref="deoptimizer_8cpp" startline="396" endline="398">getStop</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1aa1d0f0d9ddbb192cb30b470d8c3c1af0" compoundref="deoptimizer_8cpp" startline="236" endline="242">tellAll</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1ae0a4dcecee1e26d0e8e87b783e324fcd" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::F0</definition>
        <argsstring></argsstring>
        <name>F0</name>
        <qualifiedname>differential_evolution::DeOptimizer::F0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="418" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="418" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1aff18de19791b75f799d4aa5e9c60b5fa" compoundref="deoptimizer_8cpp" startline="157" endline="161">next_improve</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a8b2f3c51406460c57cfa59bc406d8078" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::CR0</definition>
        <argsstring></argsstring>
        <name>CR0</name>
        <qualifiedname>differential_evolution::DeOptimizer::CR0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="419" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="419" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a9f332b775ee1241daa8d431e21d415e4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::F</definition>
        <argsstring></argsstring>
        <name>F</name>
        <qualifiedname>differential_evolution::DeOptimizer::F</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="420" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="420" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a5422a64ca391813662eeddb2c8cc02ab" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::CR</definition>
        <argsstring></argsstring>
        <name>CR</name>
        <qualifiedname>differential_evolution::DeOptimizer::CR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="421" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="421" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a9f02b77e27171b51fefa32b5141ae248" prot="private" static="no" mutable="no">
        <type>pcg64 *</type>
        <definition>pcg64* differential_evolution::DeOptimizer::rs</definition>
        <argsstring></argsstring>
        <name>rs</name>
        <qualifiedname>differential_evolution::DeOptimizer::rs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="422" column="11" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="422" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a922dfb6a6903d18311a87e2fe553c78b" compoundref="deoptimizer_8cpp" startline="97" endline="99">rnd01</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ad1842fb1469f6b2e9f341afbe3b26d69" compoundref="deoptimizer_8cpp" startline="101" endline="103">rndInt</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" compoundref="deoptimizer_8cpp" startline="105" endline="110">sample</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67" compoundref="deoptimizer_8cpp" startline="112" endline="117">sample_i</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a33d01cb4aa66ec253c8505a466298e4c" compoundref="deoptimizer_8cpp" startline="93" endline="95">~DeOptimizer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a765bf8a43ae4db32b8de45ef4282b2a1" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref></type>
        <definition>mat differential_evolution::DeOptimizer::popX</definition>
        <argsstring></argsstring>
        <name>popX</name>
        <qualifiedname>differential_evolution::DeOptimizer::popX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="423" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="423" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" compoundref="deoptimizer_8cpp" startline="178" endline="192">ask</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1aa20f437a2e42ae30421404788d2d3f09" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref></type>
        <definition>mat differential_evolution::DeOptimizer::popX0</definition>
        <argsstring></argsstring>
        <name>popX0</name>
        <qualifiedname>differential_evolution::DeOptimizer::popX0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="424" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="424" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1abbc98f32e02cab03f4bc226fa732dcfa" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref></type>
        <definition>mat differential_evolution::DeOptimizer::askedX</definition>
        <argsstring></argsstring>
        <name>askedX</name>
        <qualifiedname>differential_evolution::DeOptimizer::askedX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="425" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="425" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0dcd44cbcddd9e0dde1ccd2ea5fbf96d" compoundref="deoptimizer_8cpp" startline="225" endline="234">askAll</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4842f3a4aae6868fbe69fdc154032ca5" compoundref="deoptimizer_8cpp" startline="392" endline="394">getPopulation</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1aa1d0f0d9ddbb192cb30b470d8c3c1af0" compoundref="deoptimizer_8cpp" startline="236" endline="242">tellAll</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a5227e652d09cf3cf711eefba448a06f4" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d" kindref="member">ivec</ref></type>
        <definition>ivec differential_evolution::DeOptimizer::askedP</definition>
        <argsstring></argsstring>
        <name>askedP</name>
        <qualifiedname>differential_evolution::DeOptimizer::askedP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="426" column="10" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="426" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0dcd44cbcddd9e0dde1ccd2ea5fbf96d" compoundref="deoptimizer_8cpp" startline="225" endline="234">askAll</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1aa1d0f0d9ddbb192cb30b470d8c3c1af0" compoundref="deoptimizer_8cpp" startline="236" endline="242">tellAll</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a6a1b6520ac72b27ee3a574beb03800af" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::popY</definition>
        <argsstring></argsstring>
        <name>popY</name>
        <qualifiedname>differential_evolution::DeOptimizer::popY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="427" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="427" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a0fbfaa180253cf0a90ca9130199f53bc" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::popIter</definition>
        <argsstring></argsstring>
        <name>popIter</name>
        <qualifiedname>differential_evolution::DeOptimizer::popIter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="428" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="428" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a487e97cae40baef80b638c79338880af" prot="private" static="no" mutable="no">
        <type>queue&lt; <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &gt;</type>
        <definition>queue&lt;vec&gt; differential_evolution::DeOptimizer::improvesX</definition>
        <argsstring></argsstring>
        <name>improvesX</name>
        <qualifiedname>differential_evolution::DeOptimizer::improvesX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="429" column="11" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="429" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" compoundref="deoptimizer_8cpp" startline="178" endline="192">ask</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a58da822d0a571d1c5fc502f0de64dc7a" prot="private" static="no" mutable="no">
        <type>queue&lt; int &gt;</type>
        <definition>queue&lt;int&gt; differential_evolution::DeOptimizer::improvesP</definition>
        <argsstring></argsstring>
        <name>improvesP</name>
        <qualifiedname>differential_evolution::DeOptimizer::improvesP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="430" column="11" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="430" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" compoundref="deoptimizer_8cpp" startline="178" endline="192">ask</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a942e3699e1766ab34111b48281792ed2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::pos</definition>
        <argsstring></argsstring>
        <name>pos</name>
        <qualifiedname>differential_evolution::DeOptimizer::pos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="431" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="431" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" compoundref="deoptimizer_8cpp" startline="178" endline="192">ask</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a37f47b61da3d427b3c999546203eafc7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::min_mutate</definition>
        <argsstring></argsstring>
        <name>min_mutate</name>
        <qualifiedname>differential_evolution::DeOptimizer::min_mutate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="432" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="432" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" compoundref="deoptimizer_8cpp" startline="163" endline="176">modify</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a3dae73ea54686df165fc76d29be7aa58" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::max_mutate</definition>
        <argsstring></argsstring>
        <name>max_mutate</name>
        <qualifiedname>differential_evolution::DeOptimizer::max_mutate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="433" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="433" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" compoundref="deoptimizer_8cpp" startline="163" endline="176">modify</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a22b7150d5c13e282b696140e6c97af50" prot="private" static="no" mutable="no">
        <type>bool *</type>
        <definition>bool* differential_evolution::DeOptimizer::isInt</definition>
        <argsstring></argsstring>
        <name>isInt</name>
        <qualifiedname>differential_evolution::DeOptimizer::isInt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="434" column="10" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="434" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" compoundref="deoptimizer_8cpp" startline="163" endline="176">modify</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a47d96cda10236c7e0cea6e50bec7d7dc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool differential_evolution::DeOptimizer::useNormal</definition>
        <argsstring></argsstring>
        <name>useNormal</name>
        <qualifiedname>differential_evolution::DeOptimizer::useNormal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="436" column="10" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="436" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" compoundref="deoptimizer_8cpp" startline="105" endline="110">sample</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67" compoundref="deoptimizer_8cpp" startline="112" endline="117">sample_i</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1ab770253e46d1dc717520ceddcf0c9a90" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::sigma</definition>
        <argsstring></argsstring>
        <name>sigma</name>
        <qualifiedname>differential_evolution::DeOptimizer::sigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="437" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="437" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" compoundref="deoptimizer_8cpp" startline="105" endline="110">sample</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67" compoundref="deoptimizer_8cpp" startline="112" endline="117">sample_i</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a58ba93e54c9364339defb2c2cfe3ec4d" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::mean</definition>
        <argsstring></argsstring>
        <name>mean</name>
        <qualifiedname>differential_evolution::DeOptimizer::mean</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="438" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="438" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" compoundref="deoptimizer_8cpp" startline="105" endline="110">sample</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67" compoundref="deoptimizer_8cpp" startline="112" endline="117">sample_i</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a10983927cb3fb32ef29b0e00d648cdc9" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::maxSigma</definition>
        <argsstring></argsstring>
        <name>maxSigma</name>
        <qualifiedname>differential_evolution::DeOptimizer::maxSigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="439" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="439" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1ac59ec7255ba605669b82e5f06acfe580" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::minSigma</definition>
        <argsstring></argsstring>
        <name>minSigma</name>
        <qualifiedname>differential_evolution::DeOptimizer::minSigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="440" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="440" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a56b8f5ae70f5f635c9eb2981238f0e6b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::minSigmaVal</definition>
        <argsstring></argsstring>
        <name>minSigmaVal</name>
        <qualifiedname>differential_evolution::DeOptimizer::minSigmaVal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="441" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="441" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1ad74151d3e6bcde089f6bf162f4033b0d" prot="private" static="no" mutable="no">
        <type><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref></type>
        <definition>mat differential_evolution::DeOptimizer::meanHist</definition>
        <argsstring></argsstring>
        <name>meanHist</name>
        <qualifiedname>differential_evolution::DeOptimizer::meanHist</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="442" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="442" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classdifferential__evolution_1_1_de_optimizer_1a7a9d221e815553826c0f1cb6b1585148" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::meanHistIndex</definition>
        <argsstring></argsstring>
        <name>meanHistIndex</name>
        <qualifiedname>differential_evolution::DeOptimizer::meanHistIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="443" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="443" bodyend="-1"/>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>differential_evolution::DeOptimizer::DeOptimizer</definition>
        <argsstring>(long runid_, Fitness *fitfun_, int dim_, int seed_, int popsize_, int maxEvaluations_, double keep_, double stopfitness_, double F_, double CR_, double min_mutate_, double max_mutate_, bool *isInt_, const vec &amp;guess_, const vec &amp;inputSigma_, double minSigma_)</argsstring>
        <name>DeOptimizer</name>
        <qualifiedname>differential_evolution::DeOptimizer::DeOptimizer</qualifiedname>
        <param>
          <type>long</type>
          <declname>runid_</declname>
        </param>
        <param>
          <type><ref refid="class_fitness" kindref="compound">Fitness</ref> *</type>
          <declname>fitfun_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>popsize_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxEvaluations_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>keep_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stopfitness_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>F_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>CR_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min_mutate_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_mutate_</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>isInt_</declname>
        </param>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>guess_</declname>
        </param>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>inputSigma_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>minSigma_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="50" column="5" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="50" bodyend="91"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9fa4859d97afa85e9c3f8452cc0d6b65" compoundref="deoptimizer_8cpp" startline="414">bestY</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5422a64ca391813662eeddb2c8cc02ab" compoundref="deoptimizer_8cpp" startline="421">CR</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a8b2f3c51406460c57cfa59bc406d8078" compoundref="deoptimizer_8cpp" startline="419">CR0</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791" compoundref="deoptimizer_8cpp" startline="409">dim</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f332b775ee1241daa8d431e21d415e4" compoundref="deoptimizer_8cpp" startline="420">F</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ae0a4dcecee1e26d0e8e87b783e324fcd" compoundref="deoptimizer_8cpp" startline="418">F0</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463" compoundref="deoptimizer_8cpp" startline="407">fitfun</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a22b7150d5c13e282b696140e6c97af50" compoundref="deoptimizer_8cpp" startline="434">isInt</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1aa98729ab4bc1be4fa22a3a7340a1ea3f" compoundref="deoptimizer_8cpp" startline="413">iterations</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a232a3e2545baae1701e76f0a2c6eeec8" compoundref="deoptimizer_8cpp" startline="411">keep</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a3dae73ea54686df165fc76d29be7aa58" compoundref="deoptimizer_8cpp" startline="433">max_mutate</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a4c5093a5bde2ba68233dcaf789fe69f2" compoundref="deoptimizer_8cpp" startline="410">maxEvaluations</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a58ba93e54c9364339defb2c2cfe3ec4d" compoundref="deoptimizer_8cpp" startline="438">mean</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a37f47b61da3d427b3c999546203eafc7" compoundref="deoptimizer_8cpp" startline="432">min_mutate</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a56b8f5ae70f5f635c9eb2981238f0e6b" compoundref="deoptimizer_8cpp" startline="441">minSigmaVal</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" compoundref="deoptimizer_8cpp" startline="408">popsize</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a942e3699e1766ab34111b48281792ed2" compoundref="deoptimizer_8cpp" startline="431">pos</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f02b77e27171b51fefa32b5141ae248" compoundref="deoptimizer_8cpp" startline="422">rs</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a1b66dc0c337d6bab9b3235c7eeeb49af" compoundref="deoptimizer_8cpp" startline="406">runid</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ab770253e46d1dc717520ceddcf0c9a90" compoundref="deoptimizer_8cpp" startline="437">sigma</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a3ee567dd0543a9e7cbd7735746ac3f99" compoundref="deoptimizer_8cpp" startline="417">stop</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a657515bc56ba9827a222186364996c13" compoundref="deoptimizer_8cpp" startline="412">stopfitness</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a47d96cda10236c7e0cea6e50bec7d7dc" compoundref="deoptimizer_8cpp" startline="436">useNormal</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a33d01cb4aa66ec253c8505a466298e4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>differential_evolution::DeOptimizer::~DeOptimizer</definition>
        <argsstring>()</argsstring>
        <name>~DeOptimizer</name>
        <qualifiedname>differential_evolution::DeOptimizer::~DeOptimizer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="93" column="5" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="93" bodyend="95"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f02b77e27171b51fefa32b5141ae248" compoundref="deoptimizer_8cpp" startline="422">rs</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a922dfb6a6903d18311a87e2fe553c78b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::rnd01</definition>
        <argsstring>()</argsstring>
        <name>rnd01</name>
        <qualifiedname>differential_evolution::DeOptimizer::rnd01</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="97" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="97" bodyend="99"/>
        <references refid="evaluator_8h_1a287b4a368f58519084aafdb8b9ff2142" compoundref="evaluator_8h" startline="93">distr_01</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f02b77e27171b51fefa32b5141ae248" compoundref="deoptimizer_8cpp" startline="422">rs</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" compoundref="deoptimizer_8cpp" startline="163" endline="176">modify</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1ad1842fb1469f6b2e9f341afbe3b26d69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::rndInt</definition>
        <argsstring>(int max)</argsstring>
        <name>rndInt</name>
        <qualifiedname>differential_evolution::DeOptimizer::rndInt</qualifiedname>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="101" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="101" bodyend="103"/>
        <references refid="evaluator_8h_1a287b4a368f58519084aafdb8b9ff2142" compoundref="evaluator_8h" startline="93">distr_01</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f02b77e27171b51fefa32b5141ae248" compoundref="deoptimizer_8cpp" startline="422">rs</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::sample</definition>
        <argsstring>()</argsstring>
        <name>sample</name>
        <qualifiedname>differential_evolution::DeOptimizer::sample</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="105" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="105" bodyend="110"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791" compoundref="deoptimizer_8cpp" startline="409">dim</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463" compoundref="deoptimizer_8cpp" startline="407">fitfun</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a58ba93e54c9364339defb2c2cfe3ec4d" compoundref="deoptimizer_8cpp" startline="438">mean</references>
        <references refid="evaluator_8h_1a5b652df2286e1f0c4dae7d4dd841bb8f" compoundref="evaluator_8h" startline="104" endline="108">normalVec</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f02b77e27171b51fefa32b5141ae248" compoundref="deoptimizer_8cpp" startline="422">rs</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ab770253e46d1dc717520ceddcf0c9a90" compoundref="deoptimizer_8cpp" startline="437">sigma</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a47d96cda10236c7e0cea6e50bec7d7dc" compoundref="deoptimizer_8cpp" startline="436">useNormal</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" compoundref="deoptimizer_8cpp" startline="353" endline="370">init</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::sample_i</definition>
        <argsstring>(int i)</argsstring>
        <name>sample_i</name>
        <qualifiedname>differential_evolution::DeOptimizer::sample_i</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="112" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="112" bodyend="117"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463" compoundref="deoptimizer_8cpp" startline="407">fitfun</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a58ba93e54c9364339defb2c2cfe3ec4d" compoundref="deoptimizer_8cpp" startline="438">mean</references>
        <references refid="evaluator_8h_1aa3d770d0f4bda035e2cc8c6f5c1b0aee" compoundref="evaluator_8h" startline="130" endline="132">normreal</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f02b77e27171b51fefa32b5141ae248" compoundref="deoptimizer_8cpp" startline="422">rs</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ab770253e46d1dc717520ceddcf0c9a90" compoundref="deoptimizer_8cpp" startline="437">sigma</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a47d96cda10236c7e0cea6e50bec7d7dc" compoundref="deoptimizer_8cpp" startline="436">useNormal</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" compoundref="deoptimizer_8cpp" startline="163" endline="176">modify</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void differential_evolution::DeOptimizer::update_mean</definition>
        <argsstring>()</argsstring>
        <name>update_mean</name>
        <qualifiedname>differential_evolution::DeOptimizer::update_mean</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="119" column="10" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="119" bodyend="128"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ac23f0d4e38b52955528bf2cbe349992f" compoundref="deoptimizer_8cpp" startline="416">bestI</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a10983927cb3fb32ef29b0e00d648cdc9" compoundref="deoptimizer_8cpp" startline="439">maxSigma</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a58ba93e54c9364339defb2c2cfe3ec4d" compoundref="deoptimizer_8cpp" startline="438">mean</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ad74151d3e6bcde089f6bf162f4033b0d" compoundref="deoptimizer_8cpp" startline="442">meanHist</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a7a9d221e815553826c0f1cb6b1585148" compoundref="deoptimizer_8cpp" startline="443">meanHistIndex</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ac59ec7255ba605669b82e5f06acfe580" compoundref="deoptimizer_8cpp" startline="440">minSigma</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a765bf8a43ae4db32b8de45ef4282b2a1" compoundref="deoptimizer_8cpp" startline="423">popX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ab770253e46d1dc717520ceddcf0c9a90" compoundref="deoptimizer_8cpp" startline="437">sigma</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a47d96cda10236c7e0cea6e50bec7d7dc" compoundref="deoptimizer_8cpp" startline="436">useNormal</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::nextX</definition>
        <argsstring>(int p, const vec &amp;xp, const vec &amp;xb)</argsstring>
        <name>nextX</name>
        <qualifiedname>differential_evolution::DeOptimizer::nextX</qualifiedname>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>xp</declname>
        </param>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>xb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="130" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="130" bodyend="155"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ac23f0d4e38b52955528bf2cbe349992f" compoundref="deoptimizer_8cpp" startline="416">bestI</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5422a64ca391813662eeddb2c8cc02ab" compoundref="deoptimizer_8cpp" startline="421">CR</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a8b2f3c51406460c57cfa59bc406d8078" compoundref="deoptimizer_8cpp" startline="419">CR0</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791" compoundref="deoptimizer_8cpp" startline="409">dim</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f332b775ee1241daa8d431e21d415e4" compoundref="deoptimizer_8cpp" startline="420">F</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ae0a4dcecee1e26d0e8e87b783e324fcd" compoundref="deoptimizer_8cpp" startline="418">F0</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463" compoundref="deoptimizer_8cpp" startline="407">fitfun</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1aa98729ab4bc1be4fa22a3a7340a1ea3f" compoundref="deoptimizer_8cpp" startline="413">iterations</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" compoundref="deoptimizer_8cpp" startline="163" endline="176">modify</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" compoundref="deoptimizer_8cpp" startline="408">popsize</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a765bf8a43ae4db32b8de45ef4282b2a1" compoundref="deoptimizer_8cpp" startline="423">popX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a922dfb6a6903d18311a87e2fe553c78b" compoundref="deoptimizer_8cpp" startline="97" endline="99">rnd01</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ad1842fb1469f6b2e9f341afbe3b26d69" compoundref="deoptimizer_8cpp" startline="101" endline="103">rndInt</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" compoundref="deoptimizer_8cpp" startline="178" endline="192">ask</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1aff18de19791b75f799d4aa5e9c60b5fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::next_improve</definition>
        <argsstring>(const vec &amp;xb, const vec &amp;x, const vec &amp;xi)</argsstring>
        <name>next_improve</name>
        <qualifiedname>differential_evolution::DeOptimizer::next_improve</qualifiedname>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>xb</declname>
        </param>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>xi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="157" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="157" bodyend="161"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ae0a4dcecee1e26d0e8e87b783e324fcd" compoundref="deoptimizer_8cpp" startline="418">F0</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463" compoundref="deoptimizer_8cpp" startline="407">fitfun</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" compoundref="deoptimizer_8cpp" startline="163" endline="176">modify</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void differential_evolution::DeOptimizer::modify</definition>
        <argsstring>(vec &amp;x)</argsstring>
        <name>modify</name>
        <qualifiedname>differential_evolution::DeOptimizer::modify</qualifiedname>
        <param>
          <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="163" column="10" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="163" bodyend="176"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791" compoundref="deoptimizer_8cpp" startline="409">dim</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a22b7150d5c13e282b696140e6c97af50" compoundref="deoptimizer_8cpp" startline="434">isInt</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a3dae73ea54686df165fc76d29be7aa58" compoundref="deoptimizer_8cpp" startline="433">max_mutate</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a37f47b61da3d427b3c999546203eafc7" compoundref="deoptimizer_8cpp" startline="432">min_mutate</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a922dfb6a6903d18311a87e2fe553c78b" compoundref="deoptimizer_8cpp" startline="97" endline="99">rnd01</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67" compoundref="deoptimizer_8cpp" startline="112" endline="117">sample_i</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" compoundref="deoptimizer_8cpp" startline="244" endline="310">doOptimize</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1aff18de19791b75f799d4aa5e9c60b5fa" compoundref="deoptimizer_8cpp" startline="157" endline="161">next_improve</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::ask</definition>
        <argsstring>(int &amp;p)</argsstring>
        <name>ask</name>
        <qualifiedname>differential_evolution::DeOptimizer::ask</qualifiedname>
        <param>
          <type>int &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="178" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="178" bodyend="192"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ac23f0d4e38b52955528bf2cbe349992f" compoundref="deoptimizer_8cpp" startline="416">bestI</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a58da822d0a571d1c5fc502f0de64dc7a" compoundref="deoptimizer_8cpp" startline="430">improvesP</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a487e97cae40baef80b638c79338880af" compoundref="deoptimizer_8cpp" startline="429">improvesX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" compoundref="deoptimizer_8cpp" startline="130" endline="155">nextX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" compoundref="deoptimizer_8cpp" startline="408">popsize</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a765bf8a43ae4db32b8de45ef4282b2a1" compoundref="deoptimizer_8cpp" startline="423">popX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a942e3699e1766ab34111b48281792ed2" compoundref="deoptimizer_8cpp" startline="431">pos</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0dcd44cbcddd9e0dde1ccd2ea5fbf96d" compoundref="deoptimizer_8cpp" startline="225" endline="234">askAll</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" compoundref="deoptimizer_8cpp" startline="312" endline="351">do_optimize_delayed_update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::tell</definition>
        <argsstring>(double y, const vec &amp;x, int p)</argsstring>
        <name>tell</name>
        <qualifiedname>differential_evolution::DeOptimizer::tell</qualifiedname>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="194" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="194" bodyend="223"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ac23f0d4e38b52955528bf2cbe349992f" compoundref="deoptimizer_8cpp" startline="416">bestI</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a7576298bacac75697507e4f90fc59c33" compoundref="deoptimizer_8cpp" startline="415">bestX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9fa4859d97afa85e9c3f8452cc0d6b65" compoundref="deoptimizer_8cpp" startline="414">bestY</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a58da822d0a571d1c5fc502f0de64dc7a" compoundref="deoptimizer_8cpp" startline="430">improvesP</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a487e97cae40baef80b638c79338880af" compoundref="deoptimizer_8cpp" startline="429">improvesX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1aa98729ab4bc1be4fa22a3a7340a1ea3f" compoundref="deoptimizer_8cpp" startline="413">iterations</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a232a3e2545baae1701e76f0a2c6eeec8" compoundref="deoptimizer_8cpp" startline="411">keep</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1aff18de19791b75f799d4aa5e9c60b5fa" compoundref="deoptimizer_8cpp" startline="157" endline="161">next_improve</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a0fbfaa180253cf0a90ca9130199f53bc" compoundref="deoptimizer_8cpp" startline="428">popIter</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a765bf8a43ae4db32b8de45ef4282b2a1" compoundref="deoptimizer_8cpp" startline="423">popX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1aa20f437a2e42ae30421404788d2d3f09" compoundref="deoptimizer_8cpp" startline="424">popX0</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a6a1b6520ac72b27ee3a574beb03800af" compoundref="deoptimizer_8cpp" startline="427">popY</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a922dfb6a6903d18311a87e2fe553c78b" compoundref="deoptimizer_8cpp" startline="97" endline="99">rnd01</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" compoundref="deoptimizer_8cpp" startline="105" endline="110">sample</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a3ee567dd0543a9e7cbd7735746ac3f99" compoundref="deoptimizer_8cpp" startline="417">stop</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a657515bc56ba9827a222186364996c13" compoundref="deoptimizer_8cpp" startline="412">stopfitness</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" compoundref="deoptimizer_8cpp" startline="312" endline="351">do_optimize_delayed_update</referencedby>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1aa1d0f0d9ddbb192cb30b470d8c3c1af0" compoundref="deoptimizer_8cpp" startline="236" endline="242">tellAll</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a0dcd44cbcddd9e0dde1ccd2ea5fbf96d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref></type>
        <definition>mat differential_evolution::DeOptimizer::askAll</definition>
        <argsstring>()</argsstring>
        <name>askAll</name>
        <qualifiedname>differential_evolution::DeOptimizer::askAll</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="225" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="225" bodyend="234"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" compoundref="deoptimizer_8cpp" startline="178" endline="192">ask</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5227e652d09cf3cf711eefba448a06f4" compoundref="deoptimizer_8cpp" startline="426">askedP</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1abbc98f32e02cab03f4bc226fa732dcfa" compoundref="deoptimizer_8cpp" startline="425">askedX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" compoundref="deoptimizer_8cpp" startline="408">popsize</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1aa1d0f0d9ddbb192cb30b470d8c3c1af0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::tellAll</definition>
        <argsstring>(vec &amp;ys)</argsstring>
        <name>tellAll</name>
        <qualifiedname>differential_evolution::DeOptimizer::tellAll</qualifiedname>
        <param>
          <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>ys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="236" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="236" bodyend="242"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5227e652d09cf3cf711eefba448a06f4" compoundref="deoptimizer_8cpp" startline="426">askedP</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1abbc98f32e02cab03f4bc226fa732dcfa" compoundref="deoptimizer_8cpp" startline="425">askedX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" compoundref="deoptimizer_8cpp" startline="408">popsize</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a3ee567dd0543a9e7cbd7735746ac3f99" compoundref="deoptimizer_8cpp" startline="417">stop</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void differential_evolution::DeOptimizer::doOptimize</definition>
        <argsstring>()</argsstring>
        <name>doOptimize</name>
        <qualifiedname>differential_evolution::DeOptimizer::doOptimize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="244" column="10" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="244" bodyend="310"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ac23f0d4e38b52955528bf2cbe349992f" compoundref="deoptimizer_8cpp" startline="416">bestI</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a7576298bacac75697507e4f90fc59c33" compoundref="deoptimizer_8cpp" startline="415">bestX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9fa4859d97afa85e9c3f8452cc0d6b65" compoundref="deoptimizer_8cpp" startline="414">bestY</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5422a64ca391813662eeddb2c8cc02ab" compoundref="deoptimizer_8cpp" startline="421">CR</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a8b2f3c51406460c57cfa59bc406d8078" compoundref="deoptimizer_8cpp" startline="419">CR0</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791" compoundref="deoptimizer_8cpp" startline="409">dim</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f332b775ee1241daa8d431e21d415e4" compoundref="deoptimizer_8cpp" startline="420">F</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ae0a4dcecee1e26d0e8e87b783e324fcd" compoundref="deoptimizer_8cpp" startline="418">F0</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463" compoundref="deoptimizer_8cpp" startline="407">fitfun</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1aa98729ab4bc1be4fa22a3a7340a1ea3f" compoundref="deoptimizer_8cpp" startline="413">iterations</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a232a3e2545baae1701e76f0a2c6eeec8" compoundref="deoptimizer_8cpp" startline="411">keep</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a4c5093a5bde2ba68233dcaf789fe69f2" compoundref="deoptimizer_8cpp" startline="410">maxEvaluations</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" compoundref="deoptimizer_8cpp" startline="163" endline="176">modify</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1aff18de19791b75f799d4aa5e9c60b5fa" compoundref="deoptimizer_8cpp" startline="157" endline="161">next_improve</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a0fbfaa180253cf0a90ca9130199f53bc" compoundref="deoptimizer_8cpp" startline="428">popIter</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" compoundref="deoptimizer_8cpp" startline="408">popsize</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a765bf8a43ae4db32b8de45ef4282b2a1" compoundref="deoptimizer_8cpp" startline="423">popX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a6a1b6520ac72b27ee3a574beb03800af" compoundref="deoptimizer_8cpp" startline="427">popY</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a922dfb6a6903d18311a87e2fe553c78b" compoundref="deoptimizer_8cpp" startline="97" endline="99">rnd01</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ad1842fb1469f6b2e9f341afbe3b26d69" compoundref="deoptimizer_8cpp" startline="101" endline="103">rndInt</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" compoundref="deoptimizer_8cpp" startline="105" endline="110">sample</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67" compoundref="deoptimizer_8cpp" startline="112" endline="117">sample_i</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a3ee567dd0543a9e7cbd7735746ac3f99" compoundref="deoptimizer_8cpp" startline="417">stop</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a657515bc56ba9827a222186364996c13" compoundref="deoptimizer_8cpp" startline="412">stopfitness</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" compoundref="deoptimizer_8cpp" startline="119" endline="128">update_mean</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void differential_evolution::DeOptimizer::do_optimize_delayed_update</definition>
        <argsstring>(int workers)</argsstring>
        <name>do_optimize_delayed_update</name>
        <qualifiedname>differential_evolution::DeOptimizer::do_optimize_delayed_update</qualifiedname>
        <param>
          <type>int</type>
          <declname>workers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="312" column="10" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="312" bodyend="351"/>
        <references refid="structvec__id_1a126c3cb731d047e25c08742f735f0f13" compoundref="evaluator_8h" startline="415">vec_id::_id</references>
        <references refid="structvec__id_1af5bf436ff9f915e145a897a73e4cdac9" compoundref="evaluator_8h" startline="416">vec_id::_v</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" compoundref="deoptimizer_8cpp" startline="178" endline="192">ask</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9fa4859d97afa85e9c3f8452cc0d6b65" compoundref="deoptimizer_8cpp" startline="414">bestY</references>
        <references refid="classevaluator_1a62e9fb557b5a2ecfabc49a01eb7f59d5" compoundref="evaluator_8h" startline="440" endline="442">evaluator::evaluate</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463" compoundref="deoptimizer_8cpp" startline="407">fitfun</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1aa98729ab4bc1be4fa22a3a7340a1ea3f" compoundref="deoptimizer_8cpp" startline="413">iterations</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a4c5093a5bde2ba68233dcaf789fe69f2" compoundref="deoptimizer_8cpp" startline="410">maxEvaluations</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" compoundref="deoptimizer_8cpp" startline="408">popsize</references>
        <references refid="classevaluator_1a71fc6fd970c9d9f19af8202500c51b05" compoundref="evaluator_8h" startline="445" endline="447">evaluator::result</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a3ee567dd0543a9e7cbd7735746ac3f99" compoundref="deoptimizer_8cpp" startline="417">stop</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a657515bc56ba9827a222186364996c13" compoundref="deoptimizer_8cpp" startline="412">stopfitness</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" compoundref="deoptimizer_8cpp" startline="194" endline="223">tell</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void differential_evolution::DeOptimizer::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>differential_evolution::DeOptimizer::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="353" column="10" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="353" bodyend="370"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5227e652d09cf3cf711eefba448a06f4" compoundref="deoptimizer_8cpp" startline="426">askedP</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1abbc98f32e02cab03f4bc226fa732dcfa" compoundref="deoptimizer_8cpp" startline="425">askedX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ac23f0d4e38b52955528bf2cbe349992f" compoundref="deoptimizer_8cpp" startline="416">bestI</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a7576298bacac75697507e4f90fc59c33" compoundref="deoptimizer_8cpp" startline="415">bestX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791" compoundref="deoptimizer_8cpp" startline="409">dim</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a10983927cb3fb32ef29b0e00d648cdc9" compoundref="deoptimizer_8cpp" startline="439">maxSigma</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a58ba93e54c9364339defb2c2cfe3ec4d" compoundref="deoptimizer_8cpp" startline="438">mean</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ad74151d3e6bcde089f6bf162f4033b0d" compoundref="deoptimizer_8cpp" startline="442">meanHist</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a7a9d221e815553826c0f1cb6b1585148" compoundref="deoptimizer_8cpp" startline="443">meanHistIndex</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ac59ec7255ba605669b82e5f06acfe580" compoundref="deoptimizer_8cpp" startline="440">minSigma</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a56b8f5ae70f5f635c9eb2981238f0e6b" compoundref="deoptimizer_8cpp" startline="441">minSigmaVal</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a0fbfaa180253cf0a90ca9130199f53bc" compoundref="deoptimizer_8cpp" startline="428">popIter</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" compoundref="deoptimizer_8cpp" startline="408">popsize</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a765bf8a43ae4db32b8de45ef4282b2a1" compoundref="deoptimizer_8cpp" startline="423">popX</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1aa20f437a2e42ae30421404788d2d3f09" compoundref="deoptimizer_8cpp" startline="424">popX0</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a6a1b6520ac72b27ee3a574beb03800af" compoundref="deoptimizer_8cpp" startline="427">popY</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" compoundref="deoptimizer_8cpp" startline="105" endline="110">sample</references>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1ab770253e46d1dc717520ceddcf0c9a90" compoundref="deoptimizer_8cpp" startline="437">sigma</references>
        <references refid="evaluator_8h_1a909812174fa9829bc49f6e00edb00b90" compoundref="evaluator_8h" startline="139" endline="141">zeros</references>
        <referencedby refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" compoundref="deoptimizer_8cpp" startline="50" endline="91">DeOptimizer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1af3cb231427f53598ae45ba8c320b1231" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec differential_evolution::DeOptimizer::getBestX</definition>
        <argsstring>()</argsstring>
        <name>getBestX</name>
        <qualifiedname>differential_evolution::DeOptimizer::getBestX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="372" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="372" bodyend="374"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a7576298bacac75697507e4f90fc59c33" compoundref="deoptimizer_8cpp" startline="415">bestX</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a9588f30973550e4b1083fd67641dadbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::getBestValue</definition>
        <argsstring>()</argsstring>
        <name>getBestValue</name>
        <qualifiedname>differential_evolution::DeOptimizer::getBestValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="376" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="376" bodyend="378"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a9fa4859d97afa85e9c3f8452cc0d6b65" compoundref="deoptimizer_8cpp" startline="414">bestY</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1ab8e8cfb1d04f3cd8dd5c82978f425eb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double differential_evolution::DeOptimizer::getIterations</definition>
        <argsstring>()</argsstring>
        <name>getIterations</name>
        <qualifiedname>differential_evolution::DeOptimizer::getIterations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="380" column="12" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="380" bodyend="382"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1aa98729ab4bc1be4fa22a3a7340a1ea3f" compoundref="deoptimizer_8cpp" startline="413">iterations</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1ab5aa75486c266ec520613a4e00c2ad52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_fitness" kindref="compound">Fitness</ref> *</type>
        <definition>Fitness * differential_evolution::DeOptimizer::getFitfun</definition>
        <argsstring>()</argsstring>
        <name>getFitfun</name>
        <qualifiedname>differential_evolution::DeOptimizer::getFitfun</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="384" column="13" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="384" bodyend="386"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463" compoundref="deoptimizer_8cpp" startline="407">fitfun</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1aa3653941bc72f8c6e32688f1e09ba76b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::getDim</definition>
        <argsstring>()</argsstring>
        <name>getDim</name>
        <qualifiedname>differential_evolution::DeOptimizer::getDim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="388" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="388" bodyend="390"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791" compoundref="deoptimizer_8cpp" startline="409">dim</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a4842f3a4aae6868fbe69fdc154032ca5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref></type>
        <definition>mat differential_evolution::DeOptimizer::getPopulation</definition>
        <argsstring>()</argsstring>
        <name>getPopulation</name>
        <qualifiedname>differential_evolution::DeOptimizer::getPopulation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="392" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="392" bodyend="394"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1abbc98f32e02cab03f4bc226fa732dcfa" compoundref="deoptimizer_8cpp" startline="425">askedX</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a4cf73cd0c13cf54880eb91edb58db9a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::getStop</definition>
        <argsstring>()</argsstring>
        <name>getStop</name>
        <qualifiedname>differential_evolution::DeOptimizer::getStop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="396" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="396" bodyend="398"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a3ee567dd0543a9e7cbd7735746ac3f99" compoundref="deoptimizer_8cpp" startline="417">stop</references>
      </memberdef>
      <memberdef kind="function" id="classdifferential__evolution_1_1_de_optimizer_1a7c4a14f47ad8a07a84cad2132661b004" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int differential_evolution::DeOptimizer::getPopsize</definition>
        <argsstring>()</argsstring>
        <name>getPopsize</name>
        <qualifiedname>differential_evolution::DeOptimizer::getPopsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/deoptimizer.cpp" line="400" column="9" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="400" bodyend="402"/>
        <references refid="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" compoundref="deoptimizer_8cpp" startline="408">popsize</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>Fitness</label>
        <link refid="class_fitness"/>
      </node>
      <node id="1">
        <label>differential_evolution::DeOptimizer</label>
        <link refid="classdifferential__evolution_1_1_de_optimizer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-fitfun</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/deoptimizer.cpp" line="46" column="1" bodyfile="_fcmaescpp/deoptimizer.cpp" bodystart="46" bodyend="444"/>
    <listofallmembers>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1af7935d4c0d376a000470f2b943aadbd6" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>ask</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a0dcd44cbcddd9e0dde1ccd2ea5fbf96d" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>askAll</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a5227e652d09cf3cf711eefba448a06f4" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>askedP</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1abbc98f32e02cab03f4bc226fa732dcfa" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>askedX</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1ac23f0d4e38b52955528bf2cbe349992f" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>bestI</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a7576298bacac75697507e4f90fc59c33" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>bestX</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a9fa4859d97afa85e9c3f8452cc0d6b65" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>bestY</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a5422a64ca391813662eeddb2c8cc02ab" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>CR</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a8b2f3c51406460c57cfa59bc406d8078" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>CR0</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a88f53bfd99efb252ac0e6d53b1457edf" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>DeOptimizer</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a33fe24d499544386815402a4406ea791" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>dim</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a0af3433f0f60f99f8a9fbf9f10f36360" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>do_optimize_delayed_update</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a18f5c0a1c724443666e4827126716315" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>doOptimize</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a9f332b775ee1241daa8d431e21d415e4" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>F</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1ae0a4dcecee1e26d0e8e87b783e324fcd" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>F0</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a5224214768edd53cecbf3272d501f463" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>fitfun</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a9588f30973550e4b1083fd67641dadbb" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>getBestValue</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1af3cb231427f53598ae45ba8c320b1231" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>getBestX</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1aa3653941bc72f8c6e32688f1e09ba76b" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>getDim</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1ab5aa75486c266ec520613a4e00c2ad52" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>getFitfun</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1ab8e8cfb1d04f3cd8dd5c82978f425eb1" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>getIterations</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a7c4a14f47ad8a07a84cad2132661b004" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>getPopsize</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a4842f3a4aae6868fbe69fdc154032ca5" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>getPopulation</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a4cf73cd0c13cf54880eb91edb58db9a9" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>getStop</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a58da822d0a571d1c5fc502f0de64dc7a" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>improvesP</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a487e97cae40baef80b638c79338880af" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>improvesX</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a4a4034e862bdd75aead3dd069ec36583" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>init</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a22b7150d5c13e282b696140e6c97af50" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>isInt</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1aa98729ab4bc1be4fa22a3a7340a1ea3f" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>iterations</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a232a3e2545baae1701e76f0a2c6eeec8" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>keep</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a3dae73ea54686df165fc76d29be7aa58" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>max_mutate</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a4c5093a5bde2ba68233dcaf789fe69f2" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>maxEvaluations</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a10983927cb3fb32ef29b0e00d648cdc9" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>maxSigma</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a58ba93e54c9364339defb2c2cfe3ec4d" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>mean</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1ad74151d3e6bcde089f6bf162f4033b0d" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>meanHist</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a7a9d221e815553826c0f1cb6b1585148" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>meanHistIndex</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a37f47b61da3d427b3c999546203eafc7" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>min_mutate</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1ac59ec7255ba605669b82e5f06acfe580" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>minSigma</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a56b8f5ae70f5f635c9eb2981238f0e6b" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>minSigmaVal</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a9f8d2654bcad80c32d9358faa62cebd9" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>modify</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1aff18de19791b75f799d4aa5e9c60b5fa" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>next_improve</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a8babf7e82f12af63653d0d26df11e8b0" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>nextX</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a0fbfaa180253cf0a90ca9130199f53bc" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>popIter</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a2d3f9b551728af32ae3535ccd8fe191e" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>popsize</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a765bf8a43ae4db32b8de45ef4282b2a1" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>popX</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1aa20f437a2e42ae30421404788d2d3f09" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>popX0</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a6a1b6520ac72b27ee3a574beb03800af" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>popY</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a942e3699e1766ab34111b48281792ed2" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>pos</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a922dfb6a6903d18311a87e2fe553c78b" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>rnd01</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1ad1842fb1469f6b2e9f341afbe3b26d69" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>rndInt</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a9f02b77e27171b51fefa32b5141ae248" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>rs</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a1b66dc0c337d6bab9b3235c7eeeb49af" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>runid</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a750fb2ff0c0981be30414916d8c872bf" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>sample</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a427ae953a5503dc4369da1bbb338fe67" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>sample_i</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1ab770253e46d1dc717520ceddcf0c9a90" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>sigma</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a3ee567dd0543a9e7cbd7735746ac3f99" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>stop</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a657515bc56ba9827a222186364996c13" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>stopfitness</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1accf9be34ac5d30b9a2df15dba24f4dce" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>tell</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1aa1d0f0d9ddbb192cb30b470d8c3c1af0" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>tellAll</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1ac2c05bd08ebf41841869016986381905" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>update_mean</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a47d96cda10236c7e0cea6e50bec7d7dc" prot="private" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>useNormal</name></member>
      <member refid="classdifferential__evolution_1_1_de_optimizer_1a33d01cb4aa66ec253c8505a466298e4c" prot="public" virt="non-virtual"><scope>differential_evolution::DeOptimizer</scope><name>~DeOptimizer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

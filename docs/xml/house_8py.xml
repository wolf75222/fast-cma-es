<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="house_8py" kind="file" language="Python">
    <compoundname>house.py</compoundname>
    <innerclass refid="classexamples_1_1house_1_1cv__problem" prot="public">examples::house::cv_problem</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1house">examples::house</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a4934e27c4da6ba749aed142321a92786" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.house.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="30" column="1" bodyfile="examples/house.py" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1ab46c30f2c08d0d96db6520e8ca076d36" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.house.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="30" column="1" bodyfile="examples/house.py" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1aba858ae5de8fb7f24964bff0c3842802" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.house.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="30" column="1" bodyfile="examples/house.py" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a3b0347fdd4de9dbe8215ffed52d37f4f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.train_dataset</definition>
        <argsstring></argsstring>
        <name>train_dataset</name>
        <qualifiedname>examples.house.train_dataset</qualifiedname>
        <initializer>= pd.read_csv(&apos;../input/train.csv&apos;, header=0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="34" column="1" bodyfile="examples/house.py" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1aed975c759441882937098ef4c190ca0d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.test_dataset</definition>
        <argsstring></argsstring>
        <name>test_dataset</name>
        <qualifiedname>examples.house.test_dataset</qualifiedname>
        <initializer>= pd.read_csv(&apos;../input/test.csv&apos;, header=0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="35" column="1" bodyfile="examples/house.py" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a82b43265e599352aa67170fb0dc01976" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::house.categorical_features</definition>
        <argsstring></argsstring>
        <name>categorical_features</name>
        <qualifiedname>examples.house.categorical_features</qualifiedname>
        <initializer>= [&apos;MSSubClass&apos;,&apos;MSZoning&apos;,&apos;Street&apos;,&apos;Alley&apos;,&apos;LotShape&apos;,&apos;LandContour&apos;,&apos;Utilities&apos;,
                      &apos;LotConfig&apos;,&apos;LandSlope&apos;,&apos;Neighborhood&apos;,&apos;Condition1&apos;,&apos;Condition2&apos;,&apos;BldgType&apos;,&apos;HouseStyle&apos;,
                      &apos;RoofStyle&apos;,&apos;RoofMatl&apos;,&apos;Exterior1st&apos;,&apos;Exterior2nd&apos;,&apos;MasVnrType&apos;,&apos;ExterQual&apos;,&apos;ExterCond&apos;,
                      &apos;Foundation&apos;,&apos;BsmtQual&apos;,&apos;BsmtCond&apos;,&apos;BsmtExposure&apos;,&apos;BsmtFinType1&apos;,&apos;BsmtFinType2&apos;,&apos;Heating&apos;,
                      &apos;HeatingQC&apos;,&apos;CentralAir&apos;,&apos;Electrical&apos;,&apos;KitchenQual&apos;,&apos;Functional&apos;,&apos;FireplaceQu&apos;,
                     &apos;GarageType&apos;,&apos;GarageFinish&apos;,&apos;GarageQual&apos;,&apos;GarageCond&apos;,&apos;PavedDrive&apos;,&apos;PoolQC&apos;,&apos;Fence&apos;,
                     &apos;MiscFeature&apos;,&apos;SaleType&apos;,&apos;SaleCondition&apos;]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="37" column="1" bodyfile="examples/house.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a4b968b58512b3493a1c28ddcb1b62a17" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::house::every_column_except_y</definition>
        <argsstring></argsstring>
        <name>every_column_except_y</name>
        <qualifiedname>examples.house.every_column_except_y</qualifiedname>
        <initializer>=  [col for col in train_dataset.columns if col not in [&apos;SalePrice&apos;,&apos;Id&apos;]]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="44" column="1" bodyfile="examples/house.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a2edc9a3af1cf35065657d37aa6092d0b" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::house::every_column_non_categorical</definition>
        <argsstring></argsstring>
        <name>every_column_non_categorical</name>
        <qualifiedname>examples.house.every_column_non_categorical</qualifiedname>
        <initializer>=  [col for col in train_dataset.columns if col not in categorical_features and col not in [&apos;Id&apos;] ]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="47" column="1" bodyfile="examples/house.py" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1ad86e27976b8a992dcc2d41b89bcc8db3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.numeric_feats</definition>
        <argsstring></argsstring>
        <name>numeric_feats</name>
        <qualifiedname>examples.house.numeric_feats</qualifiedname>
        <initializer>=  train_dataset[every_column_non_categorical].dtypes[train_dataset.dtypes != &quot;object&quot;].index</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="49" column="1" bodyfile="examples/house.py" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a550e21ac7059371e4394896cfe2a7ba6" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::house.features_with_nan</definition>
        <argsstring></argsstring>
        <name>features_with_nan</name>
        <qualifiedname>examples.house.features_with_nan</qualifiedname>
        <initializer>= [&apos;Alley&apos;,&apos;MasVnrType&apos;,&apos;BsmtQual&apos;,&apos;BsmtQual&apos;,&apos;BsmtCond&apos;,&apos;BsmtCond&apos;,&apos;BsmtExposure&apos;,
                   &apos;BsmtFinType1&apos;,&apos;BsmtFinType2&apos;,&apos;FireplaceQu&apos;,&apos;GarageType&apos;,&apos;GarageFinish&apos;]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="57" column="1" bodyfile="examples/house.py" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a51b5d2e283cc1d846c6fe369fea06a1f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.model</definition>
        <argsstring></argsstring>
        <name>model</name>
        <qualifiedname>examples.house.model</qualifiedname>
        <initializer>=  xgboost.XGBRegressor(colsample_bytree=0.4,
                 gamma=0,
                 learning_rate=0.07,
                 max_depth=3,
                 min_child_weight=1.5,
                 n_estimators=10000,
                 reg_alpha=0.75,
                 reg_lambda=0.45,
                 subsample=0.6,
                 seed=42)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="70" column="1" bodyfile="examples/house.py" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a992883b04b0f7d9481f373de9c5df398" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.weighted_features</definition>
        <argsstring></argsstring>
        <name>weighted_features</name>
        <qualifiedname>examples.house.weighted_features</qualifiedname>
        <initializer>=  model.get_booster().get_score(importance_type=&apos;weight&apos;).items()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="84" column="1" bodyfile="examples/house.py" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a543dd25d1396426b86a8b84cc639ee16" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.ordered_features</definition>
        <argsstring></argsstring>
        <name>ordered_features</name>
        <qualifiedname>examples.house.ordered_features</qualifiedname>
        <initializer>=  OrderedDict(sorted(weighted_features, key=lambda t: t[1], reverse=True))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="86" column="1" bodyfile="examples/house.py" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a59913344df23ab873d6a5d0ae217e90e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.most_relevant_features</definition>
        <argsstring></argsstring>
        <name>most_relevant_features</name>
        <qualifiedname>examples.house.most_relevant_features</qualifiedname>
        <initializer>=  list( dict((k, v) for k, v in weighted_features if v &gt;= 10).keys())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="88" column="1" bodyfile="examples/house.py" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a42ce97b3ca0226db9e4467e016d417cd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.axis</definition>
        <argsstring></argsstring>
        <name>axis</name>
        <qualifiedname>examples.house.axis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="95" column="1" bodyfile="examples/house.py" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a4586d38b33b44e150bb176b86f7c3022" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.inplace</definition>
        <argsstring></argsstring>
        <name>inplace</name>
        <qualifiedname>examples.house.inplace</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="95" column="1" bodyfile="examples/house.py" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a1377c74d53c1100c7bbce092002e8362" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.train_x</definition>
        <argsstring></argsstring>
        <name>train_x</name>
        <qualifiedname>examples.house.train_x</qualifiedname>
        <initializer>= train_dataset[most_relevant_features]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="97" column="1" bodyfile="examples/house.py" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1aed17691e77bd8195b440e7e6c576c0d0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.train_y</definition>
        <argsstring></argsstring>
        <name>train_y</name>
        <qualifiedname>examples.house.train_y</qualifiedname>
        <initializer>= train_dataset[&apos;SalePrice&apos;]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="98" column="1" bodyfile="examples/house.py" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a3c03a0234a2c71ef181d8e85ee11739d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool examples::house.grid_search</definition>
        <argsstring></argsstring>
        <name>grid_search</name>
        <qualifiedname>examples.house.grid_search</qualifiedname>
        <initializer>=  False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="100" column="1" bodyfile="examples/house.py" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1ae1e3ec63d02fac6de46655b3bd0c22b9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool examples::house.hyperopt</definition>
        <argsstring></argsstring>
        <name>hyperopt</name>
        <qualifiedname>examples.house.hyperopt</qualifiedname>
        <initializer>=  False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="101" column="1" bodyfile="examples/house.py" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a58f1ee9db2b6804b6d00c152ad40b802" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool examples::house.bayesian</definition>
        <argsstring></argsstring>
        <name>bayesian</name>
        <qualifiedname>examples.house.bayesian</qualifiedname>
        <initializer>=  False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="102" column="1" bodyfile="examples/house.py" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a5a3829e9f7c9a57a045c0b48719b1b51" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool examples::house.evolutionary</definition>
        <argsstring></argsstring>
        <name>evolutionary</name>
        <qualifiedname>examples.house.evolutionary</qualifiedname>
        <initializer>=  True</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="103" column="1" bodyfile="examples/house.py" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a5fc66d59169f22ab71835a11b5e9e932" prot="public" static="no" mutable="no">
        <type>dict</type>
        <definition>dict examples::house.parameters_for_testing</definition>
        <argsstring></argsstring>
        <name>parameters_for_testing</name>
        <qualifiedname>examples.house.parameters_for_testing</qualifiedname>
        <initializer>=  {
        &apos;colsample_bytree&apos;:[0.4,0.6,0.8],
        &apos;gamma&apos;:[0,0.03,0.1,0.3],
        &apos;min_child_weight&apos;:[1.5,6,10],
        &apos;learning_rate&apos;:[0.1,0.07],
        &apos;max_depth&apos;:[3,5],
        &apos;n_estimators&apos;:[10000],
        &apos;reg_alpha&apos;:[1e-5, 1e-2,  0.75],
        &apos;reg_lambda&apos;:[1e-5, 1e-2, 0.45],
        &apos;subsample&apos;:[0.6,0.95]
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="108" column="1" bodyfile="examples/house.py" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a5e0260102b4af1ca5b85c5472d09b2e3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.xgb_model</definition>
        <argsstring></argsstring>
        <name>xgb_model</name>
        <qualifiedname>examples.house.xgb_model</qualifiedname>
        <initializer>=  xgboost.XGBRegressor(learning_rate =0.1, n_estimators=1000, max_depth=5,
         min_child_weight=1, gamma=0, subsample=0.8, colsample_bytree=0.8, nthread=6, scale_pos_weight=1, seed=27)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="120" column="1" bodyfile="examples/house.py" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a2732c74b853863a101cac2999de77e08" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.gsearch</definition>
        <argsstring></argsstring>
        <name>gsearch</name>
        <qualifiedname>examples.house.gsearch</qualifiedname>
        <initializer>=  GridSearchCV(estimator = xgb_model, param_grid = parameters_for_testing,
                            n_jobs=6,iid=False, verbose=100, scoring=&apos;neg_mean_squared_error&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="123" column="1" bodyfile="examples/house.py" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1afba8daf815562b6f56fad5a1a4923cfe" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::house.xgb_space</definition>
        <argsstring></argsstring>
        <name>xgb_space</name>
        <qualifiedname>examples.house.xgb_space</qualifiedname>
        <initializer>=  [
            hp.quniform(&apos;colsample_bytree&apos;, 0.4, 0.8, 0.05),
            hp.quniform(&apos;gamma&apos;, 0, 0.3, 0.05),
            hp.quniform(&apos;min_child_weight&apos;, 1.5, 10, 0.5),
            hp.quniform(&apos;learning_rate&apos;, 0.07, 0.1, 0.05),
            hp.choice(&apos;max_depth&apos;, [3,4,5]),
            <ref refid="evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593" kindref="member">hp.uniform</ref>(&apos;reg_alpha&apos;, 1e-5, 0.75),
            <ref refid="evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593" kindref="member">hp.uniform</ref>(&apos;reg_lambda&apos;, 1e-5, 0.45),
            <ref refid="evaluator_8h_1ad408c1ac0c479863b2d1291c483c5593" kindref="member">hp.uniform</ref>(&apos;subsample&apos;, 0.6, 0.95)]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="185" column="1" bodyfile="examples/house.py" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a0ad73fccd0afeaa8550811d87106dd5a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.best</definition>
        <argsstring></argsstring>
        <name>best</name>
        <qualifiedname>examples.house.best</qualifiedname>
        <initializer>=  fmin(fn = obj_fmin, space = xgb_space, algo = tpe.suggest,
                    max_evals = 2000, verbose=False)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="195" column="1" bodyfile="examples/house.py" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1ab5772acae74caae3870e1ca71d7dc5e1" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::house.bds</definition>
        <argsstring></argsstring>
        <name>bds</name>
        <qualifiedname>examples.house.bds</qualifiedname>
        <initializer>=  [ {&apos;name&apos;: &apos;colsample_bytree&apos;, &apos;type&apos;: &apos;continuous&apos;, &apos;domain&apos;: (0.4, 0.8)},
            {&apos;name&apos;: &apos;gamma&apos;, &apos;type&apos;: &apos;continuous&apos;, &apos;domain&apos;: (0, 0.3)},
            {&apos;name&apos;: &apos;min_child_weight&apos;, &apos;type&apos;: &apos;continuous&apos;, &apos;domain&apos;: (1.5, 10)},
            {&apos;name&apos;: &apos;learning_rate&apos;, &apos;type&apos;: &apos;continuous&apos;, &apos;domain&apos;: (0.07, 0.1)},
            {&apos;name&apos;: &apos;max_depth&apos;, &apos;type&apos;: &apos;discrete&apos;, &apos;domain&apos;: (3, 5)},
            {&apos;name&apos;: &apos;reg_alpha&apos;, &apos;type&apos;: &apos;continuous&apos;, &apos;domain&apos;: (1e-5, 0.75)},
            {&apos;name&apos;: &apos;reg_lambda&apos;, &apos;type&apos;: &apos;continuous&apos;, &apos;domain&apos;: (1e-5, 0.45)},
            {&apos;name&apos;: &apos;subsample&apos;, &apos;type&apos;: &apos;continuous&apos;, &apos;domain&apos;: (0.6, 0.95)}]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="205" column="1" bodyfile="examples/house.py" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a263802c227189418de4d0c702eb18dce" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.optimizer</definition>
        <argsstring></argsstring>
        <name>optimizer</name>
        <qualifiedname>examples.house.optimizer</qualifiedname>
        <initializer>=  BayesianOptimization(f=cv_score,
                                     domain=bds,
                                     model_type=&apos;GP&apos;,
                                     acquisition_type =&apos;EI&apos;,
                                     acquisition_jitter = 0.05,
                                     exact_feval=True,
                                     maximize=True)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="214" column="1" bodyfile="examples/house.py" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a8b99c5a7ab3c241da3ed644965f2a715" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.max_iter</definition>
        <argsstring></argsstring>
        <name>max_iter</name>
        <qualifiedname>examples.house.max_iter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="222" column="1" bodyfile="examples/house.py" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a107282d610c5c3cd4e8bece6cafd4bd4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.y_bo</definition>
        <argsstring></argsstring>
        <name>y_bo</name>
        <qualifiedname>examples.house.y_bo</qualifiedname>
        <initializer>=  np.maximum.accumulate(-optimizer.Y).ravel()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="223" column="1" bodyfile="examples/house.py" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1aa1edc9c4f08ab5e9479e35f328a6743b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <qualifiedname>examples.house.bounds</qualifiedname>
        <initializer>=  Bounds([0.4, 0, 1.5, 0.07, 3, 1e-5, 1e-5, 0.6], [0.8, 0.3, 10, 0.1, 5.99, 0.75, 0.45, 0.95])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="236" column="1" bodyfile="examples/house.py" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a96d51c8d870c5843922de8007f346037" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.problem</definition>
        <argsstring></argsstring>
        <name>problem</name>
        <qualifiedname>examples.house.problem</qualifiedname>
        <initializer>=  cv_problem(obj_f, bounds)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="238" column="1" bodyfile="examples/house.py" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1house_1a1baee49f82585b83c248e153dbfeb95c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::house.ret</definition>
        <argsstring></argsstring>
        <name>ret</name>
        <qualifiedname>examples.house.ret</qualifiedname>
        <initializer>=  cmaes.minimize(problem.fun, problem.bounds, popsize=16, max_evaluations = 20000,
                          workers=mp.cpu_count(), delayed_update=True)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="247" column="1" bodyfile="examples/house.py" bodystart="247" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.house.ConverNaNToNAString</definition>
        <argsstring>(data, columnList)</argsstring>
        <name>ConverNaNToNAString</name>
        <qualifiedname>examples.house.ConverNaNToNAString</qualifiedname>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <param>
          <type>columnList</type>
          <defname>columnList</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="60" column="1" bodyfile="examples/house.py" bodystart="60" bodyend="63"/>
        <references refid="namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e" compoundref="house_8py" startline="60" endline="63">examples.house.ConverNaNToNAString</references>
        <referencedby refid="namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e" compoundref="house_8py" startline="60" endline="63">examples.house.ConverNaNToNAString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.house.cv_score</definition>
        <argsstring>(X)</argsstring>
        <name>cv_score</name>
        <qualifiedname>examples.house.cv_score</qualifiedname>
        <param>
          <type>X</type>
          <defname>X</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="133" column="1" bodyfile="examples/house.py" bodystart="133" bodyend="150"/>
        <referencedby refid="namespaceexamples_1_1house_1a8b9298c0123a93afcd0f36a42ac72230" compoundref="house_8py" startline="151" endline="153">examples.house.obj_f</referencedby>
        <referencedby refid="namespaceexamples_1_1house_1acb427336872b6d7e0fc0371ddc53dac7" compoundref="house_8py" startline="182" endline="184">examples.house.obj_fmin</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1house_1a8b9298c0123a93afcd0f36a42ac72230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.house.obj_f</definition>
        <argsstring>(X)</argsstring>
        <name>obj_f</name>
        <qualifiedname>examples.house.obj_f</qualifiedname>
        <param>
          <type>X</type>
          <defname>X</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="151" column="1" bodyfile="examples/house.py" bodystart="151" bodyend="153"/>
        <references refid="namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad" compoundref="house_8py" startline="133" endline="150">examples.house.cv_score</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1house_1acb427336872b6d7e0fc0371ddc53dac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.house.obj_fmin</definition>
        <argsstring>(X)</argsstring>
        <name>obj_fmin</name>
        <qualifiedname>examples.house.obj_fmin</qualifiedname>
        <param>
          <type>X</type>
          <defname>X</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/house.py" line="182" column="1" bodyfile="examples/house.py" bodystart="182" bodyend="184"/>
        <references refid="namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad" compoundref="house_8py" startline="133" endline="150">examples.house.cv_score</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1house" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>adapted<sp/>from<sp/>https://www.kaggle.com/pablocastilla/predict-house-prices-with-xgboost-regression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/HyperparameterOptimization.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np<sp/></highlight><highlight class="comment">#<sp/>linear<sp/>algebra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd<sp/></highlight><highlight class="comment">#<sp/>data<sp/>processing,<sp/>CSV<sp/>file<sp/>I/O<sp/>(e.g.<sp/>pd.read_csv)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>xgboost</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sklearn.model_selection<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cross_val_score</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sklearn.model_selection<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GridSearchCV<sp/><sp/></highlight><highlight class="comment">#Performing<sp/>grid<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>collections<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OrderedDict</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>xgboost<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>XGBRegressor</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dtime</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math,<sp/>time</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="30" refid="namespaceexamples_1_1house_1ab46c30f2c08d0d96db6520e8ca076d36" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">#<sp/>download<sp/>data<sp/>from<sp/>https://www.kaggle.com/c/house-prices-advanced-regression-techniques/data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespaceexamples_1_1house_1a3b0347fdd4de9dbe8215ffed52d37f4f" refkind="member"><highlight class="normal">train_dataset=pd.read_csv(</highlight><highlight class="stringliteral">&apos;../input/train.csv&apos;</highlight><highlight class="normal">,<sp/>header=0)</highlight></codeline>
<codeline lineno="35" refid="namespaceexamples_1_1house_1aed975c759441882937098ef4c190ca0d" refkind="member"><highlight class="normal">test_dataset=pd.read_csv(</highlight><highlight class="stringliteral">&apos;../input/test.csv&apos;</highlight><highlight class="normal">,<sp/>header=0)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespaceexamples_1_1house_1a82b43265e599352aa67170fb0dc01976" refkind="member"><highlight class="normal">categorical_features=[</highlight><highlight class="stringliteral">&apos;MSSubClass&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;MSZoning&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Street&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Alley&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;LotShape&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;LandContour&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Utilities&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LotConfig&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;LandSlope&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Neighborhood&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Condition1&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Condition2&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BldgType&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;HouseStyle&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;RoofStyle&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;RoofMatl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Exterior1st&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Exterior2nd&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;MasVnrType&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;ExterQual&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;ExterCond&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Foundation&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtQual&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtCond&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtExposure&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtFinType1&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtFinType2&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Heating&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;HeatingQC&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;CentralAir&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Electrical&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;KitchenQual&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Functional&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;FireplaceQu&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;GarageType&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;GarageFinish&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;GarageQual&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;GarageCond&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;PavedDrive&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;PoolQC&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Fence&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;MiscFeature&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;SaleType&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;SaleCondition&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="44" refid="namespaceexamples_1_1house_1a4b968b58512b3493a1c28ddcb1b62a17" refkind="member"><highlight class="normal">every_column_except_y=<sp/>[col<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>train_dataset.columns<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;SalePrice&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Id&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="45"><highlight class="normal">train_dataset.describe()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="namespaceexamples_1_1house_1a2edc9a3af1cf35065657d37aa6092d0b" refkind="member"><highlight class="normal">every_column_non_categorical=<sp/>[col<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>train_dataset.columns<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>categorical_features<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;Id&apos;</highlight><highlight class="normal">]<sp/>]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="namespaceexamples_1_1house_1ad86e27976b8a992dcc2d41b89bcc8db3" refkind="member"><highlight class="normal">numeric_feats<sp/>=<sp/>train_dataset[every_column_non_categorical].dtypes[train_dataset.dtypes<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">].index</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">train_dataset[numeric_feats]<sp/>=<sp/>np.log1p(train_dataset[numeric_feats])</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">every_column_non_categorical=<sp/>[col<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>test_dataset.columns<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>categorical_features<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;Id&apos;</highlight><highlight class="normal">]<sp/>]</highlight></codeline>
<codeline lineno="54"><highlight class="normal">numeric_feats<sp/>=<sp/>test_dataset[every_column_non_categorical].dtypes[test_dataset.dtypes<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">].index</highlight></codeline>
<codeline lineno="55"><highlight class="normal">test_dataset[numeric_feats]<sp/>=<sp/>np.log1p(test_dataset[numeric_feats])</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespaceexamples_1_1house_1a550e21ac7059371e4394896cfe2a7ba6" refkind="member"><highlight class="normal">features_with_nan=[</highlight><highlight class="stringliteral">&apos;Alley&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;MasVnrType&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtQual&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtQual&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtCond&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtCond&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtExposure&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BsmtFinType1&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BsmtFinType2&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;FireplaceQu&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;GarageType&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;GarageFinish&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">#function<sp/>that<sp/>creates<sp/>a<sp/>column<sp/>for<sp/>every<sp/>value<sp/>it<sp/>might<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e" kindref="member">ConverNaNToNAString</ref>(data,<sp/>columnList):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>columnList:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[x]<sp/>=str(data[x])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e" kindref="member">ConverNaNToNAString</ref>(train_dataset,<sp/>features_with_nan)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="namespaceexamples_1_1house_1ade8281dc8c65d8118f9d98154de6308e" kindref="member">ConverNaNToNAString</ref>(test_dataset,<sp/>features_with_nan)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">train_dataset<sp/>=<sp/>pd.get_dummies(train_dataset,columns<sp/>=<sp/>categorical_features)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">test_dataset<sp/>=<sp/>pd.get_dummies(test_dataset,columns<sp/>=<sp/>categorical_features)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="namespaceexamples_1_1house_1a51b5d2e283cc1d846c6fe369fea06a1f" refkind="member"><highlight class="normal">model<sp/>=<sp/>xgboost.XGBRegressor(colsample_bytree=0.4,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamma=0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learning_rate=0.07,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_depth=3,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_child_weight=1.5,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_estimators=10000,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_alpha=0.75,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_lambda=0.45,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsample=0.6,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seed=42)<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">every_column_except_y=<sp/>[col<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>train_dataset.columns<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>col<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;SalePrice&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Id&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="82"><highlight class="normal">model.fit(train_dataset[every_column_except_y],train_dataset[</highlight><highlight class="stringliteral">&apos;SalePrice&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="namespaceexamples_1_1house_1a992883b04b0f7d9481f373de9c5df398" refkind="member"><highlight class="normal">weighted_features<sp/>=<sp/>model.get_booster().get_score(importance_type=</highlight><highlight class="stringliteral">&apos;weight&apos;</highlight><highlight class="normal">).items()</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="namespaceexamples_1_1house_1a543dd25d1396426b86a8b84cc639ee16" refkind="member"><highlight class="normal">ordered_features<sp/>=<sp/>OrderedDict(sorted(weighted_features,<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>t:<sp/>t[1],<sp/>reverse=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="namespaceexamples_1_1house_1a59913344df23ab873d6a5d0ae217e90e" refkind="member"><highlight class="normal">most_relevant_features=<sp/>list(<sp/>dict((k,<sp/>v)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>weighted_features<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v<sp/>&gt;=<sp/>10).keys())</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">#removing<sp/>outliers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">train_dataset<sp/>=<sp/>train_dataset[train_dataset.GrLivArea<sp/>&lt;<sp/>8.25]</highlight></codeline>
<codeline lineno="92"><highlight class="normal">train_dataset<sp/>=<sp/>train_dataset[train_dataset.LotArea<sp/>&lt;<sp/>11.5]</highlight></codeline>
<codeline lineno="93"><highlight class="normal">train_dataset<sp/>=<sp/>train_dataset[train_dataset.SalePrice<sp/>&lt;<sp/>13]</highlight></codeline>
<codeline lineno="94"><highlight class="normal">train_dataset<sp/>=<sp/>train_dataset[train_dataset.SalePrice<sp/>&gt;<sp/>10.75]</highlight></codeline>
<codeline lineno="95" refid="namespaceexamples_1_1house_1a42ce97b3ca0226db9e4467e016d417cd" refkind="member"><highlight class="normal">train_dataset.drop(</highlight><highlight class="stringliteral">&quot;Id&quot;</highlight><highlight class="normal">,<sp/>axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="namespaceexamples_1_1house_1a1377c74d53c1100c7bbce092002e8362" refkind="member"><highlight class="normal">train_x=train_dataset[most_relevant_features]</highlight></codeline>
<codeline lineno="98" refid="namespaceexamples_1_1house_1aed17691e77bd8195b440e7e6c576c0d0" refkind="member"><highlight class="normal">train_y=train_dataset[</highlight><highlight class="stringliteral">&apos;SalePrice&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="namespaceexamples_1_1house_1a3c03a0234a2c71ef181d8e85ee11739d" refkind="member"><highlight class="normal">grid_search<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="namespaceexamples_1_1house_1ae1e3ec63d02fac6de46655b3bd0c22b9" refkind="member"><highlight class="normal">hyperopt<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="namespaceexamples_1_1house_1a58f1ee9db2b6804b6d00c152ad40b802" refkind="member"><highlight class="normal">bayesian<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="namespaceexamples_1_1house_1a5a3829e9f7c9a57a045c0b48719b1b51" refkind="member"><highlight class="normal">evolutionary<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">#<sp/>grid<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>grid_search:</highlight></codeline>
<codeline lineno="108" refid="namespaceexamples_1_1house_1a5fc66d59169f22ab71835a11b5e9e932" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>parameters_for_testing<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;colsample_bytree&apos;</highlight><highlight class="normal">:[0.4,0.6,0.8],</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;gamma&apos;</highlight><highlight class="normal">:[0,0.03,0.1,0.3],</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;min_child_weight&apos;</highlight><highlight class="normal">:[1.5,6,10],</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;learning_rate&apos;</highlight><highlight class="normal">:[0.1,0.07],</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;max_depth&apos;</highlight><highlight class="normal">:[3,5],</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;n_estimators&apos;</highlight><highlight class="normal">:[10000],</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;reg_alpha&apos;</highlight><highlight class="normal">:[1e-5,<sp/>1e-2,<sp/><sp/>0.75],</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;reg_lambda&apos;</highlight><highlight class="normal">:[1e-5,<sp/>1e-2,<sp/>0.45],</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;subsample&apos;</highlight><highlight class="normal">:[0.6,0.95]<sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="namespaceexamples_1_1house_1a5e0260102b4af1ca5b85c5472d09b2e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>xgb_model<sp/>=<sp/>xgboost.XGBRegressor(learning_rate<sp/>=0.1,<sp/>n_estimators=1000,<sp/>max_depth=5,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_child_weight=1,<sp/>gamma=0,<sp/>subsample=0.8,<sp/>colsample_bytree=0.8,<sp/>nthread=6,<sp/>scale_pos_weight=1,<sp/>seed=27)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="123" refid="namespaceexamples_1_1house_1a2732c74b853863a101cac2999de77e08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch<sp/>=<sp/>GridSearchCV(estimator<sp/>=<sp/>xgb_model,<sp/>param_grid<sp/>=<sp/>parameters_for_testing,<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_jobs=6,iid=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>verbose=100,<sp/>scoring=</highlight><highlight class="stringliteral">&apos;neg_mean_squared_error&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch.fit(train_x,<sp/>train_y)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#visualize<sp/>the<sp/>best<sp/>couple<sp/>of<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(gsearch.best_params_)<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Optimization<sp/>objective<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad" kindref="member">cv_score</ref>(X):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>X<sp/>=<sp/>X[0]<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>score<sp/>=<sp/>cross_val_score(</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XGBRegressor(colsample_bytree=X[0],</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamma=X[1],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_child_weight=X[2],</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learning_rate=X[3],</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_depth=int(X[4]),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_estimators=10000,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_alpha=X[5],</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_lambda=X[6],</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsample=X[7],<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_jobs=1<sp/></highlight><highlight class="comment">#<sp/>required<sp/>for<sp/>cmaes<sp/>with<sp/>multiple<sp/>workers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>train_x,<sp/>train_y,<sp/>scoring=</highlight><highlight class="stringliteral">&apos;neg_mean_squared_error&apos;</highlight><highlight class="normal">).mean()</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array(score)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="namespaceexamples_1_1house_1a8b9298c0123a93afcd0f36a42ac72230" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1house_1a8b9298c0123a93afcd0f36a42ac72230" kindref="member">obj_f</ref>(X):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad" kindref="member">cv_score</ref>([X])</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classexamples_1_1house_1_1cv__problem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1house_1_1cv__problem" kindref="compound">cv_problem</ref>(object):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classexamples_1_1house_1_1cv__problem_1a5ab4547383841ff00ffb34758ea90f0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1house_1_1cv__problem_1a5ab4547383841ff00ffb34758ea90f0a" kindref="member">__init__</ref>(self,<sp/>pfun,<sp/>bounds):</highlight></codeline>
<codeline lineno="157" refid="classexamples_1_1house_1_1cv__problem_1a18240369becd1f47b5d8d2818cd7773b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1a18240369becd1f47b5d8d2818cd7773b" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cv_score&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classexamples_1_1house_1_1cv__problem_1a47e86edf09df1a3ee84d89fa89c18ac1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1a47e86edf09df1a3ee84d89fa89c18ac1" kindref="member">dim</ref><sp/>=<sp/>len(bounds.lb)</highlight></codeline>
<codeline lineno="159" refid="classexamples_1_1house_1_1cv__problem_1ac51707e91a75854aa1f4dbcb99aa5e0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1ac51707e91a75854aa1f4dbcb99aa5e0c" kindref="member">pfun</ref><sp/>=<sp/>pfun</highlight></codeline>
<codeline lineno="160" refid="classexamples_1_1house_1_1cv__problem_1a705b53208512700d7536b7caf171997b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1a705b53208512700d7536b7caf171997b" kindref="member">bounds</ref><sp/>=<sp/>bounds</highlight></codeline>
<codeline lineno="161" refid="classexamples_1_1house_1_1cv__problem_1ac5def97ca99e841fe6910fe0eccfba60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1ac5def97ca99e841fe6910fe0eccfba60" kindref="member">evals</ref><sp/>=<sp/>mp.RawValue(ct.c_int,<sp/>0)<sp/></highlight></codeline>
<codeline lineno="162" refid="classexamples_1_1house_1_1cv__problem_1a57e1a06abf880f4f02944fa746deea27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1a57e1a06abf880f4f02944fa746deea27" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight></codeline>
<codeline lineno="163" refid="classexamples_1_1house_1_1cv__problem_1a2544581b4a19c5a1108142982c0f8e20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1a2544581b4a19c5a1108142982c0f8e20" kindref="member">t0</ref><sp/>=<sp/>time.perf_counter()</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classexamples_1_1house_1_1cv__problem_1a10c3ff3227c149ee1be4501cb49caa23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1house_1_1cv__problem_1a10c3ff3227c149ee1be4501cb49caa23" kindref="member">fun</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1ac5def97ca99e841fe6910fe0eccfba60" kindref="member">evals</ref>.value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1ac51707e91a75854aa1f4dbcb99aa5e0c" kindref="member">pfun</ref>(x)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1a57e1a06abf880f4f02944fa746deea27" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1house_1_1cv__problem_1a57e1a06abf880f4f02944fa746deea27" kindref="member">best_y</ref>.value<sp/>=<sp/>y</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(str(dtime(self.<ref refid="classexamples_1_1house_1_1cv__problem_1a2544581b4a19c5a1108142982c0f8e20" kindref="member">t0</ref>))<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/><sp/>+<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str(self.<ref refid="classexamples_1_1house_1_1cv__problem_1ac5def97ca99e841fe6910fe0eccfba60" kindref="member">evals</ref>.value)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str(self.<ref refid="classexamples_1_1house_1_1cv__problem_1a57e1a06abf880f4f02944fa746deea27" kindref="member">best_y</ref>.value)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str(list(x)))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">#<sp/>hyperopt<sp/>TPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hyperopt:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>hyperopt<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>fmin,<sp/>hp,<sp/>tpe,<sp/>STATUS_OK</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182" refid="namespaceexamples_1_1house_1acb427336872b6d7e0fc0371ddc53dac7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1house_1acb427336872b6d7e0fc0371ddc53dac7" kindref="member">obj_fmin</ref>(X):</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&apos;loss&apos;</highlight><highlight class="normal">:<sp/>-np.asscalar(<ref refid="namespaceexamples_1_1house_1a39b5eebf257563b87a88a9a5ef6ee5ad" kindref="member">cv_score</ref>([X])),<sp/></highlight><highlight class="stringliteral">&apos;status&apos;</highlight><highlight class="normal">:<sp/>STATUS_OK<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185" refid="namespaceexamples_1_1house_1afba8daf815562b6f56fad5a1a4923cfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>xgb_space<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hp.quniform(</highlight><highlight class="stringliteral">&apos;colsample_bytree&apos;</highlight><highlight class="normal">,<sp/>0.4,<sp/>0.8,<sp/>0.05),</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hp.quniform(</highlight><highlight class="stringliteral">&apos;gamma&apos;</highlight><highlight class="normal">,<sp/>0,<sp/>0.3,<sp/>0.05),</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hp.quniform(</highlight><highlight class="stringliteral">&apos;min_child_weight&apos;</highlight><highlight class="normal">,<sp/>1.5,<sp/>10,<sp/>0.5),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hp.quniform(</highlight><highlight class="stringliteral">&apos;learning_rate&apos;</highlight><highlight class="normal">,<sp/>0.07,<sp/>0.1,<sp/>0.05),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hp.choice(</highlight><highlight class="stringliteral">&apos;max_depth&apos;</highlight><highlight class="normal">,<sp/>[3,4,5]),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hp.uniform(</highlight><highlight class="stringliteral">&apos;reg_alpha&apos;</highlight><highlight class="normal">,<sp/>1e-5,<sp/>0.75),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hp.uniform(</highlight><highlight class="stringliteral">&apos;reg_lambda&apos;</highlight><highlight class="normal">,<sp/>1e-5,<sp/>0.45),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hp.uniform(</highlight><highlight class="stringliteral">&apos;subsample&apos;</highlight><highlight class="normal">,<sp/>0.6,<sp/>0.95)]</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195" refid="namespaceexamples_1_1house_1a0ad73fccd0afeaa8550811d87106dd5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>best<sp/>=<sp/>fmin(fn<sp/>=<sp/>obj_fmin,<sp/>space<sp/>=<sp/>xgb_space,<sp/>algo<sp/>=<sp/>tpe.suggest,<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evals<sp/>=<sp/>2000,<sp/>verbose=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Bayesian<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bayesian:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>GPyOpt.methods<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>BayesianOptimization</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="namespaceexamples_1_1house_1ab5772acae74caae3870e1ca71d7dc5e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bds<sp/>=<sp/>[<sp/>{</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;colsample_bytree&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;continuous&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;domain&apos;</highlight><highlight class="normal">:<sp/>(0.4,<sp/>0.8)},</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;gamma&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;continuous&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;domain&apos;</highlight><highlight class="normal">:<sp/>(0,<sp/>0.3)},</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;min_child_weight&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;continuous&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;domain&apos;</highlight><highlight class="normal">:<sp/>(1.5,<sp/>10)},</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;learning_rate&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;continuous&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;domain&apos;</highlight><highlight class="normal">:<sp/>(0.07,<sp/>0.1)},</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;max_depth&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;discrete&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;domain&apos;</highlight><highlight class="normal">:<sp/>(3,<sp/>5)},</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;reg_alpha&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;continuous&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;domain&apos;</highlight><highlight class="normal">:<sp/>(1e-5,<sp/>0.75)},</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;reg_lambda&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;continuous&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;domain&apos;</highlight><highlight class="normal">:<sp/>(1e-5,<sp/>0.45)},</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;subsample&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;continuous&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;domain&apos;</highlight><highlight class="normal">:<sp/>(0.6,<sp/>0.95)}]</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214" refid="namespaceexamples_1_1house_1a263802c227189418de4d0c702eb18dce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizer<sp/>=<sp/>BayesianOptimization(f=cv_score,<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domain=bds,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_type=</highlight><highlight class="stringliteral">&apos;GP&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquisition_type<sp/>=</highlight><highlight class="stringliteral">&apos;EI&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquisition_jitter<sp/>=<sp/>0.05,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exact_feval=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maximize=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222" refid="namespaceexamples_1_1house_1a8b99c5a7ab3c241da3ed644965f2a715" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizer.run_optimization(max_iter=20000)</highlight></codeline>
<codeline lineno="223" refid="namespaceexamples_1_1house_1a107282d610c5c3cd4e8bece6cafd4bd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>y_bo<sp/>=<sp/>np.maximum.accumulate(-optimizer.Y).ravel()</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;Bayesian<sp/>optimization<sp/>neg.<sp/>MSE<sp/>=<sp/>{y_bo[-1]:.2f}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">#<sp/>standard<sp/>evolutionary<sp/>algorithms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>evolutionary<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>mp.freeze_support()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>decpp,<sp/>cmaescpp,<sp/>bitecpp,<sp/>de,<sp/>cmaes</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cmaes<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>de</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236" refid="namespaceexamples_1_1house_1aa1edc9c4f08ab5e9479e35f328a6743b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds([0.4,<sp/>0,<sp/>1.5,<sp/>0.07,<sp/>3,<sp/>1e-5,<sp/>1e-5,<sp/>0.6],<sp/>[0.8,<sp/>0.3,<sp/>10,<sp/>0.1,<sp/>5.99,<sp/>0.75,<sp/>0.45,<sp/>0.95])</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="238" refid="namespaceexamples_1_1house_1a96d51c8d870c5843922de8007f346037" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="classexamples_1_1house_1_1cv__problem" kindref="compound">cv_problem</ref>(obj_f,<sp/>bounds)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>bitecpp.minimize(problem.fun,<sp/>problem.bounds,<sp/>max_evaluations<sp/>=<sp/>20000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>cmaescpp,<sp/>cmaes<sp/>and<sp/>de<sp/>with<sp/>multiple<sp/>workers<sp/>set<sp/>n_jobs=1<sp/>in<sp/>XGBRegressor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>cmaescpp.minimize(problem.fun,<sp/>problem.bounds,<sp/>popsize=32,<sp/>max_evaluations<sp/>=<sp/>20000,<sp/>workers=mp.cpu_count())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>decpp.minimize(problem.fun,<sp/>problem.dim,<sp/>problem.bounds,<sp/>popsize=16,<sp/>max_evaluations<sp/>=<sp/>20000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>delayed<sp/>state<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="namespaceexamples_1_1house_1a1baee49f82585b83c248e153dbfeb95c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>cmaes.minimize(problem.fun,<sp/>problem.bounds,<sp/>popsize=16,<sp/>max_evaluations<sp/>=<sp/>20000,<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers=mp.cpu_count(),<sp/>delayed_update=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>de.minimize(problem.fun,<sp/>problem.dim,<sp/>problem.bounds,<sp/>popsize<sp/>=<sp/>16,<sp/>max_evaluations<sp/>=<sp/>20000,<sp/>workers=mp.cpu_count())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/house.py"/>
  </compounddef>
</doxygen>

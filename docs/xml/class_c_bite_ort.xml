<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_c_bite_ort" kind="class" language="C++" prot="public">
    <compoundname>CBiteOrt</compoundname>
    <basecompoundref refid="class_c_bite_pop" prot="public" virt="virtual">CBitePop&lt; double &gt;</basecompoundref>
    <includes refid="biteort_8h" local="no">biteort.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_bite_ort_1a274b976da955293465fc9e49ae0a7d9c" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOrt::CentPow</definition>
        <argsstring></argsstring>
        <name>CentPow</name>
        <qualifiedname>CBiteOrt::CentPow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Centroid weighting power coefficient. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="59" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="59" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a2470177aa3f85af2a5a3daf548b7166e" compoundref="biteort_8h" startline="119" endline="141">updateWeights</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1a2cf9763b9162a1095afbff15239dfc6b" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOrt::CovUpdSlow</definition>
        <argsstring></argsstring>
        <name>CovUpdSlow</name>
        <qualifiedname>CBiteOrt::CovUpdSlow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Covariance matrix update rate, slow. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="61" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="61" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1a22c0f31f0b3b89b84de05419c3f755c8" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOrt::CovUpdFast</definition>
        <argsstring></argsstring>
        <name>CovUpdFast</name>
        <qualifiedname>CBiteOrt::CovUpdFast</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Covariance matrix update rate, fast. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="63" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="63" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1a0a177a216c024c0a9ceef4b191959958" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOrt::SigmaMulBase1</definition>
        <argsstring></argsstring>
        <name>SigmaMulBase1</name>
        <qualifiedname>CBiteOrt::SigmaMulBase1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sigma damping multiplier, for sphere. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="65" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1a7031aaff7a449354b8b9a4ad59d2f5ee" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOrt::SigmaMulBase2</definition>
        <argsstring></argsstring>
        <name>SigmaMulBase2</name>
        <qualifiedname>CBiteOrt::SigmaMulBase2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sigma damping multiplier, for needle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="67" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="67" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1aed92d35956a184cc13ad74c74821ffa4" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOrt::SigmaMulExp2</definition>
        <argsstring></argsstring>
        <name>SigmaMulExp2</name>
        <qualifiedname>CBiteOrt::SigmaMulExp2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sigma expansion multiplier, for needle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="69" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="69" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1af963cd0c9988f31971e375bd2aedf30d" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOrt::EvalFac</definition>
        <argsstring></argsstring>
        <name>EvalFac</name>
        <qualifiedname>CBiteOrt::EvalFac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The multiplier of the population size, affects the actual number of function evaluations performed, &gt;=1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="71" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="71" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
        <referencedby refid="class_c_bite_ort_1a2470177aa3f85af2a5a3daf548b7166e" compoundref="biteort_8h" startline="119" endline="141">updateWeights</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_bite_ort_1a957515315eac19649dcc69f57ecefa88" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOrt::CovParamsBuf</definition>
        <argsstring></argsstring>
        <name>CovParamsBuf</name>
        <qualifiedname>CBiteOrt::CovParamsBuf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CovParams buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="424" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="424" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" compoundref="biteort_8h" startline="474" endline="487">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1ac052c94187f7b767dbf31cb8c72e8914" compoundref="biteort_8h" startline="151" endline="172">init</referencedby>
        <referencedby refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" compoundref="biteort_8h" startline="447" endline="472">initBuffers</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1ae8c61d66cc14d42b4bc24ccc1b51fdde" prot="protected" static="no" mutable="no">
        <type>double **</type>
        <definition>double** CBiteOrt::CovParams</definition>
        <argsstring></argsstring>
        <name>CovParams</name>
        <qualifiedname>CBiteOrt::CovParams</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Covariance matrix. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="426" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="426" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" compoundref="biteort_8h" startline="474" endline="487">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1a77ae9fd22421595707c336bf14d3931a" compoundref="biteort_8h" startline="747" endline="778">eigen</referencedby>
        <referencedby refid="class_c_bite_ort_1ac052c94187f7b767dbf31cb8c72e8914" compoundref="biteort_8h" startline="151" endline="172">init</referencedby>
        <referencedby refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" compoundref="biteort_8h" startline="447" endline="472">initBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1a5bcc49be8d7e1b368a313ae2dd91063e" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOrt::BParamsBuf</definition>
        <argsstring></argsstring>
        <name>BParamsBuf</name>
        <qualifiedname>CBiteOrt::BParamsBuf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BParams buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="428" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="428" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" compoundref="biteort_8h" startline="474" endline="487">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1ac052c94187f7b767dbf31cb8c72e8914" compoundref="biteort_8h" startline="151" endline="172">init</referencedby>
        <referencedby refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" compoundref="biteort_8h" startline="447" endline="472">initBuffers</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" prot="protected" static="no" mutable="no">
        <type>double **</type>
        <definition>double** CBiteOrt::BParams</definition>
        <argsstring></argsstring>
        <name>BParams</name>
        <qualifiedname>CBiteOrt::BParams</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotation matrix. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="430" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="430" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" compoundref="biteort_8h" startline="474" endline="487">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1a77ae9fd22421595707c336bf14d3931a" compoundref="biteort_8h" startline="747" endline="778">eigen</referencedby>
        <referencedby refid="class_c_bite_ort_1ac052c94187f7b767dbf31cb8c72e8914" compoundref="biteort_8h" startline="151" endline="172">init</referencedby>
        <referencedby refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" compoundref="biteort_8h" startline="447" endline="472">initBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1a89dfc6c4e11b5e752b95d8e80f961a98" compoundref="biteort_8h" startline="308" endline="329">ort</referencedby>
        <referencedby refid="class_c_bite_ort_1a4e3cc10dcabfd6b1eb1ebf586b2670b0" compoundref="biteort_8h" startline="340" endline="356">ortnc</referencedby>
        <referencedby refid="class_c_bite_ort_1a0687c4810cab96a266d421eec88368fb" compoundref="biteort_8h" startline="397" endline="421">sample</referencedby>
        <referencedby refid="class_c_bite_ort_1a955555215281014f61c914f71963009c" compoundref="biteort_8h" startline="366" endline="387">unort</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1a6c75959d8b2bd12b909f4637eeb16db7" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOrt::DParams</definition>
        <argsstring></argsstring>
        <name>DParams</name>
        <qualifiedname>CBiteOrt::DParams</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Std. deviations vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="432" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="432" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" compoundref="biteort_8h" startline="474" endline="487">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1a77ae9fd22421595707c336bf14d3931a" compoundref="biteort_8h" startline="747" endline="778">eigen</referencedby>
        <referencedby refid="class_c_bite_ort_1ac052c94187f7b767dbf31cb8c72e8914" compoundref="biteort_8h" startline="151" endline="172">init</referencedby>
        <referencedby refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" compoundref="biteort_8h" startline="447" endline="472">initBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1a0687c4810cab96a266d421eec88368fb" compoundref="biteort_8h" startline="397" endline="421">sample</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1a73f4b5a868ea4cc2ef2f22c6841c263a" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOrt::DParamsN</definition>
        <argsstring></argsstring>
        <name>DParamsN</name>
        <qualifiedname>CBiteOrt::DParamsN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Std. deviations vector, for negative values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="434" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="434" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" compoundref="biteort_8h" startline="474" endline="487">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1ac052c94187f7b767dbf31cb8c72e8914" compoundref="biteort_8h" startline="151" endline="172">init</referencedby>
        <referencedby refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" compoundref="biteort_8h" startline="447" endline="472">initBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1a0687c4810cab96a266d421eec88368fb" compoundref="biteort_8h" startline="397" endline="421">sample</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1abcfbd9fc0b1d9620ad4fb8d396742f7c" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOrt::PrevCentParams</definition>
        <argsstring></argsstring>
        <name>PrevCentParams</name>
        <qualifiedname>CBiteOrt::PrevCentParams</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Previous centroid vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="436" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="436" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" compoundref="biteort_8h" startline="474" endline="487">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" compoundref="biteort_8h" startline="447" endline="472">initBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1ae73996fe205afb75041aa1d9d7ad473d" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOrt::WPopCent</definition>
        <argsstring></argsstring>
        <name>WPopCent</name>
        <qualifiedname>CBiteOrt::WPopCent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Weighting coefficients for ordered population, for centroid calculation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="438" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="438" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a0d9cf0f06f8e894e9432fdc4486bc24b" compoundref="biteort_8h" startline="787" endline="810">calcCent</referencedby>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" compoundref="biteort_8h" startline="474" endline="487">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" compoundref="biteort_8h" startline="447" endline="472">initBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1a2470177aa3f85af2a5a3daf548b7166e" compoundref="biteort_8h" startline="119" endline="141">updateWeights</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1a05fb4a934fae2cc11a491463cffbdbd5" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* CBiteOrt::WPopCov</definition>
        <argsstring></argsstring>
        <name>WPopCov</name>
        <qualifiedname>CBiteOrt::WPopCov</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Weighting coefficients for covariance calculation, squared. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="441" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="441" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" compoundref="biteort_8h" startline="75" endline="93">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" compoundref="biteort_8h" startline="474" endline="487">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" compoundref="biteort_8h" startline="447" endline="472">initBuffers</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
        <referencedby refid="class_c_bite_ort_1a2470177aa3f85af2a5a3daf548b7166e" compoundref="biteort_8h" startline="119" endline="141">updateWeights</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_ort_1a8323d1f7c3504e784d6a92682e54a97b" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteOrt::spc</definition>
        <argsstring></argsstring>
        <name>spc</name>
        <qualifiedname>CBiteOrt::spc</qualifiedname>
        <briefdescription>
<para>spherical. </para>
        </briefdescription>
        <detaileddescription>
<para>Distribution&apos;s sphericity coefficient. 1 - fully </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="444" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="444" bodyend="-1"/>
        <referencedby refid="class_c_bite_ort_1ac052c94187f7b767dbf31cb8c72e8914" compoundref="biteort_8h" startline="151" endline="172">init</referencedby>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_c_bite_ort_1a023600358736dab27643a71154164b8e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBiteOrt::CBiteOrt</definition>
        <argsstring>(const CBiteOrt &amp;)</argsstring>
        <name>CBiteOrt</name>
        <qualifiedname>CBiteOrt::CBiteOrt</qualifiedname>
        <param>
          <type>const <ref refid="class_c_bite_ort" kindref="compound">CBiteOrt</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="47" column="1" bodyfile="_fcmaescpp/include/biteort.h" bodystart="47" bodyend="50"/>
        <references refid="class_c_bite_ort_1a023600358736dab27643a71154164b8e" compoundref="biteort_8h" startline="47" endline="50">CBiteOrt</references>
        <referencedby refid="class_c_bite_ort_1a023600358736dab27643a71154164b8e" compoundref="biteort_8h" startline="47" endline="50">CBiteOrt</referencedby>
        <referencedby refid="class_c_bite_ort_1a9aac149388364c2c183f6a3c39d69d9d" compoundref="biteort_8h" startline="52" endline="56">operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a9aac149388364c2c183f6a3c39d69d9d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_bite_ort" kindref="compound">CBiteOrt</ref> &amp;</type>
        <definition>CBiteOrt &amp; CBiteOrt::operator=</definition>
        <argsstring>(const CBiteOrt &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>CBiteOrt::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_c_bite_ort" kindref="compound">CBiteOrt</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="52" column="10" bodyfile="_fcmaescpp/include/biteort.h" bodystart="52" bodyend="56"/>
        <references refid="class_c_bite_ort_1a023600358736dab27643a71154164b8e" compoundref="biteort_8h" startline="47" endline="50">CBiteOrt</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBiteOrt::CBiteOrt</definition>
        <argsstring>()</argsstring>
        <name>CBiteOrt</name>
        <qualifiedname>CBiteOrt::CBiteOrt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="75" column="1" bodyfile="_fcmaescpp/include/biteort.h" bodystart="75" bodyend="93"/>
        <references refid="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" compoundref="biteort_8h" startline="430">BParams</references>
        <references refid="class_c_bite_ort_1a5bcc49be8d7e1b368a313ae2dd91063e" compoundref="biteort_8h" startline="428">BParamsBuf</references>
        <references refid="class_c_bite_ort_1a274b976da955293465fc9e49ae0a7d9c" compoundref="biteort_8h" startline="59">CentPow</references>
        <references refid="class_c_bite_ort_1ae8c61d66cc14d42b4bc24ccc1b51fdde" compoundref="biteort_8h" startline="426">CovParams</references>
        <references refid="class_c_bite_ort_1a957515315eac19649dcc69f57ecefa88" compoundref="biteort_8h" startline="424">CovParamsBuf</references>
        <references refid="class_c_bite_ort_1a22c0f31f0b3b89b84de05419c3f755c8" compoundref="biteort_8h" startline="63">CovUpdFast</references>
        <references refid="class_c_bite_ort_1a2cf9763b9162a1095afbff15239dfc6b" compoundref="biteort_8h" startline="61">CovUpdSlow</references>
        <references refid="class_c_bite_ort_1a6c75959d8b2bd12b909f4637eeb16db7" compoundref="biteort_8h" startline="432">DParams</references>
        <references refid="class_c_bite_ort_1a73f4b5a868ea4cc2ef2f22c6841c263a" compoundref="biteort_8h" startline="434">DParamsN</references>
        <references refid="class_c_bite_ort_1af963cd0c9988f31971e375bd2aedf30d" compoundref="biteort_8h" startline="71">EvalFac</references>
        <references refid="class_c_bite_ort_1abcfbd9fc0b1d9620ad4fb8d396742f7c" compoundref="biteort_8h" startline="436">PrevCentParams</references>
        <references refid="class_c_bite_ort_1a0a177a216c024c0a9ceef4b191959958" compoundref="biteort_8h" startline="65">SigmaMulBase1</references>
        <references refid="class_c_bite_ort_1a7031aaff7a449354b8b9a4ad59d2f5ee" compoundref="biteort_8h" startline="67">SigmaMulBase2</references>
        <references refid="class_c_bite_ort_1aed92d35956a184cc13ad74c74821ffa4" compoundref="biteort_8h" startline="69">SigmaMulExp2</references>
        <references refid="class_c_bite_ort_1ae73996fe205afb75041aa1d9d7ad473d" compoundref="biteort_8h" startline="438">WPopCent</references>
        <references refid="class_c_bite_ort_1a05fb4a934fae2cc11a491463cffbdbd5" compoundref="biteort_8h" startline="441">WPopCov</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1ac3418aa5bb3f4e2735409038b56f98be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOrt::updateDims</definition>
        <argsstring>(const int aParamCount, const int aPopSize)</argsstring>
        <name>updateDims</name>
        <qualifiedname>CBiteOrt::updateDims</qualifiedname>
        <param>
          <type>const int</type>
          <declname>aParamCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>aPopSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates dimensions of *this object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements in the parameter vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPopSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of population used to calculate the rotation matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="103" column="6" bodyfile="_fcmaescpp/include/biteort.h" bodystart="103" bodyend="111"/>
        <references refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" compoundref="biteort_8h" startline="447" endline="472">initBuffers</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" compoundref="biteaux_8h" startline="1172">CBitePop&lt; double &gt;::PopSize</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a2470177aa3f85af2a5a3daf548b7166e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOrt::updateWeights</definition>
        <argsstring>(const int UsePopSize)</argsstring>
        <name>updateWeights</name>
        <qualifiedname>CBiteOrt::updateWeights</qualifiedname>
        <param>
          <type>const int</type>
          <declname>UsePopSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates centroid and covariance estimation weights.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>UsePopSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Population size to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="119" column="6" bodyfile="_fcmaescpp/include/biteort.h" bodystart="119" bodyend="141"/>
        <references refid="class_c_bite_ort_1a274b976da955293465fc9e49ae0a7d9c" compoundref="biteort_8h" startline="59">CentPow</references>
        <references refid="class_c_bite_ort_1af963cd0c9988f31971e375bd2aedf30d" compoundref="biteort_8h" startline="71">EvalFac</references>
        <references refid="class_c_bite_ort_1ae73996fe205afb75041aa1d9d7ad473d" compoundref="biteort_8h" startline="438">WPopCent</references>
        <references refid="class_c_bite_ort_1a05fb4a934fae2cc11a491463cffbdbd5" compoundref="biteort_8h" startline="441">WPopCov</references>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1ac052c94187f7b767dbf31cb8c72e8914" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOrt::init</definition>
        <argsstring>(const double *const InitCent=NULL, const double *const InitSigma=NULL)</argsstring>
        <name>init</name>
        <qualifiedname>CBiteOrt::init</qualifiedname>
        <param>
          <type>const double *const</type>
          <declname>InitCent</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const double *const</type>
          <declname>InitSigma</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes *this object to &quot;no rotation&quot; state, with the specified initial centroid and sigma.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>InitCent</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial centroids per parameter (NULL for origin). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitSigma</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial sigmas per parameter (NULL for 0.25). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="151" column="6" bodyfile="_fcmaescpp/include/biteort.h" bodystart="151" bodyend="172"/>
        <references refid="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" compoundref="biteort_8h" startline="430">BParams</references>
        <references refid="class_c_bite_ort_1a5bcc49be8d7e1b368a313ae2dd91063e" compoundref="biteort_8h" startline="428">BParamsBuf</references>
        <references refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" compoundref="biteaux_8h" startline="1193">CBitePop&lt; double &gt;::CentParams</references>
        <references refid="class_c_bite_ort_1ae8c61d66cc14d42b4bc24ccc1b51fdde" compoundref="biteort_8h" startline="426">CovParams</references>
        <references refid="class_c_bite_ort_1a957515315eac19649dcc69f57ecefa88" compoundref="biteort_8h" startline="424">CovParamsBuf</references>
        <references refid="class_c_bite_ort_1a6c75959d8b2bd12b909f4637eeb16db7" compoundref="biteort_8h" startline="432">DParams</references>
        <references refid="class_c_bite_ort_1a73f4b5a868ea4cc2ef2f22c6841c263a" compoundref="biteort_8h" startline="434">DParamsN</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_ort_1a8323d1f7c3504e784d6a92682e54a97b" compoundref="biteort_8h" startline="444">spc</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOrt::update</definition>
        <argsstring>(const CBitePop &amp;ExtPop)</argsstring>
        <name>update</name>
        <qualifiedname>CBiteOrt::update</qualifiedname>
        <param>
          <type>const <ref refid="class_c_bite_pop" kindref="compound">CBitePop</ref> &amp;</type>
          <declname>ExtPop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function performs rotation matrix update.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ExtPop</parametername>
</parameternamelist>
<parameterdescription>
<para>External population. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="180" column="6" bodyfile="_fcmaescpp/include/biteort.h" bodystart="180" bodyend="298"/>
        <references refid="class_c_bite_ort_1a0d9cf0f06f8e894e9432fdc4486bc24b" compoundref="biteort_8h" startline="787" endline="810">calcCent</references>
        <references refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" compoundref="biteaux_8h" startline="672" endline="681">CBitePop&lt; double &gt;::CBitePop</references>
        <references refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" compoundref="biteaux_8h" startline="1193">CBitePop&lt; double &gt;::CentParams</references>
        <references refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" compoundref="biteaux_8h" startline="1229" endline="1232">CBitePop&lt; double &gt;::copyParams</references>
        <references refid="class_c_bite_ort_1ae8c61d66cc14d42b4bc24ccc1b51fdde" compoundref="biteort_8h" startline="426">CovParams</references>
        <references refid="class_c_bite_ort_1a22c0f31f0b3b89b84de05419c3f755c8" compoundref="biteort_8h" startline="63">CovUpdFast</references>
        <references refid="class_c_bite_ort_1a2cf9763b9162a1095afbff15239dfc6b" compoundref="biteort_8h" startline="61">CovUpdSlow</references>
        <references refid="class_c_bite_ort_1a51833c929e82998422cb7c0910378d62" compoundref="biteort_8h" startline="821" endline="833">dotp</references>
        <references refid="class_c_bite_ort_1a6c75959d8b2bd12b909f4637eeb16db7" compoundref="biteort_8h" startline="432">DParams</references>
        <references refid="class_c_bite_ort_1a73f4b5a868ea4cc2ef2f22c6841c263a" compoundref="biteort_8h" startline="434">DParamsN</references>
        <references refid="class_c_bite_ort_1a77ae9fd22421595707c336bf14d3931a" compoundref="biteort_8h" startline="747" endline="778">eigen</references>
        <references refid="class_c_bite_ort_1af963cd0c9988f31971e375bd2aedf30d" compoundref="biteort_8h" startline="71">EvalFac</references>
        <references refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" compoundref="biteaux_8h" startline="959" endline="962">CBitePop&lt; ptype &gt;::getCurPopSize</references>
        <references refid="class_c_bite_pop_1ac2a01e9eb6b884a0b318e4b914273acf" compoundref="biteaux_8h" startline="939" endline="942">CBitePop&lt; ptype &gt;::getPopParams</references>
        <references refid="class_c_bite_ort_1a4e3cc10dcabfd6b1eb1ebf586b2670b0" compoundref="biteort_8h" startline="340" endline="356">ortnc</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" compoundref="biteaux_8h" startline="1182">CBitePop&lt; double &gt;::PopParams</references>
        <references refid="class_c_bite_ort_1abcfbd9fc0b1d9620ad4fb8d396742f7c" compoundref="biteort_8h" startline="436">PrevCentParams</references>
        <references refid="class_c_bite_ort_1a0a177a216c024c0a9ceef4b191959958" compoundref="biteort_8h" startline="65">SigmaMulBase1</references>
        <references refid="class_c_bite_ort_1a7031aaff7a449354b8b9a4ad59d2f5ee" compoundref="biteort_8h" startline="67">SigmaMulBase2</references>
        <references refid="class_c_bite_ort_1aed92d35956a184cc13ad74c74821ffa4" compoundref="biteort_8h" startline="69">SigmaMulExp2</references>
        <references refid="class_c_bite_ort_1a8323d1f7c3504e784d6a92682e54a97b" compoundref="biteort_8h" startline="444">spc</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; double &gt;::TmpParams</references>
        <references refid="class_c_bite_ort_1a2470177aa3f85af2a5a3daf548b7166e" compoundref="biteort_8h" startline="119" endline="141">updateWeights</references>
        <references refid="class_c_bite_ort_1a05fb4a934fae2cc11a491463cffbdbd5" compoundref="biteort_8h" startline="441">WPopCov</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a89dfc6c4e11b5e752b95d8e80f961a98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOrt::ort</definition>
        <argsstring>(const double *const ip, double *const op)</argsstring>
        <name>ort</name>
        <qualifiedname>CBiteOrt::ort</qualifiedname>
        <param>
          <type>const double *const</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function applies orthogonalization (rotation) to the parameter vector, subtracting centroid vector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip</parametername>
</parameternamelist>
<parameterdescription>
<para>Input unorthogonalized vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">op</parametername>
</parameternamelist>
<parameterdescription>
<para>Output orthogonalized vector, can be equal to &quot;ip&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="308" column="6" bodyfile="_fcmaescpp/include/biteort.h" bodystart="308" bodyend="329"/>
        <references refid="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" compoundref="biteort_8h" startline="430">BParams</references>
        <references refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" compoundref="biteaux_8h" startline="1193">CBitePop&lt; double &gt;::CentParams</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; double &gt;::TmpParams</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a4e3cc10dcabfd6b1eb1ebf586b2670b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOrt::ortnc</definition>
        <argsstring>(const double *const ip, double *const op)</argsstring>
        <name>ortnc</name>
        <qualifiedname>CBiteOrt::ortnc</qualifiedname>
        <param>
          <type>const double *const</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function applies orthogonalization (rotation) to the parameter vector, without subtracting centroid vector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip</parametername>
</parameternamelist>
<parameterdescription>
<para>Input unorthogonalized vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">op</parametername>
</parameternamelist>
<parameterdescription>
<para>Output orthogonalized vector, should not be equal to &quot;ip&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="340" column="6" bodyfile="_fcmaescpp/include/biteort.h" bodystart="340" bodyend="356"/>
        <references refid="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" compoundref="biteort_8h" startline="430">BParams</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a955555215281014f61c914f71963009c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOrt::unort</definition>
        <argsstring>(const double *const ip, double *const op)</argsstring>
        <name>unort</name>
        <qualifiedname>CBiteOrt::unort</qualifiedname>
        <param>
          <type>const double *const</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function undos orthogonalization (rotation) of the parameter vector, adding centroid vector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip</parametername>
</parameternamelist>
<parameterdescription>
<para>Input orthogonalized vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">op</parametername>
</parameternamelist>
<parameterdescription>
<para>Output unorthogonalized vector, can be equal to &quot;ip&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="366" column="6" bodyfile="_fcmaescpp/include/biteort.h" bodystart="366" bodyend="387"/>
        <references refid="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" compoundref="biteort_8h" startline="430">BParams</references>
        <references refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" compoundref="biteaux_8h" startline="1193">CBitePop&lt; double &gt;::CentParams</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; double &gt;::TmpParams</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a0687c4810cab96a266d421eec88368fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOrt::sample</definition>
        <argsstring>(CBiteRnd &amp;rnd, double *const op) const</argsstring>
        <name>sample</name>
        <qualifiedname>CBiteOrt::sample</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function &quot;samples&quot; new random population vector making a random draw from the current distribution.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>Resulting vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="397" column="6" bodyfile="_fcmaescpp/include/biteort.h" bodystart="397" bodyend="421"/>
        <references refid="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" compoundref="biteort_8h" startline="430">BParams</references>
        <references refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" compoundref="biteaux_8h" startline="1193">CBitePop&lt; double &gt;::CentParams</references>
        <references refid="class_c_bite_ort_1a6c75959d8b2bd12b909f4637eeb16db7" compoundref="biteort_8h" startline="432">DParams</references>
        <references refid="class_c_bite_ort_1a73f4b5a868ea4cc2ef2f22c6841c263a" compoundref="biteort_8h" startline="434">DParamsN</references>
        <references refid="class_c_bite_rnd_1a3f6c22ff1f6f19de24f7c837530f31c4" compoundref="biteaux_8h" startline="282" endline="310">CBiteRnd::getGaussian</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; double &gt;::TmpParams</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CBiteOrt::initBuffers</definition>
        <argsstring>(const int aParamCount, const int aPopSize, const int aCnsCount=0, const int aObjCount=0)</argsstring>
        <name>initBuffers</name>
        <qualifiedname>CBiteOrt::initBuffers</qualifiedname>
        <reimplements refid="class_c_bite_pop_1a7488531e6b12accb61f068bbe654f580">initBuffers</reimplements>
        <param>
          <type>const int</type>
          <declname>aParamCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>aPopSize</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>aCnsCount</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>aObjCount</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes all common buffers, and &quot;PopSize&quot; variables. This function should be called when population&apos;s dimensions were changed. This function calls the <ref refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" kindref="member">deleteBuffers()</ref> function to release any derived classes&apos; allocated buffers. Allocates an additional vector for temporary use, which is at the same the last vector in the PopParams array. Derived classes should call this function of the base class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New parameter count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPopSize</parametername>
</parameternamelist>
<parameterdescription>
<para>New population size. If &lt;= 0, population buffers will not be allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCnsCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New constraint value count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aObjCount</parametername>
</parameternamelist>
<parameterdescription>
<para>New objective value count. If equals 0, a rank element will not be auto-added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="447" column="14" bodyfile="_fcmaescpp/include/biteort.h" bodystart="447" bodyend="472"/>
        <references refid="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" compoundref="biteort_8h" startline="430">BParams</references>
        <references refid="class_c_bite_ort_1a5bcc49be8d7e1b368a313ae2dd91063e" compoundref="biteort_8h" startline="428">BParamsBuf</references>
        <references refid="class_c_bite_ort_1ae8c61d66cc14d42b4bc24ccc1b51fdde" compoundref="biteort_8h" startline="426">CovParams</references>
        <references refid="class_c_bite_ort_1a957515315eac19649dcc69f57ecefa88" compoundref="biteort_8h" startline="424">CovParamsBuf</references>
        <references refid="class_c_bite_ort_1a6c75959d8b2bd12b909f4637eeb16db7" compoundref="biteort_8h" startline="432">DParams</references>
        <references refid="class_c_bite_ort_1a73f4b5a868ea4cc2ef2f22c6841c263a" compoundref="biteort_8h" startline="434">DParamsN</references>
        <references refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" compoundref="biteaux_8h" startline="1182">CBitePop&lt; double &gt;::PopParams</references>
        <references refid="class_c_bite_pop_1ac69b014720b11a472509b22588eaf6c3" compoundref="biteaux_8h" startline="1181">CBitePop&lt; double &gt;::PopParamsBuf</references>
        <references refid="class_c_bite_ort_1abcfbd9fc0b1d9620ad4fb8d396742f7c" compoundref="biteort_8h" startline="436">PrevCentParams</references>
        <references refid="class_c_bite_ort_1ae73996fe205afb75041aa1d9d7ad473d" compoundref="biteort_8h" startline="438">WPopCent</references>
        <references refid="class_c_bite_ort_1a05fb4a934fae2cc11a491463cffbdbd5" compoundref="biteort_8h" startline="441">WPopCov</references>
        <referencedby refid="class_c_bite_ort_1ac3418aa5bb3f4e2735409038b56f98be" compoundref="biteort_8h" startline="103" endline="111">updateDims</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CBiteOrt::deleteBuffers</definition>
        <argsstring>()</argsstring>
        <name>deleteBuffers</name>
        <qualifiedname>CBiteOrt::deleteBuffers</qualifiedname>
        <reimplements refid="class_c_bite_pop_1a47de1dedd30171e9fc9ae9475998d51d">deleteBuffers</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function deletes buffers previously allocated via the <ref refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" kindref="member">initBuffers()</ref> function. Derived classes should call this function of the base class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="474" column="14" bodyfile="_fcmaescpp/include/biteort.h" bodystart="474" bodyend="487"/>
        <references refid="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" compoundref="biteort_8h" startline="430">BParams</references>
        <references refid="class_c_bite_ort_1a5bcc49be8d7e1b368a313ae2dd91063e" compoundref="biteort_8h" startline="428">BParamsBuf</references>
        <references refid="class_c_bite_ort_1ae8c61d66cc14d42b4bc24ccc1b51fdde" compoundref="biteort_8h" startline="426">CovParams</references>
        <references refid="class_c_bite_ort_1a957515315eac19649dcc69f57ecefa88" compoundref="biteort_8h" startline="424">CovParamsBuf</references>
        <references refid="class_c_bite_ort_1a6c75959d8b2bd12b909f4637eeb16db7" compoundref="biteort_8h" startline="432">DParams</references>
        <references refid="class_c_bite_ort_1a73f4b5a868ea4cc2ef2f22c6841c263a" compoundref="biteort_8h" startline="434">DParamsN</references>
        <references refid="class_c_bite_ort_1abcfbd9fc0b1d9620ad4fb8d396742f7c" compoundref="biteort_8h" startline="436">PrevCentParams</references>
        <references refid="class_c_bite_ort_1ae73996fe205afb75041aa1d9d7ad473d" compoundref="biteort_8h" startline="438">WPopCent</references>
        <references refid="class_c_bite_ort_1a05fb4a934fae2cc11a491463cffbdbd5" compoundref="biteort_8h" startline="441">WPopCov</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a77ae9fd22421595707c336bf14d3931a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOrt::eigen</definition>
        <argsstring>()</argsstring>
        <name>eigen</name>
        <qualifiedname>CBiteOrt::eigen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function calculates eigenpairs of the current covariance matrix and updates DParams standard deviations vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="747" column="6" bodyfile="_fcmaescpp/include/biteort.h" bodystart="747" bodyend="778"/>
        <references refid="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" compoundref="biteort_8h" startline="430">BParams</references>
        <references refid="class_c_bite_ort_1ae8c61d66cc14d42b4bc24ccc1b51fdde" compoundref="biteort_8h" startline="426">CovParams</references>
        <references refid="class_c_bite_ort_1a6c75959d8b2bd12b909f4637eeb16db7" compoundref="biteort_8h" startline="432">DParams</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" compoundref="biteaux_8h" startline="1196">CBitePop&lt; double &gt;::TmpParams</references>
        <references refid="class_c_bite_ort_1a33285821015e487d6c933ed1d6385144" compoundref="biteort_8h" startline="649" endline="740">tql2</references>
        <references refid="class_c_bite_ort_1a5415d9c622dbc0b03f32c0f105a9169a" compoundref="biteort_8h" startline="493" endline="606">tred2</references>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a0d9cf0f06f8e894e9432fdc4486bc24b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOrt::calcCent</definition>
        <argsstring>(const double **const SortedParams, const int UsePopSize)</argsstring>
        <name>calcCent</name>
        <qualifiedname>CBiteOrt::calcCent</qualifiedname>
        <param>
          <type>const double **const</type>
          <declname>SortedParams</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>UsePopSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function calculates centroid vector of population, with weighting.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>SortedParams</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of sorted population vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UsePopSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Population size to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="787" column="6" bodyfile="_fcmaescpp/include/biteort.h" bodystart="787" bodyend="810"/>
        <references refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" compoundref="biteaux_8h" startline="1193">CBitePop&lt; double &gt;::CentParams</references>
        <references refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" compoundref="biteaux_8h" startline="1170">CBitePop&lt; double &gt;::ParamCount</references>
        <references refid="class_c_bite_ort_1ae73996fe205afb75041aa1d9d7ad473d" compoundref="biteort_8h" startline="438">WPopCent</references>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a51833c929e82998422cb7c0910378d62" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CBiteOrt::dotp</definition>
        <argsstring>(const double *const p1, const double *const p2, const int c) const</argsstring>
        <name>dotp</name>
        <qualifiedname>CBiteOrt::dotp</qualifiedname>
        <param>
          <type>const double *const</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const double *const</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function calculates dot product of two per-parameter population vectors.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter A&apos;s population vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter B&apos;s population vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Element count. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="821" column="8" bodyfile="_fcmaescpp/include/biteort.h" bodystart="821" bodyend="833"/>
        <referencedby refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" compoundref="biteort_8h" startline="180" endline="298">update</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_c_bite_ort_1a5415d9c622dbc0b03f32c0f105a9169a" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void CBiteOrt::tred2</definition>
        <argsstring>(const int n, double *d, double **V, double *e)</argsstring>
        <name>tred2</name>
        <qualifiedname>CBiteOrt::tred2</qualifiedname>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Householder triagonalization routine from JAMA package. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="493" column="13" bodyfile="_fcmaescpp/include/biteort.h" bodystart="493" bodyend="606"/>
        <referencedby refid="class_c_bite_ort_1a77ae9fd22421595707c336bf14d3931a" compoundref="biteort_8h" startline="747" endline="778">eigen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a5196abda80a361c2d6f40a9a79773123" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double CBiteOrt::hypot_</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>hypot_</name>
        <qualifiedname>CBiteOrt::hypot_</qualifiedname>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sqrt(a^2 + b^2) without under/overflow. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="612" column="15" bodyfile="_fcmaescpp/include/biteort.h" bodystart="612" bodyend="633"/>
        <referencedby refid="class_c_bite_ort_1a33285821015e487d6c933ed1d6385144" compoundref="biteort_8h" startline="649" endline="740">tql2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a1e68e963eb443af650525cd0d58ba57a" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double CBiteOrt::max_</definition>
        <argsstring>(const double a, const double b)</argsstring>
        <name>max_</name>
        <qualifiedname>CBiteOrt::max_</qualifiedname>
        <param>
          <type>const double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns maximum of 2 values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="639" column="15" bodyfile="_fcmaescpp/include/biteort.h" bodystart="639" bodyend="642"/>
        <referencedby refid="class_c_bite_ort_1a33285821015e487d6c933ed1d6385144" compoundref="biteort_8h" startline="649" endline="740">tql2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_ort_1a33285821015e487d6c933ed1d6385144" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void CBiteOrt::tql2</definition>
        <argsstring>(const int n, double *d, double **V, double *e)</argsstring>
        <name>tql2</name>
        <qualifiedname>CBiteOrt::tql2</qualifiedname>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Symmetric tridiagonal QL algorithm from JAMA package. Std. deviation vector sorting removed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteort.h" line="649" column="13" bodyfile="_fcmaescpp/include/biteort.h" bodystart="649" bodyend="740"/>
        <references refid="class_c_bite_ort_1a5196abda80a361c2d6f40a9a79773123" compoundref="biteort_8h" startline="612" endline="633">hypot_</references>
        <references refid="class_c_bite_ort_1a1e68e963eb443af650525cd0d58ba57a" compoundref="biteort_8h" startline="639" endline="642">max_</references>
        <referencedby refid="class_c_bite_ort_1a77ae9fd22421595707c336bf14d3931a" compoundref="biteort_8h" startline="747" endline="778">eigen</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Rotation matrix calculation class, based on the Eigen decomposition of the covariance matrix. Used to &quot;orthogonalize&quot; sample population. Applies weighting to population. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CBiteOrt</label>
        <link refid="class_c_bite_ort"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="2">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CBiteOrt</label>
        <link refid="class_c_bite_ort"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="2">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/biteort.h" line="44" column="1" bodyfile="_fcmaescpp/include/biteort.h" bodystart="45" bodyend="834"/>
    <listofallmembers>
      <member refid="class_c_bite_ort_1af37edb8ec1a7cec8f88169539952a1bb" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>BParams</name></member>
      <member refid="class_c_bite_ort_1a5bcc49be8d7e1b368a313ae2dd91063e" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>BParamsBuf</name></member>
      <member refid="class_c_bite_ort_1a0d9cf0f06f8e894e9432fdc4486bc24b" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>calcCent</name></member>
      <member refid="class_c_bite_pop_1ad4e3a3c5b7a25ad02ef0231bd3fe8388" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>calcLP1Coeff</name></member>
      <member refid="class_c_bite_ort_1a023600358736dab27643a71154164b8e" prot="private" virt="non-virtual"><scope>CBiteOrt</scope><name>CBiteOrt</name></member>
      <member refid="class_c_bite_ort_1a449fc81d0f3149cf3dcc1aed45b7a75f" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>CBiteOrt</name></member>
      <member refid="class_c_bite_pop_1ad427518ed1d47fbe3c2222b3a11badb7" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1a73402384f4b75abf6d956dc086ccf36e" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>CBitePop</name></member>
      <member refid="class_c_bite_pop_1ab6dec63b0ee3955563c2a3f815614f31" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>CentLPC</name></member>
      <member refid="class_c_bite_pop_1ac31d95bc1f383828e72bcf1eb499e949" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>CentParams</name></member>
      <member refid="class_c_bite_ort_1a274b976da955293465fc9e49ae0a7d9c" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>CentPow</name></member>
      <member refid="class_c_bite_pop_1a2bf725291723a8dcaa215496e3175471" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>CnsCount</name></member>
      <member refid="class_c_bite_pop_1a3fc2d887ae91be62fd9fc3100268e53c" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>copy</name></member>
      <member refid="class_c_bite_pop_1a24130fea35014433f142e3b9ed0f8929" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>copyParams</name></member>
      <member refid="class_c_bite_pop_1a57e751582761922bbabff1ddb7af277b" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>copyValues</name></member>
      <member refid="class_c_bite_ort_1ae8c61d66cc14d42b4bc24ccc1b51fdde" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>CovParams</name></member>
      <member refid="class_c_bite_ort_1a957515315eac19649dcc69f57ecefa88" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>CovParamsBuf</name></member>
      <member refid="class_c_bite_ort_1a22c0f31f0b3b89b84de05419c3f755c8" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>CovUpdFast</name></member>
      <member refid="class_c_bite_ort_1a2cf9763b9162a1095afbff15239dfc6b" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>CovUpdSlow</name></member>
      <member refid="class_c_bite_pop_1aa7c87b9148768d6104f8d3dfb5abebce" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>CurPopPos</name></member>
      <member refid="class_c_bite_pop_1adc98fbdebc2671ef0826245d8c472cc5" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>CurPopSize</name></member>
      <member refid="class_c_bite_pop_1a26b81c70200085e410cf83258e139f9b" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>CurPopSize1</name></member>
      <member refid="class_c_bite_pop_1aa5105ca75379f9a760dc9f0b9ea30ea7" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>CurPopSizeI</name></member>
      <member refid="class_c_bite_pop_1a4656171c63f1944ae045d6f222d9d33a" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>decrCurPopSize</name></member>
      <member refid="class_c_bite_ort_1a34a09edcccffb93ecb83ad4f8cd8365d" prot="protected" virt="virtual"><scope>CBiteOrt</scope><name>deleteBuffers</name></member>
      <member refid="class_c_bite_ort_1a51833c929e82998422cb7c0910378d62" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>dotp</name></member>
      <member refid="class_c_bite_ort_1a6c75959d8b2bd12b909f4637eeb16db7" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>DParams</name></member>
      <member refid="class_c_bite_ort_1a73f4b5a868ea4cc2ef2f22c6841c263a" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>DParamsN</name></member>
      <member refid="class_c_bite_ort_1a77ae9fd22421595707c336bf14d3931a" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>eigen</name></member>
      <member refid="class_c_bite_ort_1af963cd0c9988f31971e375bd2aedf30d" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>EvalFac</name></member>
      <member refid="class_c_bite_pop_1a5e6ccebb178353b084084f841b09042d" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>getCentroid</name></member>
      <member refid="class_c_bite_pop_1ad38d886687357797479e69098759476a" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>getCnsPtr</name></member>
      <member refid="class_c_bite_pop_1a0053ae41c70babe967c5931f491ea865" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>getCurParams</name></member>
      <member refid="class_c_bite_pop_1a7e1fbb7f7e9aaf8f73eb865fa4610185" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>getCurPopPos</name></member>
      <member refid="class_c_bite_pop_1a5aef425d751172e1fff38a455cb51d34" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>getCurPopSize</name></member>
      <member refid="class_c_bite_pop_1aecaac61269e65bda93cb2dc1a3a26091" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>getGaussianInt</name></member>
      <member refid="class_c_bite_pop_1ad6cbe6cfbf9954dcb6f8a223a5e1f36b" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>getObjPtr</name></member>
      <member refid="class_c_bite_pop_1aaa8e3f180accfedf21218cbed8ffbb79" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>getParamsOrdered</name></member>
      <member refid="class_c_bite_pop_1ac2a01e9eb6b884a0b318e4b914273acf" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>getPopParams</name></member>
      <member refid="class_c_bite_pop_1aa4f3255c9607f72eff280f8c3c09143f" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>getRankPtr</name></member>
      <member refid="class_c_bite_ort_1a5196abda80a361c2d6f40a9a79773123" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>hypot_</name></member>
      <member refid="class_c_bite_pop_1a48d6ede5c82534c973e0458726e820dd" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>incrCurPopSize</name></member>
      <member refid="class_c_bite_ort_1ac052c94187f7b767dbf31cb8c72e8914" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>init</name></member>
      <member refid="class_c_bite_ort_1a7f99eac373be63d512a4660ea9eaf040" prot="protected" virt="virtual"><scope>CBiteOrt</scope><name>initBuffers</name></member>
      <member refid="class_c_bite_pop_1ac9adf8849ed7251dadd94815e20bdee8" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>IntMantBits</name></member>
      <member refid="class_c_bite_pop_1a27448c9be1bed517e4a48aa656ca4f76" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>IntMantMask</name></member>
      <member refid="class_c_bite_pop_1a1302e3c2e578dd650aedb57e18645092" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>IntMantMult</name></member>
      <member refid="class_c_bite_pop_1a8c64d2e83f225b034df818b06b09ecd2" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>IntMantMult2</name></member>
      <member refid="class_c_bite_pop_1aeba03d86b17ed01a97dc8225c5598b2d" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>IntMantMultM</name></member>
      <member refid="class_c_bite_pop_1a8009a96dd8a678daaefc9410ba2e0a76" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>IntOverBits</name></member>
      <member refid="class_c_bite_ort_1a1e68e963eb443af650525cd0d58ba57a" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>max_</name></member>
      <member refid="class_c_bite_pop_1a41f29468becc588bea6ff3f842db93ea" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>NeedCentUpdate</name></member>
      <member refid="class_c_bite_pop_1a2f7c6a4707e23c21197ab32b71d900c7" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>ObjCount</name></member>
      <member refid="class_c_bite_ort_1a9aac149388364c2c183f6a3c39d69d9d" prot="private" virt="non-virtual"><scope>CBiteOrt</scope><name>operator=</name></member>
      <member refid="class_c_bite_pop_1ab18cf322db6ab186db1e19b53e34c232" prot="public" virt="non-virtual" ambiguityscope="CBitePop&lt; double &gt;::"><scope>CBiteOrt</scope><name>operator=</name></member>
      <member refid="class_c_bite_ort_1a89dfc6c4e11b5e752b95d8e80f961a98" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>ort</name></member>
      <member refid="class_c_bite_ort_1a4e3cc10dcabfd6b1eb1ebf586b2670b0" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>ortnc</name></member>
      <member refid="class_c_bite_pop_1a0dc6f7b3a19db513e349e68c3471f9fa" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>ParamCount</name></member>
      <member refid="class_c_bite_pop_1a884c9ad4c0327aaa0110a23a89f5697a" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>ParamCountI</name></member>
      <member refid="class_c_bite_pop_1a6d4a3479ca9e60de6cf4667d5b2937a5" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>PopCnsOffs</name></member>
      <member refid="class_c_bite_pop_1a3cdac0ad2cf5c8403f1f7676171f4e76" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>PopItemSize</name></member>
      <member refid="class_c_bite_pop_1a98e2af75120c4184b271c14d22acf9d4" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>PopObjOffs</name></member>
      <member refid="class_c_bite_pop_1a0c41790e473b70c5ec37986d0fb1f9a2" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>PopParams</name></member>
      <member refid="class_c_bite_pop_1ac69b014720b11a472509b22588eaf6c3" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>PopParamsBuf</name></member>
      <member refid="class_c_bite_pop_1a3ecc4ffcf1c6f3f9b4e4e5a873c481fe" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>PopRankOffs</name></member>
      <member refid="class_c_bite_pop_1a58e3bf5abc2fb4b1e173aa6cb3477bfb" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>PopSize</name></member>
      <member refid="class_c_bite_pop_1a0b64743a84d5af143d44e7f6e9f02ada" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>PopSize1</name></member>
      <member refid="class_c_bite_ort_1abcfbd9fc0b1d9620ad4fb8d396742f7c" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>PrevCentParams</name></member>
      <member refid="class_c_bite_pop_1a767519aa2fcc2667dc135a131bc9fd85" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>resetCurPopPos</name></member>
      <member refid="class_c_bite_ort_1a0687c4810cab96a266d421eec88368fb" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>sample</name></member>
      <member refid="class_c_bite_ort_1a0a177a216c024c0a9ceef4b191959958" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>SigmaMulBase1</name></member>
      <member refid="class_c_bite_ort_1a7031aaff7a449354b8b9a4ad59d2f5ee" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>SigmaMulBase2</name></member>
      <member refid="class_c_bite_ort_1aed92d35956a184cc13ad74c74821ffa4" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>SigmaMulExp2</name></member>
      <member refid="class_c_bite_ort_1a8323d1f7c3504e784d6a92682e54a97b" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>spc</name></member>
      <member refid="class_c_bite_pop_1acae90e3584dca8b6c08c70d7bd317729" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>TmpParams</name></member>
      <member refid="class_c_bite_ort_1a33285821015e487d6c933ed1d6385144" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>tql2</name></member>
      <member refid="class_c_bite_ort_1a5415d9c622dbc0b03f32c0f105a9169a" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>tred2</name></member>
      <member refid="class_c_bite_ort_1a955555215281014f61c914f71963009c" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>unort</name></member>
      <member refid="class_c_bite_ort_1ab718877f7b3014357fc44bc34391d827" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>update</name></member>
      <member refid="class_c_bite_pop_1a7850902dad276dcecea68559eaccc168" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>updateCentroid</name></member>
      <member refid="class_c_bite_ort_1ac3418aa5bb3f4e2735409038b56f98be" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>updateDims</name></member>
      <member refid="class_c_bite_pop_1aad999ddc8a2ed72ffaee0db7732c9f76" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>updatePop</name></member>
      <member refid="class_c_bite_ort_1a2470177aa3f85af2a5a3daf548b7166e" prot="public" virt="non-virtual"><scope>CBiteOrt</scope><name>updateWeights</name></member>
      <member refid="class_c_bite_ort_1ae73996fe205afb75041aa1d9d7ad473d" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>WPopCent</name></member>
      <member refid="class_c_bite_ort_1a05fb4a934fae2cc11a491463cffbdbd5" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>WPopCov</name></member>
      <member refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>wrapParam</name></member>
      <member refid="class_c_bite_pop_1a0d5ab322641bb1a091df91ff7ee630c4" prot="protected" virt="non-virtual"><scope>CBiteOrt</scope><name>zeroParams</name></member>
      <member refid="class_c_bite_pop_1ac386e4638d6fc6bd5370eeae895347c3" prot="public" virt="virtual"><scope>CBiteOrt</scope><name>~CBitePop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="spring_8py" kind="file" language="Python">
    <compoundname>spring.py</compoundname>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1spring">examples::spring</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1spring_1a55a6dd02772bb5070ce3d3ee23159536" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::spring.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.spring.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="33" column="1" bodyfile="examples/spring.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1spring_1aeded92414f5c10780704c6973ae03d81" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::spring.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.spring.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="33" column="1" bodyfile="examples/spring.py" bodystart="33" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" compoundref="spring_8py" startline="61" endline="71">examples.spring.print_result</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1spring_1a5c04a0e5f94323fd06f6650b9cad6511" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::spring.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.spring.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="33" column="1" bodyfile="examples/spring.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1spring_1ae6ba700de81ecca5fda9ecb43131e822" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::spring.bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <qualifiedname>examples.spring.bounds</qualifiedname>
        <initializer>=  Bounds([0.01, 0.01, 0.01], [20, 20, 20])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="36" column="1" bodyfile="examples/spring.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1spring_1a8e8a7e5d2cdf369ae80b7ff233303f5b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::spring.t0</definition>
        <argsstring></argsstring>
        <name>t0</name>
        <qualifiedname>examples.spring.t0</qualifiedname>
        <initializer>=  time.perf_counter();</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="89" column="1" bodyfile="examples/spring.py" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1spring_1afc682836ceabbcec865a7a97824dd4ea" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::spring.ret</definition>
        <argsstring></argsstring>
        <name>ret</name>
        <qualifiedname>examples.spring.ret</qualifiedname>
        <initializer>=  advretry.minimize(weight_penalty, bounds, num_retries = 320)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="90" column="1" bodyfile="examples/spring.py" bodystart="90" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1spring_1ab4b7a17b6f29a47a16b6e750c9f44b6a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.spring._feasible</definition>
        <argsstring>(x)</argsstring>
        <name>_feasible</name>
        <qualifiedname>examples.spring._feasible</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="38" column="1" bodyfile="examples/spring.py" bodystart="38" bodyend="41"/>
        <referencedby refid="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" compoundref="spring_8py" startline="61" endline="71">examples.spring.print_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1spring_1a682c6c4156dd71a76e42d83aa869de29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.spring.constraint_ineq</definition>
        <argsstring>(x)</argsstring>
        <name>constraint_ineq</name>
        <qualifiedname>examples.spring.constraint_ineq</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="42" column="1" bodyfile="examples/spring.py" bodystart="42" bodyend="47"/>
        <referencedby refid="namespaceexamples_1_1spring_1ad819bd367024b1a2ff5dcdcf9baf0f26" compoundref="spring_8py" startline="48" endline="50">examples.spring.penalty</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1spring_1ad819bd367024b1a2ff5dcdcf9baf0f26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.spring.penalty</definition>
        <argsstring>(x)</argsstring>
        <name>penalty</name>
        <qualifiedname>examples.spring.penalty</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="48" column="1" bodyfile="examples/spring.py" bodystart="48" bodyend="50"/>
        <references refid="namespaceexamples_1_1spring_1a682c6c4156dd71a76e42d83aa869de29" compoundref="spring_8py" startline="42" endline="47">examples.spring.constraint_ineq</references>
        <referencedby refid="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" compoundref="spring_8py" startline="61" endline="71">examples.spring.print_result</referencedby>
        <referencedby refid="namespaceexamples_1_1spring_1a39b97ec21efea793b97726fa1bdc4d0b" compoundref="spring_8py" startline="54" endline="60">examples.spring.weight_penalty</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1spring_1a44581395454773e536a02fcb79378602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.spring.weight</definition>
        <argsstring>(x)</argsstring>
        <name>weight</name>
        <qualifiedname>examples.spring.weight</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="51" column="1" bodyfile="examples/spring.py" bodystart="51" bodyend="53"/>
        <referencedby refid="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" compoundref="spring_8py" startline="61" endline="71">examples.spring.print_result</referencedby>
        <referencedby refid="namespaceexamples_1_1spring_1a39b97ec21efea793b97726fa1bdc4d0b" compoundref="spring_8py" startline="54" endline="60">examples.spring.weight_penalty</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1spring_1a39b97ec21efea793b97726fa1bdc4d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.spring.weight_penalty</definition>
        <argsstring>(x)</argsstring>
        <name>weight_penalty</name>
        <qualifiedname>examples.spring.weight_penalty</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="54" column="1" bodyfile="examples/spring.py" bodystart="54" bodyend="60"/>
        <references refid="namespaceexamples_1_1spring_1ad819bd367024b1a2ff5dcdcf9baf0f26" compoundref="spring_8py" startline="48" endline="50">examples.spring.penalty</references>
        <references refid="namespaceexamples_1_1spring_1a44581395454773e536a02fcb79378602" compoundref="spring_8py" startline="51" endline="53">examples.spring.weight</references>
        <referencedby refid="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" compoundref="spring_8py" startline="61" endline="71">examples.spring.print_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.spring.print_result</definition>
        <argsstring>(ret, best, t0, i)</argsstring>
        <name>print_result</name>
        <qualifiedname>examples.spring.print_result</qualifiedname>
        <param>
          <type>ret</type>
          <defname>ret</defname>
        </param>
        <param>
          <type>best</type>
          <defname>best</defname>
        </param>
        <param>
          <type>t0</type>
          <defname>t0</defname>
        </param>
        <param>
          <type>i</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="61" column="1" bodyfile="examples/spring.py" bodystart="61" bodyend="71"/>
        <references refid="namespaceexamples_1_1spring_1ab4b7a17b6f29a47a16b6e750c9f44b6a" compoundref="spring_8py" startline="38" endline="41">examples.spring._feasible</references>
        <references refid="namespaceexamples_1_1spring_1aeded92414f5c10780704c6973ae03d81" compoundref="spring_8py" startline="33">examples.spring.format</references>
        <references refid="namespaceexamples_1_1spring_1ad819bd367024b1a2ff5dcdcf9baf0f26" compoundref="spring_8py" startline="48" endline="50">examples.spring.penalty</references>
        <references refid="namespaceexamples_1_1spring_1a44581395454773e536a02fcb79378602" compoundref="spring_8py" startline="51" endline="53">examples.spring.weight</references>
        <references refid="namespaceexamples_1_1spring_1a39b97ec21efea793b97726fa1bdc4d0b" compoundref="spring_8py" startline="54" endline="60">examples.spring.weight_penalty</references>
        <referencedby refid="namespaceexamples_1_1spring_1a4f4f0af3100172a2bbc0cb83f41b898b" compoundref="spring_8py" startline="72" endline="83">examples.spring.test_minimize_SLSQP</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1spring_1a4f4f0af3100172a2bbc0cb83f41b898b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.spring.test_minimize_SLSQP</definition>
        <argsstring>(fun, num)</argsstring>
        <name>test_minimize_SLSQP</name>
        <qualifiedname>examples.spring.test_minimize_SLSQP</qualifiedname>
        <param>
          <type>fun</type>
          <defname>fun</defname>
        </param>
        <param>
          <type>num</type>
          <defname>num</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/spring.py" line="72" column="1" bodyfile="examples/spring.py" bodystart="72" bodyend="83"/>
        <references refid="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" compoundref="spring_8py" startline="61" endline="71">examples.spring.print_result</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1spring" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>problem<sp/>consists<sp/>of<sp/>minimizing<sp/>the<sp/>weight<sp/>of<sp/>a<sp/>tension/compression<sp/>spring<sp/>subject<sp/>to<sp/>constraints<sp/>on<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>shear<sp/>stress,<sp/>surge<sp/>frequency<sp/>and<sp/>minimum<sp/>deflection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>design<sp/>variables<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>x1:<sp/>the<sp/>mean<sp/>coil<sp/>diameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>x2:<sp/>the<sp/>wire<sp/>diameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>x3:<sp/>the<sp/>number<sp/>of<sp/>active<sp/>coils</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>which<sp/>are<sp/>subject<sp/>to<sp/>four<sp/>inequality<sp/>constraints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>fcmaes<sp/>retry<sp/>used<sp/>with<sp/>a<sp/>penalty<sp/>for<sp/>constraint<sp/>violations<sp/>&apos;weight_penalty&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>works<sp/>as<sp/>well<sp/>as<sp/>scipy<sp/>minimize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>example<sp/>is<sp/>taken<sp/>from<sp/>https://www.sciencedirect.com/science/article/abs/pii/S0096300306015098</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds,<sp/>minimize</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dtime,<sp/>random_x,<sp/>logger</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry,<sp/>advretry</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="33" refid="namespaceexamples_1_1spring_1aeded92414f5c10780704c6973ae03d81" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespaceexamples_1_1spring_1ae6ba700de81ecca5fda9ecb43131e822" refkind="member"><highlight class="normal">bounds<sp/>=<sp/>Bounds([0.01,<sp/>0.01,<sp/>0.01],<sp/>[20,<sp/>20,<sp/>20])</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespaceexamples_1_1spring_1ab4b7a17b6f29a47a16b6e750c9f44b6a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1spring_1ab4b7a17b6f29a47a16b6e750c9f44b6a" kindref="member">_feasible</ref>(x):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.array(x)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.maximum(np.minimum(x,<sp/>bounds.ub),<sp/>bounds.lb)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="namespaceexamples_1_1spring_1a682c6c4156dd71a76e42d83aa869de29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1spring_1a682c6c4156dd71a76e42d83aa869de29" kindref="member">constraint_ineq</ref>(x):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[<sp/>x[1]**3<sp/>*<sp/>x[2]<sp/>/<sp/>(71785<sp/>*<sp/>x[0]**4)<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>-<sp/>(4*x[1]**2<sp/>-<sp/>x[0]*x[1])<sp/>/<sp/>(12566*(x[1]*x[0]**3<sp/>-<sp/>x[0]**4))<sp/>-<sp/>1/(5108*x[0]**2),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>140.45*x[0]/(x[1]**2<sp/>*<sp/>x[2])<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>-<sp/>(x[1]<sp/>+<sp/>x[0])<sp/>/<sp/>1.5]</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespaceexamples_1_1spring_1ad819bd367024b1a2ff5dcdcf9baf0f26" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1spring_1ad819bd367024b1a2ff5dcdcf9baf0f26" kindref="member">penalty</ref>(x):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<sp/>np.sum(np.minimum(<ref refid="namespaceexamples_1_1spring_1a682c6c4156dd71a76e42d83aa869de29" kindref="member">constraint_ineq</ref>(x),<sp/>0))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="namespaceexamples_1_1spring_1a44581395454773e536a02fcb79378602" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1spring_1a44581395454773e536a02fcb79378602" kindref="member">weight</ref>(x):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x[2]<sp/>+<sp/>2)<sp/>*<sp/>x[1]*x[0]**2</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespaceexamples_1_1spring_1a39b97ec21efea793b97726fa1bdc4d0b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1spring_1a39b97ec21efea793b97726fa1bdc4d0b" kindref="member">weight_penalty</ref>(x):<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="namespaceexamples_1_1spring_1a44581395454773e536a02fcb79378602" kindref="member">weight</ref>(x)<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val<sp/>+<sp/>100000*<ref refid="namespaceexamples_1_1spring_1ad819bd367024b1a2ff5dcdcf9baf0f26" kindref="member">penalty</ref>(x)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ZeroDivisionError:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1E99</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" kindref="member">print_result</ref>(ret,<sp/>best,<sp/>t0,<sp/>i):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="namespaceexamples_1_1spring_1ab4b7a17b6f29a47a16b6e750c9f44b6a" kindref="member">_feasible</ref>(ret.x)<sp/></highlight><highlight class="comment">#<sp/>make<sp/>sure<sp/>result<sp/>is<sp/>_feasible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/><ref refid="namespaceexamples_1_1spring_1a44581395454773e536a02fcb79378602" kindref="member">weight</ref>(x)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="namespaceexamples_1_1spring_1a39b97ec21efea793b97726fa1bdc4d0b" kindref="member">weight_penalty</ref>(x)<sp/></highlight><highlight class="comment">#<sp/>add<sp/>penalty<sp/>for<sp/>ineq<sp/>constraint<sp/>violation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>val<sp/>&lt;<sp/>best:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pen<sp/>=<sp/><ref refid="namespaceexamples_1_1spring_1ad819bd367024b1a2ff5dcdcf9baf0f26" kindref="member">penalty</ref>(x)<sp/></highlight><highlight class="comment">#<sp/>check<sp/>ineq<sp/>constraint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>min(val,<sp/>best)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>best<sp/>=<sp/>{2:.8f}<sp/>f(xmin)<sp/>=<sp/>{3:.8f}<sp/>ineq<sp/>=<sp/>{4:.5f}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1spring_1aeded92414f5c10780704c6973ae03d81" kindref="member">format</ref>(i+1,<sp/>dtime(t0),<sp/>best,<sp/>w,<sp/>pen))</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="namespaceexamples_1_1spring_1a4f4f0af3100172a2bbc0cb83f41b898b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1spring_1a4f4f0af3100172a2bbc0cb83f41b898b" kindref="member">test_minimize_SLSQP</ref>(fun,<sp/>num):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ineq_cons<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ineq&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;fun&apos;</highlight><highlight class="normal"><sp/>:<sp/>constraint_ineq}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>best<sp/>=<sp/>np.inf</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>time.perf_counter();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess<sp/>=<sp/>random_x(bounds.lb,<sp/>bounds.ub)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>minimize(fun,<sp/>x0<sp/>=<sp/>guess,<sp/>bounds<sp/>=<sp/>bounds,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method=</highlight><highlight class="stringliteral">&apos;SLSQP&apos;</highlight><highlight class="normal">,<sp/>constraints=[ineq_cons])</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ret.success:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/><ref refid="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" kindref="member">print_result</ref>(ret,<sp/>best,<sp/>t0,<sp/>i)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>try<sp/>as<sp/>alternative<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>test_minimize_SLSQP(weight,<sp/>10000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="namespaceexamples_1_1spring_1a8e8a7e5d2cdf369ae80b7ff233303f5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>time.perf_counter();</highlight></codeline>
<codeline lineno="90" refid="namespaceexamples_1_1spring_1afc682836ceabbcec865a7a97824dd4ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>advretry.minimize(weight_penalty,<sp/>bounds,<sp/>num_retries<sp/>=<sp/>320)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ret<sp/>=<sp/>retry.minimize(weight_penalty,<sp/>bounds,<sp/>num_retries=32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1spring_1a5548a6c0d57e91af650b43407f2f1c60" kindref="member">print_result</ref>(ret,<sp/>10000,<sp/>t0,<sp/>0)</highlight></codeline>
    </programlisting>
    <location file="examples/spring.py"/>
  </compounddef>
</doxygen>

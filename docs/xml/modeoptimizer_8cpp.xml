<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="modeoptimizer_8cpp" kind="file" language="C++">
    <compoundname>modeoptimizer.cpp</compoundname>
    <includes local="no">Eigen/Core</includes>
    <includes local="no">iostream</includes>
    <includes local="no">float.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">ctime</includes>
    <includes local="no">random</includes>
    <includes local="no">queue</includes>
    <includes local="no">tuple</includes>
    <includes refid="evaluator_8h" local="yes">evaluator.h</includes>
    <incdepgraph>
      <node id="10">
        <label>evaluator.h</label>
        <link refid="evaluator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>_fcmaescpp/modeoptimizer.cpp</label>
        <link refid="modeoptimizer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Eigen/Core</label>
      </node>
      <node id="11">
        <label>algorithm</label>
      </node>
      <node id="15">
        <label>chrono</label>
      </node>
      <node id="16">
        <label>condition_variable</label>
      </node>
      <node id="6">
        <label>ctime</label>
      </node>
      <node id="4">
        <label>float.h</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>mutex</label>
      </node>
      <node id="17">
        <label>pcg_random.hpp</label>
      </node>
      <node id="8">
        <label>queue</label>
      </node>
      <node id="7">
        <label>random</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>thread</label>
      </node>
      <node id="9">
        <label>tuple</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmode__optimizer_1_1_mo_de_optimizer" prot="public">mode_optimizer::MoDeOptimizer</innerclass>
    <innernamespace refid="namespacemode__optimizer">mode_optimizer</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="modeoptimizer_8cpp_1a53418a6215cc2512fc8379c813113f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uintptr_t</type>
        <definition>uintptr_t initMODE_C</definition>
        <argsstring>(int64_t runid, int dim, int nobj, int ncon, int seed, double *lower, double *upper, bool *ints, int popsize, double F, double CR, double pro_c, double dis_c, double pro_m, double dis_m, bool nsga_update, double pareto_update, double min_mutate, double max_mutate)</argsstring>
        <name>initMODE_C</name>
        <param>
          <type>int64_t</type>
          <declname>runid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nobj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncon</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>upper</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ints</declname>
        </param>
        <param>
          <type>int</type>
          <declname>popsize</declname>
        </param>
        <param>
          <type>double</type>
          <declname>F</declname>
        </param>
        <param>
          <type>double</type>
          <declname>CR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pro_c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dis_c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pro_m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dis_m</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nsga_update</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pareto_update</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min_mutate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_mutate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/modeoptimizer.cpp" line="583" column="11" bodyfile="_fcmaescpp/modeoptimizer.cpp" bodystart="583" bodyend="604"/>
        <references refid="evaluator_8h_1ad0943ebd623281f526e5aee2aa818895" compoundref="evaluator_8h" startline="86" endline="88">noop_callback</references>
        <references refid="evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e" compoundref="evaluator_8h" startline="90" endline="91">noop_callback_par</references>
      </memberdef>
      <memberdef kind="function" id="modeoptimizer_8cpp_1a43f7e368f8a09a95d508319cb44fe371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroyMODE_C</definition>
        <argsstring>(uintptr_t ptr)</argsstring>
        <name>destroyMODE_C</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/modeoptimizer.cpp" line="606" column="6" bodyfile="_fcmaescpp/modeoptimizer.cpp" bodystart="606" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="modeoptimizer_8cpp_1a8ff81adfda62d091c1382712f6978a38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askMODE_C</definition>
        <argsstring>(uintptr_t ptr, double *xs)</argsstring>
        <name>askMODE_C</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/modeoptimizer.cpp" line="613" column="6" bodyfile="_fcmaescpp/modeoptimizer.cpp" bodystart="613" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="modeoptimizer_8cpp_1a58bdcf426555b30299f0c6d85d4f9a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tellMODE_C</definition>
        <argsstring>(uintptr_t ptr, double *ys)</argsstring>
        <name>tellMODE_C</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/modeoptimizer.cpp" line="625" column="5" bodyfile="_fcmaescpp/modeoptimizer.cpp" bodystart="625" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="modeoptimizer_8cpp_1a20d02a7aeece1745e03dcf6b3f70b929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setPopulationMODE_C</definition>
        <argsstring>(uintptr_t ptr, int size, double *xs, double *ys)</argsstring>
        <name>setPopulationMODE_C</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/modeoptimizer.cpp" line="639" column="5" bodyfile="_fcmaescpp/modeoptimizer.cpp" bodystart="639" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="modeoptimizer_8cpp_1a697667505911e8ffd72c2e14ea1b177b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tellMODE_switchC</definition>
        <argsstring>(uintptr_t ptr, double *ys, bool nsga_update, double pareto_update)</argsstring>
        <name>tellMODE_switchC</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ys</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nsga_update</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pareto_update</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/modeoptimizer.cpp" line="667" column="5" bodyfile="_fcmaescpp/modeoptimizer.cpp" bodystart="667" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="modeoptimizer_8cpp_1abbaf3a45fdaae9d07c37dee9b01875e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int populationMODE_C</definition>
        <argsstring>(uintptr_t ptr, double *xs)</argsstring>
        <name>populationMODE_C</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/modeoptimizer.cpp" line="681" column="5" bodyfile="_fcmaescpp/modeoptimizer.cpp" bodystart="681" bodyend="692"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen<sp/>based<sp/>implementation<sp/>of<sp/>multi<sp/>objective</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Differential<sp/>Evolution<sp/>using<sp/>the<sp/>DE/all/1<sp/>strategy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Requires<sp/>Eigen<sp/>version<sp/>&gt;=<sp/>3.4<sp/>because<sp/>new<sp/>slicing<sp/>capabilities<sp/>are<sp/>used,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://eigen.tuxfamily.org/dox-devel/group__TutorialSlicingIndexing.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>requires<sp/>https://github.com/bab2min/EigenRand<sp/>for<sp/>random<sp/>number<sp/>generation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can<sp/>switch<sp/>to<sp/>NSGA-II<sp/>like<sp/>population<sp/>update<sp/>via<sp/>parameter<sp/>&apos;nsga_update&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Then<sp/>it<sp/>works<sp/>essentially<sp/>like<sp/>NSGA-II<sp/>but<sp/>instead<sp/>of<sp/>the<sp/>tournament<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>whole<sp/>population<sp/>is<sp/>sorted<sp/>and<sp/>the<sp/>best<sp/>individuals<sp/>survive.<sp/>To<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>efficiently<sp/>the<sp/>crowd<sp/>distance<sp/>ordering<sp/>is<sp/>slightly<sp/>inaccurate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Supports<sp/>parallel<sp/>fitness<sp/>function<sp/>evaluation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Features<sp/>enhanced<sp/>multiple<sp/>constraint<sp/>ranking<sp/>(https://www.jstage.jst.go.jp/article/tjpnsec/11/2/11_18/_article/-char/en/)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>improving<sp/>its<sp/>performance<sp/>in<sp/>handling<sp/>constraints<sp/>for<sp/>engineering<sp/>design<sp/>optimization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enables<sp/>the<sp/>comparison<sp/>of<sp/>DE<sp/>and<sp/>NSGA-II<sp/>population<sp/>update<sp/>mechanism<sp/>with<sp/>everything<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kept<sp/>completely<sp/>identical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Uses<sp/>the<sp/>following<sp/>deviation<sp/>from<sp/>the<sp/>standard<sp/>DE<sp/>algorithm:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a)<sp/>oscillating<sp/>CR/F<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>keep<sp/>parameters<sp/>F<sp/>and<sp/>CR<sp/>at<sp/>their<sp/>defaults<sp/>since<sp/>this<sp/>implementation<sp/>works<sp/>well<sp/>with<sp/>the<sp/>given<sp/>settings<sp/>for<sp/>most<sp/>problems,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>the<sp/>algorithm<sp/>oscillates<sp/>between<sp/>different<sp/>F<sp/>and<sp/>CR<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>expensive<sp/>objective<sp/>functions<sp/>(e.g.<sp/>machine<sp/>learning<sp/>parameter<sp/>optimization)<sp/>use<sp/>the<sp/>workers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parameter<sp/>to<sp/>parallelize<sp/>objective<sp/>function<sp/>evaluation.<sp/>The<sp/>workers<sp/>parameter<sp/>is<sp/>limited<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>population<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ints<sp/>parameter<sp/>is<sp/>a<sp/>boolean<sp/>array<sp/>indicating<sp/>which<sp/>parameters<sp/>are<sp/>discrete<sp/>integer<sp/>values.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parameter<sp/>was<sp/>introduced<sp/>after<sp/>observing<sp/>non<sp/>optimal<sp/>DE-results<sp/>for<sp/>the<sp/>ESP2<sp/>benchmark<sp/>problem:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/AlgTUDelft/ExpensiveOptimBenchmark/blob/master/expensiveoptimbenchmark/problems/DockerCFDBenchmark.py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>defined<sp/>it<sp/>causes<sp/>a<sp/>&quot;special<sp/>treatment&quot;<sp/>for<sp/>discrete<sp/>variables:<sp/>They<sp/>are<sp/>rounded<sp/>to<sp/>the<sp/>next<sp/>integer<sp/>value<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>an<sp/>additional<sp/>mutation<sp/>to<sp/>avoid<sp/>getting<sp/>stuck<sp/>at<sp/>local<sp/>minima.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="evaluator_8h" kindref="compound">evaluator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="namespacemode__optimizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemode__optimizer" kindref="compound">mode_optimizer</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classmode__optimizer_1_1_mo_de_optimizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a163da18af0bf36f7d599a5ab0b0915b6" kindref="member">MoDeOptimizer</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classmode__optimizer_1_1_mo_de_optimizer_1a163da18af0bf36f7d599a5ab0b0915b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a163da18af0bf36f7d599a5ab0b0915b6" kindref="member">MoDeOptimizer</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>runid_,<sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>*fitfun_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nobj_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncon_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize_,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>F_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CR_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pro_c_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dis_c_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pro_m_,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dis_m_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nsga_update_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pareto_update_,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_mutate_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_mutate_,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*isInt_)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>runid<sp/>used<sp/>to<sp/>identify<sp/>a<sp/>specific<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa80910f343eea5e7a618f3fe7b2caf25" kindref="member">runid</ref><sp/>=<sp/>runid_;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fitness<sp/>function<sp/>to<sp/>minimize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82" kindref="member">fitfun</ref><sp/>=<sp/>fitfun_;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>objective<sp/>variables/problem<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref><sp/>=<sp/>dim_;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>objectives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d" kindref="member">nobj</ref><sp/>=<sp/>nobj_;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7" kindref="member">ncon</ref><sp/>=<sp/>ncon_;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Population<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref><sp/>=<sp/>popsize_<sp/>&gt;<sp/>0<sp/>?<sp/>popsize_<sp/>:<sp/>128;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DE<sp/>population<sp/>update<sp/>parameters,<sp/>ignored<sp/>if<sp/>nsga_update<sp/>==<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a21094b0a99aaed9a1e16ebde53afe8cc" kindref="member">F</ref><sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa08b5b7d015ba33ad43f3a6fe11869f4" kindref="member">F0</ref><sp/>=<sp/>F_<sp/>&gt;<sp/>0<sp/>?<sp/>F_<sp/>:<sp/>0.5;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8e089b2926237332790e44bbb4cda41f" kindref="member">CR</ref><sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a2e19fae27d9ed4687096dd8426b4cbeb" kindref="member">CR0</ref><sp/>=<sp/>CR_<sp/>&gt;<sp/>0<sp/>?<sp/>CR_<sp/>:<sp/>0.9;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>iterations<sp/>already<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b" kindref="member">iterations</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>evaluations<sp/>already<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a52b577c15bc193cdf3f61e0c270184e8" kindref="member">n_evals</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>of<sp/>current<sp/>x/y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ac06b17efdd21d372c4487f50dbfaf11b" kindref="member">pos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>pcg64(seed_);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NSGA<sp/>population<sp/>update<sp/>parameters,<sp/>ignored<sp/>if<sp/>nsga_update<sp/>==<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>usually<sp/>use<sp/>pro_c<sp/>=<sp/>1.0,<sp/>dis_c<sp/>=<sp/>20.0,<sp/>pro_m<sp/>=<sp/>1.0,<sp/>dis_m<sp/>=<sp/>20.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088" kindref="member">pro_c</ref><sp/>=<sp/>pro_c_;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a2629e1f2c634bf07a9606516515b6d3c" kindref="member">dis_c</ref><sp/>=<sp/>dis_c_;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a48225933ba93cf9b72b6dd748672944f" kindref="member">pro_m</ref><sp/>=<sp/>pro_m_;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1ae0187b26f0dce18fe523e9ad13ac6e" kindref="member">dis_m</ref><sp/>=<sp/>dis_m_;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>true,<sp/>use<sp/>NSGA<sp/>population<sp/>update,<sp/>if<sp/>false,<sp/>use<sp/>DE<sp/>population<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>DE<sp/>update<sp/>to<sp/>diversify<sp/>your<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f" kindref="member">nsga_update</ref><sp/>=<sp/>nsga_update_;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DE<sp/>population<sp/>update<sp/>parameter.<sp/>Only<sp/>applied<sp/>if<sp/>nsga_update<sp/>=<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Favor<sp/>better<sp/>solutions<sp/>for<sp/>sample<sp/>generation.<sp/>Default<sp/>0<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>all<sp/>population<sp/>members<sp/>with<sp/>the<sp/>same<sp/>probability.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f" kindref="member">pareto_update</ref><sp/>=<sp/>pareto_update_;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DE<sp/>population<sp/>update<sp/>parameter<sp/>used<sp/>in<sp/>connection<sp/>with<sp/>isInt.<sp/>Determines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>mutation<sp/>rate<sp/>for<sp/>discrete<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a6c98f5bff98f17a004b99fb3430f9e55" kindref="member">min_mutate</ref><sp/>=<sp/>min_mutate_<sp/>&gt;<sp/>0<sp/>?<sp/>min_mutate_<sp/>:<sp/>0.1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a953467de91810e549f4bc0117ec73ad9" kindref="member">max_mutate</ref><sp/>=<sp/>max_mutate_<sp/>&gt;<sp/>0<sp/>?<sp/>max_mutate_<sp/>:<sp/>0.5;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicating<sp/>which<sp/>parameters<sp/>are<sp/>discrete<sp/>integer<sp/>values.<sp/>If<sp/>defined<sp/>these<sp/>parameters<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rounded<sp/>to<sp/>the<sp/>next<sp/>integer<sp/>and<sp/>some<sp/>additional<sp/>mutation<sp/>of<sp/>discrete<sp/>parameters<sp/>are<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5" kindref="member">isInt</ref><sp/>=<sp/>isInt_;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a09b8202d4c500c4a51410eeb48e79103" kindref="member">stop</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a5e864a8ba16fb9f3ab38260f7cbfa773" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>popX.leftCols(popsize)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classmode__optimizer_1_1_mo_de_optimizer_1aa809e16cec26180884d0762dff1283ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa809e16cec26180884d0762dff1283ec" kindref="member">~MoDeOptimizer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classmode__optimizer_1_1_mo_de_optimizer_1a0455034273652829d554dd3858b4b6e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a0455034273652829d554dd3858b4b6e1" kindref="member">variation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dis_c_<sp/>=<sp/>(0.5<sp/>*<sp/><ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>)<sp/>+<sp/>0.5)<sp/>*<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a2629e1f2c634bf07a9606516515b6d3c" kindref="member">dis_c</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dis_m_<sp/>=<sp/>(0.5<sp/>*<sp/><ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>)<sp/>+<sp/>0.5)<sp/>*<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1ae0187b26f0dce18fe523e9ad13ac6e" kindref="member">dis_m</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2<sp/>=<sp/>x.cols()<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>2<sp/>*<sp/>n2;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>parent1<sp/>=<sp/>x(Eigen::indexing::all,<sp/>Eigen::seq(0,<sp/>n2<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>parent2<sp/>=<sp/>x(Eigen::indexing::all,<sp/>Eigen::seq(n2,<sp/>n<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>beta<sp/>=<sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>,<sp/>n2);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>to1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088" kindref="member">pro_c</ref><sp/>&lt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to1<sp/>=<sp/><ref refid="evaluator_8h_1a28d3e754a2edfdf68753c5562acd87d0" kindref="member">uniformVec</ref>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>,<sp/>*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>n2;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>)<sp/>&gt;<sp/>0.5<sp/>||<sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088" kindref="member">pro_c</ref><sp/>&lt;<sp/>1.0<sp/>&amp;&amp;<sp/>to1(i)<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088" kindref="member">pro_c</ref>))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta(i,<sp/>p)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;=<sp/>0.5)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta(i,<sp/>p)<sp/>=<sp/>pow(2<sp/>*<sp/>r,<sp/>1.0<sp/>/<sp/>(dis_c_<sp/>+<sp/>1.0));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta(i,<sp/>p)<sp/>=<sp/>pow(2<sp/>*<sp/>r,<sp/>-1.0<sp/>/<sp/>(dis_c_<sp/>+<sp/>1.0));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>)<sp/>&gt;<sp/>0.5)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta(i,<sp/>p)<sp/>=<sp/>-beta(i,<sp/>p);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>offspring1<sp/>=<sp/>((parent1<sp/>+<sp/>parent2)<sp/>*<sp/>0.5);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>offspring2<sp/>=<sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref>(offspring1);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>delta<sp/>=<sp/>(beta.array()<sp/>*<sp/>(parent1<sp/>-<sp/>parent2).array()).matrix()<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring1<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring2<sp/>-=<sp/>delta;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>offspring<sp/>=<sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring<sp/>&lt;&lt;<sp/>offspring1,<sp/>offspring2;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>limit<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a48225933ba93cf9b72b6dd748672944f" kindref="member">pro_m</ref><sp/>/<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>scale<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82" kindref="member">fitfun</ref>-&gt;scale();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>n;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>)<sp/>&lt;<sp/>limit)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>site</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu<sp/>=<sp/><ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82" kindref="member">fitfun</ref>-&gt;norm_i(i,<sp/>offspring(i,<sp/>p));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mu<sp/>&lt;=<sp/>0.5)<sp/></highlight><highlight class="comment">//<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring(i,<sp/>p)<sp/>+=<sp/>scale(i)<sp/>*</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pow(2.<sp/>*<sp/>mu<sp/>+<sp/>(1.<sp/>-<sp/>2.<sp/>*<sp/>mu)<sp/>*<sp/>pow(1.<sp/>-<sp/>norm,<sp/>dis_m_<sp/>+<sp/>1.),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.<sp/>/<sp/>(dis_m_<sp/>+<sp/>1.))<sp/>-<sp/>1.);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring(i,<sp/>p)<sp/>+=<sp/>scale(i)<sp/>*</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1.<sp/>-<sp/>pow(2.<sp/>*<sp/>(1.<sp/>-<sp/>mu)<sp/>+<sp/>2.<sp/>*<sp/>(mu<sp/>-<sp/>0.5)<sp/>*<sp/>pow(1.<sp/>-<sp/>norm,<sp/>dis_m_<sp/>+<sp/>1.),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.<sp/>/<sp/>(dis_m_<sp/>+<sp/>1.)));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82" kindref="member">fitfun</ref>-&gt;setClosestFeasible(offspring);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offspring;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classmode__optimizer_1_1_mo_de_optimizer_1ae0edab6fb47d84a669d402f893ff4b6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae0edab6fb47d84a669d402f893ff4b6f" kindref="member">nextX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b" kindref="member">iterations</ref>++;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f" kindref="member">nsga_update</ref>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae6659d6638b70e97c73ef9dc81b1e0d2" kindref="member">vX</ref>.col(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7" kindref="member">vp</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7" kindref="member">vp</ref><sp/>=<sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7" kindref="member">vp</ref><sp/>+<sp/>1)<sp/>%<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>DE<sp/>update<sp/>strategy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8e089b2926237332790e44bbb4cda41f" kindref="member">CR</ref><sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b" kindref="member">iterations</ref><sp/>%<sp/>2<sp/>==<sp/>0<sp/>?<sp/>0.5<sp/>*<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a2e19fae27d9ed4687096dd8426b4cbeb" kindref="member">CR0</ref><sp/>:<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a2e19fae27d9ed4687096dd8426b4cbeb" kindref="member">CR0</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a21094b0a99aaed9a1e16ebde53afe8cc" kindref="member">F</ref><sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b" kindref="member">iterations</ref><sp/>%<sp/>2<sp/>==<sp/>0<sp/>?<sp/>0.5<sp/>*<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa08b5b7d015ba33ad43f3a6fe11869f4" kindref="member">F0</ref><sp/>:<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa08b5b7d015ba33ad43f3a6fe11869f4" kindref="member">F0</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>xp<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.col(p);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r1,<sp/>r2,<sp/>r3;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/><ref refid="evaluator_8h_1a3f89a72cbd8f38570fbb77117bdc7cbb" kindref="member">randInt</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>,<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>=<sp/><ref refid="evaluator_8h_1a3f89a72cbd8f38570fbb77117bdc7cbb" kindref="member">randInt</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>,<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f" kindref="member">pareto_update</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sample<sp/>elite<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r3<sp/>=<sp/>(int)<sp/>(pow(<ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>),<sp/>1.0<sp/>+<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f" kindref="member">pareto_update</ref>)<sp/>*<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sample<sp/>from<sp/>whole<sp/>population</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r3<sp/>=<sp/><ref refid="evaluator_8h_1a3f89a72cbd8f38570fbb77117bdc7cbb" kindref="member">randInt</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>,<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(r3<sp/>==<sp/>p<sp/>||<sp/>r3<sp/>==<sp/>r1<sp/>||<sp/>r3<sp/>==<sp/>r2<sp/>||<sp/>r2<sp/>==<sp/>p<sp/>||<sp/>r2<sp/>==<sp/>r1<sp/>||<sp/>r1<sp/>==<sp/>p);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x1<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.col(r1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x2<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.col(r2);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x3<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.col(r3);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x<sp/>=<sp/>x3<sp/>+<sp/>(x1<sp/>-<sp/>x2)<sp/>*<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a21094b0a99aaed9a1e16ebde53afe8cc" kindref="member">F</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="evaluator_8h_1a3f89a72cbd8f38570fbb77117bdc7cbb" kindref="member">randInt</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>,<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>r<sp/>&amp;&amp;<sp/><ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>)<sp/>&gt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8e089b2926237332790e44bbb4cda41f" kindref="member">CR</ref>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[j]<sp/>=<sp/>xp[j];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1af3c43901c39d8ee6f6ec5fb1d02f327e" kindref="member">modify</ref>(x);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82" kindref="member">fitfun</ref>-&gt;getClosestFeasible(x);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="classmode__optimizer_1_1_mo_de_optimizer_1af3c43901c39d8ee6f6ec5fb1d02f327e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1af3c43901c39d8ee6f6ec5fb1d02f327e" kindref="member">modify</ref>(<ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5" kindref="member">isInt</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_ints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5" kindref="member">isInt</ref>[i])</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_ints++;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to_mutate<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a6c98f5bff98f17a004b99fb3430f9e55" kindref="member">min_mutate</ref><sp/>+<sp/><ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>)<sp/>*<sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a953467de91810e549f4bc0117ec73ad9" kindref="member">max_mutate</ref><sp/>-<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a6c98f5bff98f17a004b99fb3430f9e55" kindref="member">min_mutate</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5" kindref="member">isInt</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="evaluator_8h_1a0007d50439e7d7122b6dd54d05c7c45b" kindref="member">rand01</ref>(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>)<sp/>&lt;<sp/>to_mutate<sp/>/<sp/>n_ints)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>=<sp/>(int)<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82" kindref="member">fitfun</ref>-&gt;sample_i(i,<sp/>*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>);<sp/></highlight><highlight class="comment">//<sp/>resample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classmode__optimizer_1_1_mo_de_optimizer_1a6ef6cfaa4da734c923fcdbf8692875f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a6ef6cfaa4da734c923fcdbf8692875f5" kindref="member">crowd_dist</ref>(<ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>&amp;y)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>crowd<sp/>distance<sp/>for<sp/>1st<sp/>objective</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>y.cols();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>y0<sp/>=<sp/>y.row(0);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d" kindref="member">ivec</ref><sp/>si<sp/>=<sp/><ref refid="evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c" kindref="member">sort_index</ref>(y0);<sp/></highlight><highlight class="comment">//<sp/>sort<sp/>1st<sp/>objective</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>y0s<sp/>=<sp/>y0(si);<sp/></highlight><highlight class="comment">//<sp/>sorted<sp/>y0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>d(n<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n<sp/>-<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d(i)<sp/>=<sp/>y0s[i<sp/>+<sp/>1]<sp/>-<sp/>y0s[i];<sp/></highlight><highlight class="comment">//<sp/>neighbor<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d.maxCoeff()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="evaluator_8h_1a909812174fa9829bc49f6e00edb00b90" kindref="member">zeros</ref>(n);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>dsum<sp/>=<sp/><ref refid="evaluator_8h_1a909812174fa9829bc49f6e00edb00b90" kindref="member">zeros</ref>(n);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsum(i)<sp/>+=<sp/>d(i<sp/>-<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>distance<sp/>to<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>n<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsum(i)<sp/>+=<sp/>d(i);<sp/></highlight><highlight class="comment">//<sp/><sp/>distance<sp/>to<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsum(0)<sp/>=<sp/>DBL_MAX;<sp/></highlight><highlight class="comment">//<sp/>keep<sp/>borders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsum(n<sp/>-<sp/>1)<sp/>=<sp/>DBL_MAX;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>ds(n);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds(si)<sp/>=<sp/>dsum;<sp/><sp/></highlight><highlight class="comment">//<sp/>inverse<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classmode__optimizer_1_1_mo_de_optimizer_1af5f89faff00f2714a594e1d60cd2d6e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1af5f89faff00f2714a594e1d60cd2d6e3" kindref="member">is_dominated</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>y.rows();<sp/>j++)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y(j)<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" kindref="member">popY</ref>(j,<sp/>p))</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classmode__optimizer_1_1_mo_de_optimizer_1a5e6806c59a545b96460af0bdbb3bfe27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a5e6806c59a545b96460af0bdbb3bfe27" kindref="member">is_dominated</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>&amp;y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>y.rows();<sp/>j++)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y(j,<sp/>i)<sp/>&lt;<sp/>y(j,<sp/>index))</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classmode__optimizer_1_1_mo_de_optimizer_1a10363d0716952c74500da8ca679dc95b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a10363d0716952c74500da8ca679dc95b" kindref="member">pareto_levels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>&amp;y)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>y.cols();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d" kindref="member">ivec</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a3762607fa33f7bb558fd7aae9690fc37" kindref="member">pareto</ref>(n);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a3762607fa33f7bb558fd7aae9690fc37" kindref="member">pareto</ref>(i)<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>domination<sp/>=<sp/><ref refid="evaluator_8h_1a909812174fa9829bc49f6e00edb00b90" kindref="member">zeros</ref>(n);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mask[n];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask[i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>n;)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>index<sp/>&amp;&amp;<sp/>mask[i]<sp/>&amp;&amp;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1af5f89faff00f2714a594e1d60cd2d6e3" kindref="member">is_dominated</ref>(y,<sp/>i,<sp/>index))</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask[i])</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domination[i]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!mask[index]<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>n)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;ypar<sp/>&quot;<sp/>&lt;&lt;<sp/>domination.transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>domination;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="classmode__optimizer_1_1_mo_de_optimizer_1a1d4ce60e415e141efaef2728d9952933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1d4ce60e415e141efaef2728d9952933" kindref="member">objranks</ref>(<ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>objs)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="evaluator_8h_1abf39fef19e3ec51cce88f380c3370bff" kindref="member">imat</ref><sp/>ci(objs.cols(),<sp/>objs.rows());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>objs.rows();<sp/>i++)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci.col(i)<sp/>=<sp/><ref refid="evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c" kindref="member">sort_index</ref>(objs.row(i).transpose());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>rank(objs.rows(),<sp/>objs.cols());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>objs.rows();<sp/>j++)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>objs.cols();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank(j,<sp/>ci(i,<sp/>j))<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rank.colwise().sum();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classmode__optimizer_1_1_mo_de_optimizer_1a7d415b38158a793f2a2d666e921d838b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a7d415b38158a793f2a2d666e921d838b" kindref="member">ranks</ref>(<ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>cons,<sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="evaluator_8h_1abf39fef19e3ec51cce88f380c3370bff" kindref="member">imat</ref><sp/>ci(cons.cols(),<sp/>cons.rows());</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cons.rows();<sp/>i++)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci.col(i)<sp/>=<sp/><ref refid="evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c" kindref="member">sort_index</ref>(cons.row(i).transpose());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>rank(cons.rows(),<sp/>cons.cols());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>alpha<sp/>=<sp/><ref refid="evaluator_8h_1a909812174fa9829bc49f6e00edb00b90" kindref="member">zeros</ref>(cons.cols());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>cons.rows();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cons.cols();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci_<sp/>=<sp/>ci(i,<sp/>j);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cons(j,<sp/>ci_)<sp/>&lt;=<sp/>eps[j])<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank(j,<sp/>ci_)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank(j,<sp/>ci_)<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha[ci_]++;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>cons.rows();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cons.cols();<sp/>i++)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank(j,<sp/>i)<sp/>*=<sp/>alpha[i]<sp/>/<sp/>cons.rows();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rank.colwise().sum();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="classmode__optimizer_1_1_mo_de_optimizer_1a3762607fa33f7bb558fd7aae9690fc37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a3762607fa33f7bb558fd7aae9690fc37" kindref="member">pareto</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>&amp;ys)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7" kindref="member">ncon</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a10363d0716952c74500da8ca679dc95b" kindref="member">pareto_levels</ref>(ys);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popn<sp/>=<sp/>ys.cols();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>yobj<sp/>=<sp/>ys(Eigen::seqN(0,<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d" kindref="member">nobj</ref>),<sp/>Eigen::indexing::all);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>ycon<sp/>=<sp/>ys(Eigen::indexing::lastN(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7" kindref="member">ncon</ref>),<sp/>Eigen::indexing::all).cwiseMax(0);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>eps<sp/>=<sp/><ref refid="evaluator_8h_1a909812174fa9829bc49f6e00edb00b90" kindref="member">zeros</ref>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7" kindref="member">ncon</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b" kindref="member">iterations</ref><sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a5b2332ae4d4347e6c2fbe7c361a3f4ac" kindref="member">lastCon</ref>.maxCoeff()<sp/>&lt;<sp/>1E90)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>eps_mean<sp/>=<sp/>0.5*(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a160a04578fb2ae6512edc6cb5cd642f3" kindref="member">lastEps</ref><sp/>+<sp/>0.5*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a5b2332ae4d4347e6c2fbe7c361a3f4ac" kindref="member">lastCon</ref>.rowwise().mean());</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eps_mean.maxCoeff()<sp/>&gt;<sp/>1E-8)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps<sp/>=<sp/>eps_mean;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;eps<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eps.transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a5b2332ae4d4347e6c2fbe7c361a3f4ac" kindref="member">lastCon</ref><sp/>=<sp/>ycon;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a160a04578fb2ae6512edc6cb5cd642f3" kindref="member">lastEps</ref><sp/>=<sp/>eps;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>feasible[ys.cols()];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasFeasable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasInfeasable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>popn;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feasible[i]<sp/>=<sp/>(ycon.col(i).array()<sp/>&lt;=<sp/>eps.array()).all();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(feasible[i])</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasFeasable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasInfeasable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>csum<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a7d415b38158a793f2a2d666e921d838b" kindref="member">ranks</ref>(ycon,<sp/>eps);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasFeasable)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csum<sp/>+=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1d4ce60e415e141efaef2728d9952933" kindref="member">objranks</ref>(yobj);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;csum<sp/>&quot;<sp/>&lt;&lt;<sp/>csum.transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;ranks<sp/>&quot;<sp/>&lt;&lt;<sp/>ranks(ycon).transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;objranks<sp/>&quot;<sp/>&lt;&lt;<sp/>objranks(yobj).transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d" kindref="member">ivec</ref><sp/>ci<sp/>=<sp/><ref refid="evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c" kindref="member">sort_index</ref>(csum);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>fiv;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>viv;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ci.size();<sp/>i++)<sp/></highlight><highlight class="comment">//<sp/>collect<sp/>feasibles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(feasible[ci[i]])</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fiv.push_back(ci[i]);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viv.push_back(ci[i]);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>domination<sp/>=<sp/><ref refid="evaluator_8h_1a909812174fa9829bc49f6e00edb00b90" kindref="member">zeros</ref>(popn);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasFeasable)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>compute<sp/>pareto<sp/>levels<sp/>only<sp/>for<sp/>feasible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d" kindref="member">ivec</ref><sp/>fi<sp/>=<sp/>Eigen::Map&lt;ivec,<sp/>Eigen::Unaligned&gt;(fiv.data(),<sp/>fiv.size());</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>ypar<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a10363d0716952c74500da8ca679dc95b" kindref="member">pareto_levels</ref>(yobj(Eigen::indexing::all,<sp/>fi));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domination(fi)<sp/>+=<sp/>ypar;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>constraint<sp/>violations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasInfeasable)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>higher<sp/>constraint<sp/>violation<sp/>level<sp/>gets<sp/>lower<sp/>domination<sp/>level<sp/>assigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>viv.size();<sp/>i++)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domination(viv[i])<sp/>+=<sp/>viv.size()<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fiv.size();<sp/>i++)<sp/></highlight><highlight class="comment">//<sp/>feasible<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domination(fiv[i])<sp/>+=<sp/>viv.size()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>higher<sp/>dominates<sp/>lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>domination;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="classmode__optimizer_1_1_mo_de_optimizer_1aed65680ebd6f773bab2c475fbb527827" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d" kindref="member">ivec</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aed65680ebd6f773bab2c475fbb527827" kindref="member">random_int_vector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>v;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(i);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::random_shuffle(v.begin(),<sp/>v.end());</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;ivec,<sp/>Eigen::Unaligned&gt;(v.data(),</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.size());</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="classmode__optimizer_1_1_mo_de_optimizer_1a8941e256d6ff3843da336b4473513363" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8941e256d6ff3843da336b4473513363" kindref="member">pop_update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>x0<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>y0<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" kindref="member">popY</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d" kindref="member">nobj</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d" kindref="member">ivec</ref><sp/>yi<sp/>=<sp/><ref refid="evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c" kindref="member">sort_index</ref>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" kindref="member">popY</ref>.row(0)).reverse();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>(Eigen::indexing::all,<sp/>yi);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" kindref="member">popY</ref>(Eigen::indexing::all,<sp/>yi);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>domination<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a3762607fa33f7bb558fd7aae9690fc37" kindref="member">pareto</ref>(y0);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;vec&gt;<sp/>x;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;vec&gt;<sp/>y;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxdom<sp/>=<sp/>(int)<sp/>domination.maxCoeff();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dom<sp/>=<sp/>maxdom;<sp/>dom<sp/>&gt;=<sp/>0;<sp/>dom--)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>level;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>domination.size();<sp/>i++)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(domination(i)<sp/>==<sp/>dom)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level.push_back(i);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d" kindref="member">ivec</ref><sp/>domlevel<sp/>=<sp/>Eigen::Map&lt;ivec,<sp/>Eigen::Unaligned&gt;(level.data(),</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level.size());</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>domx<sp/>=<sp/>x0(Eigen::indexing::all,<sp/>domlevel);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>domy<sp/>=<sp/>y0(Eigen::indexing::all,<sp/>domlevel);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(x.size()<sp/>+<sp/>domlevel.size())<sp/>&lt;=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whole<sp/>level<sp/>fits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>domy.cols();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.push_back(domx.col(i));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.push_back(domy.col(i));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(domy.cols()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>cd<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a6ef6cfaa4da734c923fcdbf8692875f5" kindref="member">crowd_dist</ref>(domy);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d" kindref="member">ivec</ref><sp/>si<sp/>=<sp/><ref refid="evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c" kindref="member">sort_index</ref>(cd).reverse();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>si.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>x.size())<sp/>&gt;=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.push_back(domx.col(si(i)));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.push_back(domy.col(si(i)));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.push_back(domx.col(0));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.push_back(domy.col(0));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;XXXXXXXX<sp/>&quot;<sp/>&lt;&lt;<sp/>level.size()<sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>domy.col(0)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>filled<sp/>popsize<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.col(i)<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" kindref="member">popY</ref>.col(i)<sp/>=<sp/>y[i];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f" kindref="member">nsga_update</ref>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae6659d6638b70e97c73ef9dc81b1e0d2" kindref="member">vX</ref><sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a0455034273652829d554dd3858b4b6e1" kindref="member">variation</ref>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.leftCols(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="classmode__optimizer_1_1_mo_de_optimizer_1a5abdc69324e8a71cfdebde3f5692e2ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a5abdc69324e8a71cfdebde3f5692e2ca" kindref="member">ask</ref>()<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae0edab6fb47d84a669d402f893ff4b6f" kindref="member">nextX</ref>(p);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.col(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref><sp/>+<sp/>p)<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.rightCols(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="classmode__optimizer_1_1_mo_de_optimizer_1ae75b13be3336c20b675886b7e0f0bb11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae75b13be3336c20b675886b7e0f0bb11" kindref="member">setX</ref>(<ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>xs)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x<sp/>=<sp/>xs.col(p);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.col(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref><sp/>+<sp/>p)<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="classmode__optimizer_1_1_mo_de_optimizer_1abe30b3010caaf8d4648b31adfa127fd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1abe30b3010caaf8d4648b31adfa127fd2" kindref="member">tell</ref>(<ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>ys)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>;<sp/>p++)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" kindref="member">popY</ref>.col(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref><sp/>+<sp/>p)<sp/>=<sp/>ys.col(p);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>p<sp/>&lt;&lt;<sp/>&quot;<sp/>x<sp/>&quot;<sp/>&lt;&lt;<sp/>popX.col(popsize<sp/>+<sp/>p).transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>p<sp/>&lt;&lt;<sp/>&quot;<sp/>y<sp/>&quot;<sp/>&lt;&lt;<sp/>ys.col(p).transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8941e256d6ff3843da336b4473513363" kindref="member">pop_update</ref>();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a09b8202d4c500c4a51410eeb48e79103" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classmode__optimizer_1_1_mo_de_optimizer_1a9d11baa8f5e4d3e4f68fe678918eb09a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a9d11baa8f5e4d3e4f68fe678918eb09a" kindref="member">tell</ref>(<ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>ys,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nsga_update_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pareto_update_)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f" kindref="member">nsga_update</ref><sp/>=<sp/>nsga_update_;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f" kindref="member">pareto_update</ref><sp/>=<sp/>pareto_update_;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1abe30b3010caaf8d4648b31adfa127fd2" kindref="member">tell</ref>(ys);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="classmode__optimizer_1_1_mo_de_optimizer_1ac0ac96eb437da4896667a45d11d37d17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ac0ac96eb437da4896667a45d11d37d17" kindref="member">getPopulation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.leftCols(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="classmode__optimizer_1_1_mo_de_optimizer_1a5e864a8ba16fb9f3ab38260f7cbfa773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a5e864a8ba16fb9f3ab38260f7cbfa773" kindref="member">init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref><sp/>=<sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>,<sp/>2<sp/>*<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" kindref="member">popY</ref><sp/>=<sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d" kindref="member">nobj</ref><sp/>+<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7" kindref="member">ncon</ref>,<sp/>2<sp/>*<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>.col(p)<sp/>=<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82" kindref="member">fitfun</ref>-&gt;sample(*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" kindref="member">popY</ref>.col(p)<sp/>=<sp/><ref refid="evaluator_8h_1a493b3a74ec3481711548e4b506b009cd" kindref="member">constant</ref>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d" kindref="member">nobj</ref><sp/>+<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7" kindref="member">ncon</ref>,<sp/>DBL_MAX);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a2360670fdb71a5da25b70d0ba66ef6e4" kindref="member">next_size</ref><sp/>=<sp/>2<sp/>*<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a60d056b89031e6b391d95b679b713f2b" kindref="member">vdone</ref><sp/>=<sp/>std::vector&lt;bool&gt;(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a2360670fdb71a5da25b70d0ba66ef6e4" kindref="member">next_size</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae6659d6638b70e97c73ef9dc81b1e0d2" kindref="member">vX</ref><sp/>=<sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7" kindref="member">vp</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="classmode__optimizer_1_1_mo_de_optimizer_1adbc432704310adeeade48f55cc1ecb63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1adbc432704310adeeade48f55cc1ecb63" kindref="member">getX</ref>()<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="classmode__optimizer_1_1_mo_de_optimizer_1a52df4b6d8bd56e5aa89a775338ad4e2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a52df4b6d8bd56e5aa89a775338ad4e2f" kindref="member">getY</ref>()<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" kindref="member">popY</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="classmode__optimizer_1_1_mo_de_optimizer_1a5a626ae2567fef61822eaa0cc6aaa6e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a5a626ae2567fef61822eaa0cc6aaa6e4" kindref="member">getIterations</ref>()<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b" kindref="member">iterations</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="classmode__optimizer_1_1_mo_de_optimizer_1a4022efa7d51865ed4d97931bf611e914" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a4022efa7d51865ed4d97931bf611e914" kindref="member">getStop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a09b8202d4c500c4a51410eeb48e79103" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="classmode__optimizer_1_1_mo_de_optimizer_1a51327e372807cc0ef7de27dae144fbe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref>*<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a51327e372807cc0ef7de27dae144fbe2" kindref="member">getFitfun</ref>()<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82" kindref="member">fitfun</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="classmode__optimizer_1_1_mo_de_optimizer_1a9b3ff868b5d9f398ac048f02cdeddd7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a9b3ff868b5d9f398ac048f02cdeddd7c" kindref="member">getDim</ref>()<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="classmode__optimizer_1_1_mo_de_optimizer_1a403d7134c1c92e24818df5a8d00c0cc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a403d7134c1c92e24818df5a8d00c0cc3" kindref="member">getNobj</ref>()<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d" kindref="member">nobj</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="classmode__optimizer_1_1_mo_de_optimizer_1a9b4870b045748a2ad502f9788e4771be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a9b4870b045748a2ad502f9788e4771be" kindref="member">getNcon</ref>()<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7" kindref="member">ncon</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="classmode__optimizer_1_1_mo_de_optimizer_1accd38c8a40e0b6a43c195941f7ce5c8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1accd38c8a40e0b6a43c195941f7ce5c8b" kindref="member">getPopsize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="classmode__optimizer_1_1_mo_de_optimizer_1a7983bac3697e7bc3f1972876b7dc6409" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a7983bac3697e7bc3f1972876b7dc6409" kindref="member">setPopsize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a5e864a8ba16fb9f3ab38260f7cbfa773" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="542" refid="classmode__optimizer_1_1_mo_de_optimizer_1aa80910f343eea5e7a618f3fe7b2caf25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa80910f343eea5e7a618f3fe7b2caf25" kindref="member">runid</ref>;</highlight></codeline>
<codeline lineno="543" refid="classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1e170e8649f89ff648eff4bf8e12be82" kindref="member">fitfun</ref>;</highlight></codeline>
<codeline lineno="544" refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a049b95e05389fa43cf9824e2c9f74738" kindref="member">popsize</ref>;<sp/></highlight><highlight class="comment">//<sp/>population<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a525d3ef2687b848cf441d5fa6fc603c3" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="546" refid="classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a0fac3538c85110c074c67b42af91b63d" kindref="member">nobj</ref>;</highlight></codeline>
<codeline lineno="547" refid="classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1adbdd68d58d539c3c06852139e73c50a7" kindref="member">ncon</ref>;</highlight></codeline>
<codeline lineno="548" refid="classmode__optimizer_1_1_mo_de_optimizer_1a1293cf70abda945e279153f492a7ac93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1293cf70abda945e279153f492a7ac93" kindref="member">keep</ref>;</highlight></codeline>
<codeline lineno="549" refid="classmode__optimizer_1_1_mo_de_optimizer_1a8735c5c9b8d7403db83dacd167622428" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8735c5c9b8d7403db83dacd167622428" kindref="member">stopfitness</ref>;</highlight></codeline>
<codeline lineno="550" refid="classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa8d87c510901036d807bbd312e5b652b" kindref="member">iterations</ref>;</highlight></codeline>
<codeline lineno="551" refid="classmode__optimizer_1_1_mo_de_optimizer_1a52b577c15bc193cdf3f61e0c270184e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a52b577c15bc193cdf3f61e0c270184e8" kindref="member">n_evals</ref>;</highlight></codeline>
<codeline lineno="552" refid="classmode__optimizer_1_1_mo_de_optimizer_1a09b8202d4c500c4a51410eeb48e79103" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a09b8202d4c500c4a51410eeb48e79103" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="553" refid="classmode__optimizer_1_1_mo_de_optimizer_1aa08b5b7d015ba33ad43f3a6fe11869f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1aa08b5b7d015ba33ad43f3a6fe11869f4" kindref="member">F0</ref>;</highlight></codeline>
<codeline lineno="554" refid="classmode__optimizer_1_1_mo_de_optimizer_1a2e19fae27d9ed4687096dd8426b4cbeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a2e19fae27d9ed4687096dd8426b4cbeb" kindref="member">CR0</ref>;</highlight></codeline>
<codeline lineno="555" refid="classmode__optimizer_1_1_mo_de_optimizer_1a21094b0a99aaed9a1e16ebde53afe8cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a21094b0a99aaed9a1e16ebde53afe8cc" kindref="member">F</ref>;</highlight></codeline>
<codeline lineno="556" refid="classmode__optimizer_1_1_mo_de_optimizer_1a8e089b2926237332790e44bbb4cda41f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8e089b2926237332790e44bbb4cda41f" kindref="member">CR</ref>;</highlight></codeline>
<codeline lineno="557" refid="classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a26c43b21cd840f3d8edfab54602c8088" kindref="member">pro_c</ref>;</highlight></codeline>
<codeline lineno="558" refid="classmode__optimizer_1_1_mo_de_optimizer_1a2629e1f2c634bf07a9606516515b6d3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a2629e1f2c634bf07a9606516515b6d3c" kindref="member">dis_c</ref>;</highlight></codeline>
<codeline lineno="559" refid="classmode__optimizer_1_1_mo_de_optimizer_1a48225933ba93cf9b72b6dd748672944f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a48225933ba93cf9b72b6dd748672944f" kindref="member">pro_m</ref>;</highlight></codeline>
<codeline lineno="560" refid="classmode__optimizer_1_1_mo_de_optimizer_1a1ae0187b26f0dce18fe523e9ad13ac6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a1ae0187b26f0dce18fe523e9ad13ac6e" kindref="member">dis_m</ref>;</highlight></codeline>
<codeline lineno="561" refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pcg64<sp/>*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ab85bddd76c7d99e1d39993ce774ca622" kindref="member">rs</ref>;</highlight></codeline>
<codeline lineno="562" refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a8117860be738d75f79e7c0359baf64c5" kindref="member">popX</ref>;</highlight></codeline>
<codeline lineno="563" refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae4f57bd08638b2779afe68ddc7214d3e" kindref="member">popY</ref>;</highlight></codeline>
<codeline lineno="564" refid="classmode__optimizer_1_1_mo_de_optimizer_1ae6659d6638b70e97c73ef9dc81b1e0d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ae6659d6638b70e97c73ef9dc81b1e0d2" kindref="member">vX</ref>;</highlight></codeline>
<codeline lineno="565" refid="classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ad6725ac2fbfde7aa80f031f69b0567a7" kindref="member">vp</ref>;</highlight></codeline>
<codeline lineno="566" refid="classmode__optimizer_1_1_mo_de_optimizer_1a5b2332ae4d4347e6c2fbe7c361a3f4ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a5b2332ae4d4347e6c2fbe7c361a3f4ac" kindref="member">lastCon</ref>;</highlight></codeline>
<codeline lineno="567" refid="classmode__optimizer_1_1_mo_de_optimizer_1a160a04578fb2ae6512edc6cb5cd642f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a160a04578fb2ae6512edc6cb5cd642f3" kindref="member">lastEps</ref>;</highlight></codeline>
<codeline lineno="568" refid="classmode__optimizer_1_1_mo_de_optimizer_1a2360670fdb71a5da25b70d0ba66ef6e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a2360670fdb71a5da25b70d0ba66ef6e4" kindref="member">next_size</ref>;</highlight></codeline>
<codeline lineno="569" refid="classmode__optimizer_1_1_mo_de_optimizer_1a60d056b89031e6b391d95b679b713f2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;<sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a60d056b89031e6b391d95b679b713f2b" kindref="member">vdone</ref>;</highlight></codeline>
<codeline lineno="570" refid="classmode__optimizer_1_1_mo_de_optimizer_1ac06b17efdd21d372c4487f50dbfaf11b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1ac06b17efdd21d372c4487f50dbfaf11b" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="571" refid="classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a378d36d73b3efdb1d9b6b5dbbedb130f" kindref="member">nsga_update</ref>;</highlight></codeline>
<codeline lineno="572" refid="classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a7aaf6cbec2a38894382d79c0453b089f" kindref="member">pareto_update</ref>;</highlight></codeline>
<codeline lineno="573" refid="classmode__optimizer_1_1_mo_de_optimizer_1a6c98f5bff98f17a004b99fb3430f9e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a6c98f5bff98f17a004b99fb3430f9e55" kindref="member">min_mutate</ref>;</highlight></codeline>
<codeline lineno="574" refid="classmode__optimizer_1_1_mo_de_optimizer_1a953467de91810e549f4bc0117ec73ad9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer_1a953467de91810e549f4bc0117ec73ad9" kindref="member">max_mutate</ref>;</highlight></codeline>
<codeline lineno="575" refid="classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<ref refid="classmode__optimizer_1_1_mo_de_optimizer_1afded42264dc1897c870e496adbd18dc5" kindref="member">isInt</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal">};</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemode__optimizer" kindref="compound">mode_optimizer</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="modeoptimizer_8cpp_1a53418a6215cc2512fc8379c813113f7f" refkind="member"><highlight class="normal">uintptr_t<sp/><ref refid="modeoptimizer_8cpp_1a53418a6215cc2512fc8379c813113f7f" kindref="member">initMODE_C</ref>(int64_t<sp/><sp/>runid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nobj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*upper,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*ints,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CR,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pro_c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dis_c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pro_m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dis_m,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nsga_update,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pareto_update,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_mutate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_mutate)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>lower_limit(dim),<sp/>upper_limit(dim);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInt[dim];</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useIsInt<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_limit[i]<sp/>=<sp/>lower[i];</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_limit[i]<sp/>=<sp/>upper[i];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isInt[i]<sp/>=<sp/>ints[i];</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useIsInt<sp/>|=<sp/>ints[i];</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref>*<sp/>fitfun<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref>(<ref refid="evaluator_8h_1ad0943ebd623281f526e5aee2aa818895" kindref="member">noop_callback</ref>,<sp/><ref refid="evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e" kindref="member">noop_callback_par</ref>,<sp/>dim,<sp/>nobj<sp/>+<sp/>ncon,<sp/>lower_limit,<sp/>upper_limit);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref>*<sp/>opt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref>(runid,<sp/>fitfun,<sp/>dim,<sp/>nobj,<sp/>ncon,<sp/>seed,<sp/>popsize,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F,<sp/>CR,<sp/>pro_c,<sp/>dis_c,<sp/>pro_m,<sp/>dis_m,<sp/>nsga_update,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pareto_update,<sp/>min_mutate,<sp/>max_mutate,<sp/>useIsInt<sp/>?<sp/>isInt<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uintptr_t)<sp/>opt;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="modeoptimizer_8cpp_1a43f7e368f8a09a95d508319cb44fe371" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="modeoptimizer_8cpp_1a43f7e368f8a09a95d508319cb44fe371" kindref="member">destroyMODE_C</ref>(uintptr_t<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref>*<sp/>opt<sp/>=<sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref>*)ptr;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref>*<sp/>fitfun<sp/>=<sp/>opt-&gt;getFitfun();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fitfun;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>opt;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="modeoptimizer_8cpp_1a8ff81adfda62d091c1382712f6978a38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="modeoptimizer_8cpp_1a8ff81adfda62d091c1382712f6978a38" kindref="member">askMODE_C</ref>(uintptr_t<sp/>ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xs)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref><sp/>*opt<sp/>=<sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref>*)<sp/>ptr;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>opt-&gt;getDim();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize<sp/>=<sp/>opt-&gt;getPopsize();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>pop<sp/>=<sp/>opt-&gt;ask();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>popsize;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x<sp/>=<sp/>pop.col(p);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p<sp/>*<sp/>dim<sp/>+<sp/>i]<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="modeoptimizer_8cpp_1a58bdcf426555b30299f0c6d85d4f9a3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="modeoptimizer_8cpp_1a58bdcf426555b30299f0c6d85d4f9a3f" kindref="member">tellMODE_C</ref>(uintptr_t<sp/>ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>ys)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref><sp/>*opt<sp/>=<sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref>*)<sp/>ptr;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize<sp/>=<sp/>opt-&gt;getPopsize();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nobj<sp/>=<sp/>opt-&gt;getNobj()<sp/>+<sp/>opt-&gt;getNcon();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>vals(nobj,<sp/>popsize);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>popsize;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>y(nobj);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nobj;<sp/>i++)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/>ys[p<sp/>*<sp/>nobj<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals.col(p)<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt-&gt;tell(vals);</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="modeoptimizer_8cpp_1a20d02a7aeece1745e03dcf6b3f70b929" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="modeoptimizer_8cpp_1a20d02a7aeece1745e03dcf6b3f70b929" kindref="member">setPopulationMODE_C</ref>(uintptr_t<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>ys)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref><sp/>*opt<sp/>=<sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref>*)<sp/>ptr;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize<sp/>=<sp/>opt-&gt;getPopsize();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>!=<sp/>popsize)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;setPopsize(size);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nobj<sp/>=<sp/>opt-&gt;getNobj()<sp/>+<sp/>opt-&gt;getNcon();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>opt-&gt;getDim();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>pop(dim,<sp/>popsize);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>popsize;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x(dim);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>=<sp/>xs[p<sp/>*<sp/>dim<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop.col(p)<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>pop<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>opt-&gt;setX(pop);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>vals(nobj,<sp/>popsize);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>popsize;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>y(nobj);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nobj;<sp/>i++)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/>ys[p<sp/>*<sp/>nobj<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals.col(p)<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt-&gt;tell(vals);</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="modeoptimizer_8cpp_1a697667505911e8ffd72c2e14ea1b177b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="modeoptimizer_8cpp_1a697667505911e8ffd72c2e14ea1b177b" kindref="member">tellMODE_switchC</ref>(uintptr_t<sp/>ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>ys,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nsga_update,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pareto_update)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref><sp/>*opt<sp/>=<sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref>*)<sp/>ptr;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize<sp/>=<sp/>opt-&gt;getPopsize();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nobj<sp/>=<sp/>opt-&gt;getNobj()<sp/>+<sp/>opt-&gt;getNcon();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>vals(nobj,<sp/>popsize);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>popsize;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>y(nobj);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nobj;<sp/>i++)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/>ys[p<sp/>*<sp/>nobj<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals.col(p)<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt-&gt;tell(vals,<sp/>nsga_update,<sp/>pareto_update);</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="modeoptimizer_8cpp_1abbaf3a45fdaae9d07c37dee9b01875e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="modeoptimizer_8cpp_1abbaf3a45fdaae9d07c37dee9b01875e9" kindref="member">populationMODE_C</ref>(uintptr_t<sp/>ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xs)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref><sp/>*opt<sp/>=<sp/>(<ref refid="classmode__optimizer_1_1_mo_de_optimizer" kindref="compound">MoDeOptimizer</ref>*)<sp/>ptr;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>opt-&gt;getDim();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize<sp/>=<sp/>opt-&gt;getPopsize();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>pop<sp/>=<sp/>opt-&gt;getPopulation();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>popsize;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x<sp/>=<sp/>pop.col(p);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p<sp/>*<sp/>n<sp/>+<sp/>i]<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt-&gt;getStop();</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="_fcmaescpp/modeoptimizer.cpp"/>
  </compounddef>
</doxygen>

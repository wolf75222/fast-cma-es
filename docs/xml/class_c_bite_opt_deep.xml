<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_c_bite_opt_deep" kind="class" language="C++" prot="public">
    <compoundname>CBiteOptDeep</compoundname>
    <basecompoundref refid="class_c_bite_opt_interface" prot="public" virt="non-virtual">CBiteOptInterface</basecompoundref>
    <derivedcompoundref refid="class_c_bite_opt_minimize" prot="public" virt="non-virtual">CBiteOptMinimize</derivedcompoundref>
    <derivedcompoundref refid="classbiteopt_1_1_bite_optimizer" prot="public" virt="non-virtual">biteopt::BiteOptimizer</derivedcompoundref>
    <includes refid="biteopt_8h" local="no">biteopt.h</includes>
    <innerclass refid="class_c_bite_opt_deep_1_1_c_bite_opt_wrap" prot="protected">CBiteOptDeep::CBiteOptWrap</innerclass>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_bite_opt_deep_1ac7cfdf4754e5ad3fef6b3cd98ba22520" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteOptDeep::ParamCount</definition>
        <argsstring></argsstring>
        <name>ParamCount</name>
        <qualifiedname>CBiteOptDeep::ParamCount</qualifiedname>
        <briefdescription>
<para>The total number of internal parameter values in use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1642" column="5" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1642" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_deep_1a65d5f650fd7eae9ae1d1cb76387a3179" compoundref="biteopt_8h" startline="1441" endline="1446">CBiteOptDeep</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61" compoundref="biteopt_8h" startline="1507" endline="1528">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteOptDeep::OptCount</definition>
        <argsstring></argsstring>
        <name>OptCount</name>
        <qualifiedname>CBiteOptDeep::OptCount</qualifiedname>
        <briefdescription>
<para>The total number of optimization objects in use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1643" column="5" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1643" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_deep_1a65d5f650fd7eae9ae1d1cb76387a3179" compoundref="biteopt_8h" startline="1441" endline="1446">CBiteOptDeep</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a5aeb781988a714cc50107efa2521cc52" compoundref="biteopt_8h" startline="1653" endline="1667">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" compoundref="biteopt_8h" startline="1539" endline="1552">init</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" compoundref="biteopt_8h" startline="1563" endline="1609">optimize</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61" compoundref="biteopt_8h" startline="1507" endline="1528">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_opt_deep_1_1_c_bite_opt_wrap" kindref="compound">CBiteOptWrap</ref> **</type>
        <definition>CBiteOptWrap** CBiteOptDeep::Opts</definition>
        <argsstring></argsstring>
        <name>Opts</name>
        <qualifiedname>CBiteOptDeep::Opts</qualifiedname>
        <briefdescription>
<para>Optimization objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1644" column="14" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1644" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_deep_1a65d5f650fd7eae9ae1d1cb76387a3179" compoundref="biteopt_8h" startline="1441" endline="1446">CBiteOptDeep</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a5aeb781988a714cc50107efa2521cc52" compoundref="biteopt_8h" startline="1653" endline="1667">deleteBuffers</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" compoundref="biteopt_8h" startline="1539" endline="1552">init</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" compoundref="biteopt_8h" startline="1563" endline="1609">optimize</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61" compoundref="biteopt_8h" startline="1507" endline="1528">updateDims</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_deep_1afd1350f64112950d0887700984547b96" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_opt_deep_1_1_c_bite_opt_wrap" kindref="compound">CBiteOptWrap</ref> *</type>
        <definition>CBiteOptWrap* CBiteOptDeep::BestOpt</definition>
        <argsstring></argsstring>
        <name>BestOpt</name>
        <qualifiedname>CBiteOptDeep::BestOpt</qualifiedname>
        <briefdescription>
<para>Optimizer that contains the best solution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1645" column="14" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1645" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31" compoundref="biteopt_8h" startline="1458" endline="1461">getBestCost</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3" compoundref="biteopt_8h" startline="1453" endline="1456">getBestParams</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" compoundref="biteopt_8h" startline="1539" endline="1552">init</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" compoundref="biteopt_8h" startline="1563" endline="1609">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18" prot="protected" static="no" mutable="no">
        <type><ref refid="class_c_bite_opt_deep_1_1_c_bite_opt_wrap" kindref="compound">CBiteOptWrap</ref> *</type>
        <definition>CBiteOptWrap* CBiteOptDeep::CurOpt</definition>
        <argsstring></argsstring>
        <name>CurOpt</name>
        <qualifiedname>CBiteOptDeep::CurOpt</qualifiedname>
        <briefdescription>
<para>Current optimizer object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1646" column="14" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1646" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_deep_1aa30c464f1425ad1219e7f512e75527a5" compoundref="biteopt_8h" startline="1487" endline="1490">getSelCount</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a4ddcbc966999f0b3f4b59c8f8e909864" compoundref="biteopt_8h" startline="1477" endline="1480">getSelNames</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a7b759e5dbc58b29e36f7d3c6a10e16a7" compoundref="biteopt_8h" startline="1468" endline="1471">getSels</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" compoundref="biteopt_8h" startline="1539" endline="1552">init</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" compoundref="biteopt_8h" startline="1563" endline="1609">optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_deep_1ad7c9509c6e4525db8faab200f4f2edf6" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteOptDeep::StallCount</definition>
        <argsstring></argsstring>
        <name>StallCount</name>
        <qualifiedname>CBiteOptDeep::StallCount</qualifiedname>
        <briefdescription>
<para>The number of iterations without improvement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1647" column="5" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1647" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" compoundref="biteopt_8h" startline="1539" endline="1552">init</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" compoundref="biteopt_8h" startline="1563" endline="1609">optimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_bite_opt_deep_1a65d5f650fd7eae9ae1d1cb76387a3179" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBiteOptDeep::CBiteOptDeep</definition>
        <argsstring>()</argsstring>
        <name>CBiteOptDeep</name>
        <qualifiedname>CBiteOptDeep::CBiteOptDeep</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1441" column="1" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1441" bodyend="1446"/>
        <references refid="class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b" compoundref="biteopt_8h" startline="1643">OptCount</references>
        <references refid="class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6" compoundref="biteopt_8h" startline="1644">Opts</references>
        <references refid="class_c_bite_opt_deep_1ac7cfdf4754e5ad3fef6b3cd98ba22520" compoundref="biteopt_8h" startline="1642">ParamCount</references>
        <referencedby refid="class_c_bite_opt_deep_1_1_c_bite_opt_wrap_1a8f0f4ade1c6e99b3f0efc94670d3ae8f" compoundref="biteopt_8h" startline="1621" endline="1624">CBiteOptDeep::CBiteOptWrap::CBiteOptWrap</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_deep_1a8442d47ab16f76d4783a4f8227ab78a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CBiteOptDeep::~CBiteOptDeep</definition>
        <argsstring>()</argsstring>
        <name>~CBiteOptDeep</name>
        <qualifiedname>CBiteOptDeep::~CBiteOptDeep</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1448" column="9" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1448" bodyend="1451"/>
        <references refid="class_c_bite_opt_deep_1a5aeb781988a714cc50107efa2521cc52" compoundref="biteopt_8h" startline="1653" endline="1667">deleteBuffers</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const double *</type>
        <definition>virtual const double * CBiteOptDeep::getBestParams</definition>
        <argsstring>() const</argsstring>
        <name>getBestParams</name>
        <qualifiedname>CBiteOptDeep::getBestParams</qualifiedname>
        <reimplements refid="class_c_bite_opt_interface_1a2da6e8d4cfb2ecc8380b0cd220d1aeac">getBestParams</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Best parameter vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1453" column="22" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1453" bodyend="1456"/>
        <references refid="class_c_bite_opt_deep_1afd1350f64112950d0887700984547b96" compoundref="biteopt_8h" startline="1645">BestOpt</references>
        <references refid="class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3" compoundref="biteopt_8h" startline="1453" endline="1456">getBestParams</references>
        <referencedby refid="class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3" compoundref="biteopt_8h" startline="1453" endline="1456">getBestParams</referencedby>
        <referencedby refid="classbiteopt_1_1_bite_optimizer_1a311b608ce3c0eea69d66615f22448279" compoundref="biteoptimizer_8cpp" startline="68" endline="74">biteopt::BiteOptimizer::getBestX</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double CBiteOptDeep::getBestCost</definition>
        <argsstring>() const</argsstring>
        <name>getBestCost</name>
        <qualifiedname>CBiteOptDeep::getBestCost</qualifiedname>
        <reimplements refid="class_c_bite_opt_interface_1a79e5a8cdcdf2c9a12f16e4aeba49c75f">getBestCost</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Cost of the best parameter vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1458" column="16" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1458" bodyend="1461"/>
        <references refid="class_c_bite_opt_deep_1afd1350f64112950d0887700984547b96" compoundref="biteopt_8h" startline="1645">BestOpt</references>
        <references refid="class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31" compoundref="biteopt_8h" startline="1458" endline="1461">getBestCost</references>
        <referencedby refid="classbiteopt_1_1_bite_optimizer_1a7f48d5b15bac207bebbc9492708fb3fd" compoundref="biteoptimizer_8cpp" startline="88" endline="103">biteopt::BiteOptimizer::doOptimize</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31" compoundref="biteopt_8h" startline="1458" endline="1461">getBestCost</referencedby>
        <referencedby refid="classbiteopt_1_1_bite_optimizer_1aa117da98db6b95c17836e1c0acb37d88" compoundref="biteoptimizer_8cpp" startline="76" endline="78">biteopt::BiteOptimizer::getBestValue</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" compoundref="biteopt_8h" startline="1563" endline="1609">optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_deep_1a7b759e5dbc58b29e36f7d3c6a10e16a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_bite_sel_base" kindref="compound">CBiteSelBase</ref> **</type>
        <definition>CBiteSelBase ** CBiteOptDeep::getSels</definition>
        <argsstring>()</argsstring>
        <name>getSels</name>
        <qualifiedname>CBiteOptDeep::getSels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns a pointer to an array of selectors in use by the current <ref refid="class_c_bite_opt" kindref="compound">CBiteOpt</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1468" column="14" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1468" bodyend="1471"/>
        <references refid="class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18" compoundref="biteopt_8h" startline="1646">CurOpt</references>
        <references refid="class_c_bite_opt_deep_1a7b759e5dbc58b29e36f7d3c6a10e16a7" compoundref="biteopt_8h" startline="1468" endline="1471">getSels</references>
        <referencedby refid="class_c_bite_opt_deep_1a7b759e5dbc58b29e36f7d3c6a10e16a7" compoundref="biteopt_8h" startline="1468" endline="1471">getSels</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_deep_1a4ddcbc966999f0b3f4b59c8f8e909864" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char **</type>
        <definition>const char ** CBiteOptDeep::getSelNames</definition>
        <argsstring>() const</argsstring>
        <name>getSelNames</name>
        <qualifiedname>CBiteOptDeep::getSelNames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns a pointer to an array of selector names. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1477" column="12" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1477" bodyend="1480"/>
        <references refid="class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18" compoundref="biteopt_8h" startline="1646">CurOpt</references>
        <references refid="class_c_bite_opt_deep_1a4ddcbc966999f0b3f4b59c8f8e909864" compoundref="biteopt_8h" startline="1477" endline="1480">getSelNames</references>
        <referencedby refid="class_c_bite_opt_deep_1a4ddcbc966999f0b3f4b59c8f8e909864" compoundref="biteopt_8h" startline="1477" endline="1480">getSelNames</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_deep_1aa30c464f1425ad1219e7f512e75527a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteOptDeep::getSelCount</definition>
        <argsstring>() const</argsstring>
        <name>getSelCount</name>
        <qualifiedname>CBiteOptDeep::getSelCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns the number of selectors in use by the current <ref refid="class_c_bite_opt" kindref="compound">CBiteOpt</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1487" column="5" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1487" bodyend="1490"/>
        <references refid="class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18" compoundref="biteopt_8h" startline="1646">CurOpt</references>
        <references refid="class_c_bite_opt_deep_1aa30c464f1425ad1219e7f512e75527a5" compoundref="biteopt_8h" startline="1487" endline="1490">getSelCount</references>
        <referencedby refid="class_c_bite_opt_deep_1aa30c464f1425ad1219e7f512e75527a5" compoundref="biteopt_8h" startline="1487" endline="1490">getSelCount</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOptDeep::updateDims</definition>
        <argsstring>(const int aParamCount, const int M=6, const int PopSize0=0)</argsstring>
        <name>updateDims</name>
        <qualifiedname>CBiteOptDeep::updateDims</qualifiedname>
        <param>
          <type>const int</type>
          <declname>aParamCount</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>M</declname>
          <defval>6</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>PopSize0</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function updates dimensionality of *this object. Function does nothing if dimensionality has not changed since the last call. This function should be called at least once before calling the <ref refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" kindref="member">init()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of parameters being optimized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of <ref refid="class_c_bite_opt" kindref="compound">CBiteOpt</ref> objects. This number depends on the complexity of the objective function, if the default value does not produce a good solution, it should be increased together with the iteration count. Minimal value is 1, in this case a plain <ref refid="class_c_bite_opt" kindref="compound">CBiteOpt</ref> optimization will be performed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PopSize0</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements in population to use. If set to 0, the default formula will be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1507" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1507" bodyend="1528"/>
        <references refid="class_c_bite_opt_deep_1a5aeb781988a714cc50107efa2521cc52" compoundref="biteopt_8h" startline="1653" endline="1667">deleteBuffers</references>
        <references refid="class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b" compoundref="biteopt_8h" startline="1643">OptCount</references>
        <references refid="class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6" compoundref="biteopt_8h" startline="1644">Opts</references>
        <references refid="class_c_bite_opt_deep_1ac7cfdf4754e5ad3fef6b3cd98ba22520" compoundref="biteopt_8h" startline="1642">ParamCount</references>
        <references refid="class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61" compoundref="biteopt_8h" startline="1507" endline="1528">updateDims</references>
        <referencedby refid="classbiteopt_1_1_bite_optimizer_1ac0abad8d3fbb5e91bba5c49b59a60e8b" compoundref="biteoptimizer_8cpp" startline="22" endline="50">biteopt::BiteOptimizer::BiteOptimizer</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61" compoundref="biteopt_8h" startline="1507" endline="1528">updateDims</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOptDeep::init</definition>
        <argsstring>(CBiteRnd &amp;rnd, const double *const InitParams=NULL, const double InitRadius=1.0)</argsstring>
        <name>init</name>
        <qualifiedname>CBiteOptDeep::init</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const double *const</type>
          <declname>InitParams</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>InitRadius</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes *this optimizer. Performs N=PopSize objective function evaluations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitParams</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial parameter values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial radius, relative to the default value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1539" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1539" bodyend="1552"/>
        <references refid="class_c_bite_opt_deep_1afd1350f64112950d0887700984547b96" compoundref="biteopt_8h" startline="1645">BestOpt</references>
        <references refid="class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18" compoundref="biteopt_8h" startline="1646">CurOpt</references>
        <references refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" compoundref="biteopt_8h" startline="1539" endline="1552">init</references>
        <references refid="class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b" compoundref="biteopt_8h" startline="1643">OptCount</references>
        <references refid="class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6" compoundref="biteopt_8h" startline="1644">Opts</references>
        <references refid="class_c_bite_opt_deep_1ad7c9509c6e4525db8faab200f4f2edf6" compoundref="biteopt_8h" startline="1647">StallCount</references>
        <referencedby refid="classbiteopt_1_1_bite_optimizer_1ac0abad8d3fbb5e91bba5c49b59a60e8b" compoundref="biteoptimizer_8cpp" startline="22" endline="50">biteopt::BiteOptimizer::BiteOptimizer</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" compoundref="biteopt_8h" startline="1539" endline="1552">init</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteOptDeep::optimize</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>optimize</name>
        <qualifiedname>CBiteOptDeep::optimize</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function performs the parameter optimization iteration that involves 1 objective function evaluation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of non-improving iterations so far. The plateau threshold value is ParamCount * 64. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1563" column="5" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1563" bodyend="1609"/>
        <references refid="class_c_bite_opt_deep_1afd1350f64112950d0887700984547b96" compoundref="biteopt_8h" startline="1645">BestOpt</references>
        <references refid="class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18" compoundref="biteopt_8h" startline="1646">CurOpt</references>
        <references refid="class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31" compoundref="biteopt_8h" startline="1458" endline="1461">getBestCost</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b" compoundref="biteopt_8h" startline="1643">OptCount</references>
        <references refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" compoundref="biteopt_8h" startline="1563" endline="1609">optimize</references>
        <references refid="class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6" compoundref="biteopt_8h" startline="1644">Opts</references>
        <references refid="class_c_bite_opt_deep_1ad7c9509c6e4525db8faab200f4f2edf6" compoundref="biteopt_8h" startline="1647">StallCount</references>
        <referencedby refid="classbiteopt_1_1_bite_optimizer_1a7f48d5b15bac207bebbc9492708fb3fd" compoundref="biteoptimizer_8cpp" startline="88" endline="103">biteopt::BiteOptimizer::doOptimize</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" compoundref="biteopt_8h" startline="1563" endline="1609">optimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_c_bite_opt_deep_1a5aeb781988a714cc50107efa2521cc52" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteOptDeep::deleteBuffers</definition>
        <argsstring>()</argsstring>
        <name>deleteBuffers</name>
        <qualifiedname>CBiteOptDeep::deleteBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function deletes previously allocated buffers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1653" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1653" bodyend="1667"/>
        <references refid="class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b" compoundref="biteopt_8h" startline="1643">OptCount</references>
        <references refid="class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6" compoundref="biteopt_8h" startline="1644">Opts</references>
        <referencedby refid="class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61" compoundref="biteopt_8h" startline="1507" endline="1528">updateDims</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a8442d47ab16f76d4783a4f8227ab78a7" compoundref="biteopt_8h" startline="1448" endline="1451">~CBiteOptDeep</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Deep optimization class. Based on an array of M <ref refid="class_c_bite_opt" kindref="compound">CBiteOpt</ref> objects. This &quot;deep&quot; method pushes the newly-obtained solution to the next <ref refid="class_c_bite_opt" kindref="compound">CBiteOpt</ref> object which is then optimized.</para>
<para>Description is available at <ulink url="https://github.com/avaneev/biteopt">https://github.com/avaneev/biteopt</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CBiteOptDeep</label>
        <link refid="class_c_bite_opt_deep"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="3">
        <label>CBiteOptMinimize</label>
        <link refid="class_c_bite_opt_minimize"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>biteopt::BiteOptimizer</label>
        <link refid="classbiteopt_1_1_bite_optimizer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>CBiteOpt</label>
        <link refid="class_c_bite_opt"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>#Gen1MoveSpanSel</edgelabel>
          <edgelabel>#Gen3ModeSel</edgelabel>
          <edgelabel>#Gen4MixFacSel</edgelabel>
          <edgelabel>#Gen7PowFacSel</edgelabel>
          <edgelabel>#Gen8NumSel</edgelabel>
          <edgelabel>#Gen8SpanSel</edgelabel>
          <edgelabel>#M1Sel</edgelabel>
          <edgelabel>#M2BSel</edgelabel>
          <edgelabel>#MethodSel</edgelabel>
          <edgelabel>#MinSolMulSel</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>#M1ASel</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>#AltPopPSel</edgelabel>
          <edgelabel>#AltPopSel</edgelabel>
          <edgelabel>#Gen1AllpSel</edgelabel>
          <edgelabel>#Gen1MoveAsyncSel</edgelabel>
          <edgelabel>#Gen2ModeSel</edgelabel>
          <edgelabel>#Gen2bModeSel</edgelabel>
          <edgelabel>#Gen2cModeSel</edgelabel>
          <edgelabel>#Gen2dModeSel</edgelabel>
          <edgelabel>#Gen5bModeSel</edgelabel>
          <edgelabel>#Gen8ModeSel</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>#OldPop</edgelabel>
          <edgelabel>#ParOpt2Pop</edgelabel>
          <edgelabel>#ParOptPop</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>#ParOpt</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>#ParOpt2</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>CBiteOpt::CParOpt&lt; T &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>CBiteOpt::CParOpt&lt; CNMSeqOpt &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
        <childnode refid="23" relation="template-instance">
          <edgelabel>&lt; CNMSeqOpt &gt;</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>CBiteOpt::CParOpt&lt; CSpherOpt &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
        <childnode refid="23" relation="template-instance">
          <edgelabel>&lt; CSpherOpt &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="protected-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>CBiteOptBase&lt; double &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="protected-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>CBiteOptBase&lt; int64_t &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="protected-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>CBiteOptDeep</label>
        <link refid="class_c_bite_opt_deep"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>#BestOpt</edgelabel>
          <edgelabel>#CurOpt</edgelabel>
          <edgelabel>#Opts</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptDeep::CBiteOptWrap</label>
        <link refid="class_c_bite_opt_deep_1_1_c_bite_opt_wrap"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="9">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>CBiteParPops&lt; double &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>#ParPops</edgelabel>
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>CBiteParPops&lt; int64_t &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>#ParPops</edgelabel>
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="22">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>CBitePop&lt; int64_t &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="8" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="15">
        <label>CBiteSel&lt; tCount &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>CBiteSel&lt; 2 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>CBiteSel&lt; 3 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>CBiteSel&lt; 4 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; 4 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>CBiteSelBase</label>
        <link refid="class_c_bite_sel_base"/>
      </node>
      <node id="26">
        <label>CNMSeqOpt</label>
        <link refid="class_c_n_m_seq_opt"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>CSpherOpt</label>
        <link refid="class_c_spher_opt"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>#CentPowSel</edgelabel>
          <edgelabel>#RadPowSel</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>#EvalFacSel</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>T</label>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/biteopt.h" line="1438" column="1" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1439" bodyend="1668"/>
    <listofallmembers>
      <member refid="class_c_bite_opt_deep_1afd1350f64112950d0887700984547b96" prot="protected" virt="non-virtual"><scope>CBiteOptDeep</scope><name>BestOpt</name></member>
      <member refid="class_c_bite_opt_deep_1a65d5f650fd7eae9ae1d1cb76387a3179" prot="public" virt="non-virtual"><scope>CBiteOptDeep</scope><name>CBiteOptDeep</name></member>
      <member refid="class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809" prot="public" virt="non-virtual"><scope>CBiteOptDeep</scope><name>CBiteOptInterface</name></member>
      <member refid="class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18" prot="protected" virt="non-virtual"><scope>CBiteOptDeep</scope><name>CurOpt</name></member>
      <member refid="class_c_bite_opt_deep_1a5aeb781988a714cc50107efa2521cc52" prot="protected" virt="non-virtual"><scope>CBiteOptDeep</scope><name>deleteBuffers</name></member>
      <member refid="class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31" prot="public" virt="virtual"><scope>CBiteOptDeep</scope><name>getBestCost</name></member>
      <member refid="class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3" prot="public" virt="virtual"><scope>CBiteOptDeep</scope><name>getBestParams</name></member>
      <member refid="class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d" prot="public" virt="pure-virtual"><scope>CBiteOptDeep</scope><name>getMaxValues</name></member>
      <member refid="class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d" prot="public" virt="pure-virtual"><scope>CBiteOptDeep</scope><name>getMinValues</name></member>
      <member refid="class_c_bite_opt_deep_1aa30c464f1425ad1219e7f512e75527a5" prot="public" virt="non-virtual"><scope>CBiteOptDeep</scope><name>getSelCount</name></member>
      <member refid="class_c_bite_opt_deep_1a4ddcbc966999f0b3f4b59c8f8e909864" prot="public" virt="non-virtual"><scope>CBiteOptDeep</scope><name>getSelNames</name></member>
      <member refid="class_c_bite_opt_deep_1a7b759e5dbc58b29e36f7d3c6a10e16a7" prot="public" virt="non-virtual"><scope>CBiteOptDeep</scope><name>getSels</name></member>
      <member refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" prot="public" virt="non-virtual"><scope>CBiteOptDeep</scope><name>init</name></member>
      <member refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d" prot="public" virt="pure-virtual"><scope>CBiteOptDeep</scope><name>optcost</name></member>
      <member refid="class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b" prot="protected" virt="non-virtual"><scope>CBiteOptDeep</scope><name>OptCount</name></member>
      <member refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" prot="public" virt="non-virtual"><scope>CBiteOptDeep</scope><name>optimize</name></member>
      <member refid="class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6" prot="protected" virt="non-virtual"><scope>CBiteOptDeep</scope><name>Opts</name></member>
      <member refid="class_c_bite_opt_deep_1ac7cfdf4754e5ad3fef6b3cd98ba22520" prot="protected" virt="non-virtual"><scope>CBiteOptDeep</scope><name>ParamCount</name></member>
      <member refid="class_c_bite_opt_deep_1ad7c9509c6e4525db8faab200f4f2edf6" prot="protected" virt="non-virtual"><scope>CBiteOptDeep</scope><name>StallCount</name></member>
      <member refid="class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61" prot="public" virt="non-virtual"><scope>CBiteOptDeep</scope><name>updateDims</name></member>
      <member refid="class_c_bite_opt_deep_1a8442d47ab16f76d4783a4f8227ab78a7" prot="public" virt="virtual"><scope>CBiteOptDeep</scope><name>~CBiteOptDeep</name></member>
      <member refid="class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce" prot="public" virt="virtual"><scope>CBiteOptDeep</scope><name>~CBiteOptInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

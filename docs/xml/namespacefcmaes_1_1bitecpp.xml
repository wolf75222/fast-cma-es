<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespacefcmaes_1_1bitecpp" kind="namespace" language="Python">
    <compoundname>fcmaes::bitecpp</compoundname>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacefcmaes_1_1bitecpp_1a3e9029aaa882c4646cc176749bd3c5cd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::bitecpp.optimizeBite_C</definition>
        <argsstring></argsstring>
        <name>optimizeBite_C</name>
        <qualifiedname>fcmaes.bitecpp.optimizeBite_C</qualifiedname>
        <initializer>=  libcmalib.optimizeBite_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/bitecpp.py" line="118" column="1" bodyfile="fcmaes/bitecpp.py" bodystart="118" bodyend="-1"/>
        <referencedby refid="namespacefcmaes_1_1bitecpp_1a02c6a2143e70721f9ad360505914f9ba" compoundref="bitecpp_8py" startline="93" endline="115">fcmaes.bitecpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1bitecpp_1a135989ea655d889da4b8651d0d305968" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::bitecpp.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>fcmaes.bitecpp.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/bitecpp.py" line="119" column="1" bodyfile="fcmaes/bitecpp.py" bodystart="119" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacefcmaes_1_1bitecpp_1a02c6a2143e70721f9ad360505914f9ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OptimizeResult</type>
        <definition> OptimizeResult fcmaes.bitecpp.minimize</definition>
        <argsstring>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[int] max_evaluations=100000, Optional[float] stop_fitness=-np.inf, Optional[int] M=1, Optional[int] popsize=0, Optional[int] stall_criterion=0, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.bitecpp.minimize</qualifiedname>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>x0</defname>
          <array>[Bounds]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>x0</declname>
          <defname>max_evaluations</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <defname>stop_fitness</defname>
          <array>[int]</array>
          <defval>100000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <defname>M</defname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>M</declname>
          <defname>popsize</defname>
          <array>[int]</array>
          <defval>1</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <defname>stall_criterion</defname>
          <array>[int]</array>
          <defval>0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stall_criterion</declname>
          <defname>rg</defname>
          <array>[int]</array>
          <defval>0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>rg</declname>
          <defname>runid</defname>
          <array>[Generator]</array>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>runid</declname>
          <array>[int]</array>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Minimize an objective function using the optimizer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function performs optimization on a given callable objective function by utilizing specified bounds, constraints, and other parameters. The optimizer iteratively adjusts the input variables to reach an optimal solution that minimizes the objective function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>A callable objective function that accepts an array-like input and returns a float value representing the function value to be minimized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional bounds for the input variables, which must be consistent with the search space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional initial guess for the input variables; used to initialize the search process. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of function evaluations allowed during optimization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional stopping criterion based on achieving a particular fitness value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional parameter for additional optimization configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional population size parameter for optimization algorithms requiring population-based </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>computations.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stall_criterion</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional criterion to stop the search when no significant improvement is seen. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional random number generator, used for ensuring reproducibility and randomness in the </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optimization.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runid</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional identifier for the specific optimization run; used for tracking and reporting.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>OptimizeResult A data structure containing the optimization results, including the best solution found, its corresponding function value, number of function evaluations, number of iterations performed, status, and a boolean indicating success or failure.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Raised for any unexpected errors encountered during the optimization process. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/bitecpp.py" line="84" column="1" bodyfile="fcmaes/bitecpp.py" bodystart="93" bodyend="115"/>
        <references refid="namespacefcmaes_1_1bitecpp_1a3e9029aaa882c4646cc176749bd3c5cd" compoundref="bitecpp_8py" startline="118">fcmaes.bitecpp.optimizeBite_C</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="fcmaes/bitecpp.py" line="1" column="1"/>
  </compounddef>
</doxygen>

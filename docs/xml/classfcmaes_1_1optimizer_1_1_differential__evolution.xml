<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1optimizer_1_1_differential__evolution" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::optimizer::Differential_evolution</compoundname>
    <basecompoundref refid="classfcmaes_1_1optimizer_1_1_optimizer" prot="public" virt="non-virtual">fcmaes.optimizer.Optimizer</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_differential__evolution_1a6acd0d736b610c904c1ecdec83ee1b42" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Differential_evolution::popsize</definition>
        <argsstring></argsstring>
        <name>popsize</name>
        <qualifiedname>fcmaes.optimizer.Differential_evolution.popsize</qualifiedname>
        <initializer>=  popsize</initializer>
        <briefdescription>
<para>The population size used by the Differential Evolution algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2826" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2826" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" compoundref="benchmark__gtop__pygmo_8py" startline="103" endline="118">examples.benchmark_gtop_pygmo.Cma_pyg.minimize</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" compoundref="benchmark__gtop__pygmo_8py" startline="127" endline="137">examples.benchmark_gtop_pygmo.De_pyg.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" compoundref="optimizer_8py" startline="2858" endline="2864">fcmaes.optimizer.Differential_evolution.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_differential__evolution_1a92e2de95c88f14f16c601cb783f9e64d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.Differential_evolution.__init__</definition>
        <argsstring>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.optimizer.Differential_evolution.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <array>[int]</array>
          <defval>50000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <array>[int]</array>
          <defval>31</defval>
        </param>
        <briefdescription>
<para>Initializes an instance of the DE optimizer. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   The optimizer class is responsible for configuring and managing settings
   specific to the differential evolution (DE) algorithm. Upon initialization,
   it sets up the maximum evaluations allowed and the population size for the
   DE routine.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; The maximum number of evaluations allotted for the DE optimization algorithm. Defaults to 50000 if not provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; The population size used by the DE algorithm. Defaults to 31 if not provided. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2822" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2824" bodyend="2827"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[np.ndarray, float, int]</type>
        <definition> Tuple[np.ndarray, float, int] fcmaes.optimizer.Differential_evolution.minimize</definition>
        <argsstring>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.optimizer.Differential_evolution.minimize</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>guess</defname>
          <array>[Bounds]</array>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <defname>sdevs</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>sdevs</declname>
          <defname>rg</defname>
          <array>[float]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>rg</type>
          <defname>store</defname>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>store</type>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Minimizes a given objective function using the Differential Evolution algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   The method optimizes a given objective function within specified bounds, leveraging
   stochastic parallel computation to approximate a global minimum. It uses a population-based
   approach evolved through random sampling.


       fun (Callable[[ArrayLike], float]): Objective function to minimize. It takes an array-like
           input and returns a float output representing the objective to minimize.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>Constraints for the optimization. The lower (<computeroutput>bounds.lb</computeroutput>) and upper (<computeroutput>bounds.ub</computeroutput>) bounds define the search space for the optimization algorithm. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess for the starting position in the parameter space. Defaults to None. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator instance. Determines random seed for reproducibility. Default is <computeroutput>Generator(PCG64DXSM())</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional storage object to record evaluation history or intermediate results.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple[np.ndarray, float, int]: A tuple containing:<itemizedlist>
<listitem><para>The best solution (ndarray) found by the algorithm.</para>
</listitem><listitem><para>The value of the objective function at the found solution (float).</para>
</listitem><listitem><para>The number of function evaluations performed (int). </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2852" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2858" bodyend="2864"/>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" compoundref="optimizer_8py" startline="304" endline="307">fcmaes.optimizer.Optimizer.max_eval_num</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df" compoundref="cmaes_8py" startline="223">fcmaes.cmaes.Cmaes.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" compoundref="cmaescpp_8py" startline="238">fcmaes.cmaescpp.ACMA_C.popsize</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" compoundref="crfmnescpp_8py" startline="221">fcmaes.crfmnescpp.CRFMNES_C.popsize</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1ac57257a177f51fb2637120cc3bf7ac55" compoundref="de_8py" startline="305">fcmaes.de.DE.popsize</references>
        <references refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad122a7d34bd51afeb06228ad811f85ce" compoundref="decpp_8py" startline="293">fcmaes.decpp.DE_C.popsize</references>
        <references refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6" compoundref="mode_8py" startline="487">fcmaes.mode.MODE.popsize</references>
        <references refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ac85826131061fe5596f9420ff628f582" compoundref="modecpp_8py" startline="404">fcmaes.modecpp.MODE_C.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1a3c2b1016ec0c7132bd1aaf249a0606e2" compoundref="optimizer_8py" startline="2664">fcmaes.optimizer.Bite_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a2a32bf4b1974985835c6fe4d78efbfa0" compoundref="optimizer_8py" startline="2253">fcmaes.optimizer.Cma_ask_tell.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1adfed8224a61810107b7df8908a1872cb" compoundref="optimizer_8py" startline="1747">fcmaes.optimizer.Cma_awm.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578" compoundref="optimizer_8py" startline="1359">fcmaes.optimizer.Cma_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a1861ff82b2a8709da57f19cb75a483ce" compoundref="optimizer_8py" startline="1609">fcmaes.optimizer.Cma_lw.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a90f09477ed9000f2c20750fa9ac73ed5" compoundref="optimizer_8py" startline="1471">fcmaes.optimizer.Cma_orig.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371" compoundref="optimizer_8py" startline="1230">fcmaes.optimizer.Cma_python.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__sep_1abddd49200f8a013f6fb55ce8698dd111" compoundref="optimizer_8py" startline="1893">fcmaes.optimizer.Cma_sep.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1abf110ededa79f1101d0acefadef018f8" compoundref="optimizer_8py" startline="900">fcmaes.optimizer.Crfmnes.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1adf8a89f1eba94649ba1fbafd89e68ba8" compoundref="optimizer_8py" startline="1001">fcmaes.optimizer.Crfmnes_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__ask__tell_1ad7be76f5ffe7fc538f9d630e8ebf4137" compoundref="optimizer_8py" startline="2373">fcmaes.optimizer.De_ask_tell.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__cpp_1aeee0354a9a88e72a8de9a14518e0b631" compoundref="optimizer_8py" startline="2031">fcmaes.optimizer.De_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__python_1a69e1e5d4ef59774da8d311e5414f423b" compoundref="optimizer_8py" startline="2147">fcmaes.optimizer.De_python.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a6acd0d736b610c904c1ecdec83ee1b42" compoundref="optimizer_8py" startline="2826">fcmaes.optimizer.Differential_evolution.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1ad8bb83e394a209e90761b1d77b424e47" compoundref="optimizer_8py" startline="1114">fcmaes.optimizer.Pgpe_cpp.popsize</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class for performing optimization using the Differential Evolution algorithm. </para>
    </briefdescription>
    <detaileddescription>
<para>Differential Evolution is a global optimization algorithm suited for optimizing real-valued, multi-modal functions. This class is built upon the <computeroutput>scipy.optimize</computeroutput> implementation and extends it with additional functionality specific to its purpose. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fcmaes.optimizer.Differential_evolution</label>
        <link refid="classfcmaes_1_1optimizer_1_1_differential__evolution"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.optimizer.Differential_evolution</label>
        <link refid="classfcmaes_1_1optimizer_1_1_differential__evolution"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/optimizer.py" line="2803" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2803" bodyend="2864"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a92e2de95c88f14f16c601cb783f9e64d" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Differential_evolution</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Differential_evolution</scope><name>get_count_runs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Differential_evolution</scope><name>max_eval_num</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Differential_evolution</scope><name>max_evaluations</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Differential_evolution</scope><name>minimize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Differential_evolution</scope><name>name</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a6acd0d736b610c904c1ecdec83ee1b42" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Differential_evolution</scope><name>popsize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

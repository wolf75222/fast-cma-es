<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::crfmnescpp::CRFMNES_C</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.crfmnescpp.CRFMNES_C::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <qualifiedname>fcmaes.crfmnescpp.CRFMNES_C.ptr</qualifiedname>
        <initializer>=  <ref refid="namespacefcmaes_1_1crfmnescpp_1a9084cdfaf4cdbde49738fac2a361d8a1" kindref="member">initCRFMNES_C</ref>(runid, <ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" kindref="member">dim</ref>, array_type(*guess),
                           array_type(*lower), array_type(*upper),
                    input_sigma, <ref refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" kindref="member">popsize</ref>, int(rg.uniform(0, 2**32 - 1)), penalty_coef,
                    use_constraint_violation, normalize)</initializer>
        <briefdescription>
<para>Pointer to the underlying C++ object handling the optimization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="217" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="217" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a8108ee1a2f3dd941e1105a3491269572" compoundref="crfmnescpp_8py" startline="237" endline="239">fcmaes.crfmnescpp.CRFMNES_C.__del__</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ab22d38f2f4822b861fa7217725d8db1a" compoundref="decpp_8py" startline="310" endline="312">fcmaes.decpp.DE_C.__del__</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a580bb3d8baef2a338186cac64df0ea45" compoundref="modecpp_8py" startline="423" endline="425">fcmaes.modecpp.MODE_C.__del__</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a255b3fc3e61ebee7f65b20d63c6ba3d4" compoundref="pgpecpp_8py" startline="290" endline="292">fcmaes.pgpecpp.PGPE_C.__del__</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" compoundref="crfmnescpp_8py" startline="253" endline="267">fcmaes.crfmnescpp.CRFMNES_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ac938731f80bce720692af9b7b84e41d0" compoundref="decpp_8py" startline="329" endline="343">fcmaes.decpp.DE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ae42863ed67ebbb8f39a488a9caecebc1" compoundref="modecpp_8py" startline="471" endline="485">fcmaes.modecpp.MODE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" compoundref="crfmnescpp_8py" startline="307" endline="321">fcmaes.crfmnescpp.CRFMNES_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ae6321ea6313c6ef9bf44d492aaa619f8" compoundref="decpp_8py" startline="385" endline="399">fcmaes.decpp.DE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3433826fba507128212dc6dd455a7227" compoundref="modecpp_8py" startline="569" endline="583">fcmaes.modecpp.MODE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" compoundref="crfmnescpp_8py" startline="339" endline="353">fcmaes.crfmnescpp.CRFMNES_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1a2f794b6d8709f5b14d5f56695bb8d8ff" compoundref="decpp_8py" startline="416" endline="430">fcmaes.decpp.DE_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e" compoundref="pgpecpp_8py" startline="393" endline="407">fcmaes.pgpecpp.PGPE_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a30327c6b3f1ecc4add777f4a74e83533" compoundref="crfmnescpp_8py" startline="282" endline="289">fcmaes.crfmnescpp.CRFMNES_C.tell</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad53cc4b5553a819096b47115e1f49b42" compoundref="decpp_8py" startline="360" endline="367">fcmaes.decpp.DE_C.tell</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1adff2bdf2d7fa9dd5d8aabf4962471e07" compoundref="modecpp_8py" startline="505" endline="519">fcmaes.modecpp.MODE_C.tell</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a3d030c90af2ea816f60372c4f0bb98d5" compoundref="pgpecpp_8py" startline="334" endline="342">fcmaes.pgpecpp.PGPE_C.tell</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a92426eb6d5a2f38b3a1218fd9479a1bc" compoundref="modecpp_8py" startline="542" endline="550">fcmaes.modecpp.MODE_C.tell_switch</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.crfmnescpp.CRFMNES_C::popsize</definition>
        <argsstring></argsstring>
        <name>popsize</name>
        <qualifiedname>fcmaes.crfmnescpp.CRFMNES_C.popsize</qualifiedname>
        <initializer>=  popsize</initializer>
        <briefdescription>
<para>Population size used by the CMA-ES algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="221" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="221" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a4e75c17eaa625b8be5fa0ccb0d64bd05" compoundref="mode_8py" startline="754" endline="786">fcmaes.mode.MODE._next_x</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" compoundref="crfmnescpp_8py" startline="253" endline="267">fcmaes.crfmnescpp.CRFMNES_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1acc2a7649411442c90167d856c673ccb4" compoundref="de_8py" startline="343" endline="361">fcmaes.de.DE.ask</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ac938731f80bce720692af9b7b84e41d0" compoundref="decpp_8py" startline="329" endline="343">fcmaes.decpp.DE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a1893dc839f866ab4d22f7fd13489bf73" compoundref="mode_8py" startline="559" endline="563">fcmaes.mode.MODE.ask</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ae42863ed67ebbb8f39a488a9caecebc1" compoundref="modecpp_8py" startline="471" endline="485">fcmaes.modecpp.MODE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a6e647b4dbacab60b482242c80b0a8582" compoundref="de_8py" startline="440" endline="449">fcmaes.de.DE.ask_one</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" compoundref="benchmark__gtop__pygmo_8py" startline="103" endline="118">examples.benchmark_gtop_pygmo.Cma_pyg.minimize</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" compoundref="benchmark__gtop__pygmo_8py" startline="127" endline="137">examples.benchmark_gtop_pygmo.De_pyg.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a" compoundref="optimizer_8py" startline="1647" endline="1679">fcmaes.optimizer.Cma_lw.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0" compoundref="optimizer_8py" startline="1520" endline="1552">fcmaes.optimizer.Cma_orig.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_crfmnes_1aeaf53b0b1cef69245496384c9c5569fb" compoundref="optimizer_8py" startline="939" endline="949">fcmaes.optimizer.Crfmnes.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a28a1d5e195fa924386bd76c29a9f682d" compoundref="optimizer_8py" startline="1044" endline="1054">fcmaes.optimizer.Crfmnes_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388" compoundref="optimizer_8py" startline="2418" endline="2431">fcmaes.optimizer.De_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" compoundref="optimizer_8py" startline="2858" endline="2864">fcmaes.optimizer.Differential_evolution.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a15393a3e9dbb73be5cf8e5c9cc6f8c2d" compoundref="optimizer_8py" startline="1156" endline="1166">fcmaes.optimizer.Pgpe_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a6f479d982825465b97c89e528351bf36" compoundref="mode_8py" startline="667" endline="677">fcmaes.mode.MODE.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a672b403a7e745d9e69532454f32d2b62" compoundref="modecpp_8py" startline="635" endline="646">fcmaes.modecpp.MODE_C.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a3b3a358c6fded3c638706495c88eff1a" compoundref="mode_8py" startline="636" endline="645">fcmaes.mode.MODE.minimize_ser</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1aa4a7a3e4f9a3fc84dc37faf820025306" compoundref="modecpp_8py" startline="602" endline="611">fcmaes.modecpp.MODE_C.minimize_ser</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a29791dbcb2e070361529475630de2052" compoundref="mode_8py" startline="694" endline="731">fcmaes.mode.MODE.pop_update</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" compoundref="crfmnescpp_8py" startline="307" endline="321">fcmaes.crfmnescpp.CRFMNES_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ae6321ea6313c6ef9bf44d492aaa619f8" compoundref="decpp_8py" startline="385" endline="399">fcmaes.decpp.DE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3433826fba507128212dc6dd455a7227" compoundref="modecpp_8py" startline="569" endline="583">fcmaes.modecpp.MODE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1ab58df13ca3623bcce727576e5d354bbc" compoundref="de_8py" startline="420" endline="424">fcmaes.de.DE.result</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1af1ac6ae50db24a626f6649175bfecf96" compoundref="mode_8py" startline="537" endline="548">fcmaes.mode.MODE.set_guess</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3267cafa8c068a367179034c3f5a562d" compoundref="modecpp_8py" startline="446" endline="457">fcmaes.modecpp.MODE_C.set_guess</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a8b928c29cf646933a1821566ec18d73a" compoundref="mode_8py" startline="576" endline="583">fcmaes.mode.MODE.tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.crfmnescpp.CRFMNES_C::dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>fcmaes.crfmnescpp.CRFMNES_C.dim</qualifiedname>
        <initializer>=  dim</initializer>
        <briefdescription>
<para>Dimension of the decision variable vector being optimized. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes an evolutionary optimization algorithm with constrained bounds and penalty-based constraint handling. Uses randomized initial guess for optimization and allows configuration of the population size and mutation parameters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimensionality of the optimization problem. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The search space boundaries. If not specified, no limits are imposed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess for the optimization problem. If None, a random guess is used. input_sigma (Optional[Union[float, ArrayLike, Callable]]): Initial distribution width for mutation. Default is 0.3. Callable functions are invoked and their result used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the population. Default is 32. If an odd value is provided, it is incremented to ensure compatibility. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>Random generator for sampling. Default is Generator(PCG64DXSM()). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runid</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique identifier for the optimization run. Default is 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the search space should be normalized. Default is False. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_constraint_violation</parametername>
</parameternamelist>
<parameterdescription>
<para>Enables constraint violation handling during optimization. Default is True. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>penalty_coef</parametername>
</parameternamelist>
<parameterdescription>
<para>Coefficient of the penalty term for constraints. Default is 1E5. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="222" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="222" bodyend="-1"/>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1a182cdb7a5c25015336faa57a9afebef6" compoundref="damp_8py" startline="67" endline="76">examples.damp.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__so_1a91b3f73bc6c6999748aaf8bfb94cdd39" compoundref="evaluator_8py" startline="795" endline="809">fcmaes.evaluator.callback_so.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" compoundref="crfmnescpp_8py" startline="253" endline="267">fcmaes.crfmnescpp.CRFMNES_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ac938731f80bce720692af9b7b84e41d0" compoundref="decpp_8py" startline="329" endline="343">fcmaes.decpp.DE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ae42863ed67ebbb8f39a488a9caecebc1" compoundref="modecpp_8py" startline="471" endline="485">fcmaes.modecpp.MODE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a4a9c0d92560064a154b7bbcf1d537480" compoundref="mapelites_8py" startline="1146" endline="1149">fcmaes.mapelites.Archive.get_stat</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a12befeeecf65003f61a073520070a4d7" compoundref="mapelites_8py" startline="882" endline="889">fcmaes.mapelites.Archive.get_x_stdev</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" compoundref="anpcp_8py" startline="78" endline="98">anpcp.ANPCP.init_tsp</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a62da9c6f511c298d1ef06d6af7600196" compoundref="mapelites_8py" startline="707" endline="728">fcmaes.mapelites.Archive.load</referencedby>
        <referencedby refid="classexamples_1_1siemens_1_1_plant_1a1e32e624120cf855722e347ed941b77f" compoundref="siemens_8py" startline="108" endline="118">examples.siemens.Plant.next_product</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a96c79aee6dab29a25fd28b0b383f1916" compoundref="employee_8py" startline="241" endline="250">examples.employee.problem.optimize</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a451356183bd266ec5feb44a1b9cf92ef" compoundref="employee_8py" startline="251" endline="268">examples.employee.problem.optimize_mo</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" compoundref="crfmnescpp_8py" startline="307" endline="321">fcmaes.crfmnescpp.CRFMNES_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ae6321ea6313c6ef9bf44d492aaa619f8" compoundref="decpp_8py" startline="385" endline="399">fcmaes.decpp.DE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3433826fba507128212dc6dd455a7227" compoundref="modecpp_8py" startline="569" endline="583">fcmaes.modecpp.MODE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1af629821589f78858c6422998bcb02fe5" compoundref="damp_8py" startline="77" endline="90">examples.damp.fitness.qd_fit</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a27cdaec6181e9866758aaf02adcd2943" compoundref="anpcp_8py" startline="99" endline="102">anpcp.ANPCP.random_x</referencedby>
        <referencedby refid="classanpcpc_1_1_a_n_p_c_p_c_1ac4f58722e70806a92094828b839f084e" compoundref="anpcpc_8py" startline="86" endline="89">anpcpc.ANPCPC.random_x</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" compoundref="crfmnescpp_8py" startline="339" endline="353">fcmaes.crfmnescpp.CRFMNES_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1a2f794b6d8709f5b14d5f56695bb8d8ff" compoundref="decpp_8py" startline="416" endline="430">fcmaes.decpp.DE_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e" compoundref="pgpecpp_8py" startline="393" endline="407">fcmaes.pgpecpp.PGPE_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a574aed6e61fc20fb94b479cb8fd5fc55" compoundref="mapelites_8py" startline="1175" endline="1178">fcmaes.mapelites.Archive.set_stat</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ace27ab32b6fd227caa1a9877c52f54d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.crfmnescpp.CRFMNES_C.__init__</definition>
        <argsstring>(self, int dim, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.3, Optional[int] popsize=32, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=False, Optional[bool] use_constraint_violation=True, Optional[float] penalty_coef=1E5)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.crfmnescpp.CRFMNES_C.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <array>[Bounds]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>x0</declname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional]</type>
          <declname>input_sigma</declname>
          <array>[Union[float, ArrayLike, Callable]</array>
          <defval>0.3</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <array>[int]</array>
          <defval>32</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>rg</declname>
          <array>[Generator]</array>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>runid</declname>
          <array>[int]</array>
          <defval>0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>normalize</declname>
          <array>[bool]</array>
          <defval>False</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>use_constraint_violation</declname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>penalty_coef</declname>
          <array>[float]</array>
          <defval>1E5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="189" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="200" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a8108ee1a2f3dd941e1105a3491269572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.crfmnescpp.CRFMNES_C.__del__</definition>
        <argsstring>(self)</argsstring>
        <name>__del__</name>
        <qualifiedname>fcmaes.crfmnescpp.CRFMNES_C.__del__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Destroys the current instance and releases associated resources. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This destructor is called when the object is deleted, or goes out of scope
   to ensure proper cleanup of resources tied to the object.


       Any destruction-related error that may arise during the resource
       release process.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="237" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="237" bodyend="239"/>
        <references refid="namespacefcmaes_1_1crfmnescpp_1a2049b510a55914b1482f4f4b188e557f" compoundref="crfmnescpp_8py" startline="372">fcmaes.crfmnescpp.destroyCRFMNES_C</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" compoundref="crfmnescpp_8py" startline="217">fcmaes.crfmnescpp.CRFMNES_C.ptr</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>np.ndarray</type>
        <definition> np.ndarray fcmaes.crfmnescpp.CRFMNES_C.ask</definition>
        <argsstring>(self)</argsstring>
        <name>ask</name>
        <qualifiedname>fcmaes.crfmnescpp.CRFMNES_C.ask</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Generates a population of candidate solutions using the CR-FM-NES algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method computes a new set of candidate solutions for the optimization
   problem using internal state and algorithm properties. It uses the specified
   population size and dimensionality of the problem.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>np A 2D array where each row corresponds to a candidate solution.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>If there is an error while generating the candidate solutions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="253" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="253" bodyend="267"/>
        <references refid="namespacefcmaes_1_1crfmnescpp_1a0414b501fcc51390ff9f8dfe00b73910" compoundref="crfmnescpp_8py" startline="375">fcmaes.crfmnescpp.askCRFMNES_C</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" compoundref="advretry_8py" startline="319">fcmaes.advretry.Store.dim</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268" compoundref="cmaes_8py" startline="216">fcmaes.cmaes.Cmaes.dim</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" compoundref="cmaescpp_8py" startline="239">fcmaes.cmaescpp.ACMA_C.dim</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" compoundref="crfmnescpp_8py" startline="222">fcmaes.crfmnescpp.CRFMNES_C.dim</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df" compoundref="cmaes_8py" startline="223">fcmaes.cmaes.Cmaes.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" compoundref="cmaescpp_8py" startline="238">fcmaes.cmaescpp.ACMA_C.popsize</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" compoundref="crfmnescpp_8py" startline="221">fcmaes.crfmnescpp.CRFMNES_C.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" compoundref="crfmnescpp_8py" startline="217">fcmaes.crfmnescpp.CRFMNES_C.ptr</references>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a6f479d982825465b97c89e528351bf36" compoundref="mode_8py" startline="667" endline="677">fcmaes.mode.MODE.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a672b403a7e745d9e69532454f32d2b62" compoundref="modecpp_8py" startline="635" endline="646">fcmaes.modecpp.MODE_C.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a3b3a358c6fded3c638706495c88eff1a" compoundref="mode_8py" startline="636" endline="645">fcmaes.mode.MODE.minimize_ser</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1aa4a7a3e4f9a3fc84dc37faf820025306" compoundref="modecpp_8py" startline="602" endline="611">fcmaes.modecpp.MODE_C.minimize_ser</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a30327c6b3f1ecc4add777f4a74e83533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.crfmnescpp.CRFMNES_C.tell</definition>
        <argsstring>(self, np.ndarray ys)</argsstring>
        <name>tell</name>
        <qualifiedname>fcmaes.crfmnescpp.CRFMNES_C.tell</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>np.ndarray</type>
          <declname>ys</declname>
        </param>
        <briefdescription>
<para>Provides functionality to send an array of numerical values to a specific C-based function, with error handling in place to detect and notify when issues occur during execution. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is particularly useful for communicating with lower-level systems or libraries that require data in specific formats.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ys</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of numerical values to be sent to the underlying C function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>int Returns the result from the C function upon successful execution, or -1 if an exception occurs.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Captures and prints the exception message when an error is encountered during operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="282" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="282" bodyend="289"/>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" compoundref="crfmnescpp_8py" startline="217">fcmaes.crfmnescpp.CRFMNES_C.ptr</references>
        <references refid="namespacefcmaes_1_1crfmnescpp_1aa685b7d7f9e93560a1f6f08a3984a2f1" compoundref="crfmnescpp_8py" startline="378">fcmaes.crfmnescpp.tellCRFMNES_C</references>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a6f479d982825465b97c89e528351bf36" compoundref="mode_8py" startline="667" endline="677">fcmaes.mode.MODE.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a672b403a7e745d9e69532454f32d2b62" compoundref="modecpp_8py" startline="635" endline="646">fcmaes.modecpp.MODE_C.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a3b3a358c6fded3c638706495c88eff1a" compoundref="mode_8py" startline="636" endline="645">fcmaes.mode.MODE.minimize_ser</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1aa4a7a3e4f9a3fc84dc37faf820025306" compoundref="modecpp_8py" startline="602" endline="611">fcmaes.modecpp.MODE_C.minimize_ser</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1af1ac6ae50db24a626f6649175bfecf96" compoundref="mode_8py" startline="537" endline="548">fcmaes.mode.MODE.set_guess</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3267cafa8c068a367179034c3f5a562d" compoundref="modecpp_8py" startline="446" endline="457">fcmaes.modecpp.MODE_C.set_guess</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>np.ndarray</type>
        <definition> np.ndarray fcmaes.crfmnescpp.CRFMNES_C.population</definition>
        <argsstring>(self)</argsstring>
        <name>population</name>
        <qualifiedname>fcmaes.crfmnescpp.CRFMNES_C.population</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Generates and retrieves the current population of candidate solutions. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method computes the population of candidate solutions for the
   problem space using the `populationCRFMNES_C` function. The population
   data is organized as a two-dimensional NumPy array where each row
   represents a candidate solution.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>np A two-dimensional array where each row corresponds to a candidate solution in the population. Returns <computeroutput>None</computeroutput> in case of an exception.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>If an error occurs during computation or while calling <computeroutput>populationCRFMNES_C</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="307" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="307" bodyend="321"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" compoundref="advretry_8py" startline="319">fcmaes.advretry.Store.dim</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268" compoundref="cmaes_8py" startline="216">fcmaes.cmaes.Cmaes.dim</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" compoundref="cmaescpp_8py" startline="239">fcmaes.cmaescpp.ACMA_C.dim</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" compoundref="crfmnescpp_8py" startline="222">fcmaes.crfmnescpp.CRFMNES_C.dim</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df" compoundref="cmaes_8py" startline="223">fcmaes.cmaes.Cmaes.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" compoundref="cmaescpp_8py" startline="238">fcmaes.cmaescpp.ACMA_C.popsize</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" compoundref="crfmnescpp_8py" startline="221">fcmaes.crfmnescpp.CRFMNES_C.popsize</references>
        <references refid="namespacefcmaes_1_1crfmnescpp_1a4c655199ab31427cfb2afbdcdcd8dc68" compoundref="crfmnescpp_8py" startline="382">fcmaes.crfmnescpp.populationCRFMNES_C</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" compoundref="crfmnescpp_8py" startline="217">fcmaes.crfmnescpp.CRFMNES_C.ptr</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OptimizeResult</type>
        <definition> OptimizeResult fcmaes.crfmnescpp.CRFMNES_C.result</definition>
        <argsstring>(self)</argsstring>
        <name>result</name>
        <qualifiedname>fcmaes.crfmnescpp.CRFMNES_C.result</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Computes the optimization result and returns it as an <computeroutput>OptimizeResult</computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   The function retrieves the optimization output, including the optimized variables, function value,
   number of evaluations, number of iterations, and the status of the optimization. If an error
   occurs during the computation, an `OptimizeResult` object indicating failure is returned.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>OptimizeResult An object containing details of the optimization result, including the optimized variables (<computeroutput>x</computeroutput>), the function value at the optimized point (<computeroutput>fun</computeroutput>), the number of function evaluations (<computeroutput>nfev</computeroutput>), the number of iterations performed (<computeroutput>nit</computeroutput>), the optimization status (<computeroutput>status</computeroutput>), and whether the optimization was successful (<computeroutput>success</computeroutput>).</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>If an error occurs during the computation process, leading to the creation of a failure <computeroutput>OptimizeResult</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/crfmnescpp.py" line="339" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="339" bodyend="353"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" compoundref="advretry_8py" startline="319">fcmaes.advretry.Store.dim</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268" compoundref="cmaes_8py" startline="216">fcmaes.cmaes.Cmaes.dim</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" compoundref="cmaescpp_8py" startline="239">fcmaes.cmaescpp.ACMA_C.dim</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" compoundref="crfmnescpp_8py" startline="222">fcmaes.crfmnescpp.CRFMNES_C.dim</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" compoundref="crfmnescpp_8py" startline="217">fcmaes.crfmnescpp.CRFMNES_C.ptr</references>
        <references refid="namespacefcmaes_1_1crfmnescpp_1a248d281b148a66ee941821abcdb364c4" compoundref="crfmnescpp_8py" startline="385">fcmaes.crfmnescpp.resultCRFMNES_C</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Minimization of a scalar function of one or more variables using a C++ CR-FM-NES implementation, interfaced via Python using ctypes. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements the Covariance Matrix Adaptation Evolution Strategy (CR-FM-NES) algorithm for numerical optimization problems. It relies on the underlying C++ implementation for the actual optimization and provides a Python wrapper for convenient usage. The algorithm aims to find the minimum of a scalar objective function and supports various configurations like bounds on variables, initialization parameters, and constraint handling. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.crfmnescpp.CRFMNES_C</label>
        <link refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/crfmnescpp.py" line="158" column="1" bodyfile="fcmaes/crfmnescpp.py" bodystart="158" bodyend="353"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a8108ee1a2f3dd941e1105a3491269572" prot="public" virt="non-virtual"><scope>fcmaes::crfmnescpp::CRFMNES_C</scope><name>__del__</name></member>
      <member refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ace27ab32b6fd227caa1a9877c52f54d1" prot="public" virt="non-virtual"><scope>fcmaes::crfmnescpp::CRFMNES_C</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" prot="public" virt="non-virtual"><scope>fcmaes::crfmnescpp::CRFMNES_C</scope><name>ask</name></member>
      <member refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a3a0ed9ee6a06fadc715153d6be9145b3" prot="public" virt="non-virtual"><scope>fcmaes::crfmnescpp::CRFMNES_C</scope><name>dim</name></member>
      <member refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" prot="public" virt="non-virtual"><scope>fcmaes::crfmnescpp::CRFMNES_C</scope><name>popsize</name></member>
      <member refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" prot="public" virt="non-virtual"><scope>fcmaes::crfmnescpp::CRFMNES_C</scope><name>population</name></member>
      <member refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a5be4aaaff3704c64f6579594e6aa32fe" prot="public" virt="non-virtual"><scope>fcmaes::crfmnescpp::CRFMNES_C</scope><name>ptr</name></member>
      <member refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" prot="public" virt="non-virtual"><scope>fcmaes::crfmnescpp::CRFMNES_C</scope><name>result</name></member>
      <member refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a30327c6b3f1ecc4add777f4a74e83533" prot="public" virt="non-virtual"><scope>fcmaes::crfmnescpp::CRFMNES_C</scope><name>tell</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

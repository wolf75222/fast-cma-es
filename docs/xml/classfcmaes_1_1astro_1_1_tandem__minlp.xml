<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1astro_1_1_tandem__minlp" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::astro::Tandem_minlp</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1_tandem__minlp_1ae5334e0ccd190cefdaf55458e695d304" prot="public" static="no" mutable="no">
        <type>tuple</type>
        <definition>tuple fcmaes.astro.Tandem_minlp::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>fcmaes.astro.Tandem_minlp.name</qualifiedname>
        <initializer>=  (&apos;<ref refid="classfcmaes_1_1astro_1_1_tandem" kindref="compound">Tandem</ref> minlp &apos; if constrained else &apos;<ref refid="classfcmaes_1_1astro_1_1_tandem" kindref="compound">Tandem</ref> unconstrained minlp &apos;)</initializer>
        <briefdescription>
<para>Name of the MINLP problem, either constrained or unconstrained. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="523" column="1" bodyfile="fcmaes/astro.py" bodystart="523" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1mode_1_1wrapper_1a3da595496f0fa1e7a64955db25dec429" compoundref="mode_8py" startline="1370" endline="1403">fcmaes.mode.wrapper.__call__</referencedby>
        <referencedby refid="classexamples_1_1reproblem_1_1re__problem_1aaa502e5bfc8d1a94d57be0856676919c" compoundref="reproblem_8py" startline="83" endline="86">examples.reproblem.re_problem.fun</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1_tandem__minlp_1a28656ec242ea92f2ab7ccc385d333a62" prot="public" static="no" mutable="no">
        <type>str</type>
        <definition>str fcmaes.astro.Tandem_minlp::fun_c</definition>
        <argsstring></argsstring>
        <name>fun_c</name>
        <qualifiedname>fcmaes.astro.Tandem_minlp.fun_c</qualifiedname>
        <initializer>=  &quot;tandemC&quot; if constrained else &quot;tandemCu&quot;</initializer>
        <briefdescription>
<para>Name of the corresponding C function for the constrained or unconstrained computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="524" column="1" bodyfile="fcmaes/astro.py" bodystart="524" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1astro_1_1_tandem__minlp_1aa0c9717bee62a0dfeb50f4533d09a5a2" compoundref="astro_8py" startline="548" endline="563">fcmaes.astro.Tandem_minlp.tandem_minlp</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1_tandem__minlp_1ab4f58a6afc6358ae6c4004395eb94ade" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.astro.Tandem_minlp::fun</definition>
        <argsstring></argsstring>
        <name>fun</name>
        <qualifiedname>fcmaes.astro.Tandem_minlp.fun</qualifiedname>
        <initializer>=  self.tandem_minlp</initializer>
        <briefdescription>
<para>Reference to the objective function (<computeroutput>tandem_minlp</computeroutput>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="525" column="1" bodyfile="fcmaes/astro.py" bodystart="525" bodyend="-1"/>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1ac24e8f7966063c3bc0cc215a561cbadb" compoundref="crypto_8py" startline="167" endline="170">examples.crypto.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1add29e0fd221efd5ffa3ce2f0933b633f" compoundref="harvesting_8py" startline="211" endline="214">examples.harvesting.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a65088d25d52805209f6dfec80ed1aa9f" compoundref="jobshop_8py" startline="252" endline="255">examples.jobshop.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback_1a2725c10a3383f79e36a236de01c56c53" compoundref="evaluator_8py" startline="723" endline="729">fcmaes.evaluator.callback.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__mo_1a99eab2bafd1186fff0be59544a596443" compoundref="evaluator_8py" startline="880" endline="893">fcmaes.evaluator.callback_mo.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__par_1a2cc5592287f3feddcda3e51dcf38054b" compoundref="evaluator_8py" startline="950" endline="969">fcmaes.evaluator.callback_par.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__so_1a91b3f73bc6c6999748aaf8bfb94cdd39" compoundref="evaluator_8py" startline="795" endline="809">fcmaes.evaluator.callback_so.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1wrapper_1a3da595496f0fa1e7a64955db25dec429" compoundref="mode_8py" startline="1370" endline="1403">fcmaes.mode.wrapper.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a4f28f983cc8d831a834065b9ad762dc1" compoundref="de_8py" startline="567" endline="579">fcmaes.de.DE.apply_fun</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a2d6eb4d91b58018e74be863ecf71862b" compoundref="de_8py" startline="658" endline="693">fcmaes.de.DE.do_optimize_delayed_update</referencedby>
        <referencedby refid="classfcmaes_1_1moretry_1_1mo__wrapper_1a9f091a54dc6f2c2fefb4c6a90ab108a2" compoundref="moretry_8py" startline="327" endline="335">fcmaes.moretry.mo_wrapper.eval</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a8b05705866c5de83931191324a4e1311" compoundref="benchmark__gtop__pygmo_8py" startline="46" endline="48">examples.benchmark_gtop_pygmo.pygmo_udp.fitness</referencedby>
        <referencedby refid="classfcmaes_1_1moretry_1_1mo__wrapper_1a9dbf1252c03ebe42925abe561e556598" compoundref="moretry_8py" startline="346" endline="348">fcmaes.moretry.mo_wrapper.mo_eval</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a1209aafc30c6a32427e2707c0bcadd22" compoundref="crypto_8py" startline="171" endline="176">examples.crypto.fitness.mofun</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a3ba688bf0d5b34a2cc6268a2248dfaa0" compoundref="crypto_8py" startline="177" endline="180">examples.crypto.fitness.ndfun</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a02628583a11cb998eba4aa6f9b499f76" compoundref="optimizer_8py" startline="3307" endline="3313">fcmaes.optimizer.NLopt.nlfunc</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1aa36396c7701eed3f5d8e84a14a111104" compoundref="evaluator_8py" startline="433" endline="437">fcmaes.evaluator._fitness.values</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1_tandem__minlp_1a95a182a6b93b36922e8d3e120345e0e2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.astro.Tandem_minlp::bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <qualifiedname>fcmaes.astro.Tandem_minlp.bounds</qualifiedname>
        <initializer>=  Bounds([5475, 2.5, 0, 0, 20, 20, 20, 20, 0.01, 0.01, 0.01, 0.01, 1.05, 1.05, 1.05, -math.pi, -math.pi, -math.pi,
                              1.51,1.51,1.51],
                             [9132, 4.9, 1, 1, 2500, 2500, 2500, 2500, 0.99, 0.99, 0.99, 0.99, 10, 10, 10, math.pi,  math.pi,  math.pi,
                              3.49,4.49,5.49])</initializer>
        <briefdescription>
<para>Bounds for the optimization problem variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the instance with attributes based on whether it is in a constrained or unconstrained state. Sets the name, function strings for constrained operations, function reference, and specific variable bounds.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>constrained</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines whether the instance is in the constrained state. Defaults to True. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="526" column="1" bodyfile="fcmaes/astro.py" bodystart="526" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_check_bounds_1a85adee224b45c4a645b251017c1d604b" compoundref="optimizer_8py" startline="2905" endline="2910">fcmaes.optimizer.CheckBounds.__call__</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a41d3b087b32923f75cbe401f3f2419e3" compoundref="benchmark__gtop__pygmo_8py" startline="49" endline="51">examples.benchmark_gtop_pygmo.pygmo_udp.get_bounds</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" compoundref="anpcp_8py" startline="78" endline="98">anpcp.ANPCP.init_tsp</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a96c79aee6dab29a25fd28b0b383f1916" compoundref="employee_8py" startline="241" endline="250">examples.employee.problem.optimize</referencedby>
        <referencedby refid="classexamples_1_1trappist__delivery_1_1fitness_1ad25284f2ed9bbb5897ec7ca711e5fa17" compoundref="trappist__delivery_8py" startline="944" endline="954">examples.trappist_delivery.fitness.optimize</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a451356183bd266ec5feb44a1b9cf92ef" compoundref="employee_8py" startline="251" endline="268">examples.employee.problem.optimize_mo</referencedby>
        <referencedby refid="classfcmaes_1_1journal_1_1journal__wrapper_1a5adc885590326f2a0989cbef083646e2" compoundref="journal_8py" startline="608" endline="613">fcmaes.journal.journal_wrapper.store_x</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1astro_1_1_tandem__minlp_1a13780d3723cb39e01929d7d82848dfe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.astro.Tandem_minlp.__init__</definition>
        <argsstring>(self, constrained=True)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.astro.Tandem_minlp.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>constrained</type>
          <defname>constrained</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="522" column="1" bodyfile="fcmaes/astro.py" bodystart="522" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1astro_1_1_tandem__minlp_1aa0c9717bee62a0dfeb50f4533d09a5a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.astro.Tandem_minlp.tandem_minlp</definition>
        <argsstring>(self, xs)</argsstring>
        <name>tandem_minlp</name>
        <qualifiedname>fcmaes.astro.Tandem_minlp.tandem_minlp</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>xs</type>
          <defname>xs</defname>
        </param>
        <briefdescription>
<para>Evaluates a function using given sequence and array inputs. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method processes the provided list of inputs, partitions it into
   specific components, prepares the necessary C data types, and calls an
   external function to compute the final value. If the function call fails
   or the result is non-finite, a fallback default value is returned.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of floats where the first part represents an array of values and the last three indicate sequence parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float The result of the computation provided by the external function. Defaults to 1E10 if the computation fails or produces a non-finite value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="548" column="1" bodyfile="fcmaes/astro.py" bodystart="548" bodyend="563"/>
        <references refid="classfcmaes_1_1astro_1_1_astrofun_1a5ce1bafb6bcb8c199b249bda95cc1f5e" compoundref="astro_8py" startline="105">fcmaes.astro.Astrofun.fun_c</references>
        <references refid="classfcmaes_1_1astro_1_1_tandem_1ac8fa6a908f79271f8e69a3ebcd7dc115" compoundref="astro_8py" startline="450">fcmaes.astro.Tandem.fun_c</references>
        <references refid="classfcmaes_1_1astro_1_1_tandem__minlp_1a28656ec242ea92f2ab7ccc385d333a62" compoundref="astro_8py" startline="524">fcmaes.astro.Tandem_minlp.fun_c</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Encapsulates a <ref refid="classfcmaes_1_1astro_1_1_tandem" kindref="compound">Tandem</ref> optimization problem in the form of a mixed-integer nonlinear programming (MINLP) task. </para>
    </briefdescription>
    <detaileddescription>
<para>This class models and processes a constrained or unconstrained tandem optimization problem. It allows setting boundaries on variables, defining the objective function specific to the problem, and performing computations for the given input vector. The specific configuration is determined based on the <computeroutput>constrained</computeroutput> parameter. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.astro.Tandem_minlp</label>
        <link refid="classfcmaes_1_1astro_1_1_tandem__minlp"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/astro.py" line="500" column="1" bodyfile="fcmaes/astro.py" bodystart="500" bodyend="563"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1astro_1_1_tandem__minlp_1a13780d3723cb39e01929d7d82848dfe6" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem_minlp</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem__minlp_1a95a182a6b93b36922e8d3e120345e0e2" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem_minlp</scope><name>bounds</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem__minlp_1ab4f58a6afc6358ae6c4004395eb94ade" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem_minlp</scope><name>fun</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem__minlp_1a28656ec242ea92f2ab7ccc385d333a62" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem_minlp</scope><name>fun_c</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem__minlp_1ae5334e0ccd190cefdaf55458e695d304" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem_minlp</scope><name>name</name></member>
      <member refid="classfcmaes_1_1astro_1_1_tandem__minlp_1aa0c9717bee62a0dfeb50f4533d09a5a2" prot="public" virt="non-virtual"><scope>fcmaes::astro::Tandem_minlp</scope><name>tandem_minlp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

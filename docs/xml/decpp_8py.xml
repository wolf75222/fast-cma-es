<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="decpp_8py" kind="file" language="Python">
    <compoundname>decpp.py</compoundname>
    <innerclass refid="classfcmaes_1_1decpp_1_1_d_e___c" prot="public">fcmaes::decpp::DE_C</innerclass>
    <innernamespace refid="namespacefcmaes">fcmaes</innernamespace>
    <innernamespace refid="namespacefcmaes_1_1decpp">fcmaes::decpp</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacefcmaes_1_1decpp_1a890d0db67042ae71d4c7df9adec2d3ec" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::decpp.optimizeDE_C</definition>
        <argsstring></argsstring>
        <name>optimizeDE_C</name>
        <qualifiedname>fcmaes.decpp.optimizeDE_C</qualifiedname>
        <initializer>=  libcmalib.optimizeDE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/decpp.py" line="433" column="1" bodyfile="fcmaes/decpp.py" bodystart="433" bodyend="-1"/>
        <referencedby refid="namespacefcmaes_1_1decpp_1a5f109c8aa67919ea612f518860268ea3" compoundref="decpp_8py" startline="139" endline="176">fcmaes.decpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1decpp_1a6f58a442e0eb6c6c1ec1396e794faf04" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::decpp.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>fcmaes.decpp.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/decpp.py" line="434" column="1" bodyfile="fcmaes/decpp.py" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1decpp_1ae77a3d487fdde3b54015c3fcb4758e17" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::decpp.initDE_C</definition>
        <argsstring></argsstring>
        <name>initDE_C</name>
        <qualifiedname>fcmaes.decpp.initDE_C</qualifiedname>
        <initializer>=  libcmalib.initDE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/decpp.py" line="442" column="1" bodyfile="fcmaes/decpp.py" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1decpp_1abe8daeb234f718819dbb5a946b16d39b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::decpp.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>fcmaes.decpp.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/decpp.py" line="450" column="1" bodyfile="fcmaes/decpp.py" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1decpp_1adecb8709958be364970da9957340521a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::decpp.destroyDE_C</definition>
        <argsstring></argsstring>
        <name>destroyDE_C</name>
        <qualifiedname>fcmaes.decpp.destroyDE_C</qualifiedname>
        <initializer>=  libcmalib.destroyDE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/decpp.py" line="452" column="1" bodyfile="fcmaes/decpp.py" bodystart="452" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ab22d38f2f4822b861fa7217725d8db1a" compoundref="decpp_8py" startline="310" endline="312">fcmaes.decpp.DE_C.__del__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1decpp_1a63c8f68ce2fc471736fe8dbf0a9c297e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::decpp.askDE_C</definition>
        <argsstring></argsstring>
        <name>askDE_C</name>
        <qualifiedname>fcmaes.decpp.askDE_C</qualifiedname>
        <initializer>=  libcmalib.askDE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/decpp.py" line="455" column="1" bodyfile="fcmaes/decpp.py" bodystart="455" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ac938731f80bce720692af9b7b84e41d0" compoundref="decpp_8py" startline="329" endline="343">fcmaes.decpp.DE_C.ask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1decpp_1a42e7c91ec427be0aca79ecf4bec8319f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::decpp.tellDE_C</definition>
        <argsstring></argsstring>
        <name>tellDE_C</name>
        <qualifiedname>fcmaes.decpp.tellDE_C</qualifiedname>
        <initializer>=  libcmalib.tellDE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/decpp.py" line="458" column="1" bodyfile="fcmaes/decpp.py" bodystart="458" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad53cc4b5553a819096b47115e1f49b42" compoundref="decpp_8py" startline="360" endline="367">fcmaes.decpp.DE_C.tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1decpp_1a83480897deb0e4a967b6de51edd57f3e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::decpp.populationDE_C</definition>
        <argsstring></argsstring>
        <name>populationDE_C</name>
        <qualifiedname>fcmaes.decpp.populationDE_C</qualifiedname>
        <initializer>=  libcmalib.populationDE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/decpp.py" line="462" column="1" bodyfile="fcmaes/decpp.py" bodystart="462" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ae6321ea6313c6ef9bf44d492aaa619f8" compoundref="decpp_8py" startline="385" endline="399">fcmaes.decpp.DE_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1decpp_1af82bf7db3d2be348a9dbec6a24087b14" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::decpp.resultDE_C</definition>
        <argsstring></argsstring>
        <name>resultDE_C</name>
        <qualifiedname>fcmaes.decpp.resultDE_C</qualifiedname>
        <initializer>=  libcmalib.resultDE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/decpp.py" line="465" column="1" bodyfile="fcmaes/decpp.py" bodystart="465" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1a2f794b6d8709f5b14d5f56695bb8d8ff" compoundref="decpp_8py" startline="416" endline="430">fcmaes.decpp.DE_C.result</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacefcmaes_1_1decpp_1a5f109c8aa67919ea612f518860268ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OptimizeResult</type>
        <definition> OptimizeResult fcmaes.decpp.minimize</definition>
        <argsstring>(Callable[[ArrayLike], float] fun, Optional[int] dim=None, Optional[Bounds] bounds=None, Optional[int] popsize=31, Optional[int] max_evaluations=100000, Optional[float] stop_fitness=-np.inf, Optional[int] keep=200, Optional[float] f=0.5, Optional[float] cr=0.9, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[ArrayLike] ints=None, Optional[float] min_mutate=0.1, Optional[float] max_mutate=0.5, Optional[int] workers=1, Optional[Callable[[ArrayLike, float], bool]] is_terminate=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=None, Optional[float] min_sigma=0, Optional[int] runid=0)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.decpp.minimize</qualifiedname>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>dim</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>dim</declname>
          <defname>bounds</defname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>popsize</defname>
          <array>[Bounds]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <defname>max_evaluations</defname>
          <array>[int]</array>
          <defval>31</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <defname>stop_fitness</defname>
          <array>[int]</array>
          <defval>100000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <defname>keep</defname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>keep</declname>
          <defname>f</defname>
          <array>[int]</array>
          <defval>200</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>f</declname>
          <defname>cr</defname>
          <array>[float]</array>
          <defval>0.5</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>cr</declname>
          <defname>rg</defname>
          <array>[float]</array>
          <defval>0.9</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>rg</declname>
          <defname>ints</defname>
          <array>[Generator]</array>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>ints</declname>
          <defname>min_mutate</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>min_mutate</declname>
          <defname>max_mutate</defname>
          <array>[float]</array>
          <defval>0.1</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_mutate</declname>
          <defname>workers</defname>
          <array>[float]</array>
          <defval>0.5</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>workers</declname>
          <defname>is_terminate</defname>
          <array>[int]</array>
          <defval>1</defval>
        </param>
        <param>
          <type>Optional</type>
          <defname>x0</defname>
          <array>[Callable[[ArrayLike, float]</array>
        </param>
        <param>
          <type>bool]]</type>
          <declname>is_terminate</declname>
          <defname>input_sigma</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>x0</declname>
          <defname>min_sigma</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional]</type>
          <declname>input_sigma</declname>
          <defname>runid</defname>
          <array>[Union[float, ArrayLike, Callable]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>min_sigma</declname>
          <array>[float]</array>
          <defval>0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>runid</declname>
          <array>[int]</array>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Performs optimization using the Differential Evolution algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para>This function seeks to find the global minimum of a given objective function by employing the Differential Evolution strategy. It supports various configurable parameters, including bounds, population size, mutation factors, and customization of the optimization process through callbacks and other options.</para>
<para><verbatim>   fun (Callable[[ArrayLike], float]): The objective function to minimize.
       Must take an array-like input and return a scalar float value.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimensionality of the input space. If bounds are provided, this should match the bounds&apos; dimensionality. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>Bounds on the input parameters. Should be provided as a sequence of tuples (min, max) or equivalent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the population for evolution. Defaults to 31. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of function evaluations allowed. Defaults to 100000. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_fitness" kindref="compound">Fitness</ref> threshold at which optimization stops. Defaults to -infinity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keep</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of best individuals to retain in the current population for elitism purposes. Defaults to 200. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Differential weight for mutation [0, 2]. Defaults to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0.5.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cr</parametername>
</parameternamelist>
<parameterdescription>
<para>Crossover probability in the range [0, 1]. Defaults to 0.9. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator instance. Defaults to Generator(PCG64DXSM()). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ints</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean array indicating which dimensions should be treated as integers during optimization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_mutate</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum mutation factor. Defaults to 0.1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_mutate</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum mutation factor. Defaults to 0.5. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workers</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of parallel threads for evaluation. Defaults to 1. Use 0 for single-threaded execution. is_terminate (Optional[Callable[[ArrayLike, float], bool]]): Callback to determine whether to terminate the optimization early. Takes the best solution and its fitness as input. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial positions of the population. If not provided, it is randomly initialized within bounds. input_sigma (Optional[Union[float, ArrayLike, Callable]]): Standard deviation for initializing the population. If scalar, applies to all dimensions. If callable, it should generate the array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum allowable standard deviation for the population. Defaults to 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runid</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for this particular optimization run. Defaults to 0.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>OptimizeResult Object containing optimization results such as the best solution (<computeroutput>x</computeroutput>), function value (<computeroutput>fun</computeroutput>), number of evaluations (<computeroutput>nfev</computeroutput>), number of iterations (<computeroutput>nit</computeroutput>), exit status (<computeroutput>status</computeroutput>), and success flag (<computeroutput>success</computeroutput>). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/decpp.py" line="121" column="1" bodyfile="fcmaes/decpp.py" bodystart="139" bodyend="176"/>
        <references refid="namespacefcmaes_1_1decpp_1a890d0db67042ae71d4c7df9adec2d3ec" compoundref="decpp_8py" startline="433">fcmaes.decpp.optimizeDE_C</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>============================================================================= </para>
    </briefdescription>
    <detaileddescription>
<para>Fast version 1.6.11</para>
<para>(c) 2025 – Dietmar Wolz (c) 2025 – Latitude</para>
<para>License MIT</para>
<para><itemizedlist>
<listitem><para><ref refid="decpp_8py" kindref="compound">decpp.py</ref></para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Description</title><para><itemizedlist>
<listitem><para>Eigen based implementation of differential evolution using the DE/best/1 strategy. Uses three deviations from the standard DE algorithm: a) temporal locality introduced in [2]. b) reinitialization of individuals based on their age. c) oscillating CR/F parameters. </para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The ints parameter is a boolean array indicating which parameters are discrete integer values. This parameter was introduced after observing non optimal results for the ESP2 benchmark problem: <programlisting><codeline><highlight class="normal">[3]</highlight></codeline>
</programlisting> If defined it causes a &quot;special treatment&quot; for discrete variables: They are rounded to the next integer value and there is an additional mutation to avoid getting stuck to local minima.</para>
</simplesect>
<simplesect kind="author"><para>:<itemizedlist>
<listitem><para>Dietmar Wolz <programlisting><codeline><highlight class="normal">-<sp/>romain.despoullains</highlight><highlight class="preprocessor">@latitude.eu</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">-<sp/>corentin.generet</highlight><highlight class="preprocessor">@latitude.eu</highlight></codeline>
</programlisting></para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>References</title><para><itemizedlist>
<listitem><para>[1] <ulink url="https://github.com/dietmarwo/fast-cma-es">https://github.com/dietmarwo/fast-cma-es</ulink></para>
</listitem><listitem><para>[2] <ulink url="https://www.researchgate.net/publication/309179699_Differential_evolution_for_protein_folding_optimization_based_on_a_three-dimensional_AB_off-lattice_model">https://www.researchgate.net/publication/309179699_Differential_evolution_for_protein_folding_optimization_based_on_a_three-dimensional_AB_off-lattice_model</ulink></para>
</listitem><listitem><para>[3] <ulink url="https://github.com/AlgTUDelft/ExpensiveOptimBenchmark/blob/master/expensiveoptimbenchmark/problems/DockerCFDBenchmark.py">https://github.com/AlgTUDelft/ExpensiveOptimBenchmark/blob/master/expensiveoptimbenchmark/problems/DockerCFDBenchmark.py</ulink></para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>Documentation</title><para><itemizedlist>
<listitem></listitem></itemizedlist>
</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacefcmaes_1_1decpp" refkind="compound"><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">=============================================================================</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/>Fast<sp/>CMA-ES<sp/>-<sp/>version<sp/>1.6.11</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/>(c)<sp/>2025<sp/>–<sp/>Dietmar<sp/>Wolz</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/>(c)<sp/>2025<sp/>–<sp/>Latitude</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/>License:<sp/>MIT</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/>File:</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/>-<sp/>decpp.py</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/>Description:</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/>-<sp/>Eigen<sp/>based<sp/>implementation<sp/>of<sp/>differential<sp/>evolution<sp/>using<sp/>the<sp/>DE/best/1<sp/>strategy.</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Uses<sp/>three<sp/>deviations<sp/>from<sp/>the<sp/>standard<sp/>DE<sp/>algorithm:</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a)<sp/>temporal<sp/>locality<sp/>introduced<sp/>in<sp/>[2].</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>b)<sp/>reinitialization<sp/>of<sp/>individuals<sp/>based<sp/>on<sp/>their<sp/>age.</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>c)<sp/>oscillating<sp/>CR/F<sp/>parameters.</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>ints<sp/>parameter<sp/>is<sp/>a<sp/>boolean<sp/>array<sp/>indicating<sp/>which<sp/>parameters<sp/>are<sp/>discrete<sp/>integer<sp/>values.<sp/>This</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>parameter<sp/>was<sp/>introduced<sp/>after<sp/>observing<sp/>non<sp/>optimal<sp/>results<sp/>for<sp/>the<sp/>ESP2<sp/>benchmark<sp/>problem:</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>[3]</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>If<sp/>defined<sp/>it<sp/>causes<sp/>a<sp/>&quot;special<sp/>treatment&quot;<sp/>for<sp/>discrete<sp/>variables:<sp/>They<sp/>are<sp/>rounded<sp/>to<sp/>the<sp/>next<sp/>integer<sp/>value<sp/>and</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>there<sp/>is<sp/>an<sp/>additional<sp/>mutation<sp/>to<sp/>avoid<sp/>getting<sp/>stuck<sp/>to<sp/>local<sp/>minima.</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/>Authors:</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/>-<sp/>Dietmar<sp/>Wolz</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/>-<sp/>romain.despoullains@latitude.eu</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/>-<sp/>corentin.generet@latitude.eu</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/>References:</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/>-<sp/>[1]<sp/>https://github.com/dietmarwo/fast-cma-es</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/>-<sp/>[2]<sp/>https://www.researchgate.net/publication/309179699_Differential_evolution_for_protein_folding_optimization_based_on_a_three-dimensional_AB_off-lattice_model</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/>-<sp/>[3]<sp/>https://github.com/AlgTUDelft/ExpensiveOptimBenchmark/blob/master/expensiveoptimbenchmark/problems/DockerCFDBenchmark.py</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/>Documentation:</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/>-</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral">=============================================================================</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.random<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PCG64DXSM,<sp/>Generator</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OptimizeResult,<sp/>Bounds</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1evaluator" kindref="compound">fcmaes.evaluator</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mo_call_back_type,<sp/>callback_so,<sp/>libcmalib</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1de" kindref="compound">fcmaes.de</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>_check_bounds</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Optional,<sp/>Callable,<sp/>Tuple,<sp/>Union</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ArrayLike</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">os.environ[</highlight><highlight class="stringliteral">&apos;MKL_DEBUG_CPU_TYPE&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;5&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1decpp_1a5f109c8aa67919ea612f518860268ea3" kindref="member">minimize</ref>(fun:<sp/>Callable[[ArrayLike],<sp/>float],</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim:<sp/>Optional[int]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional[Bounds]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize:<sp/>Optional[int]<sp/>=<sp/>31,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations:<sp/>Optional[int]<sp/>=<sp/>100000,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness:<sp/>Optional[float]<sp/>=<sp/>-np.inf,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep:<sp/>Optional[int]<sp/>=<sp/>200,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f:<sp/>Optional[float]<sp/>=<sp/>0.5,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr:<sp/>Optional[float]<sp/>=<sp/>0.9,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg:<sp/>Optional[Generator]<sp/>=<sp/>Generator(PCG64DXSM()),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ints:<sp/>Optional[ArrayLike]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_mutate:<sp/>Optional[float]<sp/>=<sp/>0.1,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_mutate:<sp/>Optional[float]<sp/>=<sp/>0.5,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers:<sp/>Optional[int]<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_terminate:<sp/>Optional[Callable[[ArrayLike,<sp/>float],<sp/>bool]]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0:<sp/>Optional[ArrayLike]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma:<sp/>Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_sigma:<sp/>Optional[float]<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid:<sp/>Optional[int]<sp/>=<sp/>0)<sp/>-&gt;<sp/>OptimizeResult:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Performs<sp/>optimization<sp/>using<sp/>the<sp/>Differential<sp/>Evolution<sp/>algorithm.</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>seeks<sp/>to<sp/>find<sp/>the<sp/>global<sp/>minimum<sp/>of<sp/>a<sp/>given<sp/>objective<sp/>function</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>by<sp/>employing<sp/>the<sp/>Differential<sp/>Evolution<sp/>strategy.<sp/>It<sp/>supports<sp/>various</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>configurable<sp/>parameters,<sp/>including<sp/>bounds,<sp/>population<sp/>size,<sp/>mutation<sp/>factors,</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>customization<sp/>of<sp/>the<sp/>optimization<sp/>process<sp/>through<sp/>callbacks<sp/>and<sp/>other</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>options.</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>(Callable[[ArrayLike],<sp/>float]):<sp/>The<sp/>objective<sp/>function<sp/>to<sp/>minimize.</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Must<sp/>take<sp/>an<sp/>array-like<sp/>input<sp/>and<sp/>return<sp/>a<sp/>scalar<sp/>float<sp/>value.</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(Optional[int]):<sp/>Dimensionality<sp/>of<sp/>the<sp/>input<sp/>space.<sp/>If<sp/>bounds<sp/>are</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>provided,<sp/>this<sp/>should<sp/>match<sp/>the<sp/>bounds&apos;<sp/>dimensionality.</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>(Optional[Bounds]):<sp/>Bounds<sp/>on<sp/>the<sp/>input<sp/>parameters.<sp/>Should<sp/>be</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>provided<sp/>as<sp/>a<sp/>sequence<sp/>of<sp/>tuples<sp/>(min,<sp/>max)<sp/>or<sp/>equivalent.</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(Optional[int]):<sp/>Size<sp/>of<sp/>the<sp/>population<sp/>for<sp/>evolution.<sp/>Defaults</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>31.</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>(Optional[int]):<sp/>Maximum<sp/>number<sp/>of<sp/>function<sp/>evaluations</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed.<sp/>Defaults<sp/>to<sp/>100000.</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness<sp/>(Optional[float]):<sp/>Fitness<sp/>threshold<sp/>at<sp/>which<sp/>optimization</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stops.<sp/>Defaults<sp/>to<sp/>-infinity.</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>(Optional[int]):<sp/>Number<sp/>of<sp/>best<sp/>individuals<sp/>to<sp/>retain<sp/>in<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>population<sp/>for<sp/>elitism<sp/>purposes.<sp/>Defaults<sp/>to<sp/>200.</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>(Optional[float]):<sp/>Differential<sp/>weight<sp/>for<sp/>mutation<sp/>[0,<sp/>2].<sp/>Defaults<sp/>to</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5.</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>(Optional[float]):<sp/>Crossover<sp/>probability<sp/>in<sp/>the<sp/>range<sp/>[0,<sp/>1].</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defaults<sp/>to<sp/>0.9.</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg<sp/>(Optional[Generator]):<sp/>Random<sp/>number<sp/>generator<sp/>instance.<sp/>Defaults</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>Generator(PCG64DXSM()).</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ints<sp/>(Optional[ArrayLike]):<sp/>Boolean<sp/>array<sp/>indicating<sp/>which<sp/>dimensions</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>treated<sp/>as<sp/>integers<sp/>during<sp/>optimization.</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_mutate<sp/>(Optional[float]):<sp/>Minimum<sp/>mutation<sp/>factor.<sp/>Defaults<sp/>to<sp/>0.1.</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_mutate<sp/>(Optional[float]):<sp/>Maximum<sp/>mutation<sp/>factor.<sp/>Defaults<sp/>to<sp/>0.5.</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers<sp/>(Optional[int]):<sp/>Number<sp/>of<sp/>parallel<sp/>threads<sp/>for<sp/>evaluation.</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defaults<sp/>to<sp/>1.<sp/>Use<sp/>0<sp/>for<sp/>single-threaded<sp/>execution.</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_terminate<sp/>(Optional[Callable[[ArrayLike,<sp/>float],<sp/>bool]]):<sp/>Callback<sp/>to</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>determine<sp/>whether<sp/>to<sp/>terminate<sp/>the<sp/>optimization<sp/>early.<sp/>Takes<sp/>the<sp/>best</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution<sp/>and<sp/>its<sp/>fitness<sp/>as<sp/>input.</highlight></codeline>
<codeline lineno="121" refid="namespacefcmaes_1_1decpp_1a5f109c8aa67919ea612f518860268ea3" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>(Optional[ArrayLike]):<sp/>Initial<sp/>positions<sp/>of<sp/>the<sp/>population.<sp/>If<sp/>not</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>provided,<sp/>it<sp/>is<sp/>randomly<sp/>initialized<sp/>within<sp/>bounds.</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>(Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]):<sp/>Standard</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviation<sp/>for<sp/>initializing<sp/>the<sp/>population.<sp/>If<sp/>scalar,<sp/>applies<sp/>to<sp/>all</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimensions.<sp/>If<sp/>callable,<sp/>it<sp/>should<sp/>generate<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_sigma<sp/>(Optional[float]):<sp/>Minimum<sp/>allowable<sp/>standard<sp/>deviation<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>population.<sp/>Defaults<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid<sp/>(Optional[int]):<sp/>Identifier<sp/>for<sp/>this<sp/>particular<sp/>optimization<sp/>run.</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defaults<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizeResult:<sp/>Object<sp/>containing<sp/>optimization<sp/>results<sp/>such<sp/>as<sp/>the<sp/>best</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution<sp/>(`x`),<sp/>function<sp/>value<sp/>(`fun`),<sp/>number<sp/>of<sp/>evaluations<sp/>(`nfev`),</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>iterations<sp/>(`nit`),<sp/>exit<sp/>status<sp/>(`status`),<sp/>and<sp/>success<sp/>flag</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(`success`).</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>dim,<sp/>lower,<sp/>upper<sp/>=<sp/>_check_bounds(bounds,<sp/>dim)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>popsize<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>31</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>input_sigma<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>callable(input_sigma):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma=input_sigma()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.ndim(input_sigma)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>=<sp/>[input_sigma]<sp/>*<sp/>dim</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>workers<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers<sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>dim<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>bool_array_type<sp/>=<sp/>ct.c_bool<sp/>*<sp/>dim<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>c_callback<sp/>=<sp/>mo_call_back_type(<ref refid="classfcmaes_1_1evaluator_1_1callback__so" kindref="compound">callback_so</ref>(fun,<sp/>dim,<sp/>is_terminate))</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>seed<sp/>=<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(dim+4)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1decpp_1a890d0db67042ae71d4c7df9adec2d3ec" kindref="member">optimizeDE_C</ref>(runid,<sp/>c_callback,<sp/>dim,<sp/>seed,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lower<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*lower),<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>upper<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*upper),<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x0<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*x0),<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>input_sigma<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*input_sigma),<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_sigma,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ints<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>bool_array_type(*ints),<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations,<sp/>keep,<sp/>stop_fitness,<sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize,<sp/>f,<sp/>cr,<sp/>min_mutate,<sp/>max_mutate,<sp/>workers,<sp/>res_p)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>res[:dim]</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>res[dim]</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>int(res[dim+1])</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>int(res[dim+2])</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>int(res[dim+3])</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OptimizeResult(x=x,<sp/>fun=val,<sp/>nfev=evals,<sp/>nit=iterations,<sp/>status=stop,<sp/>success=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OptimizeResult(x=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>fun=sys.float_info.max,<sp/>nfev=0,<sp/>nit=0,<sp/>status=-1,<sp/>success=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1decpp_1_1_d_e___c" kindref="compound">DE_C</ref>:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>class<sp/>to<sp/>perform<sp/>Differential<sp/>Evolution<sp/>(DE)<sp/>algorithm<sp/>using<sp/>a<sp/>C<sp/>implementation<sp/>backend.</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>provides<sp/>an<sp/>interface<sp/>to<sp/>perform<sp/>Differential<sp/>Evolution<sp/>optimization.<sp/>The</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>underlying<sp/>algorithms<sp/>are<sp/>implemented<sp/>in<sp/>C<sp/>for<sp/>performance.<sp/>Users<sp/>can<sp/>configure<sp/>the</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>optimization<sp/>parameters<sp/>such<sp/>as<sp/>population<sp/>size,<sp/>mutation<sp/>factors,<sp/>bounds,<sp/>and</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>constraints.<sp/>It<sp/>also<sp/>provides<sp/>methods<sp/>to<sp/>query<sp/>results,<sp/>manage<sp/>population<sp/>and<sp/>perform</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>optimization<sp/>steps<sp/>using<sp/>an<sp/>ask-tell<sp/>interface<sp/>for<sp/>iterative<sp/>optimization<sp/>processes.</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>Dimension<sp/>of<sp/>the<sp/>optimization<sp/>problem.</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>(Bounds):<sp/>Bounds<sp/>for<sp/>each<sp/>dimension<sp/>of<sp/>the<sp/>search<sp/>space.</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(int):<sp/>Size<sp/>of<sp/>the<sp/>population<sp/>used<sp/>in<sp/>the<sp/>DE<sp/>optimization.</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>(int):<sp/>Number<sp/>of<sp/>individuals<sp/>to<sp/>keep<sp/>across<sp/>generations.</highlight></codeline>
<codeline lineno="188" refid="classfcmaes_1_1decpp_1_1_d_e___c" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>(float):<sp/>Mutation<sp/>factor<sp/>used<sp/>in<sp/>the<sp/>DE<sp/>optimization.</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>(float):<sp/>Crossover<sp/>probability<sp/>used<sp/>in<sp/>the<sp/>DE<sp/>optimization.</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg<sp/>(Generator):<sp/>Random<sp/>number<sp/>generator<sp/>for<sp/>initializing<sp/>the<sp/>DE<sp/>process.</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ints<sp/>(ArrayLike):<sp/>Array<sp/>specifying<sp/>whether<sp/>each<sp/>dimension<sp/>is<sp/>integer-constrained.</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_mutate<sp/>(float):<sp/>Minimum<sp/>mutation<sp/>factor<sp/>during<sp/>the<sp/>DE<sp/>process.</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_mutate<sp/>(float):<sp/>Maximum<sp/>mutation<sp/>factor<sp/>during<sp/>the<sp/>DE<sp/>process.</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>(ArrayLike):<sp/>Initial<sp/>guess<sp/>for<sp/>the<sp/>solution<sp/>to<sp/>the<sp/>optimization<sp/>problem.</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>(Union[float,<sp/>ArrayLike,<sp/>Callable]):<sp/>Standard<sp/>deviation<sp/>for<sp/>generating</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>initial<sp/>population.</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_sigma<sp/>(float):<sp/>Minimum<sp/>standard<sp/>deviation<sp/>allowed<sp/>during<sp/>initialization.</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1afcd3a8216d55e778558eada4cdf9c6dc" kindref="member">__init__</ref>(self,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim:<sp/>Optional[int]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional[Bounds]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize:<sp/>Optional[int]<sp/>=<sp/>31,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep:<sp/>Optional[int]<sp/>=<sp/>200,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f:<sp/>Optional[float]<sp/>=<sp/>0.5,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr:<sp/>Optional[float]<sp/>=<sp/>0.9,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg:<sp/>Optional[Generator]<sp/>=<sp/>Generator(PCG64DXSM()),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ints:<sp/>Optional[ArrayLike]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_mutate:<sp/>Optional[float]<sp/>=<sp/>0.1,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_mutate:<sp/>Optional[float]<sp/>=<sp/>0.5,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0:<sp/>Optional[ArrayLike]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma:<sp/>Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]<sp/>=<sp/>0.3,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_sigma:<sp/>Optional[float]<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>an<sp/>object<sp/>for<sp/>Differential<sp/>Evolution-based<sp/>optimization.</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>implementation<sp/>is<sp/>designed<sp/>to<sp/>manage<sp/>optimization<sp/>parameters<sp/>such<sp/>as</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimensionality,<sp/>bounds,<sp/>population<sp/>size,<sp/>mutation<sp/>rates,<sp/>and<sp/>crossover</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probabilities,<sp/>as<sp/>well<sp/>as<sp/>additional<sp/>customization<sp/>options<sp/>including<sp/>random</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>generation,<sp/>variable<sp/>constraints,<sp/>and<sp/>initial<sp/>starting<sp/>points.</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(Optional[int]):<sp/>Dimensionality<sp/>of<sp/>the<sp/>optimization<sp/>problem.</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>(Optional[Bounds]):<sp/>Bounds<sp/>of<sp/>the<sp/>variables<sp/>for<sp/>the<sp/>optimization.</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(Optional[int]):<sp/>Population<sp/>size<sp/>of<sp/>the<sp/>Differential<sp/>Evolution</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithm.<sp/>Default<sp/>is<sp/>31.</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>(Optional[int]):<sp/>Number<sp/>of<sp/>iterations<sp/>to<sp/>retain<sp/>historical<sp/>data.<sp/>Default<sp/>is<sp/>200.</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>(Optional[float]):<sp/>Mutation<sp/>factor,<sp/>which<sp/>determines<sp/>the<sp/>amplitude<sp/>of</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>differential<sp/>variation.<sp/>Default<sp/>is<sp/>0.5.</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>(Optional[float]):<sp/>Crossover<sp/>probability,<sp/>controlling<sp/>the<sp/>level<sp/>of<sp/>blending</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>among<sp/>individuals.<sp/>Default<sp/>is<sp/>0.9.</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg<sp/>(Optional[Generator]):<sp/>Random<sp/>number<sp/>generator<sp/>for<sp/>initialization</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>stochastic<sp/>operations.<sp/>Default<sp/>generator<sp/>uses<sp/>the<sp/>PCG64DXSM<sp/>algorithm.</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ints<sp/>(Optional[ArrayLike]):<sp/>Indicates<sp/>which<sp/>variables<sp/>are<sp/>integers.</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_mutate<sp/>(Optional[float]):<sp/>Minimum<sp/>mutation<sp/>rate<sp/>for<sp/>the<sp/>algorithm.<sp/>Default<sp/>is<sp/>0.1.</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_mutate<sp/>(Optional[float]):<sp/>Maximum<sp/>mutation<sp/>rate<sp/>for<sp/>the<sp/>algorithm.<sp/>Default<sp/>is<sp/>0.5.</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>(Optional[ArrayLike]):<sp/>Initial<sp/>guess<sp/>or<sp/>starting<sp/>point<sp/>for<sp/>the<sp/>optimization.</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>(Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]):<sp/>Standard<sp/>deviation</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>initialization.<sp/>Could<sp/>be<sp/>a<sp/>constant,<sp/>array,<sp/>or<sp/>callable<sp/>function.<sp/>Default<sp/>is<sp/>0.3.</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_sigma<sp/>(Optional[float]):<sp/>Minimum<sp/>limit<sp/>for<sp/>the<sp/>standard<sp/>deviation.<sp/>Default<sp/>is<sp/>0.</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim,<sp/>lower,<sp/>upper<sp/>=<sp/>_check_bounds(bounds,<sp/>dim)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>popsize<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>31</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>callable(input_sigma):</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma=input_sigma()</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.ndim(input_sigma)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>=<sp/>[input_sigma]<sp/>*<sp/>dim</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>dim<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_array_type<sp/>=<sp/>ct.c_bool<sp/>*<sp/>dim<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seed<sp/>=<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad9095931be109c4c732f10d7791c54fc" kindref="member">ptr</ref><sp/>=<sp/><ref refid="namespacefcmaes_1_1decpp_1ae77a3d487fdde3b54015c3fcb4758e17" kindref="member">initDE_C</ref>(0,<sp/>dim,<sp/>seed,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lower<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*lower),<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>upper<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*upper),<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x0<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*x0),<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>input_sigma<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*input_sigma),<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_sigma,</highlight></codeline>
<codeline lineno="259" refid="classfcmaes_1_1decpp_1_1_d_e___c_1afcd3a8216d55e778558eada4cdf9c6dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ints<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>bool_array_type(*ints),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep,<sp/>popsize,<sp/>f,<sp/>cr,<sp/>min_mutate,<sp/>max_mutate)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad122a7d34bd51afeb06228ad811f85ce" kindref="member">popsize</ref><sp/>=<sp/>popsize</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1a174ff7e79ef1f1d187dc0197e95256e8" kindref="member">dim</ref><sp/>=<sp/>dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ab22d38f2f4822b861fa7217725d8db1a" kindref="member">__del__</ref>(self):</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deletes<sp/>the<sp/>object<sp/>and<sp/>performs<sp/>cleanup<sp/>by<sp/>invoking<sp/>the<sp/>corresponding<sp/>native<sp/>method.</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>destructor<sp/>is<sp/>responsible<sp/>for<sp/>freeing<sp/>any<sp/>resources<sp/>or<sp/>performing</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>necessary<sp/>cleanup<sp/>operations<sp/>associated<sp/>with<sp/>the<sp/>object<sp/>when<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocated.</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>there<sp/>is<sp/>an<sp/>issue<sp/>during<sp/>the<sp/>cleanup<sp/>process,<sp/>it<sp/>may</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>an<sp/>exception.</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1decpp_1adecb8709958be364970da9957340521a" kindref="member">destroyDE_C</ref>(self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad9095931be109c4c732f10d7791c54fc" kindref="member">ptr</ref>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ac938731f80bce720692af9b7b84e41d0" kindref="member">ask</ref>(self)<sp/>-&gt;<sp/>np.array:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generates<sp/>a<sp/>new<sp/>population<sp/>of<sp/>candidate<sp/>solutions<sp/>using<sp/>the<sp/>DE<sp/>(Differential<sp/>Evolution)</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithm.</highlight></codeline>
<codeline lineno="285" refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad9095931be109c4c732f10d7791c54fc" refkind="member"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>`ask`<sp/>method<sp/>retrieves<sp/>a<sp/>set<sp/>of<sp/>candidate<sp/>solutions<sp/>generated<sp/>by<sp/>the<sp/>DE<sp/>algorithm<sp/>from</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>C<sp/>extension.<sp/>The<sp/>solutions<sp/>are<sp/>returned<sp/>as<sp/>a<sp/>NumPy<sp/>array<sp/>with<sp/>dimensions<sp/>corresponding<sp/>to</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>population<sp/>size<sp/>and<sp/>the<sp/>dimensionality<sp/>of<sp/>the<sp/>search<sp/>space.</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>the<sp/>underlying<sp/>procedure<sp/>fails,<sp/>an<sp/>exception<sp/>is<sp/>raised<sp/>and<sp/>handled</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internally.</highlight></codeline>
<codeline lineno="293" refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad122a7d34bd51afeb06228ad811f85ce" refkind="member"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="294" refid="classfcmaes_1_1decpp_1_1_d_e___c_1a174ff7e79ef1f1d187dc0197e95256e8" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array:<sp/>A<sp/>NumPy<sp/>array<sp/>where<sp/>each<sp/>row<sp/>represents<sp/>a<sp/>candidate<sp/>solution.<sp/>Returns</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`None`<sp/>if<sp/>an<sp/>exception<sp/>occurs<sp/>during<sp/>the<sp/>process.</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad122a7d34bd51afeb06228ad811f85ce" kindref="member">popsize</ref></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1a174ff7e79ef1f1d187dc0197e95256e8" kindref="member">dim</ref></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(popsize*n)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1decpp_1a63c8f68ce2fc471736fe8dbf0a9c297e" kindref="member">askDE_C</ref>(self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad9095931be109c4c732f10d7791c54fc" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>np.empty((popsize,<sp/>n))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(popsize):</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p,:]<sp/>=<sp/>res[p*n<sp/>:<sp/>(p+1)*n]</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xs</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="310" refid="classfcmaes_1_1decpp_1_1_d_e___c_1ab22d38f2f4822b861fa7217725d8db1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad53cc4b5553a819096b47115e1f49b42" kindref="member">tell</ref>(self,<sp/>ys:<sp/>np.ndarray):</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Updates<sp/>the<sp/>object<sp/>with<sp/>input<sp/>data<sp/>and<sp/>performs<sp/>a<sp/>specific<sp/>operation<sp/>using</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>provided<sp/>numerical<sp/>array.</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>(np.ndarray):<sp/>A<sp/>NumPy<sp/>array<sp/>of<sp/>numerical<sp/>data<sp/>used<sp/>as<sp/>input<sp/>for</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>operation.</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int:<sp/>Returns<sp/>an<sp/>integer<sp/>value<sp/>indicating<sp/>the<sp/>result<sp/>of<sp/>the<sp/>operation</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>-1<sp/>in<sp/>case<sp/>of<sp/>an<sp/>exception.</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>Catches<sp/>and<sp/>prints<sp/>any<sp/>exceptions<sp/>that<sp/>occur<sp/>during<sp/>the</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execution<sp/>process.</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="classfcmaes_1_1decpp_1_1_d_e___c_1ac938731f80bce720692af9b7b84e41d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type_ys<sp/>=<sp/>ct.c_double<sp/>*<sp/>len(ys)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1decpp_1a42e7c91ec427be0aca79ecf4bec8319f" kindref="member">tellDE_C</ref>(self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad9095931be109c4c732f10d7791c54fc" kindref="member">ptr</ref>,<sp/>array_type_ys(*ys))</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ae6321ea6313c6ef9bf44d492aaa619f8" kindref="member">population</ref>(self)<sp/>-&gt;<sp/>np.array:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generates<sp/>and<sp/>retrieves<sp/>the<sp/>population<sp/>of<sp/>individuals<sp/>in<sp/>a<sp/>multi-dimensional</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimization<sp/>context.</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>interacts<sp/>with<sp/>a<sp/>native<sp/>library<sp/>to<sp/>populate<sp/>a<sp/>numpy<sp/>array</highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representing<sp/>the<sp/>population<sp/>in<sp/>a<sp/>given<sp/>algorithm.<sp/>It<sp/>processes<sp/>the</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>returned<sp/>from<sp/>the<sp/>library<sp/>and<sp/>organizes<sp/>them<sp/>into<sp/>a<sp/>structured</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numpy<sp/>array<sp/>to<sp/>return<sp/>to<sp/>the<sp/>caller.</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array:<sp/>A<sp/>2D<sp/>numpy<sp/>array<sp/>where<sp/>each<sp/>row<sp/>represents<sp/>an<sp/>individual<sp/>in</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>population,<sp/>and<sp/>each<sp/>column<sp/>corresponds<sp/>to<sp/>an<sp/>individual&apos;s</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension.</highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>an<sp/>error<sp/>occurs<sp/>during<sp/>population<sp/>retrieval<sp/>or<sp/>processing.</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad122a7d34bd51afeb06228ad811f85ce" kindref="member">popsize</ref></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1a174ff7e79ef1f1d187dc0197e95256e8" kindref="member">dim</ref></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(popsize*n)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1decpp_1a83480897deb0e4a967b6de51edd57f3e" kindref="member">populationDE_C</ref>(self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad9095931be109c4c732f10d7791c54fc" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="360" refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad53cc4b5553a819096b47115e1f49b42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>np.array(popsize,<sp/>n)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(popsize):</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p]<sp/>=<sp/>res[p*n<sp/>:<sp/>(p+1)*n]</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xs</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1a2f794b6d8709f5b14d5f56695bb8d8ff" kindref="member">result</ref>(self)<sp/>-&gt;<sp/>OptimizeResult:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Executes<sp/>the<sp/>optimization<sp/>process<sp/>and<sp/>returns<sp/>the<sp/>result<sp/>as<sp/>an<sp/>OptimizeResult<sp/>object.</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>carries<sp/>out<sp/>the<sp/>computation<sp/>for<sp/>the<sp/>given<sp/>optimization<sp/>problem,</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wraps<sp/>the<sp/>results<sp/>into<sp/>an<sp/>OptimizeResult<sp/>object,<sp/>and<sp/>handles<sp/>exceptions<sp/>by</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>providing<sp/>a<sp/>default<sp/>failure<sp/>result.</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizeResult:<sp/>An<sp/>object<sp/>containing<sp/>the<sp/>results<sp/>of<sp/>the<sp/>optimization<sp/>process,</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>including<sp/>the<sp/>solution<sp/>vector,<sp/>function<sp/>value<sp/>at<sp/>the<sp/>solution,<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>evaluations,<sp/>number<sp/>of<sp/>iterations,<sp/>stopping<sp/>status,<sp/>and<sp/>success<sp/>flag.</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>an<sp/>error<sp/>occurs<sp/>during<sp/>the<sp/>optimization<sp/>computation,<sp/>it<sp/>returns<sp/>a</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>OptimizeResult<sp/>indicating<sp/>failure.</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="classfcmaes_1_1decpp_1_1_d_e___c_1ae6321ea6313c6ef9bf44d492aaa619f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1a174ff7e79ef1f1d187dc0197e95256e8" kindref="member">dim</ref>+4)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1decpp_1af82bf7db3d2be348a9dbec6a24087b14" kindref="member">resultDE_C</ref>(self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad9095931be109c4c732f10d7791c54fc" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>res[:self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1a174ff7e79ef1f1d187dc0197e95256e8" kindref="member">dim</ref>]</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>res[self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1a174ff7e79ef1f1d187dc0197e95256e8" kindref="member">dim</ref>]</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1a174ff7e79ef1f1d187dc0197e95256e8" kindref="member">dim</ref>+1])</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1a174ff7e79ef1f1d187dc0197e95256e8" kindref="member">dim</ref>+2])</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1decpp_1_1_d_e___c_1a174ff7e79ef1f1d187dc0197e95256e8" kindref="member">dim</ref>+3])</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=x,<sp/>fun=val,<sp/>nfev=evals,<sp/>nit=iterations,<sp/>status=stop,<sp/>success=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>fun=sys.float_info.max,<sp/>nfev=0,<sp/>nit=0,<sp/>status=-1,<sp/>success=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>libcmalib<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizeDE_C<sp/>=<sp/>libcmalib.optimizeDE_C</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizeDE_C.argtypes<sp/>=<sp/>[ct.c_long,<sp/>mo_call_back_type,<sp/>ct.c_int,<sp/>ct.c_int,<sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>ct.c_double,<sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_bool),<sp/>\</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_int,<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_int,<sp/>\</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double,<sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_int,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>initDE_C<sp/>=<sp/>libcmalib.initDE_C</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>initDE_C.argtypes<sp/>=<sp/>[ct.c_long,<sp/>ct.c_int,<sp/>ct.c_int,<sp/>\</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>\</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>ct.c_double,<sp/>\</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_bool),<sp/>\</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_double,<sp/>ct.c_int,<sp/>\</highlight></codeline>
<codeline lineno="416" refid="classfcmaes_1_1decpp_1_1_d_e___c_1a2f794b6d8709f5b14d5f56695bb8d8ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double]</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>initDE_C.restype<sp/>=<sp/>ct.c_void_p<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>destroyDE_C<sp/>=<sp/>libcmalib.destroyDE_C</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>destroyDE_C.argtypes<sp/>=<sp/>[ct.c_void_p]</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>askDE_C<sp/>=<sp/>libcmalib.askDE_C</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>askDE_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>tellDE_C<sp/>=<sp/>libcmalib.tellDE_C</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>tellDE_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>tellDE_C.restype<sp/>=<sp/>ct.c_int</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>populationDE_C<sp/>=<sp/>libcmalib.populationDE_C</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>populationDE_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="433" refid="namespacefcmaes_1_1decpp_1a890d0db67042ae71d4c7df9adec2d3ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>resultDE_C<sp/>=<sp/>libcmalib.resultDE_C</highlight></codeline>
<codeline lineno="434" refid="namespacefcmaes_1_1decpp_1a6f58a442e0eb6c6c1ec1396e794faf04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>resultDE_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="fcmaes/decpp.py"/>
  </compounddef>
</doxygen>

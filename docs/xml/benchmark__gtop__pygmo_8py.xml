<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="benchmark__gtop__pygmo_8py" kind="file" language="Python">
    <compoundname>benchmark_gtop_pygmo.py</compoundname>
    <innerclass refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp" prot="public">examples::benchmark_gtop_pygmo::pygmo_udp</innerclass>
    <innerclass refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg" prot="public">examples::benchmark_gtop_pygmo::Cma_pyg</innerclass>
    <innerclass refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg" prot="public">examples::benchmark_gtop_pygmo::De_pyg</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1benchmark__gtop__pygmo">examples::benchmark_gtop_pygmo</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1benchmark__gtop__pygmo_1add963c7379a8ed4088502dc06b82227f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::benchmark_gtop_pygmo.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.benchmark_gtop_pygmo.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/benchmark_gtop_pygmo.py" line="37" column="1" bodyfile="examples/benchmark_gtop_pygmo.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1benchmark__gtop__pygmo_1ac734fa0c08aa511b65e95ca5c64f2a4c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::benchmark_gtop_pygmo.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.benchmark_gtop_pygmo.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/benchmark_gtop_pygmo.py" line="37" column="1" bodyfile="examples/benchmark_gtop_pygmo.py" bodystart="37" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" compoundref="benchmark__gtop__pygmo_8py" startline="145" endline="169">examples.benchmark_gtop_pygmo._test_archipelago</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1benchmark__gtop__pygmo_1ad5c3b451839647131465e551e27882c9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::benchmark_gtop_pygmo.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.benchmark_gtop_pygmo.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/benchmark_gtop_pygmo.py" line="37" column="1" bodyfile="examples/benchmark_gtop_pygmo.py" bodystart="37" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1benchmark__gtop__pygmo_1adacb1bdcd0ee085801b2b9e6e8022ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.benchmark_gtop_pygmo.de_cma_pyg</definition>
        <argsstring>(max_evaluations=50000, popsize=31, stop_fitness=-np.inf, de_max_evals=None, cma_max_evals=None)</argsstring>
        <name>de_cma_pyg</name>
        <qualifiedname>examples.benchmark_gtop_pygmo.de_cma_pyg</qualifiedname>
        <param>
          <type>max_evaluations</type>
          <defname>max_evaluations</defname>
          <defval>50000</defval>
        </param>
        <param>
          <type>popsize</type>
          <defname>popsize</defname>
          <defval>31</defval>
        </param>
        <param>
          <type>stop_fitness</type>
          <defname>stop_fitness</defname>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>de_max_evals</type>
          <defname>de_max_evals</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>cma_max_evals</type>
          <defname>cma_max_evals</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
<para><ref refid="classfcmaes_1_1optimizer_1_1_sequence" kindref="compound">Sequence</ref> de1220 -&gt; cmaes pagmo. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/benchmark_gtop_pygmo.py" line="53" column="1" bodyfile="examples/benchmark_gtop_pygmo.py" bodystart="54" bodyend="65"/>
        <referencedby refid="namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d" compoundref="benchmark__gtop__pygmo_8py" startline="185" endline="208">examples.benchmark_gtop_pygmo.test_coordinated_retry</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1benchmark__gtop__pygmo_1ae9fd95cc51761a89ffc0635dba4aa504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.benchmark_gtop_pygmo.pyg_de_cma</definition>
        <argsstring>(max_evaluations=50000, popsize=31, stop_fitness=-np.inf, de_max_evals=None, cma_max_evals=None)</argsstring>
        <name>pyg_de_cma</name>
        <qualifiedname>examples.benchmark_gtop_pygmo.pyg_de_cma</qualifiedname>
        <param>
          <type>max_evaluations</type>
          <defname>max_evaluations</defname>
          <defval>50000</defval>
        </param>
        <param>
          <type>popsize</type>
          <defname>popsize</defname>
          <defval>31</defval>
        </param>
        <param>
          <type>stop_fitness</type>
          <defname>stop_fitness</defname>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>de_max_evals</type>
          <defname>de_max_evals</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>cma_max_evals</type>
          <defname>cma_max_evals</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
<para><ref refid="classfcmaes_1_1optimizer_1_1_sequence" kindref="compound">Sequence</ref> de1220 -&gt; cmaes c++. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/benchmark_gtop_pygmo.py" line="67" column="1" bodyfile="examples/benchmark_gtop_pygmo.py" bodystart="68" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1benchmark__gtop__pygmo_1a35d3645d623ed7454908364351809f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.benchmark_gtop_pygmo.de_pyg_cma</definition>
        <argsstring>(max_evaluations=50000, popsize=31, stop_fitness=-np.inf, de_max_evals=None, cma_max_evals=None)</argsstring>
        <name>de_pyg_cma</name>
        <qualifiedname>examples.benchmark_gtop_pygmo.de_pyg_cma</qualifiedname>
        <param>
          <type>max_evaluations</type>
          <defname>max_evaluations</defname>
          <defval>50000</defval>
        </param>
        <param>
          <type>popsize</type>
          <defname>popsize</defname>
          <defval>31</defval>
        </param>
        <param>
          <type>stop_fitness</type>
          <defname>stop_fitness</defname>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>de_max_evals</type>
          <defname>de_max_evals</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>cma_max_evals</type>
          <defname>cma_max_evals</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
<para><ref refid="classfcmaes_1_1optimizer_1_1_sequence" kindref="compound">Sequence</ref> de c++ -&gt; cmaes pagmo. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/benchmark_gtop_pygmo.py" line="81" column="1" bodyfile="examples/benchmark_gtop_pygmo.py" bodystart="82" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.benchmark_gtop_pygmo._test_optimizer</definition>
        <argsstring>(opt, problem, num_retries=10000, num=1, value_limit=100.0, stop_val=-1E99, log=logger())</argsstring>
        <name>_test_optimizer</name>
        <qualifiedname>examples.benchmark_gtop_pygmo._test_optimizer</qualifiedname>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>10000</defval>
        </param>
        <param>
          <type>num</type>
          <defname>num</defname>
          <defval>1</defval>
        </param>
        <param>
          <type>value_limit</type>
          <defname>value_limit</defname>
          <defval>100.0</defval>
        </param>
        <param>
          <type>stop_val</type>
          <defname>stop_val</defname>
          <defval>-1E99</defval>
        </param>
        <param>
          <type>log</type>
          <defname>log</defname>
          <defval>logger()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/benchmark_gtop_pygmo.py" line="138" column="1" bodyfile="examples/benchmark_gtop_pygmo.py" bodystart="139" bodyend="144"/>
        <referencedby refid="namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d" compoundref="benchmark__gtop__pygmo_8py" startline="185" endline="208">examples.benchmark_gtop_pygmo.test_coordinated_retry</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.benchmark_gtop_pygmo._test_archipelago</definition>
        <argsstring>(algo, problem, num=10000, stop_val=-1E99, log=logger())</argsstring>
        <name>_test_archipelago</name>
        <qualifiedname>examples.benchmark_gtop_pygmo._test_archipelago</qualifiedname>
        <param>
          <type>algo</type>
          <defname>algo</defname>
        </param>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>num</type>
          <defname>num</defname>
          <defval>10000</defval>
        </param>
        <param>
          <type>stop_val</type>
          <defname>stop_val</defname>
          <defval>-1E99</defval>
        </param>
        <param>
          <type>log</type>
          <defname>log</defname>
          <defval>logger()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/benchmark_gtop_pygmo.py" line="145" column="1" bodyfile="examples/benchmark_gtop_pygmo.py" bodystart="145" bodyend="169"/>
        <references refid="namespaceexamples_1_1benchmark__gtop__pygmo_1ac734fa0c08aa511b65e95ca5c64f2a4c" compoundref="benchmark__gtop__pygmo_8py" startline="37">examples.benchmark_gtop_pygmo.format</references>
        <referencedby refid="namespaceexamples_1_1benchmark__gtop__pygmo_1acf3acdca1f90a44c0759ad0d1cda8b22" compoundref="benchmark__gtop__pygmo_8py" startline="170" endline="184">examples.benchmark_gtop_pygmo.test_archipelago</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1benchmark__gtop__pygmo_1acf3acdca1f90a44c0759ad0d1cda8b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.benchmark_gtop_pygmo.test_archipelago</definition>
        <argsstring>()</argsstring>
        <name>test_archipelago</name>
        <qualifiedname>examples.benchmark_gtop_pygmo.test_archipelago</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/benchmark_gtop_pygmo.py" line="170" column="1" bodyfile="examples/benchmark_gtop_pygmo.py" bodystart="170" bodyend="184"/>
        <references refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" compoundref="benchmark__gtop__pygmo_8py" startline="145" endline="169">examples.benchmark_gtop_pygmo._test_archipelago</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.benchmark_gtop_pygmo.test_coordinated_retry</definition>
        <argsstring>()</argsstring>
        <name>test_coordinated_retry</name>
        <qualifiedname>examples.benchmark_gtop_pygmo.test_coordinated_retry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/benchmark_gtop_pygmo.py" line="185" column="1" bodyfile="examples/benchmark_gtop_pygmo.py" bodystart="185" bodyend="208"/>
        <references refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" compoundref="benchmark__gtop__pygmo_8py" startline="139" endline="144">examples.benchmark_gtop_pygmo._test_optimizer</references>
        <references refid="namespaceexamples_1_1benchmark__gtop__pygmo_1adacb1bdcd0ee085801b2b9e6e8022ace" compoundref="benchmark__gtop__pygmo_8py" startline="54" endline="65">examples.benchmark_gtop_pygmo.de_cma_pyg</references>
        <references refid="namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d" compoundref="benchmark__gtop__pygmo_8py" startline="185" endline="208">examples.benchmark_gtop_pygmo.test_coordinated_retry</references>
        <referencedby refid="namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d" compoundref="benchmark__gtop__pygmo_8py" startline="185" endline="208">examples.benchmark_gtop_pygmo.test_coordinated_retry</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1benchmark__gtop__pygmo" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Test<sp/>for<sp/>fcmaes<sp/>coordinated<sp/>retry<sp/>applied<sp/>to<sp/>https://www.esa.int/gsp/ACT/projects/gtop/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>using<sp/>https://github.com/esa/pygmo2<sp/>/<sp/>pagmo2<sp/>optimization<sp/>algorithms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Requires<sp/>pygmo<sp/>which<sp/>needs<sp/>python<sp/>3.8,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Create<sp/>an<sp/>python<sp/>3.8<sp/>environment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>mamba<sp/>create<sp/>-n<sp/>env38<sp/>python=3.8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>conda<sp/>activate<sp/>env38</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Install<sp/>dependencies:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pip<sp/>install<sp/>pygmo<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1advretry" kindref="compound">fcmaes.advretry</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>minimize</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1astro" kindref="compound">fcmaes.astro</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Messenger,<sp/>Cassini2,<sp/>Rosetta,<sp/>Gtoc1,<sp/>Cassini1,<sp/>Sagas,<sp/>Tandem,<sp/>MessFull</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dtime,<sp/>Optimizer,<sp/>Sequence,<sp/>De_cpp,<sp/>Cma_cpp</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.random<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MT19937,<sp/>Generator</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OptimizeResult</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pygmo<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pg</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="37" refid="namespaceexamples_1_1benchmark__gtop__pygmo_1ac734fa0c08aa511b65e95ca5c64f2a4c" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp" kindref="compound">pygmo_udp</ref>(object):</highlight></codeline>
<codeline lineno="41" refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Wraps<sp/>a<sp/>fcmaes<sp/>fitness<sp/>function<sp/>as<sp/>pygmo<sp/>udp.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a554b734061744f3a24a94b3b2b5638b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a554b734061744f3a24a94b3b2b5638b1" kindref="member">__init__</ref>(self,<sp/>fun,<sp/>bounds):<sp/></highlight></codeline>
<codeline lineno="43" refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a3cbfcb92d557e07dca883659abd8375a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a3cbfcb92d557e07dca883659abd8375a" kindref="member">fun</ref><sp/>=<sp/>fun</highlight></codeline>
<codeline lineno="44" refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1ab521631aff5164ef305cc19229711bb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1ab521631aff5164ef305cc19229711bb9" kindref="member">bounds</ref><sp/>=<sp/>bounds</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a8b05705866c5de83931191324a4e1311" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a8b05705866c5de83931191324a4e1311" kindref="member">fitness</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a3cbfcb92d557e07dca883659abd8375a" kindref="member">fun</ref>(x)]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a41d3b087b32923f75cbe401f3f2419e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a41d3b087b32923f75cbe401f3f2419e3" kindref="member">get_bounds</ref>(self):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1ab521631aff5164ef305cc19229711bb9" kindref="member">bounds</ref>.lb,<sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1ab521631aff5164ef305cc19229711bb9" kindref="member">bounds</ref>.ub)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1adacb1bdcd0ee085801b2b9e6e8022ace" kindref="member">de_cma_pyg</ref>(max_evaluations<sp/>=<sp/>50000,<sp/>popsize=31,<sp/>stop_fitness<sp/>=<sp/>-np.inf,<sp/></highlight></codeline>
<codeline lineno="53" refid="namespaceexamples_1_1benchmark__gtop__pygmo_1adacb1bdcd0ee085801b2b9e6e8022ace" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de_max_evals<sp/>=<sp/>None,<sp/>cma_max_evals<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Sequence<sp/>de1220<sp/>-&gt;<sp/>cmaes<sp/>pagmo.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>deEvals<sp/>=<sp/>np.random.uniform(0.1,<sp/>0.3)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>de_max_evals<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de_max_evals<sp/>=<sp/>int(deEvals*max_evaluations)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cma_max_evals<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cma_max_evals<sp/>=<sp/>int((1.0-deEvals)*max_evaluations)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>opt1<sp/>=<sp/><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg" kindref="compound">De_pyg</ref>(popsize=popsize,<sp/>max_evaluations<sp/>=<sp/>de_max_evals,<sp/>stop_fitness<sp/>=<sp/>stop_fitness)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>opt2<sp/>=<sp/><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg" kindref="compound">Cma_pyg</ref>(popsize=popsize,<sp/>max_evaluations<sp/>=<sp/>cma_max_evals,<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness<sp/>=<sp/>stop_fitness)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classfcmaes_1_1optimizer_1_1_sequence" kindref="compound">Sequence</ref>([opt1,<sp/>opt2])</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1ae9fd95cc51761a89ffc0635dba4aa504" kindref="member">pyg_de_cma</ref>(max_evaluations<sp/>=<sp/>50000,<sp/>popsize=31,<sp/>stop_fitness<sp/>=<sp/>-np.inf,<sp/></highlight></codeline>
<codeline lineno="67" refid="namespaceexamples_1_1benchmark__gtop__pygmo_1ae9fd95cc51761a89ffc0635dba4aa504" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de_max_evals<sp/>=<sp/>None,<sp/>cma_max_evals<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Sequence<sp/>de1220<sp/>-&gt;<sp/>cmaes<sp/>c++.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>deEvals<sp/>=<sp/>np.random.uniform(0.1,<sp/>0.3)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>de_max_evals<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de_max_evals<sp/>=<sp/>int(deEvals*max_evaluations)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cma_max_evals<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cma_max_evals<sp/>=<sp/>int((1.0-deEvals)*max_evaluations)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>opt1<sp/>=<sp/><ref refid="classfcmaes_1_1optimizer_1_1_de__cpp" kindref="compound">De_cpp</ref>(popsize=popsize,<sp/>max_evaluations<sp/>=<sp/>de_max_evals,<sp/>stop_fitness<sp/>=<sp/>stop_fitness)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>opt2<sp/>=<sp/><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg" kindref="compound">Cma_pyg</ref>(popsize=popsize,<sp/>max_evaluations<sp/>=<sp/>cma_max_evals,<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness<sp/>=<sp/>stop_fitness)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classfcmaes_1_1optimizer_1_1_sequence" kindref="compound">Sequence</ref>([opt1,<sp/>opt2])</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a35d3645d623ed7454908364351809f25" kindref="member">de_pyg_cma</ref>(max_evaluations<sp/>=<sp/>50000,<sp/>popsize=31,<sp/>stop_fitness<sp/>=<sp/>-np.inf,<sp/></highlight></codeline>
<codeline lineno="81" refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a35d3645d623ed7454908364351809f25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de_max_evals<sp/>=<sp/>None,<sp/>cma_max_evals<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Sequence<sp/>de<sp/>c++<sp/>-&gt;<sp/>cmaes<sp/>pagmo.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>deEvals<sp/>=<sp/>np.random.uniform(0.1,<sp/>0.3)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>de_max_evals<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de_max_evals<sp/>=<sp/>int(deEvals*max_evaluations)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cma_max_evals<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cma_max_evals<sp/>=<sp/>int((1.0-deEvals)*max_evaluations)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>opt1<sp/>=<sp/><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg" kindref="compound">De_pyg</ref>(popsize=popsize,<sp/>max_evaluations<sp/>=<sp/>de_max_evals,<sp/>stop_fitness<sp/>=<sp/>stop_fitness)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>opt2<sp/>=<sp/><ref refid="classfcmaes_1_1optimizer_1_1_cma__cpp" kindref="compound">Cma_cpp</ref>(popsize=popsize,<sp/>max_evaluations<sp/>=<sp/>cma_max_evals,<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness<sp/>=<sp/>stop_fitness)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classfcmaes_1_1optimizer_1_1_sequence" kindref="compound">Sequence</ref>([opt1,<sp/>opt2])</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg" kindref="compound">Cma_pyg</ref>(<ref refid="classfcmaes_1_1optimizer_1_1_optimizer" kindref="compound">Optimizer</ref>):</highlight></codeline>
<codeline lineno="95" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;CMA_ES<sp/>pagmo<sp/>implementation.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a72cd3810a8aa777511b258e2c10179b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a72cd3810a8aa777511b258e2c10179b5" kindref="member">__init__</ref>(self,<sp/>max_evaluations=50000,<sp/>popsize<sp/>=<sp/>31,<sp/>guess=None,<sp/>stop_fitness<sp/>=<sp/>-np.inf):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Optimizer.__init__(self,<sp/>max_evaluations,<sp/></highlight><highlight class="stringliteral">&apos;cma<sp/>pagmo&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a417a165a5ceee871a126af16ba74aa40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a417a165a5ceee871a126af16ba74aa40" kindref="member">popsize</ref><sp/>=<sp/>popsize</highlight></codeline>
<codeline lineno="100" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ab9b4f3a7942f95a90e46cabf2ae20641" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ab9b4f3a7942f95a90e46cabf2ae20641" kindref="member">guess</ref><sp/>=<sp/>guess</highlight></codeline>
<codeline lineno="101" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1abb8008f11f1ddb42806a01d4a70c931b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1abb8008f11f1ddb42806a01d4a70c931b" kindref="member">stop_fitness</ref><sp/>=<sp/>stop_fitness</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" kindref="member">minimize</ref>(self,<sp/>fun,<sp/>bounds,<sp/>guess=None,<sp/>sdevs=0.3,<sp/>rg=Generator(MT19937()),<sp/>store=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gen<sp/>=<sp/>int(self.<ref refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" kindref="member">max_eval_num</ref>(store)<sp/>/<sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a417a165a5ceee871a126af16ba74aa40" kindref="member">popsize</ref><sp/>+<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algo<sp/>=<sp/>pg.algorithm(pg.cmaes(gen=gen,<sp/>force_bounds<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma0<sp/>=<sp/>np.mean(sdevs),<sp/>seed<sp/>=<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1))))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>udp<sp/>=<sp/><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp" kindref="compound">pygmo_udp</ref>(fun,<sp/>bounds)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>pg.problem(udp)<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>pg.population(prob,<sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a417a165a5ceee871a126af16ba74aa40" kindref="member">popsize</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>guess<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>np.multiply(0.5<sp/>*<sp/>(bounds.ub<sp/>-<sp/>bounds.lb),<sp/>sdevs)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1a417a165a5ceee871a126af16ba74aa40" kindref="member">popsize</ref>):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xi<sp/>=<sp/>np.random.normal(guess,<sp/>scale)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xi<sp/>=<sp/>np.maximum(np.minimum(xi,<sp/>bounds.ub),<sp/>bounds.lb)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop.set_x(i,<sp/>xi)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>algo.evolve(pop)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop.champion_x,<sp/>pop.champion_f,<sp/>pop.problem.get_fevals()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg" kindref="compound">De_pyg</ref>(<ref refid="classfcmaes_1_1optimizer_1_1_optimizer" kindref="compound">Optimizer</ref>):</highlight></codeline>
<codeline lineno="120" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Differential<sp/>Evolution<sp/>pagmo<sp/>implementation.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a9f4fc297f56e80492558024b35ffa75c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a9f4fc297f56e80492558024b35ffa75c" kindref="member">__init__</ref>(self,<sp/>max_evaluations=50000,<sp/>popsize<sp/>=<sp/>None,<sp/>stop_fitness<sp/>=<sp/>-np.inf):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Optimizer.__init__(self,<sp/>max_evaluations,<sp/></highlight><highlight class="stringliteral">&apos;de1220<sp/>pagmo&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="124" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a3d8f82742cfd9cc92c3f9711096abbea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a3d8f82742cfd9cc92c3f9711096abbea" kindref="member">popsize</ref><sp/>=<sp/>popsize</highlight></codeline>
<codeline lineno="125" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a00ba15f8005bd8a195e420220b6b4773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a00ba15f8005bd8a195e420220b6b4773" kindref="member">stop_fitness</ref><sp/>=<sp/>stop_fitness</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" kindref="member">minimize</ref>(self,<sp/>fun,<sp/>bounds,<sp/>guess=None,<sp/>sdevs=None,<sp/>rg=Generator(MT19937()),<sp/>store=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gen<sp/>=<sp/>int(self.<ref refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" kindref="member">max_eval_num</ref>(store)<sp/>/<sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a3d8f82742cfd9cc92c3f9711096abbea" kindref="member">popsize</ref><sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algo<sp/>=<sp/>pg.algorithm(pg.de1220(gen=gen,<sp/>allowed_variants<sp/>=<sp/>[1,<sp/>2,<sp/>4,<sp/>7,<sp/>10,<sp/>13,<sp/>14,<sp/>15,<sp/>16],<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variant_adptv<sp/>=<sp/>1,<sp/>seed<sp/>=<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1))))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algo<sp/>=<sp/>pg.algorithm(pg.sade(gen=gen,<sp/>variant_adptv<sp/>=<sp/>1,<sp/>seed<sp/>=<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>udp<sp/>=<sp/><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp" kindref="compound">pygmo_udp</ref>(fun,<sp/>bounds)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>pg.problem(udp)<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>pg.population(prob,<sp/>self.<ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1a3d8f82742cfd9cc92c3f9711096abbea" kindref="member">popsize</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>algo.evolve(pop)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop.champion_x,<sp/>pop.champion_f,<sp/>pop.problem.get_fevals()</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" kindref="member">_test_optimizer</ref>(opt,<sp/>problem,<sp/>num_retries<sp/>=<sp/>10000,<sp/>num<sp/>=<sp/>1,<sp/>value_limit<sp/>=<sp/>100.0,<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_val<sp/>=<sp/>-1E99,<sp/>log<sp/>=<sp/>logger()):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Testing<sp/>coordinated<sp/>retry<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>opt.name<sp/>+<sp/><sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>problem.name<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>minimize(problem.fun,<sp/>problem.bounds,<sp/>value_limit,<sp/>num_retries,<sp/>log,<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer=opt,<sp/>stop_fitness<sp/>=<sp/>stop_val)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" kindref="member">_test_archipelago</ref>(algo,<sp/>problem,<sp/>num<sp/>=<sp/>10000,<sp/>stop_val<sp/>=<sp/>-1E99,<sp/>log<sp/>=<sp/>logger()):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>udp<sp/>=<sp/><ref refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp" kindref="compound">pygmo_udp</ref>(problem.fun,<sp/>problem.bounds)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>pg.problem(udp)<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>best_y<sp/>=<sp/>np.inf</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>best_x<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>time.perf_counter()</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num):</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archi<sp/>=<sp/>pg.archipelago(n=mp.cpu_count(),<sp/>algo=algo,<sp/>prob=prob,<sp/>pop_size=64)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archi.evolve()<sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archi.wait()</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>archi.get_champions_f()</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ys<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(ys)<sp/>&gt;<sp/>0:<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort<sp/>=<sp/>np.argsort([y[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ys])</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>ys[sort[0]][0]</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>best_y:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_y<sp/>=<sp/>y</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_x<sp/>=<sp/>archi.get_champions_x()[sort[0]]</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;{0}<sp/>{1}<sp/>{2}<sp/>{3!s}&apos;</highlight><highlight class="normal">.<ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1ac734fa0c08aa511b65e95ca5c64f2a4c" kindref="member">format</ref>(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.name,<sp/>dtime(t0),<sp/>best_y,<sp/>list(best_x))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(message)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>best_y<sp/>&lt;<sp/>stop_val:<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OptimizeResult(x=best_x,<sp/>fun=best_y,<sp/>success=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="namespaceexamples_1_1benchmark__gtop__pygmo_1acf3acdca1f90a44c0759ad0d1cda8b22" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1acf3acdca1f90a44c0759ad0d1cda8b22" kindref="member">test_archipelago</ref>():</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>max_evals<sp/>=<sp/>500000</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>32</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>gen<sp/>=<sp/>int(max_evals<sp/>/<sp/>popsize<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>algo<sp/>=<sp/>pg.algorithm(pg.de1220(gen=gen))</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>fac<sp/>=<sp/>1.005</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" kindref="member">_test_archipelago</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_cassini1" kindref="compound">Cassini1</ref>(),<sp/>num<sp/>=<sp/>400,<sp/>stop_val<sp/>=<sp/>4.9307*fac)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" kindref="member">_test_archipelago</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_cassini2" kindref="compound">Cassini2</ref>(),<sp/>num<sp/>=<sp/>600,<sp/>stop_val<sp/>=<sp/>8.383*fac)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" kindref="member">_test_archipelago</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_gtoc1" kindref="compound">Gtoc1</ref>(),<sp/>num<sp/>=<sp/>1000,<sp/>stop_val<sp/>=<sp/>-1581950/fac)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" kindref="member">_test_archipelago</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_messenger" kindref="compound">Messenger</ref>(),<sp/>num<sp/>=<sp/>800,<sp/>stop_val<sp/>=<sp/>8.63*fac)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" kindref="member">_test_archipelago</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_rosetta" kindref="compound">Rosetta</ref>(),<sp/>num<sp/>=<sp/>400,<sp/>stop_val<sp/>=<sp/>1.3433*fac)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" kindref="member">_test_archipelago</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_sagas" kindref="compound">Sagas</ref>(),<sp/>num<sp/>=<sp/>400,<sp/>stop_val<sp/>=<sp/>18.187*fac)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" kindref="member">_test_archipelago</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_tandem" kindref="compound">Tandem</ref>(5),<sp/>num<sp/>=<sp/>2000,<sp/>stop_val<sp/>=<sp/>-1500.6/fac)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a7778c5b75c17d1682355830441233819" kindref="member">_test_archipelago</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_mess_full" kindref="compound">MessFull</ref>(),<sp/>num<sp/>=<sp/>5000,<sp/>stop_val<sp/>=<sp/>1.959*fac)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d" kindref="member">test_coordinated_retry</ref>():</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>numRuns<sp/>=<sp/>10</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>min_evals<sp/>=<sp/>1500</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>algo<sp/>=<sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1adacb1bdcd0ee085801b2b9e6e8022ace" kindref="member">de_cma_pyg</ref>(min_evals)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#algo<sp/>=<sp/>pyg_de_cma(min_evals)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#algo<sp/>=<sp/>de_pyg_cma(min_evals)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>fac<sp/>=<sp/>1.005</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" kindref="member">_test_optimizer</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_gtoc1" kindref="compound">Gtoc1</ref>(),<sp/>num_retries<sp/>=<sp/>10000,<sp/>num<sp/>=<sp/>numRuns,<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_limit<sp/>=<sp/>-300000.0,<sp/>stop_val<sp/>=<sp/>-1581950/fac)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" kindref="member">_test_optimizer</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_cassini1" kindref="compound">Cassini1</ref>(),<sp/>num_retries<sp/>=<sp/>4000,<sp/>num<sp/>=<sp/>numRuns,<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_limit<sp/>=<sp/>20.0,<sp/>stop_val<sp/>=<sp/>4.9307*fac)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" kindref="member">_test_optimizer</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_cassini2" kindref="compound">Cassini2</ref>(),<sp/>num_retries<sp/>=<sp/>6000,<sp/>num<sp/>=<sp/>numRuns,<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_limit<sp/>=<sp/>20.0,<sp/>stop_val<sp/>=<sp/>8.383*fac)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" kindref="member">_test_optimizer</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_messenger" kindref="compound">Messenger</ref>(),<sp/>num_retries<sp/>=<sp/>8000,<sp/>num<sp/>=<sp/>numRuns,<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_limit<sp/>=<sp/>20.0,<sp/>stop_val<sp/>=<sp/>8.63*fac)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" kindref="member">_test_optimizer</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_rosetta" kindref="compound">Rosetta</ref>(),<sp/>num_retries<sp/>=<sp/>4000,<sp/>num<sp/>=<sp/>numRuns,<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_limit<sp/>=<sp/>20.0,<sp/>stop_val<sp/>=<sp/>1.3433*fac)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" kindref="member">_test_optimizer</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_sagas" kindref="compound">Sagas</ref>(),<sp/>num_retries<sp/>=<sp/>4000,<sp/>num<sp/>=<sp/>numRuns,<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_limit<sp/>=<sp/>100.0,<sp/>stop_val<sp/>=<sp/>18.187*fac)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" kindref="member">_test_optimizer</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_tandem" kindref="compound">Tandem</ref>(5),<sp/>num_retries<sp/>=<sp/>20000,<sp/>num<sp/>=<sp/>numRuns,<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_limit<sp/>=<sp/>-300.0,<sp/>stop_val<sp/>=<sp/>-1500.6/fac)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1a122592852c04a8a8e8a3b4d9cdc38bfa" kindref="member">_test_optimizer</ref>(algo,<sp/><ref refid="classfcmaes_1_1astro_1_1_mess_full" kindref="compound">MessFull</ref>(),<sp/>num_retries<sp/>=<sp/>50000,<sp/>num<sp/>=<sp/>numRuns,<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_limit<sp/>=<sp/>12.0,<sp/>stop_val<sp/>=<sp/>1.959*fac)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1benchmark__gtop__pygmo_1aeccaaa319086484e7320dee37695e81d" kindref="member">test_coordinated_retry</ref>()</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#test_archipelago()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/benchmark_gtop_pygmo.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="cassini__minlp_8py" kind="file" language="Python">
    <compoundname>cassini_minlp.py</compoundname>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1cassini__minlp">examples::cassini_minlp</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1cassini__minlp_1a9f5576df785d369ef573bb5ac3cc7ea4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::cassini_minlp.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.cassini_minlp.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/cassini_minlp.py" line="20" column="1" bodyfile="examples/cassini_minlp.py" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1cassini__minlp_1ab9469e320da447d082b3731e59e08457" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::cassini_minlp.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.cassini_minlp.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/cassini_minlp.py" line="20" column="1" bodyfile="examples/cassini_minlp.py" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1cassini__minlp_1aa37eb20aa295dd4a2c60777b6768da08" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::cassini_minlp.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.cassini_minlp.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/cassini_minlp.py" line="20" column="1" bodyfile="examples/cassini_minlp.py" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1cassini__minlp_1aa466c84c83ff750d9f87a4db3c0ccd8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.cassini_minlp.test_optimizer</definition>
        <argsstring>(opt, problem, num_retries=120000, num=100, value_limit=10.0)</argsstring>
        <name>test_optimizer</name>
        <qualifiedname>examples.cassini_minlp.test_optimizer</qualifiedname>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>120000</defval>
        </param>
        <param>
          <type>num</type>
          <defname>num</defname>
          <defval>100</defval>
        </param>
        <param>
          <type>value_limit</type>
          <defname>value_limit</defname>
          <defval>10.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/cassini_minlp.py" line="24" column="1" bodyfile="examples/cassini_minlp.py" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1cassini__minlp_1a3f4fa3576b8750954c4b7713b129b8a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.cassini_minlp.sequences</definition>
        <argsstring>()</argsstring>
        <name>sequences</name>
        <qualifiedname>examples.cassini_minlp.sequences</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/cassini_minlp.py" line="30" column="1" bodyfile="examples/cassini_minlp.py" bodystart="30" bodyend="37"/>
        <referencedby refid="namespaceexamples_1_1cassini__minlp_1a94bf22b64964bb0a72821a4c7b85d291" compoundref="cassini__minlp_8py" startline="39" endline="52">examples.cassini_minlp.test_multiretry</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1cassini__minlp_1a94bf22b64964bb0a72821a4c7b85d291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.cassini_minlp.test_multiretry</definition>
        <argsstring>(retries_inc=128, keep=0.7, optimizer=de_cma(1500), repeat=50)</argsstring>
        <name>test_multiretry</name>
        <qualifiedname>examples.cassini_minlp.test_multiretry</qualifiedname>
        <param>
          <type>retries_inc</type>
          <defname>retries_inc</defname>
          <defval>128</defval>
        </param>
        <param>
          <type>keep</type>
          <defname>keep</defname>
          <defval>0.7</defval>
        </param>
        <param>
          <type>optimizer</type>
          <defname>optimizer</defname>
          <defval>de_cma(1500)</defval>
        </param>
        <param>
          <type>repeat</type>
          <defname>repeat</defname>
          <defval>50</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/cassini_minlp.py" line="38" column="1" bodyfile="examples/cassini_minlp.py" bodystart="39" bodyend="52"/>
        <references refid="namespaceexamples_1_1cassini__minlp_1a3f4fa3576b8750954c4b7713b129b8a5" compoundref="cassini__minlp_8py" startline="30" endline="37">examples.cassini_minlp.sequences</references>
        <referencedby refid="namespaceexamples_1_1cassini__minlp_1a686d98230d20b74f09e6ad1839f06ffc" compoundref="cassini__minlp_8py" startline="53" endline="56">examples.cassini_minlp.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1cassini__minlp_1a686d98230d20b74f09e6ad1839f06ffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.cassini_minlp.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <qualifiedname>examples.cassini_minlp.main</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/cassini_minlp.py" line="53" column="1" bodyfile="examples/cassini_minlp.py" bodystart="53" bodyend="56"/>
        <references refid="namespaceexamples_1_1cassini__minlp_1a686d98230d20b74f09e6ad1839f06ffc" compoundref="cassini__minlp_8py" startline="53" endline="56">examples.cassini_minlp.main</references>
        <references refid="namespaceexamples_1_1cassini__minlp_1a94bf22b64964bb0a72821a4c7b85d291" compoundref="cassini__minlp_8py" startline="39" endline="52">examples.cassini_minlp.test_multiretry</references>
        <referencedby refid="namespaceexamples_1_1cassini__minlp_1a686d98230d20b74f09e6ad1839f06ffc" compoundref="cassini__minlp_8py" startline="53" endline="56">examples.cassini_minlp.main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1cassini__minlp" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>http://www.midaco-solver.com/data/pub/CEC2019_Schlueter_Munetomo.pdf<sp/>for<sp/>a<sp/>description<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>MINLP<sp/>problem<sp/>solved<sp/>here.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Used<sp/>to<sp/>generate<sp/>the<sp/>results<sp/>in<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/MINLP.adoc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1astro" kindref="compound">fcmaes.astro</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Cassini1minlp,<sp/>Cassini1multi,<sp/>cassini1minlp</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>de_cma</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>advretry,<sp/>multiretry</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="20" refid="namespaceexamples_1_1cassini__minlp_1ab9469e320da447d082b3731e59e08457" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>minlp<sp/>approach,<sp/>planet<sp/>sequence<sp/>is<sp/>additional<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="namespaceexamples_1_1cassini__minlp_1aa466c84c83ff750d9f87a4db3c0ccd8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1cassini__minlp_1aa466c84c83ff750d9f87a4db3c0ccd8e" kindref="member">test_optimizer</ref>(opt,<sp/>problem,<sp/>num_retries<sp/>=<sp/>120000,<sp/>num<sp/>=<sp/>100,<sp/>value_limit<sp/>=<sp/>10.0):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(problem.name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>opt.name)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>advretry.minimize(problem.fun,<sp/>problem.bounds,<sp/>value_limit,<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_retries,<sp/>optimizer=opt)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespaceexamples_1_1cassini__minlp_1a3f4fa3576b8750954c4b7713b129b8a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1cassini__minlp_1a3f4fa3576b8750954c4b7713b129b8a5" kindref="member">sequences</ref>():</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p1<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2,4):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2,4):</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p3<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2,4):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p4<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(3,6):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal">[p1,p2,p3,p4]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">#<sp/>simultaneous<sp/>optimization<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespaceexamples_1_1cassini__minlp_1a94bf22b64964bb0a72821a4c7b85d291" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1cassini__minlp_1a94bf22b64964bb0a72821a4c7b85d291" kindref="member">test_multiretry</ref>(retries_inc<sp/>=<sp/>128,<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>=<sp/>0.7,<sp/>optimizer<sp/>=<sp/>de_cma(1500),<sp/>repeat<sp/>=<sp/>50):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>problems<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>ids<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>seq<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1cassini__minlp_1a3f4fa3576b8750954c4b7713b129b8a5" kindref="member">sequences</ref>():</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problems.append(<ref refid="classfcmaes_1_1astro_1_1_cassini1minlp" kindref="compound">Cassini1minlp</ref>(planets<sp/>=<sp/>seq))</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ids.append(str(seq))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>problem_stats<sp/>=<sp/>multiretry.minimize(problems,<sp/>ids,<sp/>retries_inc,<sp/>retries_inc*repeat,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep,<sp/>optimizer)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>problem_stats[0]</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(repeat):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;problem<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>ps.prob.name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(ps.id))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps.retry(optimizer)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespaceexamples_1_1cassini__minlp_1a686d98230d20b74f09e6ad1839f06ffc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1cassini__minlp_1a686d98230d20b74f09e6ad1839f06ffc" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>test_optimizer(de_cma(1500),<sp/>Cassini1minlp())<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1cassini__minlp_1a94bf22b64964bb0a72821a4c7b85d291" kindref="member">test_multiretry</ref>(repeat<sp/>=<sp/>50)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1cassini__minlp_1a686d98230d20b74f09e6ad1839f06ffc" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/cassini_minlp.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_c_bite_opt_minimize" kind="class" language="C++" prot="public">
    <compoundname>CBiteOptMinimize</compoundname>
    <basecompoundref refid="class_c_bite_opt_deep" prot="public" virt="non-virtual">CBiteOptDeep</basecompoundref>
    <includes refid="biteopt_8h" local="no">biteopt.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_bite_opt_minimize_1a8678489b0c6aca31865aabf22b7a6a48" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteOptMinimize::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <qualifiedname>CBiteOptMinimize::N</qualifiedname>
        <briefdescription>
<para>The number of dimensions in objective function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1683" column="5" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1683" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_minimize_1ad68d81fd1dad55c40ccd01a9d6567ccf" compoundref="biteopt_8h" startline="1694" endline="1697">getMaxValues</referencedby>
        <referencedby refid="class_c_bite_opt_minimize_1a6a6d606aa0f4dc874acb855b66571124" compoundref="biteopt_8h" startline="1689" endline="1692">getMinValues</referencedby>
        <referencedby refid="class_c_bite_opt_minimize_1ae80abdaf663fbb5c83e719eea4d49d48" compoundref="biteopt_8h" startline="1699" endline="1702">optcost</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_minimize_1ad256ead784368777ead4e544edc15352" prot="public" static="no" mutable="no">
        <type><ref refid="biteopt_8h_1a308db87d0932931afd67e135ae6c35a1" kindref="member">biteopt_func</ref></type>
        <definition>biteopt_func CBiteOptMinimize::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <qualifiedname>CBiteOptMinimize::f</qualifiedname>
        <briefdescription>
<para>Objective function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1684" column="14" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1684" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_minimize_1ae80abdaf663fbb5c83e719eea4d49d48" compoundref="biteopt_8h" startline="1699" endline="1702">optcost</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_minimize_1a83276d987e4697798ba94109a0cad9d1" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* CBiteOptMinimize::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>CBiteOptMinimize::data</qualifiedname>
        <briefdescription>
<para>Objective function&apos;s data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1685" column="6" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1685" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_minimize_1ae80abdaf663fbb5c83e719eea4d49d48" compoundref="biteopt_8h" startline="1699" endline="1702">optcost</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_minimize_1a46e2e9238152b322ff7f7b71a6893d0d" prot="public" static="no" mutable="no">
        <type>const double *</type>
        <definition>const double* CBiteOptMinimize::lb</definition>
        <argsstring></argsstring>
        <name>lb</name>
        <qualifiedname>CBiteOptMinimize::lb</qualifiedname>
        <briefdescription>
<para>Parameters&apos; lower bounds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1686" column="14" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1686" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_minimize_1a6a6d606aa0f4dc874acb855b66571124" compoundref="biteopt_8h" startline="1689" endline="1692">getMinValues</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_opt_minimize_1a0e1e84cbc118f9ccd61d8b581d345a60" prot="public" static="no" mutable="no">
        <type>const double *</type>
        <definition>const double* CBiteOptMinimize::ub</definition>
        <argsstring></argsstring>
        <name>ub</name>
        <qualifiedname>CBiteOptMinimize::ub</qualifiedname>
        <briefdescription>
<para>Parameters&apos; upper bounds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1687" column="14" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1687" bodyend="-1"/>
        <referencedby refid="class_c_bite_opt_minimize_1ad68d81fd1dad55c40ccd01a9d6567ccf" compoundref="biteopt_8h" startline="1694" endline="1697">getMaxValues</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_bite_opt_minimize_1a6a6d606aa0f4dc874acb855b66571124" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CBiteOptMinimize::getMinValues</definition>
        <argsstring>(double *const p) const</argsstring>
        <name>getMinValues</name>
        <qualifiedname>CBiteOptMinimize::getMinValues</qualifiedname>
        <reimplements refid="class_c_bite_opt_interface_1ae7f8adaf2fd8acb10ccf057592a6229d">getMinValues</reimplements>
        <param>
          <type>double *const</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Virtual function that should fill minimal parameter value vector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimal value vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1689" column="14" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1689" bodyend="1692"/>
        <references refid="class_c_bite_opt_minimize_1a46e2e9238152b322ff7f7b71a6893d0d" compoundref="biteopt_8h" startline="1686">lb</references>
        <references refid="class_c_bite_opt_minimize_1a8678489b0c6aca31865aabf22b7a6a48" compoundref="biteopt_8h" startline="1683">N</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_minimize_1ad68d81fd1dad55c40ccd01a9d6567ccf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CBiteOptMinimize::getMaxValues</definition>
        <argsstring>(double *const p) const</argsstring>
        <name>getMaxValues</name>
        <qualifiedname>CBiteOptMinimize::getMaxValues</qualifiedname>
        <reimplements refid="class_c_bite_opt_interface_1a9debe40625c2bc248a4ffd12a9197a4d">getMaxValues</reimplements>
        <param>
          <type>double *const</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Virtual function that should fill maximal parameter value vector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximal value vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1694" column="14" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1694" bodyend="1697"/>
        <references refid="class_c_bite_opt_minimize_1a8678489b0c6aca31865aabf22b7a6a48" compoundref="biteopt_8h" startline="1683">N</references>
        <references refid="class_c_bite_opt_minimize_1a0e1e84cbc118f9ccd61d8b581d345a60" compoundref="biteopt_8h" startline="1687">ub</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_opt_minimize_1ae80abdaf663fbb5c83e719eea4d49d48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double CBiteOptMinimize::optcost</definition>
        <argsstring>(const double *const p)</argsstring>
        <name>optcost</name>
        <qualifiedname>CBiteOptMinimize::optcost</qualifiedname>
        <reimplements refid="class_c_bite_opt_interface_1a45d7e2c9ea31b6f8bb23758a6879df9d">optcost</reimplements>
        <param>
          <type>const double *const</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Virtual function (objective function) that should calculate parameter vector&apos;s optimization cost.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter vector to evaluate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Optimized cost. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteopt.h" line="1699" column="16" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1699" bodyend="1702"/>
        <references refid="class_c_bite_opt_minimize_1a83276d987e4697798ba94109a0cad9d1" compoundref="biteopt_8h" startline="1685">data</references>
        <references refid="class_c_bite_opt_minimize_1ad256ead784368777ead4e544edc15352" compoundref="biteopt_8h" startline="1684">f</references>
        <references refid="class_c_bite_opt_minimize_1a8678489b0c6aca31865aabf22b7a6a48" compoundref="biteopt_8h" startline="1683">N</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Wrapper class for the <ref refid="biteopt_8h_1a80c74350b3bde46bf211afee2d02ddd5" kindref="member">biteopt_minimize()</ref> function. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CBiteOptDeep</label>
        <link refid="class_c_bite_opt_deep"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="1">
        <label>CBiteOptMinimize</label>
        <link refid="class_c_bite_opt_minimize"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>CBiteOpt</label>
        <link refid="class_c_bite_opt"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>#Gen1MoveSpanSel</edgelabel>
          <edgelabel>#Gen3ModeSel</edgelabel>
          <edgelabel>#Gen4MixFacSel</edgelabel>
          <edgelabel>#Gen7PowFacSel</edgelabel>
          <edgelabel>#Gen8NumSel</edgelabel>
          <edgelabel>#Gen8SpanSel</edgelabel>
          <edgelabel>#M1Sel</edgelabel>
          <edgelabel>#M2BSel</edgelabel>
          <edgelabel>#MethodSel</edgelabel>
          <edgelabel>#MinSolMulSel</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>#M1ASel</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>#AltPopPSel</edgelabel>
          <edgelabel>#AltPopSel</edgelabel>
          <edgelabel>#Gen1AllpSel</edgelabel>
          <edgelabel>#Gen1MoveAsyncSel</edgelabel>
          <edgelabel>#Gen2ModeSel</edgelabel>
          <edgelabel>#Gen2bModeSel</edgelabel>
          <edgelabel>#Gen2cModeSel</edgelabel>
          <edgelabel>#Gen2dModeSel</edgelabel>
          <edgelabel>#Gen5bModeSel</edgelabel>
          <edgelabel>#Gen8ModeSel</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#OldPop</edgelabel>
          <edgelabel>#ParOpt2Pop</edgelabel>
          <edgelabel>#ParOptPop</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>#ParOpt</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>#ParOpt2</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>CBiteOpt::CParOpt&lt; T &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>CBiteOpt::CParOpt&lt; CNMSeqOpt &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
        <childnode refid="24" relation="template-instance">
          <edgelabel>&lt; CNMSeqOpt &gt;</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>CBiteOpt::CParOpt&lt; CSpherOpt &gt;</label>
        <link refid="class_c_bite_opt_1_1_c_par_opt"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
        <childnode refid="24" relation="template-instance">
          <edgelabel>&lt; CSpherOpt &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>CBiteOptBase&lt; ptype &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="protected-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>CBiteOptBase&lt; double &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="protected-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>CBiteOptBase&lt; int64_t &gt;</label>
        <link refid="class_c_bite_opt_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="protected-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#ApplySels</edgelabel>
          <edgelabel>#Sels</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>CBiteOptDeep</label>
        <link refid="class_c_bite_opt_deep"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>#BestOpt</edgelabel>
          <edgelabel>#CurOpt</edgelabel>
          <edgelabel>#Opts</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>CBiteOptDeep::CBiteOptWrap</label>
        <link refid="class_c_bite_opt_deep_1_1_c_bite_opt_wrap"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>+Owner</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CBiteOptInterface</label>
        <link refid="class_c_bite_opt_interface"/>
      </node>
      <node id="1">
        <label>CBiteOptMinimize</label>
        <link refid="class_c_bite_opt_minimize"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>CBiteParPops&lt; double &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>#ParPops</edgelabel>
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>CBiteParPops&lt; int64_t &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>#ParPops</edgelabel>
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>CBiteParPops&lt; ptype &gt;</label>
        <link refid="class_c_bite_par_pops"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="23">
        <label>CBitePop&lt; double &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CBitePop&lt; int64_t &gt;</label>
        <link refid="class_c_bite_pop"/>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; int64_t &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>CBitePop&lt; ptype &gt;</label>
        <link refid="class_c_bite_pop"/>
      </node>
      <node id="16">
        <label>CBiteSel&lt; tCount &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>CBiteSel&lt; 2 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>CBiteSel&lt; 3 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>CBiteSel&lt; 4 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="template-instance">
          <edgelabel>&lt; 4 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>CBiteSelBase</label>
        <link refid="class_c_bite_sel_base"/>
      </node>
      <node id="27">
        <label>CNMSeqOpt</label>
        <link refid="class_c_n_m_seq_opt"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>CSpherOpt</label>
        <link refid="class_c_spher_opt"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>#CentPowSel</edgelabel>
          <edgelabel>#RadPowSel</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>#EvalFacSel</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>T</label>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/biteopt.h" line="1680" column="1" bodyfile="_fcmaescpp/include/biteopt.h" bodystart="1681" bodyend="1703"/>
    <listofallmembers>
      <member refid="class_c_bite_opt_deep_1afd1350f64112950d0887700984547b96" prot="protected" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>BestOpt</name></member>
      <member refid="class_c_bite_opt_deep_1a65d5f650fd7eae9ae1d1cb76387a3179" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>CBiteOptDeep</name></member>
      <member refid="class_c_bite_opt_interface_1a0155b3fcab9eeb2d7505c0326e12e809" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>CBiteOptInterface</name></member>
      <member refid="class_c_bite_opt_deep_1a0407325111b05d021ce58bdc770f2c18" prot="protected" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>CurOpt</name></member>
      <member refid="class_c_bite_opt_minimize_1a83276d987e4697798ba94109a0cad9d1" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>data</name></member>
      <member refid="class_c_bite_opt_deep_1a5aeb781988a714cc50107efa2521cc52" prot="protected" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>deleteBuffers</name></member>
      <member refid="class_c_bite_opt_minimize_1ad256ead784368777ead4e544edc15352" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>f</name></member>
      <member refid="class_c_bite_opt_deep_1a961516dc7772d327e64965fc3e07ce31" prot="public" virt="virtual"><scope>CBiteOptMinimize</scope><name>getBestCost</name></member>
      <member refid="class_c_bite_opt_deep_1a17c7c044ef259f3c68e2e47c53c043a3" prot="public" virt="virtual"><scope>CBiteOptMinimize</scope><name>getBestParams</name></member>
      <member refid="class_c_bite_opt_minimize_1ad68d81fd1dad55c40ccd01a9d6567ccf" prot="public" virt="virtual"><scope>CBiteOptMinimize</scope><name>getMaxValues</name></member>
      <member refid="class_c_bite_opt_minimize_1a6a6d606aa0f4dc874acb855b66571124" prot="public" virt="virtual"><scope>CBiteOptMinimize</scope><name>getMinValues</name></member>
      <member refid="class_c_bite_opt_deep_1aa30c464f1425ad1219e7f512e75527a5" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>getSelCount</name></member>
      <member refid="class_c_bite_opt_deep_1a4ddcbc966999f0b3f4b59c8f8e909864" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>getSelNames</name></member>
      <member refid="class_c_bite_opt_deep_1a7b759e5dbc58b29e36f7d3c6a10e16a7" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>getSels</name></member>
      <member refid="class_c_bite_opt_deep_1abeb2e2aa0929e9fb6741ac7b0892a31b" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>init</name></member>
      <member refid="class_c_bite_opt_minimize_1a46e2e9238152b322ff7f7b71a6893d0d" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>lb</name></member>
      <member refid="class_c_bite_opt_minimize_1a8678489b0c6aca31865aabf22b7a6a48" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>N</name></member>
      <member refid="class_c_bite_opt_minimize_1ae80abdaf663fbb5c83e719eea4d49d48" prot="public" virt="virtual"><scope>CBiteOptMinimize</scope><name>optcost</name></member>
      <member refid="class_c_bite_opt_deep_1a20f687043f3b744c0a77cb095cca4a9b" prot="protected" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>OptCount</name></member>
      <member refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>optimize</name></member>
      <member refid="class_c_bite_opt_deep_1ac3ed0017d87104f26f320ad878fddcc6" prot="protected" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>Opts</name></member>
      <member refid="class_c_bite_opt_deep_1ac7cfdf4754e5ad3fef6b3cd98ba22520" prot="protected" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>ParamCount</name></member>
      <member refid="class_c_bite_opt_deep_1ad7c9509c6e4525db8faab200f4f2edf6" prot="protected" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>StallCount</name></member>
      <member refid="class_c_bite_opt_minimize_1a0e1e84cbc118f9ccd61d8b581d345a60" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>ub</name></member>
      <member refid="class_c_bite_opt_deep_1a48ae954f715acc3433125af9b0abaa61" prot="public" virt="non-virtual"><scope>CBiteOptMinimize</scope><name>updateDims</name></member>
      <member refid="class_c_bite_opt_deep_1a8442d47ab16f76d4783a4f8227ab78a7" prot="public" virt="virtual"><scope>CBiteOptMinimize</scope><name>~CBiteOptDeep</name></member>
      <member refid="class_c_bite_opt_interface_1a070d1317053ec55bbe7d8ddde32076ce" prot="public" virt="virtual"><scope>CBiteOptMinimize</scope><name>~CBiteOptInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

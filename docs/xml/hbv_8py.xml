<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hbv_8py" kind="file" language="Python">
    <compoundname>hbv.py</compoundname>
    <innerclass refid="classhbv_1_1hbv" prot="public">hbv::hbv</innerclass>
    <innernamespace refid="namespacehbv">hbv</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacehbv_1af08d5aa316c47190f06e6735442eea8d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>hbv.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="27" column="1" bodyfile="examples/hbv/hbv.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a8ed61252b87568105a6825dbbc8400a4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>hbv.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="27" column="1" bodyfile="examples/hbv/hbv.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a51b936bde1a81be54cdd1be721f288a9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>hbv.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="27" column="1" bodyfile="examples/hbv/hbv.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a00404bedc5447ca26bd54d928e700a0a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.basepath</definition>
        <argsstring></argsstring>
        <name>basepath</name>
        <qualifiedname>hbv.basepath</qualifiedname>
        <initializer>=  os.path.dirname(os.path.abspath(__file__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="30" column="1" bodyfile="examples/hbv/hbv.py" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a4647b0f6ace18e5556b93f8cb071f77b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.libhbv</definition>
        <argsstring></argsstring>
        <name>libhbv</name>
        <qualifiedname>hbv.libhbv</qualifiedname>
        <initializer>=  ct.cdll.LoadLibrary(basepath + &apos;/../../fcmaes/lib/libhbv.so&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="31" column="1" bodyfile="examples/hbv/hbv.py" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1ae439426f8c05b2209aebcd1fb6bbf4d6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.hbv_C</definition>
        <argsstring></argsstring>
        <name>hbv_C</name>
        <qualifiedname>hbv.hbv_C</qualifiedname>
        <initializer>=  libhbv.hbv_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="34" column="1" bodyfile="examples/hbv/hbv.py" bodystart="34" bodyend="-1"/>
        <referencedby refid="classhbv_1_1hbv_1af5f8604b9c3d15a55b152cee78d56e39" compoundref="hbv_8py" startline="71" endline="80">hbv.hbv.__call__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a8944e04035637d967db8c57ffc1f254f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>hbv.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="35" column="1" bodyfile="examples/hbv/hbv.py" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a5b25c774b87cf013880075d1080628dd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>hbv.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="36" column="1" bodyfile="examples/hbv/hbv.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a0e4d56699fe475c27c22f9b8163b2d32" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.fitness_hbv_C</definition>
        <argsstring></argsstring>
        <name>fitness_hbv_C</name>
        <qualifiedname>hbv.fitness_hbv_C</qualifiedname>
        <initializer>=  libhbv.fitness_hbv_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="38" column="1" bodyfile="examples/hbv/hbv.py" bodystart="38" bodyend="-1"/>
        <referencedby refid="classhbv_1_1hbv_1af5f8604b9c3d15a55b152cee78d56e39" compoundref="hbv_8py" startline="71" endline="80">hbv.hbv.__call__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a21be01c67f722a84e886f22bca6d0d39" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int hbv.nobj</definition>
        <argsstring></argsstring>
        <name>nobj</name>
        <qualifiedname>hbv.nobj</qualifiedname>
        <initializer>=  4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="41" column="1" bodyfile="examples/hbv/hbv.py" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a085e628fbdd8f3fb78fd6ce1645e9521" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list hbv.bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <qualifiedname>hbv.bounds</qualifiedname>
        <initializer>=  [
       (0.0, 100.0), #L (mm)
       (0.5, 20.0), #K0 (d)
       (1.0, 100.0), #K1 (d)
       (10.0, 20000.0), #K2 (d)
       (0.0, 100.0), #Perc (mm/d)
       (0.3, 1.0), #LP (-)
       (0.0, 2000.0), #Fcap (mm)
       (0.0, 7.0), #B (-)
       (24.0, 120.0), #MaxBas (d)
       (-3.0, 3.0), #TT (C)
       (0.0, 20.0), #DDF (mm/C*d)
       (0.0, 1.0), #CFR (-)
       (0.0, 0.8), #CWH (-)
       (0.0, 7.0), #TTI (C)
    ]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="43" column="1" bodyfile="examples/hbv/hbv.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1adefdcf86299ec8bacaa2343da556df0e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>hbv.dim</qualifiedname>
        <initializer>=  len(bounds)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="60" column="1" bodyfile="examples/hbv/hbv.py" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a0ba6e3603d8d7832067bcc79338a3f83" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.lb</definition>
        <argsstring></argsstring>
        <name>lb</name>
        <qualifiedname>hbv.lb</qualifiedname>
        <initializer>=  np.array([b[0] for b in bounds])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="61" column="1" bodyfile="examples/hbv/hbv.py" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehbv_1a85af41e7e854710f0f339749ecd29ca2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hbv.ub</definition>
        <argsstring></argsstring>
        <name>ub</name>
        <qualifiedname>hbv.ub</qualifiedname>
        <initializer>=  np.array([b[1] for b in bounds])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="62" column="1" bodyfile="examples/hbv/hbv.py" bodystart="62" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacehbv_1ac472b577264065e672297bacbf97cb7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hbv.check_pymoo</definition>
        <argsstring>(index)</argsstring>
        <name>check_pymoo</name>
        <qualifiedname>hbv.check_pymoo</qualifiedname>
        <param>
          <type>index</type>
          <defname>index</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="91" column="1" bodyfile="examples/hbv/hbv.py" bodystart="91" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespacehbv_1a6ee72909084ab4c1484abbfd15e60994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hbv.optimize_mo</definition>
        <argsstring>()</argsstring>
        <name>optimize_mo</name>
        <qualifiedname>hbv.optimize_mo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="156" column="1" bodyfile="examples/hbv/hbv.py" bodystart="156" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="namespacehbv_1a3a4f2f6019a427da618eb1b4826876da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hbv.plot3d</definition>
        <argsstring>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</argsstring>
        <name>plot3d</name>
        <qualifiedname>hbv.plot3d</qualifiedname>
        <param>
          <type>ys</type>
          <defname>ys</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>xlabel</type>
          <defname>xlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>ylabel</type>
          <defname>ylabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>zlabel</type>
          <defname>zlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="180" column="1" bodyfile="examples/hbv/hbv.py" bodystart="180" bodyend="193"/>
        <referencedby refid="namespacehbv_1a9517c57f4d7c2b62d429da020f8213ad" compoundref="hbv_8py" startline="194" endline="206">hbv.plot_archive</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacehbv_1a9517c57f4d7c2b62d429da020f8213ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hbv.plot_archive</definition>
        <argsstring>(archive, problem)</argsstring>
        <name>plot_archive</name>
        <qualifiedname>hbv.plot_archive</qualifiedname>
        <param>
          <type>archive</type>
          <defname>archive</defname>
        </param>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="194" column="1" bodyfile="examples/hbv/hbv.py" bodystart="194" bodyend="206"/>
        <references refid="namespacehbv_1a3a4f2f6019a427da618eb1b4826876da" compoundref="hbv_8py" startline="180" endline="193">hbv.plot3d</references>
        <referencedby refid="namespacehbv_1ab4adfe2a468412f8ef0d14c6b70285eb" compoundref="hbv_8py" startline="207" endline="224">hbv.optimize_qd</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacehbv_1ab4adfe2a468412f8ef0d14c6b70285eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hbv.optimize_qd</definition>
        <argsstring>()</argsstring>
        <name>optimize_qd</name>
        <qualifiedname>hbv.optimize_qd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/hbv/hbv.py" line="207" column="1" bodyfile="examples/hbv/hbv.py" bodystart="207" bodyend="224"/>
        <references refid="namespacehbv_1ab4adfe2a468412f8ef0d14c6b70285eb" compoundref="hbv_8py" startline="207" endline="224">hbv.optimize_qd</references>
        <references refid="namespacehbv_1a9517c57f4d7c2b62d429da020f8213ad" compoundref="hbv_8py" startline="194" endline="206">hbv.plot_archive</references>
        <referencedby refid="namespacehbv_1ab4adfe2a468412f8ef0d14c6b70285eb" compoundref="hbv_8py" startline="207" endline="224">hbv.optimize_qd</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacehbv" refkind="compound"><highlight class="comment">#<sp/>HBV<sp/>Rainfall-Runoff<sp/>Model<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Water.adoc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>http://www.sciencedirect.com/science/article/pii/S0309170812000073</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/jdherman/awr-hbv-benchmark</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>also<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Diversity.adoc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os,<sp/>sys,<sp/>time</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.random<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Generator,<sp/>MT19937</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1evaluator" kindref="compound">fcmaes.evaluator</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Evaluator</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>moretry</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dtime</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>de_cma,<sp/>Bite_cpp,<sp/>Cma_cpp,<sp/>LDe_cpp,<sp/>dtime,<sp/><sp/>De_cpp,<sp/>random_search,<sp/>wrapper,<sp/>logger</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>moretry,<sp/>retry,<sp/>mode,<sp/>modecpp,<sp/>decpp,<sp/>de,<sp/>moretry</highlight><highlight class="comment">#,<sp/>modec<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>diversifier,<sp/>mapelites</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="27" refid="namespacehbv_1a8ed61252b87568105a6825dbbc8400a4" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespacehbv_1a00404bedc5447ca26bd54d928e700a0a" refkind="member"><highlight class="normal">basepath<sp/>=<sp/>os.path.dirname(os.path.abspath(__file__))</highlight></codeline>
<codeline lineno="31" refid="namespacehbv_1a4647b0f6ace18e5556b93f8cb071f77b" refkind="member"><highlight class="normal">libhbv<sp/>=<sp/>ct.cdll.LoadLibrary(basepath<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/../../fcmaes/lib/libhbv.so&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34" refid="namespacehbv_1ae439426f8c05b2209aebcd1fb6bbf4d6" refkind="member"><highlight class="normal">hbv_C<sp/>=<sp/>libhbv.hbv_C</highlight></codeline>
<codeline lineno="35" refid="namespacehbv_1a8944e04035637d967db8c57ffc1f254f" refkind="member"><highlight class="normal">hbv_C.argtypes<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="36" refid="namespacehbv_1a5b25c774b87cf013880075d1080628dd" refkind="member"><highlight class="normal">hbv_C.restype<sp/>=<sp/>ct.c_long</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespacehbv_1a0e4d56699fe475c27c22f9b8163b2d32" refkind="member"><highlight class="normal">fitness_hbv_C<sp/>=<sp/>libhbv.fitness_hbv_C</highlight></codeline>
<codeline lineno="39"><highlight class="normal">fitness_hbv_C.argtypes<sp/>=<sp/>[ct.c_long,<sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="41" refid="namespacehbv_1a21be01c67f722a84e886f22bca6d0d39" refkind="member"><highlight class="normal">nobj<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespacehbv_1a085e628fbdd8f3fb78fd6ce1645e9521" refkind="member"><highlight class="normal">bounds<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.0,<sp/>100.0),<sp/></highlight><highlight class="comment">#L<sp/>(mm)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.5,<sp/>20.0),<sp/></highlight><highlight class="comment">#K0<sp/>(d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1.0,<sp/>100.0),<sp/></highlight><highlight class="comment">#K1<sp/>(d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(10.0,<sp/>20000.0),<sp/></highlight><highlight class="comment">#K2<sp/>(d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.0,<sp/>100.0),<sp/></highlight><highlight class="comment">#Perc<sp/>(mm/d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.3,<sp/>1.0),<sp/></highlight><highlight class="comment">#LP<sp/>(-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.0,<sp/>2000.0),<sp/></highlight><highlight class="comment">#Fcap<sp/>(mm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.0,<sp/>7.0),<sp/></highlight><highlight class="comment">#B<sp/>(-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(24.0,<sp/>120.0),<sp/></highlight><highlight class="comment">#MaxBas<sp/>(d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-3.0,<sp/>3.0),<sp/></highlight><highlight class="comment">#TT<sp/>(C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.0,<sp/>20.0),<sp/></highlight><highlight class="comment">#DDF<sp/>(mm/C*d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.0,<sp/>1.0),<sp/></highlight><highlight class="comment">#CFR<sp/>(-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.0,<sp/>0.8),<sp/></highlight><highlight class="comment">#CWH<sp/>(-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.0,<sp/>7.0),<sp/></highlight><highlight class="comment">#TTI<sp/>(C)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespacehbv_1adefdcf86299ec8bacaa2343da556df0e" refkind="member"><highlight class="normal">dim<sp/>=<sp/>len(bounds)</highlight></codeline>
<codeline lineno="61" refid="namespacehbv_1a0ba6e3603d8d7832067bcc79338a3f83" refkind="member"><highlight class="normal">lb<sp/>=<sp/>np.array([b[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bounds])</highlight></codeline>
<codeline lineno="62" refid="namespacehbv_1a85af41e7e854710f0f339749ecd29ca2" refkind="member"><highlight class="normal">ub<sp/>=<sp/>np.array([b[1]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bounds])</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classhbv_1_1hbv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhbv_1_1hbv" kindref="compound">hbv</ref>(object):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="classhbv_1_1hbv_1a018b2b26a4e6f1b37de09375347b11df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classhbv_1_1hbv_1a018b2b26a4e6f1b37de09375347b11df" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="67" refid="classhbv_1_1hbv_1a092a863432753cc15dba7848e7c421d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classhbv_1_1hbv_1a092a863432753cc15dba7848e7c421d7" kindref="member">bounds</ref><sp/>=<sp/>Bounds(lb,<sp/>ub)</highlight></codeline>
<codeline lineno="68" refid="classhbv_1_1hbv_1ae4c85c60e063bfd11874ddfd8daf2d85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classhbv_1_1hbv_1ae4c85c60e063bfd11874ddfd8daf2d85" kindref="member">hbv</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classhbv_1_1hbv_1a215bc24a3f9ff6ae0e74d3260429abcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classhbv_1_1hbv_1a215bc24a3f9ff6ae0e74d3260429abcd" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="classhbv_1_1hbv_1af5f8604b9c3d15a55b152cee78d56e39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classhbv_1_1hbv_1af5f8604b9c3d15a55b152cee78d56e39" kindref="member">__call__</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.array(x)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.empty(nobj)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_p<sp/>=<sp/>x.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_p<sp/>=<sp/>y.ctypes.data_as(ct.POINTER(ct.c_double))<sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classhbv_1_1hbv_1ae4c85c60e063bfd11874ddfd8daf2d85" kindref="member">hbv</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classhbv_1_1hbv_1ae4c85c60e063bfd11874ddfd8daf2d85" kindref="member">hbv</ref><sp/>=<sp/><ref refid="namespacehbv_1ae439426f8c05b2209aebcd1fb6bbf4d6" kindref="member">hbv_C</ref>()<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehbv_1a0e4d56699fe475c27c22f9b8163b2d32" kindref="member">fitness_hbv_C</ref>(self.<ref refid="classhbv_1_1hbv_1ae4c85c60e063bfd11874ddfd8daf2d85" kindref="member">hbv</ref>,<sp/>x_p,<sp/>y_p)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array(y)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="classhbv_1_1hbv_1a89aea998d9546dc3465bf46fbee95689" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classhbv_1_1hbv_1a89aea998d9546dc3465bf46fbee95689" kindref="member">qd_fitness</ref>(self,<sp/>x):<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>self.<ref refid="classhbv_1_1hbv_1af5f8604b9c3d15a55b152cee78d56e39" kindref="member">__call__</ref>(x)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y.copy()</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(y<sp/>-<sp/>self.qd_bounds.lb)<sp/>/<sp/>(self.qd_bounds.ub<sp/>-<sp/>self.qd_bounds.lb)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws<sp/>=<sp/>sum(y)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ws<sp/>&lt;<sp/>self.<ref refid="classhbv_1_1hbv_1a215bc24a3f9ff6ae0e74d3260429abcd" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classhbv_1_1hbv_1a215bc24a3f9ff6ae0e74d3260429abcd" kindref="member">best_y</ref>.value<sp/>=<sp/>ws</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;{ws:.3f}<sp/>{<sp/>list(b)<sp/>}&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ws,<sp/>b<sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="namespacehbv_1ac472b577264065e672297bacbf97cb7b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehbv_1ac472b577264065e672297bacbf97cb7b" kindref="member">check_pymoo</ref>(index):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.core.problem<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ElementwiseProblem<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.algorithms.moo.nsga2<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NSGA2</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.algorithms.moo.age<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>AGEMOEA</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.algorithms.moo.ctaea<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CTAEA</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.algorithms.soo.nonconvex.de<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DE</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.factory<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_sampling,<sp/>get_crossover,<sp/>get_mutation<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.factory<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_termination</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>multiprocessing.pool<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ThreadPool</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.operators.sampling.lhs<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LHS</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>store<sp/>=<sp/><ref refid="classfcmaes_1_1mode_1_1store" kindref="compound">mode.store</ref>(dim,<sp/>nobj,<sp/>2048)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapped<sp/>=<sp/><ref refid="classfcmaes_1_1mode_1_1wrapper" kindref="compound">mode.wrapper</ref>(<ref refid="classhbv_1_1hbv" kindref="compound">hbv</ref>(),<sp/>nobj,<sp/>store,<sp/>plot=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>interval<sp/>=<sp/>10000,<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&apos;nsga256_&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(index))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MyProblem(ElementwiseProblem):</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().__init__(n_var=dim,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_obj=nobj,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_constr=0,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xl=np.array(lb),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xu=np.array(ub),<sp/>**kwargs)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_evaluate(self,<sp/>x,<sp/>out,<sp/>*args,<sp/>**kwargs):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>wrapped(x)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">]<sp/>=<sp/>y[:nobj]</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[</highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">]<sp/>=<sp/>y[nobj:]</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>pool<sp/>=<sp/>ThreadPool(8)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#pool<sp/>=<sp/>multiprocessing.Pool(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/>MyProblem()</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>algorithm<sp/>=<sp/>NSGA2(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_size=256,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_offsprings=10,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampling=get_sampling(</highlight><highlight class="stringliteral">&quot;real_random&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crossover=get_crossover(</highlight><highlight class="stringliteral">&quot;real_sbx&quot;</highlight><highlight class="normal">,<sp/>prob=0.9,<sp/>eta=15),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutation=get_mutation(</highlight><highlight class="stringliteral">&quot;real_pm&quot;</highlight><highlight class="normal">,<sp/>eta=20),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eliminate_duplicates=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>minimize</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>minimize(problem,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithm,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_termination(</highlight><highlight class="stringliteral">&quot;n_gen&quot;</highlight><highlight class="normal">,<sp/>10000),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save_history=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbose=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>X<sp/>=<sp/>res.X</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>F<sp/>=<sp/>res.F</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.figure(figsize=(7,<sp/>5))</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.scatter(X[:,<sp/>0],<sp/>X[:,<sp/>1],<sp/>s=30,<sp/>facecolors=</highlight><highlight class="stringliteral">&apos;none&apos;</highlight><highlight class="normal">,<sp/>edgecolors=</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.figure(figsize=(7,<sp/>5))</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.scatter(F[:,<sp/>0],<sp/>F[:,<sp/>1],<sp/>s=30,<sp/>facecolors=</highlight><highlight class="stringliteral">&apos;none&apos;</highlight><highlight class="normal">,<sp/>edgecolors=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&quot;Objective<sp/>Space&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#plt.show()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.savefig(</highlight><highlight class="stringliteral">&apos;NSGSII256-objective-space&apos;</highlight><highlight class="normal">+<sp/>str(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.png&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.clf()<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>sys.exit()</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156" refid="namespacehbv_1a6ee72909084ab4c1484abbfd15e60994" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehbv_1a6ee72909084ab4c1484abbfd15e60994" kindref="member">optimize_mo</ref>():</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="classhbv_1_1hbv" kindref="compound">hbv</ref>()</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store<sp/>=<sp/><ref refid="classfcmaes_1_1mode_1_1store" kindref="compound">mode.store</ref>(dim,<sp/>nobj,<sp/>2048)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>=<sp/><ref refid="classfcmaes_1_1mode_1_1wrapper" kindref="compound">mode.wrapper</ref>(problem,<sp/>nobj,<sp/>store,<sp/>plot=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>interval<sp/>=<sp/>1000000,<sp/>name=</highlight><highlight class="stringliteral">&apos;mode256.16&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>parallel<sp/>function<sp/>evaluation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>modecpp.minimize,<sp/>the<sp/>C++<sp/>variant,<sp/>works<sp/>only<sp/>with<sp/>workers=1<sp/>because<sp/>of<sp/>limitations<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>used<sp/>parallelization<sp/>mechanism<sp/>in<sp/>combination<sp/>with<sp/>the<sp/>way<sp/>the<sp/>objective<sp/>function<sp/>is<sp/>initialized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mode.minimize(fun,<sp/>nobj,<sp/>0,<sp/>problem.bounds,<sp/>popsize<sp/>=<sp/>256,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>2000000,<sp/>nsga_update=True,<sp/>workers=16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>parallel<sp/>optimization<sp/>retry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modecpp.retry(fun,<sp/>nobj,<sp/>0,<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.bounds,<sp/>num_retries=32,<sp/>popsize<sp/>=<sp/>256,<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>500000,<sp/>nsga_update<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>workers=32)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(str(ex))<sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="namespacehbv_1a3a4f2f6019a427da618eb1b4826876da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehbv_1a3a4f2f6019a427da618eb1b4826876da" kindref="member">plot3d</ref>(ys,<sp/>name,<sp/>xlabel=&apos;&apos;,<sp/>ylabel=&apos;&apos;,<sp/>zlabel=&apos;&apos;):</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>ys[:,<sp/>0];<sp/>y<sp/>=<sp/>ys[:,<sp/>2];<sp/>z<sp/>=<sp/>ys[:,<sp/>1]</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>plt.figure()</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>ax<sp/>=<sp/>fig.add_subplot()<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>img<sp/>=<sp/>ax.scatter(x,<sp/>y,<sp/>s=4,<sp/>c=z,<sp/>cmap=</highlight><highlight class="stringliteral">&apos;rainbow&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar<sp/>=<sp/>fig.colorbar(img)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(xlabel)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(ylabel)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar.set_label(zlabel)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figheight(8)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figwidth(8)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.savefig(name,<sp/>dpi=300)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="namespacehbv_1a9517c57f4d7c2b62d429da020f8213ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehbv_1a9517c57f4d7c2b62d429da020f8213ad" kindref="member">plot_archive</ref>(archive,<sp/>problem):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>si<sp/>=<sp/>archive.argsort()</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptions<sp/>=<sp/>archive.get_ds()[si]</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>archive.get_ys()[si]</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>archive.get_xs()[si]</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>yall<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(si)):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ys[i]<sp/>&lt;<sp/>np.inf:<sp/></highlight><highlight class="comment">#<sp/>throw<sp/>out<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ysp.append(descriptions[i])</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>np.array(ysp)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehbv_1a3a4f2f6019a427da618eb1b4826876da" kindref="member">plot3d</ref>(ysp,<sp/></highlight><highlight class="stringliteral">&quot;hbv_nd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;f1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;f3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;f2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207" refid="namespacehbv_1ab4adfe2a468412f8ef0d14c6b70285eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacehbv_1ab4adfe2a468412f8ef0d14c6b70285eb" kindref="member">optimize_qd</ref>():</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="classhbv_1_1hbv" kindref="compound">hbv</ref>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.qd_dim<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.qd_bounds<sp/>=<sp/>Bounds(np.array([0.2,<sp/>0.7,<sp/>0,<sp/>0]),<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array([0.6,<sp/>1.3,<sp/>0.18,<sp/>0.6]))<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;hbv_nd&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;elites&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:64}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#opt_params1<sp/>=<sp/>{&apos;solver&apos;:&apos;CMA_CPP&apos;,<sp/>&apos;max_evals&apos;:4000,<sp/>&apos;popsize&apos;:32,<sp/>&apos;stall_criterion&apos;:3}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;CRMFNES_CPP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;max_evals&apos;</highlight><highlight class="normal">:4000,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:32,<sp/></highlight><highlight class="stringliteral">&apos;stall_criterion&apos;</highlight><highlight class="normal">:3}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>diversifier.minimize(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1mapelites_1_1wrapper" kindref="compound">mapelites.wrapper</ref>(problem.qd_fitness,<sp/>problem.qd_dim,<sp/>interval=200000,<sp/>save_interval=5000000),<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.bounds,<sp/>problem.qd_bounds,<sp/>opt_params=[opt_params0,<sp/>opt_params1],<sp/>max_evals=12000000)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>archive<sp/>=<sp/>mapelites.load_archive(name,<sp/>problem.bounds,<sp/>problem.qd_bounds)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;final<sp/>archive:&apos;</highlight><highlight class="normal">,<sp/>archive.info())</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>archive.save(name)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehbv_1a9517c57f4d7c2b62d429da020f8213ad" kindref="member">plot_archive</ref>(archive,<sp/>problem)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>optimize_mo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehbv_1ab4adfe2a468412f8ef0d14c6b70285eb" kindref="member">optimize_qd</ref>()</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/hbv/hbv.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="noisy__tsp_8py" kind="file" language="Python">
    <compoundname>noisy_tsp.py</compoundname>
    <innerclass refid="classexamples_1_1noisy__tsp_1_1_t_s_p" prot="public">examples::noisy_tsp::TSP</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1noisy__tsp">examples::noisy_tsp</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1noisy__tsp_1adf0402eddcdcf74d3e734391682997b1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::noisy_tsp.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.noisy_tsp.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/noisy_tsp.py" line="33" column="1" bodyfile="examples/noisy_tsp.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1noisy__tsp_1a32bd4bbc6c3e7c205179670d3c261b66" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::noisy_tsp.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.noisy_tsp.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/noisy_tsp.py" line="33" column="1" bodyfile="examples/noisy_tsp.py" bodystart="33" bodyend="-1"/>
        <referencedby refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a820f00764aca30493d15b5fbaab1f558" compoundref="noisy__tsp_8py" startline="63" endline="73">examples.noisy_tsp.TSP.__call__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1noisy__tsp_1a9da110a99efd0178aaa8388683d0ec2b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::noisy_tsp.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.noisy_tsp.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/noisy_tsp.py" line="33" column="1" bodyfile="examples/noisy_tsp.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1noisy__tsp_1a8345b041db5eda8bdc039cee0b2f2a3b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::noisy_tsp.tsp</definition>
        <argsstring></argsstring>
        <name>tsp</name>
        <qualifiedname>examples.noisy_tsp.tsp</qualifiedname>
        <initializer>=  load_tsplib(&apos;data/tsp/br17.tsp&apos;).optimize()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/noisy_tsp.py" line="109" column="1" bodyfile="examples/noisy_tsp.py" bodystart="109" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1noisy__tsp_1a0ce68f212bcae03932d42fc95e0c9b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.noisy_tsp.evaluate_tsp</definition>
        <argsstring>(x, W, d, noise_factor, iter_num)</argsstring>
        <name>evaluate_tsp</name>
        <qualifiedname>examples.noisy_tsp.evaluate_tsp</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>W</type>
          <defname>W</defname>
        </param>
        <param>
          <type>d</type>
          <defname>d</defname>
        </param>
        <param>
          <type>noise_factor</type>
          <defname>noise_factor</defname>
        </param>
        <param>
          <type>iter_num</type>
          <defname>iter_num</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/noisy_tsp.py" line="39" column="1" bodyfile="examples/noisy_tsp.py" bodystart="39" bodyend="50"/>
        <referencedby refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a820f00764aca30493d15b5fbaab1f558" compoundref="noisy__tsp_8py" startline="63" endline="73">examples.noisy_tsp.TSP.__call__</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1noisy__tsp_1a274a3b58edfc0cdd8981e59138bc1d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.noisy_tsp.load_tsplib</definition>
        <argsstring>(path, noise_factor=1, iter_num=100)</argsstring>
        <name>load_tsplib</name>
        <qualifiedname>examples.noisy_tsp.load_tsplib</qualifiedname>
        <param>
          <type>path</type>
          <defname>path</defname>
        </param>
        <param>
          <type>noise_factor</type>
          <defname>noise_factor</defname>
          <defval>1</defval>
        </param>
        <param>
          <type>iter_num</type>
          <defname>iter_num</defname>
          <defval>100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/noisy_tsp.py" line="100" column="1" bodyfile="examples/noisy_tsp.py" bodystart="100" bodyend="104"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1noisy__tsp" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>example<sp/>is<sp/>inspired<sp/>by<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/AlgTUDelft/ExpensiveOptimBenchmark/blob/master/expensiveoptimbenchmark/problems/TSP.py[TSP.py]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>but<sp/>using<sp/>numba<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>objective<sp/>function.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>It<sp/>implements<sp/>a<sp/>&quot;noisy<sp/>Travelers<sp/>Salesman<sp/>Problem&quot;.<sp/>Goal<sp/>is<sp/>to<sp/>minimize<sp/>the<sp/>&quot;robust&quot;<sp/>tour<sp/>length,<sp/>the<sp/>maximal<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>length<sp/>for<sp/>&quot;iter_num&quot;<sp/>iterations<sp/>using<sp/>random<sp/>noise:<sp/>noise_factor*rnd(0,1)<sp/>for<sp/>each<sp/>transfer.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/TSP.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tsplib95</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>networkx</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>njit,<sp/>numba</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bite_cpp,<sp/>Cma_cpp,<sp/>De_cpp,<sp/>De_python,<sp/>dtime</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry,<sp/>modecpp,<sp/>de<sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="33" refid="namespaceexamples_1_1noisy__tsp_1a32bd4bbc6c3e7c205179670d3c261b66" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#<sp/>do<sp/>&apos;pip<sp/>install<sp/>tsplib95&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="39" refid="namespaceexamples_1_1noisy__tsp_1a0ce68f212bcae03932d42fc95e0c9b5e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1noisy__tsp_1a0ce68f212bcae03932d42fc95e0c9b5e" kindref="member">evaluate_tsp</ref>(x,<sp/>W,<sp/>d,<sp/>noise_factor,<sp/>iter_num):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>robust_total_route_length<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>order<sp/>=<sp/>np.argsort(x)<sp/>+<sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(iter_num):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_route_length<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_route_length<sp/>+=<sp/>W[0,<sp/>order[0]]<sp/>+<sp/>np.random.random()<sp/>*<sp/>noise_factor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_route_length<sp/>+=<sp/>W[order[d-1],<sp/>0]<sp/>+<sp/>np.random.random()<sp/>*<sp/>noise_factor<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(d-1):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_route_length<sp/>+=<sp/>W[order[i],<sp/>order[i+1]]<sp/>+<sp/>np.random.random()<sp/>*<sp/>noise_factor</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robust_total_route_length<sp/>=<sp/>max(total_route_length,<sp/>robust_total_route_length)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>robust_total_route_length</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classexamples_1_1noisy__tsp_1_1_t_s_p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p" kindref="compound">TSP</ref>:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ac6667519b59b578a877b76927beb4f5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ac6667519b59b578a877b76927beb4f5f" kindref="member">__init__</ref>(self,<sp/>name,<sp/>W,<sp/>noise_factor,<sp/>iter_num):</highlight></codeline>
<codeline lineno="54" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a6e8212b6541f83c5fb8873d1b11160ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a6e8212b6541f83c5fb8873d1b11160ad" kindref="member">name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="55" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a342ebcc277e8f695d3d0b74971608e16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a342ebcc277e8f695d3d0b74971608e16" kindref="member">d</ref><sp/>=<sp/>W.shape[0]<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="56" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ac77bb2ffbe421579fa7588619208349c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ac77bb2ffbe421579fa7588619208349c" kindref="member">W</ref><sp/>=<sp/>W</highlight></codeline>
<codeline lineno="57" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1aab15a8e683241dd5f30608552afa10de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1aab15a8e683241dd5f30608552afa10de" kindref="member">noise_factor</ref><sp/>=<sp/>noise_factor</highlight></codeline>
<codeline lineno="58" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a0b625778fcb7aa5c2e945515f60d0696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a0b625778fcb7aa5c2e945515f60d0696" kindref="member">iter_num</ref><sp/>=<sp/>iter_num</highlight></codeline>
<codeline lineno="59" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a12b4d225747619cbd6f5cb345b30eb4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a12b4d225747619cbd6f5cb345b30eb4e" kindref="member">evals</ref><sp/>=<sp/>mp.RawValue(ct.c_long,<sp/>0)<sp/><sp/></highlight><highlight class="comment">#<sp/>writable<sp/>across<sp/>python<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ae627032ef2a6509aee69ea8b04c64585" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ae627032ef2a6509aee69ea8b04c64585" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight></codeline>
<codeline lineno="61" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a1614a3adc9935ebf5db3b81a2a161d62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a1614a3adc9935ebf5db3b81a2a161d62" kindref="member">t0</ref><sp/>=<sp/>time.perf_counter()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a820f00764aca30493d15b5fbaab1f558" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a820f00764aca30493d15b5fbaab1f558" kindref="member">__call__</ref>(self,<sp/>x):<sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="namespaceexamples_1_1noisy__tsp_1a0ce68f212bcae03932d42fc95e0c9b5e" kindref="member">evaluate_tsp</ref>(x,<sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ac77bb2ffbe421579fa7588619208349c" kindref="member">W</ref>,<sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a342ebcc277e8f695d3d0b74971608e16" kindref="member">d</ref>,<sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1aab15a8e683241dd5f30608552afa10de" kindref="member">noise_factor</ref>,<sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a0b625778fcb7aa5c2e945515f60d0696" kindref="member">iter_num</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a12b4d225747619cbd6f5cb345b30eb4e" kindref="member">evals</ref>.value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ae627032ef2a6509aee69ea8b04c64585" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ae627032ef2a6509aee69ea8b04c64585" kindref="member">best_y</ref>.value<sp/>=<sp/>y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;evals<sp/>=<sp/>{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>y<sp/>=<sp/>{2:.5f}<sp/>x=<sp/>{3:s}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1noisy__tsp_1a32bd4bbc6c3e7c205179670d3c261b66" kindref="member">format</ref>(self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a12b4d225747619cbd6f5cb345b30eb4e" kindref="member">evals</ref>.value,<sp/>dtime(self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a1614a3adc9935ebf5db3b81a2a161d62" kindref="member">t0</ref>),<sp/>y,<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">.join([f</highlight><highlight class="stringliteral">&quot;{xi:.16f}&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>xi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x])<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;]&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a18f9b6b35c64ab50fa3abdad4a12ef42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ae0e91e94ec6dd338a47022f9ac6fe368" kindref="member">mofun</ref>(self,<sp/>xs):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>self(xs)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array([y])</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ab921c0f958d351e1846745dfe2e6c438" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ab921c0f958d351e1846745dfe2e6c438" kindref="member">bounds</ref>(self):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Bounds(np.zeros(self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a342ebcc277e8f695d3d0b74971608e16" kindref="member">d</ref>),<sp/>np.array([1]*self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a342ebcc277e8f695d3d0b74971608e16" kindref="member">d</ref>))<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="81" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a2f0e74ea61f09f52a769556ba2cfd8b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a2f0e74ea61f09f52a769556ba2cfd8b6" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;TSP(name={self.name},evals={self.evals},iter={self.iter_num})&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a5849bb4c633a30f8c2929f486eda293a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a5849bb4c633a30f8c2929f486eda293a" kindref="member">optimize</ref>(self):</highlight></codeline>
<codeline lineno="85" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a37817a8e4866856cf13ce4f10b4163cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a37817a8e4866856cf13ce4f10b4163cd" kindref="member">bestY</ref><sp/>=<sp/>1E99</highlight></codeline>
<codeline lineno="86" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a50e8129f4893cf0fb95a3068ccbf3111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a50e8129f4893cf0fb95a3068ccbf3111" kindref="member">bestX</ref><sp/>=<sp/>[]<sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retry.minimize(self,<sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ab921c0f958d351e1846745dfe2e6c438" kindref="member">bounds</ref>(),<sp/>optimizer=<ref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" kindref="compound">Bite_cpp</ref>(50000,stall_criterion=3),<sp/>num_retries=32)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#return<sp/>retry.minimize(self,<sp/>self.bounds(),<sp/>optimizer=De_cpp(50000),<sp/>num_retries=32)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#return<sp/>retry.minimize(self,<sp/>self.bounds(),<sp/>optimizer=Cma_cpp(50000),<sp/>num_retries=320)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#return<sp/>retry.minimize(self,<sp/>self.bounds(),<sp/>optimizer=De_python(50000),<sp/>num_retries=32)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1aa298d4659787619babc9c7c0bbb98b74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1aa298d4659787619babc9c7c0bbb98b74" kindref="member">optimize_mo</ref>(self,<sp/>nsga_update<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a37817a8e4866856cf13ce4f10b4163cd" kindref="member">bestY</ref><sp/>=<sp/>1E99</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a50e8129f4893cf0fb95a3068ccbf3111" kindref="member">bestX</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="96" refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ae0e91e94ec6dd338a47022f9ac6fe368" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>modecpp.retry(self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ae0e91e94ec6dd338a47022f9ac6fe368" kindref="member">mofun</ref>,<sp/>1,<sp/>0,<sp/>self.<ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1ab921c0f958d351e1846745dfe2e6c438" kindref="member">bounds</ref>(),<sp/>num_retries=320,<sp/>popsize<sp/>=<sp/>48,<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>1000000,<sp/>nsga_update<sp/>=<sp/>nsga_update,<sp/>logger<sp/>=<sp/>logger())</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="namespaceexamples_1_1noisy__tsp_1a274a3b58edfc0cdd8981e59138bc1d5b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1noisy__tsp_1a274a3b58edfc0cdd8981e59138bc1d5b" kindref="member">load_tsplib</ref>(path,<sp/>noise_factor=1,<sp/>iter_num=100):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>instance<sp/>=<sp/>tsplib95.load(path)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>W<sp/>=<sp/>networkx.to_numpy_matrix(instance.get_graph())</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classexamples_1_1noisy__tsp_1_1_t_s_p" kindref="compound">TSP</ref>(instance.name,<sp/>W,<sp/>noise_factor,<sp/>iter_num)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>see<sp/>http://comopt.ifi.uni-heidelberg.de/software/TSPLIB95/STSP.html<sp/>for<sp/>solutions<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="namespaceexamples_1_1noisy__tsp_1a8345b041db5eda8bdc039cee0b2f2a3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>tsp<sp/>=<sp/><ref refid="namespaceexamples_1_1noisy__tsp_1a274a3b58edfc0cdd8981e59138bc1d5b" kindref="member">load_tsplib</ref>(</highlight><highlight class="stringliteral">&apos;data/tsp/br17.tsp&apos;</highlight><highlight class="normal">).optimize()</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>see<sp/>https://www.math.uwaterloo.ca/tsp/history/tspinfo/gr666_info.html<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>optimal<sp/>solution<sp/>without<sp/>noise<sp/>for<sp/>gr666<sp/>is<sp/>294358.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#tsp<sp/>=<sp/>load_tsplib(&apos;data/tsp/gr666.tsp&apos;).optimize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#tsp<sp/>=<sp/>load_tsplib(&apos;data/tsp/berlin52.tsp&apos;).optimize_mo()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/noisy_tsp.py"/>
  </compounddef>
</doxygen>

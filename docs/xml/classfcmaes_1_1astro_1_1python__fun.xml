<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1astro_1_1python__fun" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::astro::python_fun</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1python__fun_1a4e336bc9e7096b1fffe9576915a2230c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.astro.python_fun::cfun</definition>
        <argsstring></argsstring>
        <name>cfun</name>
        <qualifiedname>fcmaes.astro.python_fun.cfun</qualifiedname>
        <initializer>=  cfun</initializer>
        <briefdescription>
<para>The name of the function as defined in the external <computeroutput>astro_map</computeroutput> dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="808" column="1" bodyfile="fcmaes/astro.py" bodystart="808" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1astro_1_1python__fun_1a192073cb4d9c99ce7078bc4600bb2d7f" compoundref="astro_8py" startline="825" endline="838">fcmaes.astro.python_fun.__call__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1astro_1_1python__fun_1a120709c7a954843ad0f8bb32da5a6658" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.astro.python_fun::bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <qualifiedname>fcmaes.astro.python_fun.bounds</qualifiedname>
        <initializer>=  bounds</initializer>
        <briefdescription>
<para>An object specifying the lower and upper bounds for valid input values. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes an instance of the class with the provided callable function and bounds.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfun</parametername>
</parameternamelist>
<parameterdescription>
<para>A callable function to be used in the implementation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>A list or tuple representing the bounds associated with the object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="809" column="1" bodyfile="fcmaes/astro.py" bodystart="809" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_check_bounds_1a85adee224b45c4a645b251017c1d604b" compoundref="optimizer_8py" startline="2905" endline="2910">fcmaes.optimizer.CheckBounds.__call__</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a41d3b087b32923f75cbe401f3f2419e3" compoundref="benchmark__gtop__pygmo_8py" startline="49" endline="51">examples.benchmark_gtop_pygmo.pygmo_udp.get_bounds</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" compoundref="anpcp_8py" startline="78" endline="98">anpcp.ANPCP.init_tsp</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a96c79aee6dab29a25fd28b0b383f1916" compoundref="employee_8py" startline="241" endline="250">examples.employee.problem.optimize</referencedby>
        <referencedby refid="classexamples_1_1trappist__delivery_1_1fitness_1ad25284f2ed9bbb5897ec7ca711e5fa17" compoundref="trappist__delivery_8py" startline="944" endline="954">examples.trappist_delivery.fitness.optimize</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a451356183bd266ec5feb44a1b9cf92ef" compoundref="employee_8py" startline="251" endline="268">examples.employee.problem.optimize_mo</referencedby>
        <referencedby refid="classfcmaes_1_1journal_1_1journal__wrapper_1a5adc885590326f2a0989cbef083646e2" compoundref="journal_8py" startline="608" endline="613">fcmaes.journal.journal_wrapper.store_x</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1astro_1_1python__fun_1abf06eb12ce6525e9243940a84c73d94c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.astro.python_fun.__init__</definition>
        <argsstring>(self, cfun, bounds)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.astro.python_fun.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1astro_1_1python__fun_1a4e336bc9e7096b1fffe9576915a2230c" kindref="member">cfun</ref></type>
          <defname>cfun</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1astro_1_1python__fun_1a120709c7a954843ad0f8bb32da5a6658" kindref="member">bounds</ref></type>
          <defname>bounds</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="807" column="1" bodyfile="fcmaes/astro.py" bodystart="807" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1astro_1_1python__fun_1a192073cb4d9c99ce7078bc4600bb2d7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.astro.python_fun.__call__</definition>
        <argsstring>(self, x)</argsstring>
        <name>__call__</name>
        <qualifiedname>fcmaes.astro.python_fun.__call__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>Evaluates the given callable function mapped to <computeroutput>astro_map</computeroutput> using the input array <computeroutput>x</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The function validates the input array&apos;s size before performing the calculation and ensures the result is finite. In case of an exception or invalid output, a default value of 1E10 is returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of floating-point numbers to be evaluated by the callable function in <computeroutput>astro_map</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>float The computed value from the callable function. If an error occurs during computation or the output is not finite, returns 1E10. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/astro.py" line="825" column="1" bodyfile="fcmaes/astro.py" bodystart="825" bodyend="838"/>
        <references refid="classfcmaes_1_1astro_1_1python__fun_1a4e336bc9e7096b1fffe9576915a2230c" compoundref="astro_8py" startline="808">fcmaes.astro.python_fun.cfun</references>
        <referencedby refid="classhbv_1_1hbv_1a89aea998d9546dc3465bf46fbee95689" compoundref="hbv_8py" startline="81" endline="90">hbv.hbv.qd_fitness</referencedby>
        <referencedby refid="classlrgv_1_1lrgv_1a527b9b7a7927721b5320ab433bf75aea" compoundref="lrgv_8py" startline="73" endline="86">lrgv.lrgv.qd_fitness</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents a callable Python function object that interfaces with external C functions and enforces boundary restrictions on the input. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is used to evaluate functions defined by external mappings, ensuring values remain valid within specified constraints. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.astro.python_fun</label>
        <link refid="classfcmaes_1_1astro_1_1python__fun"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/astro.py" line="793" column="1" bodyfile="fcmaes/astro.py" bodystart="793" bodyend="838"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1astro_1_1python__fun_1a192073cb4d9c99ce7078bc4600bb2d7f" prot="public" virt="non-virtual"><scope>fcmaes::astro::python_fun</scope><name>__call__</name></member>
      <member refid="classfcmaes_1_1astro_1_1python__fun_1abf06eb12ce6525e9243940a84c73d94c" prot="public" virt="non-virtual"><scope>fcmaes::astro::python_fun</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1astro_1_1python__fun_1a120709c7a954843ad0f8bb32da5a6658" prot="public" virt="non-virtual"><scope>fcmaes::astro::python_fun</scope><name>bounds</name></member>
      <member refid="classfcmaes_1_1astro_1_1python__fun_1a4e336bc9e7096b1fffe9576915a2230c" prot="public" virt="non-virtual"><scope>fcmaes::astro::python_fun</scope><name>cfun</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="pgpecpp_8py" kind="file" language="Python">
    <compoundname>pgpecpp.py</compoundname>
    <innerclass refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c" prot="public">fcmaes::pgpecpp::PGPE_C</innerclass>
    <innernamespace refid="namespacefcmaes">fcmaes</innernamespace>
    <innernamespace refid="namespacefcmaes_1_1pgpecpp">fcmaes::pgpecpp</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1af8da1cbe352bc1a796e5f15d878647f2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.optimizePGPE_C</definition>
        <argsstring></argsstring>
        <name>optimizePGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.optimizePGPE_C</qualifiedname>
        <initializer>=  libcmalib.optimizePGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="410" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="410" bodyend="-1"/>
        <referencedby refid="namespacefcmaes_1_1pgpecpp_1ac26ca85a239168914a5e741b112af39f" compoundref="pgpecpp_8py" startline="129" endline="169">fcmaes.pgpecpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1af356a4b052dd645eb6858407c6c30cca" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>fcmaes.pgpecpp.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="411" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1aee73bd986018e30ab0fef7ab6f5d8b18" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.initPGPE_C</definition>
        <argsstring></argsstring>
        <name>initPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.initPGPE_C</qualifiedname>
        <initializer>=  libcmalib.initPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="419" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a5c33aa0b6c6e1fb0369e7516eacb5649" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>fcmaes.pgpecpp.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="427" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a03df7e468c547553701bf0f0dc702b4f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.destroyPGPE_C</definition>
        <argsstring></argsstring>
        <name>destroyPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.destroyPGPE_C</qualifiedname>
        <initializer>=  libcmalib.destroyPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="429" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="429" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a255b3fc3e61ebee7f65b20d63c6ba3d4" compoundref="pgpecpp_8py" startline="290" endline="292">fcmaes.pgpecpp.PGPE_C.__del__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a89e498c3d796b4113e670e638aa85163" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.askPGPE_C</definition>
        <argsstring></argsstring>
        <name>askPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.askPGPE_C</qualifiedname>
        <initializer>=  libcmalib.askPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="432" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="432" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a83964137647622f1ea94a90106b7fc85" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.tellPGPE_C</definition>
        <argsstring></argsstring>
        <name>tellPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.tellPGPE_C</qualifiedname>
        <initializer>=  libcmalib.tellPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="435" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="435" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a3d030c90af2ea816f60372c4f0bb98d5" compoundref="pgpecpp_8py" startline="334" endline="342">fcmaes.pgpecpp.PGPE_C.tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a3c39b0fa9cb8f471f226bc6916bf3a71" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.populationPGPE_C</definition>
        <argsstring></argsstring>
        <name>populationPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.populationPGPE_C</qualifiedname>
        <initializer>=  libcmalib.populationPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="439" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="439" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a550fd833f381cfb0e882cdccfe52ef2a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.resultPGPE_C</definition>
        <argsstring></argsstring>
        <name>resultPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.resultPGPE_C</qualifiedname>
        <initializer>=  libcmalib.resultPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="442" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="442" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e" compoundref="pgpecpp_8py" startline="393" endline="407">fcmaes.pgpecpp.PGPE_C.result</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacefcmaes_1_1pgpecpp_1ac26ca85a239168914a5e741b112af39f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OptimizeResult</type>
        <definition> OptimizeResult fcmaes.pgpecpp.minimize</definition>
        <argsstring>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.1, Optional[int] popsize=32, Optional[int] max_evaluations=100000, Optional[int] workers=None, Optional[float] stop_fitness=-np.inf, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=True, Optional[int] lr_decay_steps=1000, Optional[bool] use_ranking=True, Optional[float] center_learning_rate=0.15, Optional[float] stdev_learning_rate=0.1, Optional[float] stdev_max_change=0.2, Optional[float] b1=0.9, Optional[float] b2=0.999, Optional[float] eps=1e-8, Optional[float] decay_coef=1.0)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.pgpecpp.minimize</qualifiedname>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>x0</defname>
          <array>[Bounds]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>x0</declname>
          <defname>input_sigma</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional]</type>
          <declname>input_sigma</declname>
          <defname>popsize</defname>
          <array>[Union[float, ArrayLike, Callable]</array>
          <defval>0.1</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <defname>max_evaluations</defname>
          <array>[int]</array>
          <defval>32</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <defname>workers</defname>
          <array>[int]</array>
          <defval>100000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>workers</declname>
          <defname>stop_fitness</defname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <defname>rg</defname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>rg</declname>
          <defname>runid</defname>
          <array>[Generator]</array>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>runid</declname>
          <defname>normalize</defname>
          <array>[int]</array>
          <defval>0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>normalize</declname>
          <defname>lr_decay_steps</defname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>lr_decay_steps</declname>
          <defname>use_ranking</defname>
          <array>[int]</array>
          <defval>1000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>use_ranking</declname>
          <defname>center_learning_rate</defname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>center_learning_rate</declname>
          <defname>stdev_learning_rate</defname>
          <array>[float]</array>
          <defval>0.15</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stdev_learning_rate</declname>
          <defname>stdev_max_change</defname>
          <array>[float]</array>
          <defval>0.1</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stdev_max_change</declname>
          <defname>b1</defname>
          <array>[float]</array>
          <defval>0.2</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>b1</declname>
          <defname>b2</defname>
          <array>[float]</array>
          <defval>0.9</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>b2</declname>
          <defname>eps</defname>
          <array>[float]</array>
          <defval>0.999</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>eps</declname>
          <defname>decay_coef</defname>
          <array>[float]</array>
          <defval>1e-8</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>decay_coef</declname>
          <array>[float]</array>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Optimize a given objective function by minimizing its value using the PGPE (Policy Gradient with Parameter-based Exploration) method. </para>
        </briefdescription>
        <detaileddescription>
<para>This optimization approach uses parallel processing and supports both optional parameter normalization and adaptive learning rates for center and standard deviation.</para>
<para><verbatim>   fun (Callable[[ArrayLike], float]): Objective function to minimize. Must
       take a single input of type ArrayLike and return a float.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>Bounds for the variables. Should be specified as a tuple (lower_bounds, upper_bounds) or None for unbounded variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess for the variables. If None, random initialization will be applied within bounds if specified. input_sigma (Optional[Union[float, ArrayLike, Callable]]): Initial standard deviation for parameter sampling. Defaults to 0.1. Can be a scalar, array, or callable returning an array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Population size for sampling. Defaults to 32. If not specified or odd, it will be adjusted to the next even number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of function evaluations to perform. Defaults to 100000. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workers</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of parallel workers to use for evaluation. Defaults to None (no parallelism). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of fitness to stop early. If the objective reaches this value, the algorithm will terminate early. Defaults to -infinity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator to use during optimization. Defaults to Generator(PCG64DXSM()). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runid</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique identifier for the run. Useful for distinguishing runs in logging or debugging. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to normalize the input parameters for the optimizer. Defaults to True. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lr_decay_steps</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of steps for learning rate decay. Defaults to 1000. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_ranking</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to use ranking over raw fitness when calculating updates. Defaults to True. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center_learning_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Learning rate used to update the center. Defaults to 0.15. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stdev_learning_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Learning rate used to update the standard deviation. Defaults to 0.1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stdev_max_change</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum allowed change for standard deviation updates. Defaults to 0.2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b1</parametername>
</parameternamelist>
<parameterdescription>
<para>Exponential moving average factor for the first moment estimate during adaptive updates. Defaults to 0.9. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b2</parametername>
</parameternamelist>
<parameterdescription>
<para>Exponential moving average factor for the second moment estimate during adaptive updates. Defaults to 0.999. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps</parametername>
</parameternamelist>
<parameterdescription>
<para>Small term added to avoid division by zero in adaptive algorithms. Defaults to 1e-8. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decay_coef</parametername>
</parameternamelist>
<parameterdescription>
<para>Coefficient that controls decay in the learning rate updates. Defaults to 1.0.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>OptimizeResult An object containing optimization results, including the best parameters found (<computeroutput>x</computeroutput>), the objective value (<computeroutput>fun</computeroutput>) at those parameters, the number of function evaluations (<computeroutput>nfev</computeroutput>), the number of iterations (<computeroutput>nit</computeroutput>), the stopping status as an integer code (<computeroutput>status</computeroutput>), and a boolean success flag (<computeroutput>success</computeroutput>). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="109" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="129" bodyend="169"/>
        <references refid="namespacefcmaes_1_1pgpecpp_1af8da1cbe352bc1a796e5f15d878647f2" compoundref="pgpecpp_8py" startline="410">fcmaes.pgpecpp.optimizePGPE_C</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>============================================================================= </para>
    </briefdescription>
    <detaileddescription>
<para>Fast version 1.6.11</para>
<para>(c) 2025 – Dietmar Wolz (c) 2025 – Latitude</para>
<para>License MIT</para>
<para><itemizedlist>
<listitem><para><ref refid="pgpecpp_8py" kindref="compound">pgpecpp.py</ref></para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Description</title><para><itemizedlist>
<listitem><para>Eigen based implementation of PGPE see [2] derived from [3].</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="author"><para>:<itemizedlist>
<listitem><para>Dietmar Wolz <programlisting><codeline><highlight class="normal">-<sp/>romain.despoullains</highlight><highlight class="preprocessor">@latitude.eu</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">-<sp/>corentin.generet</highlight><highlight class="preprocessor">@latitude.eu</highlight></codeline>
</programlisting></para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>References</title><para><itemizedlist>
<listitem><para>[1] <ulink url="https://github.com/dietmarwo/fast-cma-es">https://github.com/dietmarwo/fast-cma-es</ulink></para>
</listitem><listitem><para>[2] <ulink url="http://mediatum.ub.tum.de/doc/1099128/631352.pdf">http://mediatum.ub.tum.de/doc/1099128/631352.pdf</ulink></para>
</listitem><listitem><para>[3] <ulink url="https://github.com/google/evojax/blob/main/evojax/algo/pgpe.py">https://github.com/google/evojax/blob/main/evojax/algo/pgpe.py</ulink></para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>Documentation</title><para><itemizedlist>
<listitem><para><hruler/>
 </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacefcmaes_1_1pgpecpp" refkind="compound"><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">=============================================================================</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/>Fast<sp/>CMA-ES<sp/>-<sp/>version<sp/>1.6.11</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/>(c)<sp/>2025<sp/>–<sp/>Dietmar<sp/>Wolz</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/>(c)<sp/>2025<sp/>–<sp/>Latitude</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/>License:<sp/>MIT</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/>File:</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/>-<sp/>pgpecpp.py</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/>Description:</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/>-<sp/>Eigen<sp/>based<sp/>implementation<sp/>of<sp/>PGPE<sp/>see<sp/>[2]<sp/>derived<sp/>from<sp/>[3].</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/>Authors:</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/>-<sp/>Dietmar<sp/>Wolz</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/>-<sp/>romain.despoullains@latitude.eu</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/>-<sp/>corentin.generet@latitude.eu</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/>References:</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/>-<sp/>[1]<sp/>https://github.com/dietmarwo/fast-cma-es</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/>-<sp/>[2]<sp/>http://mediatum.ub.tum.de/doc/1099128/631352.pdf</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/>-<sp/>[3]<sp/>https://github.com/google/evojax/blob/main/evojax/algo/pgpe.py</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/>Documentation:</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/>-</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">=============================================================================</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.random<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PCG64DXSM,<sp/>Generator</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OptimizeResult,<sp/>Bounds</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1evaluator" kindref="compound">fcmaes.evaluator</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>_check_bounds,<sp/>_get_bounds,<sp/>callback_par,<sp/>parallel,<sp/>call_back_par,<sp/>libcmalib</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Optional,<sp/>Callable,<sp/>Union</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ArrayLike</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">os.environ[</highlight><highlight class="stringliteral">&apos;MKL_DEBUG_CPU_TYPE&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;5&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1pgpecpp_1ac26ca85a239168914a5e741b112af39f" kindref="member">minimize</ref>(fun:<sp/>Callable[[ArrayLike],<sp/>float],</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional[Bounds]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0:<sp/>Optional[ArrayLike]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma:<sp/>Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]<sp/>=<sp/>0.1,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize:<sp/>Optional[int]<sp/>=<sp/>32,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations:<sp/>Optional[int]<sp/>=<sp/>100000,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers:<sp/>Optional[int]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness:<sp/>Optional[float]<sp/>=<sp/>-np.inf,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg:<sp/>Optional[Generator]<sp/>=<sp/>Generator(PCG64DXSM()),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid:<sp/>Optional[int]<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize:<sp/>Optional[bool]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lr_decay_steps:<sp/>Optional[int]<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_ranking:<sp/>Optional[bool]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center_learning_rate:<sp/>Optional[float]<sp/>=<sp/>0.15,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdev_learning_rate:<sp/>Optional[float]<sp/>=<sp/>0.1,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdev_max_change:<sp/>Optional[float]<sp/>=<sp/>0.2,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1:<sp/>Optional[float]<sp/>=<sp/>0.9,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2:<sp/>Optional[float]<sp/>=<sp/>0.999,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps:<sp/>Optional[float]<sp/>=<sp/>1e-8,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decay_coef:<sp/>Optional[float]<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>OptimizeResult:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Optimize<sp/>a<sp/>given<sp/>objective<sp/>function<sp/>by<sp/>minimizing<sp/>its<sp/>value<sp/>using<sp/>the<sp/>PGPE</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(Policy<sp/>Gradient<sp/>with<sp/>Parameter-based<sp/>Exploration)<sp/>method.<sp/>This<sp/>optimization</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>approach<sp/>uses<sp/>parallel<sp/>processing<sp/>and<sp/>supports<sp/>both<sp/>optional<sp/>parameter</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>normalization<sp/>and<sp/>adaptive<sp/>learning<sp/>rates<sp/>for<sp/>center<sp/>and<sp/>standard<sp/>deviation.</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>(Callable[[ArrayLike],<sp/>float]):<sp/>Objective<sp/>function<sp/>to<sp/>minimize.<sp/>Must</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>take<sp/>a<sp/>single<sp/>input<sp/>of<sp/>type<sp/>ArrayLike<sp/>and<sp/>return<sp/>a<sp/>float.</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>(Optional[Bounds]):<sp/>Bounds<sp/>for<sp/>the<sp/>variables.<sp/>Should<sp/>be<sp/>specified</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>a<sp/>tuple<sp/>(lower_bounds,<sp/>upper_bounds)<sp/>or<sp/>None<sp/>for<sp/>unbounded<sp/>variables.</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>(Optional[ArrayLike]):<sp/>Initial<sp/>guess<sp/>for<sp/>the<sp/>variables.<sp/>If<sp/>None,</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random<sp/>initialization<sp/>will<sp/>be<sp/>applied<sp/>within<sp/>bounds<sp/>if<sp/>specified.</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>(Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]):<sp/>Initial</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>standard<sp/>deviation<sp/>for<sp/>parameter<sp/>sampling.<sp/>Defaults<sp/>to<sp/>0.1.<sp/>Can<sp/>be</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>scalar,<sp/>array,<sp/>or<sp/>callable<sp/>returning<sp/>an<sp/>array.</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(Optional[int]):<sp/>Population<sp/>size<sp/>for<sp/>sampling.<sp/>Defaults<sp/>to<sp/>32.</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>not<sp/>specified<sp/>or<sp/>odd,<sp/>it<sp/>will<sp/>be<sp/>adjusted<sp/>to<sp/>the<sp/>next<sp/>even<sp/>number.</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>(Optional[int]):<sp/>Maximum<sp/>number<sp/>of<sp/>function<sp/>evaluations</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>perform.<sp/>Defaults<sp/>to<sp/>100000.</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers<sp/>(Optional[int]):<sp/>Number<sp/>of<sp/>parallel<sp/>workers<sp/>to<sp/>use<sp/>for<sp/>evaluation.</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defaults<sp/>to<sp/>None<sp/>(no<sp/>parallelism).</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness<sp/>(Optional[float]):<sp/>Value<sp/>of<sp/>fitness<sp/>to<sp/>stop<sp/>early.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objective<sp/>reaches<sp/>this<sp/>value,<sp/>the<sp/>algorithm<sp/>will<sp/>terminate<sp/>early.</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defaults<sp/>to<sp/>-infinity.</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg<sp/>(Optional[Generator]):<sp/>Random<sp/>number<sp/>generator<sp/>to<sp/>use<sp/>during</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimization.<sp/>Defaults<sp/>to<sp/>Generator(PCG64DXSM()).</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid<sp/>(Optional[int]):<sp/>Unique<sp/>identifier<sp/>for<sp/>the<sp/>run.<sp/>Useful<sp/>for</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distinguishing<sp/>runs<sp/>in<sp/>logging<sp/>or<sp/>debugging.</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize<sp/>(Optional[bool]):<sp/>Whether<sp/>to<sp/>normalize<sp/>the<sp/>input<sp/>parameters<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer.<sp/>Defaults<sp/>to<sp/>True.</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lr_decay_steps<sp/>(Optional[int]):<sp/>Number<sp/>of<sp/>steps<sp/>for<sp/>learning<sp/>rate<sp/>decay.</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defaults<sp/>to<sp/>1000.</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_ranking<sp/>(Optional[bool]):<sp/>Whether<sp/>to<sp/>use<sp/>ranking<sp/>over<sp/>raw<sp/>fitness</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>calculating<sp/>updates.<sp/>Defaults<sp/>to<sp/>True.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center_learning_rate<sp/>(Optional[float]):<sp/>Learning<sp/>rate<sp/>used<sp/>to<sp/>update</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>center.<sp/>Defaults<sp/>to<sp/>0.15.</highlight></codeline>
<codeline lineno="109" refid="namespacefcmaes_1_1pgpecpp_1ac26ca85a239168914a5e741b112af39f" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdev_learning_rate<sp/>(Optional[float]):<sp/>Learning<sp/>rate<sp/>used<sp/>to<sp/>update<sp/>the</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>standard<sp/>deviation.<sp/>Defaults<sp/>to<sp/>0.1.</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdev_max_change<sp/>(Optional[float]):<sp/>Maximum<sp/>allowed<sp/>change<sp/>for<sp/>standard</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviation<sp/>updates.<sp/>Defaults<sp/>to<sp/>0.2.</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1<sp/>(Optional[float]):<sp/>Exponential<sp/>moving<sp/>average<sp/>factor<sp/>for<sp/>the<sp/>first</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moment<sp/>estimate<sp/>during<sp/>adaptive<sp/>updates.<sp/>Defaults<sp/>to<sp/>0.9.</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2<sp/>(Optional[float]):<sp/>Exponential<sp/>moving<sp/>average<sp/>factor<sp/>for<sp/>the<sp/>second</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moment<sp/>estimate<sp/>during<sp/>adaptive<sp/>updates.<sp/>Defaults<sp/>to<sp/>0.999.</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps<sp/>(Optional[float]):<sp/>Small<sp/>term<sp/>added<sp/>to<sp/>avoid<sp/>division<sp/>by<sp/>zero<sp/>in</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adaptive<sp/>algorithms.<sp/>Defaults<sp/>to<sp/>1e-8.</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decay_coef<sp/>(Optional[float]):<sp/>Coefficient<sp/>that<sp/>controls<sp/>decay<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learning<sp/>rate<sp/>updates.<sp/>Defaults<sp/>to<sp/>1.0.</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizeResult:<sp/>An<sp/>object<sp/>containing<sp/>optimization<sp/>results,<sp/>including</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>best<sp/>parameters<sp/>found<sp/>(`x`),<sp/>the<sp/>objective<sp/>value<sp/>(`fun`)<sp/>at</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>those<sp/>parameters,<sp/>the<sp/>number<sp/>of<sp/>function<sp/>evaluations<sp/>(`nfev`),<sp/>the</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>iterations<sp/>(`nit`),<sp/>the<sp/>stopping<sp/>status<sp/>as<sp/>an<sp/>integer<sp/>code</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(`status`),<sp/>and<sp/>a<sp/>boolean<sp/>success<sp/>flag<sp/>(`success`).</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>lower,<sp/>upper,<sp/>guess<sp/>=<sp/>_check_bounds(bounds,<sp/>x0,<sp/>rg)<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>guess.size<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>popsize<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>32<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>popsize<sp/>%<sp/>2<sp/>==<sp/>1:<sp/></highlight><highlight class="comment">#<sp/>requires<sp/>even<sp/>popsize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lower<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>[0]*dim</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>[0]*dim</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>callable(input_sigma):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma=input_sigma()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.ndim(input_sigma)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>=<sp/>[input_sigma]<sp/>*<sp/>dim<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>parfun<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(workers<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>workers<sp/>&lt;=<sp/>1)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="classfcmaes_1_1evaluator_1_1parallel" kindref="compound">parallel</ref>(fun,<sp/>workers)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>dim<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>c_callback_par<sp/>=<sp/>call_back_par(<ref refid="classfcmaes_1_1evaluator_1_1callback__par" kindref="compound">callback_par</ref>(fun,<sp/>parfun))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(dim+4)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1pgpecpp_1af8da1cbe352bc1a796e5f15d878647f2" kindref="member">optimizePGPE_C</ref>(runid,<sp/>c_callback_par,<sp/>dim,<sp/>array_type(*guess),<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type(*lower),<sp/>array_type(*upper),<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type(*input_sigma),<sp/>max_evaluations,<sp/>stop_fitness,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize,<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1)),<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lr_decay_steps,<sp/>use_ranking,<sp/>center_learning_rate,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdev_learning_rate,<sp/>stdev_max_change,<sp/>b1,<sp/>b2,<sp/>eps,<sp/>decay_coef,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize,<sp/>res_p)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>res[:dim]</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>res[dim]</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>int(res[dim+1])</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>int(res[dim+2])</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>int(res[dim+3])</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=x,<sp/>fun=val,<sp/>nfev=evals,<sp/>nit=iterations,<sp/>status=stop,<sp/>success=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>fun=sys.float_info.max,<sp/>nfev=0,<sp/>nit=0,<sp/>status=-1,<sp/>success=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>parfun<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parfun.stop()</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c" kindref="compound">PGPE_C</ref>:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Optimization<sp/>class<sp/>using<sp/>a<sp/>C++<sp/>CR-FM-NES<sp/>implementation<sp/>via<sp/>`ctypes`.</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Minimizes<sp/>a<sp/>scalar<sp/>objective<sp/>function<sp/>of<sp/>one<sp/>or<sp/>more<sp/>variables<sp/>using</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a<sp/>population-based<sp/>evolutionary<sp/>strategy.<sp/>This<sp/>class<sp/>allows<sp/>interaction</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>with<sp/>the<sp/>underlying<sp/>C++<sp/>implementation<sp/>to<sp/>run<sp/>optimization<sp/>tasks<sp/>with</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>high<sp/>performance<sp/>and<sp/>flexibility.</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>(ctypes.c_void_p):<sp/>Pointer<sp/>to<sp/>the<sp/>C++<sp/>PGPE<sp/>object.</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(int):<sp/>Population<sp/>size<sp/>used<sp/>for<sp/>evolutionary<sp/>optimization.</highlight></codeline>
<codeline lineno="180" refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>Dimensionality<sp/>of<sp/>the<sp/>problem&apos;s<sp/>search<sp/>space.</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a966fbd9f17de3cc069973c3b9d01915c" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim:<sp/>int,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional[Bounds]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0:<sp/>Optional[ArrayLike]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma:<sp/>Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]<sp/>=<sp/>0.1,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize:<sp/>Optional[int]<sp/>=<sp/>32,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg:<sp/>Optional[Generator]<sp/>=<sp/>Generator(PCG64DXSM()),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid:<sp/>Optional[int]<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize:<sp/>Optional[bool]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lr_decay_steps:<sp/>Optional[int]<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_ranking:<sp/>Optional[bool]<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center_learning_rate:<sp/>Optional[float]<sp/>=<sp/>0.15,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdev_learning_rate:<sp/>Optional[float]<sp/>=<sp/>0.1,<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdev_max_change:<sp/>Optional[float]<sp/>=<sp/>0.2,<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1:<sp/>Optional[float]<sp/>=<sp/>0.9,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2:<sp/>Optional[float]<sp/>=<sp/>0.999,<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps:<sp/>Optional[float]<sp/>=<sp/>1e-8,<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decay_coef:<sp/>Optional[float]<sp/>=<sp/>1.0,<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>class<sp/>with<sp/>parameters<sp/>for<sp/>a<sp/>PGPE<sp/>(Policy<sp/>Gradients</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>Parameter-based<sp/>Exploration)<sp/>optimization<sp/>algorithm.</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>constructor<sp/>sets<sp/>various<sp/>hyperparameters<sp/>and<sp/>configuration<sp/>options<sp/>for</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>running<sp/>the<sp/>algorithm.<sp/>These<sp/>include<sp/>the<sp/>problem<sp/>dimension,<sp/>bounds,<sp/>initial</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess,<sp/>population<sp/>size,<sp/>learning<sp/>rates,<sp/>and<sp/>other<sp/>factors<sp/>that<sp/>control<sp/>the</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimization<sp/>process.</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>Dimensionality<sp/>of<sp/>the<sp/>optimization<sp/>problem.</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>(Optional[Bounds]):<sp/>Input<sp/>bounds<sp/>defining<sp/>the<sp/>feasible<sp/>region.</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>(Optional[ArrayLike]):<sp/>Initial<sp/>guess<sp/>for<sp/>the<sp/>algorithm.</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>(Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]):<sp/>Initial<sp/>standard</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviation<sp/>for<sp/>exploration,<sp/>either<sp/>as<sp/>a<sp/>scalar<sp/>or<sp/>array<sp/>or<sp/>function<sp/>returning</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>value.</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(Optional[int]):<sp/>Size<sp/>of<sp/>the<sp/>population.<sp/>Ensures<sp/>even<sp/>number<sp/>if<sp/>not</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>already.</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg<sp/>(Optional[Generator]):<sp/>Random<sp/>number<sp/>generator<sp/>to<sp/>control<sp/>randomization<sp/>in</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>algorithm.<sp/>Defaults<sp/>to<sp/>a<sp/>PCG64DXSM<sp/>generator.</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid<sp/>(Optional[int]):<sp/>Unique<sp/>identifier<sp/>for<sp/>the<sp/>optimization<sp/>run.</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize<sp/>(Optional[bool]):<sp/>Whether<sp/>to<sp/>normalize<sp/>the<sp/>input<sp/>bounds.</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lr_decay_steps<sp/>(Optional[int]):<sp/>Number<sp/>of<sp/>iterations<sp/>over<sp/>which<sp/>the<sp/>learning</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>decays.</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_ranking<sp/>(Optional[bool]):<sp/>If<sp/>True,<sp/>enables<sp/>ranking-based<sp/>updates.</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center_learning_rate<sp/>(Optional[float]):<sp/>Learning<sp/>rate<sp/>for<sp/>the<sp/>mean<sp/>or<sp/>center</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdev_learning_rate<sp/>(Optional[float]):<sp/>Learning<sp/>rate<sp/>for<sp/>the<sp/>standard</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviation<sp/>of<sp/>the<sp/>search<sp/>distribution.</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdev_max_change<sp/>(Optional[float]):<sp/>Maximum<sp/>allowable<sp/>change<sp/>for<sp/>standard</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviation<sp/>in<sp/>an<sp/>iteration.</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1<sp/>(Optional[float]):<sp/>Exponential<sp/>decay<sp/>rate<sp/>for<sp/>first<sp/>moment<sp/>estimates<sp/>in</highlight></codeline>
<codeline lineno="234" refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a966fbd9f17de3cc069973c3b9d01915c" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adaptive<sp/>learning.</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2<sp/>(Optional[float]):<sp/>Exponential<sp/>decay<sp/>rate<sp/>for<sp/>second<sp/>moment<sp/>estimates<sp/>in</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adaptive<sp/>learning.</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps<sp/>(Optional[float]):<sp/>Small<sp/>constant<sp/>to<sp/>prevent<sp/>division<sp/>by<sp/>zero<sp/>in</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adaptive<sp/>learning.</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decay_coef<sp/>(Optional[float]):<sp/>Coefficient<sp/>controlling<sp/>overall<sp/>decay<sp/>in</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learning<sp/>adjustments.</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>Propagates<sp/>exceptions<sp/>encountered<sp/>during<sp/>the<sp/>initialization<sp/>of</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>algorithm<sp/>backend.</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower,<sp/>upper,<sp/>guess<sp/>=<sp/>_get_bounds(dim,<sp/>bounds,<sp/>x0,<sp/>rg)<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>popsize<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>32<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>popsize<sp/>%<sp/>2<sp/>==<sp/>1:<sp/></highlight><highlight class="comment">#<sp/>requires<sp/>even<sp/>popsize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lower<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>[0]*dim</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>[0]*dim</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>callable(input_sigma):</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma=input_sigma()</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.ndim(input_sigma)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>=<sp/>[input_sigma]<sp/>*<sp/>dim<sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>dim<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a9ffbedaabec9d62b8bd10edab6324c33" kindref="member">ptr</ref><sp/>=<sp/><ref refid="namespacefcmaes_1_1pgpecpp_1aee73bd986018e30ab0fef7ab6f5d8b18" kindref="member">initPGPE_C</ref>(runid,<sp/>dim,<sp/>array_type(*guess),<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type(*lower),<sp/>array_type(*upper),<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type(*input_sigma),<sp/>popsize,<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1)),</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lr_decay_steps,<sp/>use_ranking,<sp/>center_learning_rate,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdev_learning_rate,<sp/>stdev_max_change,<sp/>b1,<sp/>b2,<sp/>eps,<sp/>decay_coef,<sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a65ed94e32ef0d14d2e63d6db3df4ef34" kindref="member">popsize</ref><sp/>=<sp/>popsize</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2" kindref="member">dim</ref><sp/>=<sp/>dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269" refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a9ffbedaabec9d62b8bd10edab6324c33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a255b3fc3e61ebee7f65b20d63c6ba3d4" kindref="member">__del__</ref>(self):</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="275" refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a65ed94e32ef0d14d2e63d6db3df4ef34" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles<sp/>the<sp/>destruction<sp/>of<sp/>the<sp/>PGPE_C<sp/>object<sp/>to<sp/>manage<sp/>resources<sp/>effectively.</highlight></codeline>
<codeline lineno="276" refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2" refkind="member"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>is<sp/>invoked<sp/>automatically<sp/>when<sp/>the<sp/>instance<sp/>is<sp/>about<sp/>to<sp/>be<sp/>destroyed,</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowing<sp/>for<sp/>proper<sp/>cleanup<sp/>of<sp/>associated<sp/>resources.</highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>None</highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1pgpecpp_1a03df7e468c547553701bf0f0dc702b4f" kindref="member">destroyPGPE_C</ref>(self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a9ffbedaabec9d62b8bd10edab6324c33" kindref="member">ptr</ref>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" kindref="member">ask</ref>(self)<sp/>-&gt;<sp/>np.array:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generates<sp/>and<sp/>returns<sp/>a<sp/>population<sp/>of<sp/>samples<sp/>based<sp/>on<sp/>the<sp/>current<sp/>state<sp/>of<sp/>the<sp/>algorithm.</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>interacts<sp/>with<sp/>the<sp/>C<sp/>library<sp/>function<sp/>`askPGPE_C`<sp/>to<sp/>generate<sp/>a<sp/>new<sp/>set<sp/>of<sp/>samples</highlight></codeline>
<codeline lineno="290" refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a255b3fc3e61ebee7f65b20d63c6ba3d4" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>population.<sp/>The<sp/>returned<sp/>samples<sp/>are<sp/>organized<sp/>into<sp/>a<sp/>2D<sp/>NumPy<sp/>array.</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array:<sp/>A<sp/>2D<sp/>array<sp/>where<sp/>each<sp/>row<sp/>corresponds<sp/>to<sp/>a<sp/>sample<sp/>in<sp/>the<sp/>population.</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>an<sp/>error<sp/>occurs<sp/>during<sp/>the<sp/>population<sp/>generation<sp/>process<sp/>with<sp/>specific<sp/>details</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printed<sp/>to<sp/>the<sp/>console.</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lamb<sp/>=<sp/>self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a65ed94e32ef0d14d2e63d6db3df4ef34" kindref="member">popsize</ref></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2" kindref="member">dim</ref></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(lamb*n)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1pgpecpp_1a89e498c3d796b4113e670e638aa85163" kindref="member">askPGPE_C</ref>(self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a9ffbedaabec9d62b8bd10edab6324c33" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="306" refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>np.empty((lamb,<sp/>n))</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(lamb):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p,:]<sp/>=<sp/>res[p*n<sp/>:<sp/>(p+1)*n]</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xs</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a3d030c90af2ea816f60372c4f0bb98d5" kindref="member">tell</ref>(self,<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys:<sp/>np.ndarray)<sp/>-&gt;<sp/>int:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Executes<sp/>the<sp/>PGPE<sp/>(Policy<sp/>Gradient<sp/>with<sp/>Parameter-based<sp/>Exploration)<sp/>algorithm<sp/>by<sp/>interfacing</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>native<sp/>code<sp/>through<sp/>ctypes.<sp/>The<sp/>method<sp/>passes<sp/>the<sp/>given<sp/>numpy<sp/>array<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>underlying<sp/>PGPE<sp/>implementation.</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>(np.ndarray):<sp/>A<sp/>1D<sp/>numpy<sp/>array<sp/>containing<sp/>the<sp/>parameters<sp/>to<sp/>be<sp/>used<sp/>by<sp/>the<sp/>PGPE<sp/>algorithm.</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int:<sp/>The<sp/>result<sp/>returned<sp/>by<sp/>the<sp/>PGPE<sp/>native<sp/>implementation.<sp/>Returns<sp/>-1<sp/>in<sp/>case<sp/>of<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type_ys<sp/>=<sp/>ct.c_double<sp/>*<sp/>len(ys)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1pgpecpp_1a83964137647622f1ea94a90106b7fc85" kindref="member">tellPGPE_C</ref>(self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a9ffbedaabec9d62b8bd10edab6324c33" kindref="member">ptr</ref>,<sp/>array_type_ys(*ys))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="333" refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a3d030c90af2ea816f60372c4f0bb98d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" kindref="member">population</ref>(self)<sp/>-&gt;<sp/>np.array:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Retrieves<sp/>the<sp/>population<sp/>from<sp/>a<sp/>population<sp/>PGPE<sp/>algorithm,<sp/>processes<sp/>it,<sp/>and<sp/>returns<sp/>it</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>a<sp/>NumPy<sp/>array.<sp/>This<sp/>method<sp/>interacts<sp/>with<sp/>external<sp/>C<sp/>code<sp/>for<sp/>handling<sp/>population</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>and<sp/>converts<sp/>the<sp/>resulting<sp/>data<sp/>into<sp/>a<sp/>structured<sp/>array.</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array:<sp/>A<sp/>NumPy<sp/>array<sp/>containing<sp/>the<sp/>processed<sp/>population<sp/>data,<sp/>where<sp/>each</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry<sp/>corresponds<sp/>to<sp/>a<sp/>subset<sp/>of<sp/>individuals<sp/>in<sp/>the<sp/>population<sp/>as<sp/>defined</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>`popsize`<sp/>and<sp/>`dim`<sp/>attributes.</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>an<sp/>error<sp/>occurs<sp/>during<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>underlying</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>population<sp/>retrieval<sp/>process<sp/>or<sp/>data<sp/>processing.</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lamb<sp/>=<sp/>self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a65ed94e32ef0d14d2e63d6db3df4ef34" kindref="member">popsize</ref></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2" kindref="member">dim</ref></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(lamb*n)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1pgpecpp_1a3c39b0fa9cb8f471f226bc6916bf3a71" kindref="member">populationPGPE_C</ref>(self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a9ffbedaabec9d62b8bd10edab6324c33" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>np.array(lamb,<sp/>n)</highlight></codeline>
<codeline lineno="357" refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(lamb):</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p]<sp/>=<sp/>res[p*n<sp/>:<sp/>(p+1)*n]</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xs</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e" kindref="member">result</ref>(self)<sp/>-&gt;<sp/>OptimizeResult:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fetches<sp/>the<sp/>optimization<sp/>result.</highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>method<sp/>retrieves<sp/>the<sp/>solution<sp/>obtained<sp/>from<sp/>the<sp/>optimization<sp/>procedure</highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>a<sp/>C-based<sp/>backend.<sp/>The<sp/>result<sp/>includes<sp/>the<sp/>optimized<sp/>parameters,</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objective<sp/>function<sp/>value<sp/>at<sp/>the<sp/>solution,<sp/>the<sp/>number<sp/>of<sp/>function</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evaluations,<sp/>the<sp/>number<sp/>of<sp/>iterations,<sp/>and<sp/>the<sp/>exit<sp/>status<sp/>of<sp/>the<sp/>optimizer.</highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>any<sp/>exception<sp/>during<sp/>the<sp/>retrieval<sp/>process,<sp/>a<sp/>default<sp/>result</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indicating<sp/>failure<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizeResult:<sp/>An<sp/>object<sp/>containing<sp/>the<sp/>optimization<sp/>result.<sp/>It<sp/>includes</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>following<sp/>fields:</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>x:<sp/>ndarray<sp/>of<sp/>the<sp/>optimized<sp/>parameters.</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>fun:<sp/>float<sp/>value<sp/>of<sp/>the<sp/>objective<sp/>function<sp/>at<sp/>the<sp/>solution.</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>nfev:<sp/>int<sp/>count<sp/>of<sp/>function<sp/>evaluations.</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>nit:<sp/>int<sp/>count<sp/>of<sp/>iterations<sp/>performed.</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>status:<sp/>int<sp/>exit<sp/>status<sp/>of<sp/>the<sp/>optimization.</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>success:<sp/>bool<sp/>indicating<sp/>the<sp/>success<sp/>(True)<sp/>or<sp/>failure<sp/>(False)<sp/>of<sp/>the<sp/>optimization.</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2" kindref="member">dim</ref>+4)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1pgpecpp_1a550fd833f381cfb0e882cdccfe52ef2a" kindref="member">resultPGPE_C</ref>(self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a9ffbedaabec9d62b8bd10edab6324c33" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>res[:self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2" kindref="member">dim</ref>]</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>res[self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2" kindref="member">dim</ref>]</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2" kindref="member">dim</ref>+1])</highlight></codeline>
<codeline lineno="393" refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2" kindref="member">dim</ref>+2])</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ac4aea22f09cd578e95e7e4b7eeca12e2" kindref="member">dim</ref>+3])</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=x,<sp/>fun=val,<sp/>nfev=evals,<sp/>nit=iterations,<sp/>status=stop,<sp/>success=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>fun=sys.float_info.max,<sp/>nfev=0,<sp/>nit=0,<sp/>status=-1,<sp/>success=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>libcmalib<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizePGPE_C<sp/>=<sp/>libcmalib.optimizePGPE_C</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizePGPE_C.argtypes<sp/>=<sp/>[ct.c_long,<sp/>call_back_par,<sp/>ct.c_int,<sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.c_int,<sp/>ct.c_double,<sp/>ct.c_int,<sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_long,<sp/>ct.c_int,<sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_bool,<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double,<sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double,<sp/></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_bool,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="410" refid="namespacefcmaes_1_1pgpecpp_1af8da1cbe352bc1a796e5f15d878647f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411" refid="namespacefcmaes_1_1pgpecpp_1af356a4b052dd645eb6858407c6c30cca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>initPGPE_C<sp/>=<sp/>libcmalib.initPGPE_C</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>initPGPE_C.argtypes<sp/>=<sp/>[ct.c_long,<sp/>ct.c_int,<sp/>ct.POINTER(ct.c_double),<sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_int,<sp/>ct.c_long,<sp/>ct.c_int,<sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_bool,<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double,<sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_double,<sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_bool]</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="419" refid="namespacefcmaes_1_1pgpecpp_1aee73bd986018e30ab0fef7ab6f5d8b18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>initPGPE_C.restype<sp/>=<sp/>ct.c_void_p<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>destroyPGPE_C<sp/>=<sp/>libcmalib.destroyPGPE_C</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>destroyPGPE_C.argtypes<sp/>=<sp/>[ct.c_void_p]</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>askPGPE_C<sp/>=<sp/>libcmalib.askPGPE_C</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>askPGPE_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427" refid="namespacefcmaes_1_1pgpecpp_1a5c33aa0b6c6e1fb0369e7516eacb5649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>tellPGPE_C<sp/>=<sp/>libcmalib.tellPGPE_C</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>tellPGPE_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="429" refid="namespacefcmaes_1_1pgpecpp_1a03df7e468c547553701bf0f0dc702b4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>tellPGPE_C.restype<sp/>=<sp/>ct.c_int</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>populationPGPE_C<sp/>=<sp/>libcmalib.populationPGPE_C</highlight></codeline>
<codeline lineno="432" refid="namespacefcmaes_1_1pgpecpp_1a89e498c3d796b4113e670e638aa85163" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>populationPGPE_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>resultPGPE_C<sp/>=<sp/>libcmalib.resultPGPE_C</highlight></codeline>
<codeline lineno="435" refid="namespacefcmaes_1_1pgpecpp_1a83964137647622f1ea94a90106b7fc85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>resultPGPE_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
    </programlisting>
    <location file="fcmaes/pgpecpp.py"/>
  </compounddef>
</doxygen>

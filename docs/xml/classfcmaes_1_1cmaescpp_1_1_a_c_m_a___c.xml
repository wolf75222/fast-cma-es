<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::cmaescpp::ACMA_C</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.cmaescpp.ACMA_C::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <qualifiedname>fcmaes.cmaescpp.ACMA_C.ptr</qualifiedname>
        <initializer>=  <ref refid="namespacefcmaes_1_1cmaescpp_1a5f13d5d8f530e90f5b93f5bacf82dfef" kindref="member">initACMA_C</ref>(runid,
                <ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref>, array_type(*guess),
                None if lower is None else array_type(*lower),
                None if upper is None else array_type(*upper),
                array_type(*input_sigma), max_evaluations, stop_fitness, stop_hist, mu,
                <ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" kindref="member">popsize</ref>, accuracy, int(rg.uniform(0, 2**32 - 1)),
                normalize, delayed_update, -1 if update_gap is None else update_gap)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="231" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="231" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ae55112db9f934ddf1d3d01a09b812adb" compoundref="cmaescpp_8py" startline="256" endline="258">fcmaes.cmaescpp.ACMA_C.__del__</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a8108ee1a2f3dd941e1105a3491269572" compoundref="crfmnescpp_8py" startline="237" endline="239">fcmaes.crfmnescpp.CRFMNES_C.__del__</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ab22d38f2f4822b861fa7217725d8db1a" compoundref="decpp_8py" startline="310" endline="312">fcmaes.decpp.DE_C.__del__</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a580bb3d8baef2a338186cac64df0ea45" compoundref="modecpp_8py" startline="423" endline="425">fcmaes.modecpp.MODE_C.__del__</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a255b3fc3e61ebee7f65b20d63c6ba3d4" compoundref="pgpecpp_8py" startline="290" endline="292">fcmaes.pgpecpp.PGPE_C.__del__</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ad7ca82faa65b471b66977e2f18676025" compoundref="cmaescpp_8py" startline="277" endline="291">fcmaes.cmaescpp.ACMA_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" compoundref="crfmnescpp_8py" startline="253" endline="267">fcmaes.crfmnescpp.CRFMNES_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ac938731f80bce720692af9b7b84e41d0" compoundref="decpp_8py" startline="329" endline="343">fcmaes.decpp.DE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ae42863ed67ebbb8f39a488a9caecebc1" compoundref="modecpp_8py" startline="471" endline="485">fcmaes.modecpp.MODE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a348ca090a0116efc16fce6a4bd180871" compoundref="cmaescpp_8py" startline="361" endline="375">fcmaes.cmaescpp.ACMA_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" compoundref="crfmnescpp_8py" startline="307" endline="321">fcmaes.crfmnescpp.CRFMNES_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ae6321ea6313c6ef9bf44d492aaa619f8" compoundref="decpp_8py" startline="385" endline="399">fcmaes.decpp.DE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3433826fba507128212dc6dd455a7227" compoundref="modecpp_8py" startline="569" endline="583">fcmaes.modecpp.MODE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1aaf2e40c524b9a8b328decb0b798bd695" compoundref="cmaescpp_8py" startline="390" endline="404">fcmaes.cmaescpp.ACMA_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" compoundref="crfmnescpp_8py" startline="339" endline="353">fcmaes.crfmnescpp.CRFMNES_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1a2f794b6d8709f5b14d5f56695bb8d8ff" compoundref="decpp_8py" startline="416" endline="430">fcmaes.decpp.DE_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e" compoundref="pgpecpp_8py" startline="393" endline="407">fcmaes.pgpecpp.PGPE_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a4677822852841d0e52baa48fa91cbcb8" compoundref="cmaescpp_8py" startline="310" endline="319">fcmaes.cmaescpp.ACMA_C.tell</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a30327c6b3f1ecc4add777f4a74e83533" compoundref="crfmnescpp_8py" startline="282" endline="289">fcmaes.crfmnescpp.CRFMNES_C.tell</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad53cc4b5553a819096b47115e1f49b42" compoundref="decpp_8py" startline="360" endline="367">fcmaes.decpp.DE_C.tell</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1adff2bdf2d7fa9dd5d8aabf4962471e07" compoundref="modecpp_8py" startline="505" endline="519">fcmaes.modecpp.MODE_C.tell</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a3d030c90af2ea816f60372c4f0bb98d5" compoundref="pgpecpp_8py" startline="334" endline="342">fcmaes.pgpecpp.PGPE_C.tell</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a92426eb6d5a2f38b3a1218fd9479a1bc" compoundref="modecpp_8py" startline="542" endline="550">fcmaes.modecpp.MODE_C.tell_switch</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a344851d94557ce52f99da907ee61590d" compoundref="cmaescpp_8py" startline="336" endline="345">fcmaes.cmaescpp.ACMA_C.tell_x_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.cmaescpp.ACMA_C::popsize</definition>
        <argsstring></argsstring>
        <name>popsize</name>
        <qualifiedname>fcmaes.cmaescpp.ACMA_C.popsize</qualifiedname>
        <initializer>=  popsize</initializer>
        <briefdescription>
<para>CMA-ES population size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="238" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="238" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a4e75c17eaa625b8be5fa0ccb0d64bd05" compoundref="mode_8py" startline="754" endline="786">fcmaes.mode.MODE._next_x</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ad7ca82faa65b471b66977e2f18676025" compoundref="cmaescpp_8py" startline="277" endline="291">fcmaes.cmaescpp.ACMA_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" compoundref="crfmnescpp_8py" startline="253" endline="267">fcmaes.crfmnescpp.CRFMNES_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1acc2a7649411442c90167d856c673ccb4" compoundref="de_8py" startline="343" endline="361">fcmaes.de.DE.ask</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ac938731f80bce720692af9b7b84e41d0" compoundref="decpp_8py" startline="329" endline="343">fcmaes.decpp.DE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a1893dc839f866ab4d22f7fd13489bf73" compoundref="mode_8py" startline="559" endline="563">fcmaes.mode.MODE.ask</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ae42863ed67ebbb8f39a488a9caecebc1" compoundref="modecpp_8py" startline="471" endline="485">fcmaes.modecpp.MODE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1a6e647b4dbacab60b482242c80b0a8582" compoundref="de_8py" startline="440" endline="449">fcmaes.de.DE.ask_one</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" compoundref="benchmark__gtop__pygmo_8py" startline="103" endline="118">examples.benchmark_gtop_pygmo.Cma_pyg.minimize</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" compoundref="benchmark__gtop__pygmo_8py" startline="127" endline="137">examples.benchmark_gtop_pygmo.De_pyg.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a86222ef0aed5dce4b0f3aed01c9f513a" compoundref="optimizer_8py" startline="1647" endline="1679">fcmaes.optimizer.Cma_lw.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a4dbf460c986845f8121946c4252c2fa0" compoundref="optimizer_8py" startline="1520" endline="1552">fcmaes.optimizer.Cma_orig.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_crfmnes_1aeaf53b0b1cef69245496384c9c5569fb" compoundref="optimizer_8py" startline="939" endline="949">fcmaes.optimizer.Crfmnes.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a28a1d5e195fa924386bd76c29a9f682d" compoundref="optimizer_8py" startline="1044" endline="1054">fcmaes.optimizer.Crfmnes_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388" compoundref="optimizer_8py" startline="2418" endline="2431">fcmaes.optimizer.De_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" compoundref="optimizer_8py" startline="2858" endline="2864">fcmaes.optimizer.Differential_evolution.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a15393a3e9dbb73be5cf8e5c9cc6f8c2d" compoundref="optimizer_8py" startline="1156" endline="1166">fcmaes.optimizer.Pgpe_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a6f479d982825465b97c89e528351bf36" compoundref="mode_8py" startline="667" endline="677">fcmaes.mode.MODE.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a672b403a7e745d9e69532454f32d2b62" compoundref="modecpp_8py" startline="635" endline="646">fcmaes.modecpp.MODE_C.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a3b3a358c6fded3c638706495c88eff1a" compoundref="mode_8py" startline="636" endline="645">fcmaes.mode.MODE.minimize_ser</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1aa4a7a3e4f9a3fc84dc37faf820025306" compoundref="modecpp_8py" startline="602" endline="611">fcmaes.modecpp.MODE_C.minimize_ser</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a29791dbcb2e070361529475630de2052" compoundref="mode_8py" startline="694" endline="731">fcmaes.mode.MODE.pop_update</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a348ca090a0116efc16fce6a4bd180871" compoundref="cmaescpp_8py" startline="361" endline="375">fcmaes.cmaescpp.ACMA_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" compoundref="crfmnescpp_8py" startline="307" endline="321">fcmaes.crfmnescpp.CRFMNES_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ae6321ea6313c6ef9bf44d492aaa619f8" compoundref="decpp_8py" startline="385" endline="399">fcmaes.decpp.DE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3433826fba507128212dc6dd455a7227" compoundref="modecpp_8py" startline="569" endline="583">fcmaes.modecpp.MODE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1de_1_1_d_e_1ab58df13ca3623bcce727576e5d354bbc" compoundref="de_8py" startline="420" endline="424">fcmaes.de.DE.result</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1af1ac6ae50db24a626f6649175bfecf96" compoundref="mode_8py" startline="537" endline="548">fcmaes.mode.MODE.set_guess</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3267cafa8c068a367179034c3f5a562d" compoundref="modecpp_8py" startline="446" endline="457">fcmaes.modecpp.MODE_C.set_guess</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a8b928c29cf646933a1821566ec18d73a" compoundref="mode_8py" startline="576" endline="583">fcmaes.mode.MODE.tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.cmaescpp.ACMA_C::dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>fcmaes.cmaescpp.ACMA_C.dim</qualifiedname>
        <initializer>=  dim</initializer>
        <briefdescription>
<para>Dimensionality of the optimization problem. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the object with parameters for the Adaptive Covariance Matrix Evolution Strategy (A-CMA). <verbatim>   This initialization method configures the bounds, population size, adaptive mechanisms,
   termination criteria, and various other parameters essential for the A-CMA optimization process.
   The initialization sets up the internal configuration and prepares the underlying pointer
   to interface with the A-CMA C backend.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimensionality of the problem. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The boundary constraints for each dimension. It can be None if no bounds are specified. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial guess or starting point for the optimizer. Can be None if a default starting point is desired. input_sigma (Optional[Union[float, ArrayLike, Callable]]): Initial step size for the optimizer. It can be a float, an array of floats (one per dimension), or a callable returning a float. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Population size for the optimization process. Defaults to 31. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of objective function evaluations allowed for the optimization process. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>Accuracy level for convergence. A smaller value indicates stricter convergence criteria. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>The fitness value at which the optimization process should stop. Defaults to negative infinity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_hist</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of historical steps to consider for stagnation checks. Defaults <programlisting><codeline><highlight class="normal">to<sp/>-1.</highlight></codeline>
</programlisting> rg (Optional[Generator]): Random number generator to use for sampling. Defaults to a PCG64DXSM-based </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generator.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runid</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique identifier for the optimization run. Useful for debugging or differentiating among runs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to normalize the input coordinates. Defaults to True. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delayed_update</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable or disable delayed covariance matrix updates for computational efficiency. Defaults to True. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>update_gap</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of iterations between updates to the covariance matrix. If None, updates are performed without a fixed gap.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>If there is an error during the initialization of the A-CMA C backend. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="239" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="239" bodyend="-1"/>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1a182cdb7a5c25015336faa57a9afebef6" compoundref="damp_8py" startline="67" endline="76">examples.damp.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__so_1a91b3f73bc6c6999748aaf8bfb94cdd39" compoundref="evaluator_8py" startline="795" endline="809">fcmaes.evaluator.callback_so.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ad7ca82faa65b471b66977e2f18676025" compoundref="cmaescpp_8py" startline="277" endline="291">fcmaes.cmaescpp.ACMA_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a70d038e8b7f0c094ef4eb618fffbb1ed" compoundref="crfmnescpp_8py" startline="253" endline="267">fcmaes.crfmnescpp.CRFMNES_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ac938731f80bce720692af9b7b84e41d0" compoundref="decpp_8py" startline="329" endline="343">fcmaes.decpp.DE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ae42863ed67ebbb8f39a488a9caecebc1" compoundref="modecpp_8py" startline="471" endline="485">fcmaes.modecpp.MODE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a4a9c0d92560064a154b7bbcf1d537480" compoundref="mapelites_8py" startline="1146" endline="1149">fcmaes.mapelites.Archive.get_stat</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a12befeeecf65003f61a073520070a4d7" compoundref="mapelites_8py" startline="882" endline="889">fcmaes.mapelites.Archive.get_x_stdev</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a168520639bb6a296a24f7f11226a233a" compoundref="anpcp_8py" startline="78" endline="98">anpcp.ANPCP.init_tsp</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a62da9c6f511c298d1ef06d6af7600196" compoundref="mapelites_8py" startline="707" endline="728">fcmaes.mapelites.Archive.load</referencedby>
        <referencedby refid="classexamples_1_1siemens_1_1_plant_1a1e32e624120cf855722e347ed941b77f" compoundref="siemens_8py" startline="108" endline="118">examples.siemens.Plant.next_product</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a96c79aee6dab29a25fd28b0b383f1916" compoundref="employee_8py" startline="241" endline="250">examples.employee.problem.optimize</referencedby>
        <referencedby refid="classexamples_1_1employee_1_1problem_1a451356183bd266ec5feb44a1b9cf92ef" compoundref="employee_8py" startline="251" endline="268">examples.employee.problem.optimize_mo</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a348ca090a0116efc16fce6a4bd180871" compoundref="cmaescpp_8py" startline="361" endline="375">fcmaes.cmaescpp.ACMA_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a47083f6baea2a536011cbb100e69f4d5" compoundref="crfmnescpp_8py" startline="307" endline="321">fcmaes.crfmnescpp.CRFMNES_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1ae6321ea6313c6ef9bf44d492aaa619f8" compoundref="decpp_8py" startline="385" endline="399">fcmaes.decpp.DE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3433826fba507128212dc6dd455a7227" compoundref="modecpp_8py" startline="569" endline="583">fcmaes.modecpp.MODE_C.population</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1af629821589f78858c6422998bcb02fe5" compoundref="damp_8py" startline="77" endline="90">examples.damp.fitness.qd_fit</referencedby>
        <referencedby refid="classanpcp_1_1_a_n_p_c_p_1a27cdaec6181e9866758aaf02adcd2943" compoundref="anpcp_8py" startline="99" endline="102">anpcp.ANPCP.random_x</referencedby>
        <referencedby refid="classanpcpc_1_1_a_n_p_c_p_c_1ac4f58722e70806a92094828b839f084e" compoundref="anpcpc_8py" startline="86" endline="89">anpcpc.ANPCPC.random_x</referencedby>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1aaf2e40c524b9a8b328decb0b798bd695" compoundref="cmaescpp_8py" startline="390" endline="404">fcmaes.cmaescpp.ACMA_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1a9dec09b9656f828fa32d78a409cb51d4" compoundref="crfmnescpp_8py" startline="339" endline="353">fcmaes.crfmnescpp.CRFMNES_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1decpp_1_1_d_e___c_1a2f794b6d8709f5b14d5f56695bb8d8ff" compoundref="decpp_8py" startline="416" endline="430">fcmaes.decpp.DE_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e" compoundref="pgpecpp_8py" startline="393" endline="407">fcmaes.pgpecpp.PGPE_C.result</referencedby>
        <referencedby refid="classfcmaes_1_1mapelites_1_1_archive_1a574aed6e61fc20fb94b479cb8fd5fc55" compoundref="mapelites_8py" startline="1175" endline="1178">fcmaes.mapelites.Archive.set_stat</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a30b1141e99acc21b94e2366bad21dc78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.cmaescpp.ACMA_C.__init__</definition>
        <argsstring>(self, dim, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.3, Optional[int] popsize=31, Optional[int] max_evaluations=100000, Optional[float] accuracy=1.0, Optional[float] stop_fitness=-np.inf, Optional[float] stop_hist=-1, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=True, Optional[bool] delayed_update=True, Optional[int] update_gap=None)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.cmaescpp.ACMA_C.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref></type>
          <defname>dim</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <array>[Bounds]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>x0</declname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional]</type>
          <declname>input_sigma</declname>
          <array>[Union[float, ArrayLike, Callable]</array>
          <defval>0.3</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <array>[int]</array>
          <defval>31</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <array>[int]</array>
          <defval>100000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>accuracy</declname>
          <array>[float]</array>
          <defval>1.0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_hist</declname>
          <array>[float]</array>
          <defval>-1</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>rg</declname>
          <array>[Generator]</array>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>runid</declname>
          <array>[int]</array>
          <defval>0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>normalize</declname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>delayed_update</declname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>update_gap</declname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="203" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="218" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ae55112db9f934ddf1d3d01a09b812adb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.cmaescpp.ACMA_C.__del__</definition>
        <argsstring>(self)</argsstring>
        <name>__del__</name>
        <qualifiedname>fcmaes.cmaescpp.ACMA_C.__del__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Deletes the instance and performs necessary cleanup. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This destructor method ensures that the resources allocated or managed by the
   class are properly released. It is automatically invoked when the object is
   no longer in use or explicitly deleted.


       Any exceptions that might be raised during the execution of the cleanup
       process are dependent on the underlying `destroyACMA_C` function.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="256" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="256" bodyend="258"/>
        <references refid="namespacefcmaes_1_1cmaescpp_1a19d6ee3b1a025b0c87e16121a77e8afa" compoundref="cmaescpp_8py" startline="422">fcmaes.cmaescpp.destroyACMA_C</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ad7ca82faa65b471b66977e2f18676025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>np.array</type>
        <definition> np.array fcmaes.cmaescpp.ACMA_C.ask</definition>
        <argsstring>(self)</argsstring>
        <name>ask</name>
        <qualifiedname>fcmaes.cmaescpp.ACMA_C.ask</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Generates and retrieves a population of candidate solutions. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method calls a low-level C function to generate new candidate solutions
   based on the current state of the optimization process. These solutions are
   returned as a numpy array. If an error occurs during the process, the method
   prints the exception and returns None.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>np A 2D array of generated candidate solutions with shape (popsize, dim), where <computeroutput>popsize</computeroutput> is the population size and <computeroutput>dim</computeroutput> is the dimensionality of each candidate solution. Returns None if an exception occurs.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Prints the exception message if an error occurs during the </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>process.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="277" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="277" bodyend="291"/>
        <references refid="namespacefcmaes_1_1cmaescpp_1a5d24fbafb1f6010caa637d9318fe88e2" compoundref="cmaescpp_8py" startline="425">fcmaes.cmaescpp.askACMA_C</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" compoundref="advretry_8py" startline="319">fcmaes.advretry.Store.dim</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268" compoundref="cmaes_8py" startline="216">fcmaes.cmaes.Cmaes.dim</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" compoundref="cmaescpp_8py" startline="239">fcmaes.cmaescpp.ACMA_C.dim</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df" compoundref="cmaes_8py" startline="223">fcmaes.cmaes.Cmaes.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" compoundref="cmaescpp_8py" startline="238">fcmaes.cmaescpp.ACMA_C.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a6f479d982825465b97c89e528351bf36" compoundref="mode_8py" startline="667" endline="677">fcmaes.mode.MODE.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a672b403a7e745d9e69532454f32d2b62" compoundref="modecpp_8py" startline="635" endline="646">fcmaes.modecpp.MODE_C.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a3b3a358c6fded3c638706495c88eff1a" compoundref="mode_8py" startline="636" endline="645">fcmaes.mode.MODE.minimize_ser</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1aa4a7a3e4f9a3fc84dc37faf820025306" compoundref="modecpp_8py" startline="602" endline="611">fcmaes.modecpp.MODE_C.minimize_ser</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a4677822852841d0e52baa48fa91cbcb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition> int fcmaes.cmaescpp.ACMA_C.tell</definition>
        <argsstring>(self, np.ndarray ys, Optional[np.ndarray] xs=None)</argsstring>
        <name>tell</name>
        <qualifiedname>fcmaes.cmaescpp.ACMA_C.tell</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>np.ndarray</type>
          <declname>ys</declname>
        </param>
        <param>
          <type>Optional</type>
          <declname>xs</declname>
          <array>[np.ndarray]</array>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Provides functionality to handle processed arrays and manage operations using the given inputs. </para>
        </briefdescription>
        <detaileddescription>
<para>It determines the execution path based on the presence of optional parameters and interacts with external components.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ys</parametername>
</parameternamelist>
<parameterdescription>
<para>A numpy array with processed data that serves as the primary input for internal operations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional numpy array that, if provided, modifies the internal operation and enables additional functionality.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>int Represents the status or result of the operation. A successful execution returns a non-negative integer, whereas a failure or exception may result in a negative value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="308" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="310" bodyend="319"/>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a344851d94557ce52f99da907ee61590d" compoundref="cmaescpp_8py" startline="336" endline="345">fcmaes.cmaescpp.ACMA_C.tell_x_</references>
        <references refid="namespacefcmaes_1_1cmaescpp_1ae19b39d0288c14daa4d7db903c4285d6" compoundref="cmaescpp_8py" startline="428">fcmaes.cmaescpp.tellACMA_C</references>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a6f479d982825465b97c89e528351bf36" compoundref="mode_8py" startline="667" endline="677">fcmaes.mode.MODE.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a672b403a7e745d9e69532454f32d2b62" compoundref="modecpp_8py" startline="635" endline="646">fcmaes.modecpp.MODE_C.minimize_par</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a3b3a358c6fded3c638706495c88eff1a" compoundref="mode_8py" startline="636" endline="645">fcmaes.mode.MODE.minimize_ser</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1aa4a7a3e4f9a3fc84dc37faf820025306" compoundref="modecpp_8py" startline="602" endline="611">fcmaes.modecpp.MODE_C.minimize_ser</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1af1ac6ae50db24a626f6649175bfecf96" compoundref="mode_8py" startline="537" endline="548">fcmaes.mode.MODE.set_guess</referencedby>
        <referencedby refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1a3267cafa8c068a367179034c3f5a562d" compoundref="modecpp_8py" startline="446" endline="457">fcmaes.modecpp.MODE_C.set_guess</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a344851d94557ce52f99da907ee61590d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.cmaescpp.ACMA_C.tell_x_</definition>
        <argsstring>(self, np.ndarray ys, np.ndarray xs)</argsstring>
        <name>tell_x_</name>
        <qualifiedname>fcmaes.cmaescpp.ACMA_C.tell_x_</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>np.ndarray</type>
          <declname>ys</declname>
        </param>
        <param>
          <type>np.ndarray</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
<para>Passes flattened numpy arrays and interacts with an external C function using ctypes. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method takes numpy arrays as input, flattens one of them, converts both arrays
   to ctypes-compatible types, and then passes them to a C function. Any exceptions
   encountered during this process are handled and logged.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ys</parametername>
</parameternamelist>
<parameterdescription>
<para>A numpy array representing the first input data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xs</parametername>
</parameternamelist>
<parameterdescription>
<para>A numpy array representing the second input data, which gets flattened before being passed to the external C function.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>int The return value from the external C function <computeroutput>tellXACMA_C</computeroutput> or -1 in case of an </para>
</simplesect>
<simplesect kind="return"><para>exception. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="336" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="336" bodyend="345"/>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
        <references refid="namespacefcmaes_1_1cmaescpp_1a72633ee9a21ca3a356464d6c570b0237" compoundref="cmaescpp_8py" startline="432">fcmaes.cmaescpp.tellXACMA_C</references>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a4677822852841d0e52baa48fa91cbcb8" compoundref="cmaescpp_8py" startline="310" endline="319">fcmaes.cmaescpp.ACMA_C.tell</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a348ca090a0116efc16fce6a4bd180871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>np.array</type>
        <definition> np.array fcmaes.cmaescpp.ACMA_C.population</definition>
        <argsstring>(self)</argsstring>
        <name>population</name>
        <qualifiedname>fcmaes.cmaescpp.ACMA_C.population</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Retrieve the current population of solutions. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method fetches the entire population of solutions from the underlying
   ACMA instance, represented as a 2D numpy array. Each row in the array corresponds
   to an individual solution in the population.
</verbatim></para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>If an error occurs in retrieving the population, the exception details are printed and None is returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>np A 2D numpy array where each row is an individual solution in the current population. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="361" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="361" bodyend="375"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" compoundref="advretry_8py" startline="319">fcmaes.advretry.Store.dim</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268" compoundref="cmaes_8py" startline="216">fcmaes.cmaes.Cmaes.dim</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" compoundref="cmaescpp_8py" startline="239">fcmaes.cmaescpp.ACMA_C.dim</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df" compoundref="cmaes_8py" startline="223">fcmaes.cmaes.Cmaes.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" compoundref="cmaescpp_8py" startline="238">fcmaes.cmaescpp.ACMA_C.popsize</references>
        <references refid="namespacefcmaes_1_1cmaescpp_1a7f7e4ef0af633235aa443b759dba5ed9" compoundref="cmaescpp_8py" startline="436">fcmaes.cmaescpp.populationACMA_C</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1aaf2e40c524b9a8b328decb0b798bd695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OptimizeResult</type>
        <definition> OptimizeResult fcmaes.cmaescpp.ACMA_C.result</definition>
        <argsstring>(self)</argsstring>
        <name>result</name>
        <qualifiedname>fcmaes.cmaescpp.ACMA_C.result</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Computes and returns the result of an optimization process. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This function utilizes a low-level C library function to process optimization
   results. It retrieves the optimization results, such as the optimized variable,
   objective function value, evaluation count, iteration count, and stop status,
   and packages them into an `OptimizeResult` object.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>OptimizeResult An object containing the results of the optimization process, including the optimized variable (<computeroutput>x</computeroutput>), objective function value (<computeroutput>fun</computeroutput>), evaluation count (<computeroutput>nfev</computeroutput>), iteration count (<computeroutput>nit</computeroutput>), stop status (<computeroutput>status</computeroutput>), and a success flag (<computeroutput>success</computeroutput>). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="390" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="390" bodyend="404"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1abe787e76d4993d0280a389dabc8c3fe9" compoundref="advretry_8py" startline="319">fcmaes.advretry.Store.dim</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a2e2ca07b4daef2f2ad49d42d3220f268" compoundref="cmaes_8py" startline="216">fcmaes.cmaes.Cmaes.dim</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" compoundref="cmaescpp_8py" startline="239">fcmaes.cmaescpp.ACMA_C.dim</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" compoundref="cmaescpp_8py" startline="231">fcmaes.cmaescpp.ACMA_C.ptr</references>
        <references refid="namespacefcmaes_1_1cmaescpp_1aeecf9aa46c0d9cbb7e56087c5d7f0fef" compoundref="cmaescpp_8py" startline="439">fcmaes.cmaescpp.resultACMA_C</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementation of the ACMA-C algorithm for optimization. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides functionalities for using the ACMA-C optimization algorithm, enabling the user to define the problem&apos;s dimensions, bounds, initial guesses, population size, and more. It integrates with ctypes to leverage C-based implementations for efficiency. The algorithm supports customizable stopping criteria such as fitness value thresholds and history-based progress termination limits. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.cmaescpp.ACMA_C</label>
        <link refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/cmaescpp.py" line="156" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="156" bodyend="404"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ae55112db9f934ddf1d3d01a09b812adb" prot="public" virt="non-virtual"><scope>fcmaes::cmaescpp::ACMA_C</scope><name>__del__</name></member>
      <member refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a30b1141e99acc21b94e2366bad21dc78" prot="public" virt="non-virtual"><scope>fcmaes::cmaescpp::ACMA_C</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ad7ca82faa65b471b66977e2f18676025" prot="public" virt="non-virtual"><scope>fcmaes::cmaescpp::ACMA_C</scope><name>ask</name></member>
      <member refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" prot="public" virt="non-virtual"><scope>fcmaes::cmaescpp::ACMA_C</scope><name>dim</name></member>
      <member refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" prot="public" virt="non-virtual"><scope>fcmaes::cmaescpp::ACMA_C</scope><name>popsize</name></member>
      <member refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a348ca090a0116efc16fce6a4bd180871" prot="public" virt="non-virtual"><scope>fcmaes::cmaescpp::ACMA_C</scope><name>population</name></member>
      <member refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" prot="public" virt="non-virtual"><scope>fcmaes::cmaescpp::ACMA_C</scope><name>ptr</name></member>
      <member refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1aaf2e40c524b9a8b328decb0b798bd695" prot="public" virt="non-virtual"><scope>fcmaes::cmaescpp::ACMA_C</scope><name>result</name></member>
      <member refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a4677822852841d0e52baa48fa91cbcb8" prot="public" virt="non-virtual"><scope>fcmaes::cmaescpp::ACMA_C</scope><name>tell</name></member>
      <member refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a344851d94557ce52f99da907ee61590d" prot="public" virt="non-virtual"><scope>fcmaes::cmaescpp::ACMA_C</scope><name>tell_x_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

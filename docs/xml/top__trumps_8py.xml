<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="top__trumps_8py" kind="file" language="Python">
    <compoundname>top_trumps.py</compoundname>
    <innerclass refid="classexamples_1_1top__trumps_1_1tt__problem" prot="public">examples::top_trumps::tt_problem</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1top__trumps">examples::top_trumps</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1top__trumps_1a02ff12f2e804c0139f4a40da7a6c9045" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::top_trumps.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.top_trumps.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="32" column="1" bodyfile="examples/top_trumps.py" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1top__trumps_1a5e20e9626fe3cbdff2e69017a6788dfc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::top_trumps.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.top_trumps.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="32" column="1" bodyfile="examples/top_trumps.py" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1top__trumps_1a28d299df9089f3dfa9ae87563a91bbdc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::top_trumps.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.top_trumps.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="32" column="1" bodyfile="examples/top_trumps.py" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1top__trumps_1acd999cc1e6e67a725eff684edf812cfc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::top_trumps.basepath</definition>
        <argsstring></argsstring>
        <name>basepath</name>
        <qualifiedname>examples.top_trumps.basepath</qualifiedname>
        <initializer>=  os.path.dirname(os.path.abspath(__file__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="35" column="1" bodyfile="examples/top_trumps.py" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1top__trumps_1a1a4f886ea1b4e044dbf0a59aff55a79f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::top_trumps.librw</definition>
        <argsstring></argsstring>
        <name>librw</name>
        <qualifiedname>examples.top_trumps.librw</qualifiedname>
        <initializer>=  ct.cdll.LoadLibrary(basepath + &apos;/../fcmaes/lib/librw_top_trumps.so&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="37" column="1" bodyfile="examples/top_trumps.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1top__trumps_1ad185d7bfc116b48bd1db4c5be5b36fc6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::top_trumps.evaluate_rw_top_trumps</definition>
        <argsstring></argsstring>
        <name>evaluate_rw_top_trumps</name>
        <qualifiedname>examples.top_trumps.evaluate_rw_top_trumps</qualifiedname>
        <initializer>=  librw.evaluate_rw_top_trumps</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="43" column="1" bodyfile="examples/top_trumps.py" bodystart="43" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1top__trumps_1aa1e516064096b0560889c99e5874f513" compoundref="top__trumps_8py" startline="51" endline="65">examples.top_trumps.objectives_rw</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1top__trumps_1ad909a047442c34cf5ee63e7012dcf3b4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::top_trumps.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>examples.top_trumps.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="44" column="1" bodyfile="examples/top_trumps.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1top__trumps_1a2ed155c15e55809460bcecefe4294bdb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::top_trumps.rw_top_trumps_bounds</definition>
        <argsstring></argsstring>
        <name>rw_top_trumps_bounds</name>
        <qualifiedname>examples.top_trumps.rw_top_trumps_bounds</qualifiedname>
        <initializer>=  librw.rw_top_trumps_bounds</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="47" column="1" bodyfile="examples/top_trumps.py" bodystart="47" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1top__trumps_1aa30fe9874e79f935906b7def746823c7" compoundref="top__trumps_8py" startline="66" endline="83">examples.top_trumps.bounds_rw</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1top__trumps_1aa1e516064096b0560889c99e5874f513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.top_trumps.objectives_rw</definition>
        <argsstring>(name, numObjs, function, instance, rep, x)</argsstring>
        <name>objectives_rw</name>
        <qualifiedname>examples.top_trumps.objectives_rw</qualifiedname>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>numObjs</type>
          <defname>numObjs</defname>
        </param>
        <param>
          <type>function</type>
          <defname>function</defname>
        </param>
        <param>
          <type>instance</type>
          <defname>instance</defname>
        </param>
        <param>
          <type>rep</type>
          <defname>rep</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="51" column="1" bodyfile="examples/top_trumps.py" bodystart="51" bodyend="65"/>
        <references refid="namespaceexamples_1_1top__trumps_1ad185d7bfc116b48bd1db4c5be5b36fc6" compoundref="top__trumps_8py" startline="43">examples.top_trumps.evaluate_rw_top_trumps</references>
        <referencedby refid="classexamples_1_1top__trumps_1_1tt__problem_1ac6f4336e5458badfb401d7d756077ca4" compoundref="top__trumps_8py" startline="98" endline="100">examples.top_trumps.tt_problem.fun</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1top__trumps_1aa30fe9874e79f935906b7def746823c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.top_trumps.bounds_rw</definition>
        <argsstring>(dim, instance)</argsstring>
        <name>bounds_rw</name>
        <qualifiedname>examples.top_trumps.bounds_rw</qualifiedname>
        <param>
          <type>dim</type>
          <defname>dim</defname>
        </param>
        <param>
          <type>instance</type>
          <defname>instance</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="66" column="1" bodyfile="examples/top_trumps.py" bodystart="66" bodyend="83"/>
        <references refid="namespaceexamples_1_1top__trumps_1a2ed155c15e55809460bcecefe4294bdb" compoundref="top__trumps_8py" startline="47">examples.top_trumps.rw_top_trumps_bounds</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1top__trumps_1aa5e803d06dbb86830e219bc96578c85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.top_trumps.mo_minimize_plot</definition>
        <argsstring>(problem, opt, name, exp=3.0, num_retries=256)</argsstring>
        <name>mo_minimize_plot</name>
        <qualifiedname>examples.top_trumps.mo_minimize_plot</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>exp</type>
          <defname>exp</defname>
          <defval>3.0</defval>
        </param>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>256</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="104" column="1" bodyfile="examples/top_trumps.py" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1top__trumps_1a8e4b33f4260ae19998e5b869e59a8019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.top_trumps.minimize_plot</definition>
        <argsstring>(problem, opt, name, num_retries=256)</argsstring>
        <name>minimize_plot</name>
        <qualifiedname>examples.top_trumps.minimize_plot</qualifiedname>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>256</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="108" column="1" bodyfile="examples/top_trumps.py" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1top__trumps_1ad5e851a3c8f2d554992aca2a3c2ee439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.top_trumps.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <qualifiedname>examples.top_trumps.main</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/top_trumps.py" line="114" column="1" bodyfile="examples/top_trumps.py" bodystart="114" bodyend="150"/>
        <references refid="namespaceexamples_1_1top__trumps_1ad5e851a3c8f2d554992aca2a3c2ee439" compoundref="top__trumps_8py" startline="114" endline="150">examples.top_trumps.main</references>
        <referencedby refid="namespaceexamples_1_1top__trumps_1ad5e851a3c8f2d554992aca2a3c2ee439" compoundref="top__trumps_8py" startline="114" endline="150">examples.top_trumps.main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1top__trumps" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>gbea<sp/>TopTrump<sp/>benchmark<sp/>is<sp/>a<sp/>carefully<sp/>designed<sp/>real<sp/>world<sp/>benchmark.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Both<sp/>its<sp/>single<sp/>objective<sp/>and<sp/>multi-objective<sp/>fitness<sp/>functions<sp/>reflect<sp/>the<sp/>requirements<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>a<sp/>real<sp/>world<sp/>TopTrump<sp/>card<sp/>game<sp/>designer.<sp/>Its<sp/>simulation<sp/>based<sp/>tests<sp/>are<sp/>efficiently<sp/>implemented,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>so<sp/>that<sp/>it<sp/>is<sp/>possible<sp/>to<sp/>compare<sp/>optimization<sp/>algorithms<sp/>investing<sp/>limited<sp/>CPU<sp/>time,<sp/>specially<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>if<sp/>parallelization<sp/>is<sp/>applied.<sp/>To<sp/>do<sp/>so<sp/>the<sp/>socket<sp/>based<sp/>interface<sp/>is<sp/>replaced<sp/>by<sp/>a<sp/>much<sp/>simpler<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>ctypes<sp/>based<sp/>interface.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/ttusar/coco-gbea</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://doi.org/10.5281/zenodo.2594848</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/ttusar/coco-gbea/blob/main/code-experiments/rw-problems/GBEA.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://www.researchgate.net/publication/334220017_Single-_and_multi-objective_game-benchmark</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/TopTrumps.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="32" refid="namespaceexamples_1_1top__trumps_1a5e20e9626fe3cbdff2e69017a6788dfc" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="namespaceexamples_1_1top__trumps_1acd999cc1e6e67a725eff684edf812cfc" refkind="member"><highlight class="normal">basepath<sp/>=<sp/>os.path.dirname(os.path.abspath(__file__))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.platform.startswith(</highlight><highlight class="stringliteral">&apos;linux&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="37" refid="namespaceexamples_1_1top__trumps_1a1a4f886ea1b4e044dbf0a59aff55a79f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>librw<sp/>=<sp/>ct.cdll.LoadLibrary(basepath<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/../fcmaes/lib/librw_top_trumps.so&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>os.environ[</highlight><highlight class="stringliteral">&apos;PATH&apos;</highlight><highlight class="normal">]<sp/>=<sp/>(basepath<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/lib&apos;</highlight><highlight class="normal">)<sp/>+<sp/>os.pathsep<sp/>+<sp/>os.environ[</highlight><highlight class="stringliteral">&apos;PATH&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>librw<sp/>=<sp/>ct.cdll.LoadLibrary(basepath<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/../fcmaes/lib/librw_top_trumps.dll&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">#<sp/>configurable<sp/>number<sp/>of<sp/>simulations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespaceexamples_1_1top__trumps_1ad185d7bfc116b48bd1db4c5be5b36fc6" refkind="member"><highlight class="normal">evaluate_rw_top_trumps<sp/>=<sp/>librw.evaluate_rw_top_trumps</highlight></codeline>
<codeline lineno="44" refid="namespaceexamples_1_1top__trumps_1ad909a047442c34cf5ee63e7012dcf3b4" refkind="member"><highlight class="normal">evaluate_rw_top_trumps.argtypes<sp/>=<sp/>[ct.c_int,<sp/>ct.c_char_p,<sp/>ct.c_int,<sp/>ct.c_int,<sp/>ct.c_int,<sp/>ct.c_int,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double)]<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="namespaceexamples_1_1top__trumps_1a2ed155c15e55809460bcecefe4294bdb" refkind="member"><highlight class="normal">rw_top_trumps_bounds<sp/>=<sp/>librw.rw_top_trumps_bounds</highlight></codeline>
<codeline lineno="48"><highlight class="normal">rw_top_trumps_bounds.argtypes<sp/>=<sp/>[ct.c_int,<sp/>ct.c_int,<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double)]<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="namespaceexamples_1_1top__trumps_1aa1e516064096b0560889c99e5874f513" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1top__trumps_1aa1e516064096b0560889c99e5874f513" kindref="member">objectives_rw</ref>(name,<sp/>numObjs,<sp/>function,<sp/>instance,<sp/>rep,<sp/>x):</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>[round(xi,<sp/>0)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>xi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x]</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.array(x)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.empty(numObjs)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_p<sp/>=<sp/>x.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_p<sp/>=<sp/>y.ctypes.data_as(ct.POINTER(ct.c_double))<sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1top__trumps_1ad185d7bfc116b48bd1db4c5be5b36fc6" kindref="member">evaluate_rw_top_trumps</ref>(rep,<sp/>ct.create_string_buffer(name.encode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)),<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numObjs,<sp/>function,<sp/>instance,<sp/>len(x),<sp/>x_p,<sp/>y_p)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespaceexamples_1_1top__trumps_1aa30fe9874e79f935906b7def746823c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1top__trumps_1aa30fe9874e79f935906b7def746823c7" kindref="member">bounds_rw</ref>(dim,<sp/>instance):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb<sp/>=<sp/>np.empty(4)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub<sp/>=<sp/>np.empty(4)<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb_p<sp/>=<sp/>lb.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub_p<sp/>=<sp/>ub.ctypes.data_as(ct.POINTER(ct.c_double))<sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1top__trumps_1a2ed155c15e55809460bcecefe4294bdb" kindref="member">rw_top_trumps_bounds</ref>(instance,<sp/>4,<sp/>lb_p,<sp/>ub_p)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb[:]<sp/>-=<sp/>(0.5<sp/>-<sp/>1e-6)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub[:]<sp/>+=<sp/>(0.5<sp/>-<sp/>1e-6)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>np.empty(dim)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>np.empty(dim)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(dim):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower[i]<sp/>=<sp/>lb[i<sp/>%<sp/>4]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper[i]<sp/>=<sp/>ub[i<sp/>%<sp/>4]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lower,<sp/>upper</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classexamples_1_1top__trumps_1_1tt__problem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1top__trumps_1_1tt__problem" kindref="compound">tt_problem</ref>(object):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classexamples_1_1top__trumps_1_1tt__problem_1a458a618c69d11530f4a9303b35696a42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1top__trumps_1_1tt__problem_1a458a618c69d11530f4a9303b35696a42" kindref="member">__init__</ref>(self,<sp/>suite,<sp/>name,<sp/>dim,<sp/>numObjs,<sp/>function,<sp/>instance,<sp/>rep<sp/>=<sp/>2000,<sp/>weight_bounds<sp/>=<sp/>Bounds([0,<sp/>0],<sp/>[1,<sp/>1])):</highlight></codeline>
<codeline lineno="87" refid="classexamples_1_1top__trumps_1_1tt__problem_1a60e6cdeee6a23a9cf716c051359d2e05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1a60e6cdeee6a23a9cf716c051359d2e05" kindref="member">suite</ref><sp/>=<sp/>suite</highlight></codeline>
<codeline lineno="88" refid="classexamples_1_1top__trumps_1_1tt__problem_1a836998a9352fe11ea5deaa76de19ecb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1a836998a9352fe11ea5deaa76de19ecb6" kindref="member">name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="89" refid="classexamples_1_1top__trumps_1_1tt__problem_1a47fda569781dfabb111d1966637b8a7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1a47fda569781dfabb111d1966637b8a7d" kindref="member">dim</ref><sp/>=<sp/>dim</highlight></codeline>
<codeline lineno="90" refid="classexamples_1_1top__trumps_1_1tt__problem_1aa4b23024f91402c99a0804f79d9eb4e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1aa4b23024f91402c99a0804f79d9eb4e1" kindref="member">numObjs</ref><sp/>=<sp/>numObjs</highlight></codeline>
<codeline lineno="91" refid="classexamples_1_1top__trumps_1_1tt__problem_1a34d711ed09fc993b4341026d10906ab1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1a34d711ed09fc993b4341026d10906ab1" kindref="member">function</ref><sp/>=<sp/>function</highlight></codeline>
<codeline lineno="92" refid="classexamples_1_1top__trumps_1_1tt__problem_1ab5a4347af5a47888a58811fffd5be7d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1ab5a4347af5a47888a58811fffd5be7d6" kindref="member">instance</ref><sp/>=<sp/>instance</highlight></codeline>
<codeline lineno="93" refid="classexamples_1_1top__trumps_1_1tt__problem_1ae122afb2aa054daa46815c03afd230ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1ae122afb2aa054daa46815c03afd230ef" kindref="member">rep</ref><sp/>=<sp/>rep</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb,<sp/>ub<sp/>=<sp/><ref refid="namespaceexamples_1_1top__trumps_1aa30fe9874e79f935906b7def746823c7" kindref="member">bounds_rw</ref>(dim,<sp/>instance)</highlight></codeline>
<codeline lineno="95" refid="classexamples_1_1top__trumps_1_1tt__problem_1ab41baed40a14fe4d9c596134a796a4c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1ab41baed40a14fe4d9c596134a796a4c5" kindref="member">weight_bounds</ref><sp/>=<sp/>weight_bounds</highlight></codeline>
<codeline lineno="96" refid="classexamples_1_1top__trumps_1_1tt__problem_1ada73eb93f9fa324672d285c92f53508b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1ada73eb93f9fa324672d285c92f53508b" kindref="member">bounds</ref><sp/>=<sp/>Bounds(lb,<sp/>ub)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classexamples_1_1top__trumps_1_1tt__problem_1ac6f4336e5458badfb401d7d756077ca4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1top__trumps_1_1tt__problem_1ac6f4336e5458badfb401d7d756077ca4" kindref="member">fun</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1top__trumps_1aa1e516064096b0560889c99e5874f513" kindref="member">objectives_rw</ref>(self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1a60e6cdeee6a23a9cf716c051359d2e05" kindref="member">suite</ref>,<sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1aa4b23024f91402c99a0804f79d9eb4e1" kindref="member">numObjs</ref>,<sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1a34d711ed09fc993b4341026d10906ab1" kindref="member">function</ref>,<sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1ab5a4347af5a47888a58811fffd5be7d6" kindref="member">instance</ref>,<sp/>self.<ref refid="classexamples_1_1top__trumps_1_1tt__problem_1ae122afb2aa054daa46815c03afd230ef" kindref="member">rep</ref>,<sp/>x)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bite_cpp,<sp/>Cma_cpp,<sp/>dtime,<sp/>De_cpp,<sp/>random_search,<sp/>wrapper,<sp/>logger</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>moretry,<sp/>retry,<sp/>mode,<sp/>modecpp</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="namespaceexamples_1_1top__trumps_1aa5e803d06dbb86830e219bc96578c85b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1top__trumps_1aa5e803d06dbb86830e219bc96578c85b" kindref="member">mo_minimize_plot</ref>(problem,<sp/>opt,<sp/>name,<sp/>exp<sp/>=<sp/>3.0,<sp/>num_retries<sp/>=<sp/>256):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>moretry.minimize_plot(name,<sp/>opt,<sp/><ref refid="classfcmaes_1_1optimizer_1_1wrapper" kindref="compound">wrapper</ref>(problem.fun),<sp/>problem.bounds,<sp/>problem.weight_bounds,<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_retries<sp/>=<sp/>num_retries,<sp/>exp<sp/>=<sp/>exp)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="namespaceexamples_1_1top__trumps_1a8e4b33f4260ae19998e5b869e59a8019" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1top__trumps_1a8e4b33f4260ae19998e5b869e59a8019" kindref="member">minimize_plot</ref>(problem,<sp/>opt,<sp/>name,<sp/>num_retries<sp/>=<sp/>256):</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>retry.minimize_plot(name,<sp/>opt,<sp/>problem.fun,<sp/>problem.bounds,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_retries<sp/>=<sp/>num_retries)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>wrapper</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="namespaceexamples_1_1top__trumps_1ad5e851a3c8f2d554992aca2a3c2ee439" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1top__trumps_1ad5e851a3c8f2d554992aca2a3c2ee439" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>suite<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;rw-top-trumps&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>instance<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>128</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>nobj<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>rep<sp/>=<sp/>2000</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>suite<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_f&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(function)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(instance)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(dim)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>problem<sp/>=<sp/>tt_problem(suite,<sp/>name,<sp/>dim,<sp/>nobj,<sp/>function,<sp/>instance,<sp/>rep)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>minimize_plot(problem,<sp/>random_search(10000),<sp/>name<sp/>+<sp/>&apos;_10k64&apos;,<sp/>num_retries<sp/>=<sp/>64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>minimize_plot(problem,<sp/>Cma_cpp(10000),<sp/>name<sp/>+<sp/>&apos;_10k64&apos;,<sp/>num_retries<sp/>=<sp/>64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>minimize_plot(problem,<sp/>De_cpp(10000),<sp/>name<sp/>+<sp/>&apos;_10k64&apos;,<sp/>num_retries<sp/>=<sp/>64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>minimize_plot(problem,<sp/>Bite_cpp(10000,<sp/>M=16),<sp/>name<sp/>+<sp/>&apos;_10k64&apos;,<sp/>num_retries<sp/>=<sp/>64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>suite<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;rw-top-trumps-biobj&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>function<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>instance<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>128</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>nobj<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>rep<sp/>=<sp/>2000</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>suite<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_f&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(function)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(instance)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(dim)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="classexamples_1_1top__trumps_1_1tt__problem" kindref="compound">tt_problem</ref>(suite,<sp/>name,<sp/>dim,<sp/>nobj,<sp/>function,<sp/>instance,<sp/>rep)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mo_minimize_plot(problem,<sp/>random_search(4000),<sp/>name<sp/>+<sp/>&apos;_4k512&apos;,<sp/>num_retries<sp/>=<sp/>512)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mo_minimize_plot(problem,<sp/>Cma_cpp(4000),<sp/>name<sp/>+<sp/>&apos;_4k512&apos;,<sp/>num_retries<sp/>=<sp/>512)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mo_minimize_plot(problem,<sp/>De_cpp(4000),<sp/>name<sp/>+<sp/>&apos;_4k512&apos;,<sp/>num_retries<sp/>=<sp/>512)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mo_minimize_plot(problem,<sp/>Bite_cpp(4000,<sp/>M=16),<sp/>name<sp/>+<sp/>&apos;_4k512&apos;,<sp/>num_retries<sp/>=<sp/>512)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mode.minimize_plot(name,<sp/>problem.fun,<sp/>problem.bounds,<sp/>2,<sp/>popsize<sp/>=<sp/>200,<sp/>nsga_update=True,<sp/>max_eval<sp/>=<sp/>100000,<sp/>workers=16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mode.minimize_plot(name,<sp/>problem.fun,<sp/>problem.bounds,<sp/>2,<sp/>popsize<sp/>=<sp/>200,<sp/>nsga_update=False,<sp/>max_eval<sp/>=<sp/>100000,<sp/>workers=16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>modecpp.minimize(<ref refid="classfcmaes_1_1mode_1_1wrapper" kindref="compound">mode.wrapper</ref>(problem.fun,<sp/>2),<sp/>2,<sp/>0,<sp/>problem.bounds,<sp/>popsize<sp/>=<sp/>200,<sp/>nsga_update=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>max_evaluations<sp/>=<sp/>100000,<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers=16)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>modecpp.minimize(problem.fun,<sp/>2,<sp/>0,<sp/>problem.bounds,<sp/>popsize<sp/>=<sp/>200,<sp/>nsga_update=False,<sp/>max_evaluations<sp/>=<sp/>100000,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_period=100,<sp/>plot_name=name,<sp/>workers=16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1top__trumps_1ad5e851a3c8f2d554992aca2a3c2ee439" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/top_trumps.py"/>
  </compounddef>
</doxygen>

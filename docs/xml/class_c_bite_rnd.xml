<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_c_bite_rnd" kind="class" language="C++" prot="public">
    <compoundname>CBiteRnd</compoundname>
    <includes refid="biteaux_8h" local="no">biteaux.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_bite_rnd_1a008bb9aa42951c18a447c999800e0f60" prot="protected" static="no" mutable="no">
        <type><ref refid="biteaux_8h_1a4522f40aac41a9fcbd22f042fea916a5" kindref="member">biteopt_rng</ref></type>
        <definition>biteopt_rng CBiteRnd::rf</definition>
        <argsstring></argsstring>
        <name>rf</name>
        <qualifiedname>CBiteRnd::rf</qualifiedname>
        <briefdescription>
<para>the default PRNG. </para>
        </briefdescription>
        <detaileddescription>
<para>External random number generator to use; NULL: use </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="340" column="13" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="340" bodyend="-1"/>
        <referencedby refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</referencedby>
        <referencedby refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" compoundref="biteaux_8h" startline="90" endline="109">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_rnd_1a44e318756bc7385e8924011349aa4f51" prot="protected" static="no" mutable="no">
        <type>void *</type>
        <definition>void* CBiteRnd::rdata</definition>
        <argsstring></argsstring>
        <name>rdata</name>
        <qualifiedname>CBiteRnd::rdata</qualifiedname>
        <briefdescription>
<para>Data pointer to pass to the &quot;rf&quot; function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="342" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="342" bodyend="-1"/>
        <referencedby refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</referencedby>
        <referencedby refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" compoundref="biteaux_8h" startline="90" endline="109">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_rnd_1af5a87e0a942d6232222aafc648ed511c" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t CBiteRnd::Seed</definition>
        <argsstring></argsstring>
        <name>Seed</name>
        <qualifiedname>CBiteRnd::Seed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="343" column="10" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="343" bodyend="-1"/>
        <referencedby refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</referencedby>
        <referencedby refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" compoundref="biteaux_8h" startline="90" endline="109">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_rnd_1ae34e558692230f33fe667766c67c1856" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t CBiteRnd::lcg</definition>
        <argsstring></argsstring>
        <name>lcg</name>
        <qualifiedname>CBiteRnd::lcg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="343" column="15" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="343" bodyend="-1"/>
        <referencedby refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</referencedby>
        <referencedby refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" compoundref="biteaux_8h" startline="90" endline="109">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_rnd_1ab5b48a474edb75ca3c24f62b56e9a4ff" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t CBiteRnd::Hash</definition>
        <argsstring></argsstring>
        <name>Hash</name>
        <qualifiedname>CBiteRnd::Hash</qualifiedname>
        <briefdescription>
<para>PRNG state variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="343" column="19" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="343" bodyend="-1"/>
        <referencedby refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</referencedby>
        <referencedby refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" compoundref="biteaux_8h" startline="90" endline="109">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_rnd_1ab1e875c012a97278485cc502a660664a" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t CBiteRnd::BitPool</definition>
        <argsstring></argsstring>
        <name>BitPool</name>
        <qualifiedname>CBiteRnd::BitPool</qualifiedname>
        <briefdescription>
<para>Bit pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="344" column="10" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="344" bodyend="-1"/>
        <referencedby refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" compoundref="biteaux_8h" startline="317" endline="337">getBit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_rnd_1a3ba7429a43a41566ccbc4e59ba73bb3d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteRnd::BitsLeft</definition>
        <argsstring></argsstring>
        <name>BitsLeft</name>
        <qualifiedname>CBiteRnd::BitsLeft</qualifiedname>
        <briefdescription>
<para>The number of bits left in the bit pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="345" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="345" bodyend="-1"/>
        <referencedby refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" compoundref="biteaux_8h" startline="317" endline="337">getBit</referencedby>
        <referencedby refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" compoundref="biteaux_8h" startline="90" endline="109">init</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_bite_rnd_1a2776cd41c02588346bf91d928a5c8c87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBiteRnd::CBiteRnd</definition>
        <argsstring>()</argsstring>
        <name>CBiteRnd</name>
        <qualifiedname>CBiteRnd::CBiteRnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor, calls the <ref refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" kindref="member">init()</ref> function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="65" column="1" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="65" bodyend="68"/>
        <references refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" compoundref="biteaux_8h" startline="90" endline="109">init</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1a6cc79f28d1026941dffddd9590586ef6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBiteRnd::CBiteRnd</definition>
        <argsstring>(const int NewSeed)</argsstring>
        <name>CBiteRnd</name>
        <qualifiedname>CBiteRnd::CBiteRnd</qualifiedname>
        <param>
          <type>const int</type>
          <declname>NewSeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor, calls the <ref refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" kindref="member">init()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewSeed</parametername>
</parameternamelist>
<parameterdescription>
<para>Random seed value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="76" column="1" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="76" bodyend="79"/>
        <references refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" compoundref="biteaux_8h" startline="90" endline="109">init</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteRnd::init</definition>
        <argsstring>(const int NewSeed, biteopt_rng const arf=NULL, void *const ardata=NULL)</argsstring>
        <name>init</name>
        <qualifiedname>CBiteRnd::init</qualifiedname>
        <param>
          <type>const int</type>
          <declname>NewSeed</declname>
        </param>
        <param>
          <type><ref refid="biteaux_8h_1a4522f40aac41a9fcbd22f042fea916a5" kindref="member">biteopt_rng</ref> const</type>
          <declname>arf</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>void *const</type>
          <declname>ardata</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function initializes *this PRNG object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewSeed</parametername>
</parameternamelist>
<parameterdescription>
<para>New random seed value. Ignored, if &quot;arf&quot; is non-NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arf</parametername>
</parameternamelist>
<parameterdescription>
<para>External random number generator to use; NULL: use the default PRNG. Note that the external RNG should be seeded externally. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ardata</parametername>
</parameternamelist>
<parameterdescription>
<para>Data pointer to pass to the &quot;arf&quot; function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="90" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="90" bodyend="109"/>
        <references refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</references>
        <references refid="class_c_bite_rnd_1a3ba7429a43a41566ccbc4e59ba73bb3d" compoundref="biteaux_8h" startline="345">BitsLeft</references>
        <references refid="class_c_bite_rnd_1ab5b48a474edb75ca3c24f62b56e9a4ff" compoundref="biteaux_8h" startline="343">Hash</references>
        <references refid="class_c_bite_rnd_1ae34e558692230f33fe667766c67c1856" compoundref="biteaux_8h" startline="343">lcg</references>
        <references refid="class_c_bite_rnd_1a44e318756bc7385e8924011349aa4f51" compoundref="biteaux_8h" startline="342">rdata</references>
        <references refid="class_c_bite_rnd_1a008bb9aa42951c18a447c999800e0f60" compoundref="biteaux_8h" startline="340">rf</references>
        <references refid="class_c_bite_rnd_1af5a87e0a942d6232222aafc648ed511c" compoundref="biteaux_8h" startline="343">Seed</references>
        <referencedby refid="biteopt_8h_1a80c74350b3bde46bf211afee2d02ddd5" compoundref="biteopt_8h" startline="1733" endline="1795">biteopt_minimize</referencedby>
        <referencedby refid="class_c_bite_rnd_1a2776cd41c02588346bf91d928a5c8c87" compoundref="biteaux_8h" startline="65" endline="68">CBiteRnd</referencedby>
        <referencedby refid="class_c_bite_rnd_1a6cc79f28d1026941dffddd9590586ef6" compoundref="biteaux_8h" startline="76" endline="79">CBiteRnd</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CBiteRnd::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <qualifiedname>CBiteRnd::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Random number in the range [0; 1). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="115" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="115" bodyend="118"/>
        <references refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</references>
        <referencedby refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" compoundref="biteopt_8h" startline="598" endline="682">CBiteOpt::generateSol1</referencedby>
        <referencedby refid="class_c_bite_opt_1a8a5048dc4357f48344cf5ade0757ae2b" compoundref="biteopt_8h" startline="1316" endline="1363">CBiteOpt::generateSol10</referencedby>
        <referencedby refid="class_c_bite_opt_1a2babc6c08dad9718d349683242805bc0" compoundref="biteopt_8h" startline="941" endline="974">CBiteOpt::generateSol3</referencedby>
        <referencedby refid="class_c_bite_rnd_1a3f6c22ff1f6f19de24f7c837530f31c4" compoundref="biteaux_8h" startline="282" endline="310">getGaussian</referencedby>
        <referencedby refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">getInt</referencedby>
        <referencedby refid="class_c_bite_rnd_1a5ca4595f6d0ef48367ad0ee06b337bf3" compoundref="biteaux_8h" startline="212" endline="215">getLog</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1aff1efaf9224552ae9a607a60f4ca17fc" compoundref="nmsopt_8h" startline="98" endline="153">CNMSeqOpt::init</referencedby>
        <referencedby refid="class_c_bite_opt_1a2f56a9d5d682c92e2da1234ed68d54ed" compoundref="biteopt_8h" startline="221" endline="420">CBiteOpt::optimize</referencedby>
        <referencedby refid="class_c_spher_opt_1a1515c953ba95c15ca8722ad8fb46523d" compoundref="spheropt_8h" startline="142" endline="240">CSpherOpt::optimize</referencedby>
        <referencedby refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" compoundref="biteaux_8h" startline="1256" endline="1307">CBitePop&lt; ptype &gt;::wrapParam</referencedby>
        <referencedby refid="class_c_bite_opt_base_1a634a498e8ebd71bbf87fd1df02f178e0" compoundref="biteaux_8h" startline="1819" endline="1850">CBiteOptBase&lt; ptype &gt;::wrapParamReal</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteRnd::getInt</definition>
        <argsstring>(const int N1)</argsstring>
        <name>getInt</name>
        <qualifiedname>CBiteRnd::getInt</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N1</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer value range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Random integer number in the range [0; N1). N1 denotes the number of bins, not the maximal returned value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="126" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="126" bodyend="129"/>
        <references refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">get</references>
        <referencedby refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" compoundref="biteopt_8h" startline="598" endline="682">CBiteOpt::generateSol1</referencedby>
        <referencedby refid="class_c_bite_opt_1ab6de0da3b279e77788efed7d3e05a0e2" compoundref="biteopt_8h" startline="690" endline="732">CBiteOpt::generateSol2</referencedby>
        <referencedby refid="class_c_bite_opt_1abd6c435c82a97476332139663d9a1c82" compoundref="biteopt_8h" startline="738" endline="779">CBiteOpt::generateSol2b</referencedby>
        <referencedby refid="class_c_bite_opt_1a2363863090db7154792f78ec46abcf47" compoundref="biteopt_8h" startline="786" endline="886">CBiteOpt::generateSol2c</referencedby>
        <referencedby refid="class_c_bite_opt_1a76fa9d8bf4abde13b69e06761acc82f5" compoundref="biteopt_8h" startline="893" endline="933">CBiteOpt::generateSol2d</referencedby>
        <referencedby refid="class_c_bite_opt_1a01e7f5a94a2ae837844f8c60ddf21db6" compoundref="biteopt_8h" startline="1029" endline="1061">CBiteOpt::generateSol5</referencedby>
        <referencedby refid="class_c_bite_opt_1a001440627928387b57b5f266696ba330" compoundref="biteopt_8h" startline="1126" endline="1158">CBiteOpt::generateSol6</referencedby>
        <referencedby refid="class_c_bite_opt_1adca09db7345122f1da38d8f5c1800d83" compoundref="biteopt_8h" startline="1280" endline="1310">CBiteOpt::generateSol9</referencedby>
        <referencedby refid="class_c_bite_opt_deep_1a5f9dce3d0bcb37dd0d63fec707204786" compoundref="biteopt_8h" startline="1563" endline="1609">CBiteOptDeep::optimize</referencedby>
        <referencedby refid="class_c_d_e_opt_1a819e3692005dd630f7bc83d4444e23ee" compoundref="deopt_8h" startline="140" endline="304">CDEOpt::optimize</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">CBiteSelBase::reset</referencedby>
        <referencedby refid="class_c_bite_opt_1a344271b2490d03eaa0c8e1ab062d916d" compoundref="biteopt_8h" startline="531" endline="539">CBiteOpt::selectParPop</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1aabbf1ffd535ca8fe31fda768f15ccd1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CBiteRnd::getSqr</definition>
        <argsstring>()</argsstring>
        <name>getSqr</name>
        <qualifiedname>CBiteRnd::getSqr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Random number in the range [0; 1). Beta distribution with Alpha=0.5, Beta=1 (squared). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="136" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="136" bodyend="141"/>
        <references refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</references>
        <referencedby refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" compoundref="biteaux_8h" startline="224" endline="227">getSqrInt</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1aa4c960b792982f495cc19c04ad9c2705" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CBiteRnd::getPow</definition>
        <argsstring>(const double p)</argsstring>
        <name>getPow</name>
        <qualifiedname>CBiteRnd::getPow</qualifiedname>
        <param>
          <type>const double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Random number in the range [0; 1), raised to the specified power. The function has branching for optimization. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="148" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="148" bodyend="205"/>
        <references refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</references>
        <referencedby refid="class_c_bite_opt_1a001440627928387b57b5f266696ba330" compoundref="biteopt_8h" startline="1126" endline="1158">CBiteOpt::generateSol6</referencedby>
        <referencedby refid="class_c_bite_opt_1a6766fe9d56bee1f623d297b2f9cf8500" compoundref="biteopt_8h" startline="1167" endline="1191">CBiteOpt::generateSol7</referencedby>
        <referencedby refid="class_c_bite_opt_1af25cdfb71a0ad9081148c31da58fe949" compoundref="biteopt_8h" startline="581" endline="590">CBiteOpt::getMinSolIndex</referencedby>
        <referencedby refid="class_c_bite_rnd_1adca97316ecce595b9175815493f7a3a2" compoundref="biteaux_8h" startline="236" endline="239">getPowInt</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1a5ca4595f6d0ef48367ad0ee06b337bf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CBiteRnd::getLog</definition>
        <argsstring>()</argsstring>
        <name>getLog</name>
        <qualifiedname>CBiteRnd::getLog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Random number in the range (-1; 1) with approximately logarithmic PDF, two-lobe with peak at 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="212" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="212" bodyend="215"/>
        <references refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">get</references>
        <referencedby refid="class_c_bite_rnd_1ab5e3f4ddf78ebb400f3ddd6dd7ddf016" compoundref="biteaux_8h" startline="247" endline="250">getLogInt</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteRnd::getSqrInt</definition>
        <argsstring>(const int N1)</argsstring>
        <name>getSqrInt</name>
        <qualifiedname>CBiteRnd::getSqrInt</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N1</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer value range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Random integer number in the range [0; N1). Beta distribution with Alpha=0.5, Beta=1 (squared). N1 denotes the number of bins, not the maximal returned value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="224" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="224" bodyend="227"/>
        <references refid="class_c_bite_rnd_1aabbf1ffd535ca8fe31fda768f15ccd1b" compoundref="biteaux_8h" startline="136" endline="141">getSqr</references>
        <referencedby refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" compoundref="biteopt_8h" startline="598" endline="682">CBiteOpt::generateSol1</referencedby>
        <referencedby refid="class_c_bite_opt_1a8a5048dc4357f48344cf5ade0757ae2b" compoundref="biteopt_8h" startline="1316" endline="1363">CBiteOpt::generateSol10</referencedby>
        <referencedby refid="class_c_bite_opt_1ab6de0da3b279e77788efed7d3e05a0e2" compoundref="biteopt_8h" startline="690" endline="732">CBiteOpt::generateSol2</referencedby>
        <referencedby refid="class_c_bite_opt_1abd6c435c82a97476332139663d9a1c82" compoundref="biteopt_8h" startline="738" endline="779">CBiteOpt::generateSol2b</referencedby>
        <referencedby refid="class_c_bite_opt_1a76fa9d8bf4abde13b69e06761acc82f5" compoundref="biteopt_8h" startline="893" endline="933">CBiteOpt::generateSol2d</referencedby>
        <referencedby refid="class_c_bite_opt_1a2babc6c08dad9718d349683242805bc0" compoundref="biteopt_8h" startline="941" endline="974">CBiteOpt::generateSol3</referencedby>
        <referencedby refid="class_c_bite_opt_1ae48399aea9fc3c2e01b370b846d88c82" compoundref="biteopt_8h" startline="983" endline="1017">CBiteOpt::generateSol4</referencedby>
        <referencedby refid="class_c_bite_opt_1a01e7f5a94a2ae837844f8c60ddf21db6" compoundref="biteopt_8h" startline="1029" endline="1061">CBiteOpt::generateSol5</referencedby>
        <referencedby refid="class_c_bite_opt_1aac1bd4dd832e20880872b94b07773946" compoundref="biteopt_8h" startline="1068" endline="1115">CBiteOpt::generateSol5b</referencedby>
        <referencedby refid="class_c_bite_opt_1a332b03425de84b8ef8eb362af8e75e78" compoundref="biteopt_8h" startline="1201" endline="1272">CBiteOpt::generateSol8</referencedby>
        <referencedby refid="class_c_bite_opt_1adca09db7345122f1da38d8f5c1800d83" compoundref="biteopt_8h" startline="1280" endline="1310">CBiteOpt::generateSol9</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1adca97316ecce595b9175815493f7a3a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteRnd::getPowInt</definition>
        <argsstring>(const double p, const int N1)</argsstring>
        <name>getPowInt</name>
        <qualifiedname>CBiteRnd::getPowInt</qualifiedname>
        <param>
          <type>const double</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N1</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer value range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Random integer number in the range [0; N1), raised to the specified power. N1 denotes the number of bins, not the maximal returned value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="236" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="236" bodyend="239"/>
        <references refid="class_c_bite_rnd_1aa4c960b792982f495cc19c04ad9c2705" compoundref="biteaux_8h" startline="148" endline="205">getPow</references>
        <referencedby refid="class_c_bite_opt_1a2363863090db7154792f78ec46abcf47" compoundref="biteopt_8h" startline="786" endline="886">CBiteOpt::generateSol2c</referencedby>
        <referencedby refid="class_c_d_e_opt_1a819e3692005dd630f7bc83d4444e23ee" compoundref="deopt_8h" startline="140" endline="304">CDEOpt::optimize</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" compoundref="biteaux_8h" startline="581" endline="590">CBiteSelBase::select</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1ab5e3f4ddf78ebb400f3ddd6dd7ddf016" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteRnd::getLogInt</definition>
        <argsstring>(const int N1)</argsstring>
        <name>getLogInt</name>
        <qualifiedname>CBiteRnd::getLogInt</qualifiedname>
        <param>
          <type>const int</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N1</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer value range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Random integer number in the range [0; N1), with approximately logarithmic PDF, peak at 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="247" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="247" bodyend="250"/>
        <references refid="class_c_bite_rnd_1a5ca4595f6d0ef48367ad0ee06b337bf3" compoundref="biteaux_8h" startline="212" endline="215">getLog</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1a6e9234ff0489b0d3d38ef71be159b34d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t CBiteRnd::getRaw</definition>
        <argsstring>()</argsstring>
        <name>getRaw</name>
        <qualifiedname>CBiteRnd::getRaw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Uniformly-distributed random number in the &quot;raw&quot; scale. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="256" column="10" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="256" bodyend="259"/>
        <references refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</references>
        <referencedby refid="class_c_bite_opt_1a2363863090db7154792f78ec46abcf47" compoundref="biteopt_8h" startline="786" endline="886">CBiteOpt::generateSol2c</referencedby>
        <referencedby refid="class_c_bite_opt_1a01e7f5a94a2ae837844f8c60ddf21db6" compoundref="biteopt_8h" startline="1029" endline="1061">CBiteOpt::generateSol5</referencedby>
        <referencedby refid="class_c_d_e_opt_1a819e3692005dd630f7bc83d4444e23ee" compoundref="deopt_8h" startline="140" endline="304">CDEOpt::optimize</referencedby>
        <referencedby refid="class_c_bite_pop_1a3b7e8d2276455475bd761e29c8c72ac6" compoundref="biteaux_8h" startline="1256" endline="1307">CBitePop&lt; ptype &gt;::wrapParam</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1a97eb8d3dce6693178a1f54cf4a076fd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CBiteRnd::getTPDF</definition>
        <argsstring>()</argsstring>
        <name>getTPDF</name>
        <qualifiedname>CBiteRnd::getTPDF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>TPDF random number in the range (-1; 1). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="265" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="265" bodyend="271"/>
        <references refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</references>
        <referencedby refid="class_c_bite_opt_1aaf2f5bc8a214a95532426c9a9b38fdb8" compoundref="biteopt_8h" startline="598" endline="682">CBiteOpt::generateSol1</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1a3f6c22ff1f6f19de24f7c837530f31c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CBiteRnd::getGaussian</definition>
        <argsstring>()</argsstring>
        <name>getGaussian</name>
        <qualifiedname>CBiteRnd::getGaussian</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function generates a Gaussian-distributed pseudo-random number with mean=0 and std.dev=1.</para>
<para>Algorithm is adopted from &quot;Leva, J. L. 1992. &quot;A Fast Normal Random Number Generator&quot;, ACM Transactions on Mathematical Software, vol. 18,
no. 4, pp. 449-453&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="282" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="282" bodyend="310"/>
        <references refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">get</references>
        <referencedby refid="class_c_bite_opt_1a332b03425de84b8ef8eb362af8e75e78" compoundref="biteopt_8h" startline="1201" endline="1272">CBiteOpt::generateSol8</referencedby>
        <referencedby refid="class_c_bite_pop_1aecaac61269e65bda93cb2dc1a3a26091" compoundref="biteaux_8h" startline="1318" endline="1330">CBitePop&lt; ptype &gt;::getGaussianInt</referencedby>
        <referencedby refid="class_c_n_m_seq_opt_1aff1efaf9224552ae9a607a60f4ca17fc" compoundref="nmsopt_8h" startline="98" endline="153">CNMSeqOpt::init</referencedby>
        <referencedby refid="class_c_bite_ort_1a0687c4810cab96a266d421eec88368fb" compoundref="biteort_8h" startline="397" endline="421">CBiteOrt::sample</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteRnd::getBit</definition>
        <argsstring>()</argsstring>
        <name>getBit</name>
        <qualifiedname>CBiteRnd::getBit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns the next random bit, usually used for 50% probability evaluations efficiently. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="317" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="317" bodyend="337"/>
        <references refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" compoundref="biteaux_8h" startline="351" endline="368">advance</references>
        <references refid="class_c_bite_rnd_1ab1e875c012a97278485cc502a660664a" compoundref="biteaux_8h" startline="344">BitPool</references>
        <references refid="class_c_bite_rnd_1a3ba7429a43a41566ccbc4e59ba73bb3d" compoundref="biteaux_8h" startline="345">BitsLeft</references>
        <referencedby refid="class_c_bite_opt_1a2363863090db7154792f78ec46abcf47" compoundref="biteopt_8h" startline="786" endline="886">CBiteOpt::generateSol2c</referencedby>
        <referencedby refid="class_c_bite_opt_1ae48399aea9fc3c2e01b370b846d88c82" compoundref="biteopt_8h" startline="983" endline="1017">CBiteOpt::generateSol4</referencedby>
        <referencedby refid="class_c_bite_opt_1a01e7f5a94a2ae837844f8c60ddf21db6" compoundref="biteopt_8h" startline="1029" endline="1061">CBiteOpt::generateSol5</referencedby>
        <referencedby refid="class_c_bite_opt_1aac1bd4dd832e20880872b94b07773946" compoundref="biteopt_8h" startline="1068" endline="1115">CBiteOpt::generateSol5b</referencedby>
        <referencedby refid="class_c_bite_opt_1a001440627928387b57b5f266696ba330" compoundref="biteopt_8h" startline="1126" endline="1158">CBiteOpt::generateSol6</referencedby>
        <referencedby refid="class_c_bite_opt_1a6766fe9d56bee1f623d297b2f9cf8500" compoundref="biteopt_8h" startline="1167" endline="1191">CBiteOpt::generateSol7</referencedby>
        <referencedby refid="class_c_bite_opt_1adca09db7345122f1da38d8f5c1800d83" compoundref="biteopt_8h" startline="1280" endline="1310">CBiteOpt::generateSol9</referencedby>
        <referencedby refid="class_c_d_e_opt_1a819e3692005dd630f7bc83d4444e23ee" compoundref="deopt_8h" startline="140" endline="304">CDEOpt::optimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t CBiteRnd::advance</definition>
        <argsstring>()</argsstring>
        <name>advance</name>
        <qualifiedname>CBiteRnd::advance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function advances the PRNG and returns the next PRNG value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="351" column="10" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="351" bodyend="368"/>
        <references refid="class_c_bite_rnd_1ab5b48a474edb75ca3c24f62b56e9a4ff" compoundref="biteaux_8h" startline="343">Hash</references>
        <references refid="class_c_bite_rnd_1ae34e558692230f33fe667766c67c1856" compoundref="biteaux_8h" startline="343">lcg</references>
        <references refid="class_c_bite_rnd_1a44e318756bc7385e8924011349aa4f51" compoundref="biteaux_8h" startline="342">rdata</references>
        <references refid="class_c_bite_rnd_1a008bb9aa42951c18a447c999800e0f60" compoundref="biteaux_8h" startline="340">rf</references>
        <references refid="class_c_bite_rnd_1af5a87e0a942d6232222aafc648ed511c" compoundref="biteaux_8h" startline="343">Seed</references>
        <referencedby refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" compoundref="biteaux_8h" startline="115" endline="118">get</referencedby>
        <referencedby refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" compoundref="biteaux_8h" startline="317" endline="337">getBit</referencedby>
        <referencedby refid="class_c_bite_rnd_1aa4c960b792982f495cc19c04ad9c2705" compoundref="biteaux_8h" startline="148" endline="205">getPow</referencedby>
        <referencedby refid="class_c_bite_rnd_1a6e9234ff0489b0d3d38ef71be159b34d" compoundref="biteaux_8h" startline="256" endline="259">getRaw</referencedby>
        <referencedby refid="class_c_bite_rnd_1aabbf1ffd535ca8fe31fda768f15ccd1b" compoundref="biteaux_8h" startline="136" endline="141">getSqr</referencedby>
        <referencedby refid="class_c_bite_rnd_1a97eb8d3dce6693178a1f54cf4a076fd0" compoundref="biteaux_8h" startline="265" endline="271">getTPDF</referencedby>
        <referencedby refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" compoundref="biteaux_8h" startline="90" endline="109">init</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class that implements a pseudo-random number generator (PRNG). The default implementation includes a fast high-quality PRNG (2^159 period). See <ulink url="https://github.com/avaneev/prvhash">https://github.com/avaneev/prvhash</ulink> for more details. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>CBiteRnd</label>
        <link refid="class_c_bite_rnd"/>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/biteaux.h" line="58" column="1" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="59" bodyend="369"/>
    <listofallmembers>
      <member refid="class_c_bite_rnd_1ae1167f8ecac85f268ced4bc1d2fa953b" prot="protected" virt="non-virtual"><scope>CBiteRnd</scope><name>advance</name></member>
      <member refid="class_c_bite_rnd_1ab1e875c012a97278485cc502a660664a" prot="protected" virt="non-virtual"><scope>CBiteRnd</scope><name>BitPool</name></member>
      <member refid="class_c_bite_rnd_1a3ba7429a43a41566ccbc4e59ba73bb3d" prot="protected" virt="non-virtual"><scope>CBiteRnd</scope><name>BitsLeft</name></member>
      <member refid="class_c_bite_rnd_1a2776cd41c02588346bf91d928a5c8c87" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>CBiteRnd</name></member>
      <member refid="class_c_bite_rnd_1a6cc79f28d1026941dffddd9590586ef6" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>CBiteRnd</name></member>
      <member refid="class_c_bite_rnd_1afdb77334884f1a612780def0dec0a326" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>get</name></member>
      <member refid="class_c_bite_rnd_1a6ccc0608cbc9080d9509a0e4c483adfe" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getBit</name></member>
      <member refid="class_c_bite_rnd_1a3f6c22ff1f6f19de24f7c837530f31c4" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getGaussian</name></member>
      <member refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getInt</name></member>
      <member refid="class_c_bite_rnd_1a5ca4595f6d0ef48367ad0ee06b337bf3" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getLog</name></member>
      <member refid="class_c_bite_rnd_1ab5e3f4ddf78ebb400f3ddd6dd7ddf016" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getLogInt</name></member>
      <member refid="class_c_bite_rnd_1aa4c960b792982f495cc19c04ad9c2705" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getPow</name></member>
      <member refid="class_c_bite_rnd_1adca97316ecce595b9175815493f7a3a2" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getPowInt</name></member>
      <member refid="class_c_bite_rnd_1a6e9234ff0489b0d3d38ef71be159b34d" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getRaw</name></member>
      <member refid="class_c_bite_rnd_1aabbf1ffd535ca8fe31fda768f15ccd1b" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getSqr</name></member>
      <member refid="class_c_bite_rnd_1ab73d2c6a6e4c1f5da7441168f165529d" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getSqrInt</name></member>
      <member refid="class_c_bite_rnd_1a97eb8d3dce6693178a1f54cf4a076fd0" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>getTPDF</name></member>
      <member refid="class_c_bite_rnd_1ab5b48a474edb75ca3c24f62b56e9a4ff" prot="protected" virt="non-virtual"><scope>CBiteRnd</scope><name>Hash</name></member>
      <member refid="class_c_bite_rnd_1a568e9d76b0dcac410bdb0292d1aef2e0" prot="public" virt="non-virtual"><scope>CBiteRnd</scope><name>init</name></member>
      <member refid="class_c_bite_rnd_1ae34e558692230f33fe667766c67c1856" prot="protected" virt="non-virtual"><scope>CBiteRnd</scope><name>lcg</name></member>
      <member refid="class_c_bite_rnd_1a44e318756bc7385e8924011349aa4f51" prot="protected" virt="non-virtual"><scope>CBiteRnd</scope><name>rdata</name></member>
      <member refid="class_c_bite_rnd_1a008bb9aa42951c18a447c999800e0f60" prot="protected" virt="non-virtual"><scope>CBiteRnd</scope><name>rf</name></member>
      <member refid="class_c_bite_rnd_1af5a87e0a942d6232222aafc648ed511c" prot="protected" virt="non-virtual"><scope>CBiteRnd</scope><name>Seed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

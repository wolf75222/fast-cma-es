<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1optimizer_1_1_cma__awm" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::optimizer::Cma_awm</compoundname>
    <basecompoundref refid="classfcmaes_1_1optimizer_1_1_optimizer" prot="public" virt="non-virtual">fcmaes.optimizer.Optimizer</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__awm_1adfed8224a61810107b7df8908a1872cb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_awm::popsize</definition>
        <argsstring></argsstring>
        <name>popsize</name>
        <qualifiedname>fcmaes.optimizer.Cma_awm.popsize</qualifiedname>
        <initializer>=  popsize</initializer>
        <briefdescription>
<para>Size of the population used in the optimization process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1747" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1747" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" compoundref="benchmark__gtop__pygmo_8py" startline="103" endline="118">examples.benchmark_gtop_pygmo.Cma_pyg.minimize</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" compoundref="benchmark__gtop__pygmo_8py" startline="127" endline="137">examples.benchmark_gtop_pygmo.De_pyg.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388" compoundref="optimizer_8py" startline="2418" endline="2431">fcmaes.optimizer.De_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" compoundref="optimizer_8py" startline="2858" endline="2864">fcmaes.optimizer.Differential_evolution.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__awm_1a9244263d6e7b2315ffa2f09b7fde5aac" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_awm::stop_fitness</definition>
        <argsstring></argsstring>
        <name>stop_fitness</name>
        <qualifiedname>fcmaes.optimizer.Cma_awm.stop_fitness</qualifiedname>
        <initializer>=  stop_fitness</initializer>
        <briefdescription>
<para>The fitness value at which the optimization process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1748" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1748" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__awm_1adcd113e9905647601dc5c7539a6eb4cb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_awm::guess</definition>
        <argsstring></argsstring>
        <name>guess</name>
        <qualifiedname>fcmaes.optimizer.Cma_awm.guess</qualifiedname>
        <initializer>=  guess</initializer>
        <briefdescription>
<para>Initial guess or solution provided to the optimizer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1749" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1749" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" compoundref="optimizer_8py" startline="2596" endline="2603">fcmaes.optimizer.Da_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__awm_1a03b189caddedc1bdd249597786622c12" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_awm::sdevs</definition>
        <argsstring></argsstring>
        <name>sdevs</name>
        <qualifiedname>fcmaes.optimizer.Cma_awm.sdevs</qualifiedname>
        <initializer>=  sdevs</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1750" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1750" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__awm_1ab41fe95321101071e337afb74b3fd7d6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_awm::workers</definition>
        <argsstring></argsstring>
        <name>workers</name>
        <qualifiedname>fcmaes.optimizer.Cma_awm.workers</qualifiedname>
        <initializer>=  workers</initializer>
        <briefdescription>
<para>Number of parallel workers utilized during optimization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1751" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1751" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5220a28c20ca5b96c1312ba25ee8e1eb" compoundref="optimizer_8py" startline="1933" endline="1965">fcmaes.optimizer.Cma_sep.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a339827fb8e27dd33fa0d38ee11829e7c" compoundref="optimizer_8py" startline="2072" endline="2084">fcmaes.optimizer.De_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__python_1aee98e8d42f4a5556e2bfcbca9208b325" compoundref="optimizer_8py" startline="2188" endline="2195">fcmaes.optimizer.De_python.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__awm_1a3393db059ecb730f3016c1c33287324e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_awm::continuous_space</definition>
        <argsstring></argsstring>
        <name>continuous_space</name>
        <qualifiedname>fcmaes.optimizer.Cma_awm.continuous_space</qualifiedname>
        <initializer>=  continuous_space</initializer>
        <briefdescription>
<para>Continuous constraints or ranges for the problem space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1752" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1752" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__awm_1af411add911152d8b4c3d25369f787955" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_awm::discrete_space</definition>
        <argsstring></argsstring>
        <name>discrete_space</name>
        <qualifiedname>fcmaes.optimizer.Cma_awm.discrete_space</qualifiedname>
        <initializer>=  discrete_space</initializer>
        <briefdescription>
<para>Discrete constraints or options for the problem space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1753" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1753" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" compoundref="optimizer_8py" startline="1792" endline="1826">fcmaes.optimizer.Cma_awm.minimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_cma__awm_1a9c298a21af035fd7f8527648a4483673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.Cma_awm.__init__</definition>
        <argsstring>(self, Optional[int] max_evaluations=50000, Optional[int] popsize=31, Optional[ArrayLike] guess=None, Optional[float] stop_fitness=-np.inf, Optional[Union[float, ArrayLike]] sdevs=None, continuous_space=None, discrete_space=None, Optional[int] workers=None)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.optimizer.Cma_awm.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <array>[int]</array>
          <defval>50000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <array>[int]</array>
          <defval>31</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional]</type>
          <declname>sdevs</declname>
          <array>[Union[float, ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1optimizer_1_1_cma__awm_1a3393db059ecb730f3016c1c33287324e" kindref="member">continuous_space</ref></type>
          <defname>continuous_space</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1optimizer_1_1_cma__awm_1af411add911152d8b4c3d25369f787955" kindref="member">discrete_space</ref></type>
          <defname>discrete_space</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>workers</declname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Initializes the CMA-ES optimizer with specific parameters for optimization tasks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of function evaluations allowed during the optimization process. Defaults to 50000. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the population used in the optimization. Defaults to 31. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess or solution for the optimizer. Defaults to None. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired fitness value to stop the optimization when achieved. Defaults to -np.inf. sdevs (Optional[Union[float, ArrayLike]]): Standard deviations for the initial search distribution. Defaults to None. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>continuous_space</parametername>
</parameternamelist>
<parameterdescription>
<para>Continuous space constraints for the optimization. Defaults to None. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discrete_space</parametername>
</parameternamelist>
<parameterdescription>
<para>Discrete space constraints for the optimization. Defaults to None. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workers</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of parallel workers to be used during optimization. Defaults to None. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1737" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1745" bodyend="1754"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[np.ndarray, float, int]</type>
        <definition> Tuple[np.ndarray, float, int] fcmaes.optimizer.Cma_awm.minimize</definition>
        <argsstring>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[Union[float, ArrayLike]] sdevs=0.3, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.optimizer.Cma_awm.minimize</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>guess</defname>
          <array>[Bounds]</array>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <defname>sdevs</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional]</type>
          <declname>sdevs</declname>
          <defname>rg</defname>
          <array>[Union[float, ArrayLike]</array>
          <defval>0.3</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>rg</declname>
          <defname>store</defname>
          <array>[Generator]</array>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>store</type>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Minimizes a given objective function using the CMAwM optimization algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method uses the Covariance Matrix Adaptation with Mirrored Sampling (CMAwM)
   to efficiently find the minimum of the given objective function within the defined
   bounds. It supports continuous and discrete spaces and allows for parallel evaluation
   of function calls when multiple workers are specified.


       fun (Callable[[ArrayLike], float]): The objective function to minimize.
           It takes an input array and returns a scalar fitness value.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The bounds within which to search for a solution. Must define lower (lb) and upper (ub) bounds for each dimension. guess (Optional[ArrayLike], optional): Initial guess for the optimization algorithm. If not provided, defaults to the value defined in the class or is sampled uniformly within the bounds. Defaults to None. sdevs (Optional[Union[float, ArrayLike]], optional): Standard deviations for initial distribution of solutions. Either a float for uniform deviations or an array matching the dimensionality of the problem. Defaults to 0.3. rg (Optional[Generator], optional): A random generator for sampling and reproducibility. Defaults to a predefined PCG64DXSM generator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional object or mechanism to store intermediate results; the specific usage of this parameter depends on the implementation. Defaults to None.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple[np.ndarray, float, int]: A tuple containing the best solution found (as an array), the corresponding fitness value (float), and the total number of evaluations performed (int).</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ImportError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the required &quot;cmaes&quot; library is not installed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="1786" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1792" bodyend="1826"/>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1a3393db059ecb730f3016c1c33287324e" compoundref="optimizer_8py" startline="1752">fcmaes.optimizer.Cma_awm.continuous_space</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1af411add911152d8b4c3d25369f787955" compoundref="optimizer_8py" startline="1753">fcmaes.optimizer.Cma_awm.discrete_space</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1ad60e13f5cfc1f2c51e12bc24507708e9" compoundref="cmaes_8py" startline="204">fcmaes.cmaes.Cmaes.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1adcd113e9905647601dc5c7539a6eb4cb" compoundref="optimizer_8py" startline="1749">fcmaes.optimizer.Cma_awm.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c" compoundref="optimizer_8py" startline="1362">fcmaes.optimizer.Cma_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__lw_1abd9e72f56c6e5b5b1fbe57bd16691589" compoundref="optimizer_8py" startline="1611">fcmaes.optimizer.Cma_lw.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a91b1661ab6194b9f03f1bc5eb95195e0" compoundref="optimizer_8py" startline="1473">fcmaes.optimizer.Cma_orig.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a" compoundref="optimizer_8py" startline="1233">fcmaes.optimizer.Cma_python.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1af4d308e51cb40add76e8a257dc54e634" compoundref="optimizer_8py" startline="902">fcmaes.optimizer.Crfmnes.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a01fc558e855be7732876a6e5facf3d1c" compoundref="optimizer_8py" startline="1003">fcmaes.optimizer.Crfmnes_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a3acb28558e183337fbc25d0f30dfc2a0" compoundref="optimizer_8py" startline="1116">fcmaes.optimizer.Pgpe_cpp.guess</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1ae9bf236b9972f1dbb22e45c0938591b3" compoundref="cmaes_8py" startline="241">fcmaes.cmaes.Cmaes.max_evaluations</references>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" compoundref="optimizer_8py" startline="290">fcmaes.optimizer.Optimizer.max_evaluations</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df" compoundref="cmaes_8py" startline="223">fcmaes.cmaes.Cmaes.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" compoundref="cmaescpp_8py" startline="238">fcmaes.cmaescpp.ACMA_C.popsize</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" compoundref="crfmnescpp_8py" startline="221">fcmaes.crfmnescpp.CRFMNES_C.popsize</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1ac57257a177f51fb2637120cc3bf7ac55" compoundref="de_8py" startline="305">fcmaes.de.DE.popsize</references>
        <references refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad122a7d34bd51afeb06228ad811f85ce" compoundref="decpp_8py" startline="293">fcmaes.decpp.DE_C.popsize</references>
        <references refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6" compoundref="mode_8py" startline="487">fcmaes.mode.MODE.popsize</references>
        <references refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ac85826131061fe5596f9420ff628f582" compoundref="modecpp_8py" startline="404">fcmaes.modecpp.MODE_C.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1adfed8224a61810107b7df8908a1872cb" compoundref="optimizer_8py" startline="1747">fcmaes.optimizer.Cma_awm.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578" compoundref="optimizer_8py" startline="1359">fcmaes.optimizer.Cma_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a1861ff82b2a8709da57f19cb75a483ce" compoundref="optimizer_8py" startline="1609">fcmaes.optimizer.Cma_lw.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a90f09477ed9000f2c20750fa9ac73ed5" compoundref="optimizer_8py" startline="1471">fcmaes.optimizer.Cma_orig.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371" compoundref="optimizer_8py" startline="1230">fcmaes.optimizer.Cma_python.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1abf110ededa79f1101d0acefadef018f8" compoundref="optimizer_8py" startline="900">fcmaes.optimizer.Crfmnes.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1adf8a89f1eba94649ba1fbafd89e68ba8" compoundref="optimizer_8py" startline="1001">fcmaes.optimizer.Crfmnes_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1ad8bb83e394a209e90761b1d77b424e47" compoundref="optimizer_8py" startline="1114">fcmaes.optimizer.Pgpe_cpp.popsize</references>
        <references refid="classfcmaes_1_1evaluator_1_1_evaluator_1ae804d4d3f546dd5277b8592560a820db" compoundref="evaluator_8py" startline="220">fcmaes.evaluator.Evaluator.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1ab41fe95321101071e337afb74b3fd7d6" compoundref="optimizer_8py" startline="1751">fcmaes.optimizer.Cma_awm.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ada69629e32dd255e9ae77bdc81803f7e" compoundref="optimizer_8py" startline="1367">fcmaes.optimizer.Cma_cpp.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a76927f85115786da386af8ac5a0620ce" compoundref="optimizer_8py" startline="1613">fcmaes.optimizer.Cma_lw.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a4186bbe66760780ba88e32a2343cc8ca" compoundref="optimizer_8py" startline="1236">fcmaes.optimizer.Cma_python.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1a3dbb8d59213de71c0f3b5b9b74c3751b" compoundref="optimizer_8py" startline="904">fcmaes.optimizer.Crfmnes.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a8407a495267d4a58ad2b1364eb49b79e" compoundref="optimizer_8py" startline="1005">fcmaes.optimizer.Crfmnes_cpp.workers</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a8862c3af607ca2bb3c07bbef226691aa" compoundref="optimizer_8py" startline="1118">fcmaes.optimizer.Pgpe_cpp.workers</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fcmaes.optimizer.Cma_awm</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__awm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.optimizer.Cma_awm</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__awm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/optimizer.py" line="1690" column="1" bodyfile="fcmaes/optimizer.py" bodystart="1690" bodyend="1840"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__awm_1a9c298a21af035fd7f8527648a4483673" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__awm_1a3393db059ecb730f3016c1c33287324e" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>continuous_space</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__awm_1af411add911152d8b4c3d25369f787955" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>discrete_space</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>get_count_runs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__awm_1adcd113e9905647601dc5c7539a6eb4cb" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>guess</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>max_eval_num</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>max_evaluations</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__awm_1aeae1df11cb00effaafd1a0bde69ea5e0" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>minimize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>name</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__awm_1adfed8224a61810107b7df8908a1872cb" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>popsize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__awm_1a03b189caddedc1bdd249597786622c12" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>sdevs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__awm_1a9244263d6e7b2315ffa2f09b7fde5aac" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>stop_fitness</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__awm_1ab41fe95321101071e337afb74b3fd7d6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_awm</scope><name>workers</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

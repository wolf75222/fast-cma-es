<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1optimizer_1_1_da__cpp" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::optimizer::Da_cpp</compoundname>
    <basecompoundref refid="classfcmaes_1_1optimizer_1_1_optimizer" prot="public" virt="non-virtual">fcmaes.optimizer.Optimizer</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_da__cpp_1a1ee5e02f5bdc6f640595c081eb01c230" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Da_cpp::stop_fitness</definition>
        <argsstring></argsstring>
        <name>stop_fitness</name>
        <qualifiedname>fcmaes.optimizer.Da_cpp.stop_fitness</qualifiedname>
        <initializer>=  stop_fitness</initializer>
        <briefdescription>
<para>Defines the stopping fitness value. </para>
        </briefdescription>
        <detaileddescription>
<para>If the objective </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2557" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2557" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_da__cpp_1acb3f2d082778319925251a69518fa25a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Da_cpp::use_local_search</definition>
        <argsstring></argsstring>
        <name>use_local_search</name>
        <qualifiedname>fcmaes.optimizer.Da_cpp.use_local_search</qualifiedname>
        <initializer>=  use_local_search</initializer>
        <briefdescription>
<para>Indicates whether local search should be utilized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2558" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2558" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" compoundref="optimizer_8py" startline="2596" endline="2603">fcmaes.optimizer.Da_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_da__cpp_1adb6bcafec8f433b6d7971da3c9bad807" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Da_cpp::guess</definition>
        <argsstring></argsstring>
        <name>guess</name>
        <qualifiedname>fcmaes.optimizer.Da_cpp.guess</qualifiedname>
        <initializer>=  guess</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2559" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2559" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" compoundref="optimizer_8py" startline="2596" endline="2603">fcmaes.optimizer.Da_cpp.minimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_da__cpp_1a6041f0fa9c49b4908d638bc2c502b7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.Da_cpp.__init__</definition>
        <argsstring>(self, Optional[int] max_evaluations=50000, Optional[float] stop_fitness=-np.inf, Optional[bool] use_local_search=True, Optional[ArrayLike] guess=None)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.optimizer.Da_cpp.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <array>[int]</array>
          <defval>50000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>use_local_search</declname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Initializes the optimizer with given parameters and defaults. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This constructor sets up the optimizer with options for a maximum number of
   evaluations, a stopping fitness threshold, a toggle for local search, and
   an optional initial guess. These parameters guide the optimizer&apos;s behavior
   during its execution.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of evaluations permissible for the optimization process. Defaults to 50000. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_fitness" kindref="compound">Fitness</ref> value at which the optimization process should stop. Defaults to negative infinity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_local_search</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean indicating whether to enable local search. Defaults to True. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess or starting point for the optimization process. Can be provided as an array-like structure. Defaults to None. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2551" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2555" bodyend="2560"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[np.ndarray, float, int]</type>
        <definition> Tuple[np.ndarray, float, int] fcmaes.optimizer.Da_cpp.minimize</definition>
        <argsstring>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, rg=Generator(PCG64DXSM()), store=None)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.optimizer.Da_cpp.minimize</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>guess</defname>
          <array>[Bounds]</array>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <defname>sdevs</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>sdevs</declname>
          <defname>rg</defname>
          <array>[float]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>rg</type>
          <defname>store</defname>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>store</type>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Minimizes an objective function within given bounds using a stochastic optimization method. </para>
        </briefdescription>
        <detaileddescription>
<para>This function attempts to find the minimum of the provided objective function by exploring the parameter space defined by the given bounds. An optional initial guess can be provided to start the optimization at a specific point. The function uses a random number generator for stochasticity during optimization. The result includes the optimal point, the optimal function value, and the number of function evaluations.</para>
<para><verbatim>       fun (Callable[[ArrayLike], float]): The objective function to minimize.
           It must take an array-like input and return a float.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The bounds for the variables as a Bounds object. Defines the search space for the optimization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional initial guess for the optimization. If not provided, a default guess specified by the class will be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sdevs</parametername>
</parameternamelist>
<parameterdescription>
<para>Standard deviation for some internal process. Ignored in the current implementation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>A random number generator instance for stochasticity during the optimization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>Storage or logging object used to keep track of evaluation counts or other optimization parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple[np.ndarray, float, int]: A tuple containing:<itemizedlist>
<listitem><para>The best solution found (as a numpy.ndarray).</para>
</listitem><listitem><para>The objective function value at the best solution.</para>
</listitem><listitem><para>The total number of function evaluations performed. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2590" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2596" bodyend="2603"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a329ccb4c8a17a35fec30a506495dee61" compoundref="advretry_8py" startline="784" endline="786">fcmaes.advretry.Store.get_count_runs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" compoundref="optimizer_8py" startline="320" endline="323">fcmaes.optimizer.Optimizer.get_count_runs</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1ad60e13f5cfc1f2c51e12bc24507708e9" compoundref="cmaes_8py" startline="204">fcmaes.cmaes.Cmaes.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a3c87ed72ee15e5bcd89e0e484ef980c8" compoundref="optimizer_8py" startline="2255">fcmaes.optimizer.Cma_ask_tell.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1adcd113e9905647601dc5c7539a6eb4cb" compoundref="optimizer_8py" startline="1749">fcmaes.optimizer.Cma_awm.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1ad4abbe5291e81a88cfcd2ac2017c540c" compoundref="optimizer_8py" startline="1362">fcmaes.optimizer.Cma_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__lw_1abd9e72f56c6e5b5b1fbe57bd16691589" compoundref="optimizer_8py" startline="1611">fcmaes.optimizer.Cma_lw.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a91b1661ab6194b9f03f1bc5eb95195e0" compoundref="optimizer_8py" startline="1473">fcmaes.optimizer.Cma_orig.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a9cbca3b1c1920f4cca037696a3d3143a" compoundref="optimizer_8py" startline="1233">fcmaes.optimizer.Cma_python.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a4357690ffebc7f4f1467a31db2371194" compoundref="optimizer_8py" startline="1895">fcmaes.optimizer.Cma_sep.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1af4d308e51cb40add76e8a257dc54e634" compoundref="optimizer_8py" startline="902">fcmaes.optimizer.Crfmnes.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a01fc558e855be7732876a6e5facf3d1c" compoundref="optimizer_8py" startline="1003">fcmaes.optimizer.Crfmnes_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_da__cpp_1adb6bcafec8f433b6d7971da3c9bad807" compoundref="optimizer_8py" startline="2559">fcmaes.optimizer.Da_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__cpp_1a8a7c5c4f984128d0bf719d2042b5b6e4" compoundref="optimizer_8py" startline="2032">fcmaes.optimizer.De_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a3acb28558e183337fbc25d0f30dfc2a0" compoundref="optimizer_8py" startline="1116">fcmaes.optimizer.Pgpe_cpp.guess</references>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" compoundref="optimizer_8py" startline="304" endline="307">fcmaes.optimizer.Optimizer.max_eval_num</references>
        <references refid="classfcmaes_1_1optimizer_1_1_da__cpp_1acb3f2d082778319925251a69518fa25a" compoundref="optimizer_8py" startline="2558">fcmaes.optimizer.Da_cpp.use_local_search</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents the <ref refid="classfcmaes_1_1optimizer_1_1_da__cpp" kindref="compound">Da_cpp</ref> optimization algorithm, a variant of the <ref refid="classfcmaes_1_1optimizer_1_1_optimizer" kindref="compound">Optimizer</ref> class. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides an interface to a differential evolution-based optimization algorithm implemented in the <computeroutput>dacpp</computeroutput> library. It allows customization of certain parameters such as the maximum number of evaluations, stopping fitness criteria, and whether local search should be applied. The optimizer can be used to find the minimum of a given objective function within specified bounds.</para>
<para><verbatim>       during the optimization process to refine results.
   guess (ArrayLike or None): Provides an optional initial guess for the
       optimization. If unspecified, no initial guess is used.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fcmaes.optimizer.Da_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_da__cpp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.optimizer.Da_cpp</label>
        <link refid="classfcmaes_1_1optimizer_1_1_da__cpp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/optimizer.py" line="2521" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2521" bodyend="2616"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1optimizer_1_1_da__cpp_1a6041f0fa9c49b4908d638bc2c502b7a0" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Da_cpp</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Da_cpp</scope><name>get_count_runs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_da__cpp_1adb6bcafec8f433b6d7971da3c9bad807" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Da_cpp</scope><name>guess</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Da_cpp</scope><name>max_eval_num</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Da_cpp</scope><name>max_evaluations</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Da_cpp</scope><name>minimize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Da_cpp</scope><name>name</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_da__cpp_1a1ee5e02f5bdc6f640595c081eb01c230" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Da_cpp</scope><name>stop_fitness</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_da__cpp_1acb3f2d082778319925251a69518fa25a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Da_cpp</scope><name>use_local_search</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_c_bite_sel_base" kind="class" language="C++" prot="public">
    <compoundname>CBiteSelBase</compoundname>
    <derivedcompoundref refid="class_c_bite_sel" prot="public" virt="non-virtual">CBiteSel&lt; 4 &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_c_bite_sel" prot="public" virt="non-virtual">CBiteSel&lt; 3 &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_c_bite_sel" prot="public" virt="non-virtual">CBiteSel&lt; 2 &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_c_bite_sel" prot="public" virt="non-virtual">CBiteSel&lt; tCount &gt;</derivedcompoundref>
    <includes refid="biteaux_8h" local="no">biteaux.h</includes>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_c_bite_sel_base_1a81268a0bafd308583dc5a525c51cd5e7" prot="protected" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int CBiteSelBase::SlotCount</definition>
        <argsstring></argsstring>
        <name>SlotCount</name>
        <qualifiedname>CBiteSelBase::SlotCount</qualifiedname>
        <initializer>= 5</initializer>
        <briefdescription>
<para>The number of choice vectors in use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="621" column="18" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="621" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ae8cab652e5ae42278ab060a3eb2513a2" compoundref="biteaux_8h" startline="543" endline="571">decr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" compoundref="biteaux_8h" startline="581" endline="590">select</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_c_bite_sel_base_1aa9533e60d72366596dad8fcbf1d58546" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteSelBase::Count</definition>
        <argsstring></argsstring>
        <name>Count</name>
        <qualifiedname>CBiteSelBase::Count</qualifiedname>
        <briefdescription>
<para>The number of choices in use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="622" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="622" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ad36767758d2812ffdaa59d074b30099f" compoundref="biteaux_8h" startline="399" endline="404">CBiteSelBase</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a29da0dce87d2b658c696a1094367ef85" compoundref="biteaux_8h" startline="480" endline="483">getChoiceCount</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1ae40825798948f1f8fb0f2e856001d81c" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteSelBase::SparseMul</definition>
        <argsstring></argsstring>
        <name>SparseMul</name>
        <qualifiedname>CBiteSelBase::SparseMul</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplier used to obtain an actual length of the choice vector. This multiplier replicates choices in the vector, increasing precision of the resulting PDF and its stability. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="623" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="623" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a8514c1122bad5eb24f3faecb3dde66dc" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteSelBase::CountSp</definition>
        <argsstring></argsstring>
        <name>CountSp</name>
        <qualifiedname>CBiteSelBase::CountSp</qualifiedname>
        <briefdescription>
<para>vector. </para>
        </briefdescription>
        <detaileddescription>
<para>= Count * SparseMul. The actual length of the choice </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="626" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="626" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" compoundref="biteaux_8h" startline="581" endline="590">select</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a861068aef7d05de32e3cf5b0b8cc9640" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteSelBase::CountSp1</definition>
        <argsstring></argsstring>
        <name>CountSp1</name>
        <qualifiedname>CBiteSelBase::CountSp1</qualifiedname>
        <briefdescription>
<para>= CountSp - 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="628" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="628" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ae8cab652e5ae42278ab060a3eb2513a2" compoundref="biteaux_8h" startline="543" endline="571">decr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a99f44ba4532f2f16cc0d347c8d8690dc" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteSelBase::AccumCoeff</definition>
        <argsstring></argsstring>
        <name>AccumCoeff</name>
        <qualifiedname>CBiteSelBase::AccumCoeff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slot score accumulator coefficient, depends on objective function&apos;s dimensions. Works as an &quot;inertia&quot; for the slot&apos;s score. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="629" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="629" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ae8cab652e5ae42278ab060a3eb2513a2" compoundref="biteaux_8h" startline="543" endline="571">decr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1aa1de251ac8527c6d77286c7aec210871" compoundref="biteaux_8h" startline="493" endline="534">incr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a74f1cdec6aa5ef6bfe2950371d7ad2b8" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CBiteSelBase::SlotAccums[SlotCount]</definition>
        <argsstring>[SlotCount]</argsstring>
        <name>SlotAccums</name>
        <qualifiedname>CBiteSelBase::SlotAccums</qualifiedname>
        <briefdescription>
<para>Slot score accumulators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="632" column="8" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="632" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ae8cab652e5ae42278ab060a3eb2513a2" compoundref="biteaux_8h" startline="543" endline="571">decr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1aa1de251ac8527c6d77286c7aec210871" compoundref="biteaux_8h" startline="493" endline="534">incr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a020042ee4772e7f05de9e2c31e44009e" prot="protected" static="no" mutable="no">
        <type>int *</type>
        <definition>int* CBiteSelBase::Sels[SlotCount]</definition>
        <argsstring>[SlotCount]</argsstring>
        <name>Sels</name>
        <qualifiedname>CBiteSelBase::Sels</qualifiedname>
        <briefdescription>
<para>Choice vectors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="633" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="633" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ae8cab652e5ae42278ab060a3eb2513a2" compoundref="biteaux_8h" startline="543" endline="571">decr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1aa1de251ac8527c6d77286c7aec210871" compoundref="biteaux_8h" startline="493" endline="534">incr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" compoundref="biteaux_8h" startline="581" endline="590">select</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a2cbe3935a3e6c218ad4ef402d45f43b3" prot="protected" static="no" mutable="no">
        <type>int *</type>
        <definition>int* CBiteSelBase::SelBuf</definition>
        <argsstring></argsstring>
        <name>SelBuf</name>
        <qualifiedname>CBiteSelBase::SelBuf</qualifiedname>
        <briefdescription>
<para>A singular buffer for Sels vectors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="634" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="634" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ad36767758d2812ffdaa59d074b30099f" compoundref="biteaux_8h" startline="399" endline="404">CBiteSelBase</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a7b8a0dd2ad7a7031bfa968ff52189ab4" compoundref="biteaux_8h" startline="406" endline="409">~CBiteSelBase</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a80e8dd1e42d0e8b1ed60c8a005be5cee" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteSelBase::SelBufCapacity</definition>
        <argsstring></argsstring>
        <name>SelBufCapacity</name>
        <qualifiedname>CBiteSelBase::SelBufCapacity</qualifiedname>
        <briefdescription>
<para>Capacity of SelBuf. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="635" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="635" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ad36767758d2812ffdaa59d074b30099f" compoundref="biteaux_8h" startline="399" endline="404">CBiteSelBase</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a90376539edbd802257bc22edd557dbe9" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteSelBase::Sel</definition>
        <argsstring></argsstring>
        <name>Sel</name>
        <qualifiedname>CBiteSelBase::Sel</qualifiedname>
        <briefdescription>
<para><ref refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" kindref="member">select()</ref> function calls. </para>
        </briefdescription>
        <detaileddescription>
<para>The latest selected choice. Available only after the </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="636" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="636" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ae8cab652e5ae42278ab060a3eb2513a2" compoundref="biteaux_8h" startline="543" endline="571">decr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a94dd22328f70ff750a5cf088dcc5f18a" compoundref="biteaux_8h" startline="596" endline="599">getSel</referencedby>
        <referencedby refid="class_c_bite_sel_base_1aa1de251ac8527c6d77286c7aec210871" compoundref="biteaux_8h" startline="493" endline="534">incr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" compoundref="biteaux_8h" startline="581" endline="590">select</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a96580bfdc4f144d3bb84edbf12f2e270" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteSelBase::Selp</definition>
        <argsstring></argsstring>
        <name>Selp</name>
        <qualifiedname>CBiteSelBase::Selp</qualifiedname>
        <briefdescription>
<para>The index of the choice in the Sels vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="638" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="638" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ae8cab652e5ae42278ab060a3eb2513a2" compoundref="biteaux_8h" startline="543" endline="571">decr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1aa1de251ac8527c6d77286c7aec210871" compoundref="biteaux_8h" startline="493" endline="534">incr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" compoundref="biteaux_8h" startline="581" endline="590">select</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a26c67f4680fbbb93c5041a82c5413936" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CBiteSelBase::Slot</definition>
        <argsstring></argsstring>
        <name>Slot</name>
        <qualifiedname>CBiteSelBase::Slot</qualifiedname>
        <briefdescription>
<para>The current Sels vector, depending on incr/decr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="639" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="639" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1ae8cab652e5ae42278ab060a3eb2513a2" compoundref="biteaux_8h" startline="543" endline="571">decr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1aa1de251ac8527c6d77286c7aec210871" compoundref="biteaux_8h" startline="493" endline="534">incr</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" compoundref="biteaux_8h" startline="581" endline="590">select</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_bite_sel_base_1a3a4c0030d8667e0b827e703384266510" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CBiteSelBase::IsSelected</definition>
        <argsstring></argsstring>
        <name>IsSelected</name>
        <qualifiedname>CBiteSelBase::IsSelected</qualifiedname>
        <briefdescription>
<para>&quot;True&quot; if selection was recently made. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="640" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="640" bodyend="-1"/>
        <referencedby refid="class_c_bite_sel_base_1a2543edb14cb215f3738564da2a236f93" compoundref="biteaux_8h" startline="615" endline="618">getIsSelected</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" compoundref="biteaux_8h" startline="581" endline="590">select</referencedby>
        <referencedby refid="class_c_bite_sel_base_1a72e40d55a22571f3f55c977069aca42a" compoundref="biteaux_8h" startline="605" endline="608">unsetIsSelected</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_bite_sel_base_1ad36767758d2812ffdaa59d074b30099f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBiteSelBase::CBiteSelBase</definition>
        <argsstring>(const int aCount)</argsstring>
        <name>CBiteSelBase</name>
        <qualifiedname>CBiteSelBase::CBiteSelBase</qualifiedname>
        <param>
          <type>const int</type>
          <declname>aCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of possible choices, greater than 1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="399" column="1" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="399" bodyend="404"/>
        <references refid="class_c_bite_sel_base_1aa9533e60d72366596dad8fcbf1d58546" compoundref="biteaux_8h" startline="622">Count</references>
        <references refid="class_c_bite_sel_base_1a2cbe3935a3e6c218ad4ef402d45f43b3" compoundref="biteaux_8h" startline="634">SelBuf</references>
        <references refid="class_c_bite_sel_base_1a80e8dd1e42d0e8b1ed60c8a005be5cee" compoundref="biteaux_8h" startline="635">SelBufCapacity</references>
        <referencedby refid="class_c_bite_sel_1a925bccb88403ab45d066f7f88b5355d9" compoundref="biteaux_8h" startline="654" endline="657">CBiteSel&lt; tCount &gt;::CBiteSel</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_sel_base_1a7b8a0dd2ad7a7031bfa968ff52189ab4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CBiteSelBase::~CBiteSelBase</definition>
        <argsstring>()</argsstring>
        <name>~CBiteSelBase</name>
        <qualifiedname>CBiteSelBase::~CBiteSelBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="406" column="1" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="406" bodyend="409"/>
        <references refid="class_c_bite_sel_base_1a2cbe3935a3e6c218ad4ef402d45f43b3" compoundref="biteaux_8h" startline="634">SelBuf</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteSelBase::reset</definition>
        <argsstring>(CBiteRnd &amp;rnd, const int ParamCount)</argsstring>
        <name>reset</name>
        <qualifiedname>CBiteSelBase::reset</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>ParamCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function resets *this object, should be called before calling other functions, including after object&apos;s construction.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ParamCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of dimensions being optimized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="419" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="419" bodyend="474"/>
        <references refid="class_c_bite_sel_base_1a99f44ba4532f2f16cc0d347c8d8690dc" compoundref="biteaux_8h" startline="629">AccumCoeff</references>
        <references refid="class_c_bite_sel_base_1aa9533e60d72366596dad8fcbf1d58546" compoundref="biteaux_8h" startline="622">Count</references>
        <references refid="class_c_bite_sel_base_1a8514c1122bad5eb24f3faecb3dde66dc" compoundref="biteaux_8h" startline="626">CountSp</references>
        <references refid="class_c_bite_sel_base_1a861068aef7d05de32e3cf5b0b8cc9640" compoundref="biteaux_8h" startline="628">CountSp1</references>
        <references refid="class_c_bite_rnd_1a4e9ad0a5c5e09149a60f849736d8d7ce" compoundref="biteaux_8h" startline="126" endline="129">CBiteRnd::getInt</references>
        <references refid="class_c_bite_sel_base_1a3a4c0030d8667e0b827e703384266510" compoundref="biteaux_8h" startline="640">IsSelected</references>
        <references refid="class_c_bite_sel_base_1a2cbe3935a3e6c218ad4ef402d45f43b3" compoundref="biteaux_8h" startline="634">SelBuf</references>
        <references refid="class_c_bite_sel_base_1a80e8dd1e42d0e8b1ed60c8a005be5cee" compoundref="biteaux_8h" startline="635">SelBufCapacity</references>
        <references refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" compoundref="biteaux_8h" startline="581" endline="590">select</references>
        <references refid="class_c_bite_sel_base_1a020042ee4772e7f05de9e2c31e44009e" compoundref="biteaux_8h" startline="633">Sels</references>
        <references refid="class_c_bite_sel_base_1a26c67f4680fbbb93c5041a82c5413936" compoundref="biteaux_8h" startline="639">Slot</references>
        <references refid="class_c_bite_sel_base_1a74f1cdec6aa5ef6bfe2950371d7ad2b8" compoundref="biteaux_8h" startline="632">SlotAccums</references>
        <references refid="class_c_bite_sel_base_1a81268a0bafd308583dc5a525c51cd5e7" compoundref="biteaux_8h" startline="621">SlotCount</references>
        <references refid="class_c_bite_sel_base_1ae40825798948f1f8fb0f2e856001d81c" compoundref="biteaux_8h" startline="623">SparseMul</references>
        <referencedby refid="classexamples_1_1siemens_1_1_plant_1a4570217ffc213f931499ca5ca147819c" compoundref="siemens_8py" startline="142" endline="148">examples.siemens.Plant.simulate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_sel_base_1a29da0dce87d2b658c696a1094367ef85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteSelBase::getChoiceCount</definition>
        <argsstring>() const</argsstring>
        <name>getChoiceCount</name>
        <qualifiedname>CBiteSelBase::getChoiceCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An auxiliary function that returns choice count. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="480" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="480" bodyend="483"/>
        <references refid="class_c_bite_sel_base_1aa9533e60d72366596dad8fcbf1d58546" compoundref="biteaux_8h" startline="622">Count</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_sel_base_1aa1de251ac8527c6d77286c7aec210871" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteSelBase::incr</definition>
        <argsstring>(CBiteRnd &amp;rnd, const double v=1.0)</argsstring>
        <name>incr</name>
        <qualifiedname>CBiteSelBase::incr</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>v</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function should be called when a certain choice is successful. This function should only be called after a prior <ref refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" kindref="member">select()</ref> calls.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. May not be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Selection increment value (success score), [0; 1]. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="493" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="493" bodyend="534"/>
        <references refid="class_c_bite_sel_base_1a99f44ba4532f2f16cc0d347c8d8690dc" compoundref="biteaux_8h" startline="629">AccumCoeff</references>
        <references refid="class_c_bite_sel_base_1a90376539edbd802257bc22edd557dbe9" compoundref="biteaux_8h" startline="636">Sel</references>
        <references refid="class_c_bite_sel_base_1a96580bfdc4f144d3bb84edbf12f2e270" compoundref="biteaux_8h" startline="638">Selp</references>
        <references refid="class_c_bite_sel_base_1a020042ee4772e7f05de9e2c31e44009e" compoundref="biteaux_8h" startline="633">Sels</references>
        <references refid="class_c_bite_sel_base_1a26c67f4680fbbb93c5041a82c5413936" compoundref="biteaux_8h" startline="639">Slot</references>
        <references refid="class_c_bite_sel_base_1a74f1cdec6aa5ef6bfe2950371d7ad2b8" compoundref="biteaux_8h" startline="632">SlotAccums</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_sel_base_1ae8cab652e5ae42278ab060a3eb2513a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteSelBase::decr</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>decr</name>
        <qualifiedname>CBiteSelBase::decr</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function should be called when a certain choice is a failure. This function should only be called after a prior <ref refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" kindref="member">select()</ref> calls.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. May not be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="543" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="543" bodyend="571"/>
        <references refid="class_c_bite_sel_base_1a99f44ba4532f2f16cc0d347c8d8690dc" compoundref="biteaux_8h" startline="629">AccumCoeff</references>
        <references refid="class_c_bite_sel_base_1a861068aef7d05de32e3cf5b0b8cc9640" compoundref="biteaux_8h" startline="628">CountSp1</references>
        <references refid="class_c_bite_sel_base_1a90376539edbd802257bc22edd557dbe9" compoundref="biteaux_8h" startline="636">Sel</references>
        <references refid="class_c_bite_sel_base_1a96580bfdc4f144d3bb84edbf12f2e270" compoundref="biteaux_8h" startline="638">Selp</references>
        <references refid="class_c_bite_sel_base_1a020042ee4772e7f05de9e2c31e44009e" compoundref="biteaux_8h" startline="633">Sels</references>
        <references refid="class_c_bite_sel_base_1a26c67f4680fbbb93c5041a82c5413936" compoundref="biteaux_8h" startline="639">Slot</references>
        <references refid="class_c_bite_sel_base_1a74f1cdec6aa5ef6bfe2950371d7ad2b8" compoundref="biteaux_8h" startline="632">SlotAccums</references>
        <references refid="class_c_bite_sel_base_1a81268a0bafd308583dc5a525c51cd5e7" compoundref="biteaux_8h" startline="621">SlotCount</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteSelBase::select</definition>
        <argsstring>(CBiteRnd &amp;rnd)</argsstring>
        <name>select</name>
        <qualifiedname>CBiteSelBase::select</qualifiedname>
        <param>
          <type><ref refid="class_c_bite_rnd" kindref="compound">CBiteRnd</ref> &amp;</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function produces a random choice index based on the current *this object&apos;s state. Note that &quot;select&quot; functions can only be called once for a given *this object during the optimize() function call.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnd</parametername>
</parameternamelist>
<parameterdescription>
<para>PRNG object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="581" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="581" bodyend="590"/>
        <references refid="class_c_bite_sel_base_1a8514c1122bad5eb24f3faecb3dde66dc" compoundref="biteaux_8h" startline="626">CountSp</references>
        <references refid="class_c_bite_rnd_1adca97316ecce595b9175815493f7a3a2" compoundref="biteaux_8h" startline="236" endline="239">CBiteRnd::getPowInt</references>
        <references refid="class_c_bite_sel_base_1a3a4c0030d8667e0b827e703384266510" compoundref="biteaux_8h" startline="640">IsSelected</references>
        <references refid="class_c_bite_sel_base_1a90376539edbd802257bc22edd557dbe9" compoundref="biteaux_8h" startline="636">Sel</references>
        <references refid="class_c_bite_sel_base_1a96580bfdc4f144d3bb84edbf12f2e270" compoundref="biteaux_8h" startline="638">Selp</references>
        <references refid="class_c_bite_sel_base_1a020042ee4772e7f05de9e2c31e44009e" compoundref="biteaux_8h" startline="633">Sels</references>
        <references refid="class_c_bite_sel_base_1a26c67f4680fbbb93c5041a82c5413936" compoundref="biteaux_8h" startline="639">Slot</references>
        <references refid="class_c_bite_sel_base_1a81268a0bafd308583dc5a525c51cd5e7" compoundref="biteaux_8h" startline="621">SlotCount</references>
        <referencedby refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" compoundref="biteaux_8h" startline="419" endline="474">reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_sel_base_1a94dd22328f70ff750a5cf088dcc5f18a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CBiteSelBase::getSel</definition>
        <argsstring>() const</argsstring>
        <name>getSel</name>
        <qualifiedname>CBiteSelBase::getSel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns the latest made choice index. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="596" column="5" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="596" bodyend="599"/>
        <references refid="class_c_bite_sel_base_1a90376539edbd802257bc22edd557dbe9" compoundref="biteaux_8h" startline="636">Sel</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_sel_base_1a72e40d55a22571f3f55c977069aca42a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CBiteSelBase::unsetIsSelected</definition>
        <argsstring>()</argsstring>
        <name>unsetIsSelected</name>
        <qualifiedname>CBiteSelBase::unsetIsSelected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function sets IsSelected value to &quot;false&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="605" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="605" bodyend="608"/>
        <references refid="class_c_bite_sel_base_1a3a4c0030d8667e0b827e703384266510" compoundref="biteaux_8h" startline="640">IsSelected</references>
      </memberdef>
      <memberdef kind="function" id="class_c_bite_sel_base_1a2543edb14cb215f3738564da2a236f93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CBiteSelBase::getIsSelected</definition>
        <argsstring>() const</argsstring>
        <name>getIsSelected</name>
        <qualifiedname>CBiteSelBase::getIsSelected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function returns &quot;true&quot; if the selection was made since the recent increment or decrement. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/biteaux.h" line="615" column="6" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="615" bodyend="618"/>
        <references refid="class_c_bite_sel_base_1a3a4c0030d8667e0b827e703384266510" compoundref="biteaux_8h" startline="640">IsSelected</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Probabilistic selector class. Used to keep track of success of various choices. Updates probabilities of future choices based on the selection outcome.</para>
<para>The current implementation uses bubble-sort-alike method to update a sparse vector of possible choices. The selection is made as a weighted-random draw of a value from this vector. Previously, the class used simple statistical accumulation of optimization outcomes, to derive probabilites. The current approach is superior in that it has no &quot;memory effects&quot; associated with statistical accumulation.</para>
<para>The purpose of the class is to increase a chance of generating an acceptable solution. In practice, this class provides 10-15% more &quot;good&quot; solutions compared to uniformly-random choice selection. This, in turn, improves convergence smoothness and produces more diversity in outcomes in multiple solution attempts of complex multi-modal objective functions. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>CBiteSel&lt; tCount &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CBiteSel&lt; 2 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>CBiteSel&lt; 3 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>CBiteSel&lt; 4 &gt;</label>
        <link refid="class_c_bite_sel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; 4 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>CBiteSelBase</label>
        <link refid="class_c_bite_sel_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CBiteSelBase</label>
        <link refid="class_c_bite_sel_base"/>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/biteaux.h" line="390" column="1" bodyfile="_fcmaescpp/include/biteaux.h" bodystart="391" bodyend="641"/>
    <listofallmembers>
      <member refid="class_c_bite_sel_base_1a99f44ba4532f2f16cc0d347c8d8690dc" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>AccumCoeff</name></member>
      <member refid="class_c_bite_sel_base_1ad36767758d2812ffdaa59d074b30099f" prot="public" virt="non-virtual"><scope>CBiteSelBase</scope><name>CBiteSelBase</name></member>
      <member refid="class_c_bite_sel_base_1aa9533e60d72366596dad8fcbf1d58546" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>Count</name></member>
      <member refid="class_c_bite_sel_base_1a8514c1122bad5eb24f3faecb3dde66dc" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>CountSp</name></member>
      <member refid="class_c_bite_sel_base_1a861068aef7d05de32e3cf5b0b8cc9640" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>CountSp1</name></member>
      <member refid="class_c_bite_sel_base_1ae8cab652e5ae42278ab060a3eb2513a2" prot="public" virt="non-virtual"><scope>CBiteSelBase</scope><name>decr</name></member>
      <member refid="class_c_bite_sel_base_1a29da0dce87d2b658c696a1094367ef85" prot="public" virt="non-virtual"><scope>CBiteSelBase</scope><name>getChoiceCount</name></member>
      <member refid="class_c_bite_sel_base_1a2543edb14cb215f3738564da2a236f93" prot="public" virt="non-virtual"><scope>CBiteSelBase</scope><name>getIsSelected</name></member>
      <member refid="class_c_bite_sel_base_1a94dd22328f70ff750a5cf088dcc5f18a" prot="public" virt="non-virtual"><scope>CBiteSelBase</scope><name>getSel</name></member>
      <member refid="class_c_bite_sel_base_1aa1de251ac8527c6d77286c7aec210871" prot="public" virt="non-virtual"><scope>CBiteSelBase</scope><name>incr</name></member>
      <member refid="class_c_bite_sel_base_1a3a4c0030d8667e0b827e703384266510" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>IsSelected</name></member>
      <member refid="class_c_bite_sel_base_1a608b89514f2f4430e4e0a6ff6660c7cf" prot="public" virt="non-virtual"><scope>CBiteSelBase</scope><name>reset</name></member>
      <member refid="class_c_bite_sel_base_1a90376539edbd802257bc22edd557dbe9" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>Sel</name></member>
      <member refid="class_c_bite_sel_base_1a2cbe3935a3e6c218ad4ef402d45f43b3" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>SelBuf</name></member>
      <member refid="class_c_bite_sel_base_1a80e8dd1e42d0e8b1ed60c8a005be5cee" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>SelBufCapacity</name></member>
      <member refid="class_c_bite_sel_base_1a8057363e3d0feb4fc8e23957a8806245" prot="public" virt="non-virtual"><scope>CBiteSelBase</scope><name>select</name></member>
      <member refid="class_c_bite_sel_base_1a96580bfdc4f144d3bb84edbf12f2e270" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>Selp</name></member>
      <member refid="class_c_bite_sel_base_1a020042ee4772e7f05de9e2c31e44009e" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>Sels</name></member>
      <member refid="class_c_bite_sel_base_1a26c67f4680fbbb93c5041a82c5413936" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>Slot</name></member>
      <member refid="class_c_bite_sel_base_1a74f1cdec6aa5ef6bfe2950371d7ad2b8" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>SlotAccums</name></member>
      <member refid="class_c_bite_sel_base_1a81268a0bafd308583dc5a525c51cd5e7" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>SlotCount</name></member>
      <member refid="class_c_bite_sel_base_1ae40825798948f1f8fb0f2e856001d81c" prot="protected" virt="non-virtual"><scope>CBiteSelBase</scope><name>SparseMul</name></member>
      <member refid="class_c_bite_sel_base_1a72e40d55a22571f3f55c977069aca42a" prot="public" virt="non-virtual"><scope>CBiteSelBase</scope><name>unsetIsSelected</name></member>
      <member refid="class_c_bite_sel_base_1a7b8a0dd2ad7a7031bfa968ff52189ab4" prot="public" virt="non-virtual"><scope>CBiteSelBase</scope><name>~CBiteSelBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

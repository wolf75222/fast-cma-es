<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespacefcmaes_1_1pgpecpp" kind="namespace" language="Python">
    <compoundname>fcmaes::pgpecpp</compoundname>
    <innerclass refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c" prot="public">fcmaes::pgpecpp::PGPE_C</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1af8da1cbe352bc1a796e5f15d878647f2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.optimizePGPE_C</definition>
        <argsstring></argsstring>
        <name>optimizePGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.optimizePGPE_C</qualifiedname>
        <initializer>=  libcmalib.optimizePGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="410" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="410" bodyend="-1"/>
        <referencedby refid="namespacefcmaes_1_1pgpecpp_1ac26ca85a239168914a5e741b112af39f" compoundref="pgpecpp_8py" startline="129" endline="169">fcmaes.pgpecpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1af356a4b052dd645eb6858407c6c30cca" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>fcmaes.pgpecpp.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="411" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1aee73bd986018e30ab0fef7ab6f5d8b18" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.initPGPE_C</definition>
        <argsstring></argsstring>
        <name>initPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.initPGPE_C</qualifiedname>
        <initializer>=  libcmalib.initPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="419" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a5c33aa0b6c6e1fb0369e7516eacb5649" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>fcmaes.pgpecpp.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="427" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a03df7e468c547553701bf0f0dc702b4f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.destroyPGPE_C</definition>
        <argsstring></argsstring>
        <name>destroyPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.destroyPGPE_C</qualifiedname>
        <initializer>=  libcmalib.destroyPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="429" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="429" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a255b3fc3e61ebee7f65b20d63c6ba3d4" compoundref="pgpecpp_8py" startline="290" endline="292">fcmaes.pgpecpp.PGPE_C.__del__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a89e498c3d796b4113e670e638aa85163" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.askPGPE_C</definition>
        <argsstring></argsstring>
        <name>askPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.askPGPE_C</qualifiedname>
        <initializer>=  libcmalib.askPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="432" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="432" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a83964137647622f1ea94a90106b7fc85" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.tellPGPE_C</definition>
        <argsstring></argsstring>
        <name>tellPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.tellPGPE_C</qualifiedname>
        <initializer>=  libcmalib.tellPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="435" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="435" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a3d030c90af2ea816f60372c4f0bb98d5" compoundref="pgpecpp_8py" startline="334" endline="342">fcmaes.pgpecpp.PGPE_C.tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a3c39b0fa9cb8f471f226bc6916bf3a71" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.populationPGPE_C</definition>
        <argsstring></argsstring>
        <name>populationPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.populationPGPE_C</qualifiedname>
        <initializer>=  libcmalib.populationPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="439" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="439" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1pgpecpp_1a550fd833f381cfb0e882cdccfe52ef2a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::pgpecpp.resultPGPE_C</definition>
        <argsstring></argsstring>
        <name>resultPGPE_C</name>
        <qualifiedname>fcmaes.pgpecpp.resultPGPE_C</qualifiedname>
        <initializer>=  libcmalib.resultPGPE_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="442" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="442" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1a93ccd2d19bf80b6da653b292f276e94e" compoundref="pgpecpp_8py" startline="393" endline="407">fcmaes.pgpecpp.PGPE_C.result</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacefcmaes_1_1pgpecpp_1ac26ca85a239168914a5e741b112af39f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OptimizeResult</type>
        <definition> OptimizeResult fcmaes.pgpecpp.minimize</definition>
        <argsstring>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.1, Optional[int] popsize=32, Optional[int] max_evaluations=100000, Optional[int] workers=None, Optional[float] stop_fitness=-np.inf, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[bool] normalize=True, Optional[int] lr_decay_steps=1000, Optional[bool] use_ranking=True, Optional[float] center_learning_rate=0.15, Optional[float] stdev_learning_rate=0.1, Optional[float] stdev_max_change=0.2, Optional[float] b1=0.9, Optional[float] b2=0.999, Optional[float] eps=1e-8, Optional[float] decay_coef=1.0)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.pgpecpp.minimize</qualifiedname>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>x0</defname>
          <array>[Bounds]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>x0</declname>
          <defname>input_sigma</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional]</type>
          <declname>input_sigma</declname>
          <defname>popsize</defname>
          <array>[Union[float, ArrayLike, Callable]</array>
          <defval>0.1</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <defname>max_evaluations</defname>
          <array>[int]</array>
          <defval>32</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <defname>workers</defname>
          <array>[int]</array>
          <defval>100000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>workers</declname>
          <defname>stop_fitness</defname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <defname>rg</defname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>rg</declname>
          <defname>runid</defname>
          <array>[Generator]</array>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>runid</declname>
          <defname>normalize</defname>
          <array>[int]</array>
          <defval>0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>normalize</declname>
          <defname>lr_decay_steps</defname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>lr_decay_steps</declname>
          <defname>use_ranking</defname>
          <array>[int]</array>
          <defval>1000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>use_ranking</declname>
          <defname>center_learning_rate</defname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>center_learning_rate</declname>
          <defname>stdev_learning_rate</defname>
          <array>[float]</array>
          <defval>0.15</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stdev_learning_rate</declname>
          <defname>stdev_max_change</defname>
          <array>[float]</array>
          <defval>0.1</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stdev_max_change</declname>
          <defname>b1</defname>
          <array>[float]</array>
          <defval>0.2</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>b1</declname>
          <defname>b2</defname>
          <array>[float]</array>
          <defval>0.9</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>b2</declname>
          <defname>eps</defname>
          <array>[float]</array>
          <defval>0.999</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>eps</declname>
          <defname>decay_coef</defname>
          <array>[float]</array>
          <defval>1e-8</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>decay_coef</declname>
          <array>[float]</array>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Optimize a given objective function by minimizing its value using the PGPE (Policy Gradient with Parameter-based Exploration) method. </para>
        </briefdescription>
        <detaileddescription>
<para>This optimization approach uses parallel processing and supports both optional parameter normalization and adaptive learning rates for center and standard deviation.</para>
<para><verbatim>   fun (Callable[[ArrayLike], float]): Objective function to minimize. Must
       take a single input of type ArrayLike and return a float.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>Bounds for the variables. Should be specified as a tuple (lower_bounds, upper_bounds) or None for unbounded variables. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess for the variables. If None, random initialization will be applied within bounds if specified. input_sigma (Optional[Union[float, ArrayLike, Callable]]): Initial standard deviation for parameter sampling. Defaults to 0.1. Can be a scalar, array, or callable returning an array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Population size for sampling. Defaults to 32. If not specified or odd, it will be adjusted to the next even number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of function evaluations to perform. Defaults to 100000. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workers</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of parallel workers to use for evaluation. Defaults to None (no parallelism). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of fitness to stop early. If the objective reaches this value, the algorithm will terminate early. Defaults to -infinity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator to use during optimization. Defaults to Generator(PCG64DXSM()). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runid</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique identifier for the run. Useful for distinguishing runs in logging or debugging. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to normalize the input parameters for the optimizer. Defaults to True. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lr_decay_steps</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of steps for learning rate decay. Defaults to 1000. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_ranking</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to use ranking over raw fitness when calculating updates. Defaults to True. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center_learning_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Learning rate used to update the center. Defaults to 0.15. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stdev_learning_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Learning rate used to update the standard deviation. Defaults to 0.1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stdev_max_change</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum allowed change for standard deviation updates. Defaults to 0.2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b1</parametername>
</parameternamelist>
<parameterdescription>
<para>Exponential moving average factor for the first moment estimate during adaptive updates. Defaults to 0.9. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b2</parametername>
</parameternamelist>
<parameterdescription>
<para>Exponential moving average factor for the second moment estimate during adaptive updates. Defaults to 0.999. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps</parametername>
</parameternamelist>
<parameterdescription>
<para>Small term added to avoid division by zero in adaptive algorithms. Defaults to 1e-8. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decay_coef</parametername>
</parameternamelist>
<parameterdescription>
<para>Coefficient that controls decay in the learning rate updates. Defaults to 1.0.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>OptimizeResult An object containing optimization results, including the best parameters found (<computeroutput>x</computeroutput>), the objective value (<computeroutput>fun</computeroutput>) at those parameters, the number of function evaluations (<computeroutput>nfev</computeroutput>), the number of iterations (<computeroutput>nit</computeroutput>), the stopping status as an integer code (<computeroutput>status</computeroutput>), and a boolean success flag (<computeroutput>success</computeroutput>). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/pgpecpp.py" line="109" column="1" bodyfile="fcmaes/pgpecpp.py" bodystart="129" bodyend="169"/>
        <references refid="namespacefcmaes_1_1pgpecpp_1af8da1cbe352bc1a796e5f15d878647f2" compoundref="pgpecpp_8py" startline="410">fcmaes.pgpecpp.optimizePGPE_C</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="fcmaes/pgpecpp.py" line="1" column="1"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="anpcpc_8py" kind="file" language="Python">
    <compoundname>anpcpc.py</compoundname>
    <innerclass refid="classanpcpc_1_1_a_n_p_c_p_c" prot="public">anpcpc::ANPCPC</innerclass>
    <innernamespace refid="namespaceanpcpc">anpcpc</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceanpcpc_1a305ef4caca2dd08b64e982b1de410c65" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcpc.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>anpcpc.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcpc.py" line="29" column="1" bodyfile="examples/anpcp/anpcpc.py" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcpc_1af8e80f1693970acfb7792b645adde448" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcpc.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>anpcpc.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcpc.py" line="29" column="1" bodyfile="examples/anpcp/anpcpc.py" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcpc_1ac06a5b70ddcf2202ca5127f6d06fbcbd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcpc.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>anpcpc.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcpc.py" line="29" column="1" bodyfile="examples/anpcp/anpcpc.py" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcpc_1aa0eb3717747838dafe9f87910283b8e8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcpc.anpcpc</definition>
        <argsstring></argsstring>
        <name>anpcpc</name>
        <qualifiedname>anpcpc.anpcpc</qualifiedname>
        <initializer>=  ANPCPC(12, 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcpc.py" line="113" column="1" bodyfile="examples/anpcp/anpcpc.py" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcpc_1ab08cea8848a3e910b2167bd758b129b8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int anpcpc.max_evaluations</definition>
        <argsstring></argsstring>
        <name>max_evaluations</name>
        <qualifiedname>anpcpc.max_evaluations</qualifiedname>
        <initializer>=  100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcpc.py" line="116" column="1" bodyfile="examples/anpcp/anpcpc.py" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcpc_1a736b88f96bf165d1b09df84f4e39c799" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcpc.opt</definition>
        <argsstring></argsstring>
        <name>opt</name>
        <qualifiedname>anpcpc.opt</qualifiedname>
        <initializer>=  Bite_cpp(max_evaluations, M=6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcpc.py" line="117" column="1" bodyfile="examples/anpcp/anpcpc.py" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceanpcpc_1aebaa9deca41cafd15bede126256385ed" prot="public" static="no" mutable="no">
        <type></type>
        <definition>anpcpc.num_retries</definition>
        <argsstring></argsstring>
        <name>num_retries</name>
        <qualifiedname>anpcpc.num_retries</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcpc.py" line="119" column="1" bodyfile="examples/anpcp/anpcpc.py" bodystart="119" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceanpcpc_1a6d061093fd5f80bcbd737e82b3245a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>anpcpc.calc_distance_</definition>
        <argsstring>(users, facilities_x, facilities_y)</argsstring>
        <name>calc_distance_</name>
        <qualifiedname>anpcpc.calc_distance_</qualifiedname>
        <param>
          <type>users</type>
          <defname>users</defname>
        </param>
        <param>
          <type>facilities_x</type>
          <defname>facilities_x</defname>
        </param>
        <param>
          <type>facilities_y</type>
          <defname>facilities_y</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcpc.py" line="33" column="1" bodyfile="examples/anpcp/anpcpc.py" bodystart="33" bodyend="43"/>
        <referencedby refid="namespaceanpcpc_1a6f7639f06e2fed3d414229306a974296" compoundref="anpcpc_8py" startline="44" endline="50">anpcpc.fitness_</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceanpcpc_1a6f7639f06e2fed3d414229306a974296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>anpcpc.fitness_</definition>
        <argsstring>(facilities_x, facilities_y, users, alpha)</argsstring>
        <name>fitness_</name>
        <qualifiedname>anpcpc.fitness_</qualifiedname>
        <param>
          <type>facilities_x</type>
          <defname>facilities_x</defname>
        </param>
        <param>
          <type>facilities_y</type>
          <defname>facilities_y</defname>
        </param>
        <param>
          <type>users</type>
          <defname>users</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcpc.py" line="44" column="1" bodyfile="examples/anpcp/anpcpc.py" bodystart="44" bodyend="50"/>
        <references refid="namespaceanpcpc_1a6d061093fd5f80bcbd737e82b3245a72" compoundref="anpcpc_8py" startline="33" endline="43">anpcpc.calc_distance_</references>
        <referencedby refid="classanpcpc_1_1_a_n_p_c_p_c_1a1a9e91f15724d47e3ca531214abb18db" compoundref="anpcpc_8py" startline="96" endline="100">anpcpc.ANPCPC.fitness</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceanpcpc_1a40270bab751f1a6b11ea3f2e2859c9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>anpcpc.optimize</definition>
        <argsstring>(anpcpc, opt, num_retries=32)</argsstring>
        <name>optimize</name>
        <qualifiedname>anpcpc.optimize</qualifiedname>
        <param>
          <type>anpcpc</type>
          <defname>anpcpc</defname>
        </param>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>32</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/anpcp/anpcpc.py" line="101" column="1" bodyfile="examples/anpcp/anpcpc.py" bodystart="101" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceanpcpc" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/netotz/alpha-neighbor-p-center-problem/blob/main/README.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://www.researchgate.net/publication/257196448_Optimal_algorithms_for_the_a-neighbor_p-center_problem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>implements<sp/>a<sp/>continuous<sp/>variation<sp/>of<sp/>the<sp/>problem:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>We<sp/>don&apos;t<sp/>offer<sp/>a<sp/>set<sp/>of<sp/>facilities<sp/>to<sp/>choose<sp/>from.<sp/>Only<sp/>p,<sp/>the<sp/>number<sp/>of<sp/>chosen<sp/>facilities<sp/>is<sp/>given<sp/>and<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>search<sp/>for<sp/>optimal<sp/>coordinates.<sp/>Users<sp/>are<sp/>taken<sp/>from<sp/>the<sp/>TSP/JSON<sp/>files<sp/>as<sp/>before<sp/>and<sp/>the<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>of<sp/>the<sp/>coordinates<sp/>are<sp/>determined<sp/>using<sp/>the<sp/>facilities<sp/>defined<sp/>there.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Additionally<sp/>a<sp/>variant<sp/>is<sp/>implemented<sp/>(commented<sp/>out)<sp/>where<sp/>instead<sp/>of<sp/>the<sp/>alpha-best<sp/>we<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>use<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>best<sp/>alpha<sp/>distances.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Note<sp/>that<sp/>we<sp/>internally<sp/>use<sp/>the<sp/>square<sp/>of<sp/>the<sp/>distance<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>computation<sp/>of<sp/>the<sp/>distance<sp/>matrix.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Service.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json,<sp/>sys</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>njit</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bite_cpp,<sp/>Cma_cpp,<sp/>wrapper,<sp/>logger</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds<sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="29" refid="namespaceanpcpc_1af8e80f1693970acfb7792b645adde448" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="namespaceanpcpc_1a6d061093fd5f80bcbd737e82b3245a72" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceanpcpc_1a6d061093fd5f80bcbd737e82b3245a72" kindref="member">calc_distance_</ref>(users,<sp/>facilities_x,<sp/>facilities_y):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>np.zeros((len(users),<sp/>len(facilities_x)))</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(users)):</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(facilities_x)):<sp/></highlight><highlight class="comment">#<sp/>round<sp/>to<sp/>next<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>users[i,0]<sp/>-<sp/>facilities_x[j]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>users[i,1]<sp/>-<sp/>facilities_y[j]</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>use<sp/>the<sp/>square<sp/>of<sp/>the<sp/>distance<sp/>because<sp/>it<sp/>is<sp/>faster<sp/>to<sp/>compute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance[i,j]<sp/>=<sp/>dx*dx<sp/>+<sp/>dy*dy<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distance<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="44" refid="namespaceanpcpc_1a6f7639f06e2fed3d414229306a974296" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceanpcpc_1a6f7639f06e2fed3d414229306a974296" kindref="member">fitness_</ref>(facilities_x,<sp/>facilities_y,<sp/>users,<sp/>alpha):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>distance<sp/>=<sp/><ref refid="namespaceanpcpc_1a6d061093fd5f80bcbd737e82b3245a72" kindref="member">calc_distance_</ref>(users,<sp/>facilities_x,<sp/>facilities_y)<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>partitioned<sp/>=<sp/>np.partition(distance,<sp/>alpha)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max([max(d[:alpha])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>partitioned])</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>variant<sp/>where<sp/>instead<sp/>of<sp/>the<sp/>alpha-best<sp/>we<sp/>use<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>best<sp/>alpha<sp/>distances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>max([np.sum(d[:alpha])<sp/>for<sp/>d<sp/>in<sp/>partitioned])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="classanpcpc_1_1_a_n_p_c_p_c" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classanpcpc_1_1_a_n_p_c_p_c" kindref="compound">ANPCPC</ref>():</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="classanpcpc_1_1_a_n_p_c_p_c_1aabecc1aef0611cd232b2ed831264bdd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aabecc1aef0611cd232b2ed831264bdd8" kindref="member">__init__</ref>(self,<sp/>p,<sp/>alpha):</highlight></codeline>
<codeline lineno="54" refid="classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823" kindref="member">p</ref><sp/>=<sp/>p</highlight></codeline>
<codeline lineno="55" refid="classanpcpc_1_1_a_n_p_c_p_c_1a56b43f80f56c4fe551c9898e9a9d3243" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a56b43f80f56c4fe551c9898e9a9d3243" kindref="member">alpha</ref><sp/>=<sp/>alpha</highlight></codeline>
<codeline lineno="56" refid="classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743" kindref="member">dim</ref><sp/>=<sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823" kindref="member">p</ref><sp/>*<sp/>2</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="classanpcpc_1_1_a_n_p_c_p_c_1a46599d8abb6d8e679b83469e854e287c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a46599d8abb6d8e679b83469e854e287c" kindref="member">init_json</ref>(self,<sp/>json_file):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(json_file)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>json_file:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anpcp<sp/>=<sp/>json.load(json_file)<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74" kindref="member">users</ref><sp/>=<sp/>anpcp[</highlight><highlight class="stringliteral">&apos;users&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="62" refid="classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8" kindref="member">facilities</ref><sp/>=<sp/>np.array(anpcp[</highlight><highlight class="stringliteral">&apos;facilities&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="63" refid="classanpcpc_1_1_a_n_p_c_p_c_1a2aa59723704620f5b355784f07170ed7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a2aa59723704620f5b355784f07170ed7" kindref="member">unum</ref><sp/>=<sp/>len(self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74" kindref="member">users</ref>)</highlight></codeline>
<codeline lineno="64" refid="classanpcpc_1_1_a_n_p_c_p_c_1a305e5bb644df3f478d65806ed9dc1fb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a305e5bb644df3f478d65806ed9dc1fb6" kindref="member">bounds</ref><sp/>=<sp/>Bounds([0]*self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743" kindref="member">dim</ref>,<sp/>[np.max(self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8" kindref="member">facilities</ref>)]*self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743" kindref="member">dim</ref>)<sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="classanpcpc_1_1_a_n_p_c_p_c_1a80f22fbf486b618f3a7ecd63c61a4649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a80f22fbf486b618f3a7ecd63c61a4649" kindref="member">init_tsp</ref>(self,<sp/>tsp_file):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(tsp_file)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>csvfile:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>csvfile.readlines()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>users<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facilities<sp/>=<sp/>[]<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>line.split()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(row)<sp/>!=<sp/>4<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>row[0][0].isdigit():</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords<sp/>=<sp/>np.array([float(row[1]),<sp/>float(row[2])])</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>row[3]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facilities.append(coords)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>users.append(coords)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74" kindref="member">users</ref><sp/>=<sp/>np.array(users)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8" kindref="member">facilities</ref><sp/>=<sp/>np.array(facilities)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a2aa59723704620f5b355784f07170ed7" kindref="member">unum</ref><sp/>=<sp/>len(self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74" kindref="member">users</ref>)</highlight></codeline>
<codeline lineno="83" refid="classanpcpc_1_1_a_n_p_c_p_c_1a68074d4d23b40c4fe5a825c4747ea9c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a68074d4d23b40c4fe5a825c4747ea9c8" kindref="member">fnum</ref><sp/>=<sp/>len(facilities)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a305e5bb644df3f478d65806ed9dc1fb6" kindref="member">bounds</ref><sp/>=<sp/>Bounds([0]*self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743" kindref="member">dim</ref>,<sp/>[np.max(self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8" kindref="member">facilities</ref>)]*self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743" kindref="member">dim</ref>)<sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="classanpcpc_1_1_a_n_p_c_p_c_1ac4f58722e70806a92094828b839f084e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcpc_1_1_a_n_p_c_p_c_1ac4f58722e70806a92094828b839f084e" kindref="member">random_x</ref>(self,<sp/>seed<sp/>=<sp/>123):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rng<sp/>=<sp/>np.random.default_rng(seed)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rng.random(self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aa104bc2fd75be43481e876db7cf03743" kindref="member">dim</ref>)<sp/>*<sp/>np.max(self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a67f7c175f43adf6eb0cc5edbecb651f8" kindref="member">facilities</ref>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classanpcpc_1_1_a_n_p_c_p_c_1a87fc9a0c27deed3382ad48e45e11b999" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a87fc9a0c27deed3382ad48e45e11b999" kindref="member">get_facilities</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facilities_x<sp/>=<sp/>x[:self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823" kindref="member">p</ref>]</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facilities_y<sp/>=<sp/>x[self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823" kindref="member">p</ref>:]</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array([[facilities_x[i],<sp/>facilities_y[i]]<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(facilities_x))])</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classanpcpc_1_1_a_n_p_c_p_c_1a1a9e91f15724d47e3ca531214abb18db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a1a9e91f15724d47e3ca531214abb18db" kindref="member">fitness</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facilities_x<sp/>=<sp/>x[:self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823" kindref="member">p</ref>]</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facilities_y<sp/>=<sp/>x[self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1aef8e71bd3ee7596a9c020743c950f823" kindref="member">p</ref>:]</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceanpcpc_1a6f7639f06e2fed3d414229306a974296" kindref="member">fitness_</ref>(facilities_x,<sp/>facilities_y,<sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a582ef32ec223eef096fffb6b01f35f74" kindref="member">users</ref>,<sp/>self.<ref refid="classanpcpc_1_1_a_n_p_c_p_c_1a56b43f80f56c4fe551c9898e9a9d3243" kindref="member">alpha</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="namespaceanpcpc_1a40270bab751f1a6b11ea3f2e2859c9b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceanpcpc_1a40270bab751f1a6b11ea3f2e2859c9b6" kindref="member">optimize</ref>(anpcpc,<sp/>opt,<sp/>num_retries<sp/>=<sp/>32):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>retry.minimize(<ref refid="classfcmaes_1_1optimizer_1_1wrapper" kindref="compound">wrapper</ref>(anpcpc.fitness),<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anpcpc.bounds,<sp/>num_retries<sp/>=<sp/>num_retries,<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer=opt)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;facility<sp/>locations<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>anpcpc.get_facilities(ret.x))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;value<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>np.sqrt(ret.fun))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>anpcpc<sp/>=<sp/>ANPCPC(6,<sp/>2)<sp/>#<sp/>p<sp/>=<sp/>6,<sp/>alpha<sp/>=<sp/>2<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>anpcpc.init_tsp(&apos;data/att48_36_12_4.anpcp.tsp&apos;)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>anpcpc<sp/>=<sp/>ANPCPC(12,<sp/>2)<sp/>#<sp/>p<sp/>=<sp/>12,<sp/>alpha<sp/>=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>anpcpc.init_tsp(&apos;data/rat783_588_195_4.anpcp.tsp&apos;)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="namespaceanpcpc_1aa0eb3717747838dafe9f87910283b8e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>anpcpc<sp/>=<sp/><ref refid="classanpcpc_1_1_a_n_p_c_p_c" kindref="compound">ANPCPC</ref>(12,<sp/>2)<sp/></highlight><highlight class="comment">#<sp/>p<sp/>=<sp/>12,<sp/>alpha<sp/>=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>anpcpc.init_tsp(</highlight><highlight class="stringliteral">&apos;data/rl1323_993_330_4.anpcp.tsp&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="namespaceanpcpc_1ab08cea8848a3e910b2167bd758b129b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>100000</highlight></codeline>
<codeline lineno="117" refid="namespaceanpcpc_1a736b88f96bf165d1b09df84f4e39c799" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>opt<sp/>=<sp/><ref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" kindref="compound">Bite_cpp</ref>(max_evaluations,<sp/>M=6)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>opt<sp/>=<sp/>Cma_cpp(max_evaluations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="namespaceanpcpc_1aebaa9deca41cafd15bede126256385ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceanpcpc_1a40270bab751f1a6b11ea3f2e2859c9b6" kindref="member">optimize</ref>(anpcpc,<sp/>opt,<sp/>num_retries<sp/>=<sp/>32)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/anpcp/anpcpc.py"/>
  </compounddef>
</doxygen>

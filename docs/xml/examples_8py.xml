<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="examples_8py" kind="file" language="Python">
    <compoundname>examples.py</compoundname>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1examples">examples::examples</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1examples_1ab2538f9cf4c77582114f6efe28430014" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::examples.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.examples.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/examples.py" line="21" column="1" bodyfile="examples/examples.py" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1examples_1a565e0290b45197b1fc7638ead21bba6f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::examples.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.examples.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/examples.py" line="21" column="1" bodyfile="examples/examples.py" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1examples_1a74987491d40e19ac395a5ec08ef3a5c0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::examples.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.examples.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/examples.py" line="21" column="1" bodyfile="examples/examples.py" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1examples_1a8b61d476c2c5fc57441de80202fc9be7" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::examples.problems</definition>
        <argsstring></argsstring>
        <name>problems</name>
        <qualifiedname>examples.examples.problems</qualifiedname>
        <initializer>=  [Cassini1(), Cassini2(), Rosetta(), Tandem(5), Messenger(), Gtoc1(), MessFull(), Sagas(), Cassini1minlp()]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/examples.py" line="24" column="1" bodyfile="examples/examples.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1examples_1aa42696fc3de024f11015d9bcf9e3ff7b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::examples.max_evals</definition>
        <argsstring></argsstring>
        <name>max_evals</name>
        <qualifiedname>examples.examples.max_evals</qualifiedname>
        <initializer>=  50000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/examples.py" line="26" column="1" bodyfile="examples/examples.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1examples_1ae14817ef6a8b1bd0a154a0375cefda61" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::examples.algos</definition>
        <argsstring></argsstring>
        <name>algos</name>
        <qualifiedname>examples.examples.algos</qualifiedname>
        <initializer>=  [ de_cma(max_evals), crfmnes_bite(max_evals), de_crfmnes(max_evals), da_cma(max_evals), Cma_cpp(max_evals), De_cpp(max_evals),
          Da_cpp(max_evals), Bite_cpp(max_evals), Dual_annealing(max_evals), Differential_evolution(max_evals)]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/examples.py" line="28" column="1" bodyfile="examples/examples.py" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1examples_1a89bf5fd91d6193ce7f87fd23624ccbda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.examples.test_all</definition>
        <argsstring>(num_retries=320, num=1)</argsstring>
        <name>test_all</name>
        <qualifiedname>examples.examples.test_all</qualifiedname>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>320</defval>
        </param>
        <param>
          <type>num</type>
          <defname>num</defname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/examples.py" line="33" column="1" bodyfile="examples/examples.py" bodystart="33" bodyend="37"/>
        <references refid="namespaceexamples_1_1examples_1aa1b20c9243f3ec91c6265811bb3dd8a8" compoundref="examples_8py" startline="38" endline="44">examples.examples._test_optimizer</references>
        <referencedby refid="namespaceexamples_1_1examples_1ac7178a19ba2e34dfe2f03d3165a9a84e" compoundref="examples_8py" startline="45" endline="48">examples.examples.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1examples_1aa1b20c9243f3ec91c6265811bb3dd8a8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.examples._test_optimizer</definition>
        <argsstring>(opt, problem, num_retries=32, num=1)</argsstring>
        <name>_test_optimizer</name>
        <qualifiedname>examples.examples._test_optimizer</qualifiedname>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>32</defval>
        </param>
        <param>
          <type>num</type>
          <defname>num</defname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/examples.py" line="38" column="1" bodyfile="examples/examples.py" bodystart="38" bodyend="44"/>
        <referencedby refid="namespaceexamples_1_1examples_1a89bf5fd91d6193ce7f87fd23624ccbda" compoundref="examples_8py" startline="33" endline="37">examples.examples.test_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1examples_1ac7178a19ba2e34dfe2f03d3165a9a84e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.examples.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <qualifiedname>examples.examples.main</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/examples.py" line="45" column="1" bodyfile="examples/examples.py" bodystart="45" bodyend="48"/>
        <references refid="namespaceexamples_1_1examples_1ac7178a19ba2e34dfe2f03d3165a9a84e" compoundref="examples_8py" startline="45" endline="48">examples.examples.main</references>
        <references refid="namespaceexamples_1_1examples_1a89bf5fd91d6193ce7f87fd23624ccbda" compoundref="examples_8py" startline="33" endline="37">examples.examples.test_all</references>
        <referencedby refid="namespaceexamples_1_1examples_1ac7178a19ba2e34dfe2f03d3165a9a84e" compoundref="examples_8py" startline="45" endline="48">examples.examples.main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1examples" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Examples<sp/>for<sp/>fcmaes<sp/>parallel<sp/>retry<sp/>from<sp/>https://www.esa.int/gsp/ACT/projects/gtop/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Used<sp/>to<sp/>generate<sp/>the<sp/>results<sp/>in<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Results.adoc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1astro" kindref="compound">fcmaes.astro</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MessFull,<sp/>Messenger,<sp/>Gtoc1,<sp/>Cassini1,<sp/>Cassini2,<sp/>Rosetta,<sp/>Tandem,<sp/>Sagas,<sp/>Cassini1minlp</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>De_python,<sp/>De_ask_tell,<sp/>de_cma,<sp/>da_cma,<sp/>Cma_cpp,<sp/>Cma_python,<sp/>De_cpp,<sp/>Da_cpp,<sp/>Bite_cpp,<sp/>Crfmnes,<sp/>Crfmnes_cpp,<sp/>Pgpe_cpp,<sp/>de_crfmnes,<sp/>crfmnes_bite,<sp/>Dual_annealing,<sp/>Differential_evolution</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="21" refid="namespaceexamples_1_1examples_1a565e0290b45197b1fc7638ead21bba6f" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="namespaceexamples_1_1examples_1a8b61d476c2c5fc57441de80202fc9be7" refkind="member"><highlight class="normal">problems<sp/>=<sp/>[<ref refid="classfcmaes_1_1astro_1_1_cassini1" kindref="compound">Cassini1</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_cassini2" kindref="compound">Cassini2</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_rosetta" kindref="compound">Rosetta</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_tandem" kindref="compound">Tandem</ref>(5),<sp/><ref refid="classfcmaes_1_1astro_1_1_messenger" kindref="compound">Messenger</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_gtoc1" kindref="compound">Gtoc1</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_mess_full" kindref="compound">MessFull</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_sagas" kindref="compound">Sagas</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_cassini1minlp" kindref="compound">Cassini1minlp</ref>()]</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="namespaceexamples_1_1examples_1aa42696fc3de024f11015d9bcf9e3ff7b" refkind="member"><highlight class="normal">max_evals<sp/>=<sp/>50000</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespaceexamples_1_1examples_1ae14817ef6a8b1bd0a154a0375cefda61" refkind="member"><highlight class="normal">algos<sp/>=<sp/>[<sp/>de_cma(max_evals),<sp/>crfmnes_bite(max_evals),<sp/>de_crfmnes(max_evals),<sp/>da_cma(max_evals),<sp/><ref refid="classfcmaes_1_1optimizer_1_1_cma__cpp" kindref="compound">Cma_cpp</ref>(max_evals),<sp/><ref refid="classfcmaes_1_1optimizer_1_1_de__cpp" kindref="compound">De_cpp</ref>(max_evals),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1optimizer_1_1_da__cpp" kindref="compound">Da_cpp</ref>(max_evals),<sp/><ref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" kindref="compound">Bite_cpp</ref>(max_evals),<sp/><ref refid="classfcmaes_1_1optimizer_1_1_dual__annealing" kindref="compound">Dual_annealing</ref>(max_evals),<sp/><ref refid="classfcmaes_1_1optimizer_1_1_differential__evolution" kindref="compound">Differential_evolution</ref>(max_evals)]</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">#algos<sp/>=<sp/>[<sp/>Cma_python(max_evals)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33" refid="namespaceexamples_1_1examples_1a89bf5fd91d6193ce7f87fd23624ccbda" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1examples_1a89bf5fd91d6193ce7f87fd23624ccbda" kindref="member">test_all</ref>(num_retries<sp/>=<sp/>320,<sp/>num<sp/>=<sp/>1):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>problem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>problems:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>algo<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>algos:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1examples_1aa1b20c9243f3ec91c6265811bb3dd8a8" kindref="member">_test_optimizer</ref>(algo,<sp/>problem,<sp/>num_retries,<sp/>num)<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="namespaceexamples_1_1examples_1aa1b20c9243f3ec91c6265811bb3dd8a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1examples_1aa1b20c9243f3ec91c6265811bb3dd8a8" kindref="member">_test_optimizer</ref>(opt,<sp/>problem,<sp/>num_retries<sp/>=<sp/>32,<sp/>num<sp/>=<sp/>1):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(problem.name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>opt.name)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>str(i+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>problem.name<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num<sp/>&gt;<sp/>1<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>problem.name</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry.minimize_plot(name,<sp/>opt,<sp/>problem.fun,<sp/>problem.bounds,<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.inf,<sp/>10.0,<sp/>num_retries)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="namespaceexamples_1_1examples_1ac7178a19ba2e34dfe2f03d3165a9a84e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1examples_1ac7178a19ba2e34dfe2f03d3165a9a84e" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1examples_1a89bf5fd91d6193ce7f87fd23624ccbda" kindref="member">test_all</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1examples_1ac7178a19ba2e34dfe2f03d3165a9a84e" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/examples.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="solo__mgar_8py" kind="file" language="Python">
    <compoundname>solo_mgar.py</compoundname>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1solo__mgar">examples::solo_mgar</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1solo__mgar_1ad80ce794be13973e648e88e898b15f55" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::solo_mgar.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.solo_mgar.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="43" column="1" bodyfile="examples/solo_mgar.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1solo__mgar_1a2e9f09869c9b5f20e4c9ce69cd138968" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::solo_mgar.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.solo_mgar.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="43" column="1" bodyfile="examples/solo_mgar.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1solo__mgar_1ade826ec0813c240a21aff7bab4d03a12" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::solo_mgar.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.solo_mgar.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="43" column="1" bodyfile="examples/solo_mgar.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1solo__mgar_1a5da2e7082f9e5edf20503277bb2647f7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::solo_mgar.ys</definition>
        <argsstring></argsstring>
        <name>ys</name>
        <qualifiedname>examples.solo_mgar.ys</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="183" column="1" bodyfile="examples/solo_mgar.py" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1solo__mgar_1a9587198ac3bbb25456c3249544bc5d6e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::solo_mgar.xs</definition>
        <argsstring></argsstring>
        <name>xs</name>
        <qualifiedname>examples.solo_mgar.xs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="183" column="1" bodyfile="examples/solo_mgar.py" bodystart="183" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1solo__mgar_1aa279c9f78f2ec004e4903d58ca983e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.solo_mgar.read_solutions</definition>
        <argsstring>(fname)</argsstring>
        <name>read_solutions</name>
        <qualifiedname>examples.solo_mgar.read_solutions</qualifiedname>
        <param>
          <type>fname</type>
          <defname>fname</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="46" column="1" bodyfile="examples/solo_mgar.py" bodystart="46" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1solo__mgar_1a1e0a732208df5c3b8f3702ae71c93015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.solo_mgar.verify</definition>
        <argsstring>(ys, xs)</argsstring>
        <name>verify</name>
        <qualifiedname>examples.solo_mgar.verify</qualifiedname>
        <param>
          <type>ys</type>
          <defname>ys</defname>
        </param>
        <param>
          <type>xs</type>
          <defname>xs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="72" column="1" bodyfile="examples/solo_mgar.py" bodystart="72" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1solo__mgar_1a19767315305fd46d53086fc0fe52085e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.solo_mgar.check_good_solution</definition>
        <argsstring>(x)</argsstring>
        <name>check_good_solution</name>
        <qualifiedname>examples.solo_mgar.check_good_solution</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="88" column="1" bodyfile="examples/solo_mgar.py" bodystart="88" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1solo__mgar_1a212c6d5afb67588b11013c8d2b8cc819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.solo_mgar.print_good_solutions</definition>
        <argsstring>(xs)</argsstring>
        <name>print_good_solutions</name>
        <qualifiedname>examples.solo_mgar.print_good_solutions</qualifiedname>
        <param>
          <type>xs</type>
          <defname>xs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="97" column="1" bodyfile="examples/solo_mgar.py" bodystart="97" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1solo__mgar_1aad03af6f9c89ae3a7a0bbdbab890adf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.solo_mgar.optimize</definition>
        <argsstring>()</argsstring>
        <name>optimize</name>
        <qualifiedname>examples.solo_mgar.optimize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="118" column="1" bodyfile="examples/solo_mgar.py" bodystart="118" bodyend="151"/>
        <referencedby refid="namespaceexamples_1_1solo__mgar_1acaf2dae83ca2b5af9010501f1a0dde2a" compoundref="solo__mgar_8py" startline="170" endline="179">examples.solo_mgar.optimize_pagmo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1solo__mgar_1a973fceab6e9884b725a995f604136e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.solo_mgar.archipelago</definition>
        <argsstring>()</argsstring>
        <name>archipelago</name>
        <qualifiedname>examples.solo_mgar.archipelago</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="152" column="1" bodyfile="examples/solo_mgar.py" bodystart="152" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1solo__mgar_1acaf2dae83ca2b5af9010501f1a0dde2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.solo_mgar.optimize_pagmo</definition>
        <argsstring>()</argsstring>
        <name>optimize_pagmo</name>
        <qualifiedname>examples.solo_mgar.optimize_pagmo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/solo_mgar.py" line="170" column="1" bodyfile="examples/solo_mgar.py" bodystart="170" bodyend="179"/>
        <references refid="namespaceexamples_1_1solo__mgar_1aad03af6f9c89ae3a7a0bbdbab890adf5" compoundref="solo__mgar_8py" startline="118" endline="151">examples.solo_mgar.optimize</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1solo__mgar" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>code<sp/>is<sp/>derived<sp/>from<sp/>https://github.com/esa/pykep/pull/127<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>originally<sp/>developed<sp/>by<sp/>Moritz<sp/>v.<sp/>Looz<sp/>@mlooz<sp/>.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>It<sp/>was<sp/>modified<sp/>following<sp/>suggestions<sp/>from<sp/>Waldemar<sp/>Martens<sp/>@MartensWaldemar_gitlab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Solar<sp/>orbiter<sp/>is<sp/>quite<sp/>a<sp/>challenge<sp/>for<sp/>state<sp/>of<sp/>the<sp/>art<sp/>optimizers,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>good<sp/>solutions<sp/>fulfilling<sp/>the<sp/>requirements<sp/>can<sp/>be<sp/>found<sp/>and<sp/>an<sp/>example<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>shown<sp/>in<sp/>check_good_solution()<sp/>.<sp/>At<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://gist.github.com/dietmarwo/86f24e1b9a702e18615b767e226e883f<sp/>you<sp/>may<sp/>find<sp/>good<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>for<sp/>this<sp/>and<sp/>two<sp/>other<sp/>solo<sp/>models.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://www.esa.int/Science_Exploration/Space_Science/Solar_Orbiter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Requires<sp/>pykep<sp/>which<sp/>needs<sp/>python<sp/>3.8,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Create<sp/>an<sp/>python<sp/>3.8<sp/>environment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>mamba<sp/>create<sp/>-n<sp/>env38<sp/>python=3.8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>conda<sp/>activate<sp/>env38</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Install<sp/>dependencies:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pip<sp/>install<sp/>pykep<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>math<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cos,<sp/>pi,<sp/>sin,<sp/>sqrt</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry,<sp/>advretry,<sp/>modecpp,<sp/>mode</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>de_cma,<sp/>single_objective,<sp/>de,<sp/>Bite_cpp</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pykep<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>RAD2DEG,<sp/>AU</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>solo_mgar_udp<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>solo_mgar_udp</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="43" refid="namespaceexamples_1_1solo__mgar_1a2e9f09869c9b5f20e4c9ce69cd138968" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespaceexamples_1_1solo__mgar_1aa279c9f78f2ec004e4903d58ca983e1b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1solo__mgar_1aa279c9f78f2ec004e4903d58ca983e1b" kindref="member">read_solutions</ref>(fname):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>[]<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(fname)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>csvfile:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>csvfile.readlines()</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>line.split(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(row)<sp/>&lt;<sp/>12:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys.append(float(row[0]))</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(</highlight><highlight class="keyword">True</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xi<sp/>=<sp/>row[i]</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>xi[-1].isdigit():</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xi<sp/>=<sp/>xi[:-1]</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(xi[0].isdigit()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>xi[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xi<sp/>=<sp/>xi[1:]</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.insert(0,<sp/>float(xi))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.insert(0,<sp/>float(xi))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-=<sp/>1</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs.append(x)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ys,<sp/>xs</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="namespaceexamples_1_1solo__mgar_1a1e0a732208df5c3b8f3702ae71c93015" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1solo__mgar_1a1e0a732208df5c3b8f3702ae71c93015" kindref="member">verify</ref>(ys,<sp/>xs):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(ys)):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solo_mgar<sp/>=<sp/><ref refid="classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp" kindref="compound">solo_mgar_udp</ref>([7000,<sp/>8000])<sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>ys[i]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>xs[i]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(x)<sp/>!=<sp/>10:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambert_legs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resonances<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solo_mgar._compute_dvs(x,<sp/>lambert_legs,<sp/>resonances)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resos<sp/>=<sp/>[reso._resonance<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>reso<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>resonances]</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>assert<sp/>resos0<sp/>==<sp/><sp/>resos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>solo_mgar.fitness(x)[0]</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(y0,<sp/>y,<sp/>y0-y)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>abs(y0<sp/>-<sp/>y<sp/>&lt;<sp/>0.23)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="namespaceexamples_1_1solo__mgar_1a19767315305fd46d53086fc0fe52085e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1solo__mgar_1a19767315305fd46d53086fc0fe52085e" kindref="member">check_good_solution</ref>(x):</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pygmo<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pg</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>solo_mgar<sp/>=<sp/><ref refid="classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp" kindref="compound">solo_mgar_udp</ref>([7000,<sp/>8000])<sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>pg.problem(solo_mgar)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(str(prob.fitness(x)))<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>solo_mgar.pretty(x)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>solo_mgar.plot(x)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>solo_mgar.plot_distance_and_flybys(x)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="namespaceexamples_1_1solo__mgar_1a212c6d5afb67588b11013c8d2b8cc819" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1solo__mgar_1a212c6d5afb67588b11013c8d2b8cc819" kindref="member">print_good_solutions</ref>(xs):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>functools<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>reduce</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(xs)):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solo_mgar<sp/>=<sp/><ref refid="classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp" kindref="compound">solo_mgar_udp</ref>([7000,<sp/>8000])<sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambert_legs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resos<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>xs[i]</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvt_outs,<sp/>rvt_ins,<sp/>rvt_pls,<sp/>_,<sp/>_<sp/>=<sp/>solo_mgar._compute_dvs(x,<sp/>lambert_legs,<sp/>resos)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#rvt_outs<sp/>=<sp/>[rvt.rotate(solo_mgar._rotation_axis,<sp/>solo_mgar._theta)<sp/>for<sp/>rvt<sp/>in<sp/>rvt_outs]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvt_out<sp/>=<sp/>rvt_outs[-1].rotate(solo_mgar._rotation_axis,<sp/>solo_mgar._theta)<sp/></highlight><highlight class="comment">#<sp/>rotate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>e,<sp/>incl,<sp/>_,<sp/>_,<sp/>_<sp/>=<sp/>rvt_out.kepler()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>orbit<sp/>should<sp/>be<sp/>as<sp/>polar<sp/>as<sp/>possible,<sp/>but<sp/>we<sp/>do<sp/>not<sp/>care<sp/>about<sp/>prograde/retrograde</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corrected_inclination<sp/>=<sp/>abs(abs(incl)<sp/>%<sp/>pi<sp/>-<sp/>pi<sp/>/<sp/>2)<sp/>*<sp/>RAD2DEG</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_perhelion<sp/>=<sp/>a<sp/>*<sp/>(1<sp/>-<sp/>e)<sp/>/<sp/>AU</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>solo_mgar.fitness(x)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resos<sp/>=<sp/>[str(resos[i]._resonance)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(resos))]</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resos<sp/>=<sp/>reduce((</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x,<sp/>y:<sp/>x<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>+<sp/>y),<sp/>resos)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(str(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(incl*RAD2DEG)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(final_perhelion)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>[&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(y[0]),<sp/></highlight><highlight class="stringliteral">&apos;,<sp/>[&apos;</highlight><highlight class="normal"><sp/>+<sp/>resos<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;],<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(x)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;],&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="namespaceexamples_1_1solo__mgar_1aad03af6f9c89ae3a7a0bbdbab890adf5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1solo__mgar_1aad03af6f9c89ae3a7a0bbdbab890adf5" kindref="member">optimize</ref>():<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>solo_mgar<sp/>=<sp/><ref refid="classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp" kindref="compound">solo_mgar_udp</ref>([7000,<sp/>8000])<sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">fun(x):</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solo_mgar.fitness(x)[0]</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1E99</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">mofun(x):</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solo_mgar.mo_fitness(x)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array([1E99]*6)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>solo_mgar.get_bounds()</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>logger.info(&apos;solar<sp/>orbiter&apos;<sp/>+<sp/>&apos;<sp/>de<sp/>-&gt;<sp/>cmaes<sp/>c++<sp/>smart<sp/>retry&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ret<sp/>=<sp/>advretry.minimize(fun,<sp/>bounds=Bounds(bounds[0],<sp/>bounds[1]),<sp/>num_retries<sp/>=<sp/>60000,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>optimizer=de_cma(2000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#optimizer=bite_cma(2000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;solar<sp/>orbiter&apos;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>BiteOpt<sp/>parallel<sp/>retry&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>retry.minimize(fun,<sp/>bounds=Bounds(bounds[0],<sp/>bounds[1]),<sp/>num_retries<sp/>=<sp/>32000,<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer=<ref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" kindref="compound">Bite_cpp</ref>(200000,<sp/>M=6))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>x,<sp/>y<sp/>=<sp/>modecpp.retry(mode.wrapper(mofun,<sp/>3,<sp/>interval<sp/>=<sp/>1000000000),<sp/>3,<sp/>3,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bounds(bounds[0],<sp/>bounds[1]),<sp/>popsize<sp/>=<sp/>128,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>300000,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsga_update=False,<sp/>num_retries<sp/>=<sp/>32000,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers=32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="namespaceexamples_1_1solo__mgar_1a973fceab6e9884b725a995f604136e91" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1solo__mgar_1a973fceab6e9884b725a995f604136e91" kindref="member">archipelago</ref>():<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pygmo<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pg<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>udp<sp/>=<sp/><ref refid="classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp" kindref="compound">solo_mgar_udp</ref>([7000,<sp/>8000])<sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#uda<sp/>=<sp/>pg.sga(gen<sp/>=<sp/>6000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>uda<sp/>=<sp/>pg.sade(memory=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,variant=1,gen=6000)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>instantiate<sp/>an<sp/>unconnected<sp/>archipelago</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1000):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archi<sp/>=<sp/>pg.archipelago(t<sp/>=<sp/>pg.topologies.unconnected())</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(32):</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alg<sp/>=<sp/>pg.algorithm(uda)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#alg.set_verbosity(1)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>pg.problem(udp)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>pg.population(prob,<sp/>20)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isl<sp/>=<sp/>pg.island(algo=alg,<sp/>pop=pop)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archi.push_back(isl)<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archi.evolve()</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archi.wait_check()</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="namespaceexamples_1_1solo__mgar_1acaf2dae83ca2b5af9010501f1a0dde2a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1solo__mgar_1acaf2dae83ca2b5af9010501f1a0dde2a" kindref="member">optimize_pagmo</ref>():<sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pygmo<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pg<sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>solo_mgar<sp/>=<sp/><ref refid="classexamples_1_1solo__mgar__udp_1_1solo__mgar__udp" kindref="compound">solo_mgar_udp</ref>([7000,<sp/>8000])<sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(6000):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob<sp/>=<sp/>pg.problem(solo_mgar)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>pg.population(prob=prob,<sp/>size=32)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alg<sp/>=<sp/>pg.algorithm(pg.sade(memory=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,gen=1))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>alg.evolve(pop)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(i,<sp/>pop.champion_f,<sp/>solo_mgar.fitness(pop.champion_x))</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1solo__mgar_1aad03af6f9c89ae3a7a0bbdbab890adf5" kindref="member">optimize</ref>()</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#archipelago()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="namespaceexamples_1_1solo__mgar_1a9587198ac3bbb25456c3249544bc5d6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ys,<sp/>xs<sp/>=<sp/><ref refid="namespaceexamples_1_1solo__mgar_1aa279c9f78f2ec004e4903d58ca983e1b" kindref="member">read_solutions</ref>(</highlight><highlight class="stringliteral">&apos;data/solo_results.txt&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print_good_solutions(xs)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#verify(ys,<sp/>xs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1solo__mgar_1a19767315305fd46d53086fc0fe52085e" kindref="member">check_good_solution</ref>(xs[0])<sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/solo_mgar.py"/>
  </compounddef>
</doxygen>

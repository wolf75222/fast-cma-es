<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="clustering_8py" kind="file" language="Python">
    <compoundname>clustering.py</compoundname>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1clustering">examples::clustering</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1clustering_1a43daad447827de3a0404f7d9f5846899" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::clustering.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.clustering.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="24" column="1" bodyfile="examples/clustering.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1clustering_1a11456775a0cb6c71d900fb46eb3f3624" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::clustering.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.clustering.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="24" column="1" bodyfile="examples/clustering.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1clustering_1af9ee0af2fb1bc0ae1e417d5721c1d689" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::clustering.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.clustering.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="24" column="1" bodyfile="examples/clustering.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1clustering_1a2c1a0f7c6153841d4c8aad2e493c98f2" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>int examples::clustering::distance_matrix</definition>
        <argsstring></argsstring>
        <name>distance_matrix</name>
        <qualifiedname>examples.clustering.distance_matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="27" column="1" bodyfile="examples/clustering.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1clustering_1a85ceb44b790fbcebb039824f122ca84b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::clustering.repeat</definition>
        <argsstring></argsstring>
        <name>repeat</name>
        <qualifiedname>examples.clustering.repeat</qualifiedname>
        <initializer>=  5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="71" column="1" bodyfile="examples/clustering.py" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1clustering_1a6db539b92ada28d4d19bff9faef164e1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::clustering.num_nodes</definition>
        <argsstring></argsstring>
        <name>num_nodes</name>
        <qualifiedname>examples.clustering.num_nodes</qualifiedname>
        <initializer>=  len(distance_matrix)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="76" column="1" bodyfile="examples/clustering.py" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1clustering_1a8a1cd579f497af72e82d3bc9795622e4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::clustering.num_groups</definition>
        <argsstring></argsstring>
        <name>num_groups</name>
        <qualifiedname>examples.clustering.num_groups</qualifiedname>
        <initializer>=  4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="79" column="1" bodyfile="examples/clustering.py" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1clustering_1a8d19357740cd283ce14597219d2a193f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::clustering.group_size</definition>
        <argsstring></argsstring>
        <name>group_size</name>
        <qualifiedname>examples.clustering.group_size</qualifiedname>
        <initializer>=  num_nodes // num_groups</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="80" column="1" bodyfile="examples/clustering.py" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1clustering_1a2b0696d94d5bb65cab882dc62228498a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.clustering.sum_distance</definition>
        <argsstring>(s)</argsstring>
        <name>sum_distance</name>
        <qualifiedname>examples.clustering.sum_distance</qualifiedname>
        <param>
          <type>s</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="83" column="1" bodyfile="examples/clustering.py" bodystart="83" bodyend="93"/>
        <referencedby refid="namespaceexamples_1_1clustering_1a14d4f9f604e631d0140dffffb4f2cae6" compoundref="clustering_8py" startline="97" endline="99">examples.clustering.fitness</referencedby>
        <referencedby refid="namespaceexamples_1_1clustering_1a2e4522195ee18b33c6e344d71e0ed39d" compoundref="clustering_8py" startline="100" endline="105">examples.clustering.show</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1clustering_1a3abfba0cdea4b88b27ef19171a4e8179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.clustering.unique</definition>
        <argsstring>(x)</argsstring>
        <name>unique</name>
        <qualifiedname>examples.clustering.unique</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="94" column="1" bodyfile="examples/clustering.py" bodystart="94" bodyend="96"/>
        <referencedby refid="namespaceexamples_1_1clustering_1a14d4f9f604e631d0140dffffb4f2cae6" compoundref="clustering_8py" startline="97" endline="99">examples.clustering.fitness</referencedby>
        <referencedby refid="namespaceexamples_1_1clustering_1a8de29e7cf2101e2d46966e6af4940e5f" compoundref="clustering_8py" startline="106" endline="113">examples.clustering.opt</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1clustering_1a14d4f9f604e631d0140dffffb4f2cae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.clustering.fitness</definition>
        <argsstring>(x)</argsstring>
        <name>fitness</name>
        <qualifiedname>examples.clustering.fitness</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="97" column="1" bodyfile="examples/clustering.py" bodystart="97" bodyend="99"/>
        <references refid="namespaceexamples_1_1clustering_1a2b0696d94d5bb65cab882dc62228498a" compoundref="clustering_8py" startline="83" endline="93">examples.clustering.sum_distance</references>
        <references refid="namespaceexamples_1_1clustering_1a3abfba0cdea4b88b27ef19171a4e8179" compoundref="clustering_8py" startline="94" endline="96">examples.clustering.unique</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1clustering_1a2e4522195ee18b33c6e344d71e0ed39d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.clustering.show</definition>
        <argsstring>(s)</argsstring>
        <name>show</name>
        <qualifiedname>examples.clustering.show</qualifiedname>
        <param>
          <type>s</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="100" column="1" bodyfile="examples/clustering.py" bodystart="100" bodyend="105"/>
        <references refid="namespaceexamples_1_1clustering_1a2b0696d94d5bb65cab882dc62228498a" compoundref="clustering_8py" startline="83" endline="93">examples.clustering.sum_distance</references>
        <referencedby refid="namespaceexamples_1_1clustering_1a8de29e7cf2101e2d46966e6af4940e5f" compoundref="clustering_8py" startline="106" endline="113">examples.clustering.opt</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1clustering_1a8de29e7cf2101e2d46966e6af4940e5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.clustering.opt</definition>
        <argsstring>()</argsstring>
        <name>opt</name>
        <qualifiedname>examples.clustering.opt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/clustering.py" line="106" column="1" bodyfile="examples/clustering.py" bodystart="106" bodyend="113"/>
        <references refid="namespaceexamples_1_1clustering_1a8de29e7cf2101e2d46966e6af4940e5f" compoundref="clustering_8py" startline="106" endline="113">examples.clustering.opt</references>
        <references refid="namespaceexamples_1_1clustering_1a2e4522195ee18b33c6e344d71e0ed39d" compoundref="clustering_8py" startline="100" endline="105">examples.clustering.show</references>
        <references refid="namespaceexamples_1_1clustering_1a3abfba0cdea4b88b27ef19171a4e8179" compoundref="clustering_8py" startline="94" endline="96">examples.clustering.unique</references>
        <referencedby refid="namespaceexamples_1_1clustering_1a8de29e7cf2101e2d46966e6af4940e5f" compoundref="clustering_8py" startline="106" endline="113">examples.clustering.opt</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1clustering" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;Cluster<sp/>200<sp/>cities<sp/>in<sp/>4<sp/>equal<sp/>groups<sp/>to<sp/>minimize<sp/>sum<sp/>of<sp/>crossed<sp/>distances.</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">Derived<sp/>from<sp/>https://github.com/google/or-tools/blob/stable/examples/python/clustering_sat.py</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">Please<sp/>also<sp/>try<sp/>the<sp/>original<sp/>with<sp/>200<sp/>cities.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Clustering.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>njit</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numba</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bite_cpp,<sp/>wrapper</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="24" refid="namespaceexamples_1_1clustering_1a11456775a0cb6c71d900fb46eb3f3624" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27" refid="namespaceexamples_1_1clustering_1a2c1a0f7c6153841d4c8aad2e493c98f2" refkind="member"><highlight class="normal">distance_matrix<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>[0,<sp/>10938,<sp/>4542,<sp/>2835,<sp/>29441,<sp/>2171,<sp/>1611,<sp/>9208,<sp/>9528,<sp/>11111,<sp/>16120,<sp/>22606,<sp/>22127,<sp/>20627,<sp/>21246,<sp/>23387,<sp/>16697,<sp/>33609,<sp/>26184,<sp/>24772,<sp/>22644,<sp/>20655,<sp/>30492,<sp/>23296,<sp/>32979,<sp/>18141,<sp/>19248,<sp/>17129,<sp/>17192,<sp/>15645,<sp/>12658,<sp/>11210,<sp/>12094,<sp/>13175,<sp/>18162,<sp/>4968,<sp/>12308,<sp/>10084,<sp/>13026,<sp/>15056],</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>[10938,<sp/>0,<sp/>6422,<sp/>9742,<sp/>18988,<sp/>12974,<sp/>11216,<sp/>19715,<sp/>19004,<sp/>18271,<sp/>25070,<sp/>31971,<sp/>31632,<sp/>30571,<sp/>31578,<sp/>33841,<sp/>27315,<sp/>43964,<sp/>36944,<sp/>35689,<sp/>33569,<sp/>31481,<sp/>41360,<sp/>33760,<sp/>43631,<sp/>28730,<sp/>29976,<sp/>27803,<sp/>28076,<sp/>26408,<sp/>23504,<sp/>22025,<sp/>22000,<sp/>13197,<sp/>14936,<sp/>15146,<sp/>23246,<sp/>20956,<sp/>23963,<sp/>25994],</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>[4542,<sp/>6422,<sp/>0,<sp/>3644,<sp/>25173,<sp/>6552,<sp/>5092,<sp/>13584,<sp/>13372,<sp/>13766,<sp/>19805,<sp/>26537,<sp/>26117,<sp/>24804,<sp/>25590,<sp/>27784,<sp/>21148,<sp/>37981,<sp/>30693,<sp/>29315,<sp/>27148,<sp/>25071,<sp/>34943,<sp/>27472,<sp/>37281,<sp/>22389,<sp/>23592,<sp/>21433,<sp/>21655,<sp/>20011,<sp/>17087,<sp/>15612,<sp/>15872,<sp/>11653,<sp/>15666,<sp/>8842,<sp/>16843,<sp/>14618,<sp/>17563,<sp/>19589],</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>[2835,<sp/>9742,<sp/>3644,<sp/>0,<sp/>28681,<sp/>3851,<sp/>4341,<sp/>11660,<sp/>12294,<sp/>13912,<sp/>18893,<sp/>25283,<sp/>24777,<sp/>23173,<sp/>23636,<sp/>25696,<sp/>18950,<sp/>35927,<sp/>28233,<sp/>26543,<sp/>24127,<sp/>21864,<sp/>31765,<sp/>24018,<sp/>33904,<sp/>19005,<sp/>20295,<sp/>18105,<sp/>18551,<sp/>16763,<sp/>13958,<sp/>12459,<sp/>12296,<sp/>10370,<sp/>15331,<sp/>5430,<sp/>14044,<sp/>12135,<sp/>14771,<sp/>16743],</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>[29441,<sp/>18988,<sp/>25173,<sp/>28681,<sp/>0,<sp/>31590,<sp/>29265,<sp/>37173,<sp/>35501,<sp/>32929,<sp/>40239,<sp/>47006,<sp/>46892,<sp/>46542,<sp/>48112,<sp/>50506,<sp/>44539,<sp/>60103,<sp/>54208,<sp/>53557,<sp/>51878,<sp/>50074,<sp/>59849,<sp/>52645,<sp/>62415,<sp/>47544,<sp/>48689,<sp/>46560,<sp/>46567,<sp/>45086,<sp/>42083,<sp/>40648,<sp/>40971,<sp/>29929,<sp/>28493,<sp/>34015,<sp/>41473,<sp/>38935,<sp/>42160,<sp/>44198],</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>[2171,<sp/>12974,<sp/>6552,<sp/>3851,<sp/>31590,<sp/>0,<sp/>3046,<sp/>7856,<sp/>8864,<sp/>11330,<sp/>15411,<sp/>21597,<sp/>21065,<sp/>19382,<sp/>19791,<sp/>21845,<sp/>15099,<sp/>32076,<sp/>24425,<sp/>22848,<sp/>20600,<sp/>18537,<sp/>28396,<sp/>21125,<sp/>30825,<sp/>15975,<sp/>17101,<sp/>14971,<sp/>15104,<sp/>13503,<sp/>10544,<sp/>9080,<sp/>9983,<sp/>13435,<sp/>18755,<sp/>2947,<sp/>10344,<sp/>8306,<sp/>11069,<sp/>13078],</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>[1611,<sp/>11216,<sp/>5092,<sp/>4341,<sp/>29265,<sp/>3046,<sp/>0,<sp/>8526,<sp/>8368,<sp/>9573,<sp/>14904,<sp/>21529,<sp/>21085,<sp/>19719,<sp/>20504,<sp/>22713,<sp/>16118,<sp/>32898,<sp/>25728,<sp/>24541,<sp/>22631,<sp/>20839,<sp/>30584,<sp/>23755,<sp/>33278,<sp/>18557,<sp/>19545,<sp/>17490,<sp/>17309,<sp/>15936,<sp/>12881,<sp/>11498,<sp/>12944,<sp/>14711,<sp/>19589,<sp/>5993,<sp/>12227,<sp/>9793,<sp/>12925,<sp/>14967],</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>[9208,<sp/>19715,<sp/>13584,<sp/>11660,<sp/>37173,<sp/>7856,<sp/>8526,<sp/>0,<sp/>3248,<sp/>7855,<sp/>8245,<sp/>13843,<sp/>13272,<sp/>11526,<sp/>12038,<sp/>14201,<sp/>7599,<sp/>24411,<sp/>17259,<sp/>16387,<sp/>15050,<sp/>13999,<sp/>23134,<sp/>17899,<sp/>26460,<sp/>12894,<sp/>13251,<sp/>11680,<sp/>10455,<sp/>9997,<sp/>7194,<sp/>6574,<sp/>10678,<sp/>20959,<sp/>26458,<sp/>8180,<sp/>5255,<sp/>2615,<sp/>5730,<sp/>7552],</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>[9528,<sp/>19004,<sp/>13372,<sp/>12294,<sp/>35501,<sp/>8864,<sp/>8368,<sp/>3248,<sp/>0,<sp/>4626,<sp/>6598,<sp/>13168,<sp/>12746,<sp/>11567,<sp/>12731,<sp/>15083,<sp/>9120,<sp/>25037,<sp/>18718,<sp/>18433,<sp/>17590,<sp/>16888,<sp/>25630,<sp/>20976,<sp/>29208,<sp/>16055,<sp/>16300,<sp/>14838,<sp/>13422,<sp/>13165,<sp/>10430,<sp/>9813,<sp/>13777,<sp/>22300,<sp/>27564,<sp/>10126,<sp/>8388,<sp/>5850,<sp/>8778,<sp/>10422],</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>[11111,<sp/>18271,<sp/>13766,<sp/>13912,<sp/>32929,<sp/>11330,<sp/>9573,<sp/>7855,<sp/>4626,<sp/>0,<sp/>7318,<sp/>14185,<sp/>14005,<sp/>13655,<sp/>15438,<sp/>17849,<sp/>12839,<sp/>27179,<sp/>21947,<sp/>22230,<sp/>21814,<sp/>21366,<sp/>29754,<sp/>25555,<sp/>33535,<sp/>20674,<sp/>20872,<sp/>19457,<sp/>17961,<sp/>17787,<sp/>15048,<sp/>14372,<sp/>18115,<sp/>24280,<sp/>29101,<sp/>13400,<sp/>13008,<sp/>10467,<sp/>13375,<sp/>14935],</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>[16120,<sp/>25070,<sp/>19805,<sp/>18893,<sp/>40239,<sp/>15411,<sp/>14904,<sp/>8245,<sp/>6598,<sp/>7318,<sp/>0,<sp/>6939,<sp/>6702,<sp/>6498,<sp/>8610,<sp/>10961,<sp/>7744,<sp/>19889,<sp/>15350,<sp/>16403,<sp/>16975,<sp/>17517,<sp/>24357,<sp/>22176,<sp/>28627,<sp/>18093,<sp/>17672,<sp/>16955,<sp/>14735,<sp/>15510,<sp/>13694,<sp/>13768,<sp/>18317,<sp/>28831,<sp/>34148,<sp/>16326,<sp/>11276,<sp/>9918,<sp/>11235,<sp/>11891],</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>[22606,<sp/>31971,<sp/>26537,<sp/>25283,<sp/>47006,<sp/>21597,<sp/>21529,<sp/>13843,<sp/>13168,<sp/>14185,<sp/>6939,<sp/>0,<sp/>793,<sp/>3401,<sp/>5562,<sp/>6839,<sp/>8923,<sp/>13433,<sp/>11264,<sp/>13775,<sp/>15853,<sp/>17629,<sp/>21684,<sp/>22315,<sp/>26411,<sp/>19539,<sp/>18517,<sp/>18636,<sp/>16024,<sp/>17632,<sp/>16948,<sp/>17587,<sp/>22131,<sp/>34799,<sp/>40296,<sp/>21953,<sp/>14739,<sp/>14568,<sp/>14366,<sp/>14002],</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>[22127,<sp/>31632,<sp/>26117,<sp/>24777,<sp/>46892,<sp/>21065,<sp/>21085,<sp/>13272,<sp/>12746,<sp/>14005,<sp/>6702,<sp/>793,<sp/>0,<sp/>2608,<sp/>4809,<sp/>6215,<sp/>8151,<sp/>13376,<sp/>10702,<sp/>13094,<sp/>15099,<sp/>16845,<sp/>21039,<sp/>21535,<sp/>25744,<sp/>18746,<sp/>17725,<sp/>17845,<sp/>15232,<sp/>16848,<sp/>16197,<sp/>16859,<sp/>21391,<sp/>34211,<sp/>39731,<sp/>21345,<sp/>14006,<sp/>13907,<sp/>13621,<sp/>13225],</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>[20627,<sp/>30571,<sp/>24804,<sp/>23173,<sp/>46542,<sp/>19382,<sp/>19719,<sp/>11526,<sp/>11567,<sp/>13655,<sp/>6498,<sp/>3401,<sp/>2608,<sp/>0,<sp/>2556,<sp/>4611,<sp/>5630,<sp/>13586,<sp/>9157,<sp/>11005,<sp/>12681,<sp/>14285,<sp/>19044,<sp/>18996,<sp/>23644,<sp/>16138,<sp/>15126,<sp/>15240,<sp/>12625,<sp/>14264,<sp/>13736,<sp/>14482,<sp/>18958,<sp/>32292,<sp/>37879,<sp/>19391,<sp/>11621,<sp/>11803,<sp/>11188,<sp/>10671],</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>[21246,<sp/>31578,<sp/>25590,<sp/>23636,<sp/>48112,<sp/>19791,<sp/>20504,<sp/>12038,<sp/>12731,<sp/>15438,<sp/>8610,<sp/>5562,<sp/>4809,<sp/>2556,<sp/>0,<sp/>2411,<sp/>4917,<sp/>12395,<sp/>6757,<sp/>8451,<sp/>10292,<sp/>12158,<sp/>16488,<sp/>16799,<sp/>21097,<sp/>14374,<sp/>13194,<sp/>13590,<sp/>10943,<sp/>12824,<sp/>12815,<sp/>13779,<sp/>18042,<sp/>32259,<sp/>37918,<sp/>19416,<sp/>10975,<sp/>11750,<sp/>10424,<sp/>9475],</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>[23387,<sp/>33841,<sp/>27784,<sp/>25696,<sp/>50506,<sp/>21845,<sp/>22713,<sp/>14201,<sp/>15083,<sp/>17849,<sp/>10961,<sp/>6839,<sp/>6215,<sp/>4611,<sp/>2411,<sp/>0,<sp/>6760,<sp/>10232,<sp/>4567,<sp/>7010,<sp/>9607,<sp/>12003,<sp/>14846,<sp/>16408,<sp/>19592,<sp/>14727,<sp/>13336,<sp/>14109,<sp/>11507,<sp/>13611,<sp/>14104,<sp/>15222,<sp/>19237,<sp/>34013,<sp/>39703,<sp/>21271,<sp/>12528,<sp/>13657,<sp/>11907,<sp/>10633],</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>[16697,<sp/>27315,<sp/>21148,<sp/>18950,<sp/>44539,<sp/>15099,<sp/>16118,<sp/>7599,<sp/>9120,<sp/>12839,<sp/>7744,<sp/>8923,<sp/>8151,<sp/>5630,<sp/>4917,<sp/>6760,<sp/>0,<sp/>16982,<sp/>9699,<sp/>9400,<sp/>9302,<sp/>9823,<sp/>16998,<sp/>14534,<sp/>21042,<sp/>10911,<sp/>10190,<sp/>9900,<sp/>7397,<sp/>8758,<sp/>8119,<sp/>8948,<sp/>13353,<sp/>27354,<sp/>33023,<sp/>14542,<sp/>6106,<sp/>6901,<sp/>5609,<sp/>5084],</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>[33609,<sp/>43964,<sp/>37981,<sp/>35927,<sp/>60103,<sp/>32076,<sp/>32898,<sp/>24411,<sp/>25037,<sp/>27179,<sp/>19889,<sp/>13433,<sp/>13376,<sp/>13586,<sp/>12395,<sp/>10232,<sp/>16982,<sp/>0,<sp/>8843,<sp/>12398,<sp/>16193,<sp/>19383,<sp/>16423,<sp/>22583,<sp/>20997,<sp/>22888,<sp/>21194,<sp/>22640,<sp/>20334,<sp/>22636,<sp/>23801,<sp/>25065,<sp/>28675,<sp/>44048,<sp/>49756,<sp/>31426,<sp/>22528,<sp/>23862,<sp/>21861,<sp/>20315],</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>[26184,<sp/>36944,<sp/>30693,<sp/>28233,<sp/>54208,<sp/>24425,<sp/>25728,<sp/>17259,<sp/>18718,<sp/>21947,<sp/>15350,<sp/>11264,<sp/>10702,<sp/>9157,<sp/>6757,<sp/>4567,<sp/>9699,<sp/>8843,<sp/>0,<sp/>3842,<sp/>7518,<sp/>10616,<sp/>10666,<sp/>14237,<sp/>15515,<sp/>14053,<sp/>12378,<sp/>13798,<sp/>11537,<sp/>13852,<sp/>15276,<sp/>16632,<sp/>19957,<sp/>35660,<sp/>41373,<sp/>23361,<sp/>14333,<sp/>16125,<sp/>13624,<sp/>11866],</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>[24772,<sp/>35689,<sp/>29315,<sp/>26543,<sp/>53557,<sp/>22848,<sp/>24541,<sp/>16387,<sp/>18433,<sp/>22230,<sp/>16403,<sp/>13775,<sp/>13094,<sp/>11005,<sp/>8451,<sp/>7010,<sp/>9400,<sp/>12398,<sp/>3842,<sp/>0,<sp/>3795,<sp/>7014,<sp/>8053,<sp/>10398,<sp/>12657,<sp/>10633,<sp/>8889,<sp/>10569,<sp/>8646,<sp/>10938,<sp/>12906,<sp/>14366,<sp/>17106,<sp/>33171,<sp/>38858,<sp/>21390,<sp/>12507,<sp/>14748,<sp/>11781,<sp/>9802],</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>[22644,<sp/>33569,<sp/>27148,<sp/>24127,<sp/>51878,<sp/>20600,<sp/>22631,<sp/>15050,<sp/>17590,<sp/>21814,<sp/>16975,<sp/>15853,<sp/>15099,<sp/>12681,<sp/>10292,<sp/>9607,<sp/>9302,<sp/>16193,<sp/>7518,<sp/>3795,<sp/>0,<sp/>3250,<sp/>8084,<sp/>6873,<sp/>11763,<sp/>6949,<sp/>5177,<sp/>7050,<sp/>5619,<sp/>7730,<sp/>10187,<sp/>11689,<sp/>13792,<sp/>30012,<sp/>35654,<sp/>18799,<sp/>10406,<sp/>12981,<sp/>9718,<sp/>7682],</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>[20655,<sp/>31481,<sp/>25071,<sp/>21864,<sp/>50074,<sp/>18537,<sp/>20839,<sp/>13999,<sp/>16888,<sp/>21366,<sp/>17517,<sp/>17629,<sp/>16845,<sp/>14285,<sp/>12158,<sp/>12003,<sp/>9823,<sp/>19383,<sp/>10616,<sp/>7014,<sp/>3250,<sp/>0,<sp/>9901,<sp/>4746,<sp/>12531,<sp/>3737,<sp/>1961,<sp/>4036,<sp/>3588,<sp/>5109,<sp/>7996,<sp/>9459,<sp/>10846,<sp/>27094,<sp/>32690,<sp/>16451,<sp/>8887,<sp/>11624,<sp/>8304,<sp/>6471],</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>[30492,<sp/>41360,<sp/>34943,<sp/>31765,<sp/>59849,<sp/>28396,<sp/>30584,<sp/>23134,<sp/>25630,<sp/>29754,<sp/>24357,<sp/>21684,<sp/>21039,<sp/>19044,<sp/>16488,<sp/>14846,<sp/>16998,<sp/>16423,<sp/>10666,<sp/>8053,<sp/>8084,<sp/>9901,<sp/>0,<sp/>9363,<sp/>4870,<sp/>13117,<sp/>11575,<sp/>13793,<sp/>13300,<sp/>15009,<sp/>17856,<sp/>19337,<sp/>20454,<sp/>36551,<sp/>42017,<sp/>26352,<sp/>18403,<sp/>21033,<sp/>17737,<sp/>15720],</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>[23296,<sp/>33760,<sp/>27472,<sp/>24018,<sp/>52645,<sp/>21125,<sp/>23755,<sp/>17899,<sp/>20976,<sp/>25555,<sp/>22176,<sp/>22315,<sp/>21535,<sp/>18996,<sp/>16799,<sp/>16408,<sp/>14534,<sp/>22583,<sp/>14237,<sp/>10398,<sp/>6873,<sp/>4746,<sp/>9363,<sp/>0,<sp/>10020,<sp/>5211,<sp/>4685,<sp/>6348,<sp/>7636,<sp/>8010,<sp/>11074,<sp/>12315,<sp/>11926,<sp/>27537,<sp/>32880,<sp/>18634,<sp/>12644,<sp/>15358,<sp/>12200,<sp/>10674],</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>[32979,<sp/>43631,<sp/>37281,<sp/>33904,<sp/>62415,<sp/>30825,<sp/>33278,<sp/>26460,<sp/>29208,<sp/>33535,<sp/>28627,<sp/>26411,<sp/>25744,<sp/>23644,<sp/>21097,<sp/>19592,<sp/>21042,<sp/>20997,<sp/>15515,<sp/>12657,<sp/>11763,<sp/>12531,<sp/>4870,<sp/>10020,<sp/>0,<sp/>14901,<sp/>13738,<sp/>15855,<sp/>16118,<sp/>17348,<sp/>20397,<sp/>21793,<sp/>21936,<sp/>37429,<sp/>42654,<sp/>28485,<sp/>21414,<sp/>24144,<sp/>20816,<sp/>18908],</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>[18141,<sp/>28730,<sp/>22389,<sp/>19005,<sp/>47544,<sp/>15975,<sp/>18557,<sp/>12894,<sp/>16055,<sp/>20674,<sp/>18093,<sp/>19539,<sp/>18746,<sp/>16138,<sp/>14374,<sp/>14727,<sp/>10911,<sp/>22888,<sp/>14053,<sp/>10633,<sp/>6949,<sp/>3737,<sp/>13117,<sp/>5211,<sp/>14901,<sp/>0,<sp/>1777,<sp/>1217,<sp/>3528,<sp/>2896,<sp/>5892,<sp/>7104,<sp/>7338,<sp/>23517,<sp/>29068,<sp/>13583,<sp/>7667,<sp/>10304,<sp/>7330,<sp/>6204],</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>[19248,<sp/>29976,<sp/>23592,<sp/>20295,<sp/>48689,<sp/>17101,<sp/>19545,<sp/>13251,<sp/>16300,<sp/>20872,<sp/>17672,<sp/>18517,<sp/>17725,<sp/>15126,<sp/>13194,<sp/>13336,<sp/>10190,<sp/>21194,<sp/>12378,<sp/>8889,<sp/>5177,<sp/>1961,<sp/>11575,<sp/>4685,<sp/>13738,<sp/>1777,<sp/>0,<sp/>2217,<sp/>2976,<sp/>3610,<sp/>6675,<sp/>8055,<sp/>8965,<sp/>25197,<sp/>30774,<sp/>14865,<sp/>8007,<sp/>10742,<sp/>7532,<sp/>6000],</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>[17129,<sp/>27803,<sp/>21433,<sp/>18105,<sp/>46560,<sp/>14971,<sp/>17490,<sp/>11680,<sp/>14838,<sp/>19457,<sp/>16955,<sp/>18636,<sp/>17845,<sp/>15240,<sp/>13590,<sp/>14109,<sp/>9900,<sp/>22640,<sp/>13798,<sp/>10569,<sp/>7050,<sp/>4036,<sp/>13793,<sp/>6348,<sp/>15855,<sp/>1217,<sp/>2217,<sp/>0,<sp/>2647,<sp/>1686,<sp/>4726,<sp/>6000,<sp/>6810,<sp/>23060,<sp/>28665,<sp/>12674,<sp/>6450,<sp/>9094,<sp/>6117,<sp/>5066],</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>[17192,<sp/>28076,<sp/>21655,<sp/>18551,<sp/>46567,<sp/>15104,<sp/>17309,<sp/>10455,<sp/>13422,<sp/>17961,<sp/>14735,<sp/>16024,<sp/>15232,<sp/>12625,<sp/>10943,<sp/>11507,<sp/>7397,<sp/>20334,<sp/>11537,<sp/>8646,<sp/>5619,<sp/>3588,<sp/>13300,<sp/>7636,<sp/>16118,<sp/>3528,<sp/>2976,<sp/>2647,<sp/>0,<sp/>2320,<sp/>4593,<sp/>6093,<sp/>8479,<sp/>24542,<sp/>30219,<sp/>13194,<sp/>5301,<sp/>8042,<sp/>4735,<sp/>3039],</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>[15645,<sp/>26408,<sp/>20011,<sp/>16763,<sp/>45086,<sp/>13503,<sp/>15936,<sp/>9997,<sp/>13165,<sp/>17787,<sp/>15510,<sp/>17632,<sp/>16848,<sp/>14264,<sp/>12824,<sp/>13611,<sp/>8758,<sp/>22636,<sp/>13852,<sp/>10938,<sp/>7730,<sp/>5109,<sp/>15009,<sp/>8010,<sp/>17348,<sp/>2896,<sp/>3610,<sp/>1686,<sp/>2320,<sp/>0,<sp/>3086,<sp/>4444,<sp/>6169,<sp/>22301,<sp/>27963,<sp/>11344,<sp/>4780,<sp/>7408,<sp/>4488,<sp/>3721],</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>[12658,<sp/>23504,<sp/>17087,<sp/>13958,<sp/>42083,<sp/>10544,<sp/>12881,<sp/>7194,<sp/>10430,<sp/>15048,<sp/>13694,<sp/>16948,<sp/>16197,<sp/>13736,<sp/>12815,<sp/>14104,<sp/>8119,<sp/>23801,<sp/>15276,<sp/>12906,<sp/>10187,<sp/>7996,<sp/>17856,<sp/>11074,<sp/>20397,<sp/>5892,<sp/>6675,<sp/>4726,<sp/>4593,<sp/>3086,<sp/>0,<sp/>1501,<sp/>5239,<sp/>20390,<sp/>26101,<sp/>8611,<sp/>2418,<sp/>4580,<sp/>2599,<sp/>3496],</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>[11210,<sp/>22025,<sp/>15612,<sp/>12459,<sp/>40648,<sp/>9080,<sp/>11498,<sp/>6574,<sp/>9813,<sp/>14372,<sp/>13768,<sp/>17587,<sp/>16859,<sp/>14482,<sp/>13779,<sp/>15222,<sp/>8948,<sp/>25065,<sp/>16632,<sp/>14366,<sp/>11689,<sp/>9459,<sp/>19337,<sp/>12315,<sp/>21793,<sp/>7104,<sp/>8055,<sp/>6000,<sp/>6093,<sp/>4444,<sp/>1501,<sp/>0,<sp/>4608,<sp/>19032,<sp/>24747,<sp/>7110,<sp/>2860,<sp/>4072,<sp/>3355,<sp/>4772],</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>[12094,<sp/>22000,<sp/>15872,<sp/>12296,<sp/>40971,<sp/>9983,<sp/>12944,<sp/>10678,<sp/>13777,<sp/>18115,<sp/>18317,<sp/>22131,<sp/>21391,<sp/>18958,<sp/>18042,<sp/>19237,<sp/>13353,<sp/>28675,<sp/>19957,<sp/>17106,<sp/>13792,<sp/>10846,<sp/>20454,<sp/>11926,<sp/>21936,<sp/>7338,<sp/>8965,<sp/>6810,<sp/>8479,<sp/>6169,<sp/>5239,<sp/>4608,<sp/>0,<sp/>16249,<sp/>21866,<sp/>7146,<sp/>7403,<sp/>8446,<sp/>7773,<sp/>8614],</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>[13175,<sp/>13197,<sp/>11653,<sp/>10370,<sp/>29929,<sp/>13435,<sp/>14711,<sp/>20959,<sp/>22300,<sp/>24280,<sp/>28831,<sp/>34799,<sp/>34211,<sp/>32292,<sp/>32259,<sp/>34013,<sp/>27354,<sp/>44048,<sp/>35660,<sp/>33171,<sp/>30012,<sp/>27094,<sp/>36551,<sp/>27537,<sp/>37429,<sp/>23517,<sp/>25197,<sp/>23060,<sp/>24542,<sp/>22301,<sp/>20390,<sp/>19032,<sp/>16249,<sp/>0,<sp/>5714,<sp/>12901,<sp/>21524,<sp/>20543,<sp/>22186,<sp/>23805],</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>[18162,<sp/>14936,<sp/>15666,<sp/>15331,<sp/>28493,<sp/>18755,<sp/>19589,<sp/>26458,<sp/>27564,<sp/>29101,<sp/>34148,<sp/>40296,<sp/>39731,<sp/>37879,<sp/>37918,<sp/>39703,<sp/>33023,<sp/>49756,<sp/>41373,<sp/>38858,<sp/>35654,<sp/>32690,<sp/>42017,<sp/>32880,<sp/>42654,<sp/>29068,<sp/>30774,<sp/>28665,<sp/>30219,<sp/>27963,<sp/>26101,<sp/>24747,<sp/>21866,<sp/>5714,<sp/>0,<sp/>18516,<sp/>27229,<sp/>26181,<sp/>27895,<sp/>29519],</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>[4968,<sp/>15146,<sp/>8842,<sp/>5430,<sp/>34015,<sp/>2947,<sp/>5993,<sp/>8180,<sp/>10126,<sp/>13400,<sp/>16326,<sp/>21953,<sp/>21345,<sp/>19391,<sp/>19416,<sp/>21271,<sp/>14542,<sp/>31426,<sp/>23361,<sp/>21390,<sp/>18799,<sp/>16451,<sp/>26352,<sp/>18634,<sp/>28485,<sp/>13583,<sp/>14865,<sp/>12674,<sp/>13194,<sp/>11344,<sp/>8611,<sp/>7110,<sp/>7146,<sp/>12901,<sp/>18516,<sp/>0,<sp/>9029,<sp/>7668,<sp/>9742,<sp/>11614],</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>[12308,<sp/>23246,<sp/>16843,<sp/>14044,<sp/>41473,<sp/>10344,<sp/>12227,<sp/>5255,<sp/>8388,<sp/>13008,<sp/>11276,<sp/>14739,<sp/>14006,<sp/>11621,<sp/>10975,<sp/>12528,<sp/>6106,<sp/>22528,<sp/>14333,<sp/>12507,<sp/>10406,<sp/>8887,<sp/>18403,<sp/>12644,<sp/>21414,<sp/>7667,<sp/>8007,<sp/>6450,<sp/>5301,<sp/>4780,<sp/>2418,<sp/>2860,<sp/>7403,<sp/>21524,<sp/>27229,<sp/>9029,<sp/>0,<sp/>2747,<sp/>726,<sp/>2749],</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>[10084,<sp/>20956,<sp/>14618,<sp/>12135,<sp/>38935,<sp/>8306,<sp/>9793,<sp/>2615,<sp/>5850,<sp/>10467,<sp/>9918,<sp/>14568,<sp/>13907,<sp/>11803,<sp/>11750,<sp/>13657,<sp/>6901,<sp/>23862,<sp/>16125,<sp/>14748,<sp/>12981,<sp/>11624,<sp/>21033,<sp/>15358,<sp/>24144,<sp/>10304,<sp/>10742,<sp/>9094,<sp/>8042,<sp/>7408,<sp/>4580,<sp/>4072,<sp/>8446,<sp/>20543,<sp/>26181,<sp/>7668,<sp/>2747,<sp/>0,<sp/>3330,<sp/>5313],</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>[13026,<sp/>23963,<sp/>17563,<sp/>14771,<sp/>42160,<sp/>11069,<sp/>12925,<sp/>5730,<sp/>8778,<sp/>13375,<sp/>11235,<sp/>14366,<sp/>13621,<sp/>11188,<sp/>10424,<sp/>11907,<sp/>5609,<sp/>21861,<sp/>13624,<sp/>11781,<sp/>9718,<sp/>8304,<sp/>17737,<sp/>12200,<sp/>20816,<sp/>7330,<sp/>7532,<sp/>6117,<sp/>4735,<sp/>4488,<sp/>2599,<sp/>3355,<sp/>7773,<sp/>22186,<sp/>27895,<sp/>9742,<sp/>726,<sp/>3330,<sp/>0,<sp/>2042],</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>[15056,<sp/>25994,<sp/>19589,<sp/>16743,<sp/>44198,<sp/>13078,<sp/>14967,<sp/>7552,<sp/>10422,<sp/>14935,<sp/>11891,<sp/>14002,<sp/>13225,<sp/>10671,<sp/>9475,<sp/>10633,<sp/>5084,<sp/>20315,<sp/>11866,<sp/>9802,<sp/>7682,<sp/>6471,<sp/>15720,<sp/>10674,<sp/>18908,<sp/>6204,<sp/>6000,<sp/>5066,<sp/>3039,<sp/>3721,<sp/>3496,<sp/>4772,<sp/>8614,<sp/>23805,<sp/>29519,<sp/>11614,<sp/>2749,<sp/>5313,<sp/>2042,<sp/>0],</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/>]<sp/></highlight><highlight class="comment">#<sp/>yapf:<sp/>disable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">#<sp/>increase<sp/>matrix<sp/>from<sp/>40<sp/>to<sp/>200<sp/>cities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="namespaceexamples_1_1clustering_1a85ceb44b790fbcebb039824f122ca84b" refkind="member"><highlight class="normal">repeat<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="72"><highlight class="normal">distance_matrix<sp/>=<sp/>np.array(distance_matrix)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">distance_matrix<sp/>=<sp/>np.repeat(distance_matrix,<sp/>repeat,<sp/>0)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">distance_matrix<sp/>=<sp/>np.repeat(distance_matrix,<sp/>repeat,<sp/>1)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespaceexamples_1_1clustering_1a6db539b92ada28d4d19bff9faef164e1" refkind="member"><highlight class="normal">num_nodes<sp/>=<sp/>len(distance_matrix)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Number<sp/>of<sp/>groups<sp/>to<sp/>split<sp/>the<sp/>nodes,<sp/>must<sp/>divide<sp/>num_nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="namespaceexamples_1_1clustering_1a8a1cd579f497af72e82d3bc9795622e4" refkind="member"><highlight class="normal">num_groups<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="80" refid="namespaceexamples_1_1clustering_1a8d19357740cd283ce14597219d2a193f" refkind="member"><highlight class="normal">group_size<sp/>=<sp/>num_nodes<sp/>//<sp/>num_groups</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="namespaceexamples_1_1clustering_1a2b0696d94d5bb65cab882dc62228498a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1clustering_1a2b0696d94d5bb65cab882dc62228498a" kindref="member">sum_distance</ref>(s):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/>np.empty((num_groups,<sp/>group_size),<sp/>dtype=numba.int32)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_groups):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g[i]<sp/>=<sp/>s[i*group_size:(i+1)*group_size]</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_groups):</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(group_size):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>w<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(group_size):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>+=<sp/>distance_matrix[g[i,v],g[i,w]]</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dist</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="namespaceexamples_1_1clustering_1a3abfba0cdea4b88b27ef19171a4e8179" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1clustering_1a3abfba0cdea4b88b27ef19171a4e8179" kindref="member">unique</ref>(x):<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.argsort(x)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="namespaceexamples_1_1clustering_1a14d4f9f604e631d0140dffffb4f2cae6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1clustering_1a14d4f9f604e631d0140dffffb4f2cae6" kindref="member">fitness</ref>(x):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1clustering_1a2b0696d94d5bb65cab882dc62228498a" kindref="member">sum_distance</ref>(<ref refid="namespaceexamples_1_1clustering_1a3abfba0cdea4b88b27ef19171a4e8179" kindref="member">unique</ref>(x))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="namespaceexamples_1_1clustering_1a2e4522195ee18b33c6e344d71e0ed39d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1clustering_1a2e4522195ee18b33c6e344d71e0ed39d" kindref="member">show</ref>(s):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/>np.empty((num_groups,group_size),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_groups):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g[i]<sp/>=<sp/>s[i*group_size:(i+1)*group_size]</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>print(g,<sp/><ref refid="namespaceexamples_1_1clustering_1a2b0696d94d5bb65cab882dc62228498a" kindref="member">sum_distance</ref>(s))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="namespaceexamples_1_1clustering_1a8de29e7cf2101e2d46966e6af4940e5f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1clustering_1a8de29e7cf2101e2d46966e6af4940e5f" kindref="member">opt</ref>():<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Num<sp/>nodes<sp/>=&apos;</highlight><highlight class="normal">,<sp/>num_nodes)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>retry.minimize(<ref refid="classfcmaes_1_1optimizer_1_1wrapper" kindref="compound">wrapper</ref>(fitness),<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bounds([0]*num_nodes,<sp/>[1]*num_nodes),<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer=<ref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" kindref="compound">Bite_cpp</ref>(500000,<sp/>stall_criterion<sp/>=<sp/>3),<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_retries=32)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1clustering_1a2e4522195ee18b33c6e344d71e0ed39d" kindref="member">show</ref>(<ref refid="namespaceexamples_1_1clustering_1a3abfba0cdea4b88b27ef19171a4e8179" kindref="member">unique</ref>(res.x))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1clustering_1a8de29e7cf2101e2d46966e6af4940e5f" kindref="member">opt</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/clustering.py"/>
  </compounddef>
</doxygen>

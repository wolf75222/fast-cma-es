<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="gear__train_8py" kind="file" language="Python">
    <compoundname>gear_train.py</compoundname>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1gear__train">examples::gear_train</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1gear__train_1a051e33678c6c8e3ebf31aec6959c48c5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::gear_train.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.gear_train.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="34" column="1" bodyfile="examples/gear_train.py" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1gear__train_1a7f0a36761745a3929e1ef1af7f977201" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::gear_train.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.gear_train.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="34" column="1" bodyfile="examples/gear_train.py" bodystart="34" bodyend="-1"/>
        <referencedby refid="namespaceexamples_1_1gear__train_1a5f77cab0f2182c613735dba90ac0a2b2" compoundref="gear__train_8py" startline="60" endline="68">examples.gear_train.print_result</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1gear__train_1a4d3efa93f718adb000a2adb164e09797" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::gear_train.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.gear_train.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="34" column="1" bodyfile="examples/gear_train.py" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1gear__train_1ad2a2ddca5789d754aeaca5f116195235" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float examples::gear_train.fac</definition>
        <argsstring></argsstring>
        <name>fac</name>
        <qualifiedname>examples.gear_train.fac</qualifiedname>
        <initializer>=  1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="37" column="1" bodyfile="examples/gear_train.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1gear__train_1ac55edaaa100d315167378785d8149a44" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::gear_train.lowerbound</definition>
        <argsstring></argsstring>
        <name>lowerbound</name>
        <qualifiedname>examples.gear_train.lowerbound</qualifiedname>
        <initializer>=  [12, 12, 12, 12]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="38" column="1" bodyfile="examples/gear_train.py" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1gear__train_1aa60f94f1dcb8bd291893acc7c3284ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.gear_train.ratio</definition>
        <argsstring>(x)</argsstring>
        <name>ratio</name>
        <qualifiedname>examples.gear_train.ratio</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="40" column="1" bodyfile="examples/gear_train.py" bodystart="40" bodyend="43"/>
        <referencedby refid="namespaceexamples_1_1gear__train_1adf9cb51be26cd8e06226d3836a2782f1" compoundref="gear__train_8py" startline="56" endline="59">examples.gear_train.feasable_ratio</referencedby>
        <referencedby refid="namespaceexamples_1_1gear__train_1a5f77cab0f2182c613735dba90ac0a2b2" compoundref="gear__train_8py" startline="60" endline="68">examples.gear_train.print_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1gear__train_1aed91576b10d97cb488c1badbe66e796c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.gear_train.discrete</definition>
        <argsstring>(x)</argsstring>
        <name>discrete</name>
        <qualifiedname>examples.gear_train.discrete</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="44" column="1" bodyfile="examples/gear_train.py" bodystart="44" bodyend="51"/>
        <referencedby refid="namespaceexamples_1_1gear__train_1a8650b80b6d76475be4dfd225a55c62b0" compoundref="gear__train_8py" startline="52" endline="55">examples.gear_train._feasible</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1gear__train_1a8650b80b6d76475be4dfd225a55c62b0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.gear_train._feasible</definition>
        <argsstring>(x)</argsstring>
        <name>_feasible</name>
        <qualifiedname>examples.gear_train._feasible</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="52" column="1" bodyfile="examples/gear_train.py" bodystart="52" bodyend="55"/>
        <references refid="namespaceexamples_1_1gear__train_1aed91576b10d97cb488c1badbe66e796c" compoundref="gear__train_8py" startline="44" endline="51">examples.gear_train.discrete</references>
        <referencedby refid="namespaceexamples_1_1gear__train_1adf9cb51be26cd8e06226d3836a2782f1" compoundref="gear__train_8py" startline="56" endline="59">examples.gear_train.feasable_ratio</referencedby>
        <referencedby refid="namespaceexamples_1_1gear__train_1a5f77cab0f2182c613735dba90ac0a2b2" compoundref="gear__train_8py" startline="60" endline="68">examples.gear_train.print_result</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1gear__train_1adf9cb51be26cd8e06226d3836a2782f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.gear_train.feasable_ratio</definition>
        <argsstring>(x)</argsstring>
        <name>feasable_ratio</name>
        <qualifiedname>examples.gear_train.feasable_ratio</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="56" column="1" bodyfile="examples/gear_train.py" bodystart="56" bodyend="59"/>
        <references refid="namespaceexamples_1_1gear__train_1a8650b80b6d76475be4dfd225a55c62b0" compoundref="gear__train_8py" startline="52" endline="55">examples.gear_train._feasible</references>
        <references refid="namespaceexamples_1_1gear__train_1aa60f94f1dcb8bd291893acc7c3284ffb" compoundref="gear__train_8py" startline="40" endline="43">examples.gear_train.ratio</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1gear__train_1a5f77cab0f2182c613735dba90ac0a2b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.gear_train.print_result</definition>
        <argsstring>(ret, best, t0, i)</argsstring>
        <name>print_result</name>
        <qualifiedname>examples.gear_train.print_result</qualifiedname>
        <param>
          <type>ret</type>
          <defname>ret</defname>
        </param>
        <param>
          <type>best</type>
          <defname>best</defname>
        </param>
        <param>
          <type>t0</type>
          <defname>t0</defname>
        </param>
        <param>
          <type>i</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="60" column="1" bodyfile="examples/gear_train.py" bodystart="60" bodyend="68"/>
        <references refid="namespaceexamples_1_1gear__train_1a8650b80b6d76475be4dfd225a55c62b0" compoundref="gear__train_8py" startline="52" endline="55">examples.gear_train._feasible</references>
        <references refid="namespaceexamples_1_1gear__train_1a7f0a36761745a3929e1ef1af7f977201" compoundref="gear__train_8py" startline="34">examples.gear_train.format</references>
        <references refid="namespaceexamples_1_1gear__train_1aa60f94f1dcb8bd291893acc7c3284ffb" compoundref="gear__train_8py" startline="40" endline="43">examples.gear_train.ratio</references>
        <referencedby refid="namespaceexamples_1_1gear__train_1a6942c7e5c634c2d56ccc8e6991db3725" compoundref="gear__train_8py" startline="69" endline="77">examples.gear_train.test_optimizer</referencedby>
        <referencedby refid="namespaceexamples_1_1gear__train_1aedfd50e048f3a8af3a3782a7e4b76fb1" compoundref="gear__train_8py" startline="78" endline="86">examples.gear_train.test_optimizer_adv</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1gear__train_1a6942c7e5c634c2d56ccc8e6991db3725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.gear_train.test_optimizer</definition>
        <argsstring>(fun, n)</argsstring>
        <name>test_optimizer</name>
        <qualifiedname>examples.gear_train.test_optimizer</qualifiedname>
        <param>
          <type>fun</type>
          <defname>fun</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="69" column="1" bodyfile="examples/gear_train.py" bodystart="69" bodyend="77"/>
        <references refid="namespaceexamples_1_1gear__train_1a5f77cab0f2182c613735dba90ac0a2b2" compoundref="gear__train_8py" startline="60" endline="68">examples.gear_train.print_result</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1gear__train_1aedfd50e048f3a8af3a3782a7e4b76fb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.gear_train.test_optimizer_adv</definition>
        <argsstring>(fun, n)</argsstring>
        <name>test_optimizer_adv</name>
        <qualifiedname>examples.gear_train.test_optimizer_adv</qualifiedname>
        <param>
          <type>fun</type>
          <defname>fun</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/gear_train.py" line="78" column="1" bodyfile="examples/gear_train.py" bodystart="78" bodyend="86"/>
        <references refid="namespaceexamples_1_1gear__train_1a5f77cab0f2182c613735dba90ac0a2b2" compoundref="gear__train_8py" startline="60" endline="68">examples.gear_train.print_result</references>
        <references refid="namespaceexamples_1_1gear__train_1aedfd50e048f3a8af3a3782a7e4b76fb1" compoundref="gear__train_8py" startline="78" endline="86">examples.gear_train.test_optimizer_adv</references>
        <referencedby refid="namespaceexamples_1_1gear__train_1aedfd50e048f3a8af3a3782a7e4b76fb1" compoundref="gear__train_8py" startline="78" endline="86">examples.gear_train.test_optimizer_adv</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1gear__train" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>compound<sp/>gear<sp/>train<sp/>is<sp/>to<sp/>be<sp/>designed<sp/>to<sp/>achieve<sp/>a<sp/>specific<sp/>gear<sp/>ratio<sp/>between<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>driver<sp/>and<sp/>driven<sp/>shafts.<sp/>The<sp/>objective<sp/>of<sp/>the<sp/>gear<sp/>train<sp/>design<sp/>is<sp/>to<sp/>find<sp/>the<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>of<sp/>teeth<sp/>in<sp/>each<sp/>of<sp/>the<sp/>four<sp/>gears<sp/>so<sp/>as<sp/>to<sp/>minimize<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>the<sp/>error<sp/>between<sp/>the<sp/>obtained<sp/>gear<sp/>ratio<sp/>and<sp/>a<sp/>required<sp/>gear<sp/>rafio<sp/>of<sp/>1/6.931<sp/>and<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-<sp/>the<sp/>maximum<sp/>size<sp/>of<sp/>any<sp/>of<sp/>the<sp/>four<sp/>gears.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Since<sp/>the<sp/>number<sp/>of<sp/>teeth<sp/>must<sp/>be<sp/>integers,<sp/>all<sp/>four<sp/>variables<sp/>are<sp/>strictly<sp/>integers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>example<sp/>is<sp/>taken<sp/>from<sp/>https://link.springer.com/chapter/10.1007/3-540-45356-3_84<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>example<sp/>illustrates<sp/>that<sp/>for<sp/>relatively<sp/>simple<sp/>tasks<sp/>no<sp/>dedicated<sp/>mixed<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>solver<sp/>is<sp/>required.<sp/>500<sp/>solutions<sp/>with<sp/>different<sp/>upper<sp/>bounds<sp/>are<sp/>computed<sp/>in<sp/>about<sp/>80<sp/>sec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>on<sp/>an<sp/>AMD<sp/>3950x<sp/>16<sp/>core<sp/>processor.<sp/>The<sp/>continuous<sp/>input<sp/>vector<sp/>is<sp/>made<sp/>discrete<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>calling<sp/>&apos;_feasible(x)&apos;<sp/>in<sp/>the<sp/>objective<sp/>function<sp/>&apos;feasable_ratio()&apos;.<sp/>The<sp/>second<sp/>objective</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>is<sp/>modeled<sp/>as<sp/>boxed<sp/>boundary.<sp/>By<sp/>incrementally<sp/>increasing<sp/>the<sp/>bounds<sp/>on<sp/>the<sp/>teeth<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>whole<sp/>pareto<sp/>front<sp/>is<sp/>listed.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry,<sp/>advretry</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dtime</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="34" refid="namespaceexamples_1_1gear__train_1a7f0a36761745a3929e1ef1af7f977201" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespaceexamples_1_1gear__train_1ad2a2ddca5789d754aeaca5f116195235" refkind="member"><highlight class="normal">fac<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="38" refid="namespaceexamples_1_1gear__train_1ac55edaaa100d315167378785d8149a44" refkind="member"><highlight class="normal">lowerbound<sp/>=<sp/>[12,<sp/>12,<sp/>12,<sp/>12]</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="namespaceexamples_1_1gear__train_1aa60f94f1dcb8bd291893acc7c3284ffb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1gear__train_1aa60f94f1dcb8bd291893acc7c3284ffb" kindref="member">ratio</ref>(x):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1<sp/>/<sp/>6.931<sp/>-<sp/>x[0]*x[1]<sp/>/<sp/>(x[2]*x[3]))<sp/>**<sp/>2</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">#<sp/>map<sp/>floats<sp/>to<sp/>discrete<sp/>integer<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="namespaceexamples_1_1gear__train_1aed91576b10d97cb488c1badbe66e796c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1gear__train_1aed91576b10d97cb488c1badbe66e796c" kindref="member">discrete</ref>(x):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>feasible_x<sp/>=<sp/>x<sp/>-<sp/>x<sp/>%<sp/>fac</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>feasible_x<sp/>&lt;<sp/>12:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feasible_x<sp/>+=<sp/>fac</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>feasible_x<sp/>&gt;<sp/>60:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feasible_x<sp/>=<sp/>60</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feasible_x</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="52" refid="namespaceexamples_1_1gear__train_1a8650b80b6d76475be4dfd225a55c62b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1gear__train_1a8650b80b6d76475be4dfd225a55c62b0" kindref="member">_feasible</ref>(x):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.array(x)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[<ref refid="namespaceexamples_1_1gear__train_1aed91576b10d97cb488c1badbe66e796c" kindref="member">discrete</ref>(v)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="56" refid="namespaceexamples_1_1gear__train_1adf9cb51be26cd8e06226d3836a2782f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1gear__train_1adf9cb51be26cd8e06226d3836a2782f1" kindref="member">feasable_ratio</ref>(x):<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="namespaceexamples_1_1gear__train_1a8650b80b6d76475be4dfd225a55c62b0" kindref="member">_feasible</ref>(x)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceexamples_1_1gear__train_1aa60f94f1dcb8bd291893acc7c3284ffb" kindref="member">ratio</ref>(x)<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespaceexamples_1_1gear__train_1a5f77cab0f2182c613735dba90ac0a2b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1gear__train_1a5f77cab0f2182c613735dba90ac0a2b2" kindref="member">print_result</ref>(ret,<sp/>best,<sp/>t0,<sp/>i):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="namespaceexamples_1_1gear__train_1a8650b80b6d76475be4dfd225a55c62b0" kindref="member">_feasible</ref>(ret.x)<sp/></highlight><highlight class="comment">#<sp/>make<sp/>sure<sp/>result<sp/>is<sp/>_feasible<sp/>/<sp/>discrete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="namespaceexamples_1_1gear__train_1aa60f94f1dcb8bd291893acc7c3284ffb" kindref="member">ratio</ref>(x)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>val<sp/>&lt;<sp/>best:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>min(val,<sp/>best)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>best<sp/>=<sp/>{2:.3E}<sp/>f(xmin)<sp/>=<sp/>{3:.3E}<sp/>x<sp/>=<sp/>{4:s}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1gear__train_1a7f0a36761745a3929e1ef1af7f977201" kindref="member">format</ref>(i,<sp/>dtime(t0),<sp/>best,<sp/>val,<sp/>str(x)))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="69" refid="namespaceexamples_1_1gear__train_1a6942c7e5c634c2d56ccc8e6991db3725" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1gear__train_1a6942c7e5c634c2d56ccc8e6991db3725" kindref="member">test_optimizer</ref>(fun,<sp/>n):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>best<sp/>=<sp/>np.inf</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>time.perf_counter()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_x<sp/>=<sp/>i<sp/>+<sp/>12</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds(lowerbound,<sp/>[max_x+0.99]*4)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>retry.minimize(fun,<sp/>bounds,<sp/>max_evaluations=10000,<sp/>num_retries=100)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/><ref refid="namespaceexamples_1_1gear__train_1a5f77cab0f2182c613735dba90ac0a2b2" kindref="member">print_result</ref>(ret,<sp/>best,<sp/>t0,<sp/>max_x)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="namespaceexamples_1_1gear__train_1aedfd50e048f3a8af3a3782a7e4b76fb1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1gear__train_1aedfd50e048f3a8af3a3782a7e4b76fb1" kindref="member">test_optimizer_adv</ref>(fun,<sp/>n):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>best<sp/>=<sp/>np.inf</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>time.perf_counter()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_x<sp/>=<sp/>i<sp/>+<sp/>12</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds(lowerbound,<sp/>[max_x+0.99]*4)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>advretry.minimize(fun,<sp/>bounds,<sp/>min_evaluations=5000,<sp/>num_retries=100)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/><ref refid="namespaceexamples_1_1gear__train_1a5f77cab0f2182c613735dba90ac0a2b2" kindref="member">print_result</ref>(ret,<sp/>best,<sp/>t0,<sp/>max_x)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1gear__train_1aedfd50e048f3a8af3a3782a7e4b76fb1" kindref="member">test_optimizer_adv</ref>(feasable_ratio,<sp/>500)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#test_optimizer(feasable_ratio,<sp/>500)</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="examples/gear_train.py"/>
  </compounddef>
</doxygen>

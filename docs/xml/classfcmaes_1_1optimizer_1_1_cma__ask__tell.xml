<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1optimizer_1_1_cma__ask__tell" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::optimizer::Cma_ask_tell</compoundname>
    <basecompoundref refid="classfcmaes_1_1optimizer_1_1_optimizer" prot="public" virt="non-virtual">fcmaes.optimizer.Optimizer</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a2a32bf4b1974985835c6fe4d78efbfa0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_ask_tell::popsize</definition>
        <argsstring></argsstring>
        <name>popsize</name>
        <qualifiedname>fcmaes.optimizer.Cma_ask_tell.popsize</qualifiedname>
        <initializer>=  popsize</initializer>
        <briefdescription>
<para>Size of the population used in the CMA-ES optimization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2253" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2253" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1ab63d18c231a89de22d03945f00e5fdfe" compoundref="pgpecpp_8py" startline="306" endline="321">fcmaes.pgpecpp.PGPE_C.ask</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_cma__pyg_1ac6519a73a433d9af5f92b533f3e1520a" compoundref="benchmark__gtop__pygmo_8py" startline="103" endline="118">examples.benchmark_gtop_pygmo.Cma_pyg.minimize</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1_de__pyg_1ac378a2bf0efbc53ed2ef677fa017b916" compoundref="benchmark__gtop__pygmo_8py" startline="127" endline="137">examples.benchmark_gtop_pygmo.De_pyg.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_de__ask__tell_1add27360c14d87672fd1c81a406d8b388" compoundref="optimizer_8py" startline="2418" endline="2431">fcmaes.optimizer.De_ask_tell.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_differential__evolution_1a8096359879e83b09f09bea6b73d59776" compoundref="optimizer_8py" startline="2858" endline="2864">fcmaes.optimizer.Differential_evolution.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1pgpecpp_1_1_p_g_p_e___c_1aeaf7b21b34fd7cb1438ed8bcf23a2f4c" compoundref="pgpecpp_8py" startline="357" endline="371">fcmaes.pgpecpp.PGPE_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a7d349b5034ba57f809452070bc13b7c8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_ask_tell::stop_fitness</definition>
        <argsstring></argsstring>
        <name>stop_fitness</name>
        <qualifiedname>fcmaes.optimizer.Cma_ask_tell.stop_fitness</qualifiedname>
        <initializer>=  stop_fitness</initializer>
        <briefdescription>
<para>Threshold for stopping if the fitness value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2254" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2254" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a3c87ed72ee15e5bcd89e0e484ef980c8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_ask_tell::guess</definition>
        <argsstring></argsstring>
        <name>guess</name>
        <qualifiedname>fcmaes.optimizer.Cma_ask_tell.guess</qualifiedname>
        <initializer>=  guess</initializer>
        <briefdescription>
<para>Initial guess for the optimization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2255" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2255" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_bite__cpp_1abbc94878a7c8ceda2ea3b65361a3e972" compoundref="optimizer_8py" startline="2701" endline="2709">fcmaes.optimizer.Bite_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_da__cpp_1ad66e1bd6c6235662127232d705d890ad" compoundref="optimizer_8py" startline="2596" endline="2603">fcmaes.optimizer.Da_cpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a54e31b68f53d2561911716c31f45b1be" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.optimizer.Cma_ask_tell::sdevs</definition>
        <argsstring></argsstring>
        <name>sdevs</name>
        <qualifiedname>fcmaes.optimizer.Cma_ask_tell.sdevs</qualifiedname>
        <initializer>=  sdevs</initializer>
        <briefdescription>
<para>Standard deviation for the initial sampling. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2256" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2256" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" compoundref="optimizer_8py" startline="2291" endline="2306">fcmaes.optimizer.Cma_ask_tell.minimize</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a09d9c0f932642fd605a5db7793836eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.optimizer.Cma_ask_tell.__init__</definition>
        <argsstring>(self, max_evaluations=50000, popsize=31, guess=None, stop_fitness=-np.inf, sdevs=None)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.optimizer.Cma_ask_tell.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" kindref="member">max_evaluations</ref></type>
          <defname>max_evaluations</defname>
          <defval>50000</defval>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a2a32bf4b1974985835c6fe4d78efbfa0" kindref="member">popsize</ref></type>
          <defname>popsize</defname>
          <defval>31</defval>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a3c87ed72ee15e5bcd89e0e484ef980c8" kindref="member">guess</ref></type>
          <defname>guess</defname>
          <defval>None</defval>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a7d349b5034ba57f809452070bc13b7c8" kindref="member">stop_fitness</ref></type>
          <defname>stop_fitness</defname>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a54e31b68f53d2561911716c31f45b1be" kindref="member">sdevs</ref></type>
          <defname>sdevs</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Initializes the CMA-ES optimizer with specified configurations. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This constructor initializes an instance of the CMA-ES optimizer with user-defined
   or default values. It sets the number of maximum evaluations, population size,
   initial guess, stop fitness value, and standard deviations for the optimizer to
   function as per the provided or default arguments.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>int The maximum number of evaluations the optimizer is allowed to perform. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>int The population size indicating the number of individuals per generation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional[float] An optional initial guess for the initial search point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>float The stop criterion based on achieving the target fitness value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sdevs</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional[float] An optional standard deviation array for initializing the optimizer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2250" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2251" bodyend="2257"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tuple[np.ndarray, float, int]</type>
        <definition> Tuple[np.ndarray, float, int] fcmaes.optimizer.Cma_ask_tell.minimize</definition>
        <argsstring>(self, Callable[[ArrayLike], float] fun, Optional[Bounds] bounds, Optional[ArrayLike] guess=None, Optional[float] sdevs=None, Optional[Generator] rg=Generator(PCG64DXSM()), store=None)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.optimizer.Cma_ask_tell.minimize</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>guess</defname>
          <array>[Bounds]</array>
        </param>
        <param>
          <type>Optional</type>
          <declname>guess</declname>
          <defname>sdevs</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>sdevs</declname>
          <defname>rg</defname>
          <array>[float]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>rg</declname>
          <defname>store</defname>
          <array>[Generator]</array>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>store</type>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Minimizes a given objective function within specified bounds using CMA-ES optimization algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method applies the Covariance Matrix Adaptation Evolution Strategy (CMA-ES) to find
   the minimum of a given objective function. The optimization process involves multiple
   iterations where candidate solutions are generated, evaluated, and subsequently refined
   until a stopping criterion is met.


       fun (Callable[[ArrayLike], float]): The objective function to minimize. This
           function should take an array-like input and return a scalar value as the
           function&apos;s output.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The boundary constraints for the optimization. Specifies the lower and upper bounds for the input values. guess (Optional[ArrayLike], optional): An initial guess for the solution. If not specified, the optimizer will choose an initial value automatically. sdevs (Optional[float], optional): Standard deviations for the CMA-ES algorithm. Ignored if already specified in the class instance. Defaults to None. rg (Optional[Generator], optional): A random number generator to use for sampling in the CMA-ES algorithm. Defaults to <computeroutput>Generator(PCG64DXSM())</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store</parametername>
</parameternamelist>
<parameterdescription>
<para>A storage mechanism to track evaluations and optimization states.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tuple[np.ndarray, float, int]: A tuple containing the best solution found as an array (<computeroutput>es.best_x</computeroutput>), its corresponding objective function value (<computeroutput>es.best_value</computeroutput>), and the total number of function evaluations performed (<computeroutput>evals</computeroutput>). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/optimizer.py" line="2285" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2291" bodyend="2306"/>
        <references refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" compoundref="optimizer_8py" startline="304" endline="307">fcmaes.optimizer.Optimizer.max_eval_num</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a761c0d9f4dee80eeede32decb57c33df" compoundref="cmaes_8py" startline="223">fcmaes.cmaes.Cmaes.popsize</references>
        <references refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" compoundref="cmaescpp_8py" startline="238">fcmaes.cmaescpp.ACMA_C.popsize</references>
        <references refid="classfcmaes_1_1crfmnescpp_1_1_c_r_f_m_n_e_s___c_1ad99f6494d91a596c6025dc5dceea0970" compoundref="crfmnescpp_8py" startline="221">fcmaes.crfmnescpp.CRFMNES_C.popsize</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1ac57257a177f51fb2637120cc3bf7ac55" compoundref="de_8py" startline="305">fcmaes.de.DE.popsize</references>
        <references refid="classfcmaes_1_1decpp_1_1_d_e___c_1ad122a7d34bd51afeb06228ad811f85ce" compoundref="decpp_8py" startline="293">fcmaes.decpp.DE_C.popsize</references>
        <references refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab0225e759a59fcf9af44411a93f195d6" compoundref="mode_8py" startline="487">fcmaes.mode.MODE.popsize</references>
        <references refid="classfcmaes_1_1modecpp_1_1_m_o_d_e___c_1ac85826131061fe5596f9420ff628f582" compoundref="modecpp_8py" startline="404">fcmaes.modecpp.MODE_C.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a2a32bf4b1974985835c6fe4d78efbfa0" compoundref="optimizer_8py" startline="2253">fcmaes.optimizer.Cma_ask_tell.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1adfed8224a61810107b7df8908a1872cb" compoundref="optimizer_8py" startline="1747">fcmaes.optimizer.Cma_awm.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1a2bb997ef25340e30ce54a699f3dea578" compoundref="optimizer_8py" startline="1359">fcmaes.optimizer.Cma_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a1861ff82b2a8709da57f19cb75a483ce" compoundref="optimizer_8py" startline="1609">fcmaes.optimizer.Cma_lw.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a90f09477ed9000f2c20750fa9ac73ed5" compoundref="optimizer_8py" startline="1471">fcmaes.optimizer.Cma_orig.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1a37f6cfbea5e7ae43fde5dec59bec4371" compoundref="optimizer_8py" startline="1230">fcmaes.optimizer.Cma_python.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__sep_1abddd49200f8a013f6fb55ce8698dd111" compoundref="optimizer_8py" startline="1893">fcmaes.optimizer.Cma_sep.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1abf110ededa79f1101d0acefadef018f8" compoundref="optimizer_8py" startline="900">fcmaes.optimizer.Crfmnes.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1adf8a89f1eba94649ba1fbafd89e68ba8" compoundref="optimizer_8py" startline="1001">fcmaes.optimizer.Crfmnes_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__cpp_1aeee0354a9a88e72a8de9a14518e0b631" compoundref="optimizer_8py" startline="2031">fcmaes.optimizer.De_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_de__python_1a69e1e5d4ef59774da8d311e5414f423b" compoundref="optimizer_8py" startline="2147">fcmaes.optimizer.De_python.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1ad8bb83e394a209e90761b1d77b424e47" compoundref="optimizer_8py" startline="1114">fcmaes.optimizer.Pgpe_cpp.popsize</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a54e31b68f53d2561911716c31f45b1be" compoundref="optimizer_8py" startline="2256">fcmaes.optimizer.Cma_ask_tell.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__awm_1a03b189caddedc1bdd249597786622c12" compoundref="optimizer_8py" startline="1750">fcmaes.optimizer.Cma_awm.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1aa1d8e4cb3a9f831afa8dbca3ba762120" compoundref="optimizer_8py" startline="1363">fcmaes.optimizer.Cma_cpp.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__lw_1a9fd63506e11cbdde339d20f108f6669c" compoundref="optimizer_8py" startline="1612">fcmaes.optimizer.Cma_lw.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__orig_1a246b1629a6e77876a03baa8ef4a485ff" compoundref="optimizer_8py" startline="1474">fcmaes.optimizer.Cma_orig.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__python_1ac16e971fb41d9c8acc8f95264585cf8c" compoundref="optimizer_8py" startline="1234">fcmaes.optimizer.Cma_python.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_cma__sep_1a5462e127f44c3e90a14dd8a7e4e39c78" compoundref="optimizer_8py" startline="1896">fcmaes.optimizer.Cma_sep.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes_1ac325129f209caae80b300744683acf34" compoundref="optimizer_8py" startline="903">fcmaes.optimizer.Crfmnes.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_crfmnes__cpp_1a87d76bc7c9ce8d7cce77354a5bd3415b" compoundref="optimizer_8py" startline="1004">fcmaes.optimizer.Crfmnes_cpp.sdevs</references>
        <references refid="classfcmaes_1_1optimizer_1_1_pgpe__cpp_1a32af3f567e2852891077542f09c90ec1" compoundref="optimizer_8py" startline="1117">fcmaes.optimizer.Pgpe_cpp.sdevs</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>CMA-ES Ask-Tell based optimizer. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements the Covariance Matrix Adaptation Evolution Strategy (CMA-ES) using an ask-tell interface for optimization tasks. It is designed to minimize objective functions over specified domains with control over population size and stopping criteria. The optimizer maintains an iterative mechanism for asking candidate solutions, evaluating their quality, and updating its models to converge to an optimal solution.</para>
<para>The optimizer integrates seamlessly with the CMA-ES library and allows for various customization options like user-defined initial guesses, population sizes, and stopping fitness.</para>
<para><verbatim>       If None, defaults are used.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fcmaes.optimizer.Cma_ask_tell</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.optimizer.Cma_ask_tell</label>
        <link refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fcmaes.optimizer.Optimizer</label>
        <link refid="classfcmaes_1_1optimizer_1_1_optimizer"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/optimizer.py" line="2212" column="1" bodyfile="fcmaes/optimizer.py" bodystart="2212" bodyend="2306"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a09d9c0f932642fd605a5db7793836eb6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_ask_tell</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1acf09b9b314cc4faf25c9935e76ae1821" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_ask_tell</scope><name>get_count_runs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a3c87ed72ee15e5bcd89e0e484ef980c8" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_ask_tell</scope><name>guess</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1adfc4b7f5b36503f186c68d521a9ede8a" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_ask_tell</scope><name>max_eval_num</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1a434f96f307e1bf0b0196933945d518e6" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_ask_tell</scope><name>max_evaluations</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a8cd8fee170f10d492be9efddd646f592" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_ask_tell</scope><name>minimize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_optimizer_1ae0423ec54db7b25862e01d7863ab4708" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_ask_tell</scope><name>name</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a2a32bf4b1974985835c6fe4d78efbfa0" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_ask_tell</scope><name>popsize</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a54e31b68f53d2561911716c31f45b1be" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_ask_tell</scope><name>sdevs</name></member>
      <member refid="classfcmaes_1_1optimizer_1_1_cma__ask__tell_1a7d349b5034ba57f809452070bc13b7c8" prot="public" virt="non-virtual"><scope>fcmaes::optimizer::Cma_ask_tell</scope><name>stop_fitness</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

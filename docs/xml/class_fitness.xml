<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_fitness" kind="class" language="C++" prot="public">
    <compoundname>Fitness</compoundname>
    <includes refid="evaluator_8h" local="no">evaluator.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_fitness_1a4a7797a662230b7f29774339a5a32b73" prot="private" static="no" mutable="no">
        <type><ref refid="evaluator_8h_1af419da391481d5e767cbe038009da309" kindref="member">callback_type</ref></type>
        <definition>callback_type Fitness::_func</definition>
        <argsstring></argsstring>
        <name>_func</name>
        <qualifiedname>Fitness::_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="395" column="19" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="395" bodyend="-1"/>
        <referencedby refid="class_fitness_1ad7d85700ac92bf7e332fcc3c4855e55c" compoundref="evaluator_8h" startline="228" endline="238">eval</referencedby>
        <referencedby refid="class_fitness_1aad187f1bc51d22a4dbca1a2dc8633bc2" compoundref="evaluator_8h" startline="216" endline="226">eval</referencedby>
        <referencedby refid="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" compoundref="evaluator_8h" startline="195" endline="210">Fitness</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fitness_1aeb85d0ee0818d8c995c2e829dbc44c3a" prot="private" static="no" mutable="no">
        <type><ref refid="evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc" kindref="member">callback_parallel</ref></type>
        <definition>callback_parallel Fitness::_func_par</definition>
        <argsstring></argsstring>
        <name>_func_par</name>
        <qualifiedname>Fitness::_func_par</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="396" column="23" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="396" bodyend="-1"/>
        <referencedby refid="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" compoundref="evaluator_8h" startline="195" endline="210">Fitness</referencedby>
        <referencedby refid="class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce" compoundref="evaluator_8h" startline="355" endline="369">values</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fitness_1a573c650b339da5518a559d444e28eae4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Fitness::_dim</definition>
        <argsstring></argsstring>
        <name>_dim</name>
        <qualifiedname>Fitness::_dim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="397" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="397" bodyend="-1"/>
        <referencedby refid="class_fitness_1ad7d85700ac92bf7e332fcc3c4855e55c" compoundref="evaluator_8h" startline="228" endline="238">eval</referencedby>
        <referencedby refid="class_fitness_1aad187f1bc51d22a4dbca1a2dc8633bc2" compoundref="evaluator_8h" startline="216" endline="226">eval</referencedby>
        <referencedby refid="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" compoundref="evaluator_8h" startline="195" endline="210">Fitness</referencedby>
        <referencedby refid="class_fitness_1a0bfcc395cf728a4b91e740f4197f927b" compoundref="evaluator_8h" startline="291" endline="296">sample</referencedby>
        <referencedby refid="class_fitness_1ae05d628784c7ca1954d012f23e82abf5" compoundref="evaluator_8h" startline="298" endline="301">sample</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fitness_1af000c91778d06c45b09cd36c83d76d9f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Fitness::_nobj</definition>
        <argsstring></argsstring>
        <name>_nobj</name>
        <qualifiedname>Fitness::_nobj</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="398" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="398" bodyend="-1"/>
        <referencedby refid="class_fitness_1ad7d85700ac92bf7e332fcc3c4855e55c" compoundref="evaluator_8h" startline="228" endline="238">eval</referencedby>
        <referencedby refid="class_fitness_1aad187f1bc51d22a4dbca1a2dc8633bc2" compoundref="evaluator_8h" startline="216" endline="226">eval</referencedby>
        <referencedby refid="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" compoundref="evaluator_8h" startline="195" endline="210">Fitness</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fitness_1abd64428a6046b128b3b142a2a030968f" prot="private" static="no" mutable="no">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::_lower</definition>
        <argsstring></argsstring>
        <name>_lower</name>
        <qualifiedname>Fitness::_lower</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="399" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="399" bodyend="-1"/>
        <referencedby refid="class_fitness_1a5d1edacb197d16faf0d3b2c035ab2308" compoundref="evaluator_8h" startline="283" endline="285">feasible</referencedby>
        <referencedby refid="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" compoundref="evaluator_8h" startline="195" endline="210">Fitness</referencedby>
        <referencedby refid="class_fitness_1a2085e5ce1a0afa5949366f580d5ec5a4" compoundref="evaluator_8h" startline="240" endline="244">getClosestFeasible</referencedby>
        <referencedby refid="class_fitness_1a1bc40ec5454b560389975e2a9ef8942e" compoundref="evaluator_8h" startline="246" endline="248">getClosestFeasible_i</referencedby>
        <referencedby refid="class_fitness_1aba037e55263004819068b5076532b4bf" compoundref="evaluator_8h" startline="250" endline="258">getClosestFeasibleNormed</referencedby>
        <referencedby refid="class_fitness_1a437e35b1a2557879b07e22de801a9855" compoundref="evaluator_8h" startline="384" endline="387">getMinValues</referencedby>
        <referencedby refid="class_fitness_1a171aed8b88b47ea516a37453cb958948" compoundref="evaluator_8h" startline="287" endline="289">hasBounds</referencedby>
        <referencedby refid="class_fitness_1ac9bd4bd8b140939a1fd9507160bc0b07" compoundref="evaluator_8h" startline="271" endline="275">norm</referencedby>
        <referencedby refid="class_fitness_1a57913ab2b23ab85ae2eab0f0a3a27961" compoundref="evaluator_8h" startline="277" endline="281">norm_i</referencedby>
        <referencedby refid="class_fitness_1a0bfcc395cf728a4b91e740f4197f927b" compoundref="evaluator_8h" startline="291" endline="296">sample</referencedby>
        <referencedby refid="class_fitness_1a517d31dc4378bfb8d94db9ccedaf948b" compoundref="evaluator_8h" startline="303" endline="307">sample_i</referencedby>
        <referencedby refid="class_fitness_1a8f1605fc965e423d17c837cfba3dc4c6" compoundref="evaluator_8h" startline="260" endline="269">setClosestFeasible</referencedby>
        <referencedby refid="class_fitness_1a233793c918d3978ec0e52ef8431102b6" compoundref="evaluator_8h" startline="371" endline="382">violations</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee" prot="private" static="no" mutable="no">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::_upper</definition>
        <argsstring></argsstring>
        <name>_upper</name>
        <qualifiedname>Fitness::_upper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="400" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="400" bodyend="-1"/>
        <referencedby refid="class_fitness_1a5d1edacb197d16faf0d3b2c035ab2308" compoundref="evaluator_8h" startline="283" endline="285">feasible</referencedby>
        <referencedby refid="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" compoundref="evaluator_8h" startline="195" endline="210">Fitness</referencedby>
        <referencedby refid="class_fitness_1a2085e5ce1a0afa5949366f580d5ec5a4" compoundref="evaluator_8h" startline="240" endline="244">getClosestFeasible</referencedby>
        <referencedby refid="class_fitness_1a1bc40ec5454b560389975e2a9ef8942e" compoundref="evaluator_8h" startline="246" endline="248">getClosestFeasible_i</referencedby>
        <referencedby refid="class_fitness_1aba037e55263004819068b5076532b4bf" compoundref="evaluator_8h" startline="250" endline="258">getClosestFeasibleNormed</referencedby>
        <referencedby refid="class_fitness_1ab25d3d92db939b7e739f97ea73907a71" compoundref="evaluator_8h" startline="389" endline="392">getMaxValues</referencedby>
        <referencedby refid="class_fitness_1a8f1605fc965e423d17c837cfba3dc4c6" compoundref="evaluator_8h" startline="260" endline="269">setClosestFeasible</referencedby>
        <referencedby refid="class_fitness_1a233793c918d3978ec0e52ef8431102b6" compoundref="evaluator_8h" startline="371" endline="382">violations</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302" prot="private" static="no" mutable="no">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::_scale</definition>
        <argsstring></argsstring>
        <name>_scale</name>
        <qualifiedname>Fitness::_scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="401" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="401" bodyend="-1"/>
        <referencedby refid="class_fitness_1a7fdca1fda75e3976b91e1e9e0eb12057" compoundref="evaluator_8h" startline="348" endline="353">decode</referencedby>
        <referencedby refid="class_fitness_1ab56956f8f382ffe1b9de9d35d156a65e" compoundref="evaluator_8h" startline="341" endline="346">encode</referencedby>
        <referencedby refid="class_fitness_1ac9bd4bd8b140939a1fd9507160bc0b07" compoundref="evaluator_8h" startline="271" endline="275">norm</referencedby>
        <referencedby refid="class_fitness_1a57913ab2b23ab85ae2eab0f0a3a27961" compoundref="evaluator_8h" startline="277" endline="281">norm_i</referencedby>
        <referencedby refid="class_fitness_1a0bfcc395cf728a4b91e740f4197f927b" compoundref="evaluator_8h" startline="291" endline="296">sample</referencedby>
        <referencedby refid="class_fitness_1a517d31dc4378bfb8d94db9ccedaf948b" compoundref="evaluator_8h" startline="303" endline="307">sample_i</referencedby>
        <referencedby refid="class_fitness_1a13571dee4e75e03d9c421a42cae811b3" compoundref="evaluator_8h" startline="325" endline="327">scale</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fitness_1a576f73240084816d6a42e61d04290a2e" prot="private" static="no" mutable="no">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::_typx</definition>
        <argsstring></argsstring>
        <name>_typx</name>
        <qualifiedname>Fitness::_typx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="402" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="402" bodyend="-1"/>
        <referencedby refid="class_fitness_1a7fdca1fda75e3976b91e1e9e0eb12057" compoundref="evaluator_8h" startline="348" endline="353">decode</referencedby>
        <referencedby refid="class_fitness_1ab56956f8f382ffe1b9de9d35d156a65e" compoundref="evaluator_8h" startline="341" endline="346">encode</referencedby>
        <referencedby refid="class_fitness_1a28d387d040da4d881537965535892e8a" compoundref="evaluator_8h" startline="329" endline="331">typx</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fitness_1ad522e44cbf9016953cd3ecaa5aaf657e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Fitness::_normalize</definition>
        <argsstring></argsstring>
        <name>_normalize</name>
        <qualifiedname>Fitness::_normalize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="403" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="403" bodyend="-1"/>
        <referencedby refid="class_fitness_1a7fdca1fda75e3976b91e1e9e0eb12057" compoundref="evaluator_8h" startline="348" endline="353">decode</referencedby>
        <referencedby refid="class_fitness_1ab56956f8f382ffe1b9de9d35d156a65e" compoundref="evaluator_8h" startline="341" endline="346">encode</referencedby>
        <referencedby refid="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" compoundref="evaluator_8h" startline="195" endline="210">Fitness</referencedby>
        <referencedby refid="class_fitness_1aba037e55263004819068b5076532b4bf" compoundref="evaluator_8h" startline="250" endline="258">getClosestFeasibleNormed</referencedby>
        <referencedby refid="class_fitness_1a8f1605fc965e423d17c837cfba3dc4c6" compoundref="evaluator_8h" startline="260" endline="269">setClosestFeasible</referencedby>
        <referencedby refid="class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6" compoundref="evaluator_8h" startline="333" endline="335">setNormalize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fitness_1a14b92585c6089d0ee1dc7663c9868d5d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Fitness::_terminate</definition>
        <argsstring></argsstring>
        <name>_terminate</name>
        <qualifiedname>Fitness::_terminate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="404" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="404" bodyend="-1"/>
        <referencedby refid="class_fitness_1ad7d85700ac92bf7e332fcc3c4855e55c" compoundref="evaluator_8h" startline="228" endline="238">eval</referencedby>
        <referencedby refid="class_fitness_1aad187f1bc51d22a4dbca1a2dc8633bc2" compoundref="evaluator_8h" startline="216" endline="226">eval</referencedby>
        <referencedby refid="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" compoundref="evaluator_8h" startline="195" endline="210">Fitness</referencedby>
        <referencedby refid="class_fitness_1ac511c0bb7aaf678184edfca41d4e1a81" compoundref="evaluator_8h" startline="337" endline="339">setTerminate</referencedby>
        <referencedby refid="class_fitness_1a08a70acdfa7636ae3285e3576c9e3d11" compoundref="evaluator_8h" startline="212" endline="214">terminate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fitness_1a37d7bfa82125022b6c648f5976fd5275" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Fitness::_evaluationCounter</definition>
        <argsstring></argsstring>
        <name>_evaluationCounter</name>
        <qualifiedname>Fitness::_evaluationCounter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="405" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="405" bodyend="-1"/>
        <referencedby refid="class_fitness_1ad7d85700ac92bf7e332fcc3c4855e55c" compoundref="evaluator_8h" startline="228" endline="238">eval</referencedby>
        <referencedby refid="class_fitness_1aad187f1bc51d22a4dbca1a2dc8633bc2" compoundref="evaluator_8h" startline="216" endline="226">eval</referencedby>
        <referencedby refid="class_fitness_1aba60038eac4e0e15d995e57f4ba079e1" compoundref="evaluator_8h" startline="313" endline="315">evaluations</referencedby>
        <referencedby refid="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" compoundref="evaluator_8h" startline="195" endline="210">Fitness</referencedby>
        <referencedby refid="class_fitness_1a4ebdd48fa1e3dea8040c9c7bcf98aa17" compoundref="evaluator_8h" startline="321" endline="323">incrEvaluations</referencedby>
        <referencedby refid="class_fitness_1adc49c4f7f25822a081a412af0acb51c4" compoundref="evaluator_8h" startline="317" endline="319">resetEvaluations</referencedby>
        <referencedby refid="class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce" compoundref="evaluator_8h" startline="355" endline="369">values</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Fitness::Fitness</definition>
        <argsstring>(callback_type func, callback_parallel func_par_, int dim, int nobj, const vec &amp;lower, const vec &amp;upper)</argsstring>
        <name>Fitness</name>
        <qualifiedname>Fitness::Fitness</qualifiedname>
        <param>
          <type><ref refid="evaluator_8h_1af419da391481d5e767cbe038009da309" kindref="member">callback_type</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc" kindref="member">callback_parallel</ref></type>
          <declname>func_par_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nobj</declname>
        </param>
        <param>
          <type>const <ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>const <ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="195" column="5" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="195" bodyend="210"/>
        <references refid="class_fitness_1a573c650b339da5518a559d444e28eae4" compoundref="evaluator_8h" startline="397">_dim</references>
        <references refid="class_fitness_1a37d7bfa82125022b6c648f5976fd5275" compoundref="evaluator_8h" startline="405">_evaluationCounter</references>
        <references refid="class_fitness_1a4a7797a662230b7f29774339a5a32b73" compoundref="evaluator_8h" startline="395">_func</references>
        <references refid="class_fitness_1aeb85d0ee0818d8c995c2e829dbc44c3a" compoundref="evaluator_8h" startline="396">_func_par</references>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1af000c91778d06c45b09cd36c83d76d9f" compoundref="evaluator_8h" startline="398">_nobj</references>
        <references refid="class_fitness_1ad522e44cbf9016953cd3ecaa5aaf657e" compoundref="evaluator_8h" startline="403">_normalize</references>
        <references refid="class_fitness_1a14b92585c6089d0ee1dc7663c9868d5d" compoundref="evaluator_8h" startline="404">_terminate</references>
        <references refid="class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee" compoundref="evaluator_8h" startline="400">_upper</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a08a70acdfa7636ae3285e3576c9e3d11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fitness::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <qualifiedname>Fitness::terminate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="212" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="212" bodyend="214"/>
        <references refid="class_fitness_1a14b92585c6089d0ee1dc7663c9868d5d" compoundref="evaluator_8h" startline="404">_terminate</references>
        <referencedby refid="pgpe_8cpp_1a83f6d1c91509d2c28e236afbea4bd172" compoundref="pgpe_8cpp" startline="306" endline="356">optimizePGPE_C</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1aad187f1bc51d22a4dbca1a2dc8633bc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::eval</definition>
        <argsstring>(const vec &amp;X)</argsstring>
        <name>eval</name>
        <qualifiedname>Fitness::eval</qualifiedname>
        <param>
          <type>const <ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="216" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="216" bodyend="226"/>
        <references refid="class_fitness_1a573c650b339da5518a559d444e28eae4" compoundref="evaluator_8h" startline="397">_dim</references>
        <references refid="class_fitness_1a37d7bfa82125022b6c648f5976fd5275" compoundref="evaluator_8h" startline="405">_evaluationCounter</references>
        <references refid="class_fitness_1a4a7797a662230b7f29774339a5a32b73" compoundref="evaluator_8h" startline="395">_func</references>
        <references refid="class_fitness_1af000c91778d06c45b09cd36c83d76d9f" compoundref="evaluator_8h" startline="398">_nobj</references>
        <references refid="class_fitness_1a14b92585c6089d0ee1dc7663c9868d5d" compoundref="evaluator_8h" startline="404">_terminate</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1ad7d85700ac92bf7e332fcc3c4855e55c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::eval</definition>
        <argsstring>(const double *const p)</argsstring>
        <name>eval</name>
        <qualifiedname>Fitness::eval</qualifiedname>
        <param>
          <type>const double *const</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="228" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="228" bodyend="238"/>
        <references refid="class_fitness_1a573c650b339da5518a559d444e28eae4" compoundref="evaluator_8h" startline="397">_dim</references>
        <references refid="class_fitness_1a37d7bfa82125022b6c648f5976fd5275" compoundref="evaluator_8h" startline="405">_evaluationCounter</references>
        <references refid="class_fitness_1a4a7797a662230b7f29774339a5a32b73" compoundref="evaluator_8h" startline="395">_func</references>
        <references refid="class_fitness_1af000c91778d06c45b09cd36c83d76d9f" compoundref="evaluator_8h" startline="398">_nobj</references>
        <references refid="class_fitness_1a14b92585c6089d0ee1dc7663c9868d5d" compoundref="evaluator_8h" startline="404">_terminate</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a2085e5ce1a0afa5949366f580d5ec5a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::getClosestFeasible</definition>
        <argsstring>(const vec &amp;X) const</argsstring>
        <name>getClosestFeasible</name>
        <qualifiedname>Fitness::getClosestFeasible</qualifiedname>
        <param>
          <type>const <ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="240" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="240" bodyend="244"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee" compoundref="evaluator_8h" startline="400">_upper</references>
        <referencedby refid="crfmnes_8cpp_1aa1796ba79109494532e2a57b9555b7e5" compoundref="crfmnes_8cpp" startline="439" endline="450">askCRFMNES_C</referencedby>
        <referencedby refid="class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce" compoundref="evaluator_8h" startline="355" endline="369">values</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a1bc40ec5454b560389975e2a9ef8942e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fitness::getClosestFeasible_i</definition>
        <argsstring>(int i, double x_i)</argsstring>
        <name>getClosestFeasible_i</name>
        <qualifiedname>Fitness::getClosestFeasible_i</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x_i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="246" column="12" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="246" bodyend="248"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee" compoundref="evaluator_8h" startline="400">_upper</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1aba037e55263004819068b5076532b4bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::getClosestFeasibleNormed</definition>
        <argsstring>(const vec &amp;X) const</argsstring>
        <name>getClosestFeasibleNormed</name>
        <qualifiedname>Fitness::getClosestFeasibleNormed</qualifiedname>
        <param>
          <type>const <ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="250" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="250" bodyend="258"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1ad522e44cbf9016953cd3ecaa5aaf657e" compoundref="evaluator_8h" startline="403">_normalize</references>
        <references refid="class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee" compoundref="evaluator_8h" startline="400">_upper</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a8f1605fc965e423d17c837cfba3dc4c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fitness::setClosestFeasible</definition>
        <argsstring>(mat &amp;X) const</argsstring>
        <name>setClosestFeasible</name>
        <qualifiedname>Fitness::setClosestFeasible</qualifiedname>
        <param>
          <type><ref refid="evaluator_8h_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="260" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="260" bodyend="269"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1ad522e44cbf9016953cd3ecaa5aaf657e" compoundref="evaluator_8h" startline="403">_normalize</references>
        <references refid="class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee" compoundref="evaluator_8h" startline="400">_upper</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1ac9bd4bd8b140939a1fd9507160bc0b07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::norm</definition>
        <argsstring>(const vec &amp;X) const</argsstring>
        <name>norm</name>
        <qualifiedname>Fitness::norm</qualifiedname>
        <param>
          <type>const <ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="271" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="271" bodyend="275"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302" compoundref="evaluator_8h" startline="401">_scale</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a57913ab2b23ab85ae2eab0f0a3a27961" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fitness::norm_i</definition>
        <argsstring>(int i, double x) const</argsstring>
        <name>norm_i</name>
        <qualifiedname>Fitness::norm_i</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="277" column="12" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="277" bodyend="281"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302" compoundref="evaluator_8h" startline="401">_scale</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a5d1edacb197d16faf0d3b2c035ab2308" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fitness::feasible</definition>
        <argsstring>(int i, double x)</argsstring>
        <name>feasible</name>
        <qualifiedname>Fitness::feasible</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="283" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="283" bodyend="285"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee" compoundref="evaluator_8h" startline="400">_upper</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a171aed8b88b47ea516a37453cb958948" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fitness::hasBounds</definition>
        <argsstring>()</argsstring>
        <name>hasBounds</name>
        <qualifiedname>Fitness::hasBounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="287" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="287" bodyend="289"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a0bfcc395cf728a4b91e740f4197f927b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::sample</definition>
        <argsstring>(pcg64 &amp;rs)</argsstring>
        <name>sample</name>
        <qualifiedname>Fitness::sample</qualifiedname>
        <param>
          <type>pcg64 &amp;</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="291" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="291" bodyend="296"/>
        <references refid="class_fitness_1a573c650b339da5518a559d444e28eae4" compoundref="evaluator_8h" startline="397">_dim</references>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302" compoundref="evaluator_8h" startline="401">_scale</references>
        <references refid="evaluator_8h_1a28d3e754a2edfdf68753c5562acd87d0" compoundref="evaluator_8h" startline="116" endline="120">uniformVec</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1ae05d628784c7ca1954d012f23e82abf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::sample</definition>
        <argsstring>(pcg64 &amp;rs, vec &amp;up, vec &amp;lo)</argsstring>
        <name>sample</name>
        <qualifiedname>Fitness::sample</qualifiedname>
        <param>
          <type>pcg64 &amp;</type>
          <declname>rs</declname>
        </param>
        <param>
          <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>up</declname>
        </param>
        <param>
          <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>lo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="298" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="298" bodyend="301"/>
        <references refid="class_fitness_1a573c650b339da5518a559d444e28eae4" compoundref="evaluator_8h" startline="397">_dim</references>
        <references refid="evaluator_8h_1a28d3e754a2edfdf68753c5562acd87d0" compoundref="evaluator_8h" startline="116" endline="120">uniformVec</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a517d31dc4378bfb8d94db9ccedaf948b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fitness::sample_i</definition>
        <argsstring>(int i, pcg64 &amp;rs)</argsstring>
        <name>sample_i</name>
        <qualifiedname>Fitness::sample_i</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>pcg64 &amp;</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="303" column="12" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="303" bodyend="307"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302" compoundref="evaluator_8h" startline="401">_scale</references>
        <references refid="evaluator_8h_1a287b4a368f58519084aafdb8b9ff2142" compoundref="evaluator_8h" startline="93">distr_01</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a34d84883637889310f026e2aed3d1bf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Fitness::sample_i</definition>
        <argsstring>(int i, pcg64 &amp;rs, vec &amp;up, vec &amp;lo)</argsstring>
        <name>sample_i</name>
        <qualifiedname>Fitness::sample_i</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>pcg64 &amp;</type>
          <declname>rs</declname>
        </param>
        <param>
          <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>up</declname>
        </param>
        <param>
          <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>lo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="309" column="12" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="309" bodyend="311"/>
        <references refid="evaluator_8h_1a287b4a368f58519084aafdb8b9ff2142" compoundref="evaluator_8h" startline="93">distr_01</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1aba60038eac4e0e15d995e57f4ba079e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Fitness::evaluations</definition>
        <argsstring>()</argsstring>
        <name>evaluations</name>
        <qualifiedname>Fitness::evaluations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="313" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="313" bodyend="315"/>
        <references refid="class_fitness_1a37d7bfa82125022b6c648f5976fd5275" compoundref="evaluator_8h" startline="405">_evaluationCounter</references>
        <referencedby refid="biteoptimizer_8cpp_1a3a44f6d1b82c40e137d534553af547b1" compoundref="biteoptimizer_8cpp" startline="126" endline="158">optimizeBite_C</referencedby>
        <referencedby refid="crfmnes_8cpp_1a9081791c22cd931e965641b985273b52" compoundref="crfmnes_8cpp" startline="365" endline="403">optimizeCRFMNES_C</referencedby>
        <referencedby refid="deoptimizer_8cpp_1aa394124712525387121d6045a579b805" compoundref="deoptimizer_8cpp" startline="451" endline="501">optimizeDE_C</referencedby>
        <referencedby refid="pgpe_8cpp_1a83f6d1c91509d2c28e236afbea4bd172" compoundref="pgpe_8cpp" startline="306" endline="356">optimizePGPE_C</referencedby>
        <referencedby refid="acmaesoptimizer_8cpp_1abe96370a07bb4c8fff0bc6e13e105c29" compoundref="acmaesoptimizer_8cpp" startline="698" endline="711">resultACMA_C</referencedby>
        <referencedby refid="crfmnes_8cpp_1aefaccee22121ee2d0f43d33fd5968c22" compoundref="crfmnes_8cpp" startline="484" endline="497">resultCRFMNES_C</referencedby>
        <referencedby refid="deoptimizer_8cpp_1a57cc84b1da95b58421bcd567fb01f67b" compoundref="deoptimizer_8cpp" startline="582" endline="595">resultDE_C</referencedby>
        <referencedby refid="pgpe_8cpp_1abd7f5b28d4595d7f9102a532a9f8c367" compoundref="pgpe_8cpp" startline="433" endline="446">resultPGPE_C</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1adc49c4f7f25822a081a412af0acb51c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fitness::resetEvaluations</definition>
        <argsstring>()</argsstring>
        <name>resetEvaluations</name>
        <qualifiedname>Fitness::resetEvaluations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="317" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="317" bodyend="319"/>
        <references refid="class_fitness_1a37d7bfa82125022b6c648f5976fd5275" compoundref="evaluator_8h" startline="405">_evaluationCounter</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a4ebdd48fa1e3dea8040c9c7bcf98aa17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fitness::incrEvaluations</definition>
        <argsstring>()</argsstring>
        <name>incrEvaluations</name>
        <qualifiedname>Fitness::incrEvaluations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="321" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="321" bodyend="323"/>
        <references refid="class_fitness_1a37d7bfa82125022b6c648f5976fd5275" compoundref="evaluator_8h" startline="405">_evaluationCounter</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a13571dee4e75e03d9c421a42cae811b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::scale</definition>
        <argsstring>()</argsstring>
        <name>scale</name>
        <qualifiedname>Fitness::scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="325" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="325" bodyend="327"/>
        <references refid="class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302" compoundref="evaluator_8h" startline="401">_scale</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a28d387d040da4d881537965535892e8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::typx</definition>
        <argsstring>()</argsstring>
        <name>typx</name>
        <qualifiedname>Fitness::typx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="329" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="329" bodyend="331"/>
        <references refid="class_fitness_1a576f73240084816d6a42e61d04290a2e" compoundref="evaluator_8h" startline="402">_typx</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fitness::setNormalize</definition>
        <argsstring>(bool normalize)</argsstring>
        <name>setNormalize</name>
        <qualifiedname>Fitness::setNormalize</qualifiedname>
        <param>
          <type>bool</type>
          <declname>normalize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="333" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="333" bodyend="335"/>
        <references refid="class_fitness_1ad522e44cbf9016953cd3ecaa5aaf657e" compoundref="evaluator_8h" startline="403">_normalize</references>
        <referencedby refid="acmaesoptimizer_8cpp_1ab128d45080b4023edb28550611997afe" compoundref="acmaesoptimizer_8cpp" startline="606" endline="634">initACMA_C</referencedby>
        <referencedby refid="crfmnes_8cpp_1a8ad70c1b6cadd1ed7b3bfa0d60d96911" compoundref="crfmnes_8cpp" startline="405" endline="430">initCRFMNES_C</referencedby>
        <referencedby refid="pgpe_8cpp_1a15e7e7ada6ad4ab26263681ac00ac55b" compoundref="pgpe_8cpp" startline="358" endline="388">initPGPE_C</referencedby>
        <referencedby refid="acmaesoptimizer_8cpp_1afc81c91b36bdd348c03d272ec53f027a" compoundref="acmaesoptimizer_8cpp" startline="560" endline="604">optimizeACMA_C</referencedby>
        <referencedby refid="crfmnes_8cpp_1a9081791c22cd931e965641b985273b52" compoundref="crfmnes_8cpp" startline="365" endline="403">optimizeCRFMNES_C</referencedby>
        <referencedby refid="pgpe_8cpp_1a83f6d1c91509d2c28e236afbea4bd172" compoundref="pgpe_8cpp" startline="306" endline="356">optimizePGPE_C</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1ac511c0bb7aaf678184edfca41d4e1a81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fitness::setTerminate</definition>
        <argsstring>()</argsstring>
        <name>setTerminate</name>
        <qualifiedname>Fitness::setTerminate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="337" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="337" bodyend="339"/>
        <references refid="class_fitness_1a14b92585c6089d0ee1dc7663c9868d5d" compoundref="evaluator_8h" startline="404">_terminate</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1ab56956f8f382ffe1b9de9d35d156a65e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::encode</definition>
        <argsstring>(const vec &amp;X) const</argsstring>
        <name>encode</name>
        <qualifiedname>Fitness::encode</qualifiedname>
        <param>
          <type>const <ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="341" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="341" bodyend="346"/>
        <references refid="class_fitness_1ad522e44cbf9016953cd3ecaa5aaf657e" compoundref="evaluator_8h" startline="403">_normalize</references>
        <references refid="class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302" compoundref="evaluator_8h" startline="401">_scale</references>
        <references refid="class_fitness_1a576f73240084816d6a42e61d04290a2e" compoundref="evaluator_8h" startline="402">_typx</references>
        <referencedby refid="acmaesoptimizer_8cpp_1ac4c1234b83df26634971a6707db1809d" compoundref="acmaesoptimizer_8cpp" startline="666" endline="683">tellXACMA_C</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a7fdca1fda75e3976b91e1e9e0eb12057" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::decode</definition>
        <argsstring>(const vec &amp;X) const</argsstring>
        <name>decode</name>
        <qualifiedname>Fitness::decode</qualifiedname>
        <param>
          <type>const <ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="348" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="348" bodyend="353"/>
        <references refid="class_fitness_1ad522e44cbf9016953cd3ecaa5aaf657e" compoundref="evaluator_8h" startline="403">_normalize</references>
        <references refid="class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302" compoundref="evaluator_8h" startline="401">_scale</references>
        <references refid="class_fitness_1a576f73240084816d6a42e61d04290a2e" compoundref="evaluator_8h" startline="402">_typx</references>
        <referencedby refid="acmaesoptimizer_8cpp_1afd9ea227572135d9dd02fe7ec9d489e4" compoundref="acmaesoptimizer_8cpp" startline="643" endline="654">askACMA_C</referencedby>
        <referencedby refid="crfmnes_8cpp_1aa1796ba79109494532e2a57b9555b7e5" compoundref="crfmnes_8cpp" startline="439" endline="450">askCRFMNES_C</referencedby>
        <referencedby refid="class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce" compoundref="evaluator_8h" startline="355" endline="369">values</referencedby>
        <referencedby refid="class_fitness_1a233793c918d3978ec0e52ef8431102b6" compoundref="evaluator_8h" startline="371" endline="382">violations</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fitness::values</definition>
        <argsstring>(const mat &amp;popX, vec &amp;ys)</argsstring>
        <name>values</name>
        <qualifiedname>Fitness::values</qualifiedname>
        <param>
          <type>const <ref refid="evaluator_8h_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref> &amp;</type>
          <declname>popX</declname>
        </param>
        <param>
          <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref> &amp;</type>
          <declname>ys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="355" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="355" bodyend="369"/>
        <references refid="class_fitness_1a37d7bfa82125022b6c648f5976fd5275" compoundref="evaluator_8h" startline="405">_evaluationCounter</references>
        <references refid="class_fitness_1aeb85d0ee0818d8c995c2e829dbc44c3a" compoundref="evaluator_8h" startline="396">_func_par</references>
        <references refid="class_fitness_1a7fdca1fda75e3976b91e1e9e0eb12057" compoundref="evaluator_8h" startline="348" endline="353">decode</references>
        <references refid="class_fitness_1a2085e5ce1a0afa5949366f580d5ec5a4" compoundref="evaluator_8h" startline="240" endline="244">getClosestFeasible</references>
        <referencedby refid="pgpe_8cpp_1a83f6d1c91509d2c28e236afbea4bd172" compoundref="pgpe_8cpp" startline="306" endline="356">optimizePGPE_C</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a233793c918d3978ec0e52ef8431102b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="evaluator_8h_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
        <definition>vec Fitness::violations</definition>
        <argsstring>(const mat &amp;X, double penalty_coef)</argsstring>
        <name>violations</name>
        <qualifiedname>Fitness::violations</qualifiedname>
        <param>
          <type>const <ref refid="evaluator_8h_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref> &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_coef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="371" column="9" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="371" bodyend="382"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
        <references refid="class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee" compoundref="evaluator_8h" startline="400">_upper</references>
        <references refid="class_fitness_1a7fdca1fda75e3976b91e1e9e0eb12057" compoundref="evaluator_8h" startline="348" endline="353">decode</references>
        <references refid="class_fitness_1a233793c918d3978ec0e52ef8431102b6" compoundref="evaluator_8h" startline="371" endline="382">violations</references>
        <references refid="evaluator_8h_1a909812174fa9829bc49f6e00edb00b90" compoundref="evaluator_8h" startline="139" endline="141">zeros</references>
        <referencedby refid="class_fitness_1a233793c918d3978ec0e52ef8431102b6" compoundref="evaluator_8h" startline="371" endline="382">violations</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1a437e35b1a2557879b07e22de801a9855" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fitness::getMinValues</definition>
        <argsstring>(double *const p) const</argsstring>
        <name>getMinValues</name>
        <qualifiedname>Fitness::getMinValues</qualifiedname>
        <param>
          <type>double *const</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="384" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="384" bodyend="387"/>
        <references refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" compoundref="evaluator_8h" startline="399">_lower</references>
      </memberdef>
      <memberdef kind="function" id="class_fitness_1ab25d3d92db939b7e739f97ea73907a71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fitness::getMaxValues</definition>
        <argsstring>(double *const p) const</argsstring>
        <name>getMaxValues</name>
        <qualifiedname>Fitness::getMaxValues</qualifiedname>
        <param>
          <type>double *const</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/include/evaluator.h" line="389" column="10" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="389" bodyend="392"/>
        <references refid="class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee" compoundref="evaluator_8h" startline="400">_upper</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Fitness</label>
        <link refid="class_fitness"/>
      </node>
    </collaborationgraph>
    <location file="_fcmaescpp/include/evaluator.h" line="191" column="1" bodyfile="_fcmaescpp/include/evaluator.h" bodystart="191" bodyend="406"/>
    <listofallmembers>
      <member refid="class_fitness_1a573c650b339da5518a559d444e28eae4" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_dim</name></member>
      <member refid="class_fitness_1a37d7bfa82125022b6c648f5976fd5275" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_evaluationCounter</name></member>
      <member refid="class_fitness_1a4a7797a662230b7f29774339a5a32b73" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_func</name></member>
      <member refid="class_fitness_1aeb85d0ee0818d8c995c2e829dbc44c3a" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_func_par</name></member>
      <member refid="class_fitness_1abd64428a6046b128b3b142a2a030968f" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_lower</name></member>
      <member refid="class_fitness_1af000c91778d06c45b09cd36c83d76d9f" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_nobj</name></member>
      <member refid="class_fitness_1ad522e44cbf9016953cd3ecaa5aaf657e" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_normalize</name></member>
      <member refid="class_fitness_1abc2f2bdcf8f5eafe359d6f7492f0a302" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_scale</name></member>
      <member refid="class_fitness_1a14b92585c6089d0ee1dc7663c9868d5d" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_terminate</name></member>
      <member refid="class_fitness_1a576f73240084816d6a42e61d04290a2e" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_typx</name></member>
      <member refid="class_fitness_1acc824dbf4b0d84fa1a291bd6b16403ee" prot="private" virt="non-virtual"><scope>Fitness</scope><name>_upper</name></member>
      <member refid="class_fitness_1a7fdca1fda75e3976b91e1e9e0eb12057" prot="public" virt="non-virtual"><scope>Fitness</scope><name>decode</name></member>
      <member refid="class_fitness_1ab56956f8f382ffe1b9de9d35d156a65e" prot="public" virt="non-virtual"><scope>Fitness</scope><name>encode</name></member>
      <member refid="class_fitness_1aad187f1bc51d22a4dbca1a2dc8633bc2" prot="public" virt="non-virtual"><scope>Fitness</scope><name>eval</name></member>
      <member refid="class_fitness_1ad7d85700ac92bf7e332fcc3c4855e55c" prot="public" virt="non-virtual"><scope>Fitness</scope><name>eval</name></member>
      <member refid="class_fitness_1aba60038eac4e0e15d995e57f4ba079e1" prot="public" virt="non-virtual"><scope>Fitness</scope><name>evaluations</name></member>
      <member refid="class_fitness_1a5d1edacb197d16faf0d3b2c035ab2308" prot="public" virt="non-virtual"><scope>Fitness</scope><name>feasible</name></member>
      <member refid="class_fitness_1a810378027f4bbbefc1b6fe1e42c0abb2" prot="public" virt="non-virtual"><scope>Fitness</scope><name>Fitness</name></member>
      <member refid="class_fitness_1a2085e5ce1a0afa5949366f580d5ec5a4" prot="public" virt="non-virtual"><scope>Fitness</scope><name>getClosestFeasible</name></member>
      <member refid="class_fitness_1a1bc40ec5454b560389975e2a9ef8942e" prot="public" virt="non-virtual"><scope>Fitness</scope><name>getClosestFeasible_i</name></member>
      <member refid="class_fitness_1aba037e55263004819068b5076532b4bf" prot="public" virt="non-virtual"><scope>Fitness</scope><name>getClosestFeasibleNormed</name></member>
      <member refid="class_fitness_1ab25d3d92db939b7e739f97ea73907a71" prot="public" virt="non-virtual"><scope>Fitness</scope><name>getMaxValues</name></member>
      <member refid="class_fitness_1a437e35b1a2557879b07e22de801a9855" prot="public" virt="non-virtual"><scope>Fitness</scope><name>getMinValues</name></member>
      <member refid="class_fitness_1a171aed8b88b47ea516a37453cb958948" prot="public" virt="non-virtual"><scope>Fitness</scope><name>hasBounds</name></member>
      <member refid="class_fitness_1a4ebdd48fa1e3dea8040c9c7bcf98aa17" prot="public" virt="non-virtual"><scope>Fitness</scope><name>incrEvaluations</name></member>
      <member refid="class_fitness_1ac9bd4bd8b140939a1fd9507160bc0b07" prot="public" virt="non-virtual"><scope>Fitness</scope><name>norm</name></member>
      <member refid="class_fitness_1a57913ab2b23ab85ae2eab0f0a3a27961" prot="public" virt="non-virtual"><scope>Fitness</scope><name>norm_i</name></member>
      <member refid="class_fitness_1adc49c4f7f25822a081a412af0acb51c4" prot="public" virt="non-virtual"><scope>Fitness</scope><name>resetEvaluations</name></member>
      <member refid="class_fitness_1a0bfcc395cf728a4b91e740f4197f927b" prot="public" virt="non-virtual"><scope>Fitness</scope><name>sample</name></member>
      <member refid="class_fitness_1ae05d628784c7ca1954d012f23e82abf5" prot="public" virt="non-virtual"><scope>Fitness</scope><name>sample</name></member>
      <member refid="class_fitness_1a517d31dc4378bfb8d94db9ccedaf948b" prot="public" virt="non-virtual"><scope>Fitness</scope><name>sample_i</name></member>
      <member refid="class_fitness_1a34d84883637889310f026e2aed3d1bf3" prot="public" virt="non-virtual"><scope>Fitness</scope><name>sample_i</name></member>
      <member refid="class_fitness_1a13571dee4e75e03d9c421a42cae811b3" prot="public" virt="non-virtual"><scope>Fitness</scope><name>scale</name></member>
      <member refid="class_fitness_1a8f1605fc965e423d17c837cfba3dc4c6" prot="public" virt="non-virtual"><scope>Fitness</scope><name>setClosestFeasible</name></member>
      <member refid="class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6" prot="public" virt="non-virtual"><scope>Fitness</scope><name>setNormalize</name></member>
      <member refid="class_fitness_1ac511c0bb7aaf678184edfca41d4e1a81" prot="public" virt="non-virtual"><scope>Fitness</scope><name>setTerminate</name></member>
      <member refid="class_fitness_1a08a70acdfa7636ae3285e3576c9e3d11" prot="public" virt="non-virtual"><scope>Fitness</scope><name>terminate</name></member>
      <member refid="class_fitness_1a28d387d040da4d881537965535892e8a" prot="public" virt="non-virtual"><scope>Fitness</scope><name>typx</name></member>
      <member refid="class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce" prot="public" virt="non-virtual"><scope>Fitness</scope><name>values</name></member>
      <member refid="class_fitness_1a233793c918d3978ec0e52ef8431102b6" prot="public" virt="non-virtual"><scope>Fitness</scope><name>violations</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

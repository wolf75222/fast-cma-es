<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1evaluator_1_1__fitness" kind="class" language="Python" prot="protected">
    <compoundname>fcmaes::evaluator::_fitness</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1evaluator_1_1__fitness_1af7c0600358aeaeefc43be1935db00c49" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.evaluator._fitness::fun</definition>
        <argsstring></argsstring>
        <name>fun</name>
        <qualifiedname>fcmaes.evaluator._fitness.fun</qualifiedname>
        <initializer>=  fun</initializer>
        <briefdescription>
<para>The fitness function used to evaluate fitness values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="412" column="1" bodyfile="fcmaes/evaluator.py" bodystart="412" bodyend="-1"/>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1ac24e8f7966063c3bc0cc215a561cbadb" compoundref="crypto_8py" startline="167" endline="170">examples.crypto.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1add29e0fd221efd5ffa3ce2f0933b633f" compoundref="harvesting_8py" startline="211" endline="214">examples.harvesting.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a65088d25d52805209f6dfec80ed1aa9f" compoundref="jobshop_8py" startline="252" endline="255">examples.jobshop.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback_1a2725c10a3383f79e36a236de01c56c53" compoundref="evaluator_8py" startline="723" endline="729">fcmaes.evaluator.callback.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__mo_1a99eab2bafd1186fff0be59544a596443" compoundref="evaluator_8py" startline="880" endline="893">fcmaes.evaluator.callback_mo.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__par_1a2cc5592287f3feddcda3e51dcf38054b" compoundref="evaluator_8py" startline="950" endline="969">fcmaes.evaluator.callback_par.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1callback__so_1a91b3f73bc6c6999748aaf8bfb94cdd39" compoundref="evaluator_8py" startline="795" endline="809">fcmaes.evaluator.callback_so.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1wrapper_1a3da595496f0fa1e7a64955db25dec429" compoundref="mode_8py" startline="1370" endline="1403">fcmaes.mode.wrapper.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1moretry_1_1mo__wrapper_1a9f091a54dc6f2c2fefb4c6a90ab108a2" compoundref="moretry_8py" startline="327" endline="335">fcmaes.moretry.mo_wrapper.eval</referencedby>
        <referencedby refid="classexamples_1_1benchmark__gtop__pygmo_1_1pygmo__udp_1a8b05705866c5de83931191324a4e1311" compoundref="benchmark__gtop__pygmo_8py" startline="46" endline="48">examples.benchmark_gtop_pygmo.pygmo_udp.fitness</referencedby>
        <referencedby refid="classfcmaes_1_1moretry_1_1mo__wrapper_1a9dbf1252c03ebe42925abe561e556598" compoundref="moretry_8py" startline="346" endline="348">fcmaes.moretry.mo_wrapper.mo_eval</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a1209aafc30c6a32427e2707c0bcadd22" compoundref="crypto_8py" startline="171" endline="176">examples.crypto.fitness.mofun</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a3ba688bf0d5b34a2cc6268a2248dfaa0" compoundref="crypto_8py" startline="177" endline="180">examples.crypto.fitness.ndfun</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_n_lopt_1a02628583a11cb998eba4aa6f9b499f76" compoundref="optimizer_8py" startline="3307" endline="3313">fcmaes.optimizer.NLopt.nlfunc</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1aa36396c7701eed3f5d8e84a14a111104" compoundref="evaluator_8py" startline="433" endline="437">fcmaes.evaluator._fitness.values</referencedby>
        <referencedby refid="classfcmaes_1_1retry_1_1_store_1aac8eb97e032a0f6c9bd340e6702c642c" compoundref="retry_8py" startline="536" endline="550">fcmaes.retry.Store.wrapper</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1evaluator_1_1__fitness_1a12e30e84b93a7ecd593b0358d92d8a0c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int fcmaes.evaluator._fitness::evaluation_counter</definition>
        <argsstring></argsstring>
        <name>evaluation_counter</name>
        <qualifiedname>fcmaes.evaluator._fitness.evaluation_counter</qualifiedname>
        <initializer>=  0</initializer>
        <briefdescription>
<para>Counter tracking the number of fitness evaluations performed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="413" column="1" bodyfile="fcmaes/evaluator.py" bodystart="413" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1aa36396c7701eed3f5d8e84a14a111104" compoundref="evaluator_8py" startline="433" endline="437">fcmaes.evaluator._fitness.values</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1evaluator_1_1__fitness_1a87bb609b86427fcd5228e0ab0b175ca0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.evaluator._fitness::lower</definition>
        <argsstring></argsstring>
        <name>lower</name>
        <qualifiedname>fcmaes.evaluator._fitness.lower</qualifiedname>
        <initializer>=  lower</initializer>
        <briefdescription>
<para>The lower bound for input values. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be <computeroutput>None</computeroutput> if no lower bound is defined. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="414" column="1" bodyfile="fcmaes/evaluator.py" bodystart="414" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1aa3f08e7e3d5e33149762ebf261b6c719" compoundref="mode_8py" startline="819" endline="824">fcmaes.mode.MODE._feasible</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab6f842a65bbcbab7bc6821c25737d0aa" compoundref="mode_8py" startline="838" endline="849">fcmaes.mode.MODE._modifier</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a8eb775858ef6da65ce5d71629503e622" compoundref="mode_8py" startline="799" endline="804">fcmaes.mode.MODE._sample</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a763742cf075aeb82ff147ef85a40c7a0" compoundref="evaluator_8py" startline="452" endline="460">fcmaes.evaluator._fitness.closestFeasible</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a29791dbcb2e070361529475630de2052" compoundref="mode_8py" startline="694" endline="731">fcmaes.mode.MODE.pop_update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fcmaes.evaluator._fitness::normalize</definition>
        <argsstring></argsstring>
        <name>normalize</name>
        <qualifiedname>fcmaes.evaluator._fitness.normalize</qualifiedname>
        <initializer>=  False</initializer>
        <briefdescription>
<para>Indicates whether normalization of input values is applied. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="415" column="1" bodyfile="fcmaes/evaluator.py" bodystart="415" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a763742cf075aeb82ff147ef85a40c7a0" compoundref="evaluator_8py" startline="452" endline="460">fcmaes.evaluator._fitness.closestFeasible</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a0461d372942bcc1d8a5a92bca09aace8" compoundref="evaluator_8py" startline="491" endline="496">fcmaes.evaluator._fitness.decode</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a80ef3b0f3b67f83f4b72bce0f35b28b6" compoundref="evaluator_8py" startline="472" endline="477">fcmaes.evaluator._fitness.encode</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__cpp_1adf0a83599c8dbbdab6e4c0482e22443a" compoundref="optimizer_8py" startline="1402" endline="1416">fcmaes.optimizer.Cma_cpp.minimize</referencedby>
        <referencedby refid="classfcmaes_1_1optimizer_1_1_cma__python_1a11b849f7e44223c9edba4c1247b7e9e6" compoundref="optimizer_8py" startline="1273" endline="1285">fcmaes.optimizer.Cma_python.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1evaluator_1_1__fitness_1ab1b189d5d30d98b40ca9a05798b591f7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.evaluator._fitness::upper</definition>
        <argsstring></argsstring>
        <name>upper</name>
        <qualifiedname>fcmaes.evaluator._fitness.upper</qualifiedname>
        <initializer>=  upper</initializer>
        <briefdescription>
<para>The upper bound for input values. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be <computeroutput>None</computeroutput> if no upper bound is defined. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="419" column="1" bodyfile="fcmaes/evaluator.py" bodystart="419" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1aa3f08e7e3d5e33149762ebf261b6c719" compoundref="mode_8py" startline="819" endline="824">fcmaes.mode.MODE._feasible</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1ab6f842a65bbcbab7bc6821c25737d0aa" compoundref="mode_8py" startline="838" endline="849">fcmaes.mode.MODE._modifier</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a8eb775858ef6da65ce5d71629503e622" compoundref="mode_8py" startline="799" endline="804">fcmaes.mode.MODE._sample</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a763742cf075aeb82ff147ef85a40c7a0" compoundref="evaluator_8py" startline="452" endline="460">fcmaes.evaluator._fitness.closestFeasible</referencedby>
        <referencedby refid="classfcmaes_1_1mode_1_1_m_o_d_e_1a29791dbcb2e070361529475630de2052" compoundref="mode_8py" startline="694" endline="731">fcmaes.mode.MODE.pop_update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1evaluator_1_1__fitness_1a81d7f4f260b083112c1c7c06c28f1fa8" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>fcmaes.evaluator._fitness::scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <qualifiedname>fcmaes.evaluator._fitness.scale</qualifiedname>
        <initializer>=  0.5 * (<ref refid="classfcmaes_1_1evaluator_1_1__fitness_1ab1b189d5d30d98b40ca9a05798b591f7" kindref="member">upper</ref> - <ref refid="classfcmaes_1_1evaluator_1_1__fitness_1a87bb609b86427fcd5228e0ab0b175ca0" kindref="member">lower</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="420" column="1" bodyfile="fcmaes/evaluator.py" bodystart="420" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a0461d372942bcc1d8a5a92bca09aace8" compoundref="evaluator_8py" startline="491" endline="496">fcmaes.evaluator._fitness.decode</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a80ef3b0f3b67f83f4b72bce0f35b28b6" compoundref="evaluator_8py" startline="472" endline="477">fcmaes.evaluator._fitness.encode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1evaluator_1_1__fitness_1a96f3612f153e1efc5b985b8c9b104e11" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>fcmaes.evaluator._fitness::typx</definition>
        <argsstring></argsstring>
        <name>typx</name>
        <qualifiedname>fcmaes.evaluator._fitness.typx</qualifiedname>
        <initializer>=  0.5 * (<ref refid="classfcmaes_1_1evaluator_1_1__fitness_1ab1b189d5d30d98b40ca9a05798b591f7" kindref="member">upper</ref> + <ref refid="classfcmaes_1_1evaluator_1_1__fitness_1a87bb609b86427fcd5228e0ab0b175ca0" kindref="member">lower</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="421" column="1" bodyfile="fcmaes/evaluator.py" bodystart="421" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a0461d372942bcc1d8a5a92bca09aace8" compoundref="evaluator_8py" startline="491" endline="496">fcmaes.evaluator._fitness.decode</referencedby>
        <referencedby refid="classfcmaes_1_1evaluator_1_1__fitness_1a80ef3b0f3b67f83f4b72bce0f35b28b6" compoundref="evaluator_8py" startline="472" endline="477">fcmaes.evaluator._fitness.encode</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1evaluator_1_1__fitness_1adff76348882223d9268c6768e5115ebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.evaluator._fitness.__init__</definition>
        <argsstring>(self, fun, lower, upper, normalize=None)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.evaluator._fitness.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1evaluator_1_1__fitness_1af7c0600358aeaeefc43be1935db00c49" kindref="member">fun</ref></type>
          <defname>fun</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1evaluator_1_1__fitness_1a87bb609b86427fcd5228e0ab0b175ca0" kindref="member">lower</ref></type>
          <defname>lower</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1evaluator_1_1__fitness_1ab1b189d5d30d98b40ca9a05798b591f7" kindref="member">upper</ref></type>
          <defname>upper</defname>
        </param>
        <param>
          <type><ref refid="classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e" kindref="member">normalize</ref></type>
          <defname>normalize</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Initializes the class with a given function, lower and upper bounds, and an optional normalization flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>A function object that defines the operation or behavior related to the instance of the class. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lower</parametername>
</parameternamelist>
<parameterdescription>
<para>A numeric value or an iterable defining the lower bounds for the </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upper</parametername>
</parameternamelist>
<parameterdescription>
<para>A numeric value or an iterable defining the upper bounds for the </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional; A boolean flag indicating whether the function&apos;s behavior should be normalized. Defaults to False. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="411" column="1" bodyfile="fcmaes/evaluator.py" bodystart="411" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1evaluator_1_1__fitness_1aa36396c7701eed3f5d8e84a14a111104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.evaluator._fitness.values</definition>
        <argsstring>(self, Xs)</argsstring>
        <name>values</name>
        <qualifiedname>fcmaes.evaluator._fitness.values</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>Xs</type>
          <defname>Xs</defname>
        </param>
        <briefdescription>
<para>Evaluates the given input values through the provided function while tracking the number of evaluations performed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Xs</parametername>
</parameternamelist>
<parameterdescription>
<para>Input values for which the function is evaluated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>np An array containing the evaluated results. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="433" column="1" bodyfile="fcmaes/evaluator.py" bodystart="433" bodyend="437"/>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a12e30e84b93a7ecd593b0358d92d8a0c" compoundref="evaluator_8py" startline="413">fcmaes.evaluator._fitness.evaluation_counter</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a9421450cd349123b0c703029528418f5" compoundref="advretry_8py" startline="303">fcmaes.advretry.Store.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_astrofun_1a09c240962ab5a0efcdc4bd91487fae2a" compoundref="astro_8py" startline="107">fcmaes.astro.Astrofun.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_cassini1minlp_1a1cbd83402656701b417eb6d8766727fd" compoundref="astro_8py" startline="651">fcmaes.astro.Cassini1minlp.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_cassini1multi_1abc0c4735a3014c94fe6934f96c7a2b84" compoundref="astro_8py" startline="602">fcmaes.astro.Cassini1multi.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_gtoc1_1a144ad84d1ad2a646e794e87808f1f6b9" compoundref="astro_8py" startline="224">fcmaes.astro.Gtoc1.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_tandem_1a7289ad20163a2b464e987587daa2fd90" compoundref="astro_8py" startline="451">fcmaes.astro.Tandem.fun</references>
        <references refid="classfcmaes_1_1astro_1_1_tandem__minlp_1ab4f58a6afc6358ae6c4004395eb94ade" compoundref="astro_8py" startline="525">fcmaes.astro.Tandem_minlp.fun</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1ad346a5d42fbaec4c0fa1eed13ca09757" compoundref="de_8py" startline="601">fcmaes.de.DE.fun</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1af7c0600358aeaeefc43be1935db00c49" compoundref="evaluator_8py" startline="412">fcmaes.evaluator._fitness.fun</references>
        <references refid="classfcmaes_1_1evaluator_1_1_evaluator_1ae5b016e0ced992bbb7b07073a7df5a4c" compoundref="evaluator_8py" startline="206">fcmaes.evaluator.Evaluator.fun</references>
        <referencedby refid="classfcmaes_1_1multiretry_1_1multiretry_1a9be3531534aef30b5b4f3242da6a69db" compoundref="multiretry_8py" startline="264" endline="269">fcmaes.multiretry.multiretry.remove_worst</referencedby>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1evaluator_1_1__fitness_1a763742cf075aeb82ff147ef85a40c7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.evaluator._fitness.closestFeasible</definition>
        <argsstring>(self, X)</argsstring>
        <name>closestFeasible</name>
        <qualifiedname>fcmaes.evaluator._fitness.closestFeasible</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>X</type>
          <defname>X</defname>
        </param>
        <briefdescription>
<para>Finds and returns the closest feasible value(s) within the specified boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   If lower and upper bounds are defined, the value(s) are clipped between those
   bounds. If normalization is enabled, the values are clipped between -1.0 and
   1.0. Otherwise, the original value(s) are returned.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>The value(s) to be adjusted to the closest feasible within the specified boundaries.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value(s) clipped to the closest feasible within the boundaries. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="452" column="1" bodyfile="fcmaes/evaluator.py" bodystart="452" bodyend="460"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a69725da93edb777480fc90c959d45678" compoundref="advretry_8py" startline="304">fcmaes.advretry.Store.lower</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a81bf83c8277ff8319a7c2ee4c4189669" compoundref="cmaes_8py" startline="204">fcmaes.cmaes.Cmaes.lower</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1abfb162caa78015d04524bf151b9dd823" compoundref="de_8py" startline="302">fcmaes.de.DE.lower</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a87bb609b86427fcd5228e0ab0b175ca0" compoundref="evaluator_8py" startline="414">fcmaes.evaluator._fitness.lower</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e" compoundref="evaluator_8py" startline="415">fcmaes.evaluator._fitness.normalize</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a8d112bb91cc58f032a0bb929c236fd8e" compoundref="advretry_8py" startline="304">fcmaes.advretry.Store.upper</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1aee7e5c28fcdad6c41c9589f49d05a56a" compoundref="cmaes_8py" startline="204">fcmaes.cmaes.Cmaes.upper</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1a779d053f6915d9a593bec26d7a4dab45" compoundref="de_8py" startline="302">fcmaes.de.DE.upper</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1ab1b189d5d30d98b40ca9a05798b591f7" compoundref="evaluator_8py" startline="419">fcmaes.evaluator._fitness.upper</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1evaluator_1_1__fitness_1a80ef3b0f3b67f83f4b72bce0f35b28b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.evaluator._fitness.encode</definition>
        <argsstring>(self, X)</argsstring>
        <name>encode</name>
        <qualifiedname>fcmaes.evaluator._fitness.encode</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>X</type>
          <defname>X</defname>
        </param>
        <briefdescription>
<para>Encodes the input data X by either normalizing it based on provided scaling factors or leaving it unchanged depending on the normalization setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data to encode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The encoded data, normalized if the <computeroutput>normalize</computeroutput> attribute is set to True, otherwise the original input. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="472" column="1" bodyfile="fcmaes/evaluator.py" bodystart="472" bodyend="477"/>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e" compoundref="evaluator_8py" startline="415">fcmaes.evaluator._fitness.normalize</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a81d7f4f260b083112c1c7c06c28f1fa8" compoundref="evaluator_8py" startline="420">fcmaes.evaluator._fitness.scale</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a96f3612f153e1efc5b985b8c9b104e11" compoundref="evaluator_8py" startline="421">fcmaes.evaluator._fitness.typx</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1evaluator_1_1__fitness_1a0461d372942bcc1d8a5a92bca09aace8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.evaluator._fitness.decode</definition>
        <argsstring>(self, X)</argsstring>
        <name>decode</name>
        <qualifiedname>fcmaes.evaluator._fitness.decode</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>X</type>
          <defname>X</defname>
        </param>
        <briefdescription>
<para>Decodes the given input using an optional normalization method. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   If normalization is enabled, it applies a transformation to the input based on the provided
   scale and typx values. Otherwise, it returns the input as is.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data to decode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The decoded data. If normalization is enabled, it will be adjusted using the defined scale and typx values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/evaluator.py" line="491" column="1" bodyfile="fcmaes/evaluator.py" bodystart="491" bodyend="496"/>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e" compoundref="evaluator_8py" startline="415">fcmaes.evaluator._fitness.normalize</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a81d7f4f260b083112c1c7c06c28f1fa8" compoundref="evaluator_8py" startline="420">fcmaes.evaluator._fitness.scale</references>
        <references refid="classfcmaes_1_1evaluator_1_1__fitness_1a96f3612f153e1efc5b985b8c9b104e11" compoundref="evaluator_8py" startline="421">fcmaes.evaluator._fitness.typx</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents a fitness evaluation system for optimization problems. </para>
    </briefdescription>
    <detaileddescription>
<para>This class encapsulates a fitness evaluation system that supports parallel evaluation, manages scaling and normalization of input values based on given bounds, and provides encoding and decoding mechanisms for the input values. It tracks the number of fitness evaluations performed and ensures that inputs conform to specified feasible bounds. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.evaluator._fitness</label>
        <link refid="classfcmaes_1_1evaluator_1_1__fitness"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/evaluator.py" line="380" column="1" bodyfile="fcmaes/evaluator.py" bodystart="380" bodyend="496"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1adff76348882223d9268c6768e5115ebe" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1a763742cf075aeb82ff147ef85a40c7a0" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>closestFeasible</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1a0461d372942bcc1d8a5a92bca09aace8" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>decode</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1a80ef3b0f3b67f83f4b72bce0f35b28b6" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>encode</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1a12e30e84b93a7ecd593b0358d92d8a0c" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>evaluation_counter</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1af7c0600358aeaeefc43be1935db00c49" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>fun</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1a87bb609b86427fcd5228e0ab0b175ca0" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>lower</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1a332f053ac10729fa524170bb51362b3e" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>normalize</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1a81d7f4f260b083112c1c7c06c28f1fa8" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>scale</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1a96f3612f153e1efc5b985b8c9b104e11" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>typx</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1ab1b189d5d30d98b40ca9a05798b591f7" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>upper</name></member>
      <member refid="classfcmaes_1_1evaluator_1_1__fitness_1aa36396c7701eed3f5d8e84a14a111104" prot="public" virt="non-virtual"><scope>fcmaes::evaluator::_fitness</scope><name>values</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classfcmaes_1_1testfun_1_1_wrapper" kind="class" language="Python" prot="public">
    <compoundname>fcmaes::testfun::Wrapper</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfcmaes_1_1testfun_1_1_wrapper_1a672784c241ae3b65b49297a7e5669b3f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.testfun.Wrapper::func</definition>
        <argsstring></argsstring>
        <name>func</name>
        <qualifiedname>fcmaes.testfun.Wrapper.func</qualifiedname>
        <initializer>=  fun</initializer>
        <briefdescription>
<para>The function to be evaluated. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the instance with function to optimize and dimension of the problem.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>Callable function to optimize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>int. The dimensionality of the optimization problem.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Callable. The function to optimize. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="94" column="1" bodyfile="fcmaes/testfun.py" bodystart="94" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" compoundref="testfun_8py" startline="111" endline="120">fcmaes.testfun.Wrapper.eval</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1testfun_1_1_wrapper_1a3dfee5cd0eb8f872c25bedf57ca02cf5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.testfun.Wrapper::statMutex</definition>
        <argsstring></argsstring>
        <name>statMutex</name>
        <qualifiedname>fcmaes.testfun.Wrapper.statMutex</qualifiedname>
        <initializer>=  mp.Lock()</initializer>
        <briefdescription>
<para>multiprocessing.Lock. </para>
        </briefdescription>
        <detaileddescription>
<para>A lock to ensure thread safety. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="95" column="1" bodyfile="fcmaes/testfun.py" bodystart="95" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" compoundref="testfun_8py" startline="111" endline="120">fcmaes.testfun.Wrapper.eval</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1testfun_1_1_wrapper_1a150ab1471fdda3ff21e3f4e29adf1225" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.testfun.Wrapper::best_x</definition>
        <argsstring></argsstring>
        <name>best_x</name>
        <qualifiedname>fcmaes.testfun.Wrapper.best_x</qualifiedname>
        <initializer>=  mp.RawArray(ct.c_double, dim)</initializer>
        <briefdescription>
<para>Shared memory array to store the inputs. </para>
        </briefdescription>
        <detaileddescription>
<para>multiprocessing.Array.</para>
<para>Shared array storing the best optimization solution found so far. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="96" column="1" bodyfile="fcmaes/testfun.py" bodystart="96" bodyend="-1"/>
        <referencedby refid="classexamples_1_1trappist__delivery_1_1fitness_1a9c1664f5b2f23d74d40c0d36262af5b4" compoundref="trappist__delivery_8py" startline="893" endline="903">examples.trappist_delivery.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" compoundref="testfun_8py" startline="111" endline="120">fcmaes.testfun.Wrapper.eval</referencedby>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1ad0135b00f2c165118000017b25b3bfa4" compoundref="testfun_8py" startline="130" endline="132">fcmaes.testfun.Wrapper.get_best_x</referencedby>
        <referencedby refid="classexamples_1_1trappist__delivery_1_1fitness_1ad25284f2ed9bbb5897ec7ca711e5fa17" compoundref="trappist__delivery_8py" startline="944" endline="954">examples.trappist_delivery.fitness.optimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1testfun_1_1_wrapper_1a676b9c1af1cf8c2b284854e792637541" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.testfun.Wrapper::best_y</definition>
        <argsstring></argsstring>
        <name>best_y</name>
        <qualifiedname>fcmaes.testfun.Wrapper.best_y</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_double, sys.float_info.max)</initializer>
        <briefdescription>
<para>Shared memory value to store the best function. </para>
        </briefdescription>
        <detaileddescription>
<para>multiprocessing.Value.</para>
<para>Shared value storing the best objective value found so far. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="97" column="1" bodyfile="fcmaes/testfun.py" bodystart="97" bodyend="-1"/>
        <referencedby refid="classexamples_1_1arm_1_1fitness_1ac275bc61471d8757c126d150d47ce202" compoundref="arm_8py" startline="78" endline="88">examples.arm.fitness.__call__</referencedby>
        <referencedby refid="classexamples_1_1noisy__tsp_1_1_t_s_p_1a820f00764aca30493d15b5fbaab1f558" compoundref="noisy__tsp_8py" startline="63" endline="73">examples.noisy_tsp.TSP.__call__</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a4eff7a725e23a7148b932307532f6542" compoundref="scheduling_8py" startline="113" endline="137">examples.scheduling.fitness.__call__</referencedby>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" compoundref="testfun_8py" startline="111" endline="120">fcmaes.testfun.Wrapper.eval</referencedby>
        <referencedby refid="classfbcover_1_1problem__fb_1aafca7fa77a778148b4e8f81fc10f5607" compoundref="fbcover_8py" startline="140" endline="151">fbcover.problem_fb.fitness_so</referencedby>
        <referencedby refid="classexamples_1_1crypto_1_1fitness_1a5a933388f6d0303f80251156e30e6b9b" compoundref="crypto_8py" startline="145" endline="166">examples.crypto.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1f8_1_1f8__problem_1a017bafba8cac9022a8683804494191ad" compoundref="f8_8py" startline="115" endline="125">examples.f8.f8_problem.fun</referencedby>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1ac9d51d3f1b4b38e405e5cce9fdd48b7d" compoundref="harvesting_8py" startline="185" endline="210">examples.harvesting.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1house_1_1cv__problem_1a10c3ff3227c149ee1be4501cb49caa23" compoundref="house_8py" startline="165" endline="177">examples.house.cv_problem.fun</referencedby>
        <referencedby refid="classexamples_1_1jobshop_1_1fitness_1a38ad69646f0c310cddd2d489743c2837" compoundref="jobshop_8py" startline="232" endline="251">examples.jobshop.fitness.fun</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a8d58e9d7e95ceb929858cdc06b0eda47" compoundref="scheduling_8py" startline="138" endline="162">examples.scheduling.fitness.fun</referencedby>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1ab86f2d8e5df54c431b95a8dac9eb7c80" compoundref="testfun_8py" startline="143" endline="145">fcmaes.testfun.Wrapper.get_best_y</referencedby>
        <referencedby refid="classexamples_1_1damp_1_1fitness_1af629821589f78858c6422998bcb02fe5" compoundref="damp_8py" startline="77" endline="90">examples.damp.fitness.qd_fit</referencedby>
        <referencedby refid="classhbv_1_1hbv_1a89aea998d9546dc3465bf46fbee95689" compoundref="hbv_8py" startline="81" endline="90">hbv.hbv.qd_fitness</referencedby>
        <referencedby refid="classlrgv_1_1lrgv_1a527b9b7a7927721b5320ab433bf75aea" compoundref="lrgv_8py" startline="73" endline="86">lrgv.lrgv.qd_fitness</referencedby>
        <referencedby refid="classexamples_1_1scheduling_1_1fitness_1a713c154b74b96a06274438bae71e2419" compoundref="scheduling_8py" startline="163" endline="186">examples.scheduling.fitness.qd_fun</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classfcmaes_1_1testfun_1_1_wrapper_1af9bf5ba50b9b5c1e6a147711b56f9218" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes.testfun.Wrapper::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <qualifiedname>fcmaes.testfun.Wrapper.count</qualifiedname>
        <initializer>=  mp.RawValue(ct.c_int, 0)</initializer>
        <briefdescription>
<para>Shared memory counter to track the number. </para>
        </briefdescription>
        <detaileddescription>
<para>multiprocessing.Value.</para>
<para>Shared value counting the number of function </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="98" column="1" bodyfile="fcmaes/testfun.py" bodystart="98" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" compoundref="testfun_8py" startline="111" endline="120">fcmaes.testfun.Wrapper.eval</referencedby>
        <referencedby refid="classfcmaes_1_1testfun_1_1_wrapper_1a4441f7cb86d2ff083093521f22c72784" compoundref="testfun_8py" startline="155" endline="157">fcmaes.testfun.Wrapper.get_count</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfcmaes_1_1testfun_1_1_wrapper_1ae106b1f604bdb6e24937cee17b03e2d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun.Wrapper.__init__</definition>
        <argsstring>(self, fun, dim)</argsstring>
        <name>__init__</name>
        <qualifiedname>fcmaes.testfun.Wrapper.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>fun</type>
          <defname>fun</defname>
        </param>
        <param>
          <type>dim</type>
          <defname>dim</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="93" column="1" bodyfile="fcmaes/testfun.py" bodystart="93" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun.Wrapper.eval</definition>
        <argsstring>(self, x)</argsstring>
        <name>eval</name>
        <qualifiedname>fcmaes.testfun.Wrapper.eval</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>Evaluates a given input <computeroutput>x</computeroutput> using the function <computeroutput>func</computeroutput>, updates the best observed value and corresponding input if applicable, and increments the evaluation counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data to be evaluated by the function <computeroutput>func</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of evaluating <computeroutput>x</computeroutput> using the function <computeroutput>func</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="111" column="1" bodyfile="fcmaes/testfun.py" bodystart="111" bodyend="120"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57" compoundref="advretry_8py" startline="338">fcmaes.advretry.Store.best_x</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a180e3a8a1099625f1d089209c93a6d85" compoundref="cmaes_8py" startline="318">fcmaes.cmaes.Cmaes.best_x</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1a7832310bdca0281b9cc91f4e2eae603e" compoundref="de_8py" startline="479">fcmaes.de.DE.best_x</references>
        <references refid="classfcmaes_1_1retry_1_1_store_1a005e34c5baaa20b4169e5da2cc2eaffa" compoundref="retry_8py" startline="514">fcmaes.retry.Store.best_x</references>
        <references refid="classfcmaes_1_1testfun_1_1_wrapper_1a150ab1471fdda3ff21e3f4e29adf1225" compoundref="testfun_8py" startline="96">fcmaes.testfun.Wrapper.best_x</references>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a" compoundref="advretry_8py" startline="336">fcmaes.advretry.Store.best_y</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a7dc4517b21d000a43313255dd7f7b5ee" compoundref="cmaes_8py" startline="258">fcmaes.cmaes.Cmaes.best_y</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1acc7ff6a5539d9f46c63aaf53152479fa" compoundref="de_8py" startline="329">fcmaes.de.DE.best_y</references>
        <references refid="classfcmaes_1_1mapelites_1_1wrapper_1ab23032c564e05c9cd76c2040c1ed9ac3" compoundref="mapelites_8py" startline="1330">fcmaes.mapelites.wrapper.best_y</references>
        <references refid="classfcmaes_1_1mode_1_1wrapper_1ab4c73a985518883d0979e00ade17d3a3" compoundref="mode_8py" startline="1350">fcmaes.mode.wrapper.best_y</references>
        <references refid="classfcmaes_1_1optimizer_1_1wrapper_1adec55deddde66d5eeaa8e51681f3c094" compoundref="optimizer_8py" startline="232">fcmaes.optimizer.wrapper.best_y</references>
        <references refid="classfcmaes_1_1retry_1_1_store_1abaa0621bb3e9f36e0a97ffe120d6653b" compoundref="retry_8py" startline="513">fcmaes.retry.Store.best_y</references>
        <references refid="classfcmaes_1_1testfun_1_1_wrapper_1a676b9c1af1cf8c2b284854e792637541" compoundref="testfun_8py" startline="97">fcmaes.testfun.Wrapper.best_y</references>
        <references refid="classfcmaes_1_1testfun_1_1_wrapper_1af9bf5ba50b9b5c1e6a147711b56f9218" compoundref="testfun_8py" startline="98">fcmaes.testfun.Wrapper.count</references>
        <references refid="classfcmaes_1_1testfun_1_1_wrapper_1a672784c241ae3b65b49297a7e5669b3f" compoundref="testfun_8py" startline="94">fcmaes.testfun.Wrapper.func</references>
        <references refid="classfcmaes_1_1testfun_1_1_wrapper_1a3dfee5cd0eb8f872c25bedf57ca02cf5" compoundref="testfun_8py" startline="95">fcmaes.testfun.Wrapper.statMutex</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1testfun_1_1_wrapper_1ad0135b00f2c165118000017b25b3bfa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun.Wrapper.get_best_x</definition>
        <argsstring>(self)</argsstring>
        <name>get_best_x</name>
        <qualifiedname>fcmaes.testfun.Wrapper.get_best_x</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Returns a copy of the best_x attribute. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method provides a copy of the `best_x` attribute to ensure the original
   data remains unaltered and secure from unintended modifications.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>list A copy of the best_x attribute. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="130" column="1" bodyfile="fcmaes/testfun.py" bodystart="130" bodyend="132"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1aeb660ff644cb19f40c20494360cebb57" compoundref="advretry_8py" startline="338">fcmaes.advretry.Store.best_x</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a180e3a8a1099625f1d089209c93a6d85" compoundref="cmaes_8py" startline="318">fcmaes.cmaes.Cmaes.best_x</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1a7832310bdca0281b9cc91f4e2eae603e" compoundref="de_8py" startline="479">fcmaes.de.DE.best_x</references>
        <references refid="classfcmaes_1_1retry_1_1_store_1a005e34c5baaa20b4169e5da2cc2eaffa" compoundref="retry_8py" startline="514">fcmaes.retry.Store.best_x</references>
        <references refid="classfcmaes_1_1testfun_1_1_wrapper_1a150ab1471fdda3ff21e3f4e29adf1225" compoundref="testfun_8py" startline="96">fcmaes.testfun.Wrapper.best_x</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1testfun_1_1_wrapper_1ab86f2d8e5df54c431b95a8dac9eb7c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun.Wrapper.get_best_y</definition>
        <argsstring>(self)</argsstring>
        <name>get_best_y</name>
        <qualifiedname>fcmaes.testfun.Wrapper.get_best_y</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Retrieves the value of the best_y attribute. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   This method returns the current value of the `best_y` attribute, which is likely
   used as a part of an optimization process or to represent the best-known value
   achieved during a computation.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>Any The value of the <computeroutput>best_y</computeroutput> attribute. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="143" column="1" bodyfile="fcmaes/testfun.py" bodystart="143" bodyend="145"/>
        <references refid="classfcmaes_1_1advretry_1_1_store_1a597ae039b1fe0bd28ed9afc8e270075a" compoundref="advretry_8py" startline="336">fcmaes.advretry.Store.best_y</references>
        <references refid="classfcmaes_1_1cmaes_1_1_cmaes_1a7dc4517b21d000a43313255dd7f7b5ee" compoundref="cmaes_8py" startline="258">fcmaes.cmaes.Cmaes.best_y</references>
        <references refid="classfcmaes_1_1de_1_1_d_e_1acc7ff6a5539d9f46c63aaf53152479fa" compoundref="de_8py" startline="329">fcmaes.de.DE.best_y</references>
        <references refid="classfcmaes_1_1mapelites_1_1wrapper_1ab23032c564e05c9cd76c2040c1ed9ac3" compoundref="mapelites_8py" startline="1330">fcmaes.mapelites.wrapper.best_y</references>
        <references refid="classfcmaes_1_1mode_1_1wrapper_1ab4c73a985518883d0979e00ade17d3a3" compoundref="mode_8py" startline="1350">fcmaes.mode.wrapper.best_y</references>
        <references refid="classfcmaes_1_1optimizer_1_1wrapper_1adec55deddde66d5eeaa8e51681f3c094" compoundref="optimizer_8py" startline="232">fcmaes.optimizer.wrapper.best_y</references>
        <references refid="classfcmaes_1_1retry_1_1_store_1abaa0621bb3e9f36e0a97ffe120d6653b" compoundref="retry_8py" startline="513">fcmaes.retry.Store.best_y</references>
        <references refid="classfcmaes_1_1testfun_1_1_wrapper_1a676b9c1af1cf8c2b284854e792637541" compoundref="testfun_8py" startline="97">fcmaes.testfun.Wrapper.best_y</references>
      </memberdef>
      <memberdef kind="function" id="classfcmaes_1_1testfun_1_1_wrapper_1a4441f7cb86d2ff083093521f22c72784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fcmaes.testfun.Wrapper.get_count</definition>
        <argsstring>(self)</argsstring>
        <name>get_count</name>
        <qualifiedname>fcmaes.testfun.Wrapper.get_count</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Fetches the current value of the count. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   The method retrieves the current value associated with the `count` attribute. The returned
   value represents the current count stored within the object.
</verbatim></para>
<para><simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>int The current value of the count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/testfun.py" line="155" column="1" bodyfile="fcmaes/testfun.py" bodystart="155" bodyend="157"/>
        <references refid="classfcmaes_1_1testfun_1_1_wrapper_1af9bf5ba50b9b5c1e6a147711b56f9218" compoundref="testfun_8py" startline="98">fcmaes.testfun.Wrapper.count</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="classfcmaes_1_1testfun_1_1_wrapper" kindref="compound">Wrapper</ref> for parallel computation with shared state. </para>
    </briefdescription>
    <detaileddescription>
<para>This class acts as a wrapper to provide thread/process-safe management of shared variables during multiprocessing operations. It enables evaluation of a function and maintains the best result (minimum value of function output) along with a counter of evaluations.</para>
<para><verbatim>       of function evaluations.
</verbatim> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>fcmaes.testfun.Wrapper</label>
        <link refid="classfcmaes_1_1testfun_1_1_wrapper"/>
      </node>
    </collaborationgraph>
    <location file="fcmaes/testfun.py" line="53" column="1" bodyfile="fcmaes/testfun.py" bodystart="53" bodyend="167"/>
    <listofallmembers>
      <member refid="classfcmaes_1_1testfun_1_1_wrapper_1ae106b1f604bdb6e24937cee17b03e2d1" prot="public" virt="non-virtual"><scope>fcmaes::testfun::Wrapper</scope><name>__init__</name></member>
      <member refid="classfcmaes_1_1testfun_1_1_wrapper_1a150ab1471fdda3ff21e3f4e29adf1225" prot="public" virt="non-virtual"><scope>fcmaes::testfun::Wrapper</scope><name>best_x</name></member>
      <member refid="classfcmaes_1_1testfun_1_1_wrapper_1a676b9c1af1cf8c2b284854e792637541" prot="public" virt="non-virtual"><scope>fcmaes::testfun::Wrapper</scope><name>best_y</name></member>
      <member refid="classfcmaes_1_1testfun_1_1_wrapper_1af9bf5ba50b9b5c1e6a147711b56f9218" prot="public" virt="non-virtual"><scope>fcmaes::testfun::Wrapper</scope><name>count</name></member>
      <member refid="classfcmaes_1_1testfun_1_1_wrapper_1a45ea4439b3b149098ed57d810656de38" prot="public" virt="non-virtual"><scope>fcmaes::testfun::Wrapper</scope><name>eval</name></member>
      <member refid="classfcmaes_1_1testfun_1_1_wrapper_1a672784c241ae3b65b49297a7e5669b3f" prot="public" virt="non-virtual"><scope>fcmaes::testfun::Wrapper</scope><name>func</name></member>
      <member refid="classfcmaes_1_1testfun_1_1_wrapper_1ad0135b00f2c165118000017b25b3bfa4" prot="public" virt="non-virtual"><scope>fcmaes::testfun::Wrapper</scope><name>get_best_x</name></member>
      <member refid="classfcmaes_1_1testfun_1_1_wrapper_1ab86f2d8e5df54c431b95a8dac9eb7c80" prot="public" virt="non-virtual"><scope>fcmaes::testfun::Wrapper</scope><name>get_best_y</name></member>
      <member refid="classfcmaes_1_1testfun_1_1_wrapper_1a4441f7cb86d2ff083093521f22c72784" prot="public" virt="non-virtual"><scope>fcmaes::testfun::Wrapper</scope><name>get_count</name></member>
      <member refid="classfcmaes_1_1testfun_1_1_wrapper_1a3dfee5cd0eb8f872c25bedf57ca02cf5" prot="public" virt="non-virtual"><scope>fcmaes::testfun::Wrapper</scope><name>statMutex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

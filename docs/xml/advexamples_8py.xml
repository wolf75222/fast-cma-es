<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="advexamples_8py" kind="file" language="Python">
    <compoundname>advexamples.py</compoundname>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1advexamples">examples::advexamples</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1advexamples_1a003eda07d83ddcf7aa3d5376ea6cc721" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::advexamples.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.advexamples.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/advexamples.py" line="19" column="1" bodyfile="examples/advexamples.py" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1advexamples_1ae8c80a7376195db7691268fbb40e1f13" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::advexamples.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.advexamples.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/advexamples.py" line="19" column="1" bodyfile="examples/advexamples.py" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1advexamples_1a74052630e376936dd3e5999c00f08e83" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::advexamples.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.advexamples.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/advexamples.py" line="19" column="1" bodyfile="examples/advexamples.py" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1advexamples_1a06cd80bb729c861f36e45723b48ed013" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::advexamples.problems</definition>
        <argsstring></argsstring>
        <name>problems</name>
        <qualifiedname>examples.advexamples.problems</qualifiedname>
        <initializer>=  [Cassini1(), Cassini2(), Rosetta(), Tandem(5), Messenger(), Gtoc1(), MessFull(), Sagas(), Cassini1minlp()]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/advexamples.py" line="30" column="1" bodyfile="examples/advexamples.py" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1advexamples_1afb9d784b8ee0668c4d9613b75f2b87a8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int examples::advexamples.min_evals</definition>
        <argsstring></argsstring>
        <name>min_evals</name>
        <qualifiedname>examples.advexamples.min_evals</qualifiedname>
        <initializer>=  1500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/advexamples.py" line="32" column="1" bodyfile="examples/advexamples.py" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1advexamples_1a356d2c98290d0378f8bf28fbdcc9a653" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>list examples::advexamples.algos</definition>
        <argsstring></argsstring>
        <name>algos</name>
        <qualifiedname>examples.advexamples.algos</qualifiedname>
        <initializer>=  [ de_cma(min_evals), da_cma(min_evals), Cma_cpp(min_evals), De_cpp(min_evals),
         Da_cpp(min_evals), Dual_annealing(min_evals), Differential_evolution(min_evals), de_cma_py(min_evals)]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/advexamples.py" line="34" column="1" bodyfile="examples/advexamples.py" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1advexamples_1af104a8054f05417e1d6b18ee536e1ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.advexamples.messengerFullLoop</definition>
        <argsstring>(opt, num=1)</argsstring>
        <name>messengerFullLoop</name>
        <qualifiedname>examples.advexamples.messengerFullLoop</qualifiedname>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>num</type>
          <defname>num</defname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/advexamples.py" line="22" column="1" bodyfile="examples/advexamples.py" bodystart="22" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1advexamples_1a2a20839039b9a15bbb1b28922a43fbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.advexamples.test_all</definition>
        <argsstring>(num_retries=1000, num=1)</argsstring>
        <name>test_all</name>
        <qualifiedname>examples.advexamples.test_all</qualifiedname>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>1000</defval>
        </param>
        <param>
          <type>num</type>
          <defname>num</defname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/advexamples.py" line="37" column="1" bodyfile="examples/advexamples.py" bodystart="37" bodyend="41"/>
        <references refid="namespaceexamples_1_1advexamples_1aebec6bee380e8587e7a76863116c6533" compoundref="advexamples_8py" startline="42" endline="48">examples.advexamples._test_optimizer</references>
        <referencedby refid="namespaceexamples_1_1advexamples_1a84fbed51a59ef6d65f1ed69b8dc9f709" compoundref="advexamples_8py" startline="49" endline="52">examples.advexamples.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1advexamples_1aebec6bee380e8587e7a76863116c6533" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.advexamples._test_optimizer</definition>
        <argsstring>(opt, problem, num_retries=10000, num=1, value_limit=100.0)</argsstring>
        <name>_test_optimizer</name>
        <qualifiedname>examples.advexamples._test_optimizer</qualifiedname>
        <param>
          <type>opt</type>
          <defname>opt</defname>
        </param>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <param>
          <type>num_retries</type>
          <defname>num_retries</defname>
          <defval>10000</defval>
        </param>
        <param>
          <type>num</type>
          <defname>num</defname>
          <defval>1</defval>
        </param>
        <param>
          <type>value_limit</type>
          <defname>value_limit</defname>
          <defval>100.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/advexamples.py" line="42" column="1" bodyfile="examples/advexamples.py" bodystart="42" bodyend="48"/>
        <referencedby refid="namespaceexamples_1_1advexamples_1a2a20839039b9a15bbb1b28922a43fbc9" compoundref="advexamples_8py" startline="37" endline="41">examples.advexamples.test_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1advexamples_1a84fbed51a59ef6d65f1ed69b8dc9f709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.advexamples.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <qualifiedname>examples.advexamples.main</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/advexamples.py" line="49" column="1" bodyfile="examples/advexamples.py" bodystart="49" bodyend="52"/>
        <references refid="namespaceexamples_1_1advexamples_1a84fbed51a59ef6d65f1ed69b8dc9f709" compoundref="advexamples_8py" startline="49" endline="52">examples.advexamples.main</references>
        <references refid="namespaceexamples_1_1advexamples_1a2a20839039b9a15bbb1b28922a43fbc9" compoundref="advexamples_8py" startline="37" endline="41">examples.advexamples.test_all</references>
        <referencedby refid="namespaceexamples_1_1advexamples_1a84fbed51a59ef6d65f1ed69b8dc9f709" compoundref="advexamples_8py" startline="49" endline="52">examples.advexamples.main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1advexamples" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Examples<sp/>for<sp/>fcmaes<sp/>coordinated<sp/>retry<sp/>from<sp/>https://www.esa.int/gsp/ACT/projects/gtop/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Used<sp/>to<sp/>generate<sp/>the<sp/>results<sp/>in<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Results.adoc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1astro" kindref="compound">fcmaes.astro</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MessFull,<sp/>Messenger,<sp/>Cassini2,<sp/>Rosetta,<sp/>Gtoc1,<sp/>Cassini1,<sp/>Tandem,<sp/>Sagas,<sp/>Cassini1minlp</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>de_cma,<sp/>de_cma_py,<sp/>da_cma,<sp/>Cma_cpp,<sp/>De_cpp,<sp/>Da_cpp,<sp/>Dual_annealing,<sp/>Differential_evolution</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>advretry</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="19" refid="namespaceexamples_1_1advexamples_1ae8c80a7376195db7691268fbb40e1f13" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespaceexamples_1_1advexamples_1af104a8054f05417e1d6b18ee536e1ca3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1advexamples_1af104a8054f05417e1d6b18ee536e1ca3" kindref="member">messengerFullLoop</ref>(opt,<sp/>num<sp/>=<sp/>1,):<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="classfcmaes_1_1astro_1_1_mess_full" kindref="compound">MessFull</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(problem.name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>opt.name)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>str(i+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>problem.name<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num<sp/>&gt;<sp/>1<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>problem.name</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advretry.minimize_plot(name,<sp/>opt,<sp/>problem.fun,<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.bounds,<sp/>12.0,<sp/>12.0,<sp/>50000)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30" refid="namespaceexamples_1_1advexamples_1a06cd80bb729c861f36e45723b48ed013" refkind="member"><highlight class="normal">problems<sp/>=<sp/>[<ref refid="classfcmaes_1_1astro_1_1_cassini1" kindref="compound">Cassini1</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_cassini2" kindref="compound">Cassini2</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_rosetta" kindref="compound">Rosetta</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_tandem" kindref="compound">Tandem</ref>(5),<sp/><ref refid="classfcmaes_1_1astro_1_1_messenger" kindref="compound">Messenger</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_gtoc1" kindref="compound">Gtoc1</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_mess_full" kindref="compound">MessFull</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_sagas" kindref="compound">Sagas</ref>(),<sp/><ref refid="classfcmaes_1_1astro_1_1_cassini1minlp" kindref="compound">Cassini1minlp</ref>()]</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespaceexamples_1_1advexamples_1afb9d784b8ee0668c4d9613b75f2b87a8" refkind="member"><highlight class="normal">min_evals<sp/>=<sp/>1500</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespaceexamples_1_1advexamples_1a356d2c98290d0378f8bf28fbdcc9a653" refkind="member"><highlight class="normal">algos<sp/>=<sp/>[<sp/>de_cma(min_evals),<sp/>da_cma(min_evals),<sp/><ref refid="classfcmaes_1_1optimizer_1_1_cma__cpp" kindref="compound">Cma_cpp</ref>(min_evals),<sp/><ref refid="classfcmaes_1_1optimizer_1_1_de__cpp" kindref="compound">De_cpp</ref>(min_evals),<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1optimizer_1_1_da__cpp" kindref="compound">Da_cpp</ref>(min_evals),<sp/><ref refid="classfcmaes_1_1optimizer_1_1_dual__annealing" kindref="compound">Dual_annealing</ref>(min_evals),<sp/><ref refid="classfcmaes_1_1optimizer_1_1_differential__evolution" kindref="compound">Differential_evolution</ref>(min_evals),<sp/>de_cma_py(min_evals)]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="namespaceexamples_1_1advexamples_1a2a20839039b9a15bbb1b28922a43fbc9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1advexamples_1a2a20839039b9a15bbb1b28922a43fbc9" kindref="member">test_all</ref>(num_retries<sp/>=<sp/>1000,<sp/>num<sp/>=<sp/>1):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>problem<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>problems:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>algo<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>algos:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1advexamples_1aebec6bee380e8587e7a76863116c6533" kindref="member">_test_optimizer</ref>(algo,<sp/>problem,<sp/>num_retries,<sp/>num,<sp/>value_limit<sp/>=<sp/>1E99)<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="namespaceexamples_1_1advexamples_1aebec6bee380e8587e7a76863116c6533" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1advexamples_1aebec6bee380e8587e7a76863116c6533" kindref="member">_test_optimizer</ref>(opt,<sp/>problem,<sp/>num_retries<sp/>=<sp/>10000,<sp/>num<sp/>=<sp/>1,<sp/>value_limit<sp/>=<sp/>100.0):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(problem.name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>opt.name)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>str(i+1)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>problem.name<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>num<sp/>&gt;<sp/>1<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>problem.name</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advretry.minimize_plot(name,<sp/>opt,<sp/>problem.fun,<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.bounds,<sp/>value_limit,<sp/>10.0,<sp/>num_retries)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="namespaceexamples_1_1advexamples_1a84fbed51a59ef6d65f1ed69b8dc9f709" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1advexamples_1a84fbed51a59ef6d65f1ed69b8dc9f709" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1advexamples_1a2a20839039b9a15bbb1b28922a43fbc9" kindref="member">test_all</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#messengerFullLoop(de_cma(min_evals))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1advexamples_1a84fbed51a59ef6d65f1ed69b8dc9f709" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/advexamples.py"/>
  </compounddef>
</doxygen>

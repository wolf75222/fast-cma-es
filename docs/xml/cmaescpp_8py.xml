<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="cmaescpp_8py" kind="file" language="Python">
    <compoundname>cmaescpp.py</compoundname>
    <innerclass refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c" prot="public">fcmaes::cmaescpp::ACMA_C</innerclass>
    <innernamespace refid="namespacefcmaes">fcmaes</innernamespace>
    <innernamespace refid="namespacefcmaes_1_1cmaescpp">fcmaes::cmaescpp</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacefcmaes_1_1cmaescpp_1a869b80a999c8dbaafec9a1e836b441b7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::cmaescpp.optimizeACMA_C</definition>
        <argsstring></argsstring>
        <name>optimizeACMA_C</name>
        <qualifiedname>fcmaes.cmaescpp.optimizeACMA_C</qualifiedname>
        <initializer>=  libcmalib.optimizeACMA_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="407" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="407" bodyend="-1"/>
        <referencedby refid="namespacefcmaes_1_1cmaescpp_1a625d259f091b81159e59b47837722d4e" compoundref="cmaescpp_8py" startline="104" endline="144">fcmaes.cmaescpp.minimize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1cmaescpp_1a4b4bc53bc7ff4a07bc165c3b3ede4e02" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::cmaescpp.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>fcmaes.cmaescpp.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="408" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1cmaescpp_1a5f13d5d8f530e90f5b93f5bacf82dfef" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::cmaescpp.initACMA_C</definition>
        <argsstring></argsstring>
        <name>initACMA_C</name>
        <qualifiedname>fcmaes.cmaescpp.initACMA_C</qualifiedname>
        <initializer>=  libcmalib.initACMA_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="414" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1cmaescpp_1a02a0f73f01d725c0440ce1cbe96fc018" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::cmaescpp.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>fcmaes.cmaescpp.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="420" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1cmaescpp_1a19d6ee3b1a025b0c87e16121a77e8afa" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::cmaescpp.destroyACMA_C</definition>
        <argsstring></argsstring>
        <name>destroyACMA_C</name>
        <qualifiedname>fcmaes.cmaescpp.destroyACMA_C</qualifiedname>
        <initializer>=  libcmalib.destroyACMA_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="422" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="422" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ae55112db9f934ddf1d3d01a09b812adb" compoundref="cmaescpp_8py" startline="256" endline="258">fcmaes.cmaescpp.ACMA_C.__del__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1cmaescpp_1a5d24fbafb1f6010caa637d9318fe88e2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::cmaescpp.askACMA_C</definition>
        <argsstring></argsstring>
        <name>askACMA_C</name>
        <qualifiedname>fcmaes.cmaescpp.askACMA_C</qualifiedname>
        <initializer>=  libcmalib.askACMA_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="425" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="425" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ad7ca82faa65b471b66977e2f18676025" compoundref="cmaescpp_8py" startline="277" endline="291">fcmaes.cmaescpp.ACMA_C.ask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1cmaescpp_1ae19b39d0288c14daa4d7db903c4285d6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::cmaescpp.tellACMA_C</definition>
        <argsstring></argsstring>
        <name>tellACMA_C</name>
        <qualifiedname>fcmaes.cmaescpp.tellACMA_C</qualifiedname>
        <initializer>=  libcmalib.tellACMA_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="428" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="428" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a4677822852841d0e52baa48fa91cbcb8" compoundref="cmaescpp_8py" startline="310" endline="319">fcmaes.cmaescpp.ACMA_C.tell</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1cmaescpp_1a72633ee9a21ca3a356464d6c570b0237" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::cmaescpp.tellXACMA_C</definition>
        <argsstring></argsstring>
        <name>tellXACMA_C</name>
        <qualifiedname>fcmaes.cmaescpp.tellXACMA_C</qualifiedname>
        <initializer>=  libcmalib.tellXACMA_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="432" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="432" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a344851d94557ce52f99da907ee61590d" compoundref="cmaescpp_8py" startline="336" endline="345">fcmaes.cmaescpp.ACMA_C.tell_x_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1cmaescpp_1a7f7e4ef0af633235aa443b759dba5ed9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::cmaescpp.populationACMA_C</definition>
        <argsstring></argsstring>
        <name>populationACMA_C</name>
        <qualifiedname>fcmaes.cmaescpp.populationACMA_C</qualifiedname>
        <initializer>=  libcmalib.populationACMA_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="436" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="436" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a348ca090a0116efc16fce6a4bd180871" compoundref="cmaescpp_8py" startline="361" endline="375">fcmaes.cmaescpp.ACMA_C.population</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacefcmaes_1_1cmaescpp_1aeecf9aa46c0d9cbb7e56087c5d7f0fef" prot="public" static="no" mutable="no">
        <type></type>
        <definition>fcmaes::cmaescpp.resultACMA_C</definition>
        <argsstring></argsstring>
        <name>resultACMA_C</name>
        <qualifiedname>fcmaes.cmaescpp.resultACMA_C</qualifiedname>
        <initializer>=  libcmalib.resultACMA_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="439" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="439" bodyend="-1"/>
        <referencedby refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1aaf2e40c524b9a8b328decb0b798bd695" compoundref="cmaescpp_8py" startline="390" endline="404">fcmaes.cmaescpp.ACMA_C.result</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacefcmaes_1_1cmaescpp_1a625d259f091b81159e59b47837722d4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OptimizeResult</type>
        <definition> OptimizeResult fcmaes.cmaescpp.minimize</definition>
        <argsstring>(Callable[[ArrayLike], float] fun, Optional[Bounds] bounds=None, Optional[ArrayLike] x0=None, Optional[Union[float, ArrayLike, Callable]] input_sigma=0.3, Optional[int] popsize=31, Optional[int] max_evaluations=100000, Optional[float] accuracy=1.0, Optional[float] stop_fitness=-np.inf, Optional[float] stop_hist=-1, Optional[Generator] rg=Generator(PCG64DXSM()), Optional[int] runid=0, Optional[int] workers=1, Optional[bool] normalize=True, Optional[bool] delayed_update=True, Optional[int] update_gap=None)</argsstring>
        <name>minimize</name>
        <qualifiedname>fcmaes.cmaescpp.minimize</qualifiedname>
        <param>
          <type>Callable</type>
          <defname>fun</defname>
          <array>[[ArrayLike]</array>
        </param>
        <param>
          <type>float]</type>
          <declname>fun</declname>
          <defname>bounds</defname>
        </param>
        <param>
          <type>Optional</type>
          <declname>bounds</declname>
          <defname>x0</defname>
          <array>[Bounds]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>x0</declname>
          <defname>input_sigma</defname>
          <array>[ArrayLike]</array>
          <defval>None</defval>
        </param>
        <param>
          <type>Optional]</type>
          <declname>input_sigma</declname>
          <defname>popsize</defname>
          <array>[Union[float, ArrayLike, Callable]</array>
          <defval>0.3</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>popsize</declname>
          <defname>max_evaluations</defname>
          <array>[int]</array>
          <defval>31</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>max_evaluations</declname>
          <defname>accuracy</defname>
          <array>[int]</array>
          <defval>100000</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>accuracy</declname>
          <defname>stop_fitness</defname>
          <array>[float]</array>
          <defval>1.0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_fitness</declname>
          <defname>stop_hist</defname>
          <array>[float]</array>
          <defval>-np.inf</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>stop_hist</declname>
          <defname>rg</defname>
          <array>[float]</array>
          <defval>-1</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>rg</declname>
          <defname>runid</defname>
          <array>[Generator]</array>
          <defval>Generator(PCG64DXSM())</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>runid</declname>
          <defname>workers</defname>
          <array>[int]</array>
          <defval>0</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>workers</declname>
          <defname>normalize</defname>
          <array>[int]</array>
          <defval>1</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>normalize</declname>
          <defname>delayed_update</defname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>delayed_update</declname>
          <defname>update_gap</defname>
          <array>[bool]</array>
          <defval>True</defval>
        </param>
        <param>
          <type>Optional</type>
          <declname>update_gap</declname>
          <array>[int]</array>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Optimizes a given objective function using an adaptive CMA-ES algorithm under specified constraints and parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This method allows for advanced customization in algorithm behavior, enabling stochastic optimization of complex, possibly non-linear functions.</para>
<para><verbatim>   fun (Callable[[ArrayLike], float]): The objective function to be minimized. It must accept a
       single argument, the candidate solution, and return a scalar fitness value.
</verbatim> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The bounds within which the optimization search is conducted. If None, no boundaries are enforced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial guess for the solution. If None, an initial guess will be randomly generated. input_sigma (Optional[Union[float, ArrayLike, Callable]]): Initial step size for the search, defining strategy parameter for standard deviations. Can also be an array indicating sigma per dimension or a callable returning sigma. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the population per generation. Affects the sampling process in each iteration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_evaluations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of function evaluations to perform before termination. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired accuracy of the solution or tolerance level for convergence checks. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_fitness</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold fitness value. If reached, the optimization process halts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop_hist</parametername>
</parameternamelist>
<parameterdescription>
<para>Historical improvement-based stopping condition. If None or negative, this criterion is disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rg</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator for stochastic sampling. Provides reproducibility when a specific generator seed is used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>runid</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique identifier for the optimization run, allowing for comparisons across runs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workers</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of worker threads/processes for parallel evaluation of the objective function. If set to 0, it defaults to non-parallel execution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normalize</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether solutions are normalized during the optimization process. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delayed_update</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies whether the algorithm updates the internal state of the covariance matrix immediately or after a delay. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>update_gap</parametername>
</parameternamelist>
<parameterdescription>
<para>Gap between covariance matrix updates. If None, a default gap is used.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
<simplesect kind="return"><para>OptimizeResult An object containing the optimization result, including the best solution <computeroutput>x</computeroutput>, the value of the objective function <computeroutput>fun</computeroutput> at <computeroutput>x</computeroutput>, the number of function evaluations <computeroutput>nfev</computeroutput>, the number of iterations performed <computeroutput>nit</computeroutput>, the optimizer&apos;s termination status <computeroutput>status</computeroutput>, and a boolean <computeroutput>success</computeroutput> indicating whether the optimization was successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fcmaes/cmaescpp.py" line="89" column="1" bodyfile="fcmaes/cmaescpp.py" bodystart="104" bodyend="144"/>
        <references refid="namespacefcmaes_1_1cmaescpp_1a869b80a999c8dbaafec9a1e836b441b7" compoundref="cmaescpp_8py" startline="407">fcmaes.cmaescpp.optimizeACMA_C</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>============================================================================= </para>
    </briefdescription>
    <detaileddescription>
<para>Fast version 1.6.11</para>
<para>(c) 2025 – Dietmar Wolz (c) 2025 – Latitude</para>
<para>License MIT</para>
<para><itemizedlist>
<listitem><para><ref refid="cmaescpp_8py" kindref="compound">cmaescpp.py</ref></para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Description</title><para><itemizedlist>
<listitem><para>Eigen based implementation of active CMA-ES.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="author"><para>:<itemizedlist>
<listitem><para>Dietmar Wolz <programlisting><codeline><highlight class="normal">-<sp/>romain.despoullains</highlight><highlight class="preprocessor">@latitude.eu</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">-<sp/>corentin.generet</highlight><highlight class="preprocessor">@latitude.eu</highlight></codeline>
</programlisting></para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>References</title><para><itemizedlist>
<listitem><para>[1] <ulink url="https://github.com/dietmarwo/fast-cma-es">https://github.com/dietmarwo/fast-cma-es</ulink></para>
</listitem><listitem><para>[2] <ulink url="http://cma.gforge.inria.fr/cmaes.m">http://cma.gforge.inria.fr/cmaes.m</ulink></para>
</listitem><listitem><para>[3] <ulink url="https://www.researchgate.net/publication/227050324_The_CMA_Evolution_Strategy_A_Comparing_Review">https://www.researchgate.net/publication/227050324_The_CMA_Evolution_Strategy_A_Comparing_Review</ulink></para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>Documentation</title><para><itemizedlist>
<listitem></listitem></itemizedlist>
</para>
</simplesect>
<hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacefcmaes_1_1cmaescpp" refkind="compound"><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">=============================================================================</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/>Fast<sp/>CMA-ES<sp/>-<sp/>version<sp/>1.6.11</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/>(c)<sp/>2025<sp/>–<sp/>Dietmar<sp/>Wolz</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/>(c)<sp/>2025<sp/>–<sp/>Latitude</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/>License:<sp/>MIT</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/>File:</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/>-<sp/>cmaescpp.py</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/>Description:</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/>-<sp/>Eigen<sp/>based<sp/>implementation<sp/>of<sp/>active<sp/>CMA-ES.</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/>Authors:</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/>-<sp/>Dietmar<sp/>Wolz</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/>-<sp/>romain.despoullains@latitude.eu</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/>-<sp/>corentin.generet@latitude.eu</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/>References:</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/>-<sp/>[1]<sp/>https://github.com/dietmarwo/fast-cma-es</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/>-<sp/>[2]<sp/>http://cma.gforge.inria.fr/cmaes.m</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/>-<sp/>[3]<sp/>https://www.researchgate.net/publication/227050324_The_CMA_Evolution_Strategy_A_Comparing_Review</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/>Documentation:</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/>-</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">=============================================================================</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.random<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PCG64DXSM,<sp/>Generator</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OptimizeResult,<sp/>Bounds</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1evaluator" kindref="compound">fcmaes.evaluator</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>_check_bounds,<sp/>_get_bounds,<sp/>mo_call_back_type,<sp/>callback_so,<sp/>callback_par,<sp/>call_back_par,<sp/>parallel,<sp/>libcmalib</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Optional,<sp/>Callable,<sp/>Union</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ArrayLike</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">os.environ[</highlight><highlight class="stringliteral">&apos;MKL_DEBUG_CPU_TYPE&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;5&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacefcmaes_1_1cmaescpp_1a625d259f091b81159e59b47837722d4e" kindref="member">minimize</ref>(fun:<sp/>Callable[[ArrayLike],<sp/>float],<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional[Bounds]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0:<sp/>Optional[ArrayLike]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma:<sp/>Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]<sp/>=<sp/>0.3,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize:<sp/>Optional[int]<sp/>=<sp/>31,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations:<sp/>Optional[int]<sp/><sp/>=<sp/>100000,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accuracy:<sp/>Optional[float]<sp/>=<sp/>1.0,<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness:<sp/>Optional[float]<sp/>=<sp/>-np.inf,<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_hist:<sp/>Optional[float]<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg:<sp/>Optional[Generator]<sp/>=<sp/>Generator(PCG64DXSM()),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid:<sp/>Optional[int]<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers:<sp/>Optional[int]<sp/>=<sp/>1,<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize:<sp/>Optional[bool]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayed_update:<sp/>Optional[bool]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update_gap:<sp/>Optional[int]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>OptimizeResult:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Optimizes<sp/>a<sp/>given<sp/>objective<sp/>function<sp/>using<sp/>an<sp/>adaptive<sp/>CMA-ES<sp/>algorithm<sp/>under<sp/>specified<sp/>constraints</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>parameters.<sp/>This<sp/>method<sp/>allows<sp/>for<sp/>advanced<sp/>customization<sp/>in<sp/>algorithm<sp/>behavior,<sp/>enabling</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>stochastic<sp/>optimization<sp/>of<sp/>complex,<sp/>possibly<sp/>non-linear<sp/>functions.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>(Callable[[ArrayLike],<sp/>float]):<sp/>The<sp/>objective<sp/>function<sp/>to<sp/>be<sp/>minimized.<sp/>It<sp/>must<sp/>accept<sp/>a</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>single<sp/>argument,<sp/>the<sp/>candidate<sp/>solution,<sp/>and<sp/>return<sp/>a<sp/>scalar<sp/>fitness<sp/>value.</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>(Optional[Bounds]):<sp/>The<sp/>bounds<sp/>within<sp/>which<sp/>the<sp/>optimization<sp/>search<sp/>is<sp/>conducted.<sp/>If<sp/>None,</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>boundaries<sp/>are<sp/>enforced.</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>(Optional[ArrayLike]):<sp/>Initial<sp/>guess<sp/>for<sp/>the<sp/>solution.<sp/>If<sp/>None,<sp/>an<sp/>initial<sp/>guess<sp/>will<sp/>be<sp/>randomly<sp/>generated.</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>(Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]):<sp/>Initial<sp/>step<sp/>size<sp/>for<sp/>the<sp/>search,<sp/>defining</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strategy<sp/>parameter<sp/>for<sp/>standard<sp/>deviations.<sp/>Can<sp/>also<sp/>be<sp/>an<sp/>array<sp/>indicating<sp/>sigma<sp/>per<sp/>dimension</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>a<sp/>callable<sp/>returning<sp/>sigma.</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(Optional[int]):<sp/>Size<sp/>of<sp/>the<sp/>population<sp/>per<sp/>generation.<sp/>Affects<sp/>the<sp/>sampling<sp/>process<sp/>in<sp/>each<sp/>iteration.</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>(Optional[int]):<sp/>Maximum<sp/>number<sp/>of<sp/>function<sp/>evaluations<sp/>to<sp/>perform<sp/>before<sp/>termination.</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accuracy<sp/>(Optional[float]):<sp/>Desired<sp/>accuracy<sp/>of<sp/>the<sp/>solution<sp/>or<sp/>tolerance<sp/>level<sp/>for<sp/>convergence<sp/>checks.</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness<sp/>(Optional[float]):<sp/>Threshold<sp/>fitness<sp/>value.<sp/>If<sp/>reached,<sp/>the<sp/>optimization<sp/>process<sp/>halts.</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_hist<sp/>(Optional[float]):<sp/>Historical<sp/>improvement-based<sp/>stopping<sp/>condition.<sp/>If<sp/>None<sp/>or<sp/>negative,<sp/>this</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criterion<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg<sp/>(Optional[Generator]):<sp/>Random<sp/>number<sp/>generator<sp/>for<sp/>stochastic<sp/>sampling.<sp/>Provides<sp/>reproducibility</highlight></codeline>
<codeline lineno="89" refid="namespacefcmaes_1_1cmaescpp_1a625d259f091b81159e59b47837722d4e" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>a<sp/>specific<sp/>generator<sp/>seed<sp/>is<sp/>used.</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid<sp/>(Optional[int]):<sp/>Unique<sp/>identifier<sp/>for<sp/>the<sp/>optimization<sp/>run,<sp/>allowing<sp/>for<sp/>comparisons<sp/>across<sp/>runs.</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers<sp/>(Optional[int]):<sp/>Number<sp/>of<sp/>worker<sp/>threads/processes<sp/>for<sp/>parallel<sp/>evaluation<sp/>of<sp/>the<sp/>objective</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.<sp/>If<sp/>set<sp/>to<sp/>0,<sp/>it<sp/>defaults<sp/>to<sp/>non-parallel<sp/>execution.</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize<sp/>(Optional[bool]):<sp/>Indicates<sp/>whether<sp/>solutions<sp/>are<sp/>normalized<sp/>during<sp/>the<sp/>optimization<sp/>process.</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayed_update<sp/>(Optional[bool]):<sp/>Specifies<sp/>whether<sp/>the<sp/>algorithm<sp/>updates<sp/>the<sp/>internal<sp/>state<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covariance<sp/>matrix<sp/>immediately<sp/>or<sp/>after<sp/>a<sp/>delay.</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update_gap<sp/>(Optional[int]):<sp/>Gap<sp/>between<sp/>covariance<sp/>matrix<sp/>updates.<sp/>If<sp/>None,<sp/>a<sp/>default<sp/>gap<sp/>is<sp/>used.</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizeResult:<sp/>An<sp/>object<sp/>containing<sp/>the<sp/>optimization<sp/>result,<sp/>including<sp/>the<sp/>best<sp/>solution<sp/>`x`,<sp/>the</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>of<sp/>the<sp/>objective<sp/>function<sp/>`fun`<sp/>at<sp/>`x`,<sp/>the<sp/>number<sp/>of<sp/>function<sp/>evaluations<sp/>`nfev`,<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>iterations<sp/>performed<sp/>`nit`,<sp/>the<sp/>optimizer&apos;s<sp/>termination<sp/>status<sp/>`status`,<sp/>and<sp/>a<sp/>boolean<sp/>`success`</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indicating<sp/>whether<sp/>the<sp/>optimization<sp/>was<sp/>successful.</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>lower,<sp/>upper,<sp/>guess<sp/>=<sp/>_check_bounds(bounds,<sp/>x0,<sp/>rg)<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>guess.size<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>workers<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>mu<sp/>=<sp/>int(popsize/2)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>callable(input_sigma):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma=input_sigma()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.ndim(input_sigma)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>=<sp/>[input_sigma]<sp/>*<sp/>dim</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stop_hist<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_hist<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>dim<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>c_callback<sp/>=<sp/>mo_call_back_type(<ref refid="classfcmaes_1_1evaluator_1_1callback__so" kindref="compound">callback_so</ref>(fun,<sp/>dim))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>parfun<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>delayed_update<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>workers<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>workers<sp/>&lt;=<sp/>1<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="classfcmaes_1_1evaluator_1_1parallel" kindref="compound">parallel</ref>(fun,<sp/>workers)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>c_callback_par<sp/>=<sp/>call_back_par(<ref refid="classfcmaes_1_1evaluator_1_1callback__par" kindref="compound">callback_par</ref>(fun,<sp/>parfun))</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(dim+4)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1cmaescpp_1a869b80a999c8dbaafec9a1e836b441b7" kindref="member">optimizeACMA_C</ref>(runid,<sp/>c_callback,<sp/>c_callback_par,<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim,<sp/>array_type(*guess),<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lower<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*lower),<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>upper<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*upper),<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type(*input_sigma),<sp/>max_evaluations,<sp/>stop_fitness,<sp/>stop_hist,<sp/>mu,<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize,<sp/>accuracy,<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1)),<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize,<sp/>delayed_update,<sp/>-1<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>update_gap<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>update_gap,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workers,<sp/>res_p)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>res[:dim]</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>res[dim]</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>int(res[dim+1])</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>int(res[dim+2])</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>int(res[dim+3])</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=x,<sp/>fun=val,<sp/>nfev=evals,<sp/>nit=iterations,<sp/>status=stop,<sp/>success=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>fun=sys.float_info.max,<sp/>nfev=0,<sp/>nit=0,<sp/>status=-1,<sp/>success=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>parfun<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parfun.stop()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c" kindref="compound">ACMA_C</ref>:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Implementation<sp/>of<sp/>the<sp/>ACMA-C<sp/>algorithm<sp/>for<sp/>optimization.</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>provides<sp/>functionalities<sp/>for<sp/>using<sp/>the<sp/>ACMA-C<sp/>optimization<sp/>algorithm,</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>enabling<sp/>the<sp/>user<sp/>to<sp/>define<sp/>the<sp/>problem&apos;s<sp/>dimensions,<sp/>bounds,<sp/>initial<sp/>guesses,</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>population<sp/>size,<sp/>and<sp/>more.<sp/>It<sp/>integrates<sp/>with<sp/>ctypes<sp/>to<sp/>leverage<sp/>C-based</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>implementations<sp/>for<sp/>efficiency.<sp/>The<sp/>algorithm<sp/>supports<sp/>customizable<sp/>stopping<sp/>criteria</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>such<sp/>as<sp/>fitness<sp/>value<sp/>thresholds<sp/>and<sp/>history-based<sp/>progress<sp/>termination<sp/>limits.</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(int):<sp/>CMA-ES<sp/>population<sp/>size.</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>Dimensionality<sp/>of<sp/>the<sp/>optimization<sp/>problem.</highlight></codeline>
<codeline lineno="156" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a30b1141e99acc21b94e2366bad21dc78" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim,<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds:<sp/>Optional[Bounds]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0:<sp/>Optional[ArrayLike]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma:<sp/>Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]<sp/>=<sp/>0.3,<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize:<sp/>Optional[int]<sp/>=<sp/>31,<sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations:<sp/>Optional[int]<sp/>=<sp/>100000,<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accuracy:<sp/>Optional[float]<sp/>=<sp/>1.0,<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness:<sp/>Optional[float]<sp/>=<sp/>-np.inf,<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_hist:<sp/>Optional[float]<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg:<sp/>Optional[Generator]<sp/>=<sp/>Generator(PCG64DXSM()),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid:<sp/>Optional[int]<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize:<sp/>Optional[bool]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayed_update:<sp/>Optional[bool]<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update_gap:<sp/>Optional[int]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>object<sp/>with<sp/>parameters<sp/>for<sp/>the<sp/>Adaptive<sp/>Covariance<sp/>Matrix<sp/>Evolution<sp/>Strategy<sp/>(A-CMA).</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>initialization<sp/>method<sp/>configures<sp/>the<sp/>bounds,<sp/>population<sp/>size,<sp/>adaptive<sp/>mechanisms,</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>termination<sp/>criteria,<sp/>and<sp/>various<sp/>other<sp/>parameters<sp/>essential<sp/>for<sp/>the<sp/>A-CMA<sp/>optimization<sp/>process.</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>initialization<sp/>sets<sp/>up<sp/>the<sp/>internal<sp/>configuration<sp/>and<sp/>prepares<sp/>the<sp/>underlying<sp/>pointer</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>interface<sp/>with<sp/>the<sp/>A-CMA<sp/>C<sp/>backend.</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>(int):<sp/>Dimensionality<sp/>of<sp/>the<sp/>problem.</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds<sp/>(Optional[Bounds]):<sp/>The<sp/>boundary<sp/>constraints<sp/>for<sp/>each<sp/>dimension.<sp/>It<sp/>can<sp/>be<sp/>None<sp/>if</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>bounds<sp/>are<sp/>specified.</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>(Optional[ArrayLike]):<sp/>The<sp/>initial<sp/>guess<sp/>or<sp/>starting<sp/>point<sp/>for<sp/>the<sp/>optimizer.<sp/>Can<sp/>be<sp/>None</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>a<sp/>default<sp/>starting<sp/>point<sp/>is<sp/>desired.</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>(Optional[Union[float,<sp/>ArrayLike,<sp/>Callable]]):<sp/>Initial<sp/>step<sp/>size<sp/>for<sp/>the<sp/>optimizer.</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>can<sp/>be<sp/>a<sp/>float,<sp/>an<sp/>array<sp/>of<sp/>floats<sp/>(one<sp/>per<sp/>dimension),<sp/>or<sp/>a<sp/>callable<sp/>returning<sp/>a<sp/>float.</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>(Optional[int]):<sp/>Population<sp/>size<sp/>for<sp/>the<sp/>optimization<sp/>process.<sp/>Defaults<sp/>to<sp/>31.</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>(Optional[int]):<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>objective<sp/>function<sp/>evaluations<sp/>allowed<sp/>for</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>optimization<sp/>process.</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accuracy<sp/>(Optional[float]):<sp/>Accuracy<sp/>level<sp/>for<sp/>convergence.<sp/>A<sp/>smaller<sp/>value<sp/>indicates<sp/>stricter</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergence<sp/>criteria.</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_fitness<sp/>(Optional[float]):<sp/>The<sp/>fitness<sp/>value<sp/>at<sp/>which<sp/>the<sp/>optimization<sp/>process<sp/>should<sp/>stop.</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defaults<sp/>to<sp/>negative<sp/>infinity.</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_hist<sp/>(Optional[float]):<sp/>Number<sp/>of<sp/>historical<sp/>steps<sp/>to<sp/>consider<sp/>for<sp/>stagnation<sp/>checks.<sp/>Defaults</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>-1.</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rg<sp/>(Optional[Generator]):<sp/>Random<sp/>number<sp/>generator<sp/>to<sp/>use<sp/>for<sp/>sampling.<sp/>Defaults<sp/>to<sp/>a<sp/>PCG64DXSM-based</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generator.</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runid<sp/>(Optional[int]):<sp/>Unique<sp/>identifier<sp/>for<sp/>the<sp/>optimization<sp/>run.<sp/>Useful<sp/>for<sp/>debugging<sp/>or</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>differentiating<sp/>among<sp/>runs.</highlight></codeline>
<codeline lineno="203" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a30b1141e99acc21b94e2366bad21dc78" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize<sp/>(Optional[bool]):<sp/>Whether<sp/>or<sp/>not<sp/>to<sp/>normalize<sp/>the<sp/>input<sp/>coordinates.<sp/>Defaults<sp/>to<sp/>True.</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayed_update<sp/>(Optional[bool]):<sp/>Enable<sp/>or<sp/>disable<sp/>delayed<sp/>covariance<sp/>matrix<sp/>updates<sp/>for<sp/>computational</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>efficiency.<sp/>Defaults<sp/>to<sp/>True.</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update_gap<sp/>(Optional[int]):<sp/>Number<sp/>of<sp/>iterations<sp/>between<sp/>updates<sp/>to<sp/>the<sp/>covariance<sp/>matrix.<sp/>If<sp/>None,</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updates<sp/>are<sp/>performed<sp/>without<sp/>a<sp/>fixed<sp/>gap.</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>there<sp/>is<sp/>an<sp/>error<sp/>during<sp/>the<sp/>initialization<sp/>of<sp/>the<sp/>A-CMA<sp/>C<sp/>backend.</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower,<sp/>upper,<sp/>guess<sp/>=<sp/>_get_bounds(dim,<sp/>bounds,<sp/>x0,<sp/>rg)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu<sp/>=<sp/>int(popsize/2)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>callable(input_sigma):</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma=input_sigma()</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.ndim(input_sigma)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_sigma<sp/>=<sp/>[input_sigma]<sp/>*<sp/>dim</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stop_hist<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_hist<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type<sp/>=<sp/>ct.c_double<sp/>*<sp/>dim<sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" kindref="member">ptr</ref><sp/>=<sp/><ref refid="namespacefcmaes_1_1cmaescpp_1a5f13d5d8f530e90f5b93f5bacf82dfef" kindref="member">initACMA_C</ref>(runid,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim,<sp/>array_type(*guess),<sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lower<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*lower),<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>upper<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>array_type(*upper),<sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type(*input_sigma),<sp/>max_evaluations,<sp/>stop_fitness,<sp/>stop_hist,<sp/>mu,<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize,<sp/>accuracy,<sp/>int(rg.uniform(0,<sp/>2**32<sp/>-<sp/>1)),<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize,<sp/>delayed_update,<sp/>-1<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>update_gap<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>update_gap)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" kindref="member">popsize</ref><sp/>=<sp/>popsize</highlight></codeline>
<codeline lineno="231" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref><sp/>=<sp/>dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ae55112db9f934ddf1d3d01a09b812adb" kindref="member">__del__</ref>(self):</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="238" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deletes<sp/>the<sp/>instance<sp/>and<sp/>performs<sp/>necessary<sp/>cleanup.</highlight></codeline>
<codeline lineno="239" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" refkind="member"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>destructor<sp/>method<sp/>ensures<sp/>that<sp/>the<sp/>resources<sp/>allocated<sp/>or<sp/>managed<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>are<sp/>properly<sp/>released.<sp/>It<sp/>is<sp/>automatically<sp/>invoked<sp/>when<sp/>the<sp/>object<sp/>is</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>longer<sp/>in<sp/>use<sp/>or<sp/>explicitly<sp/>deleted.</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Any<sp/>exceptions<sp/>that<sp/>might<sp/>be<sp/>raised<sp/>during<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>cleanup</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process<sp/>are<sp/>dependent<sp/>on<sp/>the<sp/>underlying<sp/>`destroyACMA_C`<sp/>function.</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1cmaescpp_1a19d6ee3b1a025b0c87e16121a77e8afa" kindref="member">destroyACMA_C</ref>(self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" kindref="member">ptr</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ad7ca82faa65b471b66977e2f18676025" kindref="member">ask</ref>(self)<sp/>-&gt;<sp/>np.array:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generates<sp/>and<sp/>retrieves<sp/>a<sp/>population<sp/>of<sp/>candidate<sp/>solutions.</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>calls<sp/>a<sp/>low-level<sp/>C<sp/>function<sp/>to<sp/>generate<sp/>new<sp/>candidate<sp/>solutions</highlight></codeline>
<codeline lineno="256" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ae55112db9f934ddf1d3d01a09b812adb" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>based<sp/>on<sp/>the<sp/>current<sp/>state<sp/>of<sp/>the<sp/>optimization<sp/>process.<sp/>These<sp/>solutions<sp/>are</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returned<sp/>as<sp/>a<sp/>numpy<sp/>array.<sp/>If<sp/>an<sp/>error<sp/>occurs<sp/>during<sp/>the<sp/>process,<sp/>the<sp/>method</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prints<sp/>the<sp/>exception<sp/>and<sp/>returns<sp/>None.</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array:<sp/>A<sp/>2D<sp/>array<sp/>of<sp/>generated<sp/>candidate<sp/>solutions<sp/>with<sp/>shape</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(popsize,<sp/>dim),<sp/>where<sp/>`popsize`<sp/>is<sp/>the<sp/>population<sp/>size<sp/>and<sp/>`dim`</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>the<sp/>dimensionality<sp/>of<sp/>each<sp/>candidate<sp/>solution.<sp/>Returns<sp/>None</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>an<sp/>exception<sp/>occurs.</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>Prints<sp/>the<sp/>exception<sp/>message<sp/>if<sp/>an<sp/>error<sp/>occurs<sp/>during<sp/>the</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process.</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" kindref="member">popsize</ref></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(popsize*n)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1cmaescpp_1a5d24fbafb1f6010caa637d9318fe88e2" kindref="member">askACMA_C</ref>(self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>np.empty((popsize,<sp/>n))</highlight></codeline>
<codeline lineno="277" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ad7ca82faa65b471b66977e2f18676025" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(popsize):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p,:]<sp/>=<sp/>res[p*n<sp/>:<sp/>(p+1)*n]</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xs</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a4677822852841d0e52baa48fa91cbcb8" kindref="member">tell</ref>(self,<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys:<sp/>np.ndarray,<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs:<sp/>Optional[np.ndarray]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/>-&gt;<sp/>int:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Provides<sp/>functionality<sp/>to<sp/>handle<sp/>processed<sp/>arrays<sp/>and<sp/>manage<sp/>operations</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>the<sp/>given<sp/>inputs.<sp/>It<sp/>determines<sp/>the<sp/>execution<sp/>path<sp/>based<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>presence<sp/>of<sp/>optional<sp/>parameters<sp/>and<sp/>interacts<sp/>with<sp/>external<sp/>components.</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>(np.ndarray):<sp/>A<sp/>numpy<sp/>array<sp/>with<sp/>processed<sp/>data<sp/>that<sp/>serves</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>the<sp/>primary<sp/>input<sp/>for<sp/>internal<sp/>operations.</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>(Optional[np.ndarray]):<sp/>An<sp/>optional<sp/>numpy<sp/>array<sp/>that,<sp/>if<sp/>provided,</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifies<sp/>the<sp/>internal<sp/>operation<sp/>and<sp/>enables<sp/>additional<sp/>functionality.</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int:<sp/>Represents<sp/>the<sp/>status<sp/>or<sp/>result<sp/>of<sp/>the<sp/>operation.<sp/>A<sp/>successful</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execution<sp/>returns<sp/>a<sp/>non-negative<sp/>integer,<sp/>whereas<sp/>a<sp/>failure<sp/>or</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exception<sp/>may<sp/>result<sp/>in<sp/>a<sp/>negative<sp/>value.</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>xs<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a344851d94557ce52f99da907ee61590d" kindref="member">tell_x_</ref>(ys,<sp/>xs)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type_ys<sp/>=<sp/>ct.c_double<sp/>*<sp/>len(ys)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1cmaescpp_1ae19b39d0288c14daa4d7db903c4285d6" kindref="member">tellACMA_C</ref>(self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" kindref="member">ptr</ref>,<sp/>array_type_ys(*ys))</highlight></codeline>
<codeline lineno="308" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a4677822852841d0e52baa48fa91cbcb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a344851d94557ce52f99da907ee61590d" kindref="member">tell_x_</ref>(self,<sp/>ys:<sp/>np.ndarray,<sp/>xs:<sp/>np.ndarray):</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Passes<sp/>flattened<sp/>numpy<sp/>arrays<sp/>and<sp/>interacts<sp/>with<sp/>an<sp/>external<sp/>C<sp/>function<sp/>using<sp/>ctypes.</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>takes<sp/>numpy<sp/>arrays<sp/>as<sp/>input,<sp/>flattens<sp/>one<sp/>of<sp/>them,<sp/>converts<sp/>both<sp/>arrays</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>ctypes-compatible<sp/>types,<sp/>and<sp/>then<sp/>passes<sp/>them<sp/>to<sp/>a<sp/>C<sp/>function.<sp/>Any<sp/>exceptions</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encountered<sp/>during<sp/>this<sp/>process<sp/>are<sp/>handled<sp/>and<sp/>logged.</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>(np.ndarray):<sp/>A<sp/>numpy<sp/>array<sp/>representing<sp/>the<sp/>first<sp/>input<sp/>data.</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>(np.ndarray):<sp/>A<sp/>numpy<sp/>array<sp/>representing<sp/>the<sp/>second<sp/>input<sp/>data,<sp/>which<sp/>gets<sp/>flattened</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>before<sp/>being<sp/>passed<sp/>to<sp/>the<sp/>external<sp/>C<sp/>function.</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int:<sp/>The<sp/>return<sp/>value<sp/>from<sp/>the<sp/>external<sp/>C<sp/>function<sp/>`tellXACMA_C`<sp/>or<sp/>-1<sp/>in<sp/>case<sp/>of<sp/>an</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exception.</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flat_xs<sp/>=<sp/>xs.flatten()</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type_xs<sp/>=<sp/>ct.c_double<sp/>*<sp/>len(flat_xs)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_type_ys<sp/>=<sp/>ct.c_double<sp/>*<sp/>len(ys)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1cmaescpp_1a72633ee9a21ca3a356464d6c570b0237" kindref="member">tellXACMA_C</ref>(self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" kindref="member">ptr</ref>,<sp/>array_type_ys(*ys),<sp/>array_type_xs(*flat_xs))</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="336" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a344851d94557ce52f99da907ee61590d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1<sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a348ca090a0116efc16fce6a4bd180871" kindref="member">population</ref>(self)<sp/>-&gt;<sp/>np.array:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Retrieve<sp/>the<sp/>current<sp/>population<sp/>of<sp/>solutions.</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>fetches<sp/>the<sp/>entire<sp/>population<sp/>of<sp/>solutions<sp/>from<sp/>the<sp/>underlying</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ACMA<sp/>instance,<sp/>represented<sp/>as<sp/>a<sp/>2D<sp/>numpy<sp/>array.<sp/>Each<sp/>row<sp/>in<sp/>the<sp/>array<sp/>corresponds</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>an<sp/>individual<sp/>solution<sp/>in<sp/>the<sp/>population.</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception:<sp/>If<sp/>an<sp/>error<sp/>occurs<sp/>in<sp/>retrieving<sp/>the<sp/>population,<sp/>the<sp/>exception</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>are<sp/>printed<sp/>and<sp/>None<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array:<sp/>A<sp/>2D<sp/>numpy<sp/>array<sp/>where<sp/>each<sp/>row<sp/>is<sp/>an<sp/>individual<sp/>solution<sp/>in</highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>current<sp/>population.</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popsize<sp/>=<sp/>self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a5eb8c3128844a551ffed31779aa12193" kindref="member">popsize</ref></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(popsize*n)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1cmaescpp_1a7f7e4ef0af633235aa443b759dba5ed9" kindref="member">populationACMA_C</ref>(self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>np.array(popsize,<sp/>n)</highlight></codeline>
<codeline lineno="361" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a348ca090a0116efc16fce6a4bd180871" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(popsize):</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p]<sp/>=<sp/>res[p*n<sp/>:<sp/>(p+1)*n]</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xs</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(ex)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1aaf2e40c524b9a8b328decb0b798bd695" kindref="member">result</ref>(self)<sp/>-&gt;<sp/>OptimizeResult:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Computes<sp/>and<sp/>returns<sp/>the<sp/>result<sp/>of<sp/>an<sp/>optimization<sp/>process.</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>utilizes<sp/>a<sp/>low-level<sp/>C<sp/>library<sp/>function<sp/>to<sp/>process<sp/>optimization</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results.<sp/>It<sp/>retrieves<sp/>the<sp/>optimization<sp/>results,<sp/>such<sp/>as<sp/>the<sp/>optimized<sp/>variable,</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objective<sp/>function<sp/>value,<sp/>evaluation<sp/>count,<sp/>iteration<sp/>count,<sp/>and<sp/>stop<sp/>status,</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>packages<sp/>them<sp/>into<sp/>an<sp/>`OptimizeResult`<sp/>object.</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizeResult:<sp/>An<sp/>object<sp/>containing<sp/>the<sp/>results<sp/>of<sp/>the<sp/>optimization</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process,<sp/>including<sp/>the<sp/>optimized<sp/>variable<sp/>(`x`),<sp/>objective<sp/>function<sp/>value</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(`fun`),<sp/>evaluation<sp/>count<sp/>(`nfev`),<sp/>iteration<sp/>count<sp/>(`nit`),<sp/>stop</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>(`status`),<sp/>and<sp/>a<sp/>success<sp/>flag<sp/>(`success`).</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.empty(self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref>+4)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_p<sp/>=<sp/>res.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacefcmaes_1_1cmaescpp_1aeecf9aa46c0d9cbb7e56087c5d7f0fef" kindref="member">resultACMA_C</ref>(self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1a8398ead8fd8f0556d524477a60a8c76c" kindref="member">ptr</ref>,<sp/>res_p)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>res[:self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref>]</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>res[self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref>]</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref>+1])</highlight></codeline>
<codeline lineno="390" refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1aaf2e40c524b9a8b328decb0b798bd695" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref>+2])</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>int(res[self.<ref refid="classfcmaes_1_1cmaescpp_1_1_a_c_m_a___c_1ace85988c36f223610752fe5c5bbfbeef" kindref="member">dim</ref>+3])</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=x,<sp/>fun=val,<sp/>nfev=evals,<sp/>nit=iterations,<sp/>status=stop,<sp/>success=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>OptimizeResult(x=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>fun=sys.float_info.max,<sp/>nfev=0,<sp/>nit=0,<sp/>status=-1,<sp/>success=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>libcmalib<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizeACMA_C<sp/>=<sp/>libcmalib.optimizeACMA_C</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizeACMA_C.argtypes<sp/>=<sp/>[ct.c_long,<sp/>mo_call_back_type,<sp/>call_back_par,<sp/>ct.c_int,<sp/>\</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.c_int,<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_int,<sp/>ct.c_int,<sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_double,<sp/>ct.c_long,<sp/>ct.c_bool,<sp/>ct.c_bool,<sp/>ct.c_int,<sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_int,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>initACMA_C<sp/>=<sp/>libcmalib.initACMA_C</highlight></codeline>
<codeline lineno="407" refid="namespacefcmaes_1_1cmaescpp_1a869b80a999c8dbaafec9a1e836b441b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>initACMA_C.argtypes<sp/>=<sp/>[ct.c_long,<sp/>ct.c_int,<sp/>\</highlight></codeline>
<codeline lineno="408" refid="namespacefcmaes_1_1cmaescpp_1a4b4bc53bc7ff4a07bc165c3b3ede4e02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double),<sp/>\</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.c_int,<sp/>ct.c_double,<sp/>ct.c_double,<sp/>ct.c_int,<sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.c_int,<sp/>ct.c_double,<sp/>ct.c_long,<sp/>ct.c_bool,<sp/>ct.c_bool,<sp/>ct.c_int]</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>initACMA_C.restype<sp/>=<sp/>ct.c_void_p<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414" refid="namespacefcmaes_1_1cmaescpp_1a5f13d5d8f530e90f5b93f5bacf82dfef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>destroyACMA_C<sp/>=<sp/>libcmalib.destroyACMA_C</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>destroyACMA_C.argtypes<sp/>=<sp/>[ct.c_void_p]</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>askACMA_C<sp/>=<sp/>libcmalib.askACMA_C</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>askACMA_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420" refid="namespacefcmaes_1_1cmaescpp_1a02a0f73f01d725c0440ce1cbe96fc018" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>tellACMA_C<sp/>=<sp/>libcmalib.tellACMA_C</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>tellACMA_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="422" refid="namespacefcmaes_1_1cmaescpp_1a19d6ee3b1a025b0c87e16121a77e8afa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>tellACMA_C.restype<sp/>=<sp/>ct.c_int</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>tellXACMA_C<sp/>=<sp/>libcmalib.tellXACMA_C</highlight></codeline>
<codeline lineno="425" refid="namespacefcmaes_1_1cmaescpp_1a5d24fbafb1f6010caa637d9318fe88e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>tellXACMA_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>tellXACMA_C.restype<sp/>=<sp/>ct.c_int</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428" refid="namespacefcmaes_1_1cmaescpp_1ae19b39d0288c14daa4d7db903c4285d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>populationACMA_C<sp/>=<sp/>libcmalib.populationACMA_C</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>populationACMA_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>resultACMA_C<sp/>=<sp/>libcmalib.resultACMA_C</highlight></codeline>
<codeline lineno="432" refid="namespacefcmaes_1_1cmaescpp_1a72633ee9a21ca3a356464d6c570b0237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>resultACMA_C.argtypes<sp/>=<sp/>[ct.c_void_p,<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
    </programlisting>
    <location file="fcmaes/cmaescpp.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="lrgv_8py" kind="file" language="Python">
    <compoundname>lrgv.py</compoundname>
    <innerclass refid="classlrgv_1_1lrgv" prot="public">lrgv::lrgv</innerclass>
    <innernamespace refid="namespacelrgv">lrgv</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacelrgv_1a546a8d7a2c8d5d70473483cd579ee37e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>lrgv.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="25" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1ae5afb8c70aa9e376cfded3b954fcee22" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>lrgv.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="25" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1a59a0a2ac7224fbcfa1dc31bae5bfcc13" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>lrgv.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="25" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1a078e0fdbc2e213f557653587cefa72bd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.basepath</definition>
        <argsstring></argsstring>
        <name>basepath</name>
        <qualifiedname>lrgv.basepath</qualifiedname>
        <initializer>=  os.path.dirname(os.path.abspath(__file__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="28" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1a8a9687b6d3550c4bb5c267849b510b66" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.liblrgv</definition>
        <argsstring></argsstring>
        <name>liblrgv</name>
        <qualifiedname>lrgv.liblrgv</qualifiedname>
        <initializer>=  ct.cdll.LoadLibrary(basepath + &apos;/../../fcmaes/lib/liblrgv.so&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="29" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1a64192d450a24357c2cf08680027a8edd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.lrgv_C</definition>
        <argsstring></argsstring>
        <name>lrgv_C</name>
        <qualifiedname>lrgv.lrgv_C</qualifiedname>
        <initializer>=  liblrgv.lrgv_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="31" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="31" bodyend="-1"/>
        <referencedby refid="classlrgv_1_1lrgv_1ab5c1283f83c705c307d7ae74f3474a1c" compoundref="lrgv_8py" startline="54" endline="72">lrgv.lrgv.__call__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1a7cf76f3222902615a0f385652a3e4ce5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.argtypes</definition>
        <argsstring></argsstring>
        <name>argtypes</name>
        <qualifiedname>lrgv.argtypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="32" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1a9c3ec5665670484a0f69070cb3e0c7b7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.restype</definition>
        <argsstring></argsstring>
        <name>restype</name>
        <qualifiedname>lrgv.restype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="33" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1a64b62d5d00c14a2216d8eafc41bff520" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.fitness_lrgv_C</definition>
        <argsstring></argsstring>
        <name>fitness_lrgv_C</name>
        <qualifiedname>lrgv.fitness_lrgv_C</qualifiedname>
        <initializer>=  liblrgv.fitness_lrgv_C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="35" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="35" bodyend="-1"/>
        <referencedby refid="classlrgv_1_1lrgv_1ab5c1283f83c705c307d7ae74f3474a1c" compoundref="lrgv_8py" startline="54" endline="72">lrgv.lrgv.__call__</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1a64ff71a6edd5406dfab800588382ceb3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int lrgv.dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>lrgv.dim</qualifiedname>
        <initializer>=  8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="39" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1a3eb25c6952cb525a4757fad05a972d18" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int lrgv.nobj</definition>
        <argsstring></argsstring>
        <name>nobj</name>
        <qualifiedname>lrgv.nobj</qualifiedname>
        <initializer>=  5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="40" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1ab821656770b8341f0037aeab40cbb563" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int lrgv.ncon</definition>
        <argsstring></argsstring>
        <name>ncon</name>
        <qualifiedname>lrgv.ncon</qualifiedname>
        <initializer>=  3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="41" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1a3c9fa67db16eafc90d80d9a8e725a9b5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.lb</definition>
        <argsstring></argsstring>
        <name>lb</name>
        <qualifiedname>lrgv.lb</qualifiedname>
        <initializer>=  np.array([0]*3 + [0.1] + [0]*4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="43" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelrgv_1ad2579c2667c7abf4a40c88aa61aa9c8f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>lrgv.ub</definition>
        <argsstring></argsstring>
        <name>ub</name>
        <qualifiedname>lrgv.ub</qualifiedname>
        <initializer>=  np.array([1]*3 + [0.4] + [3]*4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="44" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacelrgv_1a1864166a2be484c530fbbbff644f2841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lrgv.check_pymoo</definition>
        <argsstring>(index)</argsstring>
        <name>check_pymoo</name>
        <qualifiedname>lrgv.check_pymoo</qualifiedname>
        <param>
          <type>index</type>
          <defname>index</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="87" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="87" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespacelrgv_1af66d50b3590ffa761afae82d3302a9e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lrgv.optimize_mo</definition>
        <argsstring>()</argsstring>
        <name>optimize_mo</name>
        <qualifiedname>lrgv.optimize_mo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="152" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="152" bodyend="180"/>
        <referencedby refid="namespacelrgv_1a6f6a9cf8f09f279c6e4a42bd1280b6bc" compoundref="lrgv_8py" startline="207" endline="225">lrgv.optimize_qd</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelrgv_1a2fe3ed09ae5ef083c2fa961c8875803e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lrgv.plot3d</definition>
        <argsstring>(ys, name, xlabel=&apos;&apos;, ylabel=&apos;&apos;, zlabel=&apos;&apos;)</argsstring>
        <name>plot3d</name>
        <qualifiedname>lrgv.plot3d</qualifiedname>
        <param>
          <type>ys</type>
          <defname>ys</defname>
        </param>
        <param>
          <type>name</type>
          <defname>name</defname>
        </param>
        <param>
          <type>xlabel</type>
          <defname>xlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>ylabel</type>
          <defname>ylabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>zlabel</type>
          <defname>zlabel</defname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="181" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="181" bodyend="194"/>
        <referencedby refid="namespacelrgv_1ab44b25d6ed6c94ba6a458846cb48830e" compoundref="lrgv_8py" startline="195" endline="206">lrgv.plot_archive</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelrgv_1ab44b25d6ed6c94ba6a458846cb48830e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lrgv.plot_archive</definition>
        <argsstring>(archive, problem)</argsstring>
        <name>plot_archive</name>
        <qualifiedname>lrgv.plot_archive</qualifiedname>
        <param>
          <type>archive</type>
          <defname>archive</defname>
        </param>
        <param>
          <type>problem</type>
          <defname>problem</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="195" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="195" bodyend="206"/>
        <references refid="namespacelrgv_1a2fe3ed09ae5ef083c2fa961c8875803e" compoundref="lrgv_8py" startline="181" endline="194">lrgv.plot3d</references>
        <referencedby refid="namespacelrgv_1a6f6a9cf8f09f279c6e4a42bd1280b6bc" compoundref="lrgv_8py" startline="207" endline="225">lrgv.optimize_qd</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacelrgv_1a6f6a9cf8f09f279c6e4a42bd1280b6bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lrgv.optimize_qd</definition>
        <argsstring>()</argsstring>
        <name>optimize_qd</name>
        <qualifiedname>lrgv.optimize_qd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/lrgv/lrgv.py" line="207" column="1" bodyfile="examples/lrgv/lrgv.py" bodystart="207" bodyend="225"/>
        <references refid="namespacelrgv_1af66d50b3590ffa761afae82d3302a9e5" compoundref="lrgv_8py" startline="152" endline="180">lrgv.optimize_mo</references>
        <references refid="namespacelrgv_1ab44b25d6ed6c94ba6a458846cb48830e" compoundref="lrgv_8py" startline="195" endline="206">lrgv.plot_archive</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelrgv" refkind="compound"><highlight class="comment">#<sp/>Lower<sp/>Rio<sp/>Grande<sp/>Valley<sp/>(LRGV)<sp/>problem,<sp/>5<sp/>objective<sp/>+<sp/>3<sp/>constraint<sp/>variant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Water.adoc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://agupubs.onlinelibrary.wiley.com/doi/full/10.1002/2014WR015976</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/jrkasprzyk/LRGV<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>also<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/Diversity.adoc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os,<sp/>sys,<sp/>time</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.random<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Generator,<sp/>MT19937</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1evaluator" kindref="compound">fcmaes.evaluator</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Evaluator</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>moretry</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dtime</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>de_cma,<sp/>Bite_cpp,<sp/>Cma_cpp,<sp/>LDe_cpp,<sp/>dtime,<sp/><sp/>De_cpp,<sp/>random_search,<sp/>wrapper,<sp/>logger</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>moretry,<sp/>retry,<sp/>mode,<sp/>modecpp,<sp/>decpp,<sp/>de,<sp/>moretry</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>diversifier,<sp/>mapelites</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="25" refid="namespacelrgv_1ae5afb8c70aa9e376cfded3b954fcee22" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespacelrgv_1a078e0fdbc2e213f557653587cefa72bd" refkind="member"><highlight class="normal">basepath<sp/>=<sp/>os.path.dirname(os.path.abspath(__file__))</highlight></codeline>
<codeline lineno="29" refid="namespacelrgv_1a8a9687b6d3550c4bb5c267849b510b66" refkind="member"><highlight class="normal">liblrgv<sp/>=<sp/>ct.cdll.LoadLibrary(basepath<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/../../fcmaes/lib/liblrgv.so&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31" refid="namespacelrgv_1a64192d450a24357c2cf08680027a8edd" refkind="member"><highlight class="normal">lrgv_C<sp/>=<sp/>liblrgv.lrgv_C</highlight></codeline>
<codeline lineno="32" refid="namespacelrgv_1a7cf76f3222902615a0f385652a3e4ce5" refkind="member"><highlight class="normal">lrgv_C.argtypes<sp/>=<sp/>[ct.c_int,<sp/>ct.POINTER(ct.c_char_p)]</highlight></codeline>
<codeline lineno="33" refid="namespacelrgv_1a9c3ec5665670484a0f69070cb3e0c7b7" refkind="member"><highlight class="normal">lrgv_C.restype<sp/>=<sp/>ct.c_long</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="namespacelrgv_1a64b62d5d00c14a2216d8eafc41bff520" refkind="member"><highlight class="normal">fitness_lrgv_C<sp/>=<sp/>liblrgv.fitness_lrgv_C</highlight></codeline>
<codeline lineno="36"><highlight class="normal">fitness_lrgv_C.argtypes<sp/>=<sp/>[ct.c_long,<sp/>ct.POINTER(ct.c_double),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct.POINTER(ct.c_double),<sp/>ct.POINTER(ct.c_double)]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="39" refid="namespacelrgv_1a64ff71a6edd5406dfab800588382ceb3" refkind="member"><highlight class="normal">dim<sp/>=<sp/>8</highlight></codeline>
<codeline lineno="40" refid="namespacelrgv_1a3eb25c6952cb525a4757fad05a972d18" refkind="member"><highlight class="normal">nobj<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="41" refid="namespacelrgv_1ab821656770b8341f0037aeab40cbb563" refkind="member"><highlight class="normal">ncon<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespacelrgv_1a3c9fa67db16eafc90d80d9a8e725a9b5" refkind="member"><highlight class="normal">lb<sp/>=<sp/>np.array([0]*3<sp/>+<sp/>[0.1]<sp/>+<sp/>[0]*4)</highlight></codeline>
<codeline lineno="44" refid="namespacelrgv_1ad2579c2667c7abf4a40c88aa61aa9c8f" refkind="member"><highlight class="normal">ub<sp/>=<sp/>np.array([1]*3<sp/>+<sp/>[0.4]<sp/>+<sp/>[3]*4)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classlrgv_1_1lrgv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlrgv_1_1lrgv" kindref="compound">lrgv</ref>(object):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="classlrgv_1_1lrgv_1a95e96bb1d82f80634803c206ff503c78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlrgv_1_1lrgv_1a95e96bb1d82f80634803c206ff503c78" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="49" refid="classlrgv_1_1lrgv_1a7555329caa09a7287805f9cb206fe3e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlrgv_1_1lrgv_1a7555329caa09a7287805f9cb206fe3e7" kindref="member">bounds</ref><sp/>=<sp/>Bounds(lb,<sp/>ub)<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="classlrgv_1_1lrgv_1a1c61933d3481441a96013ec8dab2fd08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlrgv_1_1lrgv_1a1c61933d3481441a96013ec8dab2fd08" kindref="member">lrgv_p</ref><sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="51" refid="classlrgv_1_1lrgv_1acda438d56f30afb04402de3ddb607803" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlrgv_1_1lrgv_1acda438d56f30afb04402de3ddb607803" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lrgvDE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classlrgv_1_1lrgv_1a6413e3e1992050f5801e1d8a5d31d6e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlrgv_1_1lrgv_1a6413e3e1992050f5801e1d8a5d31d6e0" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="classlrgv_1_1lrgv_1ab5c1283f83c705c307d7ae74f3474a1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlrgv_1_1lrgv_1ab5c1283f83c705c307d7ae74f3474a1c" kindref="member">__call__</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.empty(nobj)<sp/></highlight><highlight class="comment">#<sp/>C<sp/>fitness<sp/>call<sp/>returns<sp/>6<sp/>objectives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>np.empty(ncon)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_p<sp/>=<sp/>x.ctypes.data_as(ct.POINTER(ct.c_double))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_p<sp/>=<sp/>y.ctypes.data_as(ct.POINTER(ct.c_double))<sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_p<sp/>=<sp/>c.ctypes.data_as(ct.POINTER(ct.c_double))<sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlrgv_1_1lrgv_1a1c61933d3481441a96013ec8dab2fd08" kindref="member">lrgv_p</ref><sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;std-io&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;-b&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;AllDecAll&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ten-year&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments<sp/>=<sp/>[bytes(argsi,<sp/></highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>argsi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args]</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv<sp/>=<sp/>(ct.c_char_p<sp/>*<sp/>len(arguments))()</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv[:]<sp/>=<sp/>arguments</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argc<sp/>=<sp/>len(arguments)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlrgv_1_1lrgv_1a1c61933d3481441a96013ec8dab2fd08" kindref="member">lrgv_p</ref><sp/>=<sp/><ref refid="namespacelrgv_1a64192d450a24357c2cf08680027a8edd" kindref="member">lrgv_C</ref>(argc,<sp/>argv)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelrgv_1a64b62d5d00c14a2216d8eafc41bff520" kindref="member">fitness_lrgv_C</ref>(self.<ref refid="classlrgv_1_1lrgv_1a1c61933d3481441a96013ec8dab2fd08" kindref="member">lrgv_p</ref>,<sp/>x_p,<sp/>y_p,<sp/>c_p)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(str(ex))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array(list(y)<sp/>+<sp/>list(np.array(c)*-1.0))<sp/></highlight><highlight class="comment">#<sp/>negate<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="classlrgv_1_1lrgv_1a527b9b7a7927721b5320ab433bf75aea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlrgv_1_1lrgv_1a527b9b7a7927721b5320ab433bf75aea" kindref="member">qd_fitness</ref>(self,<sp/>x):<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>self.<ref refid="classlrgv_1_1lrgv_1ab5c1283f83c705c307d7ae74f3474a1c" kindref="member">__call__</ref>(x)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>y[:nobj].copy()</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constr<sp/>=<sp/>np.maximum(y[nobj:],<sp/>0)<sp/></highlight><highlight class="comment">#<sp/>we<sp/>are<sp/>only<sp/>interested<sp/>in<sp/>constraint<sp/>violations<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/><sp/>np.amax(constr)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c<sp/>&gt;<sp/>0.001:<sp/>c<sp/>+=<sp/>10<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(y[:nobj]<sp/>-<sp/>self.qd_bounds.lb)<sp/>/<sp/>(self.qd_bounds.ub<sp/>-<sp/>self.qd_bounds.lb)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws<sp/>=<sp/>sum(y)<sp/>+<sp/>c</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ws<sp/>&lt;<sp/>self.<ref refid="classlrgv_1_1lrgv_1a6413e3e1992050f5801e1d8a5d31d6e0" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlrgv_1_1lrgv_1a6413e3e1992050f5801e1d8a5d31d6e0" kindref="member">best_y</ref>.value<sp/>=<sp/>ws</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;{ws:.3f}<sp/>{sum(constr):.3f}<sp/>{<sp/>list(b)<sp/>}&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ws,<sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="87" refid="namespacelrgv_1a1864166a2be484c530fbbbff644f2841" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelrgv_1a1864166a2be484c530fbbbff644f2841" kindref="member">check_pymoo</ref>(index):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.core.problem<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ElementwiseProblem<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.algorithms.moo.nsga2<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NSGA2</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.algorithms.moo.age<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>AGEMOEA</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.algorithms.moo.ctaea<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CTAEA</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.algorithms.soo.nonconvex.de<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DE</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.factory<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_sampling,<sp/>get_crossover,<sp/>get_mutation<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.factory<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_termination,<sp/>get_reference_directions</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>multiprocessing.pool<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ThreadPool</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.operators.sampling.lhs<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LHS</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>lrgv_problem<sp/>=<sp/><ref refid="classlrgv_1_1lrgv" kindref="compound">lrgv</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>store<sp/>=<sp/><ref refid="classfcmaes_1_1mode_1_1store" kindref="compound">mode.store</ref>(dim,<sp/>nobj,<sp/>10240)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapped<sp/>=<sp/><ref refid="classfcmaes_1_1mode_1_1wrapper" kindref="compound">mode.wrapper</ref>(lrgv_problem,<sp/>nobj,<sp/>store,<sp/>plot=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>interval<sp/>=<sp/>500,<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&apos;nsga256_&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(index))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MyProblem(ElementwiseProblem):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().__init__(n_var=dim,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_obj=nobj,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_constr=ncon,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xl=np.array(lb),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xu=np.array(ub),<sp/>**kwargs)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_evaluate(self,<sp/>x,<sp/>out,<sp/>*args,<sp/>**kwargs):<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>wrapped(x)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">]<sp/>=<sp/>y[:nobj]</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[</highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">]<sp/>=<sp/>y[nobj:]</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/>MyProblem()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>algorithm<sp/>=<sp/>NSGA2(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_size=256,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_offsprings=10,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampling=get_sampling(</highlight><highlight class="stringliteral">&quot;real_random&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crossover=get_crossover(</highlight><highlight class="stringliteral">&quot;real_sbx&quot;</highlight><highlight class="normal">,<sp/>prob=0.9,<sp/>eta=15),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutation=get_mutation(</highlight><highlight class="stringliteral">&quot;real_pm&quot;</highlight><highlight class="normal">,<sp/>eta=20),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eliminate_duplicates=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymoo.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>minimize</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>minimize(problem,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>algorithm,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_termination(</highlight><highlight class="stringliteral">&quot;n_gen&quot;</highlight><highlight class="normal">,<sp/>10000),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save_history=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbose=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>X<sp/>=<sp/>res.X</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>F<sp/>=<sp/>res.F</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.figure(figsize=(7,<sp/>5))</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.scatter(X[:,<sp/>0],<sp/>X[:,<sp/>1],<sp/>s=30,<sp/>facecolors=</highlight><highlight class="stringliteral">&apos;none&apos;</highlight><highlight class="normal">,<sp/>edgecolors=</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.figure(figsize=(7,<sp/>5))</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.scatter(F[:,<sp/>0],<sp/>F[:,<sp/>1],<sp/>s=30,<sp/>facecolors=</highlight><highlight class="stringliteral">&apos;none&apos;</highlight><highlight class="normal">,<sp/>edgecolors=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.title(</highlight><highlight class="stringliteral">&quot;Objective<sp/>Space&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#plt.show()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.savefig(</highlight><highlight class="stringliteral">&apos;NSGSII256-objective-space&apos;</highlight><highlight class="normal">+<sp/>str(index)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.png&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.clf()<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>sys.exit()</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152" refid="namespacelrgv_1af66d50b3590ffa761afae82d3302a9e5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelrgv_1af66d50b3590ffa761afae82d3302a9e5" kindref="member">optimize_mo</ref>():</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check_pymoo(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="classlrgv_1_1lrgv" kindref="compound">lrgv</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store<sp/>=<sp/><ref refid="classfcmaes_1_1mode_1_1store" kindref="compound">mode.store</ref>(dim,<sp/>nobj,<sp/>10240)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>=<sp/><ref refid="classfcmaes_1_1mode_1_1wrapper" kindref="compound">mode.wrapper</ref>(problem,<sp/>nobj,<sp/>store,<sp/>plot=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>interval<sp/>=<sp/>5000,<sp/>name=</highlight><highlight class="stringliteral">&apos;mode512.16&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>parallel<sp/>function<sp/>evaluation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>modecpp.minimize,<sp/>the<sp/>C++<sp/>variant,<sp/>works<sp/>only<sp/>with<sp/>workers=1<sp/>because<sp/>of<sp/>limitations<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>used<sp/>parallelization<sp/>mechanism<sp/>in<sp/>combination<sp/>with<sp/>the<sp/>way<sp/>the<sp/>objective<sp/>function<sp/>is<sp/>initialized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode.minimize(fun,<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nobj,<sp/>ncon,<sp/>problem.bounds,<sp/>popsize<sp/>=<sp/>512,<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>200000,<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsga_update=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>workers=16)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>parallel<sp/>optimization<sp/>retry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>modecpp.retry(fun,<sp/>nobj,<sp/>ncon,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.bounds,<sp/>num_retries=640,<sp/>popsize<sp/>=<sp/>256,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>3000000,<sp/>nsga_update<sp/>=<sp/>False,<sp/>workers=32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ex:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(str(ex))<sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="namespacelrgv_1a2fe3ed09ae5ef083c2fa961c8875803e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelrgv_1a2fe3ed09ae5ef083c2fa961c8875803e" kindref="member">plot3d</ref>(ys,<sp/>name,<sp/>xlabel=&apos;&apos;,<sp/>ylabel=&apos;&apos;,<sp/>zlabel=&apos;&apos;):</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>ys[:,<sp/>0];<sp/>y<sp/>=<sp/>ys[:,<sp/>3];<sp/>z<sp/>=<sp/>ys[:,<sp/>2]</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>plt.figure()</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>ax<sp/>=<sp/>fig.add_subplot()<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>img<sp/>=<sp/>ax.scatter(x,<sp/>y,<sp/>s=4,<sp/>c=z,<sp/>cmap=</highlight><highlight class="stringliteral">&apos;rainbow&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar<sp/>=<sp/>fig.colorbar(img)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.xlabel(xlabel)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>plt.ylabel(ylabel)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>cbar.set_label(zlabel)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figheight(8)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.set_figwidth(8)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.savefig(name,<sp/>dpi=300)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195" refid="namespacelrgv_1ab44b25d6ed6c94ba6a458846cb48830e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelrgv_1ab44b25d6ed6c94ba6a458846cb48830e" kindref="member">plot_archive</ref>(archive,<sp/>problem):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>si<sp/>=<sp/>archive.argsort()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptions<sp/>=<sp/>archive.get_ds()[si]</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>archive.get_ys()[si]</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>archive.get_xs()[si]<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(si)):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ys[i]<sp/>&lt;<sp/>np.inf:<sp/></highlight><highlight class="comment">#<sp/>throw<sp/>out<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ysp.append(descriptions[i])</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>ysp<sp/>=<sp/>np.array(ysp)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelrgv_1a2fe3ed09ae5ef083c2fa961c8875803e" kindref="member">plot3d</ref>(ysp,<sp/></highlight><highlight class="stringliteral">&quot;lrgv_nd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;f1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;f4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;f3&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="namespacelrgv_1a6f6a9cf8f09f279c6e4a42bd1280b6bc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacelrgv_1a6f6a9cf8f09f279c6e4a42bd1280b6bc" kindref="member">optimize_qd</ref>():</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>problem<sp/>=<sp/><ref refid="classlrgv_1_1lrgv" kindref="compound">lrgv</ref>()</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.qd_dim<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.qd_bounds<sp/>=<sp/>Bounds(np.array([0.85E7,<sp/>-1,<sp/>10000,<sp/>0,<sp/>0]),<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array([1.4E7,<sp/>-0.985,<sp/>65000,<sp/>65000,<sp/>10]))<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lrgv_qd&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params0<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;elites&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:32}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>opt_params1<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;solver&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;CRMFNES_CPP&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;max_evals&apos;</highlight><highlight class="normal">:400,<sp/></highlight><highlight class="stringliteral">&apos;popsize&apos;</highlight><highlight class="normal">:16,<sp/></highlight><highlight class="stringliteral">&apos;stall_criterion&apos;</highlight><highlight class="normal">:3}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#opt_params1<sp/>=<sp/>{&apos;solver&apos;:&apos;CMA_CPP&apos;,<sp/>&apos;max_evals&apos;:400,<sp/>&apos;popsize&apos;:16,<sp/>&apos;stall_criterion&apos;:3}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>diversifier.minimize(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classfcmaes_1_1mapelites_1_1wrapper" kindref="compound">mapelites.wrapper</ref>(problem.qd_fitness,<sp/>problem.qd_dim,<sp/>interval=1000,<sp/>save_interval=200000),<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.bounds,<sp/>problem.qd_bounds,<sp/>opt_params=[opt_params0,<sp/>opt_params1],<sp/>max_evals=400000)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>archive<sp/>=<sp/>mapelites.load_archive(name,<sp/>problem.bounds,<sp/>problem.qd_bounds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;final<sp/>archive:&apos;</highlight><highlight class="normal">,<sp/>archive.info())</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>archive.save(name)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelrgv_1ab44b25d6ed6c94ba6a458846cb48830e" kindref="member">plot_archive</ref>(archive,<sp/>problem)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelrgv_1af66d50b3590ffa761afae82d3302a9e5" kindref="member">optimize_mo</ref>()</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#optimize_qd()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="examples/lrgv/lrgv.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="pgpe_8cpp" kind="file" language="C++">
    <compoundname>pgpe.cpp</compoundname>
    <includes local="no">Eigen/Core</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">float.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">ctime</includes>
    <includes local="no">random</includes>
    <includes local="no">queue</includes>
    <includes local="no">tuple</includes>
    <includes refid="evaluator_8h" local="yes">evaluator.h</includes>
    <incdepgraph>
      <node id="11">
        <label>evaluator.h</label>
        <link refid="evaluator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>_fcmaescpp/pgpe.cpp</label>
        <link refid="pgpe_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Eigen/Core</label>
      </node>
      <node id="12">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>chrono</label>
      </node>
      <node id="17">
        <label>condition_variable</label>
      </node>
      <node id="7">
        <label>ctime</label>
      </node>
      <node id="5">
        <label>float.h</label>
      </node>
      <node id="4">
        <label>fstream</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>mutex</label>
      </node>
      <node id="18">
        <label>pcg_random.hpp</label>
      </node>
      <node id="9">
        <label>queue</label>
      </node>
      <node id="8">
        <label>random</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>thread</label>
      </node>
      <node id="10">
        <label>tuple</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classpgpe_1_1_a_d_a_m" prot="public">pgpe::ADAM</innerclass>
    <innerclass refid="classpgpe_1_1_p_g_p_e_optimizer" prot="public">pgpe::PGPEOptimizer</innerclass>
    <innernamespace refid="namespacepgpe">pgpe</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacepgpe_1acf8eb800c548fcaacd7f2cce47367122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pgpe::sdev</definition>
        <argsstring>(vec v)</argsstring>
        <name>sdev</name>
        <qualifiedname>pgpe::sdev</qualifiedname>
        <param>
          <type><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/pgpe.cpp" line="30" column="8" bodyfile="_fcmaescpp/pgpe.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="pgpe_8cpp_1a83f6d1c91509d2c28e236afbea4bd172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void optimizePGPE_C</definition>
        <argsstring>(int64_t runid, callback_parallel func_par, int dim, double *init, double *lower, double *upper, double *sigma, int maxEvals, double stopfitness, int popsize, int64_t seed, int lr_decay_steps, bool use_ranking, double center_learning_rate, double stdev_learning_rate, double stdev_max_change, double b1, double b2, double eps, double decay_coef, bool normalize, double *res)</argsstring>
        <name>optimizePGPE_C</name>
        <param>
          <type>int64_t</type>
          <declname>runid</declname>
        </param>
        <param>
          <type><ref refid="evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc" kindref="member">callback_parallel</ref></type>
          <declname>func_par</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>init</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>upper</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxEvals</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stopfitness</declname>
        </param>
        <param>
          <type>int</type>
          <declname>popsize</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lr_decay_steps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_ranking</declname>
        </param>
        <param>
          <type>double</type>
          <declname>center_learning_rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stdev_learning_rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stdev_max_change</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>decay_coef</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalize</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/pgpe.cpp" line="306" column="6" bodyfile="_fcmaescpp/pgpe.cpp" bodystart="306" bodyend="356"/>
        <references refid="class_fitness_1aba60038eac4e0e15d995e57f4ba079e1" compoundref="evaluator_8h" startline="313" endline="315">Fitness::evaluations</references>
        <references refid="evaluator_8h_1ad0943ebd623281f526e5aee2aa818895" compoundref="evaluator_8h" startline="86" endline="88">noop_callback</references>
        <references refid="class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6" compoundref="evaluator_8h" startline="333" endline="335">Fitness::setNormalize</references>
        <references refid="class_fitness_1a08a70acdfa7636ae3285e3576c9e3d11" compoundref="evaluator_8h" startline="212" endline="214">Fitness::terminate</references>
        <references refid="class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce" compoundref="evaluator_8h" startline="355" endline="369">Fitness::values</references>
      </memberdef>
      <memberdef kind="function" id="pgpe_8cpp_1a15e7e7ada6ad4ab26263681ac00ac55b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uintptr_t</type>
        <definition>uintptr_t initPGPE_C</definition>
        <argsstring>(int64_t runid, int dim, double *init, double *lower, double *upper, double *sigma, int popsize, int64_t seed, int lr_decay_steps, bool use_ranking, double center_learning_rate, double stdev_learning_rate, double stdev_max_change, double b1, double b2, double eps, double decay_coef, bool normalize)</argsstring>
        <name>initPGPE_C</name>
        <param>
          <type>int64_t</type>
          <declname>runid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>init</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>upper</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>popsize</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lr_decay_steps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_ranking</declname>
        </param>
        <param>
          <type>double</type>
          <declname>center_learning_rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stdev_learning_rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stdev_max_change</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>decay_coef</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/pgpe.cpp" line="358" column="11" bodyfile="_fcmaescpp/pgpe.cpp" bodystart="358" bodyend="388"/>
        <references refid="evaluator_8h_1ad0943ebd623281f526e5aee2aa818895" compoundref="evaluator_8h" startline="86" endline="88">noop_callback</references>
        <references refid="evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e" compoundref="evaluator_8h" startline="90" endline="91">noop_callback_par</references>
        <references refid="class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6" compoundref="evaluator_8h" startline="333" endline="335">Fitness::setNormalize</references>
      </memberdef>
      <memberdef kind="function" id="pgpe_8cpp_1a8909d326ed046a0387b7dd37e0c52619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroyPGPE_C</definition>
        <argsstring>(uintptr_t ptr)</argsstring>
        <name>destroyPGPE_C</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/pgpe.cpp" line="390" column="6" bodyfile="_fcmaescpp/pgpe.cpp" bodystart="390" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="pgpe_8cpp_1a5243162be40907ba17766c126035e413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void askPGPE_C</definition>
        <argsstring>(uintptr_t ptr, double *xs)</argsstring>
        <name>askPGPE_C</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/pgpe.cpp" line="397" column="6" bodyfile="_fcmaescpp/pgpe.cpp" bodystart="397" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="pgpe_8cpp_1a20da2826016ed209c84182f30949d436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tellPGPE_C</definition>
        <argsstring>(uintptr_t ptr, double *ys)</argsstring>
        <name>tellPGPE_C</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/pgpe.cpp" line="410" column="5" bodyfile="_fcmaescpp/pgpe.cpp" bodystart="410" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="pgpe_8cpp_1a2143eeef8d1b83e3c6f1d7818cffaa40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int populationPGPE_C</definition>
        <argsstring>(uintptr_t ptr, double *xs)</argsstring>
        <name>populationPGPE_C</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/pgpe.cpp" line="420" column="5" bodyfile="_fcmaescpp/pgpe.cpp" bodystart="420" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="pgpe_8cpp_1abd7f5b28d4595d7f9102a532a9f8c367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int resultPGPE_C</definition>
        <argsstring>(uintptr_t ptr, double *res)</argsstring>
        <name>resultPGPE_C</name>
        <param>
          <type>uintptr_t</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_fcmaescpp/pgpe.cpp" line="433" column="5" bodyfile="_fcmaescpp/pgpe.cpp" bodystart="433" bodyend="446"/>
        <references refid="class_fitness_1aba60038eac4e0e15d995e57f4ba079e1" compoundref="evaluator_8h" startline="313" endline="315">Fitness::evaluations</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen<sp/>based<sp/>implementation<sp/>of<sp/>PGPE<sp/>see<sp/>http://mediatum.ub.tum.de/doc/1099128/631352.pdf<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Derived<sp/>from<sp/>https://github.com/google/evojax/blob/main/evojax/algo/pgpe.py<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Requires<sp/>Eigen<sp/>version<sp/>&gt;=<sp/>3.4<sp/>because<sp/>new<sp/>slicing<sp/>capabilities<sp/>are<sp/>used,<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://eigen.tuxfamily.org/dox-devel/group__TutorialSlicingIndexing.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>requires<sp/>https://github.com/bab2min/EigenRand<sp/>for<sp/>random<sp/>number<sp/>generation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Supports<sp/>only<sp/>ADAM<sp/>based<sp/>mean/baseline<sp/>update.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="evaluator_8h" kindref="compound">evaluator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespacepgpe" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepgpe" kindref="compound">pgpe</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespacepgpe_1acf8eb800c548fcaacd7f2cce47367122" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepgpe_1acf8eb800c548fcaacd7f2cce47367122" kindref="member">sdev</ref>(<ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt((v.array()<sp/>-<sp/>v.mean()).square().sum()<sp/>/<sp/>(v.size()<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classpgpe_1_1_a_d_a_m" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpgpe_1_1_a_d_a_m_1adb338e468abbeabd2afd13d4d676b205" kindref="member">ADAM</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classpgpe_1_1_a_d_a_m_1adb338e468abbeabd2afd13d4d676b205" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1adb338e468abbeabd2afd13d4d676b205" kindref="member">ADAM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps_,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center_learning_rate_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decay_coef_)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc" kindref="member">dim</ref><sp/>=<sp/>x0.size();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a3b4e72135dc0972d32514ed425e5d99f" kindref="member">x</ref><sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048" kindref="member">m</ref><sp/>=<sp/><ref refid="evaluator_8h_1a909812174fa9829bc49f6e00edb00b90" kindref="member">zeros</ref>(<ref refid="classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc" kindref="member">dim</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c" kindref="member">v</ref><sp/>=<sp/><ref refid="evaluator_8h_1a909812174fa9829bc49f6e00edb00b90" kindref="member">zeros</ref>(<ref refid="classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc" kindref="member">dim</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6" kindref="member">b1</ref><sp/>=<sp/>b1_;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1" kindref="member">b2</ref><sp/>=<sp/>b2_;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1ad376ca8662b4f5b5de1311fff5bce942" kindref="member">eps</ref><sp/>=<sp/><ref refid="evaluator_8h_1a493b3a74ec3481711548e4b506b009cd" kindref="member">constant</ref>(<ref refid="classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc" kindref="member">dim</ref>,<sp/>eps_);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a0527e5f61c8d4babb53e3f8f369e3ddd" kindref="member">center_lr</ref><sp/>=<sp/>center_learning_rate_;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a3e4eaddab15e62725c5c6f11dec59b8d" kindref="member">decay_coef</ref><sp/>=<sp/>decay_coef_;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classpgpe_1_1_a_d_a_m_1a6023c4206a0929ea3b8f907d09081af1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a6023c4206a0929ea3b8f907d09081af1" kindref="member">update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;g)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048" kindref="member">m</ref><sp/>=<sp/>(1<sp/>-<sp/><ref refid="classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6" kindref="member">b1</ref>)<sp/>*<sp/>g<sp/>+<sp/><ref refid="classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6" kindref="member">b1</ref><sp/>*<sp/><ref refid="classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048" kindref="member">m</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>moment<sp/>estimate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c" kindref="member">v</ref><sp/>=<sp/>(1<sp/>-<sp/><ref refid="classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1" kindref="member">b2</ref>)<sp/>*<sp/>g.array().square().matrix()<sp/>+<sp/><ref refid="classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1" kindref="member">b2</ref><sp/>*<sp/><ref refid="classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c" kindref="member">v</ref>;<sp/></highlight><highlight class="comment">//<sp/>Second<sp/>moment<sp/>estimate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>mhat<sp/>=<sp/><ref refid="classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048" kindref="member">m</ref>.array()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="evaluator_8h_1a493b3a74ec3481711548e4b506b009cd" kindref="member">constant</ref>(<ref refid="classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc" kindref="member">dim</ref>,<sp/>1.<sp/>/<sp/>(1.<sp/>-<sp/>pow(<ref refid="classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6" kindref="member">b1</ref>,<sp/>i<sp/>+<sp/>1))).array();<sp/></highlight><highlight class="comment">//<sp/>Bias<sp/>correction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>vhat<sp/>=<sp/><ref refid="classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c" kindref="member">v</ref>.array()</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="evaluator_8h_1a493b3a74ec3481711548e4b506b009cd" kindref="member">constant</ref>(<ref refid="classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc" kindref="member">dim</ref>,<sp/>1.<sp/>/<sp/>(1.<sp/>-<sp/>pow(<ref refid="classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1" kindref="member">b2</ref>,<sp/>i<sp/>+<sp/>1))).array();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>delta<sp/>=<sp/><ref refid="classpgpe_1_1_a_d_a_m_1a5163c2770a4139ef247533d7bbc5b6bd" kindref="member">step_size</ref>(i)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(mhat.array()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(vhat.cwiseSqrt()<sp/>+<sp/><ref refid="classpgpe_1_1_a_d_a_m_1ad376ca8662b4f5b5de1311fff5bce942" kindref="member">eps</ref>).cwiseInverse().array());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a3b4e72135dc0972d32514ed425e5d99f" kindref="member">x</ref><sp/>-=<sp/>delta;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>step_size(i)<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>x.mean()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>sdev(x)<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m.mean()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>sdev(m)<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>v.mean()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>sdev(v)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classpgpe_1_1_a_d_a_m_1a5163c2770a4139ef247533d7bbc5b6bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a5163c2770a4139ef247533d7bbc5b6bd" kindref="member">step_size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a0527e5f61c8d4babb53e3f8f369e3ddd" kindref="member">center_lr</ref><sp/>*<sp/>pow(<ref refid="classpgpe_1_1_a_d_a_m_1a3e4eaddab15e62725c5c6f11dec59b8d" kindref="member">decay_coef</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classpgpe_1_1_a_d_a_m_1a3b4e72135dc0972d32514ed425e5d99f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a3b4e72135dc0972d32514ed425e5d99f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="74" refid="classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a243d6d68987be6644a9400244b703048" kindref="member">m</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>moment<sp/>estimate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a8fc34e0601078a82ef0eb39e34e8f51c" kindref="member">v</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Second<sp/>moment<sp/>estimate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_a_d_a_m_1ab1dabf7b11ff4ec09887c0b8302f0cbc" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="79" refid="classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_a_d_a_m_1aee860b74521dcd15311ee6e54f2e8fd6" kindref="member">b1</ref>;</highlight></codeline>
<codeline lineno="80" refid="classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a97e4b262f9cfd583e804d2deedba2ca1" kindref="member">b2</ref>;</highlight></codeline>
<codeline lineno="81" refid="classpgpe_1_1_a_d_a_m_1ad376ca8662b4f5b5de1311fff5bce942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_a_d_a_m_1ad376ca8662b4f5b5de1311fff5bce942" kindref="member">eps</ref>;</highlight></codeline>
<codeline lineno="82" refid="classpgpe_1_1_a_d_a_m_1a0527e5f61c8d4babb53e3f8f369e3ddd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a0527e5f61c8d4babb53e3f8f369e3ddd" kindref="member">center_lr</ref>;</highlight></codeline>
<codeline lineno="83" refid="classpgpe_1_1_a_d_a_m_1a3e4eaddab15e62725c5c6f11dec59b8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_a_d_a_m_1a3e4eaddab15e62725c5c6f11dec59b8d" kindref="member">decay_coef</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classpgpe_1_1_p_g_p_e_optimizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1abb3c39813a8c1221d91192bc8a0847df" kindref="member">PGPEOptimizer</ref><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classpgpe_1_1_p_g_p_e_optimizer_1abb3c39813a8c1221d91192bc8a0847df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1abb3c39813a8c1221d91192bc8a0847df" kindref="member">PGPEOptimizer</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>runid_,<sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>*fitfun_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed_,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize_,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;guess_,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;inputSigma_,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxEvaluations_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stopfitness_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lr_decay_steps_,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_ranking_,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center_learning_rate_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stdev_learning_rate_,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stdev_max_change_,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decay_coef_)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>runid<sp/>used<sp/>to<sp/>identify<sp/>a<sp/>specific<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a905b9565ca17288415da939216dc70e0" kindref="member">runid</ref><sp/>=<sp/>runid_;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fitness<sp/>function<sp/>to<sp/>minimize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d" kindref="member">fitfun</ref><sp/>=<sp/>fitfun_;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>objective<sp/>variables/problem<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95" kindref="member">dim</ref><sp/>=<sp/>dim_;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Population<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" kindref="member">popsize</ref><sp/>=<sp/>popsize_<sp/>&gt;<sp/>0<sp/>?<sp/>popsize_<sp/>:<sp/>4<sp/>*<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximal<sp/>number<sp/>of<sp/>evaluations<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1ad65ef0d571184f00a530b744b318720b" kindref="member">maxEvaluations</ref><sp/>=<sp/>maxEvaluations_<sp/>&gt;<sp/>0<sp/>?<sp/>maxEvaluations_<sp/>:<sp/>50000;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>for<sp/>fitness<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1abd2a628f0257f84148dfefa844d911ba" kindref="member">stopfitness</ref><sp/>=<sp/>stopfitness_;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>iterations<sp/>already<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00" kindref="member">iterations</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed" kindref="member">bestY</ref><sp/>=<sp/>DBL_MAX;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>criteria</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4" kindref="member">stop</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a5fe46e06fd5258960a7d1bf70dd1eab5" kindref="member">rs</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>pcg64(seed_);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f" kindref="member">optimizer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_a_d_a_m" kindref="compound">ADAM</ref>(guess_,<sp/>b1_,<sp/>b2_,<sp/>eps_,<sp/>center_learning_rate_,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decay_coef_);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b" kindref="member">center</ref><sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d" kindref="member">fitfun</ref>-&gt;encode(guess_);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref><sp/>=<sp/>inputSigma_;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a06d3dbc71179429995fd6c068dfcb732" kindref="member">lr_decay_steps</ref><sp/>=<sp/>lr_decay_steps_;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a0b57a5c636c110d07675dab85f18dd8a" kindref="member">use_ranking</ref><sp/>=<sp/>use_ranking_;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center_learning_rate_<sp/>=<sp/>abs(center_learning_rate_);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1af02edda627bf7e47c5b67069288af9fb" kindref="member">stdev_learning_rate</ref><sp/>=<sp/>abs(stdev_learning_rate_);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a851acdc3f2d277bed929991ad72c15e0" kindref="member">stdev_max_change</ref><sp/>=<sp/>abs(stdev_max_change_);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1af44c1f8d0f9632e39c187fe89c6df26e" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classpgpe_1_1_p_g_p_e_optimizer_1afdc7c84fd76b0b6fe5c0df6a1827a98f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1afdc7c84fd76b0b6fe5c0df6a1827a98f" kindref="member">~PGPEOptimizer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a5fe46e06fd5258960a7d1bf70dd1eab5" kindref="member">rs</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f" kindref="member">optimizer</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classpgpe_1_1_p_g_p_e_optimizer_1a94f0a09e1ac629bc2daa0782f0b78b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a94f0a09e1ac629bc2daa0782f0b78b7a" kindref="member">process_scores</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;ys)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Convert<sp/>fitness<sp/>scores<sp/>to<sp/>rank<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a0b57a5c636c110d07675dab85f18dd8a" kindref="member">use_ranking</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>ranks(ys.size());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aa45a218a6a9d424e78898121d21f082d" kindref="member">ivec</ref><sp/>yi<sp/>=<sp/><ref refid="evaluator_8h_1a7689f88ea48c85c22d9b34208decd67c" kindref="member">sort_index</ref>(ys);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ys.size();<sp/>i++)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranks[yi[i]]<sp/>=<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>i)<sp/>/<sp/>ys.size()<sp/>-<sp/>0.5;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ranks;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ys;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classpgpe_1_1_p_g_p_e_optimizer_1aedf86311561b4c064c713229e9fff837" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1aedf86311561b4c064c713229e9fff837" kindref="member">compute_reinforce_update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;fitness_scores,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>&amp;<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>updates<sp/>for<sp/>the<sp/>center<sp/>and<sp/>the<sp/>standard<sp/>deviation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>fitness_scores.size()<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>fit<sp/>=<sp/>fitness_scores.reshaped(2,<sp/>n);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>fit1<sp/>=<sp/>fit.row(0);<sp/></highlight><highlight class="comment">//<sp/>fitness<sp/>for<sp/>baseline<sp/>+<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>fit2<sp/>=<sp/>fit.row(1);<sp/></highlight><highlight class="comment">//<sp/>fitness<sp/>for<sp/>baseline<sp/>-<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>baseline<sp/>=<sp/><ref refid="evaluator_8h_1a493b3a74ec3481711548e4b506b009cd" kindref="member">constant</ref>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>.rows(),<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>.cols(),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fitness_scores.mean());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>all_scores<sp/>=<sp/>fit1<sp/>-<sp/>fit2;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>all_avg_scores<sp/>=<sp/>0.5<sp/>*<sp/>(fit1<sp/>+<sp/>fit2);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>stdev_sq<sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>.array().square().matrix();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>total_mu<sp/>=</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>.array()</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>all_scores.replicate(1,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>.rows()).transpose().array()</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>total_sigma<sp/>=</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(all_avg_scores.replicate(1,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>.rows()).transpose()</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>baseline).array()</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>.array().square().matrix()</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>stdev_sq.replicate(1,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>.cols())).array()</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>.replicate(1,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>.cols()).array().inverse();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1aa05ce82c5de00141802efa50625c4060" kindref="member">grad_center</ref><sp/>=<sp/>total_mu.rowwise().mean();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a6f781a67d0054069b30742bdc7a3de0b" kindref="member">grad_stdev</ref><sp/>=<sp/>total_sigma.rowwise().mean();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classpgpe_1_1_p_g_p_e_optimizer_1af5dd12d8bb2b74222820282793a111ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1af5dd12d8bb2b74222820282793a111ed" kindref="member">update_stdev</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;grad,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_change)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>allowed_delta<sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>.cwiseAbs()<sp/>*<sp/>max_change;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>min_allowed<sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref><sp/>-<sp/>allowed_delta;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>max_allowed<sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref><sp/>+<sp/>allowed_delta;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref><sp/>+<sp/>lr<sp/>*<sp/>grad).cwiseMax(min_allowed).cwiseMin(max_allowed);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classpgpe_1_1_p_g_p_e_optimizer_1a431dca3f8ed9c12e85c449474001930c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a431dca3f8ed9c12e85c449474001930c" kindref="member">ask</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>&amp;<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b" kindref="member">center</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>undecoded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" kindref="member">popsize</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref><sp/>=<sp/><ref refid="evaluator_8h_1a231544ac51b3f9312c104a3b7a3c49a6" kindref="member">normal</ref>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95" kindref="member">dim</ref>,<sp/>n,<sp/>*<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a5fe46e06fd5258960a7d1bf70dd1eab5" kindref="member">rs</ref>).array()</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>.replicate(1,<sp/>n).array();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>x<sp/>=<sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95" kindref="member">dim</ref>,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>x1<sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b" kindref="member">center</ref>.replicate(1,<sp/>n)<sp/>+<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>x2<sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b" kindref="member">center</ref>.replicate(1,<sp/>n)<sp/>-<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>n;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.col(2<sp/>*<sp/>p)<sp/>=<sp/>x1.col(p);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.col(2<sp/>*<sp/>p<sp/>+<sp/>1)<sp/>=<sp/>x2.col(p);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classpgpe_1_1_p_g_p_e_optimizer_1adb8d7f20201db004da433725efda69cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1adb8d7f20201db004da433725efda69cc" kindref="member">ask</ref>()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>undecoded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1adb8d7f20201db004da433725efda69cc" kindref="member">ask</ref>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b" kindref="member">center</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classpgpe_1_1_p_g_p_e_optimizer_1af44c1f8d0f9632e39c187fe89c6df26e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1af44c1f8d0f9632e39c187fe89c6df26e" kindref="member">init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87" kindref="member">popX</ref><sp/>=<sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95" kindref="member">dim</ref>,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928" kindref="member">popY</ref><sp/>=<sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" kindref="member">popsize</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" kindref="member">popsize</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928" kindref="member">popY</ref>[p]<sp/>=<sp/>DBL_MAX;<sp/></highlight><highlight class="comment">//<sp/>compute<sp/>fitness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classpgpe_1_1_p_g_p_e_optimizer_1abcd7c230df525f67d06fa41f4450f23d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1abcd7c230df525f67d06fa41f4450f23d" kindref="member">ask_decode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>popsize<sp/>offspring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>xs<sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1adb8d7f20201db004da433725efda69cc" kindref="member">ask</ref>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b" kindref="member">center</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" kindref="member">popsize</ref>;<sp/>p++)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87" kindref="member">popX</ref>.col(p)<sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d" kindref="member">fitfun</ref>-&gt;decode(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d" kindref="member">fitfun</ref>-&gt;getClosestFeasibleNormed(xs.col(p)));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87" kindref="member">popX</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="classpgpe_1_1_p_g_p_e_optimizer_1a920b8cf76e73e296c8a416c6100e9b96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a920b8cf76e73e296c8a416c6100e9b96" kindref="member">tell</ref>(<ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>ys)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928" kindref="member">popY</ref><sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a94f0a09e1ac629bc2daa0782f0b78b7a" kindref="member">process_scores</ref>(-ys);<sp/></highlight><highlight class="comment">//<sp/>negate<sp/>values<sp/>since<sp/>we<sp/>minimize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bY<sp/>=<sp/>-<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928" kindref="member">popY</ref>.maxCoeff();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed" kindref="member">bestY</ref><sp/>&gt;<sp/>bY)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed" kindref="member">bestY</ref><sp/>=<sp/>bY;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" kindref="member">popsize</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928" kindref="member">popY</ref>[p]<sp/>==<sp/>-<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed" kindref="member">bestY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a60b5b90ad37acfd8b562ca3fb0189e5f" kindref="member">bestX</ref><sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87" kindref="member">popX</ref>.col(p);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>popsize<sp/>*<sp/>iterations<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;<sp/>bestY<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>bestX.transpose()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed" kindref="member">bestY</ref><sp/>&lt;<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1abd2a628f0257f84148dfefa844d911ba" kindref="member">stopfitness</ref>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4" kindref="member">stop</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1aedf86311561b4c064c713229e9fff837" kindref="member">compute_reinforce_update</ref>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928" kindref="member">popY</ref>,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f" kindref="member">optimizer</ref>-&gt;update(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00" kindref="member">iterations</ref>)<sp/>/<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a06d3dbc71179429995fd6c068dfcb732" kindref="member">lr_decay_steps</ref>,<sp/>-<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1aa05ce82c5de00141802efa50625c4060" kindref="member">grad_center</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00" kindref="member">iterations</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b" kindref="member">center</ref><sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f" kindref="member">optimizer</ref>-&gt;x;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref><sp/>=<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1af5dd12d8bb2b74222820282793a111ed" kindref="member">update_stdev</ref>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1af02edda627bf7e47c5b67069288af9fb" kindref="member">stdev_learning_rate</ref>,<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a6f781a67d0054069b30742bdc7a3de0b" kindref="member">grad_stdev</ref>,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a851acdc3f2d277bed929991ad72c15e0" kindref="member">stdev_max_change</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="classpgpe_1_1_p_g_p_e_optimizer_1a1c4686a59afbf7da3383fe594af0f2ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a1c4686a59afbf7da3383fe594af0f2ea" kindref="member">getPopulation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87" kindref="member">popX</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classpgpe_1_1_p_g_p_e_optimizer_1ad9fae8865ce2ae4502feb469621cf336" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1ad9fae8865ce2ae4502feb469621cf336" kindref="member">getBestX</ref>()<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a60b5b90ad37acfd8b562ca3fb0189e5f" kindref="member">bestX</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classpgpe_1_1_p_g_p_e_optimizer_1a0edc78afeba19ac33c69025815923088" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a0edc78afeba19ac33c69025815923088" kindref="member">getBestValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed" kindref="member">bestY</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classpgpe_1_1_p_g_p_e_optimizer_1aa189f3e0a4b7a3e1c2cd477de2bde537" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1aa189f3e0a4b7a3e1c2cd477de2bde537" kindref="member">getIterations</ref>()<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00" kindref="member">iterations</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classpgpe_1_1_p_g_p_e_optimizer_1a13e59873810dc80105b232862e97694d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a13e59873810dc80105b232862e97694d" kindref="member">getStop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classpgpe_1_1_p_g_p_e_optimizer_1a03e67227b1099ca3c35c0f9d953cc86c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref>*<sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a03e67227b1099ca3c35c0f9d953cc86c" kindref="member">getFitfun</ref>()<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d" kindref="member">fitfun</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classpgpe_1_1_p_g_p_e_optimizer_1acd4bfd1277a1fdef42a5c3f4152205e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1acd4bfd1277a1fdef42a5c3f4152205e9" kindref="member">getDim</ref>()<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classpgpe_1_1_p_g_p_e_optimizer_1adc8adb1458abef40a6cd1eacc4fd38a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1adc8adb1458abef40a6cd1eacc4fd38a9" kindref="member">getPopsize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" kindref="member">popsize</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274" refid="classpgpe_1_1_p_g_p_e_optimizer_1a905b9565ca17288415da939216dc70e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a905b9565ca17288415da939216dc70e0" kindref="member">runid</ref>;</highlight></codeline>
<codeline lineno="275" refid="classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>*<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a08b11e28ce3478c1bf596412678ae94d" kindref="member">fitfun</ref>;</highlight></codeline>
<codeline lineno="276" refid="classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_a_d_a_m" kindref="compound">ADAM</ref><sp/>*<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a6b20bd300923092a198071cd3bcd1f0f" kindref="member">optimizer</ref>;</highlight></codeline>
<codeline lineno="277" refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a852a3bc0a44a9a4a37ac175b4bd7993d" kindref="member">popsize</ref>;<sp/></highlight><highlight class="comment">//<sp/>population<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a9a62cfb8a5e5737cd6940559a5a28e95" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="279" refid="classpgpe_1_1_p_g_p_e_optimizer_1ad65ef0d571184f00a530b744b318720b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1ad65ef0d571184f00a530b744b318720b" kindref="member">maxEvaluations</ref>;</highlight></codeline>
<codeline lineno="280" refid="classpgpe_1_1_p_g_p_e_optimizer_1a8ae592b3eafa6b768dce659bd69f2b32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a8ae592b3eafa6b768dce659bd69f2b32" kindref="member">keep</ref>;</highlight></codeline>
<codeline lineno="281" refid="classpgpe_1_1_p_g_p_e_optimizer_1abd2a628f0257f84148dfefa844d911ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1abd2a628f0257f84148dfefa844d911ba" kindref="member">stopfitness</ref>;</highlight></codeline>
<codeline lineno="282" refid="classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a763dac15ecb73191656d1e5c9d56cc00" kindref="member">iterations</ref>;</highlight></codeline>
<codeline lineno="283" refid="classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1ac0e607ff7462b3c2c231fe06756756ed" kindref="member">bestY</ref>;</highlight></codeline>
<codeline lineno="284" refid="classpgpe_1_1_p_g_p_e_optimizer_1a60b5b90ad37acfd8b562ca3fb0189e5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a60b5b90ad37acfd8b562ca3fb0189e5f" kindref="member">bestX</ref>;</highlight></codeline>
<codeline lineno="285" refid="classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a66514826be64b9814c0dbb330c5525d4" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="286" refid="classpgpe_1_1_p_g_p_e_optimizer_1a5fe46e06fd5258960a7d1bf70dd1eab5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pcg64<sp/>*<ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a5fe46e06fd5258960a7d1bf70dd1eab5" kindref="member">rs</ref>;</highlight></codeline>
<codeline lineno="287" refid="classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a785f388ac746302c91cb964563d14e87" kindref="member">popX</ref>;</highlight></codeline>
<codeline lineno="288" refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a38fb3ee0b953d37ccd5aad77250b2bf1" kindref="member">scaled_noises</ref>;</highlight></codeline>
<codeline lineno="289" refid="classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a4cf61ec6c2aaaa233969c765c4f38928" kindref="member">popY</ref>;</highlight></codeline>
<codeline lineno="290" refid="classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a91f07247eabc246de82e0fe27367ff1b" kindref="member">center</ref>;</highlight></codeline>
<codeline lineno="291" refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a3b22f8ad3324a2cde82a753881a451f3" kindref="member">stdev</ref>;</highlight></codeline>
<codeline lineno="292" refid="classpgpe_1_1_p_g_p_e_optimizer_1aa05ce82c5de00141802efa50625c4060" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1aa05ce82c5de00141802efa50625c4060" kindref="member">grad_center</ref>;</highlight></codeline>
<codeline lineno="293" refid="classpgpe_1_1_p_g_p_e_optimizer_1a6f781a67d0054069b30742bdc7a3de0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a6f781a67d0054069b30742bdc7a3de0b" kindref="member">grad_stdev</ref>;</highlight></codeline>
<codeline lineno="294" refid="classpgpe_1_1_p_g_p_e_optimizer_1a0b57a5c636c110d07675dab85f18dd8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a0b57a5c636c110d07675dab85f18dd8a" kindref="member">use_ranking</ref>;</highlight></codeline>
<codeline lineno="295" refid="classpgpe_1_1_p_g_p_e_optimizer_1a06d3dbc71179429995fd6c068dfcb732" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a06d3dbc71179429995fd6c068dfcb732" kindref="member">lr_decay_steps</ref>;</highlight></codeline>
<codeline lineno="296" refid="classpgpe_1_1_p_g_p_e_optimizer_1acc4988a82176b8c5e067766f443aed74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1acc4988a82176b8c5e067766f443aed74" kindref="member">center_learning_rate</ref>;</highlight></codeline>
<codeline lineno="297" refid="classpgpe_1_1_p_g_p_e_optimizer_1af02edda627bf7e47c5b67069288af9fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1af02edda627bf7e47c5b67069288af9fb" kindref="member">stdev_learning_rate</ref>;</highlight></codeline>
<codeline lineno="298" refid="classpgpe_1_1_p_g_p_e_optimizer_1a851acdc3f2d277bed929991ad72c15e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer_1a851acdc3f2d277bed929991ad72c15e0" kindref="member">stdev_max_change</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepgpe" kindref="compound">pgpe</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="306" refid="pgpe_8cpp_1a83f6d1c91509d2c28e236afbea4bd172" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pgpe_8cpp_1a83f6d1c91509d2c28e236afbea4bd172" kindref="member">optimizePGPE_C</ref>(int64_t<sp/>runid,<sp/><ref refid="evaluator_8h_1a1adc681c70e547867358d25d5cf7eedc" kindref="member">callback_parallel</ref><sp/>func_par,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*init,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*upper,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*sigma,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxEvals,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stopfitness,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize,<sp/>int64_t<sp/>seed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lr_decay_steps,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_ranking,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center_learning_rate,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stdev_learning_rate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stdev_max_change,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decay_coef,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>normalize,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*res)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>guess(dim),<sp/>lower_limit(dim),<sp/>upper_limit(dim),<sp/>inputSigma(dim);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)<sp/>{</highlight><highlight class="comment">//<sp/>guess<sp/>is<sp/>mandatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess[i]<sp/>=<sp/>init[i];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputSigma[i]<sp/>=<sp/>sigma[i];</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>upper<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess[i]<sp/>=<sp/>init[i];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_limit[i]<sp/>=<sp/>lower[i];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_limit[i]<sp/>=<sp/>upper[i];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_limit.resize(0);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_limit.resize(0);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>fitfun(<ref refid="evaluator_8h_1ad0943ebd623281f526e5aee2aa818895" kindref="member">noop_callback</ref>,<sp/>func_par,<sp/>dim,<sp/>1,<sp/>lower_limit,<sp/>upper_limit);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>fitfun.<ref refid="class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6" kindref="member">setNormalize</ref>(normalize);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref><sp/>opt(runid,<sp/>&amp;fitfun,<sp/>dim,<sp/>seed,<sp/>popsize,<sp/>guess,<sp/>inputSigma,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxEvals,<sp/>stopfitness,<sp/>lr_decay_steps,<sp/>use_ranking,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center_learning_rate,<sp/>stdev_learning_rate,<sp/>stdev_max_change,<sp/>b1,<sp/>b2,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps,<sp/>decay_coef);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(fitfun.<ref refid="class_fitness_1aba60038eac4e0e15d995e57f4ba079e1" kindref="member">evaluations</ref>()<sp/>&lt;<sp/>maxEvals</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!fitfun.<ref refid="class_fitness_1a08a70acdfa7636ae3285e3576c9e3d11" kindref="member">terminate</ref>()<sp/>&amp;&amp;<sp/>opt.getStop()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>xs<sp/>=<sp/>opt.ask();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>ys(popsize);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fitfun.<ref refid="class_fitness_1a780edd5ddec4867c4d59c4cd3995f6ce" kindref="member">values</ref>(xs,<sp/>ys);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.tell(ys);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>bestX<sp/>=<sp/>opt.getBestX();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bestY<sp/>=<sp/>opt.getBestValue();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[i]<sp/>=<sp/>bestX[i];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>res[dim]<sp/>=<sp/>bestY;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>res[dim<sp/>+<sp/>1]<sp/>=<sp/>fitfun.<ref refid="class_fitness_1aba60038eac4e0e15d995e57f4ba079e1" kindref="member">evaluations</ref>();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>res[dim<sp/>+<sp/>2]<sp/>=<sp/>opt.getIterations();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>res[dim<sp/>+<sp/>3]<sp/>=<sp/>opt.getStop();</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="pgpe_8cpp_1a15e7e7ada6ad4ab26263681ac00ac55b" refkind="member"><highlight class="normal">uintptr_t<sp/><ref refid="pgpe_8cpp_1a15e7e7ada6ad4ab26263681ac00ac55b" kindref="member">initPGPE_C</ref>(int64_t<sp/>runid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*init,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lower,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*upper,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*sigma,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize,<sp/>int64_t<sp/>seed,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lr_decay_steps,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_ranking,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center_learning_rate,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stdev_learning_rate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stdev_max_change,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decay_coef,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>normalize)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>guess(dim),<sp/>lower_limit(dim),<sp/>upper_limit(dim),<sp/>inputSigma(dim);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)<sp/>{</highlight><highlight class="comment">//<sp/>guess<sp/>is<sp/>mandatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess[i]<sp/>=<sp/>init[i];</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputSigma[i]<sp/>=<sp/>sigma[i];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>upper<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess[i]<sp/>=<sp/>init[i];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_limit[i]<sp/>=<sp/>lower[i];</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_limit[i]<sp/>=<sp/>upper[i];</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_limit.resize(0);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_limit.resize(0);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>*fitfun<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref>(<ref refid="evaluator_8h_1ad0943ebd623281f526e5aee2aa818895" kindref="member">noop_callback</ref>,<sp/><ref refid="evaluator_8h_1ac05c49788a31e5f7cb8efbe8ca3b548e" kindref="member">noop_callback_par</ref>,<sp/>dim,<sp/>1,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_limit,<sp/>upper_limit);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>fitfun-&gt;<ref refid="class_fitness_1a31beb7ecb5fa49ac03b43abe444ab9a6" kindref="member">setNormalize</ref>(normalize);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref><sp/>*opt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref>(runid,<sp/>fitfun,<sp/>dim,<sp/>seed,<sp/>popsize,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess,<sp/>inputSigma,<sp/>0,<sp/>-DBL_MAX,<sp/>lr_decay_steps,<sp/>use_ranking,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center_learning_rate,<sp/>stdev_learning_rate,<sp/>stdev_max_change,<sp/>b1,<sp/>b2,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps,<sp/>decay_coef);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uintptr_t)<sp/>opt;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="pgpe_8cpp_1a8909d326ed046a0387b7dd37e0c52619" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pgpe_8cpp_1a8909d326ed046a0387b7dd37e0c52619" kindref="member">destroyPGPE_C</ref>(uintptr_t<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref><sp/>*opt<sp/>=<sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref>*)<sp/>ptr;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>*fitfun<sp/>=<sp/>opt-&gt;getFitfun();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fitfun;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>opt;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="pgpe_8cpp_1a5243162be40907ba17766c126035e413" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pgpe_8cpp_1a5243162be40907ba17766c126035e413" kindref="member">askPGPE_C</ref>(uintptr_t<sp/>ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xs)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref><sp/>*opt<sp/>=<sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref>*)<sp/>ptr;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>opt-&gt;getDim();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize<sp/>=<sp/>opt-&gt;getPopsize();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>popX<sp/>=<sp/>opt-&gt;ask_decode();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref><sp/>*fitfun<sp/>=<sp/>opt-&gt;getFitfun();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>popsize;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x<sp/>=<sp/>popX.col(p);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs[p<sp/>*<sp/>n<sp/>+<sp/>i]<sp/>=<sp/>x[i];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="pgpe_8cpp_1a20da2826016ed209c84182f30949d436" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pgpe_8cpp_1a20da2826016ed209c84182f30949d436" kindref="member">tellPGPE_C</ref>(uintptr_t<sp/>ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ys)<sp/>{<sp/></highlight><highlight class="comment">//,<sp/>double*<sp/>xs)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref><sp/>*opt<sp/>=<sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref>*)<sp/>ptr;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize<sp/>=<sp/>opt-&gt;getPopsize();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>vals(popsize);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>popsize;<sp/>i++)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals[i]<sp/>=<sp/>ys[i];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>opt-&gt;tell(vals);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt-&gt;getStop();</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="pgpe_8cpp_1a2143eeef8d1b83e3c6f1d7818cffaa40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pgpe_8cpp_1a2143eeef8d1b83e3c6f1d7818cffaa40" kindref="member">populationPGPE_C</ref>(uintptr_t<sp/>ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xs)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref><sp/>*opt<sp/>=<sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref>*)<sp/>ptr;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>opt-&gt;getDim();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popsize<sp/>=<sp/>opt-&gt;getPopsize();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1af0f7533253586ad2aba962e9537d90bc" kindref="member">mat</ref><sp/>popX<sp/>=<sp/>opt-&gt;getPopulation();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>popsize;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>x<sp/>=<sp/>popX.col(p);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim;<sp/>i++)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>=<sp/>xs[p<sp/>*<sp/>dim<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt-&gt;getStop();</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="pgpe_8cpp_1abd7f5b28d4595d7f9102a532a9f8c367" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pgpe_8cpp_1abd7f5b28d4595d7f9102a532a9f8c367" kindref="member">resultPGPE_C</ref>(uintptr_t<sp/>ptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>res)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref><sp/>*opt<sp/>=<sp/>(<ref refid="classpgpe_1_1_p_g_p_e_optimizer" kindref="compound">PGPEOptimizer</ref>*)<sp/>ptr;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="daoptimizer_8cpp_1aeb2fc0d8c764908dd0b77ed5ab437c3f" kindref="member">vec</ref><sp/>bestX<sp/>=<sp/>opt-&gt;getBestX();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bestY<sp/>=<sp/>opt-&gt;getBestValue();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>bestX.size();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bestX.size();<sp/>i++)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[i]<sp/>=<sp/>bestX[i];</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>res[n]<sp/>=<sp/>bestY;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fitness" kindref="compound">Fitness</ref>*<sp/>fitfun<sp/>=<sp/>opt-&gt;getFitfun();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>res[n<sp/>+<sp/>1]<sp/>=<sp/>fitfun-&gt;<ref refid="class_fitness_1aba60038eac4e0e15d995e57f4ba079e1" kindref="member">evaluations</ref>();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>res[n<sp/>+<sp/>2]<sp/>=<sp/>opt-&gt;getIterations();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>res[n<sp/>+<sp/>3]<sp/>=<sp/>opt-&gt;getStop();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt-&gt;getStop();</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">//bool<sp/>rosen(int<sp/>n,<sp/>const<sp/>double<sp/>*x,<sp/>double<sp/>*y)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>f<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n<sp/>-<sp/>1;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>+=<sp/>1e2<sp/>*<sp/>(x[i]<sp/>*<sp/>x[i]<sp/>-<sp/>x[i<sp/>+<sp/>1])<sp/>*<sp/>(x[i]<sp/>*<sp/>x[i]<sp/>-<sp/>x[i<sp/>+<sp/>1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(x[i]<sp/>-<sp/>1.)<sp/>*<sp/>(x[i]<sp/>-<sp/>1.);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>y[0]<sp/>=<sp/>-f;<sp/>//negate<sp/>!!!!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>false;<sp/>//<sp/>don&apos;t<sp/>terminate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//double*<sp/>test_rosen(int<sp/>dim,<sp/>int<sp/>popsize)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>n<sp/>=<sp/>dim;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>max_iteration<sp/>=<sp/>10000;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>maxEvals<sp/>=<sp/>max_iteration<sp/>*<sp/>popsize;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>runid<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>seed<sp/>=<sp/>4242;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>stopfitness<sp/>=<sp/>-1E99;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>vec<sp/>lower_limit<sp/>=<sp/>constant(dim,<sp/>-100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>vec<sp/>upper_limit<sp/>=<sp/>constant(dim,<sp/>100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>*res<sp/>=<sp/>new<sp/>double[dim<sp/>+<sp/>4];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>vec<sp/>guess<sp/>=<sp/>zeros(dim);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>vec<sp/>inputSigma<sp/>=<sp/>constant(dim,<sp/>0.1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>center_learning_rate<sp/>=<sp/>0.15;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>stdev_learning_rate<sp/>=<sp/>0.1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>stdev_max_change<sp/>=<sp/>0.2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>b1<sp/>=<sp/>0.9;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>b2<sp/>=<sp/>0.999;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>eps<sp/>=<sp/>1e-8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>decay_coef<sp/>=<sp/>1.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>lr_decay_steps<sp/>=<sp/>1000;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>bool<sp/>use_ranking<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Fitness<sp/>fitfun(rosen,<sp/>noop_callback_par,<sp/>dim,<sp/>1,<sp/>lower_limit,<sp/>upper_limit);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>PGPEOptimizer<sp/>opt(runid,<sp/>&amp;fitfun,<sp/>dim,<sp/>seed,<sp/>popsize,<sp/>guess,<sp/>inputSigma,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxEvals,<sp/>stopfitness,<sp/>lr_decay_steps,<sp/>use_ranking,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center_learning_rate,<sp/>stdev_learning_rate,<sp/>stdev_max_change,<sp/>b1,<sp/>b2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eps,<sp/>decay_coef);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>try<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>max_iteration<sp/>&amp;&amp;<sp/>opt.getStop()<sp/>==<sp/>0;<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>xs<sp/>=<sp/>opt.ask_decode();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/>ys(popsize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>popsize;<sp/>p++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/>y<sp/>=<sp/>fitfun.eval(xs.col(p));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys[p]<sp/>=<sp/>y[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.tell(ys);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/>bestX<sp/>=<sp/>opt.getBestX();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>bestY<sp/>=<sp/>opt.getBestValue();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[i]<sp/>=<sp/>bestX[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[n]<sp/>=<sp/>bestY;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[n<sp/>+<sp/>1]<sp/>=<sp/>fitfun.evaluations();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[n<sp/>+<sp/>2]<sp/>=<sp/>opt.getIterations();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[n<sp/>+<sp/>3]<sp/>=<sp/>opt.getStop();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>res;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>res;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//int<sp/>main()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>dim<sp/>=<sp/>13;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>popsize<sp/>=<sp/>80;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>*res<sp/>=<sp/>test_rosen(dim,<sp/>popsize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dim<sp/>+<sp/>4;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>res[i]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="_fcmaescpp/pgpe.cpp"/>
  </compounddef>
</doxygen>

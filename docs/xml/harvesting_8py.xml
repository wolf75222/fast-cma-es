<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="harvesting_8py" kind="file" language="Python">
    <compoundname>harvesting.py</compoundname>
    <innerclass refid="classexamples_1_1harvesting_1_1fitness" prot="public">examples::harvesting::fitness</innerclass>
    <innernamespace refid="namespaceexamples">examples</innernamespace>
    <innernamespace refid="namespaceexamples_1_1harvesting">examples::harvesting</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceexamples_1_1harvesting_1a8509c0d38a1c6445d5349c203e203311" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::harvesting.stdout</definition>
        <argsstring></argsstring>
        <name>stdout</name>
        <qualifiedname>examples.harvesting.stdout</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="50" column="1" bodyfile="examples/harvesting.py" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1harvesting_1a48e2ae48f8a81a448c4f19d7014cfdeb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::harvesting.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>examples.harvesting.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="50" column="1" bodyfile="examples/harvesting.py" bodystart="50" bodyend="-1"/>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1ac9d51d3f1b4b38e405e5cce9fdd48b7d" compoundref="harvesting_8py" startline="185" endline="210">examples.harvesting.fitness.fun</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceexamples_1_1harvesting_1aa37b036022b2bc82cff39f6e0393bf86" prot="public" static="no" mutable="no">
        <type></type>
        <definition>examples::harvesting.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>examples.harvesting.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="50" column="1" bodyfile="examples/harvesting.py" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceexamples_1_1harvesting_1a666bda29f0fbc73cf7507967dbd8e2d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.harvesting.scheduling</definition>
        <argsstring>(tasks, n_jobs, n_machines, max_active, start, duration)</argsstring>
        <name>scheduling</name>
        <qualifiedname>examples.harvesting.scheduling</qualifiedname>
        <param>
          <type>tasks</type>
          <defname>tasks</defname>
        </param>
        <param>
          <type>n_jobs</type>
          <defname>n_jobs</defname>
        </param>
        <param>
          <type>n_machines</type>
          <defname>n_machines</defname>
        </param>
        <param>
          <type>max_active</type>
          <defname>max_active</defname>
        </param>
        <param>
          <type>start</type>
          <defname>start</defname>
        </param>
        <param>
          <type>duration</type>
          <defname>duration</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="53" column="1" bodyfile="examples/harvesting.py" bodystart="53" bodyend="79"/>
        <references refid="namespaceexamples_1_1harvesting_1ad7244b0bc13af9e1df5e1a29be8200a6" compoundref="harvesting_8py" startline="86" endline="129">examples.harvesting.adjust_timing</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1harvesting_1a372d76d3dd55bdbce747759184911516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.harvesting.chart</definition>
        <argsstring>(tasks, n_jobs, n_machines, max_active, start, duration)</argsstring>
        <name>chart</name>
        <qualifiedname>examples.harvesting.chart</qualifiedname>
        <param>
          <type>tasks</type>
          <defname>tasks</defname>
        </param>
        <param>
          <type>n_jobs</type>
          <defname>n_jobs</defname>
        </param>
        <param>
          <type>n_machines</type>
          <defname>n_machines</defname>
        </param>
        <param>
          <type>max_active</type>
          <defname>max_active</defname>
        </param>
        <param>
          <type>start</type>
          <defname>start</defname>
        </param>
        <param>
          <type>duration</type>
          <defname>duration</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="80" column="1" bodyfile="examples/harvesting.py" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1harvesting_1ad7244b0bc13af9e1df5e1a29be8200a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.harvesting.adjust_timing</definition>
        <argsstring>(start, duration, max_active)</argsstring>
        <name>adjust_timing</name>
        <qualifiedname>examples.harvesting.adjust_timing</qualifiedname>
        <param>
          <type>start</type>
          <defname>start</defname>
        </param>
        <param>
          <type>duration</type>
          <defname>duration</defname>
        </param>
        <param>
          <type>max_active</type>
          <defname>max_active</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="86" column="1" bodyfile="examples/harvesting.py" bodystart="86" bodyend="129"/>
        <referencedby refid="namespaceexamples_1_1harvesting_1a5e6fd72941106ed07937bf8806852011" compoundref="harvesting_8py" startline="130" endline="152">examples.harvesting.exec_tasks</referencedby>
        <referencedby refid="namespaceexamples_1_1harvesting_1a666bda29f0fbc73cf7507967dbd8e2d8" compoundref="harvesting_8py" startline="53" endline="79">examples.harvesting.scheduling</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1harvesting_1a5e6fd72941106ed07937bf8806852011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.harvesting.exec_tasks</definition>
        <argsstring>(tasks, n_jobs, n_machines, max_active, start, duration)</argsstring>
        <name>exec_tasks</name>
        <qualifiedname>examples.harvesting.exec_tasks</qualifiedname>
        <param>
          <type>tasks</type>
          <defname>tasks</defname>
        </param>
        <param>
          <type>n_jobs</type>
          <defname>n_jobs</defname>
        </param>
        <param>
          <type>n_machines</type>
          <defname>n_machines</defname>
        </param>
        <param>
          <type>max_active</type>
          <defname>max_active</defname>
        </param>
        <param>
          <type>start</type>
          <defname>start</defname>
        </param>
        <param>
          <type>duration</type>
          <defname>duration</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="130" column="1" bodyfile="examples/harvesting.py" bodystart="130" bodyend="152"/>
        <references refid="namespaceexamples_1_1harvesting_1ad7244b0bc13af9e1df5e1a29be8200a6" compoundref="harvesting_8py" startline="86" endline="129">examples.harvesting.adjust_timing</references>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1ac9d51d3f1b4b38e405e5cce9fdd48b7d" compoundref="harvesting_8py" startline="185" endline="210">examples.harvesting.fitness.fun</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1harvesting_1ac5401be59f58e63fbbb729287a4c3171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.harvesting.filtered_tasks</definition>
        <argsstring>(x, task_data, n_operations, n_machines, job_indices, job_ids)</argsstring>
        <name>filtered_tasks</name>
        <qualifiedname>examples.harvesting.filtered_tasks</qualifiedname>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>task_data</type>
          <defname>task_data</defname>
        </param>
        <param>
          <type>n_operations</type>
          <defname>n_operations</defname>
        </param>
        <param>
          <type>n_machines</type>
          <defname>n_machines</defname>
        </param>
        <param>
          <type>job_indices</type>
          <defname>job_indices</defname>
        </param>
        <param>
          <type>job_ids</type>
          <defname>job_ids</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="153" column="1" bodyfile="examples/harvesting.py" bodystart="153" bodyend="158"/>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1acb6ce7a10ef6b8a08952a7cf7b94b4f6" compoundref="harvesting_8py" startline="177" endline="184">examples.harvesting.fitness.chart</referencedby>
        <referencedby refid="classexamples_1_1harvesting_1_1fitness_1ac9d51d3f1b4b38e405e5cce9fdd48b7d" compoundref="harvesting_8py" startline="185" endline="210">examples.harvesting.fitness.fun</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1harvesting_1abe8c6e1997927ab3f18d66329f8e3ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.harvesting.retry_modecpp</definition>
        <argsstring>(fit, retry_num=32, popsize=48, max_eval=500000, nsga_update=True, workers=mp.cpu_count())</argsstring>
        <name>retry_modecpp</name>
        <qualifiedname>examples.harvesting.retry_modecpp</qualifiedname>
        <param>
          <type>fit</type>
          <defname>fit</defname>
        </param>
        <param>
          <type>retry_num</type>
          <defname>retry_num</defname>
          <defval>32</defval>
        </param>
        <param>
          <type>popsize</type>
          <defname>popsize</defname>
          <defval>48</defval>
        </param>
        <param>
          <type>max_eval</type>
          <defname>max_eval</defname>
          <defval>500000</defval>
        </param>
        <param>
          <type>nsga_update</type>
          <defname>nsga_update</defname>
          <defval>True</defval>
        </param>
        <param>
          <type>workers</type>
          <defname>workers</defname>
          <defval>mp.cpu_count()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="215" column="1" bodyfile="examples/harvesting.py" bodystart="216" bodyend="225"/>
        <referencedby refid="namespaceexamples_1_1harvesting_1a12ed3a155bf3c4c55dcfa7935b5d5b90" compoundref="harvesting_8py" startline="230" endline="255">examples.harvesting.optimize</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1harvesting_1ab869345e6c0b51fa393095935a395060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.harvesting.optall</definition>
        <argsstring>(max_active, multi_objective=True)</argsstring>
        <name>optall</name>
        <qualifiedname>examples.harvesting.optall</qualifiedname>
        <param>
          <type>max_active</type>
          <defname>max_active</defname>
        </param>
        <param>
          <type>multi_objective</type>
          <defname>multi_objective</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="226" column="1" bodyfile="examples/harvesting.py" bodystart="226" bodyend="229"/>
        <references refid="namespaceexamples_1_1harvesting_1a12ed3a155bf3c4c55dcfa7935b5d5b90" compoundref="harvesting_8py" startline="230" endline="255">examples.harvesting.optimize</references>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1harvesting_1a12ed3a155bf3c4c55dcfa7935b5d5b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.harvesting.optimize</definition>
        <argsstring>(bi, max_active, multi_objective=True)</argsstring>
        <name>optimize</name>
        <qualifiedname>examples.harvesting.optimize</qualifiedname>
        <param>
          <type>bi</type>
          <defname>bi</defname>
        </param>
        <param>
          <type>max_active</type>
          <defname>max_active</defname>
        </param>
        <param>
          <type>multi_objective</type>
          <defname>multi_objective</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="230" column="1" bodyfile="examples/harvesting.py" bodystart="230" bodyend="255"/>
        <references refid="namespaceexamples_1_1harvesting_1abe8c6e1997927ab3f18d66329f8e3ff9" compoundref="harvesting_8py" startline="216" endline="225">examples.harvesting.retry_modecpp</references>
        <referencedby refid="namespaceexamples_1_1harvesting_1a499ab2843b981f8e2c10eb21636a6d01" compoundref="harvesting_8py" startline="256" endline="260">examples.harvesting.main</referencedby>
        <referencedby refid="namespaceexamples_1_1harvesting_1ab869345e6c0b51fa393095935a395060" compoundref="harvesting_8py" startline="226" endline="229">examples.harvesting.optall</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceexamples_1_1harvesting_1a499ab2843b981f8e2c10eb21636a6d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>examples.harvesting.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <qualifiedname>examples.harvesting.main</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/harvesting.py" line="256" column="1" bodyfile="examples/harvesting.py" bodystart="256" bodyend="260"/>
        <references refid="namespaceexamples_1_1harvesting_1a499ab2843b981f8e2c10eb21636a6d01" compoundref="harvesting_8py" startline="256" endline="260">examples.harvesting.main</references>
        <references refid="namespaceexamples_1_1harvesting_1a12ed3a155bf3c4c55dcfa7935b5d5b90" compoundref="harvesting_8py" startline="230" endline="255">examples.harvesting.optimize</references>
        <referencedby refid="namespaceexamples_1_1harvesting_1a499ab2843b981f8e2c10eb21636a6d01" compoundref="harvesting_8py" startline="256" endline="260">examples.harvesting.main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceexamples_1_1harvesting" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>Dietmar<sp/>Wolz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>code<sp/>implements<sp/>a<sp/>variant<sp/>of<sp/>the<sp/>multi<sp/>objective<sp/>flexible<sp/>job<sp/>shop<sp/>problem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>and<sp/>is<sp/>derived<sp/>from<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/examples/jobshop.py<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>It<sp/>supports<sp/>both<sp/>a<sp/>multiobjective<sp/>and<sp/>the<sp/>single<sp/>objective<sp/>variant<sp/>utilizing<sp/>Numba<sp/>and<sp/>the<sp/>optimizers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/_fcmaescpp/modeoptimizer.cpp<sp/>(MO)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/_fcmaescpp/include/biteopt.h<sp/>(SO).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>FJSP<sp/>variant<sp/>implemented<sp/>here<sp/>is<sp/>related<sp/>to<sp/>&quot;asteroid<sp/>harvesting&quot;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>N<sp/>movable<sp/>identical<sp/>factories<sp/>are<sp/>deployed<sp/>on<sp/>N<sp/>asteroids<sp/>to<sp/>perform<sp/>operations<sp/>associated<sp/>to<sp/>m<sp/>jobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>As<sp/>in<sp/>FJSP<sp/>the<sp/>operations<sp/>need<sp/>to<sp/>be<sp/>executed<sp/>in<sp/>the<sp/>order<sp/>specified<sp/>by<sp/>the<sp/>job.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>equivalent<sp/>to<sp/>a<sp/>machine<sp/>in<sp/>FJSP<sp/>is<sp/>a<sp/>factory<sp/>deployment<sp/>to<sp/>a<sp/>specific<sp/>asteroid.<sp/>Its<sp/>resources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>determine<sp/>its<sp/>capability<sp/>to<sp/>execute<sp/>job<sp/>operations.<sp/>Therefore<sp/>-<sp/>using<sp/>this<sp/>simplified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>model<sp/>-<sp/>asteroid<sp/>harvesting<sp/>can<sp/>be<sp/>viewed<sp/>as<sp/>a<sp/>FJSP<sp/>with<sp/>two<sp/>constraints:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#<sp/>a)<sp/>Moving<sp/>factories<sp/>is<sp/>expensive,<sp/>therefore<sp/>a<sp/>factory<sp/>can<sp/>only<sp/>be<sp/>deployed<sp/>once<sp/>on<sp/>an<sp/>asteroid,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>it<sp/>is<sp/>active<sp/>for<sp/>a<sp/>single<sp/>consecutive<sp/>time<sp/>window.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>b)<sp/>The<sp/>upper<sp/>limit<sp/>of<sp/>active<sp/>machines<sp/>(factory<sp/>deployments)<sp/>is<sp/>determined<sp/>by<sp/>N,<sp/>the<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>of<sp/>factories.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>https://github.com/dietmarwo/fast-cma-es/blob/master/tutorials/JobShop.adoc<sp/>for<sp/>a<sp/>detailed<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Tested<sp/>using<sp/>https://docs.conda.io/en/main/miniconda.html<sp/>on<sp/>Linux<sp/>Mint<sp/>21.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys,<sp/>math,<sp/>time</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pathlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Path</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>fcmaes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>retry,<sp/>advretry,<sp/>mode,<sp/>modecpp,<sp/>moretry</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefcmaes_1_1optimizer" kindref="compound">fcmaes.optimizer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bite_cpp,<sp/>Cma_cpp,<sp/>De_cpp,<sp/>de_cma,<sp/>dtime,<sp/>Differential_evolution</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.optimize<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bounds</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ctypes<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ct</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mp<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Process</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numba<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>njit,<sp/>numba</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy.random<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Generator,<sp/>MT19937,<sp/>SeedSequence</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>jobshop<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>gantt,<sp/>read_fjs,<sp/>job_indices,<sp/>filter_tasks,<sp/>reorder<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>jobshop</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">logger.remove()</highlight></codeline>
<codeline lineno="50" refid="namespaceexamples_1_1harvesting_1a48e2ae48f8a81a448c4f19d7014cfdeb" refkind="member"><highlight class="normal">logger.add(sys.stdout,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">logger.add(</highlight><highlight class="stringliteral">&quot;log_{time}.txt&quot;</highlight><highlight class="normal">,<sp/>format=</highlight><highlight class="stringliteral">&quot;{time:HH:mm:ss.SS}<sp/>|<sp/>{process}<sp/>|<sp/>{level}<sp/>|<sp/>{message}&quot;</highlight><highlight class="normal">,<sp/>level=</highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespaceexamples_1_1harvesting_1a666bda29f0fbc73cf7507967dbd8e2d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">scheduling(tasks,<sp/>n_jobs,<sp/>n_machines,<sp/>max_active,<sp/>start,<sp/>duration):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>success,<sp/>start,<sp/>stop<sp/>=<sp/><ref refid="namespaceexamples_1_1harvesting_1ad7244b0bc13af9e1df5e1a29be8200a6" kindref="member">adjust_timing</ref>(start,<sp/>duration,<sp/>max_active)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>success:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;timing<sp/>error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>machine_time<sp/>=<sp/>start<sp/></highlight><highlight class="comment">#<sp/>we<sp/>initialize<sp/>with<sp/>the<sp/>machine<sp/>startup<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>job_time<sp/>=<sp/>np.zeros(n_jobs)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>fails<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>solution<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;machine&apos;</highlight><highlight class="normal">:<sp/>[],<sp/></highlight><highlight class="stringliteral">&apos;start&apos;</highlight><highlight class="normal">:<sp/>[],<sp/></highlight><highlight class="stringliteral">&apos;end&apos;</highlight><highlight class="normal">:<sp/>[],<sp/></highlight><highlight class="stringliteral">&apos;job&apos;</highlight><highlight class="normal">:<sp/>[],<sp/></highlight><highlight class="stringliteral">&apos;task&apos;</highlight><highlight class="normal">:[]}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>task<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tasks:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>job<sp/>=<sp/>int(task[0])</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine<sp/>=<sp/>int(task[2])</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>task[3]</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>max(machine_time[machine],<sp/>job_time[job])</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>start<sp/>+<sp/>time</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>end<sp/>&gt;<sp/>stop[machine]:<sp/></highlight><highlight class="comment">#<sp/>machine<sp/>already<sp/>shut<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fails<sp/>+=<sp/>1<sp/></highlight><highlight class="comment">#<sp/>failure<sp/>to<sp/>execute<sp/>task<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine_time[machine]<sp/>=<sp/>end</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>job_time[job]<sp/>=<sp/>end<sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution[</highlight><highlight class="stringliteral">&apos;machine&apos;</highlight><highlight class="normal">].append(int(machine))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution[</highlight><highlight class="stringliteral">&apos;start&apos;</highlight><highlight class="normal">].append(int(start))</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution[</highlight><highlight class="stringliteral">&apos;end&apos;</highlight><highlight class="normal">].append(int(end))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution[</highlight><highlight class="stringliteral">&apos;job&apos;</highlight><highlight class="normal">].append(int(job))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution[</highlight><highlight class="stringliteral">&apos;task&apos;</highlight><highlight class="normal">].append(int(task[1]))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;fails<sp/>=<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(fails))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>solution</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80" refid="namespaceexamples_1_1harvesting_1a372d76d3dd55bdbce747759184911516" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1harvesting_1a372d76d3dd55bdbce747759184911516" kindref="member">chart</ref>(tasks,<sp/>n_jobs,<sp/>n_machines,<sp/>max_active,<sp/>start,<sp/>duration):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>solution<sp/>=<sp/>scheduling(tasks,<sp/>n_jobs,<sp/>n_machines,<sp/>max_active,<sp/>start,<sp/>duration)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(solution)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>gantt(solution)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="namespaceexamples_1_1harvesting_1ad7244b0bc13af9e1df5e1a29be8200a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1harvesting_1ad7244b0bc13af9e1df5e1a29be8200a6" kindref="member">adjust_timing</ref>(start,<sp/>duration,<sp/>max_active):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>inf<sp/>=<sp/>10000000</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>start.copy()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>i_sort<sp/>=<sp/>np.argsort(start)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(max_active):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start[i_sort[k]]<sp/>=<sp/>0<sp/><sp/></highlight><highlight class="comment">#<sp/>first<sp/>max_active<sp/>available<sp/>from<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>start<sp/>+<sp/>duration<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>j_sort<sp/>=<sp/>np.argsort(stop)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(max_active):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop[j_sort[-1<sp/>-<sp/>k]]<sp/>=<sp/>inf<sp/><sp/></highlight><highlight class="comment">#<sp/>last<sp/>max_active<sp/>available<sp/>forever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>len(start)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>moved<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>moved:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moved<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>n<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>j<sp/>&lt;<sp/>n:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci<sp/>=<sp/>i_sort[i]<sp/><sp/></highlight><highlight class="comment">#<sp/>current<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cj<sp/>=<sp/>j_sort[j]<sp/><sp/></highlight><highlight class="comment">#<sp/>current<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start[ci]<sp/>&gt;=<sp/>stop[cj]:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>-=<sp/>1</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>active<sp/>&lt;<sp/>max_active:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>+=<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci<sp/>!=<sp/>cj):<sp/></highlight><highlight class="comment">#<sp/>move<sp/>start<sp/>after<sp/>next<sp/>machine<sp/>stops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start[i]<sp/>==<sp/>stop[ci]:<sp/></highlight><highlight class="comment">#<sp/>other<sp/>machine<sp/>already<sp/>waiting<sp/>for<sp/>stop[cj]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>start,<sp/>stop<sp/></highlight><highlight class="comment">#<sp/>otherwise<sp/>can<sp/>lead<sp/>to<sp/>an<sp/>infinite<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start[ci]<sp/>=<sp/>stop[cj]</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop[ci]<sp/>=<sp/>start[ci]<sp/>+<sp/>duration[ci]<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moved<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>moved:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_sort<sp/>=<sp/>np.argsort(start)<sp/><sp/></highlight><highlight class="comment">#<sp/>sort<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j_sort<sp/>=<sp/>np.argsort(stop)<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>start,<sp/>stop</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="130" refid="namespaceexamples_1_1harvesting_1a5e6fd72941106ed07937bf8806852011" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1harvesting_1a5e6fd72941106ed07937bf8806852011" kindref="member">exec_tasks</ref>(tasks,<sp/>n_jobs,<sp/>n_machines,<sp/>max_active,<sp/>start,<sp/>duration):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>success,<sp/>start,<sp/>stop<sp/>=<sp/><ref refid="namespaceexamples_1_1harvesting_1ad7244b0bc13af9e1df5e1a29be8200a6" kindref="member">adjust_timing</ref>(start,<sp/>duration,<sp/>max_active)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>success:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>machine_time<sp/>=<sp/>start<sp/></highlight><highlight class="comment">#<sp/>we<sp/>initialize<sp/>with<sp/>the<sp/>machine<sp/>startup<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>machine_work_time<sp/>=<sp/>np.zeros(n_machines)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>job_time<sp/>=<sp/>np.zeros(n_jobs)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>fails<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>task<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tasks:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>job<sp/>=<sp/>int(task[0])</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine<sp/>=<sp/>int(task[2])</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>task[3]</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>previous<sp/>task<sp/>needs<sp/>to<sp/>be<sp/>finished<sp/>and<sp/>machine<sp/>needs<sp/>to<sp/>be<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_time<sp/>=<sp/>max(machine_time[machine],<sp/>job_time[job])<sp/>+<sp/>time</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>end_time<sp/>&gt;<sp/>stop[machine]:<sp/></highlight><highlight class="comment">#<sp/>machine<sp/>already<sp/>shut<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fails<sp/>+=<sp/>1<sp/></highlight><highlight class="comment">#<sp/>failure<sp/>to<sp/>execute<sp/>task<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine_time[machine]<sp/>=<sp/>end_time</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>job_time[job]<sp/>=<sp/>end_time<sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine_work_time[machine]<sp/>+=<sp/>time</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>machine_time,<sp/>job_time,<sp/>machine_work_time,<sp/>fails</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">@njit(fastmath=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="namespaceexamples_1_1harvesting_1ac5401be59f58e63fbbb729287a4c3171" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1harvesting_1ac5401be59f58e63fbbb729287a4c3171" kindref="member">filtered_tasks</ref>(x,<sp/>task_data,<sp/>n_operations,<sp/>n_machines,<sp/>job_indices,<sp/>job_ids):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>operations<sp/>=<sp/>filter_tasks(x,<sp/>task_data,<sp/>n_operations,<sp/>n_machines)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>order<sp/>=<sp/>np.argsort(x[n_operations:2*n_operations])</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>tasks<sp/>=<sp/>reorder(operations,<sp/>order,<sp/>n_operations,<sp/>job_ids,<sp/>job_indices)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tasks</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159" refid="classexamples_1_1harvesting_1_1fitness" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1harvesting_1_1fitness" kindref="compound">fitness</ref>:<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classexamples_1_1harvesting_1_1fitness_1aff9639a19d154ee6ceeedd5f73acf9bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1harvesting_1_1fitness_1aff9639a19d154ee6ceeedd5f73acf9bf" kindref="member">__init__</ref>(self,<sp/>task_data,<sp/>bounds,<sp/>n_jobs,<sp/>n_operations,<sp/>n_machines,<sp/>max_active,<sp/>name):</highlight></codeline>
<codeline lineno="162" refid="classexamples_1_1harvesting_1_1fitness_1acdccca1f5f064cff1ed3b227f6ee6083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1acdccca1f5f064cff1ed3b227f6ee6083" kindref="member">evals</ref><sp/>=<sp/>mp.RawValue(ct.c_long,<sp/>0)<sp/><sp/></highlight><highlight class="comment">#<sp/>writable<sp/>across<sp/>python<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classexamples_1_1harvesting_1_1fitness_1abef7ef0eef0226fbf7c2b05dd707e4be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1abef7ef0eef0226fbf7c2b05dd707e4be" kindref="member">best_y</ref><sp/>=<sp/>mp.RawValue(ct.c_double,<sp/>np.inf)<sp/></highlight><highlight class="comment">#<sp/>writable<sp/>across<sp/>python<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classexamples_1_1harvesting_1_1fitness_1a82bfcf17e6bdebbb45766a25fa07c7ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a82bfcf17e6bdebbb45766a25fa07c7ee" kindref="member">t0</ref><sp/>=<sp/>time.perf_counter()</highlight></codeline>
<codeline lineno="165" refid="classexamples_1_1harvesting_1_1fitness_1ab83d77fabcdf2ad945a09d15415441a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ab83d77fabcdf2ad945a09d15415441a9" kindref="member">task_data</ref><sp/>=<sp/>task_data<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166" refid="classexamples_1_1harvesting_1_1fitness_1a8307767d6fcf38a545057515e9e2081d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a8307767d6fcf38a545057515e9e2081d" kindref="member">n_jobs</ref><sp/>=<sp/>n_jobs</highlight></codeline>
<codeline lineno="167" refid="classexamples_1_1harvesting_1_1fitness_1aa2e6edce71626a64d0f92cf7f1fe0978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1aa2e6edce71626a64d0f92cf7f1fe0978" kindref="member">n_operations</ref><sp/>=<sp/>n_operations</highlight></codeline>
<codeline lineno="168" refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref><sp/>=<sp/>n_machines<sp/></highlight></codeline>
<codeline lineno="169" refid="classexamples_1_1harvesting_1_1fitness_1a93ba55f2cf507f0c20f5d93241873d80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a93ba55f2cf507f0c20f5d93241873d80" kindref="member">max_active</ref><sp/>=<sp/>max_active<sp/></highlight></codeline>
<codeline lineno="170" refid="classexamples_1_1harvesting_1_1fitness_1a7c5f7176944c928ea0b8a667e20c0934" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a7c5f7176944c928ea0b8a667e20c0934" kindref="member">bounds</ref><sp/>=<sp/>bounds</highlight></codeline>
<codeline lineno="171" refid="classexamples_1_1harvesting_1_1fitness_1a5df1d237e656b28b147deab852aa5617" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a5df1d237e656b28b147deab852aa5617" kindref="member">name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="172" refid="classexamples_1_1harvesting_1_1fitness_1afae97d0f6a70547ee1f5fda0e3b1f608" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1afae97d0f6a70547ee1f5fda0e3b1f608" kindref="member">nobj</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="173" refid="classexamples_1_1harvesting_1_1fitness_1a87d8c30285fadcd3387ea1b0f5194db4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a87d8c30285fadcd3387ea1b0f5194db4" kindref="member">ncon</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="174" refid="classexamples_1_1harvesting_1_1fitness_1ad62323e2fef3b563c6062a4987ce6d14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad62323e2fef3b563c6062a4987ce6d14" kindref="member">weights</ref><sp/>=<sp/>np.array([1.0,<sp/>0.02,<sp/>0.001,<sp/>1000])<sp/></highlight><highlight class="comment">#<sp/>only<sp/>used<sp/>for<sp/>single<sp/>objective<sp/>optimization<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classexamples_1_1harvesting_1_1fitness_1a1576b605b6dd4a4f3d4fff693b8933a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1aa724092b904a41081b0749a0fb0efffb" kindref="member">job_indices</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a1576b605b6dd4a4f3d4fff693b8933a9" kindref="member">job_ids</ref><sp/>=<sp/><ref refid="classexamples_1_1harvesting_1_1fitness_1aa724092b904a41081b0749a0fb0efffb" kindref="member">job_indices</ref>(task_data)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classexamples_1_1harvesting_1_1fitness_1acb6ce7a10ef6b8a08952a7cf7b94b4f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1harvesting_1_1fitness_1acb6ce7a10ef6b8a08952a7cf7b94b4f6" kindref="member">chart</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_time<sp/>=<sp/>x[-1]</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>x[-self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref>-1:-1]*max_time</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration<sp/>=<sp/>x[-2*self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref>-1:-self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref>-1]*max_time</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tasks<sp/>=<sp/><ref refid="namespaceexamples_1_1harvesting_1ac5401be59f58e63fbbb729287a4c3171" kindref="member">filtered_tasks</ref>(x,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ab83d77fabcdf2ad945a09d15415441a9" kindref="member">task_data</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1aa2e6edce71626a64d0f92cf7f1fe0978" kindref="member">n_operations</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref>,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1aa724092b904a41081b0749a0fb0efffb" kindref="member">job_indices</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a1576b605b6dd4a4f3d4fff693b8933a9" kindref="member">job_ids</ref>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classexamples_1_1harvesting_1_1fitness_1acb6ce7a10ef6b8a08952a7cf7b94b4f6" kindref="member">chart</ref>(tasks,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a8307767d6fcf38a545057515e9e2081d" kindref="member">n_jobs</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a93ba55f2cf507f0c20f5d93241873d80" kindref="member">max_active</ref>,<sp/>start,<sp/>duration)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185" refid="classexamples_1_1harvesting_1_1fitness_1ac9d51d3f1b4b38e405e5cce9fdd48b7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1harvesting_1_1fitness_1ac9d51d3f1b4b38e405e5cce9fdd48b7d" kindref="member">fun</ref>(self,<sp/>x):<sp/></highlight><highlight class="comment">#<sp/>multi<sp/>objective<sp/>function<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tasks<sp/>=<sp/><ref refid="namespaceexamples_1_1harvesting_1ac5401be59f58e63fbbb729287a4c3171" kindref="member">filtered_tasks</ref>(x,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ab83d77fabcdf2ad945a09d15415441a9" kindref="member">task_data</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1aa2e6edce71626a64d0f92cf7f1fe0978" kindref="member">n_operations</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1aa724092b904a41081b0749a0fb0efffb" kindref="member">job_indices</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a1576b605b6dd4a4f3d4fff693b8933a9" kindref="member">job_ids</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_time<sp/>=<sp/>x[-1]</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>x[-self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref>-1:-1]*max_time</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration<sp/>=<sp/>x[-2*self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref>-1:-self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref>-1]*max_time</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine_time,<sp/>job_time,<sp/>machine_work_time,<sp/>fails<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1harvesting_1a5e6fd72941106ed07937bf8806852011" kindref="member">exec_tasks</ref>(tasks,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a8307767d6fcf38a545057515e9e2081d" kindref="member">n_jobs</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad69eef392c3e8bfa54df715ddc71a097" kindref="member">n_machines</ref>,<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a93ba55f2cf507f0c20f5d93241873d80" kindref="member">max_active</ref>,<sp/>start,<sp/>duration)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>fails<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">#<sp/>timing<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array([0,<sp/>0,<sp/>0,<sp/>10000])</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span<sp/>=<sp/>np.amax(machine_time)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>work<sp/>=<sp/>np.sum(machine_work_time)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wmax<sp/>=<sp/>np.amax(machine_work_time)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>np.array([span,<sp/>work,<sp/>wmax,<sp/>fails])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>sum(self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad62323e2fef3b563c6062a4987ce6d14" kindref="member">weights</ref>*ys)<sp/></highlight><highlight class="comment">#<sp/>weighted<sp/>sum<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1acdccca1f5f064cff1ed3b227f6ee6083" kindref="member">evals</ref>.value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/>&lt;<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1abef7ef0eef0226fbf7c2b05dd707e4be" kindref="member">best_y</ref>.value:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1abef7ef0eef0226fbf7c2b05dd707e4be" kindref="member">best_y</ref>.value<sp/>=<sp/>y<sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;evals<sp/>=<sp/>{0}:<sp/>time<sp/>=<sp/>{1:.1f}<sp/>t<sp/>=<sp/>{2:.0f}<sp/>f<sp/>=<sp/>{3:.0f}<sp/>y<sp/>=<sp/>{4:.2f}<sp/>s<sp/>=<sp/>{5:.2f}<sp/>w<sp/>=<sp/>{6:.0f}<sp/>m<sp/>=<sp/>{7:.0f}<sp/>m=<sp/>{8:s}<sp/>j=<sp/>{9:s}<sp/>w=<sp/>{10:s}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="namespaceexamples_1_1harvesting_1a48e2ae48f8a81a448c4f19d7014cfdeb" kindref="member">format</ref>(self.<ref refid="classexamples_1_1harvesting_1_1fitness_1acdccca1f5f064cff1ed3b227f6ee6083" kindref="member">evals</ref>.value,<sp/>dtime(self.<ref refid="classexamples_1_1harvesting_1_1fitness_1a82bfcf17e6bdebbb45766a25fa07c7ee" kindref="member">t0</ref>),<sp/>max_time,<sp/>fails,<sp/>y,<sp/>span,<sp/>work,<sp/>wmax,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(si)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>si<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>machine_time]),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(oi)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>oi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>job_time]),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str([int(oi)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>oi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>machine_work_time]),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ys<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classexamples_1_1harvesting_1_1fitness_1add29e0fd221efd5ffa3ce2f0933b633f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classexamples_1_1harvesting_1_1fitness_1add29e0fd221efd5ffa3ce2f0933b633f" kindref="member">__call__</ref>(self,<sp/>x):<sp/><sp/></highlight><highlight class="comment">#<sp/>single<sp/>objective<sp/>function<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys<sp/>=<sp/>self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ac9d51d3f1b4b38e405e5cce9fdd48b7d" kindref="member">fun</ref>(x)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum(self.<ref refid="classexamples_1_1harvesting_1_1fitness_1ad62323e2fef3b563c6062a4987ce6d14" kindref="member">weights</ref>*ys)<sp/></highlight><highlight class="comment">#<sp/>weighted<sp/>sum<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="namespaceexamples_1_1harvesting_1abe8c6e1997927ab3f18d66329f8e3ff9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1harvesting_1abe8c6e1997927ab3f18d66329f8e3ff9" kindref="member">retry_modecpp</ref>(fit,<sp/>retry_num<sp/>=<sp/>32,<sp/>popsize<sp/>=<sp/>48,<sp/>max_eval<sp/>=<sp/>500000,<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsga_update<sp/>=<sp/>True,<sp/>workers=mp.cpu_count()):</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>xf,<sp/>yf<sp/>=<sp/>modecpp.retry(fit.fun,<sp/>fit.nobj,<sp/>fit.ncon,<sp/>fit.bounds,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>retry_num,<sp/>popsize,<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_evaluations<sp/>=<sp/>960000,<sp/>nsga_update<sp/>=<sp/>nsga_update,<sp/>workers=workers)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>[];<sp/>ys<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(yf)):</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>yf[i][-1]<sp/>==<sp/>0:<sp/></highlight><highlight class="comment">#<sp/>filter<sp/>valid<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs.append(xf[i])</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ys.append(yf[i][:fit.nobj])</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array(xs),<sp/>np.array(ys)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226" refid="namespaceexamples_1_1harvesting_1ab869345e6c0b51fa393095935a395060" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1harvesting_1ab869345e6c0b51fa393095935a395060" kindref="member">optall</ref>(max_active,<sp/>multi_objective<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,16):</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1harvesting_1a12ed3a155bf3c4c55dcfa7935b5d5b90" kindref="member">optimize</ref>(i,<sp/>max_active,<sp/>multi_objective)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230" refid="namespaceexamples_1_1harvesting_1a12ed3a155bf3c4c55dcfa7935b5d5b90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1harvesting_1a12ed3a155bf3c4c55dcfa7935b5d5b90" kindref="member">optimize</ref>(bi,<sp/>max_active,<sp/>multi_objective<sp/>=<sp/>True):<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BrandimarteMk&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(bi)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>tasks,<sp/>n_jobs,<sp/>n_machines,<sp/>n_operations,<sp/>sum_time<sp/>=<sp/>read_fjs(</highlight><highlight class="stringliteral">&quot;data/1_Brandimarte/&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.fjs&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>2*n_operations<sp/>+<sp/>2*n_machines<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>lower_bound<sp/>=<sp/>np.zeros(dim)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>lower_bound[:]<sp/>=<sp/>0.0000001<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_bound<sp/>=<sp/>np.zeros(dim)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_bound[:]<sp/>=<sp/>0.9999999</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_bound[-1]<sp/>=<sp/>sum_time</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>Bounds(lower_bound,<sp/>upper_bound)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>fit<sp/>=<sp/><ref refid="classexamples_1_1harvesting_1_1fitness" kindref="compound">fitness</ref>(tasks,<sp/>bounds,<sp/>n_jobs,<sp/>n_operations,<sp/>n_machines,<sp/>max_active,<sp/>name)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>multi_objective:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs,<sp/>front<sp/>=<sp/><ref refid="namespaceexamples_1_1harvesting_1abe8c6e1997927ab3f18d66329f8e3ff9" kindref="member">retry_modecpp</ref>(fit,<sp/>retry_num<sp/>=<sp/>32,<sp/>popsize<sp/>=<sp/>48,<sp/>max_eval<sp/>=<sp/>500000,<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsga_update<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>workers=16)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>modecpp.retry(num_retries=32,<sp/>popsize<sp/>=<sp/>48,<sp/>max_evals<sp/>=<sp/>960000,<sp/>nsga_update<sp/>=<sp/>True,<sp/>workers=16&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(str([tuple(y)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>front]))</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store<sp/>=<sp/><ref refid="classfcmaes_1_1retry_1_1_store" kindref="compound">retry.Store</ref>(fit,<sp/>bounds)<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.info(name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Bite_cpp(960000,M=1).minimize,<sp/>num_retries=256)&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry.retry(store,<sp/><ref refid="classfcmaes_1_1optimizer_1_1_bite__cpp" kindref="compound">Bite_cpp</ref>(960000,M=1).minimize,<sp/>num_retries=256)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fit,<sp/>xs</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="namespaceexamples_1_1harvesting_1a499ab2843b981f8e2c10eb21636a6d01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceexamples_1_1harvesting_1a499ab2843b981f8e2c10eb21636a6d01" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#optall(max_active<sp/>=<sp/>4,<sp/>multi_objective<sp/>=<sp/>True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>fit,<sp/>xs<sp/>=<sp/><ref refid="namespaceexamples_1_1harvesting_1a12ed3a155bf3c4c55dcfa7935b5d5b90" kindref="member">optimize</ref>(1,<sp/>max_active<sp/>=<sp/>4,<sp/>multi_objective<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.chart(xs[0])<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceexamples_1_1harvesting_1a499ab2843b981f8e2c10eb21636a6d01" kindref="member">main</ref>()</highlight></codeline>
    </programlisting>
    <location file="examples/harvesting.py"/>
  </compounddef>
</doxygen>
